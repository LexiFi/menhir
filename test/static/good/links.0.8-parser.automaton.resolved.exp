State 0:
file' -> . file [ # ]
-- On preamble shift to state 1
-- On file shift to state 1087
-- On VARIABLE reduce production preamble ->
-- On VAR reduce production preamble ->
-- On UPDATE reduce production preamble ->
-- On UINTEGER reduce production preamble ->
-- On UFLOAT reduce production preamble ->
-- On TYPENAME reduce production preamble ->
-- On TRY reduce production preamble ->
-- On TRUE reduce production preamble ->
-- On TABLE reduce production preamble ->
-- On SWITCH reduce production preamble ->
-- On STRING reduce production preamble ->
-- On SPAWNWAIT reduce production preamble ->
-- On SPAWNCLIENT reduce production preamble ->
-- On SPAWNAT reduce production preamble ->
-- On SPAWNANGELAT reduce production preamble ->
-- On SPAWNANGEL reduce production preamble ->
-- On SPAWN reduce production preamble ->
-- On SIG reduce production preamble ->
-- On SHALLOWHANDLER reduce production preamble ->
-- On SHALLOWHANDLE reduce production preamble ->
-- On SELECT reduce production preamble ->
-- On RECEIVE reduce production preamble ->
-- On RAISE reduce production preamble ->
-- On QUERY reduce production preamble ->
-- On PREFIXOP reduce production preamble ->
-- On PREFIX reduce production preamble ->
-- On POSTFIX reduce production preamble ->
-- On PAGE reduce production preamble ->
-- On OPEN reduce production preamble ->
-- On OP reduce production preamble ->
-- On OFFER reduce production preamble ->
-- On MODULE reduce production preamble ->
-- On MINUSDOT reduce production preamble ->
-- On MINUS reduce production preamble ->
-- On LXML reduce production preamble ->
-- On LPAREN reduce production preamble ->
-- On LINFUN reduce production preamble ->
-- On LENSSELECT reduce production preamble ->
-- On LENSPUT reduce production preamble ->
-- On LENSJOIN reduce production preamble ->
-- On LENSGET reduce production preamble ->
-- On LENSDROP reduce production preamble ->
-- On LENS reduce production preamble ->
-- On LEFTTRIANGLE reduce production preamble ->
-- On LBRACKET reduce production preamble ->
-- On LBRACE reduce production preamble ->
-- On INSERT reduce production preamble ->
-- On INFIXR reduce production preamble ->
-- On INFIXL reduce production preamble ->
-- On INFIX reduce production preamble ->
-- On IF reduce production preamble ->
-- On HANDLER reduce production preamble ->
-- On HANDLE reduce production preamble ->
-- On FUN reduce production preamble ->
-- On FORMLET reduce production preamble ->
-- On FOR reduce production preamble ->
-- On FALSE reduce production preamble ->
-- On ESCAPE reduce production preamble ->
-- On DOOP reduce production preamble ->
-- On DELETE reduce production preamble ->
-- On DATABASE reduce production preamble ->
-- On CONSTRUCTOR reduce production preamble ->
-- On CHAR reduce production preamble ->
-- On ALIEN reduce production preamble ->

State 1:
file -> preamble . declarations exp END [ # ]
file -> preamble . exp END [ # ]
file -> preamble . declarations END [ # ]
-- On VARIABLE shift to state 2
-- On VAR shift to state 3
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TYPENAME shift to state 339
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SIG shift to state 347
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PREFIX shift to state 436
-- On POSTFIX shift to state 437
-- On PAGE shift to state 397
-- On OPEN shift to state 429
-- On OP shift to state 438
-- On OFFER shift to state 400
-- On MODULE shift to state 432
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 1079
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On INFIXR shift to state 458
-- On INFIXL shift to state 459
-- On INFIX shift to state 460
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 1080
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On ALIEN shift to state 467
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typedecl shift to state 483
-- On typed_handler_binding shift to state 485
-- On typed_expression shift to state 614
-- On tlvarbinding shift to state 486
-- On tlfunbinding shift to state 488
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On signature shift to state 489
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On nofun_declaration shift to state 509
-- On logical_expression shift to state 621
-- On links_open shift to state 510
-- On links_module shift to state 511
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 894
-- On fun_declaration shift to state 512
-- On formlet_expression shift to state 746
-- On fixity shift to state 513
-- On exp shift to state 1081
-- On escape_expression shift to state 748
-- On declarations shift to state 1083
-- On declaration shift to state 522
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611
-- On alien_block shift to state 521

State 2:
atomic_expression -> VARIABLE . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production atomic_expression -> VARIABLE
-- On VBAR reduce production atomic_expression -> VARIABLE
-- On VARIABLE reduce production atomic_expression -> VARIABLE
-- On VALUES reduce production atomic_expression -> VARIABLE
-- On UINTEGER reduce production atomic_expression -> VARIABLE
-- On UFLOAT reduce production atomic_expression -> VARIABLE
-- On TRUE reduce production atomic_expression -> VARIABLE
-- On TABLEKEYS reduce production atomic_expression -> VARIABLE
-- On STRING reduce production atomic_expression -> VARIABLE
-- On SEMICOLON reduce production atomic_expression -> VARIABLE
-- On RPAREN reduce production atomic_expression -> VARIABLE
-- On RETURNING reduce production atomic_expression -> VARIABLE
-- On RECEIVE reduce production atomic_expression -> VARIABLE
-- On RBRACKET reduce production atomic_expression -> VARIABLE
-- On RBRACE reduce production atomic_expression -> VARIABLE
-- On RARROW reduce production atomic_expression -> VARIABLE
-- On POSTFIXOP reduce production atomic_expression -> VARIABLE
-- On OTHERWISE reduce production atomic_expression -> VARIABLE
-- On ON reduce production atomic_expression -> VARIABLE
-- On MINUSDOT reduce production atomic_expression -> VARIABLE
-- On MINUS reduce production atomic_expression -> VARIABLE
-- On LPAREN reduce production atomic_expression -> VARIABLE
-- On INFIXR9 reduce production atomic_expression -> VARIABLE
-- On INFIXR8 reduce production atomic_expression -> VARIABLE
-- On INFIXR7 reduce production atomic_expression -> VARIABLE
-- On INFIXR6 reduce production atomic_expression -> VARIABLE
-- On INFIXR5 reduce production atomic_expression -> VARIABLE
-- On INFIXR4 reduce production atomic_expression -> VARIABLE
-- On INFIXR3 reduce production atomic_expression -> VARIABLE
-- On INFIXR2 reduce production atomic_expression -> VARIABLE
-- On INFIXR1 reduce production atomic_expression -> VARIABLE
-- On INFIXR0 reduce production atomic_expression -> VARIABLE
-- On INFIXL9 reduce production atomic_expression -> VARIABLE
-- On INFIXL8 reduce production atomic_expression -> VARIABLE
-- On INFIXL7 reduce production atomic_expression -> VARIABLE
-- On INFIXL6 reduce production atomic_expression -> VARIABLE
-- On INFIXL5 reduce production atomic_expression -> VARIABLE
-- On INFIXL4 reduce production atomic_expression -> VARIABLE
-- On INFIXL3 reduce production atomic_expression -> VARIABLE
-- On INFIXL2 reduce production atomic_expression -> VARIABLE
-- On INFIXL1 reduce production atomic_expression -> VARIABLE
-- On INFIXL0 reduce production atomic_expression -> VARIABLE
-- On INFIX9 reduce production atomic_expression -> VARIABLE
-- On INFIX8 reduce production atomic_expression -> VARIABLE
-- On INFIX7 reduce production atomic_expression -> VARIABLE
-- On INFIX6 reduce production atomic_expression -> VARIABLE
-- On INFIX5 reduce production atomic_expression -> VARIABLE
-- On INFIX4 reduce production atomic_expression -> VARIABLE
-- On INFIX3 reduce production atomic_expression -> VARIABLE
-- On INFIX2 reduce production atomic_expression -> VARIABLE
-- On INFIX1 reduce production atomic_expression -> VARIABLE
-- On INFIX0 reduce production atomic_expression -> VARIABLE
-- On FROM reduce production atomic_expression -> VARIABLE
-- On FATRARROW reduce production atomic_expression -> VARIABLE
-- On FALSE reduce production atomic_expression -> VARIABLE
-- On EQUALSTILDE reduce production atomic_expression -> VARIABLE
-- On END reduce production atomic_expression -> VARIABLE
-- On ELSE reduce production atomic_expression -> VARIABLE
-- On DOTDOT reduce production atomic_expression -> VARIABLE
-- On DOT reduce production atomic_expression -> VARIABLE
-- On DELETE_LEFT reduce production atomic_expression -> VARIABLE
-- On DELETE reduce production atomic_expression -> VARIABLE
-- On DEFAULT reduce production atomic_expression -> VARIABLE
-- On CONSTRUCTOR reduce production atomic_expression -> VARIABLE
-- On COMMA reduce production atomic_expression -> VARIABLE
-- On COLONCOLON reduce production atomic_expression -> VARIABLE
-- On COLON reduce production atomic_expression -> VARIABLE
-- On CHAR reduce production atomic_expression -> VARIABLE
-- On CASE reduce production atomic_expression -> VARIABLE
-- On BY reduce production atomic_expression -> VARIABLE
-- On BARRBRACE reduce production atomic_expression -> VARIABLE
-- On BARBAR reduce production atomic_expression -> VARIABLE
-- On BANG reduce production atomic_expression -> VARIABLE
-- On AS reduce production atomic_expression -> VARIABLE
-- On AMPAMP reduce production atomic_expression -> VARIABLE

State 3:
tlvarbinding -> VAR . var perhaps_location EQ exp [ SEMICOLON ]
-- On VARIABLE shift to state 4
-- On var shift to state 5

State 4:
var -> VARIABLE . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LPAREN LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLON CLIENT ]
-- On VBAR reduce production var -> VARIABLE
-- On SERVER reduce production var -> VARIABLE
-- On RPAREN reduce production var -> VARIABLE
-- On RBRACKET reduce production var -> VARIABLE
-- On RBRACE reduce production var -> VARIABLE
-- On RARROW reduce production var -> VARIABLE
-- On POSTFIXOP reduce production var -> VARIABLE
-- On NATIVE reduce production var -> VARIABLE
-- On LPAREN reduce production var -> VARIABLE
-- On LLARROW reduce production var -> VARIABLE
-- On LBRACE reduce production var -> VARIABLE
-- On LARROW reduce production var -> VARIABLE
-- On INFIXR9 reduce production var -> VARIABLE
-- On INFIXR8 reduce production var -> VARIABLE
-- On INFIXR7 reduce production var -> VARIABLE
-- On INFIXR6 reduce production var -> VARIABLE
-- On INFIXR5 reduce production var -> VARIABLE
-- On INFIXR4 reduce production var -> VARIABLE
-- On INFIXR3 reduce production var -> VARIABLE
-- On INFIXR2 reduce production var -> VARIABLE
-- On INFIXR1 reduce production var -> VARIABLE
-- On INFIXR0 reduce production var -> VARIABLE
-- On INFIXL9 reduce production var -> VARIABLE
-- On INFIXL8 reduce production var -> VARIABLE
-- On INFIXL7 reduce production var -> VARIABLE
-- On INFIXL6 reduce production var -> VARIABLE
-- On INFIXL5 reduce production var -> VARIABLE
-- On INFIXL4 reduce production var -> VARIABLE
-- On INFIXL3 reduce production var -> VARIABLE
-- On INFIXL2 reduce production var -> VARIABLE
-- On INFIXL1 reduce production var -> VARIABLE
-- On INFIXL0 reduce production var -> VARIABLE
-- On INFIX9 reduce production var -> VARIABLE
-- On INFIX8 reduce production var -> VARIABLE
-- On INFIX7 reduce production var -> VARIABLE
-- On INFIX6 reduce production var -> VARIABLE
-- On INFIX5 reduce production var -> VARIABLE
-- On INFIX4 reduce production var -> VARIABLE
-- On INFIX3 reduce production var -> VARIABLE
-- On INFIX2 reduce production var -> VARIABLE
-- On INFIX1 reduce production var -> VARIABLE
-- On INFIX0 reduce production var -> VARIABLE
-- On IN reduce production var -> VARIABLE
-- On EQ reduce production var -> VARIABLE
-- On COMMA reduce production var -> VARIABLE
-- On COLON reduce production var -> VARIABLE
-- On CLIENT reduce production var -> VARIABLE

State 5:
tlvarbinding -> VAR var . perhaps_location EQ exp [ SEMICOLON ]
-- On SERVER shift to state 6
-- On NATIVE shift to state 7
-- On CLIENT shift to state 8
-- On perhaps_location shift to state 9
-- On EQ reduce production perhaps_location ->

State 6:
perhaps_location -> SERVER . [ LBRACE EQ ]
-- On LBRACE reduce production perhaps_location -> SERVER
-- On EQ reduce production perhaps_location -> SERVER

State 7:
perhaps_location -> NATIVE . [ LBRACE EQ ]
-- On LBRACE reduce production perhaps_location -> NATIVE
-- On EQ reduce production perhaps_location -> NATIVE

State 8:
perhaps_location -> CLIENT . [ LBRACE EQ ]
-- On LBRACE reduce production perhaps_location -> CLIENT
-- On EQ reduce production perhaps_location -> CLIENT

State 9:
tlvarbinding -> VAR var perhaps_location . EQ exp [ SEMICOLON ]
-- On EQ shift to state 10

State 10:
tlvarbinding -> VAR var perhaps_location EQ . exp [ SEMICOLON ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 1078
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 11:
db_expression -> UPDATE . LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LPAREN shift to state 12

State 12:
db_expression -> UPDATE LPAREN . table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On table_generator shift to state 306
-- On primary_pattern shift to state 275
-- On pattern shift to state 587
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 13:
primary_pattern -> VARIABLE . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production primary_pattern -> VARIABLE
-- On SERVER reduce production primary_pattern -> VARIABLE
-- On RPAREN reduce production primary_pattern -> VARIABLE
-- On RBRACKET reduce production primary_pattern -> VARIABLE
-- On RBRACE reduce production primary_pattern -> VARIABLE
-- On RARROW reduce production primary_pattern -> VARIABLE
-- On POSTFIXOP reduce production primary_pattern -> VARIABLE
-- On NATIVE reduce production primary_pattern -> VARIABLE
-- On LLARROW reduce production primary_pattern -> VARIABLE
-- On LBRACE reduce production primary_pattern -> VARIABLE
-- On LARROW reduce production primary_pattern -> VARIABLE
-- On INFIXR9 reduce production primary_pattern -> VARIABLE
-- On INFIXR8 reduce production primary_pattern -> VARIABLE
-- On INFIXR7 reduce production primary_pattern -> VARIABLE
-- On INFIXR6 reduce production primary_pattern -> VARIABLE
-- On INFIXR5 reduce production primary_pattern -> VARIABLE
-- On INFIXR4 reduce production primary_pattern -> VARIABLE
-- On INFIXR3 reduce production primary_pattern -> VARIABLE
-- On INFIXR2 reduce production primary_pattern -> VARIABLE
-- On INFIXR1 reduce production primary_pattern -> VARIABLE
-- On INFIXR0 reduce production primary_pattern -> VARIABLE
-- On INFIXL9 reduce production primary_pattern -> VARIABLE
-- On INFIXL8 reduce production primary_pattern -> VARIABLE
-- On INFIXL7 reduce production primary_pattern -> VARIABLE
-- On INFIXL6 reduce production primary_pattern -> VARIABLE
-- On INFIXL5 reduce production primary_pattern -> VARIABLE
-- On INFIXL4 reduce production primary_pattern -> VARIABLE
-- On INFIXL3 reduce production primary_pattern -> VARIABLE
-- On INFIXL2 reduce production primary_pattern -> VARIABLE
-- On INFIXL1 reduce production primary_pattern -> VARIABLE
-- On INFIXL0 reduce production primary_pattern -> VARIABLE
-- On INFIX9 reduce production primary_pattern -> VARIABLE
-- On INFIX8 reduce production primary_pattern -> VARIABLE
-- On INFIX7 reduce production primary_pattern -> VARIABLE
-- On INFIX6 reduce production primary_pattern -> VARIABLE
-- On INFIX5 reduce production primary_pattern -> VARIABLE
-- On INFIX4 reduce production primary_pattern -> VARIABLE
-- On INFIX3 reduce production primary_pattern -> VARIABLE
-- On INFIX2 reduce production primary_pattern -> VARIABLE
-- On INFIX1 reduce production primary_pattern -> VARIABLE
-- On INFIX0 reduce production primary_pattern -> VARIABLE
-- On IN reduce production primary_pattern -> VARIABLE
-- On EQ reduce production primary_pattern -> VARIABLE
-- On COMMA reduce production primary_pattern -> VARIABLE
-- On COLONCOLON reduce production primary_pattern -> VARIABLE
-- On COLON reduce production primary_pattern -> VARIABLE
-- On CLIENT reduce production primary_pattern -> VARIABLE
-- On AS reduce production primary_pattern -> VARIABLE

State 14:
primary_pattern -> UNDERSCORE . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production primary_pattern -> UNDERSCORE
-- On SERVER reduce production primary_pattern -> UNDERSCORE
-- On RPAREN reduce production primary_pattern -> UNDERSCORE
-- On RBRACKET reduce production primary_pattern -> UNDERSCORE
-- On RBRACE reduce production primary_pattern -> UNDERSCORE
-- On RARROW reduce production primary_pattern -> UNDERSCORE
-- On POSTFIXOP reduce production primary_pattern -> UNDERSCORE
-- On NATIVE reduce production primary_pattern -> UNDERSCORE
-- On LLARROW reduce production primary_pattern -> UNDERSCORE
-- On LBRACE reduce production primary_pattern -> UNDERSCORE
-- On LARROW reduce production primary_pattern -> UNDERSCORE
-- On INFIXR9 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR8 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR7 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR6 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR5 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR4 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR3 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR2 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR1 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR0 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL9 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL8 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL7 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL6 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL5 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL4 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL3 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL2 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL1 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL0 reduce production primary_pattern -> UNDERSCORE
-- On INFIX9 reduce production primary_pattern -> UNDERSCORE
-- On INFIX8 reduce production primary_pattern -> UNDERSCORE
-- On INFIX7 reduce production primary_pattern -> UNDERSCORE
-- On INFIX6 reduce production primary_pattern -> UNDERSCORE
-- On INFIX5 reduce production primary_pattern -> UNDERSCORE
-- On INFIX4 reduce production primary_pattern -> UNDERSCORE
-- On INFIX3 reduce production primary_pattern -> UNDERSCORE
-- On INFIX2 reduce production primary_pattern -> UNDERSCORE
-- On INFIX1 reduce production primary_pattern -> UNDERSCORE
-- On INFIX0 reduce production primary_pattern -> UNDERSCORE
-- On IN reduce production primary_pattern -> UNDERSCORE
-- On EQ reduce production primary_pattern -> UNDERSCORE
-- On COMMA reduce production primary_pattern -> UNDERSCORE
-- On COLONCOLON reduce production primary_pattern -> UNDERSCORE
-- On COLON reduce production primary_pattern -> UNDERSCORE
-- On CLIENT reduce production primary_pattern -> UNDERSCORE
-- On AS reduce production primary_pattern -> UNDERSCORE

State 15:
constant -> UINTEGER . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SERVER SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON NATIVE MINUSDOT MINUS LPAREN LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN FROM FATRARROW FALSE EQUALSTILDE EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CLIENT CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production constant -> UINTEGER
-- On VBAR reduce production constant -> UINTEGER
-- On VARIABLE reduce production constant -> UINTEGER
-- On VALUES reduce production constant -> UINTEGER
-- On UINTEGER reduce production constant -> UINTEGER
-- On UFLOAT reduce production constant -> UINTEGER
-- On TRUE reduce production constant -> UINTEGER
-- On TABLEKEYS reduce production constant -> UINTEGER
-- On STRING reduce production constant -> UINTEGER
-- On SERVER reduce production constant -> UINTEGER
-- On SEMICOLON reduce production constant -> UINTEGER
-- On RPAREN reduce production constant -> UINTEGER
-- On RETURNING reduce production constant -> UINTEGER
-- On RECEIVE reduce production constant -> UINTEGER
-- On RBRACKET reduce production constant -> UINTEGER
-- On RBRACE reduce production constant -> UINTEGER
-- On RARROW reduce production constant -> UINTEGER
-- On POSTFIXOP reduce production constant -> UINTEGER
-- On OTHERWISE reduce production constant -> UINTEGER
-- On ON reduce production constant -> UINTEGER
-- On NATIVE reduce production constant -> UINTEGER
-- On MINUSDOT reduce production constant -> UINTEGER
-- On MINUS reduce production constant -> UINTEGER
-- On LPAREN reduce production constant -> UINTEGER
-- On LLARROW reduce production constant -> UINTEGER
-- On LBRACE reduce production constant -> UINTEGER
-- On LARROW reduce production constant -> UINTEGER
-- On INFIXR9 reduce production constant -> UINTEGER
-- On INFIXR8 reduce production constant -> UINTEGER
-- On INFIXR7 reduce production constant -> UINTEGER
-- On INFIXR6 reduce production constant -> UINTEGER
-- On INFIXR5 reduce production constant -> UINTEGER
-- On INFIXR4 reduce production constant -> UINTEGER
-- On INFIXR3 reduce production constant -> UINTEGER
-- On INFIXR2 reduce production constant -> UINTEGER
-- On INFIXR1 reduce production constant -> UINTEGER
-- On INFIXR0 reduce production constant -> UINTEGER
-- On INFIXL9 reduce production constant -> UINTEGER
-- On INFIXL8 reduce production constant -> UINTEGER
-- On INFIXL7 reduce production constant -> UINTEGER
-- On INFIXL6 reduce production constant -> UINTEGER
-- On INFIXL5 reduce production constant -> UINTEGER
-- On INFIXL4 reduce production constant -> UINTEGER
-- On INFIXL3 reduce production constant -> UINTEGER
-- On INFIXL2 reduce production constant -> UINTEGER
-- On INFIXL1 reduce production constant -> UINTEGER
-- On INFIXL0 reduce production constant -> UINTEGER
-- On INFIX9 reduce production constant -> UINTEGER
-- On INFIX8 reduce production constant -> UINTEGER
-- On INFIX7 reduce production constant -> UINTEGER
-- On INFIX6 reduce production constant -> UINTEGER
-- On INFIX5 reduce production constant -> UINTEGER
-- On INFIX4 reduce production constant -> UINTEGER
-- On INFIX3 reduce production constant -> UINTEGER
-- On INFIX2 reduce production constant -> UINTEGER
-- On INFIX1 reduce production constant -> UINTEGER
-- On INFIX0 reduce production constant -> UINTEGER
-- On IN reduce production constant -> UINTEGER
-- On FROM reduce production constant -> UINTEGER
-- On FATRARROW reduce production constant -> UINTEGER
-- On FALSE reduce production constant -> UINTEGER
-- On EQUALSTILDE reduce production constant -> UINTEGER
-- On EQ reduce production constant -> UINTEGER
-- On END reduce production constant -> UINTEGER
-- On ELSE reduce production constant -> UINTEGER
-- On DOTDOT reduce production constant -> UINTEGER
-- On DOT reduce production constant -> UINTEGER
-- On DELETE_LEFT reduce production constant -> UINTEGER
-- On DELETE reduce production constant -> UINTEGER
-- On DEFAULT reduce production constant -> UINTEGER
-- On CONSTRUCTOR reduce production constant -> UINTEGER
-- On COMMA reduce production constant -> UINTEGER
-- On COLONCOLON reduce production constant -> UINTEGER
-- On COLON reduce production constant -> UINTEGER
-- On CLIENT reduce production constant -> UINTEGER
-- On CHAR reduce production constant -> UINTEGER
-- On CASE reduce production constant -> UINTEGER
-- On BY reduce production constant -> UINTEGER
-- On BARRBRACE reduce production constant -> UINTEGER
-- On BARBAR reduce production constant -> UINTEGER
-- On BANG reduce production constant -> UINTEGER
-- On AS reduce production constant -> UINTEGER
-- On AMPAMP reduce production constant -> UINTEGER

State 16:
constant -> UFLOAT . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SERVER SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON NATIVE MINUSDOT MINUS LPAREN LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN FROM FATRARROW FALSE EQUALSTILDE EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CLIENT CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production constant -> UFLOAT
-- On VBAR reduce production constant -> UFLOAT
-- On VARIABLE reduce production constant -> UFLOAT
-- On VALUES reduce production constant -> UFLOAT
-- On UINTEGER reduce production constant -> UFLOAT
-- On UFLOAT reduce production constant -> UFLOAT
-- On TRUE reduce production constant -> UFLOAT
-- On TABLEKEYS reduce production constant -> UFLOAT
-- On STRING reduce production constant -> UFLOAT
-- On SERVER reduce production constant -> UFLOAT
-- On SEMICOLON reduce production constant -> UFLOAT
-- On RPAREN reduce production constant -> UFLOAT
-- On RETURNING reduce production constant -> UFLOAT
-- On RECEIVE reduce production constant -> UFLOAT
-- On RBRACKET reduce production constant -> UFLOAT
-- On RBRACE reduce production constant -> UFLOAT
-- On RARROW reduce production constant -> UFLOAT
-- On POSTFIXOP reduce production constant -> UFLOAT
-- On OTHERWISE reduce production constant -> UFLOAT
-- On ON reduce production constant -> UFLOAT
-- On NATIVE reduce production constant -> UFLOAT
-- On MINUSDOT reduce production constant -> UFLOAT
-- On MINUS reduce production constant -> UFLOAT
-- On LPAREN reduce production constant -> UFLOAT
-- On LLARROW reduce production constant -> UFLOAT
-- On LBRACE reduce production constant -> UFLOAT
-- On LARROW reduce production constant -> UFLOAT
-- On INFIXR9 reduce production constant -> UFLOAT
-- On INFIXR8 reduce production constant -> UFLOAT
-- On INFIXR7 reduce production constant -> UFLOAT
-- On INFIXR6 reduce production constant -> UFLOAT
-- On INFIXR5 reduce production constant -> UFLOAT
-- On INFIXR4 reduce production constant -> UFLOAT
-- On INFIXR3 reduce production constant -> UFLOAT
-- On INFIXR2 reduce production constant -> UFLOAT
-- On INFIXR1 reduce production constant -> UFLOAT
-- On INFIXR0 reduce production constant -> UFLOAT
-- On INFIXL9 reduce production constant -> UFLOAT
-- On INFIXL8 reduce production constant -> UFLOAT
-- On INFIXL7 reduce production constant -> UFLOAT
-- On INFIXL6 reduce production constant -> UFLOAT
-- On INFIXL5 reduce production constant -> UFLOAT
-- On INFIXL4 reduce production constant -> UFLOAT
-- On INFIXL3 reduce production constant -> UFLOAT
-- On INFIXL2 reduce production constant -> UFLOAT
-- On INFIXL1 reduce production constant -> UFLOAT
-- On INFIXL0 reduce production constant -> UFLOAT
-- On INFIX9 reduce production constant -> UFLOAT
-- On INFIX8 reduce production constant -> UFLOAT
-- On INFIX7 reduce production constant -> UFLOAT
-- On INFIX6 reduce production constant -> UFLOAT
-- On INFIX5 reduce production constant -> UFLOAT
-- On INFIX4 reduce production constant -> UFLOAT
-- On INFIX3 reduce production constant -> UFLOAT
-- On INFIX2 reduce production constant -> UFLOAT
-- On INFIX1 reduce production constant -> UFLOAT
-- On INFIX0 reduce production constant -> UFLOAT
-- On IN reduce production constant -> UFLOAT
-- On FROM reduce production constant -> UFLOAT
-- On FATRARROW reduce production constant -> UFLOAT
-- On FALSE reduce production constant -> UFLOAT
-- On EQUALSTILDE reduce production constant -> UFLOAT
-- On EQ reduce production constant -> UFLOAT
-- On END reduce production constant -> UFLOAT
-- On ELSE reduce production constant -> UFLOAT
-- On DOTDOT reduce production constant -> UFLOAT
-- On DOT reduce production constant -> UFLOAT
-- On DELETE_LEFT reduce production constant -> UFLOAT
-- On DELETE reduce production constant -> UFLOAT
-- On DEFAULT reduce production constant -> UFLOAT
-- On CONSTRUCTOR reduce production constant -> UFLOAT
-- On COMMA reduce production constant -> UFLOAT
-- On COLONCOLON reduce production constant -> UFLOAT
-- On COLON reduce production constant -> UFLOAT
-- On CLIENT reduce production constant -> UFLOAT
-- On CHAR reduce production constant -> UFLOAT
-- On CASE reduce production constant -> UFLOAT
-- On BY reduce production constant -> UFLOAT
-- On BARRBRACE reduce production constant -> UFLOAT
-- On BARBAR reduce production constant -> UFLOAT
-- On BANG reduce production constant -> UFLOAT
-- On AS reduce production constant -> UFLOAT
-- On AMPAMP reduce production constant -> UFLOAT

State 17:
constant -> TRUE . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SERVER SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON NATIVE MINUSDOT MINUS LPAREN LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN FROM FATRARROW FALSE EQUALSTILDE EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CLIENT CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production constant -> TRUE
-- On VBAR reduce production constant -> TRUE
-- On VARIABLE reduce production constant -> TRUE
-- On VALUES reduce production constant -> TRUE
-- On UINTEGER reduce production constant -> TRUE
-- On UFLOAT reduce production constant -> TRUE
-- On TRUE reduce production constant -> TRUE
-- On TABLEKEYS reduce production constant -> TRUE
-- On STRING reduce production constant -> TRUE
-- On SERVER reduce production constant -> TRUE
-- On SEMICOLON reduce production constant -> TRUE
-- On RPAREN reduce production constant -> TRUE
-- On RETURNING reduce production constant -> TRUE
-- On RECEIVE reduce production constant -> TRUE
-- On RBRACKET reduce production constant -> TRUE
-- On RBRACE reduce production constant -> TRUE
-- On RARROW reduce production constant -> TRUE
-- On POSTFIXOP reduce production constant -> TRUE
-- On OTHERWISE reduce production constant -> TRUE
-- On ON reduce production constant -> TRUE
-- On NATIVE reduce production constant -> TRUE
-- On MINUSDOT reduce production constant -> TRUE
-- On MINUS reduce production constant -> TRUE
-- On LPAREN reduce production constant -> TRUE
-- On LLARROW reduce production constant -> TRUE
-- On LBRACE reduce production constant -> TRUE
-- On LARROW reduce production constant -> TRUE
-- On INFIXR9 reduce production constant -> TRUE
-- On INFIXR8 reduce production constant -> TRUE
-- On INFIXR7 reduce production constant -> TRUE
-- On INFIXR6 reduce production constant -> TRUE
-- On INFIXR5 reduce production constant -> TRUE
-- On INFIXR4 reduce production constant -> TRUE
-- On INFIXR3 reduce production constant -> TRUE
-- On INFIXR2 reduce production constant -> TRUE
-- On INFIXR1 reduce production constant -> TRUE
-- On INFIXR0 reduce production constant -> TRUE
-- On INFIXL9 reduce production constant -> TRUE
-- On INFIXL8 reduce production constant -> TRUE
-- On INFIXL7 reduce production constant -> TRUE
-- On INFIXL6 reduce production constant -> TRUE
-- On INFIXL5 reduce production constant -> TRUE
-- On INFIXL4 reduce production constant -> TRUE
-- On INFIXL3 reduce production constant -> TRUE
-- On INFIXL2 reduce production constant -> TRUE
-- On INFIXL1 reduce production constant -> TRUE
-- On INFIXL0 reduce production constant -> TRUE
-- On INFIX9 reduce production constant -> TRUE
-- On INFIX8 reduce production constant -> TRUE
-- On INFIX7 reduce production constant -> TRUE
-- On INFIX6 reduce production constant -> TRUE
-- On INFIX5 reduce production constant -> TRUE
-- On INFIX4 reduce production constant -> TRUE
-- On INFIX3 reduce production constant -> TRUE
-- On INFIX2 reduce production constant -> TRUE
-- On INFIX1 reduce production constant -> TRUE
-- On INFIX0 reduce production constant -> TRUE
-- On IN reduce production constant -> TRUE
-- On FROM reduce production constant -> TRUE
-- On FATRARROW reduce production constant -> TRUE
-- On FALSE reduce production constant -> TRUE
-- On EQUALSTILDE reduce production constant -> TRUE
-- On EQ reduce production constant -> TRUE
-- On END reduce production constant -> TRUE
-- On ELSE reduce production constant -> TRUE
-- On DOTDOT reduce production constant -> TRUE
-- On DOT reduce production constant -> TRUE
-- On DELETE_LEFT reduce production constant -> TRUE
-- On DELETE reduce production constant -> TRUE
-- On DEFAULT reduce production constant -> TRUE
-- On CONSTRUCTOR reduce production constant -> TRUE
-- On COMMA reduce production constant -> TRUE
-- On COLONCOLON reduce production constant -> TRUE
-- On COLON reduce production constant -> TRUE
-- On CLIENT reduce production constant -> TRUE
-- On CHAR reduce production constant -> TRUE
-- On CASE reduce production constant -> TRUE
-- On BY reduce production constant -> TRUE
-- On BARRBRACE reduce production constant -> TRUE
-- On BARBAR reduce production constant -> TRUE
-- On BANG reduce production constant -> TRUE
-- On AS reduce production constant -> TRUE
-- On AMPAMP reduce production constant -> TRUE

State 18:
constant -> STRING . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SERVER SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON NATIVE MINUSDOT MINUS LPAREN LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN FROM FATRARROW FALSE EQUALSTILDE EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CLIENT CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production constant -> STRING
-- On VBAR reduce production constant -> STRING
-- On VARIABLE reduce production constant -> STRING
-- On VALUES reduce production constant -> STRING
-- On UINTEGER reduce production constant -> STRING
-- On UFLOAT reduce production constant -> STRING
-- On TRUE reduce production constant -> STRING
-- On TABLEKEYS reduce production constant -> STRING
-- On STRING reduce production constant -> STRING
-- On SERVER reduce production constant -> STRING
-- On SEMICOLON reduce production constant -> STRING
-- On RPAREN reduce production constant -> STRING
-- On RETURNING reduce production constant -> STRING
-- On RECEIVE reduce production constant -> STRING
-- On RBRACKET reduce production constant -> STRING
-- On RBRACE reduce production constant -> STRING
-- On RARROW reduce production constant -> STRING
-- On POSTFIXOP reduce production constant -> STRING
-- On OTHERWISE reduce production constant -> STRING
-- On ON reduce production constant -> STRING
-- On NATIVE reduce production constant -> STRING
-- On MINUSDOT reduce production constant -> STRING
-- On MINUS reduce production constant -> STRING
-- On LPAREN reduce production constant -> STRING
-- On LLARROW reduce production constant -> STRING
-- On LBRACE reduce production constant -> STRING
-- On LARROW reduce production constant -> STRING
-- On INFIXR9 reduce production constant -> STRING
-- On INFIXR8 reduce production constant -> STRING
-- On INFIXR7 reduce production constant -> STRING
-- On INFIXR6 reduce production constant -> STRING
-- On INFIXR5 reduce production constant -> STRING
-- On INFIXR4 reduce production constant -> STRING
-- On INFIXR3 reduce production constant -> STRING
-- On INFIXR2 reduce production constant -> STRING
-- On INFIXR1 reduce production constant -> STRING
-- On INFIXR0 reduce production constant -> STRING
-- On INFIXL9 reduce production constant -> STRING
-- On INFIXL8 reduce production constant -> STRING
-- On INFIXL7 reduce production constant -> STRING
-- On INFIXL6 reduce production constant -> STRING
-- On INFIXL5 reduce production constant -> STRING
-- On INFIXL4 reduce production constant -> STRING
-- On INFIXL3 reduce production constant -> STRING
-- On INFIXL2 reduce production constant -> STRING
-- On INFIXL1 reduce production constant -> STRING
-- On INFIXL0 reduce production constant -> STRING
-- On INFIX9 reduce production constant -> STRING
-- On INFIX8 reduce production constant -> STRING
-- On INFIX7 reduce production constant -> STRING
-- On INFIX6 reduce production constant -> STRING
-- On INFIX5 reduce production constant -> STRING
-- On INFIX4 reduce production constant -> STRING
-- On INFIX3 reduce production constant -> STRING
-- On INFIX2 reduce production constant -> STRING
-- On INFIX1 reduce production constant -> STRING
-- On INFIX0 reduce production constant -> STRING
-- On IN reduce production constant -> STRING
-- On FROM reduce production constant -> STRING
-- On FATRARROW reduce production constant -> STRING
-- On FALSE reduce production constant -> STRING
-- On EQUALSTILDE reduce production constant -> STRING
-- On EQ reduce production constant -> STRING
-- On END reduce production constant -> STRING
-- On ELSE reduce production constant -> STRING
-- On DOTDOT reduce production constant -> STRING
-- On DOT reduce production constant -> STRING
-- On DELETE_LEFT reduce production constant -> STRING
-- On DELETE reduce production constant -> STRING
-- On DEFAULT reduce production constant -> STRING
-- On CONSTRUCTOR reduce production constant -> STRING
-- On COMMA reduce production constant -> STRING
-- On COLONCOLON reduce production constant -> STRING
-- On COLON reduce production constant -> STRING
-- On CLIENT reduce production constant -> STRING
-- On CHAR reduce production constant -> STRING
-- On CASE reduce production constant -> STRING
-- On BY reduce production constant -> STRING
-- On BARRBRACE reduce production constant -> STRING
-- On BARBAR reduce production constant -> STRING
-- On BANG reduce production constant -> STRING
-- On AS reduce production constant -> STRING
-- On AMPAMP reduce production constant -> STRING

State 19:
negative_pattern -> MINUS . CONSTRUCTOR [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
negative_pattern -> MINUS . LPAREN constructors RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On LPAREN shift to state 20
-- On CONSTRUCTOR shift to state 26

State 20:
negative_pattern -> MINUS LPAREN . constructors RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On CONSTRUCTOR shift to state 21
-- On constructors shift to state 24

State 21:
constructors -> CONSTRUCTOR . [ RPAREN ]
constructors -> CONSTRUCTOR . COMMA constructors [ RPAREN ]
-- On COMMA shift to state 22
-- On RPAREN reduce production constructors -> CONSTRUCTOR

State 22:
constructors -> CONSTRUCTOR COMMA . constructors [ RPAREN ]
-- On CONSTRUCTOR shift to state 21
-- On constructors shift to state 23

State 23:
constructors -> CONSTRUCTOR COMMA constructors . [ RPAREN ]
-- On RPAREN reduce production constructors -> CONSTRUCTOR COMMA constructors

State 24:
negative_pattern -> MINUS LPAREN constructors . RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On RPAREN shift to state 25

State 25:
negative_pattern -> MINUS LPAREN constructors RPAREN . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On SERVER reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On RPAREN reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On RBRACKET reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On RBRACE reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On RARROW reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On POSTFIXOP reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On NATIVE reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On LLARROW reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On LBRACE reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On LARROW reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR9 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR8 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR7 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR6 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR5 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR4 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR3 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR2 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR1 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR0 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL9 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL8 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL7 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL6 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL5 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL4 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL3 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL2 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL1 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL0 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX9 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX8 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX7 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX6 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX5 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX4 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX3 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX2 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX1 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX0 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On IN reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On EQ reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On COMMA reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On COLONCOLON reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On COLON reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On CLIENT reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On AS reduce production negative_pattern -> MINUS LPAREN constructors RPAREN

State 26:
negative_pattern -> MINUS CONSTRUCTOR . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On SERVER reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On RPAREN reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On RBRACKET reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On RBRACE reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On RARROW reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On POSTFIXOP reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On NATIVE reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On LLARROW reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On LBRACE reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On LARROW reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR9 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR8 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR7 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR6 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR5 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR4 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR3 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR2 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR1 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR0 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL9 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL8 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL7 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL6 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL5 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL4 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL3 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL2 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL1 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL0 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX9 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX8 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX7 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX6 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX5 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX4 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX3 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX2 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX1 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX0 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On IN reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On EQ reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On COMMA reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On COLONCOLON reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On COLON reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On CLIENT reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On AS reduce production negative_pattern -> MINUS CONSTRUCTOR

State 27:
parenthesized_pattern -> LPAREN . RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
parenthesized_pattern -> LPAREN . pattern RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
parenthesized_pattern -> LPAREN . pattern COMMA patterns RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
parenthesized_pattern -> LPAREN . labeled_patterns VBAR pattern RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
parenthesized_pattern -> LPAREN . labeled_patterns RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VARIABLE shift to state 28
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 29
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 30
-- On RPAREN shift to state 31
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 290
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On record_label shift to state 291
-- On primary_pattern shift to state 275
-- On pattern shift to state 296
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On labeled_patterns shift to state 301
-- On field_label shift to state 254
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 28:
field_label -> VARIABLE . [ EQ ]
primary_pattern -> VARIABLE . [ RPAREN COMMA COLONCOLON COLON AS ]
-- On RPAREN reduce production primary_pattern -> VARIABLE
-- On EQ reduce production field_label -> VARIABLE
-- On COMMA reduce production primary_pattern -> VARIABLE
-- On COLONCOLON reduce production primary_pattern -> VARIABLE
-- On COLON reduce production primary_pattern -> VARIABLE
-- On AS reduce production primary_pattern -> VARIABLE

State 29:
constant -> UINTEGER . [ WITH RPAREN POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE DOT COMMA COLONCOLON COLON BARBAR BANG AS AMPAMP ]
field_label -> UINTEGER . [ EQ ]
-- On WITH reduce production constant -> UINTEGER
-- On RPAREN reduce production constant -> UINTEGER
-- On POSTFIXOP reduce production constant -> UINTEGER
-- On MINUSDOT reduce production constant -> UINTEGER
-- On MINUS reduce production constant -> UINTEGER
-- On LPAREN reduce production constant -> UINTEGER
-- On INFIXR9 reduce production constant -> UINTEGER
-- On INFIXR8 reduce production constant -> UINTEGER
-- On INFIXR7 reduce production constant -> UINTEGER
-- On INFIXR6 reduce production constant -> UINTEGER
-- On INFIXR5 reduce production constant -> UINTEGER
-- On INFIXR4 reduce production constant -> UINTEGER
-- On INFIXR3 reduce production constant -> UINTEGER
-- On INFIXR2 reduce production constant -> UINTEGER
-- On INFIXR1 reduce production constant -> UINTEGER
-- On INFIXR0 reduce production constant -> UINTEGER
-- On INFIXL9 reduce production constant -> UINTEGER
-- On INFIXL8 reduce production constant -> UINTEGER
-- On INFIXL7 reduce production constant -> UINTEGER
-- On INFIXL6 reduce production constant -> UINTEGER
-- On INFIXL5 reduce production constant -> UINTEGER
-- On INFIXL4 reduce production constant -> UINTEGER
-- On INFIXL3 reduce production constant -> UINTEGER
-- On INFIXL2 reduce production constant -> UINTEGER
-- On INFIXL1 reduce production constant -> UINTEGER
-- On INFIXL0 reduce production constant -> UINTEGER
-- On INFIX9 reduce production constant -> UINTEGER
-- On INFIX8 reduce production constant -> UINTEGER
-- On INFIX7 reduce production constant -> UINTEGER
-- On INFIX6 reduce production constant -> UINTEGER
-- On INFIX5 reduce production constant -> UINTEGER
-- On INFIX4 reduce production constant -> UINTEGER
-- On INFIX3 reduce production constant -> UINTEGER
-- On INFIX2 reduce production constant -> UINTEGER
-- On INFIX1 reduce production constant -> UINTEGER
-- On INFIX0 reduce production constant -> UINTEGER
-- On EQUALSTILDE reduce production constant -> UINTEGER
-- On EQ reduce production field_label -> UINTEGER
-- On DOT reduce production constant -> UINTEGER
-- On COMMA reduce production constant -> UINTEGER
-- On COLONCOLON reduce production constant -> UINTEGER
-- On COLON reduce production constant -> UINTEGER
-- On BARBAR reduce production constant -> UINTEGER
-- On BANG reduce production constant -> UINTEGER
-- On AS reduce production constant -> UINTEGER
-- On AMPAMP reduce production constant -> UINTEGER

State 30:
constant -> STRING . [ WITH RPAREN POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE DOT COMMA COLONCOLON COLON BARBAR BANG AS AMPAMP ]
field_label -> STRING . [ EQ ]
-- On WITH reduce production constant -> STRING
-- On RPAREN reduce production constant -> STRING
-- On POSTFIXOP reduce production constant -> STRING
-- On MINUSDOT reduce production constant -> STRING
-- On MINUS reduce production constant -> STRING
-- On LPAREN reduce production constant -> STRING
-- On INFIXR9 reduce production constant -> STRING
-- On INFIXR8 reduce production constant -> STRING
-- On INFIXR7 reduce production constant -> STRING
-- On INFIXR6 reduce production constant -> STRING
-- On INFIXR5 reduce production constant -> STRING
-- On INFIXR4 reduce production constant -> STRING
-- On INFIXR3 reduce production constant -> STRING
-- On INFIXR2 reduce production constant -> STRING
-- On INFIXR1 reduce production constant -> STRING
-- On INFIXR0 reduce production constant -> STRING
-- On INFIXL9 reduce production constant -> STRING
-- On INFIXL8 reduce production constant -> STRING
-- On INFIXL7 reduce production constant -> STRING
-- On INFIXL6 reduce production constant -> STRING
-- On INFIXL5 reduce production constant -> STRING
-- On INFIXL4 reduce production constant -> STRING
-- On INFIXL3 reduce production constant -> STRING
-- On INFIXL2 reduce production constant -> STRING
-- On INFIXL1 reduce production constant -> STRING
-- On INFIXL0 reduce production constant -> STRING
-- On INFIX9 reduce production constant -> STRING
-- On INFIX8 reduce production constant -> STRING
-- On INFIX7 reduce production constant -> STRING
-- On INFIX6 reduce production constant -> STRING
-- On INFIX5 reduce production constant -> STRING
-- On INFIX4 reduce production constant -> STRING
-- On INFIX3 reduce production constant -> STRING
-- On INFIX2 reduce production constant -> STRING
-- On INFIX1 reduce production constant -> STRING
-- On INFIX0 reduce production constant -> STRING
-- On EQUALSTILDE reduce production constant -> STRING
-- On EQ reduce production field_label -> STRING
-- On DOT reduce production constant -> STRING
-- On COMMA reduce production constant -> STRING
-- On COLONCOLON reduce production constant -> STRING
-- On COLON reduce production constant -> STRING
-- On BARBAR reduce production constant -> STRING
-- On BANG reduce production constant -> STRING
-- On AS reduce production constant -> STRING
-- On AMPAMP reduce production constant -> STRING

State 31:
parenthesized_pattern -> LPAREN RPAREN . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production parenthesized_pattern -> LPAREN RPAREN
-- On SERVER reduce production parenthesized_pattern -> LPAREN RPAREN
-- On RPAREN reduce production parenthesized_pattern -> LPAREN RPAREN
-- On RBRACKET reduce production parenthesized_pattern -> LPAREN RPAREN
-- On RBRACE reduce production parenthesized_pattern -> LPAREN RPAREN
-- On RARROW reduce production parenthesized_pattern -> LPAREN RPAREN
-- On POSTFIXOP reduce production parenthesized_pattern -> LPAREN RPAREN
-- On NATIVE reduce production parenthesized_pattern -> LPAREN RPAREN
-- On LLARROW reduce production parenthesized_pattern -> LPAREN RPAREN
-- On LBRACE reduce production parenthesized_pattern -> LPAREN RPAREN
-- On LARROW reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR9 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR8 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR7 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR6 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR5 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR4 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR3 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR2 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR1 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR0 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL9 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL8 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL7 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL6 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL5 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL4 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL3 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL2 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL1 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL0 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX9 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX8 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX7 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX6 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX5 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX4 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX3 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX2 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX1 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX0 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On IN reduce production parenthesized_pattern -> LPAREN RPAREN
-- On EQ reduce production parenthesized_pattern -> LPAREN RPAREN
-- On COMMA reduce production parenthesized_pattern -> LPAREN RPAREN
-- On COLONCOLON reduce production parenthesized_pattern -> LPAREN RPAREN
-- On COLON reduce production parenthesized_pattern -> LPAREN RPAREN
-- On CLIENT reduce production parenthesized_pattern -> LPAREN RPAREN
-- On AS reduce production parenthesized_pattern -> LPAREN RPAREN

State 32:
primary_pattern -> LBRACKET . RBRACKET [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
primary_pattern -> LBRACKET . patterns RBRACKET [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On RBRACKET shift to state 33
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On primary_pattern shift to state 275
-- On patterns shift to state 276
-- On pattern shift to state 278
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 33:
primary_pattern -> LBRACKET RBRACKET . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production primary_pattern -> LBRACKET RBRACKET
-- On SERVER reduce production primary_pattern -> LBRACKET RBRACKET
-- On RPAREN reduce production primary_pattern -> LBRACKET RBRACKET
-- On RBRACKET reduce production primary_pattern -> LBRACKET RBRACKET
-- On RBRACE reduce production primary_pattern -> LBRACKET RBRACKET
-- On RARROW reduce production primary_pattern -> LBRACKET RBRACKET
-- On POSTFIXOP reduce production primary_pattern -> LBRACKET RBRACKET
-- On NATIVE reduce production primary_pattern -> LBRACKET RBRACKET
-- On LLARROW reduce production primary_pattern -> LBRACKET RBRACKET
-- On LBRACE reduce production primary_pattern -> LBRACKET RBRACKET
-- On LARROW reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR9 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR8 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR7 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR6 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR5 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR4 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR3 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR2 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR1 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR0 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL9 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL8 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL7 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL6 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL5 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL4 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL3 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL2 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL1 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL0 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX9 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX8 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX7 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX6 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX5 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX4 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX3 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX2 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX1 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX0 reduce production primary_pattern -> LBRACKET RBRACKET
-- On IN reduce production primary_pattern -> LBRACKET RBRACKET
-- On EQ reduce production primary_pattern -> LBRACKET RBRACKET
-- On COMMA reduce production primary_pattern -> LBRACKET RBRACKET
-- On COLONCOLON reduce production primary_pattern -> LBRACKET RBRACKET
-- On COLON reduce production primary_pattern -> LBRACKET RBRACKET
-- On CLIENT reduce production primary_pattern -> LBRACKET RBRACKET
-- On AS reduce production primary_pattern -> LBRACKET RBRACKET

State 34:
constant -> FALSE . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SERVER SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON NATIVE MINUSDOT MINUS LPAREN LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN FROM FATRARROW FALSE EQUALSTILDE EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CLIENT CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production constant -> FALSE
-- On VBAR reduce production constant -> FALSE
-- On VARIABLE reduce production constant -> FALSE
-- On VALUES reduce production constant -> FALSE
-- On UINTEGER reduce production constant -> FALSE
-- On UFLOAT reduce production constant -> FALSE
-- On TRUE reduce production constant -> FALSE
-- On TABLEKEYS reduce production constant -> FALSE
-- On STRING reduce production constant -> FALSE
-- On SERVER reduce production constant -> FALSE
-- On SEMICOLON reduce production constant -> FALSE
-- On RPAREN reduce production constant -> FALSE
-- On RETURNING reduce production constant -> FALSE
-- On RECEIVE reduce production constant -> FALSE
-- On RBRACKET reduce production constant -> FALSE
-- On RBRACE reduce production constant -> FALSE
-- On RARROW reduce production constant -> FALSE
-- On POSTFIXOP reduce production constant -> FALSE
-- On OTHERWISE reduce production constant -> FALSE
-- On ON reduce production constant -> FALSE
-- On NATIVE reduce production constant -> FALSE
-- On MINUSDOT reduce production constant -> FALSE
-- On MINUS reduce production constant -> FALSE
-- On LPAREN reduce production constant -> FALSE
-- On LLARROW reduce production constant -> FALSE
-- On LBRACE reduce production constant -> FALSE
-- On LARROW reduce production constant -> FALSE
-- On INFIXR9 reduce production constant -> FALSE
-- On INFIXR8 reduce production constant -> FALSE
-- On INFIXR7 reduce production constant -> FALSE
-- On INFIXR6 reduce production constant -> FALSE
-- On INFIXR5 reduce production constant -> FALSE
-- On INFIXR4 reduce production constant -> FALSE
-- On INFIXR3 reduce production constant -> FALSE
-- On INFIXR2 reduce production constant -> FALSE
-- On INFIXR1 reduce production constant -> FALSE
-- On INFIXR0 reduce production constant -> FALSE
-- On INFIXL9 reduce production constant -> FALSE
-- On INFIXL8 reduce production constant -> FALSE
-- On INFIXL7 reduce production constant -> FALSE
-- On INFIXL6 reduce production constant -> FALSE
-- On INFIXL5 reduce production constant -> FALSE
-- On INFIXL4 reduce production constant -> FALSE
-- On INFIXL3 reduce production constant -> FALSE
-- On INFIXL2 reduce production constant -> FALSE
-- On INFIXL1 reduce production constant -> FALSE
-- On INFIXL0 reduce production constant -> FALSE
-- On INFIX9 reduce production constant -> FALSE
-- On INFIX8 reduce production constant -> FALSE
-- On INFIX7 reduce production constant -> FALSE
-- On INFIX6 reduce production constant -> FALSE
-- On INFIX5 reduce production constant -> FALSE
-- On INFIX4 reduce production constant -> FALSE
-- On INFIX3 reduce production constant -> FALSE
-- On INFIX2 reduce production constant -> FALSE
-- On INFIX1 reduce production constant -> FALSE
-- On INFIX0 reduce production constant -> FALSE
-- On IN reduce production constant -> FALSE
-- On FROM reduce production constant -> FALSE
-- On FATRARROW reduce production constant -> FALSE
-- On FALSE reduce production constant -> FALSE
-- On EQUALSTILDE reduce production constant -> FALSE
-- On EQ reduce production constant -> FALSE
-- On END reduce production constant -> FALSE
-- On ELSE reduce production constant -> FALSE
-- On DOTDOT reduce production constant -> FALSE
-- On DOT reduce production constant -> FALSE
-- On DELETE_LEFT reduce production constant -> FALSE
-- On DELETE reduce production constant -> FALSE
-- On DEFAULT reduce production constant -> FALSE
-- On CONSTRUCTOR reduce production constant -> FALSE
-- On COMMA reduce production constant -> FALSE
-- On COLONCOLON reduce production constant -> FALSE
-- On COLON reduce production constant -> FALSE
-- On CLIENT reduce production constant -> FALSE
-- On CHAR reduce production constant -> FALSE
-- On CASE reduce production constant -> FALSE
-- On BY reduce production constant -> FALSE
-- On BARRBRACE reduce production constant -> FALSE
-- On BARBAR reduce production constant -> FALSE
-- On BANG reduce production constant -> FALSE
-- On AS reduce production constant -> FALSE
-- On AMPAMP reduce production constant -> FALSE

State 35:
constructor_pattern -> CONSTRUCTOR . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
constructor_pattern -> CONSTRUCTOR . parenthesized_pattern [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On LPAREN shift to state 27
-- On parenthesized_pattern shift to state 36
-- On VBAR reduce production constructor_pattern -> CONSTRUCTOR
-- On SERVER reduce production constructor_pattern -> CONSTRUCTOR
-- On RPAREN reduce production constructor_pattern -> CONSTRUCTOR
-- On RBRACKET reduce production constructor_pattern -> CONSTRUCTOR
-- On RBRACE reduce production constructor_pattern -> CONSTRUCTOR
-- On RARROW reduce production constructor_pattern -> CONSTRUCTOR
-- On POSTFIXOP reduce production constructor_pattern -> CONSTRUCTOR
-- On NATIVE reduce production constructor_pattern -> CONSTRUCTOR
-- On LLARROW reduce production constructor_pattern -> CONSTRUCTOR
-- On LBRACE reduce production constructor_pattern -> CONSTRUCTOR
-- On LARROW reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR9 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR8 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR7 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR6 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR5 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR4 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR3 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR2 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR1 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR0 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL9 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL8 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL7 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL6 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL5 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL4 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL3 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL2 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL1 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL0 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX9 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX8 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX7 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX6 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX5 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX4 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX3 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX2 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX1 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX0 reduce production constructor_pattern -> CONSTRUCTOR
-- On IN reduce production constructor_pattern -> CONSTRUCTOR
-- On EQ reduce production constructor_pattern -> CONSTRUCTOR
-- On COMMA reduce production constructor_pattern -> CONSTRUCTOR
-- On COLONCOLON reduce production constructor_pattern -> CONSTRUCTOR
-- On COLON reduce production constructor_pattern -> CONSTRUCTOR
-- On CLIENT reduce production constructor_pattern -> CONSTRUCTOR
-- On AS reduce production constructor_pattern -> CONSTRUCTOR

State 36:
constructor_pattern -> CONSTRUCTOR parenthesized_pattern . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On SERVER reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On RPAREN reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On RBRACKET reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On RBRACE reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On RARROW reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On POSTFIXOP reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On NATIVE reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On LLARROW reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On LBRACE reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On LARROW reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR9 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR8 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR7 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR6 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR5 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR4 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR3 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR2 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR1 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR0 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL9 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL8 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL7 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL6 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL5 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL4 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL3 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL2 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL1 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL0 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX9 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX8 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX7 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX6 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX5 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX4 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX3 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX2 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX1 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX0 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On IN reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On EQ reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On COMMA reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On COLONCOLON reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On COLON reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On CLIENT reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On AS reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern

State 37:
constant -> CHAR . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SERVER SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON NATIVE MINUSDOT MINUS LPAREN LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN FROM FATRARROW FALSE EQUALSTILDE EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CLIENT CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production constant -> CHAR
-- On VBAR reduce production constant -> CHAR
-- On VARIABLE reduce production constant -> CHAR
-- On VALUES reduce production constant -> CHAR
-- On UINTEGER reduce production constant -> CHAR
-- On UFLOAT reduce production constant -> CHAR
-- On TRUE reduce production constant -> CHAR
-- On TABLEKEYS reduce production constant -> CHAR
-- On STRING reduce production constant -> CHAR
-- On SERVER reduce production constant -> CHAR
-- On SEMICOLON reduce production constant -> CHAR
-- On RPAREN reduce production constant -> CHAR
-- On RETURNING reduce production constant -> CHAR
-- On RECEIVE reduce production constant -> CHAR
-- On RBRACKET reduce production constant -> CHAR
-- On RBRACE reduce production constant -> CHAR
-- On RARROW reduce production constant -> CHAR
-- On POSTFIXOP reduce production constant -> CHAR
-- On OTHERWISE reduce production constant -> CHAR
-- On ON reduce production constant -> CHAR
-- On NATIVE reduce production constant -> CHAR
-- On MINUSDOT reduce production constant -> CHAR
-- On MINUS reduce production constant -> CHAR
-- On LPAREN reduce production constant -> CHAR
-- On LLARROW reduce production constant -> CHAR
-- On LBRACE reduce production constant -> CHAR
-- On LARROW reduce production constant -> CHAR
-- On INFIXR9 reduce production constant -> CHAR
-- On INFIXR8 reduce production constant -> CHAR
-- On INFIXR7 reduce production constant -> CHAR
-- On INFIXR6 reduce production constant -> CHAR
-- On INFIXR5 reduce production constant -> CHAR
-- On INFIXR4 reduce production constant -> CHAR
-- On INFIXR3 reduce production constant -> CHAR
-- On INFIXR2 reduce production constant -> CHAR
-- On INFIXR1 reduce production constant -> CHAR
-- On INFIXR0 reduce production constant -> CHAR
-- On INFIXL9 reduce production constant -> CHAR
-- On INFIXL8 reduce production constant -> CHAR
-- On INFIXL7 reduce production constant -> CHAR
-- On INFIXL6 reduce production constant -> CHAR
-- On INFIXL5 reduce production constant -> CHAR
-- On INFIXL4 reduce production constant -> CHAR
-- On INFIXL3 reduce production constant -> CHAR
-- On INFIXL2 reduce production constant -> CHAR
-- On INFIXL1 reduce production constant -> CHAR
-- On INFIXL0 reduce production constant -> CHAR
-- On INFIX9 reduce production constant -> CHAR
-- On INFIX8 reduce production constant -> CHAR
-- On INFIX7 reduce production constant -> CHAR
-- On INFIX6 reduce production constant -> CHAR
-- On INFIX5 reduce production constant -> CHAR
-- On INFIX4 reduce production constant -> CHAR
-- On INFIX3 reduce production constant -> CHAR
-- On INFIX2 reduce production constant -> CHAR
-- On INFIX1 reduce production constant -> CHAR
-- On INFIX0 reduce production constant -> CHAR
-- On IN reduce production constant -> CHAR
-- On FROM reduce production constant -> CHAR
-- On FATRARROW reduce production constant -> CHAR
-- On FALSE reduce production constant -> CHAR
-- On EQUALSTILDE reduce production constant -> CHAR
-- On EQ reduce production constant -> CHAR
-- On END reduce production constant -> CHAR
-- On ELSE reduce production constant -> CHAR
-- On DOTDOT reduce production constant -> CHAR
-- On DOT reduce production constant -> CHAR
-- On DELETE_LEFT reduce production constant -> CHAR
-- On DELETE reduce production constant -> CHAR
-- On DEFAULT reduce production constant -> CHAR
-- On CONSTRUCTOR reduce production constant -> CHAR
-- On COMMA reduce production constant -> CHAR
-- On COLONCOLON reduce production constant -> CHAR
-- On COLON reduce production constant -> CHAR
-- On CLIENT reduce production constant -> CHAR
-- On CHAR reduce production constant -> CHAR
-- On CASE reduce production constant -> CHAR
-- On BY reduce production constant -> CHAR
-- On BARRBRACE reduce production constant -> CHAR
-- On BARBAR reduce production constant -> CHAR
-- On BANG reduce production constant -> CHAR
-- On AS reduce production constant -> CHAR
-- On AMPAMP reduce production constant -> CHAR

State 38:
pattern -> typed_pattern . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA CLIENT ]
pattern -> typed_pattern . COLON primary_datatype [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA CLIENT ]
-- On COLON shift to state 39
-- On VBAR reduce production pattern -> typed_pattern
-- On SERVER reduce production pattern -> typed_pattern
-- On RPAREN reduce production pattern -> typed_pattern
-- On RBRACKET reduce production pattern -> typed_pattern
-- On RBRACE reduce production pattern -> typed_pattern
-- On RARROW reduce production pattern -> typed_pattern
-- On POSTFIXOP reduce production pattern -> typed_pattern
-- On NATIVE reduce production pattern -> typed_pattern
-- On LLARROW reduce production pattern -> typed_pattern
-- On LBRACE reduce production pattern -> typed_pattern
-- On LARROW reduce production pattern -> typed_pattern
-- On INFIXR9 reduce production pattern -> typed_pattern
-- On INFIXR8 reduce production pattern -> typed_pattern
-- On INFIXR7 reduce production pattern -> typed_pattern
-- On INFIXR6 reduce production pattern -> typed_pattern
-- On INFIXR5 reduce production pattern -> typed_pattern
-- On INFIXR4 reduce production pattern -> typed_pattern
-- On INFIXR3 reduce production pattern -> typed_pattern
-- On INFIXR2 reduce production pattern -> typed_pattern
-- On INFIXR1 reduce production pattern -> typed_pattern
-- On INFIXR0 reduce production pattern -> typed_pattern
-- On INFIXL9 reduce production pattern -> typed_pattern
-- On INFIXL8 reduce production pattern -> typed_pattern
-- On INFIXL7 reduce production pattern -> typed_pattern
-- On INFIXL6 reduce production pattern -> typed_pattern
-- On INFIXL5 reduce production pattern -> typed_pattern
-- On INFIXL4 reduce production pattern -> typed_pattern
-- On INFIXL3 reduce production pattern -> typed_pattern
-- On INFIXL2 reduce production pattern -> typed_pattern
-- On INFIXL1 reduce production pattern -> typed_pattern
-- On INFIXL0 reduce production pattern -> typed_pattern
-- On INFIX9 reduce production pattern -> typed_pattern
-- On INFIX8 reduce production pattern -> typed_pattern
-- On INFIX7 reduce production pattern -> typed_pattern
-- On INFIX6 reduce production pattern -> typed_pattern
-- On INFIX5 reduce production pattern -> typed_pattern
-- On INFIX4 reduce production pattern -> typed_pattern
-- On INFIX3 reduce production pattern -> typed_pattern
-- On INFIX2 reduce production pattern -> typed_pattern
-- On INFIX1 reduce production pattern -> typed_pattern
-- On INFIX0 reduce production pattern -> typed_pattern
-- On IN reduce production pattern -> typed_pattern
-- On EQ reduce production pattern -> typed_pattern
-- On COMMA reduce production pattern -> typed_pattern
-- On CLIENT reduce production pattern -> typed_pattern

State 39:
pattern -> typed_pattern COLON . primary_datatype [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA CLIENT ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TABLEHANDLE shift to state 42
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On LPAREN shift to state 51
-- On LBRACKETBAR shift to state 97
-- On LBRACKET shift to state 115
-- On CONSTRUCTOR shift to state 129
-- On type_var shift to state 134
-- On primary_datatype shift to state 274
-- On parenthesized_datatypes shift to state 262
-- On kinded_type_var shift to state 147

State 40:
type_var -> VARIABLE . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production type_var -> VARIABLE
-- On WHERE reduce production type_var -> VARIABLE
-- On VBAR reduce production type_var -> VARIABLE
-- On VAR reduce production type_var -> VARIABLE
-- On VALUES reduce production type_var -> VARIABLE
-- On TABLEKEYS reduce production type_var -> VARIABLE
-- On SHALLOWHANDLER reduce production type_var -> VARIABLE
-- On SERVER reduce production type_var -> VARIABLE
-- On SEMICOLON reduce production type_var -> VARIABLE
-- On RPAREN reduce production type_var -> VARIABLE
-- On RETURNING reduce production type_var -> VARIABLE
-- On RBRACKET reduce production type_var -> VARIABLE
-- On RBRACE reduce production type_var -> VARIABLE
-- On RARROW reduce production type_var -> VARIABLE
-- On POSTFIXOP reduce production type_var -> VARIABLE
-- On OTHERWISE reduce production type_var -> VARIABLE
-- On OP reduce production type_var -> VARIABLE
-- On ON reduce production type_var -> VARIABLE
-- On NATIVE reduce production type_var -> VARIABLE
-- On LLARROW reduce production type_var -> VARIABLE
-- On LINFUN reduce production type_var -> VARIABLE
-- On LBRACE reduce production type_var -> VARIABLE
-- On LARROW reduce production type_var -> VARIABLE
-- On INFIXR9 reduce production type_var -> VARIABLE
-- On INFIXR8 reduce production type_var -> VARIABLE
-- On INFIXR7 reduce production type_var -> VARIABLE
-- On INFIXR6 reduce production type_var -> VARIABLE
-- On INFIXR5 reduce production type_var -> VARIABLE
-- On INFIXR4 reduce production type_var -> VARIABLE
-- On INFIXR3 reduce production type_var -> VARIABLE
-- On INFIXR2 reduce production type_var -> VARIABLE
-- On INFIXR1 reduce production type_var -> VARIABLE
-- On INFIXR0 reduce production type_var -> VARIABLE
-- On INFIXL9 reduce production type_var -> VARIABLE
-- On INFIXL8 reduce production type_var -> VARIABLE
-- On INFIXL7 reduce production type_var -> VARIABLE
-- On INFIXL6 reduce production type_var -> VARIABLE
-- On INFIXL5 reduce production type_var -> VARIABLE
-- On INFIXL4 reduce production type_var -> VARIABLE
-- On INFIXL3 reduce production type_var -> VARIABLE
-- On INFIXL2 reduce production type_var -> VARIABLE
-- On INFIXL1 reduce production type_var -> VARIABLE
-- On INFIXL0 reduce production type_var -> VARIABLE
-- On INFIX9 reduce production type_var -> VARIABLE
-- On INFIX8 reduce production type_var -> VARIABLE
-- On INFIX7 reduce production type_var -> VARIABLE
-- On INFIX6 reduce production type_var -> VARIABLE
-- On INFIX5 reduce production type_var -> VARIABLE
-- On INFIX4 reduce production type_var -> VARIABLE
-- On INFIX3 reduce production type_var -> VARIABLE
-- On INFIX2 reduce production type_var -> VARIABLE
-- On INFIX1 reduce production type_var -> VARIABLE
-- On INFIX0 reduce production type_var -> VARIABLE
-- On IN reduce production type_var -> VARIABLE
-- On HANDLER reduce production type_var -> VARIABLE
-- On FUN reduce production type_var -> VARIABLE
-- On FROM reduce production type_var -> VARIABLE
-- On EQ reduce production type_var -> VARIABLE
-- On END reduce production type_var -> VARIABLE
-- On ELSE reduce production type_var -> VARIABLE
-- On DOTDOT reduce production type_var -> VARIABLE
-- On DOT reduce production type_var -> VARIABLE
-- On DELETE_LEFT reduce production type_var -> VARIABLE
-- On DELETE reduce production type_var -> VARIABLE
-- On DEFAULT reduce production type_var -> VARIABLE
-- On COMMA reduce production type_var -> VARIABLE
-- On COLONCOLON reduce production type_var -> VARIABLE
-- On COLON reduce production type_var -> VARIABLE
-- On CLIENT reduce production type_var -> VARIABLE
-- On CASE reduce production type_var -> VARIABLE
-- On BY reduce production type_var -> VARIABLE
-- On BARRBRACKET reduce production type_var -> VARIABLE
-- On BARRBRACE reduce production type_var -> VARIABLE
-- On BARPLUSRBRACKET reduce production type_var -> VARIABLE
-- On BARAMPRBRACKET reduce production type_var -> VARIABLE
-- On AS reduce production type_var -> VARIABLE

State 41:
type_var -> UNDERSCORE . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production type_var -> UNDERSCORE
-- On WHERE reduce production type_var -> UNDERSCORE
-- On VBAR reduce production type_var -> UNDERSCORE
-- On VAR reduce production type_var -> UNDERSCORE
-- On VALUES reduce production type_var -> UNDERSCORE
-- On TABLEKEYS reduce production type_var -> UNDERSCORE
-- On SHALLOWHANDLER reduce production type_var -> UNDERSCORE
-- On SERVER reduce production type_var -> UNDERSCORE
-- On SEMICOLON reduce production type_var -> UNDERSCORE
-- On RPAREN reduce production type_var -> UNDERSCORE
-- On RETURNING reduce production type_var -> UNDERSCORE
-- On RBRACKET reduce production type_var -> UNDERSCORE
-- On RBRACE reduce production type_var -> UNDERSCORE
-- On RARROW reduce production type_var -> UNDERSCORE
-- On POSTFIXOP reduce production type_var -> UNDERSCORE
-- On OTHERWISE reduce production type_var -> UNDERSCORE
-- On OP reduce production type_var -> UNDERSCORE
-- On ON reduce production type_var -> UNDERSCORE
-- On NATIVE reduce production type_var -> UNDERSCORE
-- On LLARROW reduce production type_var -> UNDERSCORE
-- On LINFUN reduce production type_var -> UNDERSCORE
-- On LBRACE reduce production type_var -> UNDERSCORE
-- On LARROW reduce production type_var -> UNDERSCORE
-- On INFIXR9 reduce production type_var -> UNDERSCORE
-- On INFIXR8 reduce production type_var -> UNDERSCORE
-- On INFIXR7 reduce production type_var -> UNDERSCORE
-- On INFIXR6 reduce production type_var -> UNDERSCORE
-- On INFIXR5 reduce production type_var -> UNDERSCORE
-- On INFIXR4 reduce production type_var -> UNDERSCORE
-- On INFIXR3 reduce production type_var -> UNDERSCORE
-- On INFIXR2 reduce production type_var -> UNDERSCORE
-- On INFIXR1 reduce production type_var -> UNDERSCORE
-- On INFIXR0 reduce production type_var -> UNDERSCORE
-- On INFIXL9 reduce production type_var -> UNDERSCORE
-- On INFIXL8 reduce production type_var -> UNDERSCORE
-- On INFIXL7 reduce production type_var -> UNDERSCORE
-- On INFIXL6 reduce production type_var -> UNDERSCORE
-- On INFIXL5 reduce production type_var -> UNDERSCORE
-- On INFIXL4 reduce production type_var -> UNDERSCORE
-- On INFIXL3 reduce production type_var -> UNDERSCORE
-- On INFIXL2 reduce production type_var -> UNDERSCORE
-- On INFIXL1 reduce production type_var -> UNDERSCORE
-- On INFIXL0 reduce production type_var -> UNDERSCORE
-- On INFIX9 reduce production type_var -> UNDERSCORE
-- On INFIX8 reduce production type_var -> UNDERSCORE
-- On INFIX7 reduce production type_var -> UNDERSCORE
-- On INFIX6 reduce production type_var -> UNDERSCORE
-- On INFIX5 reduce production type_var -> UNDERSCORE
-- On INFIX4 reduce production type_var -> UNDERSCORE
-- On INFIX3 reduce production type_var -> UNDERSCORE
-- On INFIX2 reduce production type_var -> UNDERSCORE
-- On INFIX1 reduce production type_var -> UNDERSCORE
-- On INFIX0 reduce production type_var -> UNDERSCORE
-- On IN reduce production type_var -> UNDERSCORE
-- On HANDLER reduce production type_var -> UNDERSCORE
-- On FUN reduce production type_var -> UNDERSCORE
-- On FROM reduce production type_var -> UNDERSCORE
-- On EQ reduce production type_var -> UNDERSCORE
-- On END reduce production type_var -> UNDERSCORE
-- On ELSE reduce production type_var -> UNDERSCORE
-- On DOTDOT reduce production type_var -> UNDERSCORE
-- On DOT reduce production type_var -> UNDERSCORE
-- On DELETE_LEFT reduce production type_var -> UNDERSCORE
-- On DELETE reduce production type_var -> UNDERSCORE
-- On DEFAULT reduce production type_var -> UNDERSCORE
-- On COMMA reduce production type_var -> UNDERSCORE
-- On COLONCOLON reduce production type_var -> UNDERSCORE
-- On COLON reduce production type_var -> UNDERSCORE
-- On CLIENT reduce production type_var -> UNDERSCORE
-- On CASE reduce production type_var -> UNDERSCORE
-- On BY reduce production type_var -> UNDERSCORE
-- On BARRBRACKET reduce production type_var -> UNDERSCORE
-- On BARRBRACE reduce production type_var -> UNDERSCORE
-- On BARPLUSRBRACKET reduce production type_var -> UNDERSCORE
-- On BARAMPRBRACKET reduce production type_var -> UNDERSCORE
-- On AS reduce production type_var -> UNDERSCORE

State 42:
primary_datatype -> TABLEHANDLE . LPAREN datatype COMMA datatype COMMA datatype RPAREN [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On LPAREN shift to state 43

State 43:
primary_datatype -> TABLEHANDLE LPAREN . datatype COMMA datatype COMMA datatype RPAREN [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 268

State 44:
session_datatype -> TILDE . datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 267

State 45:
session_datatype -> QUESTION . datatype DOT datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 264

State 46:
type_var -> PERCENTVAR . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production type_var -> PERCENTVAR
-- On WHERE reduce production type_var -> PERCENTVAR
-- On VBAR reduce production type_var -> PERCENTVAR
-- On VAR reduce production type_var -> PERCENTVAR
-- On VALUES reduce production type_var -> PERCENTVAR
-- On TABLEKEYS reduce production type_var -> PERCENTVAR
-- On SHALLOWHANDLER reduce production type_var -> PERCENTVAR
-- On SERVER reduce production type_var -> PERCENTVAR
-- On SEMICOLON reduce production type_var -> PERCENTVAR
-- On RPAREN reduce production type_var -> PERCENTVAR
-- On RETURNING reduce production type_var -> PERCENTVAR
-- On RBRACKET reduce production type_var -> PERCENTVAR
-- On RBRACE reduce production type_var -> PERCENTVAR
-- On RARROW reduce production type_var -> PERCENTVAR
-- On POSTFIXOP reduce production type_var -> PERCENTVAR
-- On OTHERWISE reduce production type_var -> PERCENTVAR
-- On OP reduce production type_var -> PERCENTVAR
-- On ON reduce production type_var -> PERCENTVAR
-- On NATIVE reduce production type_var -> PERCENTVAR
-- On LLARROW reduce production type_var -> PERCENTVAR
-- On LINFUN reduce production type_var -> PERCENTVAR
-- On LBRACE reduce production type_var -> PERCENTVAR
-- On LARROW reduce production type_var -> PERCENTVAR
-- On INFIXR9 reduce production type_var -> PERCENTVAR
-- On INFIXR8 reduce production type_var -> PERCENTVAR
-- On INFIXR7 reduce production type_var -> PERCENTVAR
-- On INFIXR6 reduce production type_var -> PERCENTVAR
-- On INFIXR5 reduce production type_var -> PERCENTVAR
-- On INFIXR4 reduce production type_var -> PERCENTVAR
-- On INFIXR3 reduce production type_var -> PERCENTVAR
-- On INFIXR2 reduce production type_var -> PERCENTVAR
-- On INFIXR1 reduce production type_var -> PERCENTVAR
-- On INFIXR0 reduce production type_var -> PERCENTVAR
-- On INFIXL9 reduce production type_var -> PERCENTVAR
-- On INFIXL8 reduce production type_var -> PERCENTVAR
-- On INFIXL7 reduce production type_var -> PERCENTVAR
-- On INFIXL6 reduce production type_var -> PERCENTVAR
-- On INFIXL5 reduce production type_var -> PERCENTVAR
-- On INFIXL4 reduce production type_var -> PERCENTVAR
-- On INFIXL3 reduce production type_var -> PERCENTVAR
-- On INFIXL2 reduce production type_var -> PERCENTVAR
-- On INFIXL1 reduce production type_var -> PERCENTVAR
-- On INFIXL0 reduce production type_var -> PERCENTVAR
-- On INFIX9 reduce production type_var -> PERCENTVAR
-- On INFIX8 reduce production type_var -> PERCENTVAR
-- On INFIX7 reduce production type_var -> PERCENTVAR
-- On INFIX6 reduce production type_var -> PERCENTVAR
-- On INFIX5 reduce production type_var -> PERCENTVAR
-- On INFIX4 reduce production type_var -> PERCENTVAR
-- On INFIX3 reduce production type_var -> PERCENTVAR
-- On INFIX2 reduce production type_var -> PERCENTVAR
-- On INFIX1 reduce production type_var -> PERCENTVAR
-- On INFIX0 reduce production type_var -> PERCENTVAR
-- On IN reduce production type_var -> PERCENTVAR
-- On HANDLER reduce production type_var -> PERCENTVAR
-- On FUN reduce production type_var -> PERCENTVAR
-- On FROM reduce production type_var -> PERCENTVAR
-- On EQ reduce production type_var -> PERCENTVAR
-- On END reduce production type_var -> PERCENTVAR
-- On ELSE reduce production type_var -> PERCENTVAR
-- On DOTDOT reduce production type_var -> PERCENTVAR
-- On DOT reduce production type_var -> PERCENTVAR
-- On DELETE_LEFT reduce production type_var -> PERCENTVAR
-- On DELETE reduce production type_var -> PERCENTVAR
-- On DEFAULT reduce production type_var -> PERCENTVAR
-- On COMMA reduce production type_var -> PERCENTVAR
-- On COLONCOLON reduce production type_var -> PERCENTVAR
-- On COLON reduce production type_var -> PERCENTVAR
-- On CLIENT reduce production type_var -> PERCENTVAR
-- On CASE reduce production type_var -> PERCENTVAR
-- On BY reduce production type_var -> PERCENTVAR
-- On BARRBRACKET reduce production type_var -> PERCENTVAR
-- On BARRBRACE reduce production type_var -> PERCENTVAR
-- On BARPLUSRBRACKET reduce production type_var -> PERCENTVAR
-- On BARAMPRBRACKET reduce production type_var -> PERCENTVAR
-- On AS reduce production type_var -> PERCENTVAR

State 47:
type_var -> PERCENT . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production type_var -> PERCENT
-- On WHERE reduce production type_var -> PERCENT
-- On VBAR reduce production type_var -> PERCENT
-- On VAR reduce production type_var -> PERCENT
-- On VALUES reduce production type_var -> PERCENT
-- On TABLEKEYS reduce production type_var -> PERCENT
-- On SHALLOWHANDLER reduce production type_var -> PERCENT
-- On SERVER reduce production type_var -> PERCENT
-- On SEMICOLON reduce production type_var -> PERCENT
-- On RPAREN reduce production type_var -> PERCENT
-- On RETURNING reduce production type_var -> PERCENT
-- On RBRACKET reduce production type_var -> PERCENT
-- On RBRACE reduce production type_var -> PERCENT
-- On RARROW reduce production type_var -> PERCENT
-- On POSTFIXOP reduce production type_var -> PERCENT
-- On OTHERWISE reduce production type_var -> PERCENT
-- On OP reduce production type_var -> PERCENT
-- On ON reduce production type_var -> PERCENT
-- On NATIVE reduce production type_var -> PERCENT
-- On LLARROW reduce production type_var -> PERCENT
-- On LINFUN reduce production type_var -> PERCENT
-- On LBRACE reduce production type_var -> PERCENT
-- On LARROW reduce production type_var -> PERCENT
-- On INFIXR9 reduce production type_var -> PERCENT
-- On INFIXR8 reduce production type_var -> PERCENT
-- On INFIXR7 reduce production type_var -> PERCENT
-- On INFIXR6 reduce production type_var -> PERCENT
-- On INFIXR5 reduce production type_var -> PERCENT
-- On INFIXR4 reduce production type_var -> PERCENT
-- On INFIXR3 reduce production type_var -> PERCENT
-- On INFIXR2 reduce production type_var -> PERCENT
-- On INFIXR1 reduce production type_var -> PERCENT
-- On INFIXR0 reduce production type_var -> PERCENT
-- On INFIXL9 reduce production type_var -> PERCENT
-- On INFIXL8 reduce production type_var -> PERCENT
-- On INFIXL7 reduce production type_var -> PERCENT
-- On INFIXL6 reduce production type_var -> PERCENT
-- On INFIXL5 reduce production type_var -> PERCENT
-- On INFIXL4 reduce production type_var -> PERCENT
-- On INFIXL3 reduce production type_var -> PERCENT
-- On INFIXL2 reduce production type_var -> PERCENT
-- On INFIXL1 reduce production type_var -> PERCENT
-- On INFIXL0 reduce production type_var -> PERCENT
-- On INFIX9 reduce production type_var -> PERCENT
-- On INFIX8 reduce production type_var -> PERCENT
-- On INFIX7 reduce production type_var -> PERCENT
-- On INFIX6 reduce production type_var -> PERCENT
-- On INFIX5 reduce production type_var -> PERCENT
-- On INFIX4 reduce production type_var -> PERCENT
-- On INFIX3 reduce production type_var -> PERCENT
-- On INFIX2 reduce production type_var -> PERCENT
-- On INFIX1 reduce production type_var -> PERCENT
-- On INFIX0 reduce production type_var -> PERCENT
-- On IN reduce production type_var -> PERCENT
-- On HANDLER reduce production type_var -> PERCENT
-- On FUN reduce production type_var -> PERCENT
-- On FROM reduce production type_var -> PERCENT
-- On EQ reduce production type_var -> PERCENT
-- On END reduce production type_var -> PERCENT
-- On ELSE reduce production type_var -> PERCENT
-- On DOTDOT reduce production type_var -> PERCENT
-- On DOT reduce production type_var -> PERCENT
-- On DELETE_LEFT reduce production type_var -> PERCENT
-- On DELETE reduce production type_var -> PERCENT
-- On DEFAULT reduce production type_var -> PERCENT
-- On COMMA reduce production type_var -> PERCENT
-- On COLONCOLON reduce production type_var -> PERCENT
-- On COLON reduce production type_var -> PERCENT
-- On CLIENT reduce production type_var -> PERCENT
-- On CASE reduce production type_var -> PERCENT
-- On BY reduce production type_var -> PERCENT
-- On BARRBRACKET reduce production type_var -> PERCENT
-- On BARRBRACE reduce production type_var -> PERCENT
-- On BARPLUSRBRACKET reduce production type_var -> PERCENT
-- On BARAMPRBRACKET reduce production type_var -> PERCENT
-- On AS reduce production type_var -> PERCENT

State 48:
mu_datatype -> MU . VARIABLE DOT mu_datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 49

State 49:
mu_datatype -> MU VARIABLE . DOT mu_datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On DOT shift to state 50

State 50:
mu_datatype -> MU VARIABLE DOT . mu_datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 262
-- On mu_datatype shift to state 263
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148

State 51:
parenthesized_datatypes -> LPAREN . RPAREN [ WITH WHERE VBAR VAR VALUES TILDE TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE MINUS LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
parenthesized_datatypes -> LPAREN . qualified_type_name RPAREN [ WITH WHERE VBAR VAR VALUES TILDE TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE MINUS LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
parenthesized_datatypes -> LPAREN . datatypes RPAREN [ WITH WHERE VBAR VAR VALUES TILDE TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE MINUS LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
primary_datatype -> LPAREN . rfields RPAREN [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VBAR shift to state 52
-- On VARIABLE shift to state 236
-- On UNDERSCORE shift to state 41
-- On UINTEGER shift to state 89
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On STRING shift to state 90
-- On RPAREN shift to state 237
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 238
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On rfields shift to state 244
-- On rfield shift to state 246
-- On record_label shift to state 252
-- On qualified_type_name shift to state 255
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On field_label shift to state 254
-- On datatypes shift to state 257
-- On datatype shift to state 259

State 52:
rfields -> VBAR . row_var [ RPAREN ]
rfields -> VBAR . kinded_row_var [ RPAREN ]
-- On VARIABLE shift to state 53
-- On UNDERSCORE shift to state 54
-- On PERCENTVAR shift to state 55
-- On PERCENT shift to state 56
-- On LPAREN shift to state 57
-- On row_var shift to state 234
-- On nonrec_row_var shift to state 86
-- On kinded_row_var shift to state 235

State 53:
nonrec_row_var -> VARIABLE . [ SQUIGRARROW SQUIGLOLLI RPAREN RBRACE RARROW LOLLI COLONCOLON BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On SQUIGRARROW reduce production nonrec_row_var -> VARIABLE
-- On SQUIGLOLLI reduce production nonrec_row_var -> VARIABLE
-- On RPAREN reduce production nonrec_row_var -> VARIABLE
-- On RBRACE reduce production nonrec_row_var -> VARIABLE
-- On RARROW reduce production nonrec_row_var -> VARIABLE
-- On LOLLI reduce production nonrec_row_var -> VARIABLE
-- On COLONCOLON reduce production nonrec_row_var -> VARIABLE
-- On BARRBRACKET reduce production nonrec_row_var -> VARIABLE
-- On BARPLUSRBRACKET reduce production nonrec_row_var -> VARIABLE
-- On BARAMPRBRACKET reduce production nonrec_row_var -> VARIABLE

State 54:
nonrec_row_var -> UNDERSCORE . [ SQUIGRARROW SQUIGLOLLI RPAREN RBRACE RARROW LOLLI COLONCOLON BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On SQUIGRARROW reduce production nonrec_row_var -> UNDERSCORE
-- On SQUIGLOLLI reduce production nonrec_row_var -> UNDERSCORE
-- On RPAREN reduce production nonrec_row_var -> UNDERSCORE
-- On RBRACE reduce production nonrec_row_var -> UNDERSCORE
-- On RARROW reduce production nonrec_row_var -> UNDERSCORE
-- On LOLLI reduce production nonrec_row_var -> UNDERSCORE
-- On COLONCOLON reduce production nonrec_row_var -> UNDERSCORE
-- On BARRBRACKET reduce production nonrec_row_var -> UNDERSCORE
-- On BARPLUSRBRACKET reduce production nonrec_row_var -> UNDERSCORE
-- On BARAMPRBRACKET reduce production nonrec_row_var -> UNDERSCORE

State 55:
nonrec_row_var -> PERCENTVAR . [ SQUIGRARROW SQUIGLOLLI RPAREN RBRACE RARROW LOLLI COLONCOLON BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On SQUIGRARROW reduce production nonrec_row_var -> PERCENTVAR
-- On SQUIGLOLLI reduce production nonrec_row_var -> PERCENTVAR
-- On RPAREN reduce production nonrec_row_var -> PERCENTVAR
-- On RBRACE reduce production nonrec_row_var -> PERCENTVAR
-- On RARROW reduce production nonrec_row_var -> PERCENTVAR
-- On LOLLI reduce production nonrec_row_var -> PERCENTVAR
-- On COLONCOLON reduce production nonrec_row_var -> PERCENTVAR
-- On BARRBRACKET reduce production nonrec_row_var -> PERCENTVAR
-- On BARPLUSRBRACKET reduce production nonrec_row_var -> PERCENTVAR
-- On BARAMPRBRACKET reduce production nonrec_row_var -> PERCENTVAR

State 56:
nonrec_row_var -> PERCENT . [ SQUIGRARROW SQUIGLOLLI RPAREN RBRACE RARROW LOLLI COLONCOLON BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On SQUIGRARROW reduce production nonrec_row_var -> PERCENT
-- On SQUIGLOLLI reduce production nonrec_row_var -> PERCENT
-- On RPAREN reduce production nonrec_row_var -> PERCENT
-- On RBRACE reduce production nonrec_row_var -> PERCENT
-- On RARROW reduce production nonrec_row_var -> PERCENT
-- On LOLLI reduce production nonrec_row_var -> PERCENT
-- On COLONCOLON reduce production nonrec_row_var -> PERCENT
-- On BARRBRACKET reduce production nonrec_row_var -> PERCENT
-- On BARPLUSRBRACKET reduce production nonrec_row_var -> PERCENT
-- On BARAMPRBRACKET reduce production nonrec_row_var -> PERCENT

State 57:
row_var -> LPAREN . MU VARIABLE DOT vfields RPAREN [ RPAREN RBRACE COLONCOLON BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On MU shift to state 58

State 58:
row_var -> LPAREN MU . VARIABLE DOT vfields RPAREN [ RPAREN RBRACE COLONCOLON BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VARIABLE shift to state 59

State 59:
row_var -> LPAREN MU VARIABLE . DOT vfields RPAREN [ RPAREN RBRACE COLONCOLON BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On DOT shift to state 60

State 60:
row_var -> LPAREN MU VARIABLE DOT . vfields RPAREN [ RPAREN RBRACE COLONCOLON BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VARIABLE shift to state 53
-- On UNDERSCORE shift to state 54
-- On PERCENTVAR shift to state 55
-- On PERCENT shift to state 56
-- On LPAREN shift to state 57
-- On CONSTRUCTOR shift to state 61
-- On vfields shift to state 232
-- On vfield shift to state 101
-- On row_var shift to state 104
-- On nonrec_row_var shift to state 86
-- On kinded_row_var shift to state 105

State 61:
vfield -> CONSTRUCTOR . [ VBAR RPAREN BARRBRACKET ]
vfield -> CONSTRUCTOR . fieldspec [ VBAR RPAREN BARRBRACKET ]
-- On MINUS shift to state 62
-- On LBRACE shift to state 63
-- On COLON shift to state 96
-- On fieldspec shift to state 231
-- On VBAR reduce production vfield -> CONSTRUCTOR
-- On RPAREN reduce production vfield -> CONSTRUCTOR
-- On BARRBRACKET reduce production vfield -> CONSTRUCTOR

State 62:
fieldspec -> MINUS . [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VBAR reduce production fieldspec -> MINUS
-- On RPAREN reduce production fieldspec -> MINUS
-- On RBRACE reduce production fieldspec -> MINUS
-- On COMMA reduce production fieldspec -> MINUS
-- On BARRBRACKET reduce production fieldspec -> MINUS
-- On BARPLUSRBRACKET reduce production fieldspec -> MINUS
-- On BARAMPRBRACKET reduce production fieldspec -> MINUS

State 63:
fieldspec -> LBRACE . COLON datatype RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
fieldspec -> LBRACE . MINUS RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
fieldspec -> LBRACE . VARIABLE RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
fieldspec -> LBRACE . PERCENTVAR RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
fieldspec -> LBRACE . UNDERSCORE RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
fieldspec -> LBRACE . PERCENT RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VARIABLE shift to state 64
-- On UNDERSCORE shift to state 66
-- On PERCENTVAR shift to state 68
-- On PERCENT shift to state 70
-- On MINUS shift to state 72
-- On COLON shift to state 74

State 64:
fieldspec -> LBRACE VARIABLE . RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On RBRACE shift to state 65

State 65:
fieldspec -> LBRACE VARIABLE RBRACE . [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VBAR reduce production fieldspec -> LBRACE VARIABLE RBRACE
-- On RPAREN reduce production fieldspec -> LBRACE VARIABLE RBRACE
-- On RBRACE reduce production fieldspec -> LBRACE VARIABLE RBRACE
-- On COMMA reduce production fieldspec -> LBRACE VARIABLE RBRACE
-- On BARRBRACKET reduce production fieldspec -> LBRACE VARIABLE RBRACE
-- On BARPLUSRBRACKET reduce production fieldspec -> LBRACE VARIABLE RBRACE
-- On BARAMPRBRACKET reduce production fieldspec -> LBRACE VARIABLE RBRACE

State 66:
fieldspec -> LBRACE UNDERSCORE . RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On RBRACE shift to state 67

State 67:
fieldspec -> LBRACE UNDERSCORE RBRACE . [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VBAR reduce production fieldspec -> LBRACE UNDERSCORE RBRACE
-- On RPAREN reduce production fieldspec -> LBRACE UNDERSCORE RBRACE
-- On RBRACE reduce production fieldspec -> LBRACE UNDERSCORE RBRACE
-- On COMMA reduce production fieldspec -> LBRACE UNDERSCORE RBRACE
-- On BARRBRACKET reduce production fieldspec -> LBRACE UNDERSCORE RBRACE
-- On BARPLUSRBRACKET reduce production fieldspec -> LBRACE UNDERSCORE RBRACE
-- On BARAMPRBRACKET reduce production fieldspec -> LBRACE UNDERSCORE RBRACE

State 68:
fieldspec -> LBRACE PERCENTVAR . RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On RBRACE shift to state 69

State 69:
fieldspec -> LBRACE PERCENTVAR RBRACE . [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VBAR reduce production fieldspec -> LBRACE PERCENTVAR RBRACE
-- On RPAREN reduce production fieldspec -> LBRACE PERCENTVAR RBRACE
-- On RBRACE reduce production fieldspec -> LBRACE PERCENTVAR RBRACE
-- On COMMA reduce production fieldspec -> LBRACE PERCENTVAR RBRACE
-- On BARRBRACKET reduce production fieldspec -> LBRACE PERCENTVAR RBRACE
-- On BARPLUSRBRACKET reduce production fieldspec -> LBRACE PERCENTVAR RBRACE
-- On BARAMPRBRACKET reduce production fieldspec -> LBRACE PERCENTVAR RBRACE

State 70:
fieldspec -> LBRACE PERCENT . RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On RBRACE shift to state 71

State 71:
fieldspec -> LBRACE PERCENT RBRACE . [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VBAR reduce production fieldspec -> LBRACE PERCENT RBRACE
-- On RPAREN reduce production fieldspec -> LBRACE PERCENT RBRACE
-- On RBRACE reduce production fieldspec -> LBRACE PERCENT RBRACE
-- On COMMA reduce production fieldspec -> LBRACE PERCENT RBRACE
-- On BARRBRACKET reduce production fieldspec -> LBRACE PERCENT RBRACE
-- On BARPLUSRBRACKET reduce production fieldspec -> LBRACE PERCENT RBRACE
-- On BARAMPRBRACKET reduce production fieldspec -> LBRACE PERCENT RBRACE

State 72:
fieldspec -> LBRACE MINUS . RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On RBRACE shift to state 73

State 73:
fieldspec -> LBRACE MINUS RBRACE . [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VBAR reduce production fieldspec -> LBRACE MINUS RBRACE
-- On RPAREN reduce production fieldspec -> LBRACE MINUS RBRACE
-- On RBRACE reduce production fieldspec -> LBRACE MINUS RBRACE
-- On COMMA reduce production fieldspec -> LBRACE MINUS RBRACE
-- On BARRBRACKET reduce production fieldspec -> LBRACE MINUS RBRACE
-- On BARPLUSRBRACKET reduce production fieldspec -> LBRACE MINUS RBRACE
-- On BARAMPRBRACKET reduce production fieldspec -> LBRACE MINUS RBRACE

State 74:
fieldspec -> LBRACE COLON . datatype RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 229

State 75:
session_datatype -> LBRACKETPLUSBAR . row BARPLUSRBRACKET [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VBAR shift to state 76
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On CONSTRUCTOR shift to state 91
-- On row shift to state 92
-- On fields shift to state 94
-- On field_label shift to state 95
-- On field shift to state 109
-- On BARPLUSRBRACKET reduce production row ->

State 76:
fields -> VBAR . row_var [ RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET ]
fields -> VBAR . kinded_row_var [ RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VARIABLE shift to state 53
-- On UNDERSCORE shift to state 54
-- On PERCENTVAR shift to state 55
-- On PERCENT shift to state 56
-- On LPAREN shift to state 57
-- On row_var shift to state 77
-- On nonrec_row_var shift to state 86
-- On kinded_row_var shift to state 87

State 77:
fields -> VBAR row_var . [ RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET ]
kinded_row_var -> row_var . subkind [ RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET ]
-- On COLONCOLON shift to state 78
-- On subkind shift to state 85
-- On RPAREN reduce production fields -> VBAR row_var
-- On RBRACE reduce production fields -> VBAR row_var
-- On BARPLUSRBRACKET reduce production fields -> VBAR row_var
-- On BARAMPRBRACKET reduce production fields -> VBAR row_var

State 78:
subkind -> COLONCOLON . LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN [ WITH WHERE VBAR VAR VALUES TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
subkind -> COLONCOLON . CONSTRUCTOR [ WITH WHERE VBAR VAR VALUES TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On LPAREN shift to state 79
-- On CONSTRUCTOR shift to state 84

State 79:
subkind -> COLONCOLON LPAREN . CONSTRUCTOR COMMA CONSTRUCTOR RPAREN [ WITH WHERE VBAR VAR VALUES TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On CONSTRUCTOR shift to state 80

State 80:
subkind -> COLONCOLON LPAREN CONSTRUCTOR . COMMA CONSTRUCTOR RPAREN [ WITH WHERE VBAR VAR VALUES TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On COMMA shift to state 81

State 81:
subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA . CONSTRUCTOR RPAREN [ WITH WHERE VBAR VAR VALUES TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On CONSTRUCTOR shift to state 82

State 82:
subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR . RPAREN [ WITH WHERE VBAR VAR VALUES TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On RPAREN shift to state 83

State 83:
subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On WHERE reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On VBAR reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On VAR reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On VALUES reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On TABLEKEYS reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On SQUIGRARROW reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On SQUIGLOLLI reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On SHALLOWHANDLER reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On SERVER reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On SEMICOLON reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On RPAREN reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On RETURNING reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On RBRACKET reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On RBRACE reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On RARROW reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On POSTFIXOP reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On OTHERWISE reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On OP reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On ON reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On NATIVE reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On LOLLI reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On LLARROW reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On LINFUN reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On LBRACE reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On LARROW reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXR9 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXR8 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXR7 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXR6 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXR5 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXR4 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXR3 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXR2 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXR1 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXR0 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXL9 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXL8 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXL7 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXL6 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXL5 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXL4 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXL3 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXL2 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXL1 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIXL0 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIX9 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIX8 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIX7 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIX6 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIX5 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIX4 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIX3 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIX2 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIX1 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On INFIX0 reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On IN reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On HANDLER reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On FUN reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On FROM reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On EQ reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On END reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On ELSE reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On DOTDOT reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On DOT reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On DELETE_LEFT reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On DELETE reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On DEFAULT reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On COMMA reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On COLON reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On CLIENT reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On CASE reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On BY reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On BARRBRACKET reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On BARRBRACE reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On BARPLUSRBRACKET reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On BARAMPRBRACKET reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On AS reduce production subkind -> COLONCOLON LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN

State 84:
subkind -> COLONCOLON CONSTRUCTOR . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On WHERE reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On VBAR reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On VAR reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On VALUES reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On TABLEKEYS reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On SQUIGRARROW reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On SQUIGLOLLI reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On SHALLOWHANDLER reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On SERVER reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On SEMICOLON reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On RPAREN reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On RETURNING reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On RBRACKET reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On RBRACE reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On RARROW reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On POSTFIXOP reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On OTHERWISE reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On OP reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On ON reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On NATIVE reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On LOLLI reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On LLARROW reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On LINFUN reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On LBRACE reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On LARROW reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXR9 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXR8 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXR7 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXR6 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXR5 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXR4 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXR3 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXR2 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXR1 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXR0 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXL9 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXL8 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXL7 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXL6 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXL5 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXL4 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXL3 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXL2 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXL1 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIXL0 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIX9 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIX8 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIX7 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIX6 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIX5 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIX4 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIX3 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIX2 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIX1 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On INFIX0 reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On IN reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On HANDLER reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On FUN reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On FROM reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On EQ reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On END reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On ELSE reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On DOTDOT reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On DOT reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On DELETE_LEFT reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On DELETE reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On DEFAULT reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On COMMA reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On COLON reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On CLIENT reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On CASE reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On BY reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On BARRBRACKET reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On BARRBRACE reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On BARPLUSRBRACKET reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On BARAMPRBRACKET reduce production subkind -> COLONCOLON CONSTRUCTOR
-- On AS reduce production subkind -> COLONCOLON CONSTRUCTOR

State 85:
kinded_row_var -> row_var subkind . [ RPAREN RBRACE BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On RPAREN reduce production kinded_row_var -> row_var subkind
-- On RBRACE reduce production kinded_row_var -> row_var subkind
-- On BARRBRACKET reduce production kinded_row_var -> row_var subkind
-- On BARPLUSRBRACKET reduce production kinded_row_var -> row_var subkind
-- On BARAMPRBRACKET reduce production kinded_row_var -> row_var subkind

State 86:
row_var -> nonrec_row_var . [ RPAREN RBRACE COLONCOLON BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On RPAREN reduce production row_var -> nonrec_row_var
-- On RBRACE reduce production row_var -> nonrec_row_var
-- On COLONCOLON reduce production row_var -> nonrec_row_var
-- On BARRBRACKET reduce production row_var -> nonrec_row_var
-- On BARPLUSRBRACKET reduce production row_var -> nonrec_row_var
-- On BARAMPRBRACKET reduce production row_var -> nonrec_row_var

State 87:
fields -> VBAR kinded_row_var . [ RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET ]
-- On RPAREN reduce production fields -> VBAR kinded_row_var
-- On RBRACE reduce production fields -> VBAR kinded_row_var
-- On BARPLUSRBRACKET reduce production fields -> VBAR kinded_row_var
-- On BARAMPRBRACKET reduce production fields -> VBAR kinded_row_var

State 88:
field_label -> VARIABLE . [ WITH VBAR VARIABLE VALUES UPDATE UINTEGER UFLOAT TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RPAREN RETURNING RECEIVE READONLY RBRACKET RBRACE RARROW RAISE QUERY PREFIXOP PAGE OTHERWISE ON OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IF HANDLER HANDLE FUN FROM FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE EQ END ELSE DOTDOT DOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARPLUSRBRACKET BARBAR BARAMPRBRACKET BANG AS AMPAMP ]
-- On WITH reduce production field_label -> VARIABLE
-- On VBAR reduce production field_label -> VARIABLE
-- On VARIABLE reduce production field_label -> VARIABLE
-- On VALUES reduce production field_label -> VARIABLE
-- On UPDATE reduce production field_label -> VARIABLE
-- On UINTEGER reduce production field_label -> VARIABLE
-- On UFLOAT reduce production field_label -> VARIABLE
-- On TRY reduce production field_label -> VARIABLE
-- On TRUE reduce production field_label -> VARIABLE
-- On TABLEKEYS reduce production field_label -> VARIABLE
-- On TABLE reduce production field_label -> VARIABLE
-- On SWITCH reduce production field_label -> VARIABLE
-- On STRING reduce production field_label -> VARIABLE
-- On SPAWNWAIT reduce production field_label -> VARIABLE
-- On SPAWNCLIENT reduce production field_label -> VARIABLE
-- On SPAWNAT reduce production field_label -> VARIABLE
-- On SPAWNANGELAT reduce production field_label -> VARIABLE
-- On SPAWNANGEL reduce production field_label -> VARIABLE
-- On SPAWN reduce production field_label -> VARIABLE
-- On SHALLOWHANDLER reduce production field_label -> VARIABLE
-- On SHALLOWHANDLE reduce production field_label -> VARIABLE
-- On SEMICOLON reduce production field_label -> VARIABLE
-- On SELECT reduce production field_label -> VARIABLE
-- On RPAREN reduce production field_label -> VARIABLE
-- On RETURNING reduce production field_label -> VARIABLE
-- On RECEIVE reduce production field_label -> VARIABLE
-- On READONLY reduce production field_label -> VARIABLE
-- On RBRACKET reduce production field_label -> VARIABLE
-- On RBRACE reduce production field_label -> VARIABLE
-- On RARROW reduce production field_label -> VARIABLE
-- On RAISE reduce production field_label -> VARIABLE
-- On QUERY reduce production field_label -> VARIABLE
-- On PREFIXOP reduce production field_label -> VARIABLE
-- On PAGE reduce production field_label -> VARIABLE
-- On OTHERWISE reduce production field_label -> VARIABLE
-- On ON reduce production field_label -> VARIABLE
-- On OFFER reduce production field_label -> VARIABLE
-- On MINUSDOT reduce production field_label -> VARIABLE
-- On MINUS reduce production field_label -> VARIABLE
-- On LXML reduce production field_label -> VARIABLE
-- On LPAREN reduce production field_label -> VARIABLE
-- On LINFUN reduce production field_label -> VARIABLE
-- On LENSSELECT reduce production field_label -> VARIABLE
-- On LENSPUT reduce production field_label -> VARIABLE
-- On LENSJOIN reduce production field_label -> VARIABLE
-- On LENSGET reduce production field_label -> VARIABLE
-- On LENSDROP reduce production field_label -> VARIABLE
-- On LENS reduce production field_label -> VARIABLE
-- On LEFTTRIANGLE reduce production field_label -> VARIABLE
-- On LBRACKET reduce production field_label -> VARIABLE
-- On LBRACE reduce production field_label -> VARIABLE
-- On INSERT reduce production field_label -> VARIABLE
-- On INFIXR9 reduce production field_label -> VARIABLE
-- On INFIXR8 reduce production field_label -> VARIABLE
-- On INFIXR7 reduce production field_label -> VARIABLE
-- On INFIXR6 reduce production field_label -> VARIABLE
-- On INFIXR5 reduce production field_label -> VARIABLE
-- On INFIXR4 reduce production field_label -> VARIABLE
-- On INFIXR3 reduce production field_label -> VARIABLE
-- On INFIXR2 reduce production field_label -> VARIABLE
-- On INFIXR1 reduce production field_label -> VARIABLE
-- On INFIXR0 reduce production field_label -> VARIABLE
-- On INFIXL9 reduce production field_label -> VARIABLE
-- On INFIXL8 reduce production field_label -> VARIABLE
-- On INFIXL7 reduce production field_label -> VARIABLE
-- On INFIXL6 reduce production field_label -> VARIABLE
-- On INFIXL5 reduce production field_label -> VARIABLE
-- On INFIXL4 reduce production field_label -> VARIABLE
-- On INFIXL3 reduce production field_label -> VARIABLE
-- On INFIXL2 reduce production field_label -> VARIABLE
-- On INFIXL1 reduce production field_label -> VARIABLE
-- On INFIXL0 reduce production field_label -> VARIABLE
-- On INFIX9 reduce production field_label -> VARIABLE
-- On INFIX8 reduce production field_label -> VARIABLE
-- On INFIX7 reduce production field_label -> VARIABLE
-- On INFIX6 reduce production field_label -> VARIABLE
-- On INFIX5 reduce production field_label -> VARIABLE
-- On INFIX4 reduce production field_label -> VARIABLE
-- On INFIX3 reduce production field_label -> VARIABLE
-- On INFIX2 reduce production field_label -> VARIABLE
-- On INFIX1 reduce production field_label -> VARIABLE
-- On INFIX0 reduce production field_label -> VARIABLE
-- On IF reduce production field_label -> VARIABLE
-- On HANDLER reduce production field_label -> VARIABLE
-- On HANDLE reduce production field_label -> VARIABLE
-- On FUN reduce production field_label -> VARIABLE
-- On FROM reduce production field_label -> VARIABLE
-- On FORMLET reduce production field_label -> VARIABLE
-- On FOR reduce production field_label -> VARIABLE
-- On FATRARROW reduce production field_label -> VARIABLE
-- On FALSE reduce production field_label -> VARIABLE
-- On ESCAPE reduce production field_label -> VARIABLE
-- On EQUALSTILDE reduce production field_label -> VARIABLE
-- On EQ reduce production field_label -> VARIABLE
-- On END reduce production field_label -> VARIABLE
-- On ELSE reduce production field_label -> VARIABLE
-- On DOTDOT reduce production field_label -> VARIABLE
-- On DOT reduce production field_label -> VARIABLE
-- On DOOP reduce production field_label -> VARIABLE
-- On DELETE_LEFT reduce production field_label -> VARIABLE
-- On DELETE reduce production field_label -> VARIABLE
-- On DEFAULT reduce production field_label -> VARIABLE
-- On DATABASE reduce production field_label -> VARIABLE
-- On CONSTRUCTOR reduce production field_label -> VARIABLE
-- On COMMA reduce production field_label -> VARIABLE
-- On COLONCOLON reduce production field_label -> VARIABLE
-- On COLON reduce production field_label -> VARIABLE
-- On CHAR reduce production field_label -> VARIABLE
-- On CASE reduce production field_label -> VARIABLE
-- On BY reduce production field_label -> VARIABLE
-- On BARRBRACE reduce production field_label -> VARIABLE
-- On BARPLUSRBRACKET reduce production field_label -> VARIABLE
-- On BARBAR reduce production field_label -> VARIABLE
-- On BARAMPRBRACKET reduce production field_label -> VARIABLE
-- On BANG reduce production field_label -> VARIABLE
-- On AS reduce production field_label -> VARIABLE
-- On AMPAMP reduce production field_label -> VARIABLE

State 89:
field_label -> UINTEGER . [ WITH VBAR VARIABLE VALUES UPDATE UINTEGER UFLOAT TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RPAREN RETURNING RECEIVE READONLY RBRACKET RBRACE RARROW RAISE QUERY PREFIXOP PAGE OTHERWISE ON OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IF HANDLER HANDLE FUN FROM FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE EQ END ELSE DOTDOT DOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARPLUSRBRACKET BARBAR BARAMPRBRACKET BANG AS AMPAMP ]
-- On WITH reduce production field_label -> UINTEGER
-- On VBAR reduce production field_label -> UINTEGER
-- On VARIABLE reduce production field_label -> UINTEGER
-- On VALUES reduce production field_label -> UINTEGER
-- On UPDATE reduce production field_label -> UINTEGER
-- On UINTEGER reduce production field_label -> UINTEGER
-- On UFLOAT reduce production field_label -> UINTEGER
-- On TRY reduce production field_label -> UINTEGER
-- On TRUE reduce production field_label -> UINTEGER
-- On TABLEKEYS reduce production field_label -> UINTEGER
-- On TABLE reduce production field_label -> UINTEGER
-- On SWITCH reduce production field_label -> UINTEGER
-- On STRING reduce production field_label -> UINTEGER
-- On SPAWNWAIT reduce production field_label -> UINTEGER
-- On SPAWNCLIENT reduce production field_label -> UINTEGER
-- On SPAWNAT reduce production field_label -> UINTEGER
-- On SPAWNANGELAT reduce production field_label -> UINTEGER
-- On SPAWNANGEL reduce production field_label -> UINTEGER
-- On SPAWN reduce production field_label -> UINTEGER
-- On SHALLOWHANDLER reduce production field_label -> UINTEGER
-- On SHALLOWHANDLE reduce production field_label -> UINTEGER
-- On SEMICOLON reduce production field_label -> UINTEGER
-- On SELECT reduce production field_label -> UINTEGER
-- On RPAREN reduce production field_label -> UINTEGER
-- On RETURNING reduce production field_label -> UINTEGER
-- On RECEIVE reduce production field_label -> UINTEGER
-- On READONLY reduce production field_label -> UINTEGER
-- On RBRACKET reduce production field_label -> UINTEGER
-- On RBRACE reduce production field_label -> UINTEGER
-- On RARROW reduce production field_label -> UINTEGER
-- On RAISE reduce production field_label -> UINTEGER
-- On QUERY reduce production field_label -> UINTEGER
-- On PREFIXOP reduce production field_label -> UINTEGER
-- On PAGE reduce production field_label -> UINTEGER
-- On OTHERWISE reduce production field_label -> UINTEGER
-- On ON reduce production field_label -> UINTEGER
-- On OFFER reduce production field_label -> UINTEGER
-- On MINUSDOT reduce production field_label -> UINTEGER
-- On MINUS reduce production field_label -> UINTEGER
-- On LXML reduce production field_label -> UINTEGER
-- On LPAREN reduce production field_label -> UINTEGER
-- On LINFUN reduce production field_label -> UINTEGER
-- On LENSSELECT reduce production field_label -> UINTEGER
-- On LENSPUT reduce production field_label -> UINTEGER
-- On LENSJOIN reduce production field_label -> UINTEGER
-- On LENSGET reduce production field_label -> UINTEGER
-- On LENSDROP reduce production field_label -> UINTEGER
-- On LENS reduce production field_label -> UINTEGER
-- On LEFTTRIANGLE reduce production field_label -> UINTEGER
-- On LBRACKET reduce production field_label -> UINTEGER
-- On LBRACE reduce production field_label -> UINTEGER
-- On INSERT reduce production field_label -> UINTEGER
-- On INFIXR9 reduce production field_label -> UINTEGER
-- On INFIXR8 reduce production field_label -> UINTEGER
-- On INFIXR7 reduce production field_label -> UINTEGER
-- On INFIXR6 reduce production field_label -> UINTEGER
-- On INFIXR5 reduce production field_label -> UINTEGER
-- On INFIXR4 reduce production field_label -> UINTEGER
-- On INFIXR3 reduce production field_label -> UINTEGER
-- On INFIXR2 reduce production field_label -> UINTEGER
-- On INFIXR1 reduce production field_label -> UINTEGER
-- On INFIXR0 reduce production field_label -> UINTEGER
-- On INFIXL9 reduce production field_label -> UINTEGER
-- On INFIXL8 reduce production field_label -> UINTEGER
-- On INFIXL7 reduce production field_label -> UINTEGER
-- On INFIXL6 reduce production field_label -> UINTEGER
-- On INFIXL5 reduce production field_label -> UINTEGER
-- On INFIXL4 reduce production field_label -> UINTEGER
-- On INFIXL3 reduce production field_label -> UINTEGER
-- On INFIXL2 reduce production field_label -> UINTEGER
-- On INFIXL1 reduce production field_label -> UINTEGER
-- On INFIXL0 reduce production field_label -> UINTEGER
-- On INFIX9 reduce production field_label -> UINTEGER
-- On INFIX8 reduce production field_label -> UINTEGER
-- On INFIX7 reduce production field_label -> UINTEGER
-- On INFIX6 reduce production field_label -> UINTEGER
-- On INFIX5 reduce production field_label -> UINTEGER
-- On INFIX4 reduce production field_label -> UINTEGER
-- On INFIX3 reduce production field_label -> UINTEGER
-- On INFIX2 reduce production field_label -> UINTEGER
-- On INFIX1 reduce production field_label -> UINTEGER
-- On INFIX0 reduce production field_label -> UINTEGER
-- On IF reduce production field_label -> UINTEGER
-- On HANDLER reduce production field_label -> UINTEGER
-- On HANDLE reduce production field_label -> UINTEGER
-- On FUN reduce production field_label -> UINTEGER
-- On FROM reduce production field_label -> UINTEGER
-- On FORMLET reduce production field_label -> UINTEGER
-- On FOR reduce production field_label -> UINTEGER
-- On FATRARROW reduce production field_label -> UINTEGER
-- On FALSE reduce production field_label -> UINTEGER
-- On ESCAPE reduce production field_label -> UINTEGER
-- On EQUALSTILDE reduce production field_label -> UINTEGER
-- On EQ reduce production field_label -> UINTEGER
-- On END reduce production field_label -> UINTEGER
-- On ELSE reduce production field_label -> UINTEGER
-- On DOTDOT reduce production field_label -> UINTEGER
-- On DOT reduce production field_label -> UINTEGER
-- On DOOP reduce production field_label -> UINTEGER
-- On DELETE_LEFT reduce production field_label -> UINTEGER
-- On DELETE reduce production field_label -> UINTEGER
-- On DEFAULT reduce production field_label -> UINTEGER
-- On DATABASE reduce production field_label -> UINTEGER
-- On CONSTRUCTOR reduce production field_label -> UINTEGER
-- On COMMA reduce production field_label -> UINTEGER
-- On COLONCOLON reduce production field_label -> UINTEGER
-- On COLON reduce production field_label -> UINTEGER
-- On CHAR reduce production field_label -> UINTEGER
-- On CASE reduce production field_label -> UINTEGER
-- On BY reduce production field_label -> UINTEGER
-- On BARRBRACE reduce production field_label -> UINTEGER
-- On BARPLUSRBRACKET reduce production field_label -> UINTEGER
-- On BARBAR reduce production field_label -> UINTEGER
-- On BARAMPRBRACKET reduce production field_label -> UINTEGER
-- On BANG reduce production field_label -> UINTEGER
-- On AS reduce production field_label -> UINTEGER
-- On AMPAMP reduce production field_label -> UINTEGER

State 90:
field_label -> STRING . [ WITH VBAR VARIABLE VALUES UPDATE UINTEGER UFLOAT TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RPAREN RETURNING RECEIVE READONLY RBRACKET RBRACE RARROW RAISE QUERY PREFIXOP PAGE OTHERWISE ON OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IF HANDLER HANDLE FUN FROM FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE EQ END ELSE DOTDOT DOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARPLUSRBRACKET BARBAR BARAMPRBRACKET BANG AS AMPAMP ]
-- On WITH reduce production field_label -> STRING
-- On VBAR reduce production field_label -> STRING
-- On VARIABLE reduce production field_label -> STRING
-- On VALUES reduce production field_label -> STRING
-- On UPDATE reduce production field_label -> STRING
-- On UINTEGER reduce production field_label -> STRING
-- On UFLOAT reduce production field_label -> STRING
-- On TRY reduce production field_label -> STRING
-- On TRUE reduce production field_label -> STRING
-- On TABLEKEYS reduce production field_label -> STRING
-- On TABLE reduce production field_label -> STRING
-- On SWITCH reduce production field_label -> STRING
-- On STRING reduce production field_label -> STRING
-- On SPAWNWAIT reduce production field_label -> STRING
-- On SPAWNCLIENT reduce production field_label -> STRING
-- On SPAWNAT reduce production field_label -> STRING
-- On SPAWNANGELAT reduce production field_label -> STRING
-- On SPAWNANGEL reduce production field_label -> STRING
-- On SPAWN reduce production field_label -> STRING
-- On SHALLOWHANDLER reduce production field_label -> STRING
-- On SHALLOWHANDLE reduce production field_label -> STRING
-- On SEMICOLON reduce production field_label -> STRING
-- On SELECT reduce production field_label -> STRING
-- On RPAREN reduce production field_label -> STRING
-- On RETURNING reduce production field_label -> STRING
-- On RECEIVE reduce production field_label -> STRING
-- On READONLY reduce production field_label -> STRING
-- On RBRACKET reduce production field_label -> STRING
-- On RBRACE reduce production field_label -> STRING
-- On RARROW reduce production field_label -> STRING
-- On RAISE reduce production field_label -> STRING
-- On QUERY reduce production field_label -> STRING
-- On PREFIXOP reduce production field_label -> STRING
-- On PAGE reduce production field_label -> STRING
-- On OTHERWISE reduce production field_label -> STRING
-- On ON reduce production field_label -> STRING
-- On OFFER reduce production field_label -> STRING
-- On MINUSDOT reduce production field_label -> STRING
-- On MINUS reduce production field_label -> STRING
-- On LXML reduce production field_label -> STRING
-- On LPAREN reduce production field_label -> STRING
-- On LINFUN reduce production field_label -> STRING
-- On LENSSELECT reduce production field_label -> STRING
-- On LENSPUT reduce production field_label -> STRING
-- On LENSJOIN reduce production field_label -> STRING
-- On LENSGET reduce production field_label -> STRING
-- On LENSDROP reduce production field_label -> STRING
-- On LENS reduce production field_label -> STRING
-- On LEFTTRIANGLE reduce production field_label -> STRING
-- On LBRACKET reduce production field_label -> STRING
-- On LBRACE reduce production field_label -> STRING
-- On INSERT reduce production field_label -> STRING
-- On INFIXR9 reduce production field_label -> STRING
-- On INFIXR8 reduce production field_label -> STRING
-- On INFIXR7 reduce production field_label -> STRING
-- On INFIXR6 reduce production field_label -> STRING
-- On INFIXR5 reduce production field_label -> STRING
-- On INFIXR4 reduce production field_label -> STRING
-- On INFIXR3 reduce production field_label -> STRING
-- On INFIXR2 reduce production field_label -> STRING
-- On INFIXR1 reduce production field_label -> STRING
-- On INFIXR0 reduce production field_label -> STRING
-- On INFIXL9 reduce production field_label -> STRING
-- On INFIXL8 reduce production field_label -> STRING
-- On INFIXL7 reduce production field_label -> STRING
-- On INFIXL6 reduce production field_label -> STRING
-- On INFIXL5 reduce production field_label -> STRING
-- On INFIXL4 reduce production field_label -> STRING
-- On INFIXL3 reduce production field_label -> STRING
-- On INFIXL2 reduce production field_label -> STRING
-- On INFIXL1 reduce production field_label -> STRING
-- On INFIXL0 reduce production field_label -> STRING
-- On INFIX9 reduce production field_label -> STRING
-- On INFIX8 reduce production field_label -> STRING
-- On INFIX7 reduce production field_label -> STRING
-- On INFIX6 reduce production field_label -> STRING
-- On INFIX5 reduce production field_label -> STRING
-- On INFIX4 reduce production field_label -> STRING
-- On INFIX3 reduce production field_label -> STRING
-- On INFIX2 reduce production field_label -> STRING
-- On INFIX1 reduce production field_label -> STRING
-- On INFIX0 reduce production field_label -> STRING
-- On IF reduce production field_label -> STRING
-- On HANDLER reduce production field_label -> STRING
-- On HANDLE reduce production field_label -> STRING
-- On FUN reduce production field_label -> STRING
-- On FROM reduce production field_label -> STRING
-- On FORMLET reduce production field_label -> STRING
-- On FOR reduce production field_label -> STRING
-- On FATRARROW reduce production field_label -> STRING
-- On FALSE reduce production field_label -> STRING
-- On ESCAPE reduce production field_label -> STRING
-- On EQUALSTILDE reduce production field_label -> STRING
-- On EQ reduce production field_label -> STRING
-- On END reduce production field_label -> STRING
-- On ELSE reduce production field_label -> STRING
-- On DOTDOT reduce production field_label -> STRING
-- On DOT reduce production field_label -> STRING
-- On DOOP reduce production field_label -> STRING
-- On DELETE_LEFT reduce production field_label -> STRING
-- On DELETE reduce production field_label -> STRING
-- On DEFAULT reduce production field_label -> STRING
-- On DATABASE reduce production field_label -> STRING
-- On CONSTRUCTOR reduce production field_label -> STRING
-- On COMMA reduce production field_label -> STRING
-- On COLONCOLON reduce production field_label -> STRING
-- On COLON reduce production field_label -> STRING
-- On CHAR reduce production field_label -> STRING
-- On CASE reduce production field_label -> STRING
-- On BY reduce production field_label -> STRING
-- On BARRBRACE reduce production field_label -> STRING
-- On BARPLUSRBRACKET reduce production field_label -> STRING
-- On BARBAR reduce production field_label -> STRING
-- On BARAMPRBRACKET reduce production field_label -> STRING
-- On BANG reduce production field_label -> STRING
-- On AS reduce production field_label -> STRING
-- On AMPAMP reduce production field_label -> STRING

State 91:
field_label -> CONSTRUCTOR . [ WITH VBAR VARIABLE VALUES UPDATE UINTEGER UFLOAT TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RPAREN RETURNING RECEIVE READONLY RBRACKET RBRACE RARROW RAISE QUERY PREFIXOP PAGE OTHERWISE ON OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IF HANDLER HANDLE FUN FROM FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE EQ END ELSE DOTDOT DOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARPLUSRBRACKET BARBAR BARAMPRBRACKET BANG AS AMPAMP ]
-- On WITH reduce production field_label -> CONSTRUCTOR
-- On VBAR reduce production field_label -> CONSTRUCTOR
-- On VARIABLE reduce production field_label -> CONSTRUCTOR
-- On VALUES reduce production field_label -> CONSTRUCTOR
-- On UPDATE reduce production field_label -> CONSTRUCTOR
-- On UINTEGER reduce production field_label -> CONSTRUCTOR
-- On UFLOAT reduce production field_label -> CONSTRUCTOR
-- On TRY reduce production field_label -> CONSTRUCTOR
-- On TRUE reduce production field_label -> CONSTRUCTOR
-- On TABLEKEYS reduce production field_label -> CONSTRUCTOR
-- On TABLE reduce production field_label -> CONSTRUCTOR
-- On SWITCH reduce production field_label -> CONSTRUCTOR
-- On STRING reduce production field_label -> CONSTRUCTOR
-- On SPAWNWAIT reduce production field_label -> CONSTRUCTOR
-- On SPAWNCLIENT reduce production field_label -> CONSTRUCTOR
-- On SPAWNAT reduce production field_label -> CONSTRUCTOR
-- On SPAWNANGELAT reduce production field_label -> CONSTRUCTOR
-- On SPAWNANGEL reduce production field_label -> CONSTRUCTOR
-- On SPAWN reduce production field_label -> CONSTRUCTOR
-- On SHALLOWHANDLER reduce production field_label -> CONSTRUCTOR
-- On SHALLOWHANDLE reduce production field_label -> CONSTRUCTOR
-- On SEMICOLON reduce production field_label -> CONSTRUCTOR
-- On SELECT reduce production field_label -> CONSTRUCTOR
-- On RPAREN reduce production field_label -> CONSTRUCTOR
-- On RETURNING reduce production field_label -> CONSTRUCTOR
-- On RECEIVE reduce production field_label -> CONSTRUCTOR
-- On READONLY reduce production field_label -> CONSTRUCTOR
-- On RBRACKET reduce production field_label -> CONSTRUCTOR
-- On RBRACE reduce production field_label -> CONSTRUCTOR
-- On RARROW reduce production field_label -> CONSTRUCTOR
-- On RAISE reduce production field_label -> CONSTRUCTOR
-- On QUERY reduce production field_label -> CONSTRUCTOR
-- On PREFIXOP reduce production field_label -> CONSTRUCTOR
-- On PAGE reduce production field_label -> CONSTRUCTOR
-- On OTHERWISE reduce production field_label -> CONSTRUCTOR
-- On ON reduce production field_label -> CONSTRUCTOR
-- On OFFER reduce production field_label -> CONSTRUCTOR
-- On MINUSDOT reduce production field_label -> CONSTRUCTOR
-- On MINUS reduce production field_label -> CONSTRUCTOR
-- On LXML reduce production field_label -> CONSTRUCTOR
-- On LPAREN reduce production field_label -> CONSTRUCTOR
-- On LINFUN reduce production field_label -> CONSTRUCTOR
-- On LENSSELECT reduce production field_label -> CONSTRUCTOR
-- On LENSPUT reduce production field_label -> CONSTRUCTOR
-- On LENSJOIN reduce production field_label -> CONSTRUCTOR
-- On LENSGET reduce production field_label -> CONSTRUCTOR
-- On LENSDROP reduce production field_label -> CONSTRUCTOR
-- On LENS reduce production field_label -> CONSTRUCTOR
-- On LEFTTRIANGLE reduce production field_label -> CONSTRUCTOR
-- On LBRACKET reduce production field_label -> CONSTRUCTOR
-- On LBRACE reduce production field_label -> CONSTRUCTOR
-- On INSERT reduce production field_label -> CONSTRUCTOR
-- On INFIXR9 reduce production field_label -> CONSTRUCTOR
-- On INFIXR8 reduce production field_label -> CONSTRUCTOR
-- On INFIXR7 reduce production field_label -> CONSTRUCTOR
-- On INFIXR6 reduce production field_label -> CONSTRUCTOR
-- On INFIXR5 reduce production field_label -> CONSTRUCTOR
-- On INFIXR4 reduce production field_label -> CONSTRUCTOR
-- On INFIXR3 reduce production field_label -> CONSTRUCTOR
-- On INFIXR2 reduce production field_label -> CONSTRUCTOR
-- On INFIXR1 reduce production field_label -> CONSTRUCTOR
-- On INFIXR0 reduce production field_label -> CONSTRUCTOR
-- On INFIXL9 reduce production field_label -> CONSTRUCTOR
-- On INFIXL8 reduce production field_label -> CONSTRUCTOR
-- On INFIXL7 reduce production field_label -> CONSTRUCTOR
-- On INFIXL6 reduce production field_label -> CONSTRUCTOR
-- On INFIXL5 reduce production field_label -> CONSTRUCTOR
-- On INFIXL4 reduce production field_label -> CONSTRUCTOR
-- On INFIXL3 reduce production field_label -> CONSTRUCTOR
-- On INFIXL2 reduce production field_label -> CONSTRUCTOR
-- On INFIXL1 reduce production field_label -> CONSTRUCTOR
-- On INFIXL0 reduce production field_label -> CONSTRUCTOR
-- On INFIX9 reduce production field_label -> CONSTRUCTOR
-- On INFIX8 reduce production field_label -> CONSTRUCTOR
-- On INFIX7 reduce production field_label -> CONSTRUCTOR
-- On INFIX6 reduce production field_label -> CONSTRUCTOR
-- On INFIX5 reduce production field_label -> CONSTRUCTOR
-- On INFIX4 reduce production field_label -> CONSTRUCTOR
-- On INFIX3 reduce production field_label -> CONSTRUCTOR
-- On INFIX2 reduce production field_label -> CONSTRUCTOR
-- On INFIX1 reduce production field_label -> CONSTRUCTOR
-- On INFIX0 reduce production field_label -> CONSTRUCTOR
-- On IF reduce production field_label -> CONSTRUCTOR
-- On HANDLER reduce production field_label -> CONSTRUCTOR
-- On HANDLE reduce production field_label -> CONSTRUCTOR
-- On FUN reduce production field_label -> CONSTRUCTOR
-- On FROM reduce production field_label -> CONSTRUCTOR
-- On FORMLET reduce production field_label -> CONSTRUCTOR
-- On FOR reduce production field_label -> CONSTRUCTOR
-- On FATRARROW reduce production field_label -> CONSTRUCTOR
-- On FALSE reduce production field_label -> CONSTRUCTOR
-- On ESCAPE reduce production field_label -> CONSTRUCTOR
-- On EQUALSTILDE reduce production field_label -> CONSTRUCTOR
-- On EQ reduce production field_label -> CONSTRUCTOR
-- On END reduce production field_label -> CONSTRUCTOR
-- On ELSE reduce production field_label -> CONSTRUCTOR
-- On DOTDOT reduce production field_label -> CONSTRUCTOR
-- On DOT reduce production field_label -> CONSTRUCTOR
-- On DOOP reduce production field_label -> CONSTRUCTOR
-- On DELETE_LEFT reduce production field_label -> CONSTRUCTOR
-- On DELETE reduce production field_label -> CONSTRUCTOR
-- On DEFAULT reduce production field_label -> CONSTRUCTOR
-- On DATABASE reduce production field_label -> CONSTRUCTOR
-- On CONSTRUCTOR reduce production field_label -> CONSTRUCTOR
-- On COMMA reduce production field_label -> CONSTRUCTOR
-- On COLONCOLON reduce production field_label -> CONSTRUCTOR
-- On COLON reduce production field_label -> CONSTRUCTOR
-- On CHAR reduce production field_label -> CONSTRUCTOR
-- On CASE reduce production field_label -> CONSTRUCTOR
-- On BY reduce production field_label -> CONSTRUCTOR
-- On BARRBRACE reduce production field_label -> CONSTRUCTOR
-- On BARPLUSRBRACKET reduce production field_label -> CONSTRUCTOR
-- On BARBAR reduce production field_label -> CONSTRUCTOR
-- On BARAMPRBRACKET reduce production field_label -> CONSTRUCTOR
-- On BANG reduce production field_label -> CONSTRUCTOR
-- On AS reduce production field_label -> CONSTRUCTOR
-- On AMPAMP reduce production field_label -> CONSTRUCTOR

State 92:
session_datatype -> LBRACKETPLUSBAR row . BARPLUSRBRACKET [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On BARPLUSRBRACKET shift to state 93

State 93:
session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On WHERE reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On VBAR reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On VAR reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On VALUES reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On TABLEKEYS reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On SHALLOWHANDLER reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On SEMICOLON reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On RPAREN reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On RETURNING reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On RBRACKET reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On RBRACE reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On OTHERWISE reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On OP reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On ON reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On LINFUN reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On LARROW reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On HANDLER reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On FUN reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On FROM reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On END reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On ELSE reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On DOTDOT reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On DOT reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On DELETE_LEFT reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On DELETE reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On DEFAULT reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On COMMA reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On COLON reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On CASE reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On BY reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On BARRBRACKET reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On BARRBRACE reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On BARPLUSRBRACKET reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On BARAMPRBRACKET reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET
-- On AS reduce production session_datatype -> LBRACKETPLUSBAR row BARPLUSRBRACKET

State 94:
row -> fields . [ RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET ]
-- On RPAREN reduce production row -> fields
-- On RBRACE reduce production row -> fields
-- On BARPLUSRBRACKET reduce production row -> fields
-- On BARAMPRBRACKET reduce production row -> fields

State 95:
field -> field_label . [ VBAR RPAREN RBRACE COMMA BARPLUSRBRACKET BARAMPRBRACKET ]
field -> field_label . fieldspec [ VBAR RPAREN RBRACE COMMA BARPLUSRBRACKET BARAMPRBRACKET ]
-- On MINUS shift to state 62
-- On LBRACE shift to state 63
-- On COLON shift to state 96
-- On fieldspec shift to state 228
-- On VBAR reduce production field -> field_label
-- On RPAREN reduce production field -> field_label
-- On RBRACE reduce production field -> field_label
-- On COMMA reduce production field -> field_label
-- On BARPLUSRBRACKET reduce production field -> field_label
-- On BARAMPRBRACKET reduce production field -> field_label

State 96:
fieldspec -> COLON . datatype [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 227

State 97:
primary_datatype -> LBRACKETBAR . vrow BARRBRACKET [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 53
-- On UNDERSCORE shift to state 54
-- On PERCENTVAR shift to state 55
-- On PERCENT shift to state 56
-- On LPAREN shift to state 57
-- On CONSTRUCTOR shift to state 61
-- On vrow shift to state 98
-- On vfields shift to state 100
-- On vfield shift to state 101
-- On row_var shift to state 104
-- On nonrec_row_var shift to state 86
-- On kinded_row_var shift to state 105
-- On BARRBRACKET reduce production vrow ->

State 98:
primary_datatype -> LBRACKETBAR vrow . BARRBRACKET [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On BARRBRACKET shift to state 99

State 99:
primary_datatype -> LBRACKETBAR vrow BARRBRACKET . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On WHERE reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On VBAR reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On VAR reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On VALUES reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On TABLEKEYS reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On SHALLOWHANDLER reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On SERVER reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On SEMICOLON reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On RPAREN reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On RETURNING reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On RBRACKET reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On RBRACE reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On RARROW reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On POSTFIXOP reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On OTHERWISE reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On OP reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On ON reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On NATIVE reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On LLARROW reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On LINFUN reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On LBRACE reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On LARROW reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR9 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR8 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR7 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR6 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR5 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR4 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR3 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR2 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR1 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR0 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL9 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL8 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL7 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL6 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL5 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL4 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL3 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL2 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL1 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL0 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX9 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX8 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX7 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX6 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX5 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX4 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX3 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX2 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX1 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX0 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On IN reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On HANDLER reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On FUN reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On FROM reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On EQ reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On END reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On ELSE reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On DOTDOT reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On DOT reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On DELETE_LEFT reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On DELETE reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On DEFAULT reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On COMMA reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On COLON reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On CLIENT reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On CASE reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On BY reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On BARRBRACKET reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On BARRBRACE reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On BARPLUSRBRACKET reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On BARAMPRBRACKET reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On AS reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET

State 100:
vrow -> vfields . [ BARRBRACKET ]
-- On BARRBRACKET reduce production vrow -> vfields

State 101:
vfields -> vfield . [ RPAREN BARRBRACKET ]
vfields -> vfield . VBAR vfields [ RPAREN BARRBRACKET ]
-- On VBAR shift to state 102
-- On RPAREN reduce production vfields -> vfield
-- On BARRBRACKET reduce production vfields -> vfield

State 102:
vfields -> vfield VBAR . vfields [ RPAREN BARRBRACKET ]
-- On VARIABLE shift to state 53
-- On UNDERSCORE shift to state 54
-- On PERCENTVAR shift to state 55
-- On PERCENT shift to state 56
-- On LPAREN shift to state 57
-- On CONSTRUCTOR shift to state 61
-- On vfields shift to state 103
-- On vfield shift to state 101
-- On row_var shift to state 104
-- On nonrec_row_var shift to state 86
-- On kinded_row_var shift to state 105

State 103:
vfields -> vfield VBAR vfields . [ RPAREN BARRBRACKET ]
-- On RPAREN reduce production vfields -> vfield VBAR vfields
-- On BARRBRACKET reduce production vfields -> vfield VBAR vfields

State 104:
kinded_row_var -> row_var . subkind [ RPAREN BARRBRACKET ]
vfields -> row_var . [ RPAREN BARRBRACKET ]
-- On COLONCOLON shift to state 78
-- On subkind shift to state 85
-- On RPAREN reduce production vfields -> row_var
-- On BARRBRACKET reduce production vfields -> row_var

State 105:
vfields -> kinded_row_var . [ RPAREN BARRBRACKET ]
-- On RPAREN reduce production vfields -> kinded_row_var
-- On BARRBRACKET reduce production vfields -> kinded_row_var

State 106:
session_datatype -> LBRACKETAMPBAR . row BARAMPRBRACKET [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VBAR shift to state 76
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On CONSTRUCTOR shift to state 91
-- On row shift to state 107
-- On fields shift to state 94
-- On field_label shift to state 95
-- On field shift to state 109
-- On BARAMPRBRACKET reduce production row ->

State 107:
session_datatype -> LBRACKETAMPBAR row . BARAMPRBRACKET [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On BARAMPRBRACKET shift to state 108

State 108:
session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On WHERE reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On VBAR reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On VAR reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On VALUES reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On TABLEKEYS reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On SHALLOWHANDLER reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On SEMICOLON reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On RPAREN reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On RETURNING reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On RBRACKET reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On RBRACE reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On OTHERWISE reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On OP reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On ON reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On LINFUN reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On LARROW reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On HANDLER reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On FUN reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On FROM reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On END reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On ELSE reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On DOTDOT reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On DOT reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On DELETE_LEFT reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On DELETE reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On DEFAULT reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On COMMA reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On COLON reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On CASE reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On BY reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On BARRBRACKET reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On BARRBRACE reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On BARPLUSRBRACKET reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On BARAMPRBRACKET reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET
-- On AS reduce production session_datatype -> LBRACKETAMPBAR row BARAMPRBRACKET

State 109:
fields -> field . [ RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET ]
fields -> field . VBAR row_var [ RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET ]
fields -> field . VBAR kinded_row_var [ RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET ]
fields -> field . COMMA fields [ RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VBAR shift to state 110
-- On COMMA shift to state 113
-- On RPAREN reduce production fields -> field
-- On RBRACE reduce production fields -> field
-- On BARPLUSRBRACKET reduce production fields -> field
-- On BARAMPRBRACKET reduce production fields -> field

State 110:
fields -> field VBAR . row_var [ RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET ]
fields -> field VBAR . kinded_row_var [ RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VARIABLE shift to state 53
-- On UNDERSCORE shift to state 54
-- On PERCENTVAR shift to state 55
-- On PERCENT shift to state 56
-- On LPAREN shift to state 57
-- On row_var shift to state 111
-- On nonrec_row_var shift to state 86
-- On kinded_row_var shift to state 112

State 111:
fields -> field VBAR row_var . [ RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET ]
kinded_row_var -> row_var . subkind [ RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET ]
-- On COLONCOLON shift to state 78
-- On subkind shift to state 85
-- On RPAREN reduce production fields -> field VBAR row_var
-- On RBRACE reduce production fields -> field VBAR row_var
-- On BARPLUSRBRACKET reduce production fields -> field VBAR row_var
-- On BARAMPRBRACKET reduce production fields -> field VBAR row_var

State 112:
fields -> field VBAR kinded_row_var . [ RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET ]
-- On RPAREN reduce production fields -> field VBAR kinded_row_var
-- On RBRACE reduce production fields -> field VBAR kinded_row_var
-- On BARPLUSRBRACKET reduce production fields -> field VBAR kinded_row_var
-- On BARAMPRBRACKET reduce production fields -> field VBAR kinded_row_var

State 113:
fields -> field COMMA . fields [ RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VBAR shift to state 76
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On CONSTRUCTOR shift to state 91
-- On fields shift to state 114
-- On field_label shift to state 95
-- On field shift to state 109

State 114:
fields -> field COMMA fields . [ RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET ]
-- On RPAREN reduce production fields -> field COMMA fields
-- On RBRACE reduce production fields -> field COMMA fields
-- On BARPLUSRBRACKET reduce production fields -> field COMMA fields
-- On BARAMPRBRACKET reduce production fields -> field COMMA fields

State 115:
primary_datatype -> LBRACKET . datatype RBRACKET [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 225

State 116:
forall_datatype -> FORALL . varlist DOT datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 117
-- On varlist shift to state 126
-- On typearg shift to state 222

State 117:
typearg -> VARIABLE . [ RPAREN DOT COMMA ]
typearg -> VARIABLE . kind [ RPAREN DOT COMMA ]
-- On COLONCOLON shift to state 118
-- On kind shift to state 125
-- On RPAREN reduce production typearg -> VARIABLE
-- On DOT reduce production typearg -> VARIABLE
-- On COMMA reduce production typearg -> VARIABLE

State 118:
kind -> COLONCOLON . CONSTRUCTOR LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN [ RPAREN DOT COMMA ]
kind -> COLONCOLON . CONSTRUCTOR [ RPAREN DOT COMMA ]
-- On CONSTRUCTOR shift to state 119

State 119:
kind -> COLONCOLON CONSTRUCTOR . LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN [ RPAREN DOT COMMA ]
kind -> COLONCOLON CONSTRUCTOR . [ RPAREN DOT COMMA ]
-- On LPAREN shift to state 120
-- On RPAREN reduce production kind -> COLONCOLON CONSTRUCTOR
-- On DOT reduce production kind -> COLONCOLON CONSTRUCTOR
-- On COMMA reduce production kind -> COLONCOLON CONSTRUCTOR

State 120:
kind -> COLONCOLON CONSTRUCTOR LPAREN . CONSTRUCTOR COMMA CONSTRUCTOR RPAREN [ RPAREN DOT COMMA ]
-- On CONSTRUCTOR shift to state 121

State 121:
kind -> COLONCOLON CONSTRUCTOR LPAREN CONSTRUCTOR . COMMA CONSTRUCTOR RPAREN [ RPAREN DOT COMMA ]
-- On COMMA shift to state 122

State 122:
kind -> COLONCOLON CONSTRUCTOR LPAREN CONSTRUCTOR COMMA . CONSTRUCTOR RPAREN [ RPAREN DOT COMMA ]
-- On CONSTRUCTOR shift to state 123

State 123:
kind -> COLONCOLON CONSTRUCTOR LPAREN CONSTRUCTOR COMMA CONSTRUCTOR . RPAREN [ RPAREN DOT COMMA ]
-- On RPAREN shift to state 124

State 124:
kind -> COLONCOLON CONSTRUCTOR LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN . [ RPAREN DOT COMMA ]
-- On RPAREN reduce production kind -> COLONCOLON CONSTRUCTOR LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On DOT reduce production kind -> COLONCOLON CONSTRUCTOR LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN
-- On COMMA reduce production kind -> COLONCOLON CONSTRUCTOR LPAREN CONSTRUCTOR COMMA CONSTRUCTOR RPAREN

State 125:
typearg -> VARIABLE kind . [ RPAREN DOT COMMA ]
-- On RPAREN reduce production typearg -> VARIABLE kind
-- On DOT reduce production typearg -> VARIABLE kind
-- On COMMA reduce production typearg -> VARIABLE kind

State 126:
forall_datatype -> FORALL varlist . DOT datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On DOT shift to state 127

State 127:
forall_datatype -> FORALL varlist DOT . datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 221

State 128:
session_datatype -> END . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production session_datatype -> END
-- On WHERE reduce production session_datatype -> END
-- On VBAR reduce production session_datatype -> END
-- On VAR reduce production session_datatype -> END
-- On VALUES reduce production session_datatype -> END
-- On TABLEKEYS reduce production session_datatype -> END
-- On SHALLOWHANDLER reduce production session_datatype -> END
-- On SEMICOLON reduce production session_datatype -> END
-- On RPAREN reduce production session_datatype -> END
-- On RETURNING reduce production session_datatype -> END
-- On RBRACKET reduce production session_datatype -> END
-- On RBRACE reduce production session_datatype -> END
-- On OTHERWISE reduce production session_datatype -> END
-- On OP reduce production session_datatype -> END
-- On ON reduce production session_datatype -> END
-- On LINFUN reduce production session_datatype -> END
-- On LARROW reduce production session_datatype -> END
-- On HANDLER reduce production session_datatype -> END
-- On FUN reduce production session_datatype -> END
-- On FROM reduce production session_datatype -> END
-- On END reduce production session_datatype -> END
-- On ELSE reduce production session_datatype -> END
-- On DOTDOT reduce production session_datatype -> END
-- On DOT reduce production session_datatype -> END
-- On DELETE_LEFT reduce production session_datatype -> END
-- On DELETE reduce production session_datatype -> END
-- On DEFAULT reduce production session_datatype -> END
-- On COMMA reduce production session_datatype -> END
-- On COLON reduce production session_datatype -> END
-- On CASE reduce production session_datatype -> END
-- On BY reduce production session_datatype -> END
-- On BARRBRACKET reduce production session_datatype -> END
-- On BARRBRACE reduce production session_datatype -> END
-- On BARPLUSRBRACKET reduce production session_datatype -> END
-- On BARAMPRBRACKET reduce production session_datatype -> END
-- On AS reduce production session_datatype -> END

State 129:
primary_datatype -> CONSTRUCTOR . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
primary_datatype -> CONSTRUCTOR . LPAREN type_arg_list RPAREN [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On LPAREN shift to state 130
-- On WITH reduce production primary_datatype -> CONSTRUCTOR
-- On WHERE reduce production primary_datatype -> CONSTRUCTOR
-- On VBAR reduce production primary_datatype -> CONSTRUCTOR
-- On VAR reduce production primary_datatype -> CONSTRUCTOR
-- On VALUES reduce production primary_datatype -> CONSTRUCTOR
-- On TABLEKEYS reduce production primary_datatype -> CONSTRUCTOR
-- On SHALLOWHANDLER reduce production primary_datatype -> CONSTRUCTOR
-- On SERVER reduce production primary_datatype -> CONSTRUCTOR
-- On SEMICOLON reduce production primary_datatype -> CONSTRUCTOR
-- On RPAREN reduce production primary_datatype -> CONSTRUCTOR
-- On RETURNING reduce production primary_datatype -> CONSTRUCTOR
-- On RBRACKET reduce production primary_datatype -> CONSTRUCTOR
-- On RBRACE reduce production primary_datatype -> CONSTRUCTOR
-- On RARROW reduce production primary_datatype -> CONSTRUCTOR
-- On POSTFIXOP reduce production primary_datatype -> CONSTRUCTOR
-- On OTHERWISE reduce production primary_datatype -> CONSTRUCTOR
-- On OP reduce production primary_datatype -> CONSTRUCTOR
-- On ON reduce production primary_datatype -> CONSTRUCTOR
-- On NATIVE reduce production primary_datatype -> CONSTRUCTOR
-- On LLARROW reduce production primary_datatype -> CONSTRUCTOR
-- On LINFUN reduce production primary_datatype -> CONSTRUCTOR
-- On LBRACE reduce production primary_datatype -> CONSTRUCTOR
-- On LARROW reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR9 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR8 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR7 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR6 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR5 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR4 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR3 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR2 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR1 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR0 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL9 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL8 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL7 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL6 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL5 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL4 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL3 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL2 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL1 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL0 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX9 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX8 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX7 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX6 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX5 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX4 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX3 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX2 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX1 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX0 reduce production primary_datatype -> CONSTRUCTOR
-- On IN reduce production primary_datatype -> CONSTRUCTOR
-- On HANDLER reduce production primary_datatype -> CONSTRUCTOR
-- On FUN reduce production primary_datatype -> CONSTRUCTOR
-- On FROM reduce production primary_datatype -> CONSTRUCTOR
-- On EQ reduce production primary_datatype -> CONSTRUCTOR
-- On END reduce production primary_datatype -> CONSTRUCTOR
-- On ELSE reduce production primary_datatype -> CONSTRUCTOR
-- On DOTDOT reduce production primary_datatype -> CONSTRUCTOR
-- On DOT reduce production primary_datatype -> CONSTRUCTOR
-- On DELETE_LEFT reduce production primary_datatype -> CONSTRUCTOR
-- On DELETE reduce production primary_datatype -> CONSTRUCTOR
-- On DEFAULT reduce production primary_datatype -> CONSTRUCTOR
-- On COMMA reduce production primary_datatype -> CONSTRUCTOR
-- On COLON reduce production primary_datatype -> CONSTRUCTOR
-- On CLIENT reduce production primary_datatype -> CONSTRUCTOR
-- On CASE reduce production primary_datatype -> CONSTRUCTOR
-- On BY reduce production primary_datatype -> CONSTRUCTOR
-- On BARRBRACKET reduce production primary_datatype -> CONSTRUCTOR
-- On BARRBRACE reduce production primary_datatype -> CONSTRUCTOR
-- On BARPLUSRBRACKET reduce production primary_datatype -> CONSTRUCTOR
-- On BARAMPRBRACKET reduce production primary_datatype -> CONSTRUCTOR
-- On AS reduce production primary_datatype -> CONSTRUCTOR

State 130:
primary_datatype -> CONSTRUCTOR LPAREN . type_arg_list RPAREN [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TYPE shift to state 131
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On ROW shift to state 204
-- On QUESTION shift to state 45
-- On PRESENCE shift to state 208
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On LBRACE shift to state 212
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On type_arg_list shift to state 215
-- On type_arg shift to state 217
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 220

State 131:
type_arg -> TYPE . LPAREN datatype RPAREN [ RPAREN COMMA ]
-- On LPAREN shift to state 132

State 132:
type_arg -> TYPE LPAREN . datatype RPAREN [ RPAREN COMMA ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 202

State 133:
session_datatype -> BANG . datatype DOT datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 199

State 134:
kinded_type_var -> type_var . subkind [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
primary_datatype -> type_var . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On COLONCOLON shift to state 78
-- On subkind shift to state 135
-- On WITH reduce production primary_datatype -> type_var
-- On WHERE reduce production primary_datatype -> type_var
-- On VBAR reduce production primary_datatype -> type_var
-- On VAR reduce production primary_datatype -> type_var
-- On VALUES reduce production primary_datatype -> type_var
-- On TABLEKEYS reduce production primary_datatype -> type_var
-- On SHALLOWHANDLER reduce production primary_datatype -> type_var
-- On SERVER reduce production primary_datatype -> type_var
-- On SEMICOLON reduce production primary_datatype -> type_var
-- On RPAREN reduce production primary_datatype -> type_var
-- On RETURNING reduce production primary_datatype -> type_var
-- On RBRACKET reduce production primary_datatype -> type_var
-- On RBRACE reduce production primary_datatype -> type_var
-- On RARROW reduce production primary_datatype -> type_var
-- On POSTFIXOP reduce production primary_datatype -> type_var
-- On OTHERWISE reduce production primary_datatype -> type_var
-- On OP reduce production primary_datatype -> type_var
-- On ON reduce production primary_datatype -> type_var
-- On NATIVE reduce production primary_datatype -> type_var
-- On LLARROW reduce production primary_datatype -> type_var
-- On LINFUN reduce production primary_datatype -> type_var
-- On LBRACE reduce production primary_datatype -> type_var
-- On LARROW reduce production primary_datatype -> type_var
-- On INFIXR9 reduce production primary_datatype -> type_var
-- On INFIXR8 reduce production primary_datatype -> type_var
-- On INFIXR7 reduce production primary_datatype -> type_var
-- On INFIXR6 reduce production primary_datatype -> type_var
-- On INFIXR5 reduce production primary_datatype -> type_var
-- On INFIXR4 reduce production primary_datatype -> type_var
-- On INFIXR3 reduce production primary_datatype -> type_var
-- On INFIXR2 reduce production primary_datatype -> type_var
-- On INFIXR1 reduce production primary_datatype -> type_var
-- On INFIXR0 reduce production primary_datatype -> type_var
-- On INFIXL9 reduce production primary_datatype -> type_var
-- On INFIXL8 reduce production primary_datatype -> type_var
-- On INFIXL7 reduce production primary_datatype -> type_var
-- On INFIXL6 reduce production primary_datatype -> type_var
-- On INFIXL5 reduce production primary_datatype -> type_var
-- On INFIXL4 reduce production primary_datatype -> type_var
-- On INFIXL3 reduce production primary_datatype -> type_var
-- On INFIXL2 reduce production primary_datatype -> type_var
-- On INFIXL1 reduce production primary_datatype -> type_var
-- On INFIXL0 reduce production primary_datatype -> type_var
-- On INFIX9 reduce production primary_datatype -> type_var
-- On INFIX8 reduce production primary_datatype -> type_var
-- On INFIX7 reduce production primary_datatype -> type_var
-- On INFIX6 reduce production primary_datatype -> type_var
-- On INFIX5 reduce production primary_datatype -> type_var
-- On INFIX4 reduce production primary_datatype -> type_var
-- On INFIX3 reduce production primary_datatype -> type_var
-- On INFIX2 reduce production primary_datatype -> type_var
-- On INFIX1 reduce production primary_datatype -> type_var
-- On INFIX0 reduce production primary_datatype -> type_var
-- On IN reduce production primary_datatype -> type_var
-- On HANDLER reduce production primary_datatype -> type_var
-- On FUN reduce production primary_datatype -> type_var
-- On FROM reduce production primary_datatype -> type_var
-- On EQ reduce production primary_datatype -> type_var
-- On END reduce production primary_datatype -> type_var
-- On ELSE reduce production primary_datatype -> type_var
-- On DOTDOT reduce production primary_datatype -> type_var
-- On DOT reduce production primary_datatype -> type_var
-- On DELETE_LEFT reduce production primary_datatype -> type_var
-- On DELETE reduce production primary_datatype -> type_var
-- On DEFAULT reduce production primary_datatype -> type_var
-- On COMMA reduce production primary_datatype -> type_var
-- On COLON reduce production primary_datatype -> type_var
-- On CLIENT reduce production primary_datatype -> type_var
-- On CASE reduce production primary_datatype -> type_var
-- On BY reduce production primary_datatype -> type_var
-- On BARRBRACKET reduce production primary_datatype -> type_var
-- On BARRBRACE reduce production primary_datatype -> type_var
-- On BARPLUSRBRACKET reduce production primary_datatype -> type_var
-- On BARAMPRBRACKET reduce production primary_datatype -> type_var
-- On AS reduce production primary_datatype -> type_var

State 135:
kinded_type_var -> type_var subkind . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production kinded_type_var -> type_var subkind
-- On WHERE reduce production kinded_type_var -> type_var subkind
-- On VBAR reduce production kinded_type_var -> type_var subkind
-- On VAR reduce production kinded_type_var -> type_var subkind
-- On VALUES reduce production kinded_type_var -> type_var subkind
-- On TABLEKEYS reduce production kinded_type_var -> type_var subkind
-- On SHALLOWHANDLER reduce production kinded_type_var -> type_var subkind
-- On SERVER reduce production kinded_type_var -> type_var subkind
-- On SEMICOLON reduce production kinded_type_var -> type_var subkind
-- On RPAREN reduce production kinded_type_var -> type_var subkind
-- On RETURNING reduce production kinded_type_var -> type_var subkind
-- On RBRACKET reduce production kinded_type_var -> type_var subkind
-- On RBRACE reduce production kinded_type_var -> type_var subkind
-- On RARROW reduce production kinded_type_var -> type_var subkind
-- On POSTFIXOP reduce production kinded_type_var -> type_var subkind
-- On OTHERWISE reduce production kinded_type_var -> type_var subkind
-- On OP reduce production kinded_type_var -> type_var subkind
-- On ON reduce production kinded_type_var -> type_var subkind
-- On NATIVE reduce production kinded_type_var -> type_var subkind
-- On LLARROW reduce production kinded_type_var -> type_var subkind
-- On LINFUN reduce production kinded_type_var -> type_var subkind
-- On LBRACE reduce production kinded_type_var -> type_var subkind
-- On LARROW reduce production kinded_type_var -> type_var subkind
-- On INFIXR9 reduce production kinded_type_var -> type_var subkind
-- On INFIXR8 reduce production kinded_type_var -> type_var subkind
-- On INFIXR7 reduce production kinded_type_var -> type_var subkind
-- On INFIXR6 reduce production kinded_type_var -> type_var subkind
-- On INFIXR5 reduce production kinded_type_var -> type_var subkind
-- On INFIXR4 reduce production kinded_type_var -> type_var subkind
-- On INFIXR3 reduce production kinded_type_var -> type_var subkind
-- On INFIXR2 reduce production kinded_type_var -> type_var subkind
-- On INFIXR1 reduce production kinded_type_var -> type_var subkind
-- On INFIXR0 reduce production kinded_type_var -> type_var subkind
-- On INFIXL9 reduce production kinded_type_var -> type_var subkind
-- On INFIXL8 reduce production kinded_type_var -> type_var subkind
-- On INFIXL7 reduce production kinded_type_var -> type_var subkind
-- On INFIXL6 reduce production kinded_type_var -> type_var subkind
-- On INFIXL5 reduce production kinded_type_var -> type_var subkind
-- On INFIXL4 reduce production kinded_type_var -> type_var subkind
-- On INFIXL3 reduce production kinded_type_var -> type_var subkind
-- On INFIXL2 reduce production kinded_type_var -> type_var subkind
-- On INFIXL1 reduce production kinded_type_var -> type_var subkind
-- On INFIXL0 reduce production kinded_type_var -> type_var subkind
-- On INFIX9 reduce production kinded_type_var -> type_var subkind
-- On INFIX8 reduce production kinded_type_var -> type_var subkind
-- On INFIX7 reduce production kinded_type_var -> type_var subkind
-- On INFIX6 reduce production kinded_type_var -> type_var subkind
-- On INFIX5 reduce production kinded_type_var -> type_var subkind
-- On INFIX4 reduce production kinded_type_var -> type_var subkind
-- On INFIX3 reduce production kinded_type_var -> type_var subkind
-- On INFIX2 reduce production kinded_type_var -> type_var subkind
-- On INFIX1 reduce production kinded_type_var -> type_var subkind
-- On INFIX0 reduce production kinded_type_var -> type_var subkind
-- On IN reduce production kinded_type_var -> type_var subkind
-- On HANDLER reduce production kinded_type_var -> type_var subkind
-- On FUN reduce production kinded_type_var -> type_var subkind
-- On FROM reduce production kinded_type_var -> type_var subkind
-- On EQ reduce production kinded_type_var -> type_var subkind
-- On END reduce production kinded_type_var -> type_var subkind
-- On ELSE reduce production kinded_type_var -> type_var subkind
-- On DOTDOT reduce production kinded_type_var -> type_var subkind
-- On DOT reduce production kinded_type_var -> type_var subkind
-- On DELETE_LEFT reduce production kinded_type_var -> type_var subkind
-- On DELETE reduce production kinded_type_var -> type_var subkind
-- On DEFAULT reduce production kinded_type_var -> type_var subkind
-- On COMMA reduce production kinded_type_var -> type_var subkind
-- On COLON reduce production kinded_type_var -> type_var subkind
-- On CLIENT reduce production kinded_type_var -> type_var subkind
-- On CASE reduce production kinded_type_var -> type_var subkind
-- On BY reduce production kinded_type_var -> type_var subkind
-- On BARRBRACKET reduce production kinded_type_var -> type_var subkind
-- On BARRBRACE reduce production kinded_type_var -> type_var subkind
-- On BARPLUSRBRACKET reduce production kinded_type_var -> type_var subkind
-- On BARAMPRBRACKET reduce production kinded_type_var -> type_var subkind
-- On AS reduce production kinded_type_var -> type_var subkind

State 136:
datatype -> straight_arrow . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production datatype -> straight_arrow
-- On WHERE reduce production datatype -> straight_arrow
-- On VBAR reduce production datatype -> straight_arrow
-- On VAR reduce production datatype -> straight_arrow
-- On VALUES reduce production datatype -> straight_arrow
-- On TABLEKEYS reduce production datatype -> straight_arrow
-- On SHALLOWHANDLER reduce production datatype -> straight_arrow
-- On SEMICOLON reduce production datatype -> straight_arrow
-- On RPAREN reduce production datatype -> straight_arrow
-- On RETURNING reduce production datatype -> straight_arrow
-- On RBRACKET reduce production datatype -> straight_arrow
-- On RBRACE reduce production datatype -> straight_arrow
-- On OTHERWISE reduce production datatype -> straight_arrow
-- On OP reduce production datatype -> straight_arrow
-- On ON reduce production datatype -> straight_arrow
-- On LINFUN reduce production datatype -> straight_arrow
-- On LARROW reduce production datatype -> straight_arrow
-- On HANDLER reduce production datatype -> straight_arrow
-- On FUN reduce production datatype -> straight_arrow
-- On FROM reduce production datatype -> straight_arrow
-- On END reduce production datatype -> straight_arrow
-- On ELSE reduce production datatype -> straight_arrow
-- On DOTDOT reduce production datatype -> straight_arrow
-- On DOT reduce production datatype -> straight_arrow
-- On DELETE_LEFT reduce production datatype -> straight_arrow
-- On DELETE reduce production datatype -> straight_arrow
-- On DEFAULT reduce production datatype -> straight_arrow
-- On COMMA reduce production datatype -> straight_arrow
-- On COLON reduce production datatype -> straight_arrow
-- On CASE reduce production datatype -> straight_arrow
-- On BY reduce production datatype -> straight_arrow
-- On BARRBRACKET reduce production datatype -> straight_arrow
-- On BARRBRACE reduce production datatype -> straight_arrow
-- On BARPLUSRBRACKET reduce production datatype -> straight_arrow
-- On BARAMPRBRACKET reduce production datatype -> straight_arrow
-- On AS reduce production datatype -> straight_arrow

State 137:
datatype -> squiggly_arrow . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production datatype -> squiggly_arrow
-- On WHERE reduce production datatype -> squiggly_arrow
-- On VBAR reduce production datatype -> squiggly_arrow
-- On VAR reduce production datatype -> squiggly_arrow
-- On VALUES reduce production datatype -> squiggly_arrow
-- On TABLEKEYS reduce production datatype -> squiggly_arrow
-- On SHALLOWHANDLER reduce production datatype -> squiggly_arrow
-- On SEMICOLON reduce production datatype -> squiggly_arrow
-- On RPAREN reduce production datatype -> squiggly_arrow
-- On RETURNING reduce production datatype -> squiggly_arrow
-- On RBRACKET reduce production datatype -> squiggly_arrow
-- On RBRACE reduce production datatype -> squiggly_arrow
-- On OTHERWISE reduce production datatype -> squiggly_arrow
-- On OP reduce production datatype -> squiggly_arrow
-- On ON reduce production datatype -> squiggly_arrow
-- On LINFUN reduce production datatype -> squiggly_arrow
-- On LARROW reduce production datatype -> squiggly_arrow
-- On HANDLER reduce production datatype -> squiggly_arrow
-- On FUN reduce production datatype -> squiggly_arrow
-- On FROM reduce production datatype -> squiggly_arrow
-- On END reduce production datatype -> squiggly_arrow
-- On ELSE reduce production datatype -> squiggly_arrow
-- On DOTDOT reduce production datatype -> squiggly_arrow
-- On DOT reduce production datatype -> squiggly_arrow
-- On DELETE_LEFT reduce production datatype -> squiggly_arrow
-- On DELETE reduce production datatype -> squiggly_arrow
-- On DEFAULT reduce production datatype -> squiggly_arrow
-- On COMMA reduce production datatype -> squiggly_arrow
-- On COLON reduce production datatype -> squiggly_arrow
-- On CASE reduce production datatype -> squiggly_arrow
-- On BY reduce production datatype -> squiggly_arrow
-- On BARRBRACKET reduce production datatype -> squiggly_arrow
-- On BARRBRACE reduce production datatype -> squiggly_arrow
-- On BARPLUSRBRACKET reduce production datatype -> squiggly_arrow
-- On BARAMPRBRACKET reduce production datatype -> squiggly_arrow
-- On AS reduce production datatype -> squiggly_arrow

State 138:
forall_datatype -> session_datatype . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production forall_datatype -> session_datatype
-- On WHERE reduce production forall_datatype -> session_datatype
-- On VBAR reduce production forall_datatype -> session_datatype
-- On VAR reduce production forall_datatype -> session_datatype
-- On VALUES reduce production forall_datatype -> session_datatype
-- On TABLEKEYS reduce production forall_datatype -> session_datatype
-- On SHALLOWHANDLER reduce production forall_datatype -> session_datatype
-- On SEMICOLON reduce production forall_datatype -> session_datatype
-- On RPAREN reduce production forall_datatype -> session_datatype
-- On RETURNING reduce production forall_datatype -> session_datatype
-- On RBRACKET reduce production forall_datatype -> session_datatype
-- On RBRACE reduce production forall_datatype -> session_datatype
-- On OTHERWISE reduce production forall_datatype -> session_datatype
-- On OP reduce production forall_datatype -> session_datatype
-- On ON reduce production forall_datatype -> session_datatype
-- On LINFUN reduce production forall_datatype -> session_datatype
-- On LARROW reduce production forall_datatype -> session_datatype
-- On HANDLER reduce production forall_datatype -> session_datatype
-- On FUN reduce production forall_datatype -> session_datatype
-- On FROM reduce production forall_datatype -> session_datatype
-- On END reduce production forall_datatype -> session_datatype
-- On ELSE reduce production forall_datatype -> session_datatype
-- On DOTDOT reduce production forall_datatype -> session_datatype
-- On DOT reduce production forall_datatype -> session_datatype
-- On DELETE_LEFT reduce production forall_datatype -> session_datatype
-- On DELETE reduce production forall_datatype -> session_datatype
-- On DEFAULT reduce production forall_datatype -> session_datatype
-- On COMMA reduce production forall_datatype -> session_datatype
-- On COLON reduce production forall_datatype -> session_datatype
-- On CASE reduce production forall_datatype -> session_datatype
-- On BY reduce production forall_datatype -> session_datatype
-- On BARRBRACKET reduce production forall_datatype -> session_datatype
-- On BARRBRACE reduce production forall_datatype -> session_datatype
-- On BARPLUSRBRACKET reduce production forall_datatype -> session_datatype
-- On BARAMPRBRACKET reduce production forall_datatype -> session_datatype
-- On AS reduce production forall_datatype -> session_datatype

State 139:
session_datatype -> primary_datatype . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production session_datatype -> primary_datatype
-- On WHERE reduce production session_datatype -> primary_datatype
-- On VBAR reduce production session_datatype -> primary_datatype
-- On VAR reduce production session_datatype -> primary_datatype
-- On VALUES reduce production session_datatype -> primary_datatype
-- On TABLEKEYS reduce production session_datatype -> primary_datatype
-- On SHALLOWHANDLER reduce production session_datatype -> primary_datatype
-- On SEMICOLON reduce production session_datatype -> primary_datatype
-- On RPAREN reduce production session_datatype -> primary_datatype
-- On RETURNING reduce production session_datatype -> primary_datatype
-- On RBRACKET reduce production session_datatype -> primary_datatype
-- On RBRACE reduce production session_datatype -> primary_datatype
-- On OTHERWISE reduce production session_datatype -> primary_datatype
-- On OP reduce production session_datatype -> primary_datatype
-- On ON reduce production session_datatype -> primary_datatype
-- On LINFUN reduce production session_datatype -> primary_datatype
-- On LARROW reduce production session_datatype -> primary_datatype
-- On HANDLER reduce production session_datatype -> primary_datatype
-- On FUN reduce production session_datatype -> primary_datatype
-- On FROM reduce production session_datatype -> primary_datatype
-- On END reduce production session_datatype -> primary_datatype
-- On ELSE reduce production session_datatype -> primary_datatype
-- On DOTDOT reduce production session_datatype -> primary_datatype
-- On DOT reduce production session_datatype -> primary_datatype
-- On DELETE_LEFT reduce production session_datatype -> primary_datatype
-- On DELETE reduce production session_datatype -> primary_datatype
-- On DEFAULT reduce production session_datatype -> primary_datatype
-- On COMMA reduce production session_datatype -> primary_datatype
-- On COLON reduce production session_datatype -> primary_datatype
-- On CASE reduce production session_datatype -> primary_datatype
-- On BY reduce production session_datatype -> primary_datatype
-- On BARRBRACKET reduce production session_datatype -> primary_datatype
-- On BARRBRACE reduce production session_datatype -> primary_datatype
-- On BARPLUSRBRACKET reduce production session_datatype -> primary_datatype
-- On BARAMPRBRACKET reduce production session_datatype -> primary_datatype
-- On AS reduce production session_datatype -> primary_datatype

State 140:
primary_datatype -> parenthesized_datatypes . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
squiggly_arrow -> parenthesized_datatypes . squig_arrow_prefix SQUIGRARROW datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
squiggly_arrow -> parenthesized_datatypes . squig_arrow_prefix SQUIGLOLLI datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
squiggly_arrow -> parenthesized_datatypes . SQUIGRARROW datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
squiggly_arrow -> parenthesized_datatypes . SQUIGLOLLI datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
straight_arrow -> parenthesized_datatypes . straight_arrow_prefix RARROW datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
straight_arrow -> parenthesized_datatypes . straight_arrow_prefix LOLLI datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
straight_arrow -> parenthesized_datatypes . RARROW datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
straight_arrow -> parenthesized_datatypes . LOLLI datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On TILDE shift to state 141
-- On SQUIGRARROW shift to state 145
-- On SQUIGLOLLI shift to state 150
-- On RARROW shift to state 152
-- On MINUS shift to state 154
-- On LOLLI shift to state 157
-- On LBRACE shift to state 159
-- On straight_arrow_prefix shift to state 187
-- On squig_arrow_prefix shift to state 192
-- On hear_arrow_prefix shift to state 197
-- On arrow_prefix shift to state 198
-- On WITH reduce production primary_datatype -> parenthesized_datatypes
-- On WHERE reduce production primary_datatype -> parenthesized_datatypes
-- On VBAR reduce production primary_datatype -> parenthesized_datatypes
-- On VAR reduce production primary_datatype -> parenthesized_datatypes
-- On VALUES reduce production primary_datatype -> parenthesized_datatypes
-- On TABLEKEYS reduce production primary_datatype -> parenthesized_datatypes
-- On SHALLOWHANDLER reduce production primary_datatype -> parenthesized_datatypes
-- On SEMICOLON reduce production primary_datatype -> parenthesized_datatypes
-- On RPAREN reduce production primary_datatype -> parenthesized_datatypes
-- On RETURNING reduce production primary_datatype -> parenthesized_datatypes
-- On RBRACKET reduce production primary_datatype -> parenthesized_datatypes
-- On RBRACE reduce production primary_datatype -> parenthesized_datatypes
-- On OTHERWISE reduce production primary_datatype -> parenthesized_datatypes
-- On OP reduce production primary_datatype -> parenthesized_datatypes
-- On ON reduce production primary_datatype -> parenthesized_datatypes
-- On LINFUN reduce production primary_datatype -> parenthesized_datatypes
-- On LARROW reduce production primary_datatype -> parenthesized_datatypes
-- On HANDLER reduce production primary_datatype -> parenthesized_datatypes
-- On FUN reduce production primary_datatype -> parenthesized_datatypes
-- On FROM reduce production primary_datatype -> parenthesized_datatypes
-- On END reduce production primary_datatype -> parenthesized_datatypes
-- On ELSE reduce production primary_datatype -> parenthesized_datatypes
-- On DOTDOT reduce production primary_datatype -> parenthesized_datatypes
-- On DOT reduce production primary_datatype -> parenthesized_datatypes
-- On DELETE_LEFT reduce production primary_datatype -> parenthesized_datatypes
-- On DELETE reduce production primary_datatype -> parenthesized_datatypes
-- On DEFAULT reduce production primary_datatype -> parenthesized_datatypes
-- On COMMA reduce production primary_datatype -> parenthesized_datatypes
-- On COLON reduce production primary_datatype -> parenthesized_datatypes
-- On CASE reduce production primary_datatype -> parenthesized_datatypes
-- On BY reduce production primary_datatype -> parenthesized_datatypes
-- On BARRBRACKET reduce production primary_datatype -> parenthesized_datatypes
-- On BARRBRACE reduce production primary_datatype -> parenthesized_datatypes
-- On BARPLUSRBRACKET reduce production primary_datatype -> parenthesized_datatypes
-- On BARAMPRBRACKET reduce production primary_datatype -> parenthesized_datatypes
-- On AS reduce production primary_datatype -> parenthesized_datatypes

State 141:
squig_arrow_prefix -> TILDE . nonrec_row_var [ SQUIGRARROW SQUIGLOLLI ]
squig_arrow_prefix -> TILDE . kinded_nonrec_row_var [ SQUIGRARROW SQUIGLOLLI ]
-- On VARIABLE shift to state 53
-- On UNDERSCORE shift to state 54
-- On PERCENTVAR shift to state 55
-- On PERCENT shift to state 56
-- On nonrec_row_var shift to state 142
-- On kinded_nonrec_row_var shift to state 144

State 142:
kinded_nonrec_row_var -> nonrec_row_var . subkind [ SQUIGRARROW SQUIGLOLLI ]
squig_arrow_prefix -> TILDE nonrec_row_var . [ SQUIGRARROW SQUIGLOLLI ]
-- On COLONCOLON shift to state 78
-- On subkind shift to state 143
-- On SQUIGRARROW reduce production squig_arrow_prefix -> TILDE nonrec_row_var
-- On SQUIGLOLLI reduce production squig_arrow_prefix -> TILDE nonrec_row_var

State 143:
kinded_nonrec_row_var -> nonrec_row_var subkind . [ SQUIGRARROW SQUIGLOLLI RBRACE RARROW LOLLI ]
-- On SQUIGRARROW reduce production kinded_nonrec_row_var -> nonrec_row_var subkind
-- On SQUIGLOLLI reduce production kinded_nonrec_row_var -> nonrec_row_var subkind
-- On RBRACE reduce production kinded_nonrec_row_var -> nonrec_row_var subkind
-- On RARROW reduce production kinded_nonrec_row_var -> nonrec_row_var subkind
-- On LOLLI reduce production kinded_nonrec_row_var -> nonrec_row_var subkind

State 144:
squig_arrow_prefix -> TILDE kinded_nonrec_row_var . [ SQUIGRARROW SQUIGLOLLI ]
-- On SQUIGRARROW reduce production squig_arrow_prefix -> TILDE kinded_nonrec_row_var
-- On SQUIGLOLLI reduce production squig_arrow_prefix -> TILDE kinded_nonrec_row_var

State 145:
squiggly_arrow -> parenthesized_datatypes SQUIGRARROW . datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 149

State 146:
datatype -> mu_datatype . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production datatype -> mu_datatype
-- On WHERE reduce production datatype -> mu_datatype
-- On VBAR reduce production datatype -> mu_datatype
-- On VAR reduce production datatype -> mu_datatype
-- On VALUES reduce production datatype -> mu_datatype
-- On TABLEKEYS reduce production datatype -> mu_datatype
-- On SHALLOWHANDLER reduce production datatype -> mu_datatype
-- On SEMICOLON reduce production datatype -> mu_datatype
-- On RPAREN reduce production datatype -> mu_datatype
-- On RETURNING reduce production datatype -> mu_datatype
-- On RBRACKET reduce production datatype -> mu_datatype
-- On RBRACE reduce production datatype -> mu_datatype
-- On OTHERWISE reduce production datatype -> mu_datatype
-- On OP reduce production datatype -> mu_datatype
-- On ON reduce production datatype -> mu_datatype
-- On LINFUN reduce production datatype -> mu_datatype
-- On LARROW reduce production datatype -> mu_datatype
-- On HANDLER reduce production datatype -> mu_datatype
-- On FUN reduce production datatype -> mu_datatype
-- On FROM reduce production datatype -> mu_datatype
-- On END reduce production datatype -> mu_datatype
-- On ELSE reduce production datatype -> mu_datatype
-- On DOTDOT reduce production datatype -> mu_datatype
-- On DOT reduce production datatype -> mu_datatype
-- On DELETE_LEFT reduce production datatype -> mu_datatype
-- On DELETE reduce production datatype -> mu_datatype
-- On DEFAULT reduce production datatype -> mu_datatype
-- On COMMA reduce production datatype -> mu_datatype
-- On COLON reduce production datatype -> mu_datatype
-- On CASE reduce production datatype -> mu_datatype
-- On BY reduce production datatype -> mu_datatype
-- On BARRBRACKET reduce production datatype -> mu_datatype
-- On BARRBRACE reduce production datatype -> mu_datatype
-- On BARPLUSRBRACKET reduce production datatype -> mu_datatype
-- On BARAMPRBRACKET reduce production datatype -> mu_datatype
-- On AS reduce production datatype -> mu_datatype

State 147:
primary_datatype -> kinded_type_var . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production primary_datatype -> kinded_type_var
-- On WHERE reduce production primary_datatype -> kinded_type_var
-- On VBAR reduce production primary_datatype -> kinded_type_var
-- On VAR reduce production primary_datatype -> kinded_type_var
-- On VALUES reduce production primary_datatype -> kinded_type_var
-- On TABLEKEYS reduce production primary_datatype -> kinded_type_var
-- On SHALLOWHANDLER reduce production primary_datatype -> kinded_type_var
-- On SERVER reduce production primary_datatype -> kinded_type_var
-- On SEMICOLON reduce production primary_datatype -> kinded_type_var
-- On RPAREN reduce production primary_datatype -> kinded_type_var
-- On RETURNING reduce production primary_datatype -> kinded_type_var
-- On RBRACKET reduce production primary_datatype -> kinded_type_var
-- On RBRACE reduce production primary_datatype -> kinded_type_var
-- On RARROW reduce production primary_datatype -> kinded_type_var
-- On POSTFIXOP reduce production primary_datatype -> kinded_type_var
-- On OTHERWISE reduce production primary_datatype -> kinded_type_var
-- On OP reduce production primary_datatype -> kinded_type_var
-- On ON reduce production primary_datatype -> kinded_type_var
-- On NATIVE reduce production primary_datatype -> kinded_type_var
-- On LLARROW reduce production primary_datatype -> kinded_type_var
-- On LINFUN reduce production primary_datatype -> kinded_type_var
-- On LBRACE reduce production primary_datatype -> kinded_type_var
-- On LARROW reduce production primary_datatype -> kinded_type_var
-- On INFIXR9 reduce production primary_datatype -> kinded_type_var
-- On INFIXR8 reduce production primary_datatype -> kinded_type_var
-- On INFIXR7 reduce production primary_datatype -> kinded_type_var
-- On INFIXR6 reduce production primary_datatype -> kinded_type_var
-- On INFIXR5 reduce production primary_datatype -> kinded_type_var
-- On INFIXR4 reduce production primary_datatype -> kinded_type_var
-- On INFIXR3 reduce production primary_datatype -> kinded_type_var
-- On INFIXR2 reduce production primary_datatype -> kinded_type_var
-- On INFIXR1 reduce production primary_datatype -> kinded_type_var
-- On INFIXR0 reduce production primary_datatype -> kinded_type_var
-- On INFIXL9 reduce production primary_datatype -> kinded_type_var
-- On INFIXL8 reduce production primary_datatype -> kinded_type_var
-- On INFIXL7 reduce production primary_datatype -> kinded_type_var
-- On INFIXL6 reduce production primary_datatype -> kinded_type_var
-- On INFIXL5 reduce production primary_datatype -> kinded_type_var
-- On INFIXL4 reduce production primary_datatype -> kinded_type_var
-- On INFIXL3 reduce production primary_datatype -> kinded_type_var
-- On INFIXL2 reduce production primary_datatype -> kinded_type_var
-- On INFIXL1 reduce production primary_datatype -> kinded_type_var
-- On INFIXL0 reduce production primary_datatype -> kinded_type_var
-- On INFIX9 reduce production primary_datatype -> kinded_type_var
-- On INFIX8 reduce production primary_datatype -> kinded_type_var
-- On INFIX7 reduce production primary_datatype -> kinded_type_var
-- On INFIX6 reduce production primary_datatype -> kinded_type_var
-- On INFIX5 reduce production primary_datatype -> kinded_type_var
-- On INFIX4 reduce production primary_datatype -> kinded_type_var
-- On INFIX3 reduce production primary_datatype -> kinded_type_var
-- On INFIX2 reduce production primary_datatype -> kinded_type_var
-- On INFIX1 reduce production primary_datatype -> kinded_type_var
-- On INFIX0 reduce production primary_datatype -> kinded_type_var
-- On IN reduce production primary_datatype -> kinded_type_var
-- On HANDLER reduce production primary_datatype -> kinded_type_var
-- On FUN reduce production primary_datatype -> kinded_type_var
-- On FROM reduce production primary_datatype -> kinded_type_var
-- On EQ reduce production primary_datatype -> kinded_type_var
-- On END reduce production primary_datatype -> kinded_type_var
-- On ELSE reduce production primary_datatype -> kinded_type_var
-- On DOTDOT reduce production primary_datatype -> kinded_type_var
-- On DOT reduce production primary_datatype -> kinded_type_var
-- On DELETE_LEFT reduce production primary_datatype -> kinded_type_var
-- On DELETE reduce production primary_datatype -> kinded_type_var
-- On DEFAULT reduce production primary_datatype -> kinded_type_var
-- On COMMA reduce production primary_datatype -> kinded_type_var
-- On COLON reduce production primary_datatype -> kinded_type_var
-- On CLIENT reduce production primary_datatype -> kinded_type_var
-- On CASE reduce production primary_datatype -> kinded_type_var
-- On BY reduce production primary_datatype -> kinded_type_var
-- On BARRBRACKET reduce production primary_datatype -> kinded_type_var
-- On BARRBRACE reduce production primary_datatype -> kinded_type_var
-- On BARPLUSRBRACKET reduce production primary_datatype -> kinded_type_var
-- On BARAMPRBRACKET reduce production primary_datatype -> kinded_type_var
-- On AS reduce production primary_datatype -> kinded_type_var

State 148:
mu_datatype -> forall_datatype . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production mu_datatype -> forall_datatype
-- On WHERE reduce production mu_datatype -> forall_datatype
-- On VBAR reduce production mu_datatype -> forall_datatype
-- On VAR reduce production mu_datatype -> forall_datatype
-- On VALUES reduce production mu_datatype -> forall_datatype
-- On TABLEKEYS reduce production mu_datatype -> forall_datatype
-- On SHALLOWHANDLER reduce production mu_datatype -> forall_datatype
-- On SEMICOLON reduce production mu_datatype -> forall_datatype
-- On RPAREN reduce production mu_datatype -> forall_datatype
-- On RETURNING reduce production mu_datatype -> forall_datatype
-- On RBRACKET reduce production mu_datatype -> forall_datatype
-- On RBRACE reduce production mu_datatype -> forall_datatype
-- On OTHERWISE reduce production mu_datatype -> forall_datatype
-- On OP reduce production mu_datatype -> forall_datatype
-- On ON reduce production mu_datatype -> forall_datatype
-- On LINFUN reduce production mu_datatype -> forall_datatype
-- On LARROW reduce production mu_datatype -> forall_datatype
-- On HANDLER reduce production mu_datatype -> forall_datatype
-- On FUN reduce production mu_datatype -> forall_datatype
-- On FROM reduce production mu_datatype -> forall_datatype
-- On END reduce production mu_datatype -> forall_datatype
-- On ELSE reduce production mu_datatype -> forall_datatype
-- On DOTDOT reduce production mu_datatype -> forall_datatype
-- On DOT reduce production mu_datatype -> forall_datatype
-- On DELETE_LEFT reduce production mu_datatype -> forall_datatype
-- On DELETE reduce production mu_datatype -> forall_datatype
-- On DEFAULT reduce production mu_datatype -> forall_datatype
-- On COMMA reduce production mu_datatype -> forall_datatype
-- On COLON reduce production mu_datatype -> forall_datatype
-- On CASE reduce production mu_datatype -> forall_datatype
-- On BY reduce production mu_datatype -> forall_datatype
-- On BARRBRACKET reduce production mu_datatype -> forall_datatype
-- On BARRBRACE reduce production mu_datatype -> forall_datatype
-- On BARPLUSRBRACKET reduce production mu_datatype -> forall_datatype
-- On BARAMPRBRACKET reduce production mu_datatype -> forall_datatype
-- On AS reduce production mu_datatype -> forall_datatype

State 149:
squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On WHERE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On VBAR reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On VAR reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On VALUES reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On TABLEKEYS reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On SHALLOWHANDLER reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On SEMICOLON reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On RPAREN reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On RETURNING reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On RBRACKET reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On RBRACE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On OTHERWISE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On OP reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On ON reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On LINFUN reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On LARROW reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On HANDLER reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On FUN reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On FROM reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On END reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On ELSE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On DOTDOT reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On DOT reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On DELETE_LEFT reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On DELETE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On DEFAULT reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On COMMA reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On COLON reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On CASE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On BY reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On BARRBRACKET reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On BARRBRACE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On BARPLUSRBRACKET reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On BARAMPRBRACKET reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On AS reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype

State 150:
squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI . datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 151

State 151:
squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On WHERE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On VBAR reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On VAR reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On VALUES reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On TABLEKEYS reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On SHALLOWHANDLER reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On SEMICOLON reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On RPAREN reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On RETURNING reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On RBRACKET reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On RBRACE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On OTHERWISE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On OP reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On ON reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On LINFUN reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On LARROW reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On HANDLER reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On FUN reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On FROM reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On END reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On ELSE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On DOTDOT reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On DOT reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On DELETE_LEFT reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On DELETE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On DEFAULT reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On COMMA reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On COLON reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On CASE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On BY reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On BARRBRACKET reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On BARRBRACE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On BARPLUSRBRACKET reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On BARAMPRBRACKET reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype
-- On AS reduce production squiggly_arrow -> parenthesized_datatypes SQUIGLOLLI datatype

State 152:
straight_arrow -> parenthesized_datatypes RARROW . datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 153

State 153:
straight_arrow -> parenthesized_datatypes RARROW datatype . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On WHERE reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On VBAR reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On VAR reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On VALUES reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On TABLEKEYS reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On SHALLOWHANDLER reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On SEMICOLON reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On RPAREN reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On RETURNING reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On RBRACKET reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On RBRACE reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On OTHERWISE reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On OP reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On ON reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On LINFUN reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On LARROW reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On HANDLER reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On FUN reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On FROM reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On END reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On ELSE reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On DOTDOT reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On DOT reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On DELETE_LEFT reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On DELETE reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On DEFAULT reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On COMMA reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On COLON reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On CASE reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On BY reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On BARRBRACKET reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On BARRBRACE reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On BARPLUSRBRACKET reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On BARAMPRBRACKET reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On AS reduce production straight_arrow -> parenthesized_datatypes RARROW datatype

State 154:
straight_arrow_prefix -> MINUS . nonrec_row_var [ RARROW LOLLI ]
straight_arrow_prefix -> MINUS . kinded_nonrec_row_var [ RARROW LOLLI ]
-- On VARIABLE shift to state 53
-- On UNDERSCORE shift to state 54
-- On PERCENTVAR shift to state 55
-- On PERCENT shift to state 56
-- On nonrec_row_var shift to state 155
-- On kinded_nonrec_row_var shift to state 156

State 155:
kinded_nonrec_row_var -> nonrec_row_var . subkind [ RARROW LOLLI ]
straight_arrow_prefix -> MINUS nonrec_row_var . [ RARROW LOLLI ]
-- On COLONCOLON shift to state 78
-- On subkind shift to state 143
-- On RARROW reduce production straight_arrow_prefix -> MINUS nonrec_row_var
-- On LOLLI reduce production straight_arrow_prefix -> MINUS nonrec_row_var

State 156:
straight_arrow_prefix -> MINUS kinded_nonrec_row_var . [ RARROW LOLLI ]
-- On RARROW reduce production straight_arrow_prefix -> MINUS kinded_nonrec_row_var
-- On LOLLI reduce production straight_arrow_prefix -> MINUS kinded_nonrec_row_var

State 157:
straight_arrow -> parenthesized_datatypes LOLLI . datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 158

State 158:
straight_arrow -> parenthesized_datatypes LOLLI datatype . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On WHERE reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On VBAR reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On VAR reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On VALUES reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On TABLEKEYS reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On SHALLOWHANDLER reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On SEMICOLON reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On RPAREN reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On RETURNING reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On RBRACKET reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On RBRACE reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On OTHERWISE reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On OP reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On ON reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On LINFUN reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On LARROW reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On HANDLER reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On FUN reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On FROM reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On END reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On ELSE reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On DOTDOT reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On DOT reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On DELETE_LEFT reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On DELETE reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On DEFAULT reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On COMMA reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On COLON reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On CASE reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On BY reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On BARRBRACKET reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On BARRBRACE reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On BARPLUSRBRACKET reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On BARAMPRBRACKET reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype
-- On AS reduce production straight_arrow -> parenthesized_datatypes LOLLI datatype

State 159:
arrow_prefix -> LBRACE . RBRACE [ SQUIGRARROW SQUIGLOLLI RARROW LOLLI ]
arrow_prefix -> LBRACE . efields RBRACE [ SQUIGRARROW SQUIGLOLLI RARROW LOLLI ]
hear_arrow_prefix -> LBRACE . COLON datatype COMMA efields RBRACE [ SQUIGRARROW SQUIGLOLLI ]
hear_arrow_prefix -> LBRACE . COLON datatype RBRACE [ SQUIGRARROW SQUIGLOLLI ]
hear_arrow_prefix -> LBRACE . COLON datatype VBAR nonrec_row_var RBRACE [ SQUIGRARROW SQUIGLOLLI ]
hear_arrow_prefix -> LBRACE . COLON datatype VBAR kinded_nonrec_row_var RBRACE [ SQUIGRARROW SQUIGLOLLI ]
-- On VBAR shift to state 160
-- On VARIABLE shift to state 163
-- On RBRACE shift to state 164
-- On CONSTRUCTOR shift to state 165
-- On COLON shift to state 166
-- On efields shift to state 185
-- On efield shift to state 177
-- On effect_label shift to state 183

State 160:
efields -> VBAR . nonrec_row_var [ RBRACE ]
efields -> VBAR . kinded_nonrec_row_var [ RBRACE ]
-- On VARIABLE shift to state 53
-- On UNDERSCORE shift to state 54
-- On PERCENTVAR shift to state 55
-- On PERCENT shift to state 56
-- On nonrec_row_var shift to state 161
-- On kinded_nonrec_row_var shift to state 162

State 161:
efields -> VBAR nonrec_row_var . [ RBRACE ]
kinded_nonrec_row_var -> nonrec_row_var . subkind [ RBRACE ]
-- On COLONCOLON shift to state 78
-- On subkind shift to state 143
-- On RBRACE reduce production efields -> VBAR nonrec_row_var

State 162:
efields -> VBAR kinded_nonrec_row_var . [ RBRACE ]
-- On RBRACE reduce production efields -> VBAR kinded_nonrec_row_var

State 163:
effect_label -> VARIABLE . [ VBAR RBRACE MINUS LBRACE COMMA COLON ]
-- On VBAR reduce production effect_label -> VARIABLE
-- On RBRACE reduce production effect_label -> VARIABLE
-- On MINUS reduce production effect_label -> VARIABLE
-- On LBRACE reduce production effect_label -> VARIABLE
-- On COMMA reduce production effect_label -> VARIABLE
-- On COLON reduce production effect_label -> VARIABLE

State 164:
arrow_prefix -> LBRACE RBRACE . [ SQUIGRARROW SQUIGLOLLI RARROW LOLLI ]
-- On SQUIGRARROW reduce production arrow_prefix -> LBRACE RBRACE
-- On SQUIGLOLLI reduce production arrow_prefix -> LBRACE RBRACE
-- On RARROW reduce production arrow_prefix -> LBRACE RBRACE
-- On LOLLI reduce production arrow_prefix -> LBRACE RBRACE

State 165:
effect_label -> CONSTRUCTOR . [ VBAR RBRACE MINUS LBRACE COMMA COLON ]
-- On VBAR reduce production effect_label -> CONSTRUCTOR
-- On RBRACE reduce production effect_label -> CONSTRUCTOR
-- On MINUS reduce production effect_label -> CONSTRUCTOR
-- On LBRACE reduce production effect_label -> CONSTRUCTOR
-- On COMMA reduce production effect_label -> CONSTRUCTOR
-- On COLON reduce production effect_label -> CONSTRUCTOR

State 166:
hear_arrow_prefix -> LBRACE COLON . datatype COMMA efields RBRACE [ SQUIGRARROW SQUIGLOLLI ]
hear_arrow_prefix -> LBRACE COLON . datatype RBRACE [ SQUIGRARROW SQUIGLOLLI ]
hear_arrow_prefix -> LBRACE COLON . datatype VBAR nonrec_row_var RBRACE [ SQUIGRARROW SQUIGLOLLI ]
hear_arrow_prefix -> LBRACE COLON . datatype VBAR kinded_nonrec_row_var RBRACE [ SQUIGRARROW SQUIGLOLLI ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 167

State 167:
hear_arrow_prefix -> LBRACE COLON datatype . COMMA efields RBRACE [ SQUIGRARROW SQUIGLOLLI ]
hear_arrow_prefix -> LBRACE COLON datatype . RBRACE [ SQUIGRARROW SQUIGLOLLI ]
hear_arrow_prefix -> LBRACE COLON datatype . VBAR nonrec_row_var RBRACE [ SQUIGRARROW SQUIGLOLLI ]
hear_arrow_prefix -> LBRACE COLON datatype . VBAR kinded_nonrec_row_var RBRACE [ SQUIGRARROW SQUIGLOLLI ]
-- On VBAR shift to state 168
-- On RBRACE shift to state 173
-- On COMMA shift to state 174

State 168:
hear_arrow_prefix -> LBRACE COLON datatype VBAR . nonrec_row_var RBRACE [ SQUIGRARROW SQUIGLOLLI ]
hear_arrow_prefix -> LBRACE COLON datatype VBAR . kinded_nonrec_row_var RBRACE [ SQUIGRARROW SQUIGLOLLI ]
-- On VARIABLE shift to state 53
-- On UNDERSCORE shift to state 54
-- On PERCENTVAR shift to state 55
-- On PERCENT shift to state 56
-- On nonrec_row_var shift to state 169
-- On kinded_nonrec_row_var shift to state 171

State 169:
hear_arrow_prefix -> LBRACE COLON datatype VBAR nonrec_row_var . RBRACE [ SQUIGRARROW SQUIGLOLLI ]
kinded_nonrec_row_var -> nonrec_row_var . subkind [ RBRACE ]
-- On RBRACE shift to state 170
-- On COLONCOLON shift to state 78
-- On subkind shift to state 143

State 170:
hear_arrow_prefix -> LBRACE COLON datatype VBAR nonrec_row_var RBRACE . [ SQUIGRARROW SQUIGLOLLI ]
-- On SQUIGRARROW reduce production hear_arrow_prefix -> LBRACE COLON datatype VBAR nonrec_row_var RBRACE
-- On SQUIGLOLLI reduce production hear_arrow_prefix -> LBRACE COLON datatype VBAR nonrec_row_var RBRACE

State 171:
hear_arrow_prefix -> LBRACE COLON datatype VBAR kinded_nonrec_row_var . RBRACE [ SQUIGRARROW SQUIGLOLLI ]
-- On RBRACE shift to state 172

State 172:
hear_arrow_prefix -> LBRACE COLON datatype VBAR kinded_nonrec_row_var RBRACE . [ SQUIGRARROW SQUIGLOLLI ]
-- On SQUIGRARROW reduce production hear_arrow_prefix -> LBRACE COLON datatype VBAR kinded_nonrec_row_var RBRACE
-- On SQUIGLOLLI reduce production hear_arrow_prefix -> LBRACE COLON datatype VBAR kinded_nonrec_row_var RBRACE

State 173:
hear_arrow_prefix -> LBRACE COLON datatype RBRACE . [ SQUIGRARROW SQUIGLOLLI ]
-- On SQUIGRARROW reduce production hear_arrow_prefix -> LBRACE COLON datatype RBRACE
-- On SQUIGLOLLI reduce production hear_arrow_prefix -> LBRACE COLON datatype RBRACE

State 174:
hear_arrow_prefix -> LBRACE COLON datatype COMMA . efields RBRACE [ SQUIGRARROW SQUIGLOLLI ]
-- On VBAR shift to state 160
-- On VARIABLE shift to state 163
-- On CONSTRUCTOR shift to state 165
-- On efields shift to state 175
-- On efield shift to state 177
-- On effect_label shift to state 183

State 175:
hear_arrow_prefix -> LBRACE COLON datatype COMMA efields . RBRACE [ SQUIGRARROW SQUIGLOLLI ]
-- On RBRACE shift to state 176

State 176:
hear_arrow_prefix -> LBRACE COLON datatype COMMA efields RBRACE . [ SQUIGRARROW SQUIGLOLLI ]
-- On SQUIGRARROW reduce production hear_arrow_prefix -> LBRACE COLON datatype COMMA efields RBRACE
-- On SQUIGLOLLI reduce production hear_arrow_prefix -> LBRACE COLON datatype COMMA efields RBRACE

State 177:
efields -> efield . [ RBRACE ]
efields -> efield . VBAR nonrec_row_var [ RBRACE ]
efields -> efield . VBAR kinded_nonrec_row_var [ RBRACE ]
efields -> efield . COMMA efields [ RBRACE ]
-- On VBAR shift to state 178
-- On COMMA shift to state 181
-- On RBRACE reduce production efields -> efield

State 178:
efields -> efield VBAR . nonrec_row_var [ RBRACE ]
efields -> efield VBAR . kinded_nonrec_row_var [ RBRACE ]
-- On VARIABLE shift to state 53
-- On UNDERSCORE shift to state 54
-- On PERCENTVAR shift to state 55
-- On PERCENT shift to state 56
-- On nonrec_row_var shift to state 179
-- On kinded_nonrec_row_var shift to state 180

State 179:
efields -> efield VBAR nonrec_row_var . [ RBRACE ]
kinded_nonrec_row_var -> nonrec_row_var . subkind [ RBRACE ]
-- On COLONCOLON shift to state 78
-- On subkind shift to state 143
-- On RBRACE reduce production efields -> efield VBAR nonrec_row_var

State 180:
efields -> efield VBAR kinded_nonrec_row_var . [ RBRACE ]
-- On RBRACE reduce production efields -> efield VBAR kinded_nonrec_row_var

State 181:
efields -> efield COMMA . efields [ RBRACE ]
-- On VBAR shift to state 160
-- On VARIABLE shift to state 163
-- On CONSTRUCTOR shift to state 165
-- On efields shift to state 182
-- On efield shift to state 177
-- On effect_label shift to state 183

State 182:
efields -> efield COMMA efields . [ RBRACE ]
-- On RBRACE reduce production efields -> efield COMMA efields

State 183:
efield -> effect_label . [ VBAR RBRACE COMMA ]
efield -> effect_label . fieldspec [ VBAR RBRACE COMMA ]
-- On MINUS shift to state 62
-- On LBRACE shift to state 63
-- On COLON shift to state 96
-- On fieldspec shift to state 184
-- On VBAR reduce production efield -> effect_label
-- On RBRACE reduce production efield -> effect_label
-- On COMMA reduce production efield -> effect_label

State 184:
efield -> effect_label fieldspec . [ VBAR RBRACE COMMA ]
-- On VBAR reduce production efield -> effect_label fieldspec
-- On RBRACE reduce production efield -> effect_label fieldspec
-- On COMMA reduce production efield -> effect_label fieldspec

State 185:
arrow_prefix -> LBRACE efields . RBRACE [ SQUIGRARROW SQUIGLOLLI RARROW LOLLI ]
-- On RBRACE shift to state 186

State 186:
arrow_prefix -> LBRACE efields RBRACE . [ SQUIGRARROW SQUIGLOLLI RARROW LOLLI ]
-- On SQUIGRARROW reduce production arrow_prefix -> LBRACE efields RBRACE
-- On SQUIGLOLLI reduce production arrow_prefix -> LBRACE efields RBRACE
-- On RARROW reduce production arrow_prefix -> LBRACE efields RBRACE
-- On LOLLI reduce production arrow_prefix -> LBRACE efields RBRACE

State 187:
straight_arrow -> parenthesized_datatypes straight_arrow_prefix . RARROW datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
straight_arrow -> parenthesized_datatypes straight_arrow_prefix . LOLLI datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On RARROW shift to state 188
-- On LOLLI shift to state 190

State 188:
straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW . datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 189

State 189:
straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On WHERE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On VBAR reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On VAR reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On VALUES reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On TABLEKEYS reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On SHALLOWHANDLER reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On SEMICOLON reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On RPAREN reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On RETURNING reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On RBRACKET reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On RBRACE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On OTHERWISE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On OP reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On ON reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On LINFUN reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On LARROW reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On HANDLER reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On FUN reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On FROM reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On END reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On ELSE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On DOTDOT reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On DOT reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On DELETE_LEFT reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On DELETE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On DEFAULT reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On COMMA reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On COLON reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On CASE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On BY reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On BARRBRACKET reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On BARRBRACE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On BARPLUSRBRACKET reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On BARAMPRBRACKET reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On AS reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype

State 190:
straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI . datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 191

State 191:
straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On WHERE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On VBAR reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On VAR reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On VALUES reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On TABLEKEYS reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On SHALLOWHANDLER reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On SEMICOLON reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On RPAREN reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On RETURNING reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On RBRACKET reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On RBRACE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On OTHERWISE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On OP reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On ON reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On LINFUN reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On LARROW reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On HANDLER reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On FUN reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On FROM reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On END reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On ELSE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On DOTDOT reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On DOT reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On DELETE_LEFT reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On DELETE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On DEFAULT reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On COMMA reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On COLON reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On CASE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On BY reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On BARRBRACKET reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On BARRBRACE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On BARPLUSRBRACKET reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On BARAMPRBRACKET reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype
-- On AS reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix LOLLI datatype

State 192:
squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix . SQUIGRARROW datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix . SQUIGLOLLI datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On SQUIGRARROW shift to state 193
-- On SQUIGLOLLI shift to state 195

State 193:
squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW . datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 194

State 194:
squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On WHERE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On VBAR reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On VAR reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On VALUES reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On TABLEKEYS reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On SHALLOWHANDLER reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On SEMICOLON reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On RPAREN reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On RETURNING reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On RBRACKET reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On RBRACE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On OTHERWISE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On OP reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On ON reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On LINFUN reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On LARROW reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On HANDLER reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On FUN reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On FROM reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On END reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On ELSE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On DOTDOT reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On DOT reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On DELETE_LEFT reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On DELETE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On DEFAULT reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On COMMA reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On COLON reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On CASE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On BY reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On BARRBRACKET reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On BARRBRACE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On BARPLUSRBRACKET reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On BARAMPRBRACKET reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On AS reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype

State 195:
squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI . datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 196

State 196:
squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On WHERE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On VBAR reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On VAR reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On VALUES reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On TABLEKEYS reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On SHALLOWHANDLER reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On SEMICOLON reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On RPAREN reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On RETURNING reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On RBRACKET reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On RBRACE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On OTHERWISE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On OP reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On ON reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On LINFUN reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On LARROW reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On HANDLER reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On FUN reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On FROM reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On END reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On ELSE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On DOTDOT reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On DOT reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On DELETE_LEFT reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On DELETE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On DEFAULT reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On COMMA reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On COLON reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On CASE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On BY reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On BARRBRACKET reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On BARRBRACE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On BARPLUSRBRACKET reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On BARAMPRBRACKET reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype
-- On AS reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGLOLLI datatype

State 197:
squig_arrow_prefix -> hear_arrow_prefix . [ SQUIGRARROW SQUIGLOLLI ]
-- On SQUIGRARROW reduce production squig_arrow_prefix -> hear_arrow_prefix
-- On SQUIGLOLLI reduce production squig_arrow_prefix -> hear_arrow_prefix

State 198:
squig_arrow_prefix -> arrow_prefix . [ SQUIGRARROW SQUIGLOLLI ]
straight_arrow_prefix -> arrow_prefix . [ RARROW LOLLI ]
-- On SQUIGRARROW reduce production squig_arrow_prefix -> arrow_prefix
-- On SQUIGLOLLI reduce production squig_arrow_prefix -> arrow_prefix
-- On RARROW reduce production straight_arrow_prefix -> arrow_prefix
-- On LOLLI reduce production straight_arrow_prefix -> arrow_prefix

State 199:
session_datatype -> BANG datatype . DOT datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On DOT shift to state 200

State 200:
session_datatype -> BANG datatype DOT . datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 201

State 201:
session_datatype -> BANG datatype DOT datatype . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production session_datatype -> BANG datatype DOT datatype
-- On WHERE reduce production session_datatype -> BANG datatype DOT datatype
-- On VBAR reduce production session_datatype -> BANG datatype DOT datatype
-- On VAR reduce production session_datatype -> BANG datatype DOT datatype
-- On VALUES reduce production session_datatype -> BANG datatype DOT datatype
-- On TABLEKEYS reduce production session_datatype -> BANG datatype DOT datatype
-- On SHALLOWHANDLER reduce production session_datatype -> BANG datatype DOT datatype
-- On SEMICOLON reduce production session_datatype -> BANG datatype DOT datatype
-- On RPAREN reduce production session_datatype -> BANG datatype DOT datatype
-- On RETURNING reduce production session_datatype -> BANG datatype DOT datatype
-- On RBRACKET reduce production session_datatype -> BANG datatype DOT datatype
-- On RBRACE reduce production session_datatype -> BANG datatype DOT datatype
-- On OTHERWISE reduce production session_datatype -> BANG datatype DOT datatype
-- On OP reduce production session_datatype -> BANG datatype DOT datatype
-- On ON reduce production session_datatype -> BANG datatype DOT datatype
-- On LINFUN reduce production session_datatype -> BANG datatype DOT datatype
-- On LARROW reduce production session_datatype -> BANG datatype DOT datatype
-- On HANDLER reduce production session_datatype -> BANG datatype DOT datatype
-- On FUN reduce production session_datatype -> BANG datatype DOT datatype
-- On FROM reduce production session_datatype -> BANG datatype DOT datatype
-- On END reduce production session_datatype -> BANG datatype DOT datatype
-- On ELSE reduce production session_datatype -> BANG datatype DOT datatype
-- On DOTDOT reduce production session_datatype -> BANG datatype DOT datatype
-- On DOT reduce production session_datatype -> BANG datatype DOT datatype
-- On DELETE_LEFT reduce production session_datatype -> BANG datatype DOT datatype
-- On DELETE reduce production session_datatype -> BANG datatype DOT datatype
-- On DEFAULT reduce production session_datatype -> BANG datatype DOT datatype
-- On COMMA reduce production session_datatype -> BANG datatype DOT datatype
-- On COLON reduce production session_datatype -> BANG datatype DOT datatype
-- On CASE reduce production session_datatype -> BANG datatype DOT datatype
-- On BY reduce production session_datatype -> BANG datatype DOT datatype
-- On BARRBRACKET reduce production session_datatype -> BANG datatype DOT datatype
-- On BARRBRACE reduce production session_datatype -> BANG datatype DOT datatype
-- On BARPLUSRBRACKET reduce production session_datatype -> BANG datatype DOT datatype
-- On BARAMPRBRACKET reduce production session_datatype -> BANG datatype DOT datatype
-- On AS reduce production session_datatype -> BANG datatype DOT datatype

State 202:
type_arg -> TYPE LPAREN datatype . RPAREN [ RPAREN COMMA ]
-- On RPAREN shift to state 203

State 203:
type_arg -> TYPE LPAREN datatype RPAREN . [ RPAREN COMMA ]
-- On RPAREN reduce production type_arg -> TYPE LPAREN datatype RPAREN
-- On COMMA reduce production type_arg -> TYPE LPAREN datatype RPAREN

State 204:
type_arg -> ROW . LPAREN row RPAREN [ RPAREN COMMA ]
-- On LPAREN shift to state 205

State 205:
type_arg -> ROW LPAREN . row RPAREN [ RPAREN COMMA ]
-- On VBAR shift to state 76
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On CONSTRUCTOR shift to state 91
-- On row shift to state 206
-- On fields shift to state 94
-- On field_label shift to state 95
-- On field shift to state 109
-- On RPAREN reduce production row ->

State 206:
type_arg -> ROW LPAREN row . RPAREN [ RPAREN COMMA ]
-- On RPAREN shift to state 207

State 207:
type_arg -> ROW LPAREN row RPAREN . [ RPAREN COMMA ]
-- On RPAREN reduce production type_arg -> ROW LPAREN row RPAREN
-- On COMMA reduce production type_arg -> ROW LPAREN row RPAREN

State 208:
type_arg -> PRESENCE . LPAREN fieldspec RPAREN [ RPAREN COMMA ]
-- On LPAREN shift to state 209

State 209:
type_arg -> PRESENCE LPAREN . fieldspec RPAREN [ RPAREN COMMA ]
-- On MINUS shift to state 62
-- On LBRACE shift to state 63
-- On COLON shift to state 96
-- On fieldspec shift to state 210

State 210:
type_arg -> PRESENCE LPAREN fieldspec . RPAREN [ RPAREN COMMA ]
-- On RPAREN shift to state 211

State 211:
type_arg -> PRESENCE LPAREN fieldspec RPAREN . [ RPAREN COMMA ]
-- On RPAREN reduce production type_arg -> PRESENCE LPAREN fieldspec RPAREN
-- On COMMA reduce production type_arg -> PRESENCE LPAREN fieldspec RPAREN

State 212:
type_arg -> LBRACE . row RBRACE [ RPAREN COMMA ]
-- On VBAR shift to state 76
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On CONSTRUCTOR shift to state 91
-- On row shift to state 213
-- On fields shift to state 94
-- On field_label shift to state 95
-- On field shift to state 109
-- On RBRACE reduce production row ->

State 213:
type_arg -> LBRACE row . RBRACE [ RPAREN COMMA ]
-- On RBRACE shift to state 214

State 214:
type_arg -> LBRACE row RBRACE . [ RPAREN COMMA ]
-- On RPAREN reduce production type_arg -> LBRACE row RBRACE
-- On COMMA reduce production type_arg -> LBRACE row RBRACE

State 215:
primary_datatype -> CONSTRUCTOR LPAREN type_arg_list . RPAREN [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On RPAREN shift to state 216

State 216:
primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On WHERE reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On VBAR reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On VAR reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On VALUES reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On TABLEKEYS reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On SHALLOWHANDLER reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On SERVER reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On SEMICOLON reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On RPAREN reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On RETURNING reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On RBRACKET reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On RBRACE reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On RARROW reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On POSTFIXOP reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On OTHERWISE reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On OP reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On ON reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On NATIVE reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On LLARROW reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On LINFUN reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On LBRACE reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On LARROW reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR9 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR8 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR7 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR6 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR5 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR4 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR3 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR2 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR1 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR0 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL9 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL8 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL7 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL6 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL5 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL4 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL3 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL2 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL1 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL0 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX9 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX8 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX7 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX6 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX5 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX4 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX3 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX2 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX1 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX0 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On IN reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On HANDLER reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On FUN reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On FROM reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On EQ reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On END reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On ELSE reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On DOTDOT reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On DOT reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On DELETE_LEFT reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On DELETE reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On DEFAULT reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On COMMA reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On COLON reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On CLIENT reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On CASE reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On BY reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On BARRBRACKET reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On BARRBRACE reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On BARPLUSRBRACKET reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On BARAMPRBRACKET reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On AS reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN

State 217:
type_arg_list -> type_arg . [ RPAREN ]
type_arg_list -> type_arg . COMMA type_arg_list [ RPAREN ]
-- On COMMA shift to state 218
-- On RPAREN reduce production type_arg_list -> type_arg

State 218:
type_arg_list -> type_arg COMMA . type_arg_list [ RPAREN ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TYPE shift to state 131
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On ROW shift to state 204
-- On QUESTION shift to state 45
-- On PRESENCE shift to state 208
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On LBRACE shift to state 212
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On type_arg_list shift to state 219
-- On type_arg shift to state 217
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 220

State 219:
type_arg_list -> type_arg COMMA type_arg_list . [ RPAREN ]
-- On RPAREN reduce production type_arg_list -> type_arg COMMA type_arg_list

State 220:
type_arg -> datatype . [ RPAREN COMMA ]
-- On RPAREN reduce production type_arg -> datatype
-- On COMMA reduce production type_arg -> datatype

State 221:
forall_datatype -> FORALL varlist DOT datatype . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production forall_datatype -> FORALL varlist DOT datatype
-- On WHERE reduce production forall_datatype -> FORALL varlist DOT datatype
-- On VBAR reduce production forall_datatype -> FORALL varlist DOT datatype
-- On VAR reduce production forall_datatype -> FORALL varlist DOT datatype
-- On VALUES reduce production forall_datatype -> FORALL varlist DOT datatype
-- On TABLEKEYS reduce production forall_datatype -> FORALL varlist DOT datatype
-- On SHALLOWHANDLER reduce production forall_datatype -> FORALL varlist DOT datatype
-- On SEMICOLON reduce production forall_datatype -> FORALL varlist DOT datatype
-- On RPAREN reduce production forall_datatype -> FORALL varlist DOT datatype
-- On RETURNING reduce production forall_datatype -> FORALL varlist DOT datatype
-- On RBRACKET reduce production forall_datatype -> FORALL varlist DOT datatype
-- On RBRACE reduce production forall_datatype -> FORALL varlist DOT datatype
-- On OTHERWISE reduce production forall_datatype -> FORALL varlist DOT datatype
-- On OP reduce production forall_datatype -> FORALL varlist DOT datatype
-- On ON reduce production forall_datatype -> FORALL varlist DOT datatype
-- On LINFUN reduce production forall_datatype -> FORALL varlist DOT datatype
-- On LARROW reduce production forall_datatype -> FORALL varlist DOT datatype
-- On HANDLER reduce production forall_datatype -> FORALL varlist DOT datatype
-- On FUN reduce production forall_datatype -> FORALL varlist DOT datatype
-- On FROM reduce production forall_datatype -> FORALL varlist DOT datatype
-- On END reduce production forall_datatype -> FORALL varlist DOT datatype
-- On ELSE reduce production forall_datatype -> FORALL varlist DOT datatype
-- On DOTDOT reduce production forall_datatype -> FORALL varlist DOT datatype
-- On DOT reduce production forall_datatype -> FORALL varlist DOT datatype
-- On DELETE_LEFT reduce production forall_datatype -> FORALL varlist DOT datatype
-- On DELETE reduce production forall_datatype -> FORALL varlist DOT datatype
-- On DEFAULT reduce production forall_datatype -> FORALL varlist DOT datatype
-- On COMMA reduce production forall_datatype -> FORALL varlist DOT datatype
-- On COLON reduce production forall_datatype -> FORALL varlist DOT datatype
-- On CASE reduce production forall_datatype -> FORALL varlist DOT datatype
-- On BY reduce production forall_datatype -> FORALL varlist DOT datatype
-- On BARRBRACKET reduce production forall_datatype -> FORALL varlist DOT datatype
-- On BARRBRACE reduce production forall_datatype -> FORALL varlist DOT datatype
-- On BARPLUSRBRACKET reduce production forall_datatype -> FORALL varlist DOT datatype
-- On BARAMPRBRACKET reduce production forall_datatype -> FORALL varlist DOT datatype
-- On AS reduce production forall_datatype -> FORALL varlist DOT datatype

State 222:
varlist -> typearg . [ RPAREN DOT ]
varlist -> typearg . COMMA varlist [ RPAREN DOT ]
-- On COMMA shift to state 223
-- On RPAREN reduce production varlist -> typearg
-- On DOT reduce production varlist -> typearg

State 223:
varlist -> typearg COMMA . varlist [ RPAREN DOT ]
-- On VARIABLE shift to state 117
-- On varlist shift to state 224
-- On typearg shift to state 222

State 224:
varlist -> typearg COMMA varlist . [ RPAREN DOT ]
-- On RPAREN reduce production varlist -> typearg COMMA varlist
-- On DOT reduce production varlist -> typearg COMMA varlist

State 225:
primary_datatype -> LBRACKET datatype . RBRACKET [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On RBRACKET shift to state 226

State 226:
primary_datatype -> LBRACKET datatype RBRACKET . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On WHERE reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On VBAR reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On VAR reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On VALUES reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On TABLEKEYS reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On SHALLOWHANDLER reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On SERVER reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On SEMICOLON reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On RPAREN reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On RETURNING reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On RBRACKET reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On RBRACE reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On RARROW reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On POSTFIXOP reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On OTHERWISE reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On OP reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On ON reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On NATIVE reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On LLARROW reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On LINFUN reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On LBRACE reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On LARROW reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR9 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR8 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR7 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR6 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR5 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR4 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR3 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR2 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR1 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR0 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL9 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL8 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL7 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL6 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL5 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL4 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL3 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL2 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL1 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL0 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX9 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX8 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX7 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX6 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX5 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX4 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX3 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX2 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX1 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX0 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On IN reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On HANDLER reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On FUN reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On FROM reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On EQ reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On END reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On ELSE reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On DOTDOT reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On DOT reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On DELETE_LEFT reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On DELETE reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On DEFAULT reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On COMMA reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On COLON reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On CLIENT reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On CASE reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On BY reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On BARRBRACKET reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On BARRBRACE reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On BARPLUSRBRACKET reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On BARAMPRBRACKET reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On AS reduce production primary_datatype -> LBRACKET datatype RBRACKET

State 227:
fieldspec -> COLON datatype . [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VBAR reduce production fieldspec -> COLON datatype
-- On RPAREN reduce production fieldspec -> COLON datatype
-- On RBRACE reduce production fieldspec -> COLON datatype
-- On COMMA reduce production fieldspec -> COLON datatype
-- On BARRBRACKET reduce production fieldspec -> COLON datatype
-- On BARPLUSRBRACKET reduce production fieldspec -> COLON datatype
-- On BARAMPRBRACKET reduce production fieldspec -> COLON datatype

State 228:
field -> field_label fieldspec . [ VBAR RPAREN RBRACE COMMA BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VBAR reduce production field -> field_label fieldspec
-- On RPAREN reduce production field -> field_label fieldspec
-- On RBRACE reduce production field -> field_label fieldspec
-- On COMMA reduce production field -> field_label fieldspec
-- On BARPLUSRBRACKET reduce production field -> field_label fieldspec
-- On BARAMPRBRACKET reduce production field -> field_label fieldspec

State 229:
fieldspec -> LBRACE COLON datatype . RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On RBRACE shift to state 230

State 230:
fieldspec -> LBRACE COLON datatype RBRACE . [ VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On VBAR reduce production fieldspec -> LBRACE COLON datatype RBRACE
-- On RPAREN reduce production fieldspec -> LBRACE COLON datatype RBRACE
-- On RBRACE reduce production fieldspec -> LBRACE COLON datatype RBRACE
-- On COMMA reduce production fieldspec -> LBRACE COLON datatype RBRACE
-- On BARRBRACKET reduce production fieldspec -> LBRACE COLON datatype RBRACE
-- On BARPLUSRBRACKET reduce production fieldspec -> LBRACE COLON datatype RBRACE
-- On BARAMPRBRACKET reduce production fieldspec -> LBRACE COLON datatype RBRACE

State 231:
vfield -> CONSTRUCTOR fieldspec . [ VBAR RPAREN BARRBRACKET ]
-- On VBAR reduce production vfield -> CONSTRUCTOR fieldspec
-- On RPAREN reduce production vfield -> CONSTRUCTOR fieldspec
-- On BARRBRACKET reduce production vfield -> CONSTRUCTOR fieldspec

State 232:
row_var -> LPAREN MU VARIABLE DOT vfields . RPAREN [ RPAREN RBRACE COLONCOLON BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On RPAREN shift to state 233

State 233:
row_var -> LPAREN MU VARIABLE DOT vfields RPAREN . [ RPAREN RBRACE COLONCOLON BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET ]
-- On RPAREN reduce production row_var -> LPAREN MU VARIABLE DOT vfields RPAREN
-- On RBRACE reduce production row_var -> LPAREN MU VARIABLE DOT vfields RPAREN
-- On COLONCOLON reduce production row_var -> LPAREN MU VARIABLE DOT vfields RPAREN
-- On BARRBRACKET reduce production row_var -> LPAREN MU VARIABLE DOT vfields RPAREN
-- On BARPLUSRBRACKET reduce production row_var -> LPAREN MU VARIABLE DOT vfields RPAREN
-- On BARAMPRBRACKET reduce production row_var -> LPAREN MU VARIABLE DOT vfields RPAREN

State 234:
kinded_row_var -> row_var . subkind [ RPAREN ]
rfields -> VBAR row_var . [ RPAREN ]
-- On COLONCOLON shift to state 78
-- On subkind shift to state 85
-- On RPAREN reduce production rfields -> VBAR row_var

State 235:
rfields -> VBAR kinded_row_var . [ RPAREN ]
-- On RPAREN reduce production rfields -> VBAR kinded_row_var

State 236:
field_label -> VARIABLE . [ MINUS LBRACE COLON ]
type_var -> VARIABLE . [ RPAREN COMMA COLONCOLON ]
-- On RPAREN reduce production type_var -> VARIABLE
-- On MINUS reduce production field_label -> VARIABLE
-- On LBRACE reduce production field_label -> VARIABLE
-- On COMMA reduce production type_var -> VARIABLE
-- On COLONCOLON reduce production type_var -> VARIABLE
-- On COLON reduce production field_label -> VARIABLE

State 237:
parenthesized_datatypes -> LPAREN RPAREN . [ WITH WHERE VBAR VAR VALUES TILDE TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE MINUS LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On WHERE reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On VBAR reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On VAR reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On VALUES reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On TILDE reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On TABLEKEYS reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On SQUIGRARROW reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On SQUIGLOLLI reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On SHALLOWHANDLER reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On SERVER reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On SEMICOLON reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On RPAREN reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On RETURNING reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On RBRACKET reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On RBRACE reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On RARROW reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On POSTFIXOP reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On OTHERWISE reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On OP reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On ON reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On NATIVE reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On MINUS reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On LOLLI reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On LLARROW reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On LINFUN reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On LBRACE reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On LARROW reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR9 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR8 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR7 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR6 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR5 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR4 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR3 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR2 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR1 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR0 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL9 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL8 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL7 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL6 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL5 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL4 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL3 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL2 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL1 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL0 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX9 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX8 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX7 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX6 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX5 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX4 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX3 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX2 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX1 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX0 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On IN reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On HANDLER reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On FUN reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On FROM reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On EQ reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On END reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On ELSE reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On DOTDOT reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On DOT reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On DELETE_LEFT reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On DELETE reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On DEFAULT reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On COMMA reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On COLON reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On CLIENT reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On CASE reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On BY reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On BARRBRACKET reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On BARRBRACE reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On BARPLUSRBRACKET reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On BARAMPRBRACKET reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On AS reduce production parenthesized_datatypes -> LPAREN RPAREN

State 238:
field_label -> CONSTRUCTOR . [ MINUS LBRACE COLON ]
primary_datatype -> CONSTRUCTOR . [ RPAREN COMMA ]
primary_datatype -> CONSTRUCTOR . LPAREN type_arg_list RPAREN [ RPAREN COMMA ]
qualified_type_name -> CONSTRUCTOR . DOT qualified_type_name_inner [ RPAREN ]
-- On LPAREN shift to state 130
-- On DOT shift to state 239
-- On RPAREN reduce production primary_datatype -> CONSTRUCTOR
-- On MINUS reduce production field_label -> CONSTRUCTOR
-- On LBRACE reduce production field_label -> CONSTRUCTOR
-- On COMMA reduce production primary_datatype -> CONSTRUCTOR
-- On COLON reduce production field_label -> CONSTRUCTOR

State 239:
qualified_type_name -> CONSTRUCTOR DOT . qualified_type_name_inner [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RPAREN RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On CONSTRUCTOR shift to state 240
-- On qualified_type_name_inner shift to state 243

State 240:
qualified_type_name_inner -> CONSTRUCTOR . DOT qualified_type_name_inner [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RPAREN RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
qualified_type_name_inner -> CONSTRUCTOR . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RPAREN RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On DOT shift to state 241
-- On VARIABLE reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On VAR reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On UPDATE reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On UINTEGER reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On UFLOAT reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On TYPENAME reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On TRY reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On TRUE reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On TABLE reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On SWITCH reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On STRING reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On SPAWNWAIT reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On SPAWNCLIENT reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On SPAWNAT reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On SPAWNANGELAT reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On SPAWNANGEL reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On SPAWN reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On SIG reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On SHALLOWHANDLER reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On SHALLOWHANDLE reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On SELECT reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On RPAREN reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On RECEIVE reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On RBRACE reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On RAISE reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On QUERY reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On PREFIXOP reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On PREFIX reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On POSTFIX reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On PAGE reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On OPEN reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On OP reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On OFFER reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On MODULE reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On MINUSDOT reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On MINUS reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On LXML reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On LPAREN reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On LINFUN reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On LENSSELECT reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On LENSPUT reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On LENSJOIN reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On LENSGET reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On LENSDROP reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On LENS reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On LEFTTRIANGLE reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On LBRACKET reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On LBRACE reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On INSERT reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On INFIXR reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On INFIXL reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On INFIX reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On IF reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On HANDLER reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On HANDLE reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On FUN reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On FORMLET reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On FOR reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On FALSE reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On ESCAPE reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On END reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On DOOP reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On DELETE reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On DATABASE reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On CONSTRUCTOR reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On CHAR reduce production qualified_type_name_inner -> CONSTRUCTOR
-- On ALIEN reduce production qualified_type_name_inner -> CONSTRUCTOR

State 241:
qualified_type_name_inner -> CONSTRUCTOR DOT . qualified_type_name_inner [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RPAREN RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On CONSTRUCTOR shift to state 240
-- On qualified_type_name_inner shift to state 242

State 242:
qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RPAREN RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On VAR reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On UPDATE reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On UINTEGER reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On UFLOAT reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On TYPENAME reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On TRY reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On TRUE reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On TABLE reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SWITCH reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On STRING reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SPAWNWAIT reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SPAWNCLIENT reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SPAWNAT reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SPAWNANGELAT reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SPAWNANGEL reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SPAWN reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SIG reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SHALLOWHANDLER reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SHALLOWHANDLE reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SELECT reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On RPAREN reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On RECEIVE reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On RBRACE reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On RAISE reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On QUERY reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On PREFIXOP reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On PREFIX reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On POSTFIX reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On PAGE reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On OPEN reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On OP reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On OFFER reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On MODULE reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On MINUSDOT reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On MINUS reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LXML reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LPAREN reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LINFUN reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LENSSELECT reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LENSPUT reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LENSJOIN reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LENSGET reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LENSDROP reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LENS reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LEFTTRIANGLE reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LBRACKET reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LBRACE reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On INSERT reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On INFIXR reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On INFIXL reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On INFIX reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On IF reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On HANDLER reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On HANDLE reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On FUN reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On FORMLET reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On FOR reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On FALSE reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On ESCAPE reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On END reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On DOOP reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On DELETE reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On DATABASE reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On CONSTRUCTOR reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On CHAR reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner
-- On ALIEN reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner

State 243:
qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RPAREN RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On VAR reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On UPDATE reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On UINTEGER reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On UFLOAT reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On TYPENAME reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On TRY reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On TRUE reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On TABLE reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SWITCH reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On STRING reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SPAWNWAIT reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SPAWNCLIENT reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SPAWNAT reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SPAWNANGELAT reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SPAWNANGEL reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SPAWN reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SIG reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SHALLOWHANDLER reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SHALLOWHANDLE reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On SELECT reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On RPAREN reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On RECEIVE reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On RBRACE reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On RAISE reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On QUERY reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On PREFIXOP reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On PREFIX reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On POSTFIX reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On PAGE reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On OPEN reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On OP reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On OFFER reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On MODULE reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On MINUSDOT reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On MINUS reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LXML reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LPAREN reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LINFUN reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LENSSELECT reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LENSPUT reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LENSJOIN reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LENSGET reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LENSDROP reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LENS reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LEFTTRIANGLE reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LBRACKET reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On LBRACE reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On INSERT reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On INFIXR reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On INFIXL reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On INFIX reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On IF reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On HANDLER reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On HANDLE reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On FUN reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On FORMLET reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On FOR reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On FALSE reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On ESCAPE reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On END reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On DOOP reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On DELETE reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On DATABASE reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On CONSTRUCTOR reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On CHAR reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner
-- On ALIEN reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner

State 244:
primary_datatype -> LPAREN rfields . RPAREN [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On RPAREN shift to state 245

State 245:
primary_datatype -> LPAREN rfields RPAREN . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production primary_datatype -> LPAREN rfields RPAREN
-- On WHERE reduce production primary_datatype -> LPAREN rfields RPAREN
-- On VBAR reduce production primary_datatype -> LPAREN rfields RPAREN
-- On VAR reduce production primary_datatype -> LPAREN rfields RPAREN
-- On VALUES reduce production primary_datatype -> LPAREN rfields RPAREN
-- On TABLEKEYS reduce production primary_datatype -> LPAREN rfields RPAREN
-- On SHALLOWHANDLER reduce production primary_datatype -> LPAREN rfields RPAREN
-- On SERVER reduce production primary_datatype -> LPAREN rfields RPAREN
-- On SEMICOLON reduce production primary_datatype -> LPAREN rfields RPAREN
-- On RPAREN reduce production primary_datatype -> LPAREN rfields RPAREN
-- On RETURNING reduce production primary_datatype -> LPAREN rfields RPAREN
-- On RBRACKET reduce production primary_datatype -> LPAREN rfields RPAREN
-- On RBRACE reduce production primary_datatype -> LPAREN rfields RPAREN
-- On RARROW reduce production primary_datatype -> LPAREN rfields RPAREN
-- On POSTFIXOP reduce production primary_datatype -> LPAREN rfields RPAREN
-- On OTHERWISE reduce production primary_datatype -> LPAREN rfields RPAREN
-- On OP reduce production primary_datatype -> LPAREN rfields RPAREN
-- On ON reduce production primary_datatype -> LPAREN rfields RPAREN
-- On NATIVE reduce production primary_datatype -> LPAREN rfields RPAREN
-- On LLARROW reduce production primary_datatype -> LPAREN rfields RPAREN
-- On LINFUN reduce production primary_datatype -> LPAREN rfields RPAREN
-- On LBRACE reduce production primary_datatype -> LPAREN rfields RPAREN
-- On LARROW reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR9 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR8 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR7 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR6 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR5 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR4 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR3 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR2 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR1 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR0 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL9 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL8 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL7 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL6 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL5 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL4 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL3 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL2 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL1 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL0 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX9 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX8 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX7 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX6 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX5 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX4 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX3 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX2 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX1 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX0 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On IN reduce production primary_datatype -> LPAREN rfields RPAREN
-- On HANDLER reduce production primary_datatype -> LPAREN rfields RPAREN
-- On FUN reduce production primary_datatype -> LPAREN rfields RPAREN
-- On FROM reduce production primary_datatype -> LPAREN rfields RPAREN
-- On EQ reduce production primary_datatype -> LPAREN rfields RPAREN
-- On END reduce production primary_datatype -> LPAREN rfields RPAREN
-- On ELSE reduce production primary_datatype -> LPAREN rfields RPAREN
-- On DOTDOT reduce production primary_datatype -> LPAREN rfields RPAREN
-- On DOT reduce production primary_datatype -> LPAREN rfields RPAREN
-- On DELETE_LEFT reduce production primary_datatype -> LPAREN rfields RPAREN
-- On DELETE reduce production primary_datatype -> LPAREN rfields RPAREN
-- On DEFAULT reduce production primary_datatype -> LPAREN rfields RPAREN
-- On COMMA reduce production primary_datatype -> LPAREN rfields RPAREN
-- On COLON reduce production primary_datatype -> LPAREN rfields RPAREN
-- On CLIENT reduce production primary_datatype -> LPAREN rfields RPAREN
-- On CASE reduce production primary_datatype -> LPAREN rfields RPAREN
-- On BY reduce production primary_datatype -> LPAREN rfields RPAREN
-- On BARRBRACKET reduce production primary_datatype -> LPAREN rfields RPAREN
-- On BARRBRACE reduce production primary_datatype -> LPAREN rfields RPAREN
-- On BARPLUSRBRACKET reduce production primary_datatype -> LPAREN rfields RPAREN
-- On BARAMPRBRACKET reduce production primary_datatype -> LPAREN rfields RPAREN
-- On AS reduce production primary_datatype -> LPAREN rfields RPAREN

State 246:
rfields -> rfield . [ RPAREN ]
rfields -> rfield . VBAR row_var [ RPAREN ]
rfields -> rfield . VBAR kinded_row_var [ RPAREN ]
rfields -> rfield . COMMA rfields [ RPAREN ]
-- On VBAR shift to state 247
-- On COMMA shift to state 250
-- On RPAREN reduce production rfields -> rfield

State 247:
rfields -> rfield VBAR . row_var [ RPAREN ]
rfields -> rfield VBAR . kinded_row_var [ RPAREN ]
-- On VARIABLE shift to state 53
-- On UNDERSCORE shift to state 54
-- On PERCENTVAR shift to state 55
-- On PERCENT shift to state 56
-- On LPAREN shift to state 57
-- On row_var shift to state 248
-- On nonrec_row_var shift to state 86
-- On kinded_row_var shift to state 249

State 248:
kinded_row_var -> row_var . subkind [ RPAREN ]
rfields -> rfield VBAR row_var . [ RPAREN ]
-- On COLONCOLON shift to state 78
-- On subkind shift to state 85
-- On RPAREN reduce production rfields -> rfield VBAR row_var

State 249:
rfields -> rfield VBAR kinded_row_var . [ RPAREN ]
-- On RPAREN reduce production rfields -> rfield VBAR kinded_row_var

State 250:
rfields -> rfield COMMA . rfields [ RPAREN ]
-- On VBAR shift to state 52
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On CONSTRUCTOR shift to state 91
-- On rfields shift to state 251
-- On rfield shift to state 246
-- On record_label shift to state 252
-- On field_label shift to state 254

State 251:
rfields -> rfield COMMA rfields . [ RPAREN ]
-- On RPAREN reduce production rfields -> rfield COMMA rfields

State 252:
rfield -> record_label . fieldspec [ VBAR RPAREN COMMA ]
-- On MINUS shift to state 62
-- On LBRACE shift to state 63
-- On COLON shift to state 96
-- On fieldspec shift to state 253

State 253:
rfield -> record_label fieldspec . [ VBAR RPAREN COMMA ]
-- On VBAR reduce production rfield -> record_label fieldspec
-- On RPAREN reduce production rfield -> record_label fieldspec
-- On COMMA reduce production rfield -> record_label fieldspec

State 254:
record_label -> field_label . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING READONLY RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production record_label -> field_label
-- On VBAR reduce production record_label -> field_label
-- On VALUES reduce production record_label -> field_label
-- On TABLEKEYS reduce production record_label -> field_label
-- On SEMICOLON reduce production record_label -> field_label
-- On RPAREN reduce production record_label -> field_label
-- On RETURNING reduce production record_label -> field_label
-- On READONLY reduce production record_label -> field_label
-- On RBRACKET reduce production record_label -> field_label
-- On RBRACE reduce production record_label -> field_label
-- On RARROW reduce production record_label -> field_label
-- On OTHERWISE reduce production record_label -> field_label
-- On ON reduce production record_label -> field_label
-- On MINUSDOT reduce production record_label -> field_label
-- On MINUS reduce production record_label -> field_label
-- On LPAREN reduce production record_label -> field_label
-- On LBRACE reduce production record_label -> field_label
-- On INFIXR9 reduce production record_label -> field_label
-- On INFIXR8 reduce production record_label -> field_label
-- On INFIXR7 reduce production record_label -> field_label
-- On INFIXR6 reduce production record_label -> field_label
-- On INFIXR5 reduce production record_label -> field_label
-- On INFIXR4 reduce production record_label -> field_label
-- On INFIXR3 reduce production record_label -> field_label
-- On INFIXR2 reduce production record_label -> field_label
-- On INFIXR1 reduce production record_label -> field_label
-- On INFIXR0 reduce production record_label -> field_label
-- On INFIXL9 reduce production record_label -> field_label
-- On INFIXL8 reduce production record_label -> field_label
-- On INFIXL7 reduce production record_label -> field_label
-- On INFIXL6 reduce production record_label -> field_label
-- On INFIXL5 reduce production record_label -> field_label
-- On INFIXL4 reduce production record_label -> field_label
-- On INFIXL3 reduce production record_label -> field_label
-- On INFIXL2 reduce production record_label -> field_label
-- On INFIXL1 reduce production record_label -> field_label
-- On INFIXL0 reduce production record_label -> field_label
-- On INFIX9 reduce production record_label -> field_label
-- On INFIX8 reduce production record_label -> field_label
-- On INFIX7 reduce production record_label -> field_label
-- On INFIX6 reduce production record_label -> field_label
-- On INFIX5 reduce production record_label -> field_label
-- On INFIX4 reduce production record_label -> field_label
-- On INFIX3 reduce production record_label -> field_label
-- On INFIX2 reduce production record_label -> field_label
-- On INFIX1 reduce production record_label -> field_label
-- On INFIX0 reduce production record_label -> field_label
-- On FROM reduce production record_label -> field_label
-- On FATRARROW reduce production record_label -> field_label
-- On EQUALSTILDE reduce production record_label -> field_label
-- On EQ reduce production record_label -> field_label
-- On END reduce production record_label -> field_label
-- On ELSE reduce production record_label -> field_label
-- On DOTDOT reduce production record_label -> field_label
-- On DOT reduce production record_label -> field_label
-- On DELETE_LEFT reduce production record_label -> field_label
-- On DELETE reduce production record_label -> field_label
-- On DEFAULT reduce production record_label -> field_label
-- On COMMA reduce production record_label -> field_label
-- On COLONCOLON reduce production record_label -> field_label
-- On COLON reduce production record_label -> field_label
-- On CASE reduce production record_label -> field_label
-- On BY reduce production record_label -> field_label
-- On BARRBRACE reduce production record_label -> field_label
-- On BARBAR reduce production record_label -> field_label
-- On BANG reduce production record_label -> field_label
-- On AS reduce production record_label -> field_label
-- On AMPAMP reduce production record_label -> field_label

State 255:
parenthesized_datatypes -> LPAREN qualified_type_name . RPAREN [ WITH WHERE VBAR VAR VALUES TILDE TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE MINUS LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On RPAREN shift to state 256

State 256:
parenthesized_datatypes -> LPAREN qualified_type_name RPAREN . [ WITH WHERE VBAR VAR VALUES TILDE TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE MINUS LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On WHERE reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On VBAR reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On VAR reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On VALUES reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On TILDE reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On TABLEKEYS reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On SQUIGRARROW reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On SQUIGLOLLI reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On SHALLOWHANDLER reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On SERVER reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On SEMICOLON reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On RPAREN reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On RETURNING reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On RBRACKET reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On RBRACE reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On RARROW reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On POSTFIXOP reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On OTHERWISE reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On OP reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On ON reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On NATIVE reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On MINUS reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On LOLLI reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On LLARROW reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On LINFUN reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On LBRACE reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On LARROW reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXR9 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXR8 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXR7 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXR6 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXR5 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXR4 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXR3 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXR2 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXR1 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXR0 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXL9 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXL8 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXL7 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXL6 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXL5 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXL4 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXL3 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXL2 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXL1 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIXL0 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIX9 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIX8 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIX7 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIX6 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIX5 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIX4 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIX3 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIX2 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIX1 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On INFIX0 reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On IN reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On HANDLER reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On FUN reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On FROM reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On EQ reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On END reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On ELSE reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On DOTDOT reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On DOT reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On DELETE_LEFT reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On DELETE reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On DEFAULT reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On COMMA reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On COLON reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On CLIENT reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On CASE reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On BY reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On BARRBRACKET reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On BARRBRACE reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On BARPLUSRBRACKET reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On BARAMPRBRACKET reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN
-- On AS reduce production parenthesized_datatypes -> LPAREN qualified_type_name RPAREN

State 257:
parenthesized_datatypes -> LPAREN datatypes . RPAREN [ WITH WHERE VBAR VAR VALUES TILDE TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE MINUS LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On RPAREN shift to state 258

State 258:
parenthesized_datatypes -> LPAREN datatypes RPAREN . [ WITH WHERE VBAR VAR VALUES TILDE TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE MINUS LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On WHERE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On VBAR reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On VAR reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On VALUES reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On TILDE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On TABLEKEYS reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On SQUIGRARROW reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On SQUIGLOLLI reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On SHALLOWHANDLER reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On SERVER reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On SEMICOLON reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On RPAREN reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On RETURNING reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On RBRACKET reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On RBRACE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On RARROW reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On POSTFIXOP reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On OTHERWISE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On OP reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On ON reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On NATIVE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On MINUS reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On LOLLI reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On LLARROW reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On LINFUN reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On LBRACE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On LARROW reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR9 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR8 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR7 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR6 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR5 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR4 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR3 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR2 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR1 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR0 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL9 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL8 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL7 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL6 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL5 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL4 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL3 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL2 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL1 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL0 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX9 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX8 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX7 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX6 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX5 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX4 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX3 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX2 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX1 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX0 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On IN reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On HANDLER reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On FUN reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On FROM reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On EQ reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On END reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On ELSE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On DOTDOT reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On DOT reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On DELETE_LEFT reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On DELETE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On DEFAULT reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On COMMA reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On COLON reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On CLIENT reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On CASE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On BY reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On BARRBRACKET reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On BARRBRACE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On BARPLUSRBRACKET reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On BARAMPRBRACKET reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On AS reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN

State 259:
datatypes -> datatype . [ RPAREN ]
datatypes -> datatype . COMMA datatypes [ RPAREN ]
-- On COMMA shift to state 260
-- On RPAREN reduce production datatypes -> datatype

State 260:
datatypes -> datatype COMMA . datatypes [ RPAREN ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatypes shift to state 261
-- On datatype shift to state 259

State 261:
datatypes -> datatype COMMA datatypes . [ RPAREN ]
-- On RPAREN reduce production datatypes -> datatype COMMA datatypes

State 262:
primary_datatype -> parenthesized_datatypes . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production primary_datatype -> parenthesized_datatypes
-- On WHERE reduce production primary_datatype -> parenthesized_datatypes
-- On VBAR reduce production primary_datatype -> parenthesized_datatypes
-- On VAR reduce production primary_datatype -> parenthesized_datatypes
-- On VALUES reduce production primary_datatype -> parenthesized_datatypes
-- On TABLEKEYS reduce production primary_datatype -> parenthesized_datatypes
-- On SHALLOWHANDLER reduce production primary_datatype -> parenthesized_datatypes
-- On SERVER reduce production primary_datatype -> parenthesized_datatypes
-- On SEMICOLON reduce production primary_datatype -> parenthesized_datatypes
-- On RPAREN reduce production primary_datatype -> parenthesized_datatypes
-- On RETURNING reduce production primary_datatype -> parenthesized_datatypes
-- On RBRACKET reduce production primary_datatype -> parenthesized_datatypes
-- On RBRACE reduce production primary_datatype -> parenthesized_datatypes
-- On RARROW reduce production primary_datatype -> parenthesized_datatypes
-- On POSTFIXOP reduce production primary_datatype -> parenthesized_datatypes
-- On OTHERWISE reduce production primary_datatype -> parenthesized_datatypes
-- On OP reduce production primary_datatype -> parenthesized_datatypes
-- On ON reduce production primary_datatype -> parenthesized_datatypes
-- On NATIVE reduce production primary_datatype -> parenthesized_datatypes
-- On LLARROW reduce production primary_datatype -> parenthesized_datatypes
-- On LINFUN reduce production primary_datatype -> parenthesized_datatypes
-- On LBRACE reduce production primary_datatype -> parenthesized_datatypes
-- On LARROW reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR9 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR8 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR7 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR6 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR5 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR4 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR3 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR2 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR1 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR0 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL9 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL8 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL7 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL6 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL5 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL4 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL3 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL2 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL1 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL0 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX9 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX8 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX7 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX6 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX5 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX4 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX3 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX2 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX1 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX0 reduce production primary_datatype -> parenthesized_datatypes
-- On IN reduce production primary_datatype -> parenthesized_datatypes
-- On HANDLER reduce production primary_datatype -> parenthesized_datatypes
-- On FUN reduce production primary_datatype -> parenthesized_datatypes
-- On FROM reduce production primary_datatype -> parenthesized_datatypes
-- On EQ reduce production primary_datatype -> parenthesized_datatypes
-- On END reduce production primary_datatype -> parenthesized_datatypes
-- On ELSE reduce production primary_datatype -> parenthesized_datatypes
-- On DOTDOT reduce production primary_datatype -> parenthesized_datatypes
-- On DOT reduce production primary_datatype -> parenthesized_datatypes
-- On DELETE_LEFT reduce production primary_datatype -> parenthesized_datatypes
-- On DELETE reduce production primary_datatype -> parenthesized_datatypes
-- On DEFAULT reduce production primary_datatype -> parenthesized_datatypes
-- On COMMA reduce production primary_datatype -> parenthesized_datatypes
-- On COLON reduce production primary_datatype -> parenthesized_datatypes
-- On CLIENT reduce production primary_datatype -> parenthesized_datatypes
-- On CASE reduce production primary_datatype -> parenthesized_datatypes
-- On BY reduce production primary_datatype -> parenthesized_datatypes
-- On BARRBRACKET reduce production primary_datatype -> parenthesized_datatypes
-- On BARRBRACE reduce production primary_datatype -> parenthesized_datatypes
-- On BARPLUSRBRACKET reduce production primary_datatype -> parenthesized_datatypes
-- On BARAMPRBRACKET reduce production primary_datatype -> parenthesized_datatypes
-- On AS reduce production primary_datatype -> parenthesized_datatypes

State 263:
mu_datatype -> MU VARIABLE DOT mu_datatype . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On WHERE reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On VBAR reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On VAR reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On VALUES reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On TABLEKEYS reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On SHALLOWHANDLER reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On SEMICOLON reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On RPAREN reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On RETURNING reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On RBRACKET reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On RBRACE reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On OTHERWISE reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On OP reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On ON reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On LINFUN reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On LARROW reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On HANDLER reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On FUN reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On FROM reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On END reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On ELSE reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On DOTDOT reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On DOT reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On DELETE_LEFT reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On DELETE reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On DEFAULT reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On COMMA reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On COLON reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On CASE reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On BY reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On BARRBRACKET reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On BARRBRACE reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On BARPLUSRBRACKET reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On BARAMPRBRACKET reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On AS reduce production mu_datatype -> MU VARIABLE DOT mu_datatype

State 264:
session_datatype -> QUESTION datatype . DOT datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On DOT shift to state 265

State 265:
session_datatype -> QUESTION datatype DOT . datatype [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 266

State 266:
session_datatype -> QUESTION datatype DOT datatype . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production session_datatype -> QUESTION datatype DOT datatype
-- On WHERE reduce production session_datatype -> QUESTION datatype DOT datatype
-- On VBAR reduce production session_datatype -> QUESTION datatype DOT datatype
-- On VAR reduce production session_datatype -> QUESTION datatype DOT datatype
-- On VALUES reduce production session_datatype -> QUESTION datatype DOT datatype
-- On TABLEKEYS reduce production session_datatype -> QUESTION datatype DOT datatype
-- On SHALLOWHANDLER reduce production session_datatype -> QUESTION datatype DOT datatype
-- On SEMICOLON reduce production session_datatype -> QUESTION datatype DOT datatype
-- On RPAREN reduce production session_datatype -> QUESTION datatype DOT datatype
-- On RETURNING reduce production session_datatype -> QUESTION datatype DOT datatype
-- On RBRACKET reduce production session_datatype -> QUESTION datatype DOT datatype
-- On RBRACE reduce production session_datatype -> QUESTION datatype DOT datatype
-- On OTHERWISE reduce production session_datatype -> QUESTION datatype DOT datatype
-- On OP reduce production session_datatype -> QUESTION datatype DOT datatype
-- On ON reduce production session_datatype -> QUESTION datatype DOT datatype
-- On LINFUN reduce production session_datatype -> QUESTION datatype DOT datatype
-- On LARROW reduce production session_datatype -> QUESTION datatype DOT datatype
-- On HANDLER reduce production session_datatype -> QUESTION datatype DOT datatype
-- On FUN reduce production session_datatype -> QUESTION datatype DOT datatype
-- On FROM reduce production session_datatype -> QUESTION datatype DOT datatype
-- On END reduce production session_datatype -> QUESTION datatype DOT datatype
-- On ELSE reduce production session_datatype -> QUESTION datatype DOT datatype
-- On DOTDOT reduce production session_datatype -> QUESTION datatype DOT datatype
-- On DOT reduce production session_datatype -> QUESTION datatype DOT datatype
-- On DELETE_LEFT reduce production session_datatype -> QUESTION datatype DOT datatype
-- On DELETE reduce production session_datatype -> QUESTION datatype DOT datatype
-- On DEFAULT reduce production session_datatype -> QUESTION datatype DOT datatype
-- On COMMA reduce production session_datatype -> QUESTION datatype DOT datatype
-- On COLON reduce production session_datatype -> QUESTION datatype DOT datatype
-- On CASE reduce production session_datatype -> QUESTION datatype DOT datatype
-- On BY reduce production session_datatype -> QUESTION datatype DOT datatype
-- On BARRBRACKET reduce production session_datatype -> QUESTION datatype DOT datatype
-- On BARRBRACE reduce production session_datatype -> QUESTION datatype DOT datatype
-- On BARPLUSRBRACKET reduce production session_datatype -> QUESTION datatype DOT datatype
-- On BARAMPRBRACKET reduce production session_datatype -> QUESTION datatype DOT datatype
-- On AS reduce production session_datatype -> QUESTION datatype DOT datatype

State 267:
session_datatype -> TILDE datatype . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production session_datatype -> TILDE datatype
-- On WHERE reduce production session_datatype -> TILDE datatype
-- On VBAR reduce production session_datatype -> TILDE datatype
-- On VAR reduce production session_datatype -> TILDE datatype
-- On VALUES reduce production session_datatype -> TILDE datatype
-- On TABLEKEYS reduce production session_datatype -> TILDE datatype
-- On SHALLOWHANDLER reduce production session_datatype -> TILDE datatype
-- On SEMICOLON reduce production session_datatype -> TILDE datatype
-- On RPAREN reduce production session_datatype -> TILDE datatype
-- On RETURNING reduce production session_datatype -> TILDE datatype
-- On RBRACKET reduce production session_datatype -> TILDE datatype
-- On RBRACE reduce production session_datatype -> TILDE datatype
-- On OTHERWISE reduce production session_datatype -> TILDE datatype
-- On OP reduce production session_datatype -> TILDE datatype
-- On ON reduce production session_datatype -> TILDE datatype
-- On LINFUN reduce production session_datatype -> TILDE datatype
-- On LARROW reduce production session_datatype -> TILDE datatype
-- On HANDLER reduce production session_datatype -> TILDE datatype
-- On FUN reduce production session_datatype -> TILDE datatype
-- On FROM reduce production session_datatype -> TILDE datatype
-- On END reduce production session_datatype -> TILDE datatype
-- On ELSE reduce production session_datatype -> TILDE datatype
-- On DOTDOT reduce production session_datatype -> TILDE datatype
-- On DOT reduce production session_datatype -> TILDE datatype
-- On DELETE_LEFT reduce production session_datatype -> TILDE datatype
-- On DELETE reduce production session_datatype -> TILDE datatype
-- On DEFAULT reduce production session_datatype -> TILDE datatype
-- On COMMA reduce production session_datatype -> TILDE datatype
-- On COLON reduce production session_datatype -> TILDE datatype
-- On CASE reduce production session_datatype -> TILDE datatype
-- On BY reduce production session_datatype -> TILDE datatype
-- On BARRBRACKET reduce production session_datatype -> TILDE datatype
-- On BARRBRACE reduce production session_datatype -> TILDE datatype
-- On BARPLUSRBRACKET reduce production session_datatype -> TILDE datatype
-- On BARAMPRBRACKET reduce production session_datatype -> TILDE datatype
-- On AS reduce production session_datatype -> TILDE datatype

State 268:
primary_datatype -> TABLEHANDLE LPAREN datatype . COMMA datatype COMMA datatype RPAREN [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On COMMA shift to state 269

State 269:
primary_datatype -> TABLEHANDLE LPAREN datatype COMMA . datatype COMMA datatype RPAREN [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 270

State 270:
primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype . COMMA datatype RPAREN [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On COMMA shift to state 271

State 271:
primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA . datatype RPAREN [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 272

State 272:
primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype . RPAREN [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On RPAREN shift to state 273

State 273:
primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN . [ WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS ]
-- On WITH reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On WHERE reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On VBAR reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On VAR reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On VALUES reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On TABLEKEYS reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On SHALLOWHANDLER reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On SERVER reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On SEMICOLON reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On RPAREN reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On RETURNING reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On RBRACKET reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On RBRACE reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On RARROW reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On POSTFIXOP reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On OTHERWISE reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On OP reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On ON reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On NATIVE reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On LLARROW reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On LINFUN reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On LBRACE reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On LARROW reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR9 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR8 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR7 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR6 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR5 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR4 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR3 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR2 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR1 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR0 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL9 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL8 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL7 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL6 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL5 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL4 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL3 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL2 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL1 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL0 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX9 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX8 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX7 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX6 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX5 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX4 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX3 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX2 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX1 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX0 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On IN reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On HANDLER reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On FUN reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On FROM reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On EQ reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On END reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On ELSE reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On DOTDOT reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On DOT reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On DELETE_LEFT reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On DELETE reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On DEFAULT reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On COMMA reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On COLON reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On CLIENT reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On CASE reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On BY reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On BARRBRACKET reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On BARRBRACE reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On BARPLUSRBRACKET reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On BARAMPRBRACKET reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On AS reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN

State 274:
pattern -> typed_pattern COLON primary_datatype . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA CLIENT ]
-- On VBAR reduce production pattern -> typed_pattern COLON primary_datatype
-- On SERVER reduce production pattern -> typed_pattern COLON primary_datatype
-- On RPAREN reduce production pattern -> typed_pattern COLON primary_datatype
-- On RBRACKET reduce production pattern -> typed_pattern COLON primary_datatype
-- On RBRACE reduce production pattern -> typed_pattern COLON primary_datatype
-- On RARROW reduce production pattern -> typed_pattern COLON primary_datatype
-- On POSTFIXOP reduce production pattern -> typed_pattern COLON primary_datatype
-- On NATIVE reduce production pattern -> typed_pattern COLON primary_datatype
-- On LLARROW reduce production pattern -> typed_pattern COLON primary_datatype
-- On LBRACE reduce production pattern -> typed_pattern COLON primary_datatype
-- On LARROW reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR9 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR8 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR7 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR6 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR5 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR4 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR3 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR2 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR1 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR0 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL9 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL8 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL7 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL6 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL5 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL4 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL3 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL2 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL1 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL0 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX9 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX8 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX7 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX6 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX5 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX4 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX3 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX2 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX1 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX0 reduce production pattern -> typed_pattern COLON primary_datatype
-- On IN reduce production pattern -> typed_pattern COLON primary_datatype
-- On EQ reduce production pattern -> typed_pattern COLON primary_datatype
-- On COMMA reduce production pattern -> typed_pattern COLON primary_datatype
-- On CLIENT reduce production pattern -> typed_pattern COLON primary_datatype

State 275:
negative_pattern -> primary_pattern . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production negative_pattern -> primary_pattern
-- On SERVER reduce production negative_pattern -> primary_pattern
-- On RPAREN reduce production negative_pattern -> primary_pattern
-- On RBRACKET reduce production negative_pattern -> primary_pattern
-- On RBRACE reduce production negative_pattern -> primary_pattern
-- On RARROW reduce production negative_pattern -> primary_pattern
-- On POSTFIXOP reduce production negative_pattern -> primary_pattern
-- On NATIVE reduce production negative_pattern -> primary_pattern
-- On LLARROW reduce production negative_pattern -> primary_pattern
-- On LBRACE reduce production negative_pattern -> primary_pattern
-- On LARROW reduce production negative_pattern -> primary_pattern
-- On INFIXR9 reduce production negative_pattern -> primary_pattern
-- On INFIXR8 reduce production negative_pattern -> primary_pattern
-- On INFIXR7 reduce production negative_pattern -> primary_pattern
-- On INFIXR6 reduce production negative_pattern -> primary_pattern
-- On INFIXR5 reduce production negative_pattern -> primary_pattern
-- On INFIXR4 reduce production negative_pattern -> primary_pattern
-- On INFIXR3 reduce production negative_pattern -> primary_pattern
-- On INFIXR2 reduce production negative_pattern -> primary_pattern
-- On INFIXR1 reduce production negative_pattern -> primary_pattern
-- On INFIXR0 reduce production negative_pattern -> primary_pattern
-- On INFIXL9 reduce production negative_pattern -> primary_pattern
-- On INFIXL8 reduce production negative_pattern -> primary_pattern
-- On INFIXL7 reduce production negative_pattern -> primary_pattern
-- On INFIXL6 reduce production negative_pattern -> primary_pattern
-- On INFIXL5 reduce production negative_pattern -> primary_pattern
-- On INFIXL4 reduce production negative_pattern -> primary_pattern
-- On INFIXL3 reduce production negative_pattern -> primary_pattern
-- On INFIXL2 reduce production negative_pattern -> primary_pattern
-- On INFIXL1 reduce production negative_pattern -> primary_pattern
-- On INFIXL0 reduce production negative_pattern -> primary_pattern
-- On INFIX9 reduce production negative_pattern -> primary_pattern
-- On INFIX8 reduce production negative_pattern -> primary_pattern
-- On INFIX7 reduce production negative_pattern -> primary_pattern
-- On INFIX6 reduce production negative_pattern -> primary_pattern
-- On INFIX5 reduce production negative_pattern -> primary_pattern
-- On INFIX4 reduce production negative_pattern -> primary_pattern
-- On INFIX3 reduce production negative_pattern -> primary_pattern
-- On INFIX2 reduce production negative_pattern -> primary_pattern
-- On INFIX1 reduce production negative_pattern -> primary_pattern
-- On INFIX0 reduce production negative_pattern -> primary_pattern
-- On IN reduce production negative_pattern -> primary_pattern
-- On EQ reduce production negative_pattern -> primary_pattern
-- On COMMA reduce production negative_pattern -> primary_pattern
-- On COLONCOLON reduce production negative_pattern -> primary_pattern
-- On COLON reduce production negative_pattern -> primary_pattern
-- On CLIENT reduce production negative_pattern -> primary_pattern
-- On AS reduce production negative_pattern -> primary_pattern

State 276:
primary_pattern -> LBRACKET patterns . RBRACKET [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On RBRACKET shift to state 277

State 277:
primary_pattern -> LBRACKET patterns RBRACKET . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On SERVER reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On RPAREN reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On RBRACKET reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On RBRACE reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On RARROW reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On POSTFIXOP reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On NATIVE reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On LLARROW reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On LBRACE reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On LARROW reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR9 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR8 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR7 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR6 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR5 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR4 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR3 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR2 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR1 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR0 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL9 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL8 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL7 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL6 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL5 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL4 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL3 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL2 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL1 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL0 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX9 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX8 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX7 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX6 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX5 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX4 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX3 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX2 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX1 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX0 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On IN reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On EQ reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On COMMA reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On COLONCOLON reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On COLON reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On CLIENT reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On AS reduce production primary_pattern -> LBRACKET patterns RBRACKET

State 278:
patterns -> pattern . [ RPAREN RBRACKET ]
patterns -> pattern . COMMA patterns [ RPAREN RBRACKET ]
-- On COMMA shift to state 279
-- On RPAREN reduce production patterns -> pattern
-- On RBRACKET reduce production patterns -> pattern

State 279:
patterns -> pattern COMMA . patterns [ RPAREN RBRACKET ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On primary_pattern shift to state 275
-- On patterns shift to state 280
-- On pattern shift to state 278
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 280:
patterns -> pattern COMMA patterns . [ RPAREN RBRACKET ]
-- On RPAREN reduce production patterns -> pattern COMMA patterns
-- On RBRACKET reduce production patterns -> pattern COMMA patterns

State 281:
primary_pattern -> parenthesized_pattern . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production primary_pattern -> parenthesized_pattern
-- On SERVER reduce production primary_pattern -> parenthesized_pattern
-- On RPAREN reduce production primary_pattern -> parenthesized_pattern
-- On RBRACKET reduce production primary_pattern -> parenthesized_pattern
-- On RBRACE reduce production primary_pattern -> parenthesized_pattern
-- On RARROW reduce production primary_pattern -> parenthesized_pattern
-- On POSTFIXOP reduce production primary_pattern -> parenthesized_pattern
-- On NATIVE reduce production primary_pattern -> parenthesized_pattern
-- On LLARROW reduce production primary_pattern -> parenthesized_pattern
-- On LBRACE reduce production primary_pattern -> parenthesized_pattern
-- On LARROW reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR9 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR8 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR7 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR6 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR5 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR4 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR3 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR2 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR1 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR0 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL9 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL8 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL7 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL6 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL5 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL4 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL3 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL2 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL1 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL0 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX9 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX8 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX7 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX6 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX5 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX4 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX3 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX2 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX1 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX0 reduce production primary_pattern -> parenthesized_pattern
-- On IN reduce production primary_pattern -> parenthesized_pattern
-- On EQ reduce production primary_pattern -> parenthesized_pattern
-- On COMMA reduce production primary_pattern -> parenthesized_pattern
-- On COLONCOLON reduce production primary_pattern -> parenthesized_pattern
-- On COLON reduce production primary_pattern -> parenthesized_pattern
-- On CLIENT reduce production primary_pattern -> parenthesized_pattern
-- On AS reduce production primary_pattern -> parenthesized_pattern

State 282:
constructor_pattern -> negative_pattern . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production constructor_pattern -> negative_pattern
-- On SERVER reduce production constructor_pattern -> negative_pattern
-- On RPAREN reduce production constructor_pattern -> negative_pattern
-- On RBRACKET reduce production constructor_pattern -> negative_pattern
-- On RBRACE reduce production constructor_pattern -> negative_pattern
-- On RARROW reduce production constructor_pattern -> negative_pattern
-- On POSTFIXOP reduce production constructor_pattern -> negative_pattern
-- On NATIVE reduce production constructor_pattern -> negative_pattern
-- On LLARROW reduce production constructor_pattern -> negative_pattern
-- On LBRACE reduce production constructor_pattern -> negative_pattern
-- On LARROW reduce production constructor_pattern -> negative_pattern
-- On INFIXR9 reduce production constructor_pattern -> negative_pattern
-- On INFIXR8 reduce production constructor_pattern -> negative_pattern
-- On INFIXR7 reduce production constructor_pattern -> negative_pattern
-- On INFIXR6 reduce production constructor_pattern -> negative_pattern
-- On INFIXR5 reduce production constructor_pattern -> negative_pattern
-- On INFIXR4 reduce production constructor_pattern -> negative_pattern
-- On INFIXR3 reduce production constructor_pattern -> negative_pattern
-- On INFIXR2 reduce production constructor_pattern -> negative_pattern
-- On INFIXR1 reduce production constructor_pattern -> negative_pattern
-- On INFIXR0 reduce production constructor_pattern -> negative_pattern
-- On INFIXL9 reduce production constructor_pattern -> negative_pattern
-- On INFIXL8 reduce production constructor_pattern -> negative_pattern
-- On INFIXL7 reduce production constructor_pattern -> negative_pattern
-- On INFIXL6 reduce production constructor_pattern -> negative_pattern
-- On INFIXL5 reduce production constructor_pattern -> negative_pattern
-- On INFIXL4 reduce production constructor_pattern -> negative_pattern
-- On INFIXL3 reduce production constructor_pattern -> negative_pattern
-- On INFIXL2 reduce production constructor_pattern -> negative_pattern
-- On INFIXL1 reduce production constructor_pattern -> negative_pattern
-- On INFIXL0 reduce production constructor_pattern -> negative_pattern
-- On INFIX9 reduce production constructor_pattern -> negative_pattern
-- On INFIX8 reduce production constructor_pattern -> negative_pattern
-- On INFIX7 reduce production constructor_pattern -> negative_pattern
-- On INFIX6 reduce production constructor_pattern -> negative_pattern
-- On INFIX5 reduce production constructor_pattern -> negative_pattern
-- On INFIX4 reduce production constructor_pattern -> negative_pattern
-- On INFIX3 reduce production constructor_pattern -> negative_pattern
-- On INFIX2 reduce production constructor_pattern -> negative_pattern
-- On INFIX1 reduce production constructor_pattern -> negative_pattern
-- On INFIX0 reduce production constructor_pattern -> negative_pattern
-- On IN reduce production constructor_pattern -> negative_pattern
-- On EQ reduce production constructor_pattern -> negative_pattern
-- On COMMA reduce production constructor_pattern -> negative_pattern
-- On COLONCOLON reduce production constructor_pattern -> negative_pattern
-- On COLON reduce production constructor_pattern -> negative_pattern
-- On CLIENT reduce production constructor_pattern -> negative_pattern
-- On AS reduce production constructor_pattern -> negative_pattern

State 283:
cons_pattern -> constructor_pattern . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLON CLIENT AS ]
cons_pattern -> constructor_pattern . COLONCOLON cons_pattern [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLON CLIENT AS ]
-- On COLONCOLON shift to state 284
-- On VBAR reduce production cons_pattern -> constructor_pattern
-- On SERVER reduce production cons_pattern -> constructor_pattern
-- On RPAREN reduce production cons_pattern -> constructor_pattern
-- On RBRACKET reduce production cons_pattern -> constructor_pattern
-- On RBRACE reduce production cons_pattern -> constructor_pattern
-- On RARROW reduce production cons_pattern -> constructor_pattern
-- On POSTFIXOP reduce production cons_pattern -> constructor_pattern
-- On NATIVE reduce production cons_pattern -> constructor_pattern
-- On LLARROW reduce production cons_pattern -> constructor_pattern
-- On LBRACE reduce production cons_pattern -> constructor_pattern
-- On LARROW reduce production cons_pattern -> constructor_pattern
-- On INFIXR9 reduce production cons_pattern -> constructor_pattern
-- On INFIXR8 reduce production cons_pattern -> constructor_pattern
-- On INFIXR7 reduce production cons_pattern -> constructor_pattern
-- On INFIXR6 reduce production cons_pattern -> constructor_pattern
-- On INFIXR5 reduce production cons_pattern -> constructor_pattern
-- On INFIXR4 reduce production cons_pattern -> constructor_pattern
-- On INFIXR3 reduce production cons_pattern -> constructor_pattern
-- On INFIXR2 reduce production cons_pattern -> constructor_pattern
-- On INFIXR1 reduce production cons_pattern -> constructor_pattern
-- On INFIXR0 reduce production cons_pattern -> constructor_pattern
-- On INFIXL9 reduce production cons_pattern -> constructor_pattern
-- On INFIXL8 reduce production cons_pattern -> constructor_pattern
-- On INFIXL7 reduce production cons_pattern -> constructor_pattern
-- On INFIXL6 reduce production cons_pattern -> constructor_pattern
-- On INFIXL5 reduce production cons_pattern -> constructor_pattern
-- On INFIXL4 reduce production cons_pattern -> constructor_pattern
-- On INFIXL3 reduce production cons_pattern -> constructor_pattern
-- On INFIXL2 reduce production cons_pattern -> constructor_pattern
-- On INFIXL1 reduce production cons_pattern -> constructor_pattern
-- On INFIXL0 reduce production cons_pattern -> constructor_pattern
-- On INFIX9 reduce production cons_pattern -> constructor_pattern
-- On INFIX8 reduce production cons_pattern -> constructor_pattern
-- On INFIX7 reduce production cons_pattern -> constructor_pattern
-- On INFIX6 reduce production cons_pattern -> constructor_pattern
-- On INFIX5 reduce production cons_pattern -> constructor_pattern
-- On INFIX4 reduce production cons_pattern -> constructor_pattern
-- On INFIX3 reduce production cons_pattern -> constructor_pattern
-- On INFIX2 reduce production cons_pattern -> constructor_pattern
-- On INFIX1 reduce production cons_pattern -> constructor_pattern
-- On INFIX0 reduce production cons_pattern -> constructor_pattern
-- On IN reduce production cons_pattern -> constructor_pattern
-- On EQ reduce production cons_pattern -> constructor_pattern
-- On COMMA reduce production cons_pattern -> constructor_pattern
-- On COLON reduce production cons_pattern -> constructor_pattern
-- On CLIENT reduce production cons_pattern -> constructor_pattern
-- On AS reduce production cons_pattern -> constructor_pattern

State 284:
cons_pattern -> constructor_pattern COLONCOLON . cons_pattern [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLON CLIENT AS ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On primary_pattern shift to state 275
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 286

State 285:
primary_pattern -> constant . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production primary_pattern -> constant
-- On SERVER reduce production primary_pattern -> constant
-- On RPAREN reduce production primary_pattern -> constant
-- On RBRACKET reduce production primary_pattern -> constant
-- On RBRACE reduce production primary_pattern -> constant
-- On RARROW reduce production primary_pattern -> constant
-- On POSTFIXOP reduce production primary_pattern -> constant
-- On NATIVE reduce production primary_pattern -> constant
-- On LLARROW reduce production primary_pattern -> constant
-- On LBRACE reduce production primary_pattern -> constant
-- On LARROW reduce production primary_pattern -> constant
-- On INFIXR9 reduce production primary_pattern -> constant
-- On INFIXR8 reduce production primary_pattern -> constant
-- On INFIXR7 reduce production primary_pattern -> constant
-- On INFIXR6 reduce production primary_pattern -> constant
-- On INFIXR5 reduce production primary_pattern -> constant
-- On INFIXR4 reduce production primary_pattern -> constant
-- On INFIXR3 reduce production primary_pattern -> constant
-- On INFIXR2 reduce production primary_pattern -> constant
-- On INFIXR1 reduce production primary_pattern -> constant
-- On INFIXR0 reduce production primary_pattern -> constant
-- On INFIXL9 reduce production primary_pattern -> constant
-- On INFIXL8 reduce production primary_pattern -> constant
-- On INFIXL7 reduce production primary_pattern -> constant
-- On INFIXL6 reduce production primary_pattern -> constant
-- On INFIXL5 reduce production primary_pattern -> constant
-- On INFIXL4 reduce production primary_pattern -> constant
-- On INFIXL3 reduce production primary_pattern -> constant
-- On INFIXL2 reduce production primary_pattern -> constant
-- On INFIXL1 reduce production primary_pattern -> constant
-- On INFIXL0 reduce production primary_pattern -> constant
-- On INFIX9 reduce production primary_pattern -> constant
-- On INFIX8 reduce production primary_pattern -> constant
-- On INFIX7 reduce production primary_pattern -> constant
-- On INFIX6 reduce production primary_pattern -> constant
-- On INFIX5 reduce production primary_pattern -> constant
-- On INFIX4 reduce production primary_pattern -> constant
-- On INFIX3 reduce production primary_pattern -> constant
-- On INFIX2 reduce production primary_pattern -> constant
-- On INFIX1 reduce production primary_pattern -> constant
-- On INFIX0 reduce production primary_pattern -> constant
-- On IN reduce production primary_pattern -> constant
-- On EQ reduce production primary_pattern -> constant
-- On COMMA reduce production primary_pattern -> constant
-- On COLONCOLON reduce production primary_pattern -> constant
-- On COLON reduce production primary_pattern -> constant
-- On CLIENT reduce production primary_pattern -> constant
-- On AS reduce production primary_pattern -> constant

State 286:
cons_pattern -> constructor_pattern COLONCOLON cons_pattern . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLON CLIENT AS ]
-- On VBAR reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On SERVER reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On RPAREN reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On RBRACKET reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On RBRACE reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On RARROW reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On POSTFIXOP reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On NATIVE reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On LLARROW reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On LBRACE reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On LARROW reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR9 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR8 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR7 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR6 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR5 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR4 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR3 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR2 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR1 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR0 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL9 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL8 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL7 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL6 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL5 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL4 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL3 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL2 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL1 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL0 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX9 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX8 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX7 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX6 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX5 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX4 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX3 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX2 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX1 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX0 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On IN reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On EQ reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On COMMA reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On COLON reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On CLIENT reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On AS reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern

State 287:
typed_pattern -> cons_pattern . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLON CLIENT ]
typed_pattern -> cons_pattern . AS var [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLON CLIENT ]
-- On AS shift to state 288
-- On VBAR reduce production typed_pattern -> cons_pattern
-- On SERVER reduce production typed_pattern -> cons_pattern
-- On RPAREN reduce production typed_pattern -> cons_pattern
-- On RBRACKET reduce production typed_pattern -> cons_pattern
-- On RBRACE reduce production typed_pattern -> cons_pattern
-- On RARROW reduce production typed_pattern -> cons_pattern
-- On POSTFIXOP reduce production typed_pattern -> cons_pattern
-- On NATIVE reduce production typed_pattern -> cons_pattern
-- On LLARROW reduce production typed_pattern -> cons_pattern
-- On LBRACE reduce production typed_pattern -> cons_pattern
-- On LARROW reduce production typed_pattern -> cons_pattern
-- On INFIXR9 reduce production typed_pattern -> cons_pattern
-- On INFIXR8 reduce production typed_pattern -> cons_pattern
-- On INFIXR7 reduce production typed_pattern -> cons_pattern
-- On INFIXR6 reduce production typed_pattern -> cons_pattern
-- On INFIXR5 reduce production typed_pattern -> cons_pattern
-- On INFIXR4 reduce production typed_pattern -> cons_pattern
-- On INFIXR3 reduce production typed_pattern -> cons_pattern
-- On INFIXR2 reduce production typed_pattern -> cons_pattern
-- On INFIXR1 reduce production typed_pattern -> cons_pattern
-- On INFIXR0 reduce production typed_pattern -> cons_pattern
-- On INFIXL9 reduce production typed_pattern -> cons_pattern
-- On INFIXL8 reduce production typed_pattern -> cons_pattern
-- On INFIXL7 reduce production typed_pattern -> cons_pattern
-- On INFIXL6 reduce production typed_pattern -> cons_pattern
-- On INFIXL5 reduce production typed_pattern -> cons_pattern
-- On INFIXL4 reduce production typed_pattern -> cons_pattern
-- On INFIXL3 reduce production typed_pattern -> cons_pattern
-- On INFIXL2 reduce production typed_pattern -> cons_pattern
-- On INFIXL1 reduce production typed_pattern -> cons_pattern
-- On INFIXL0 reduce production typed_pattern -> cons_pattern
-- On INFIX9 reduce production typed_pattern -> cons_pattern
-- On INFIX8 reduce production typed_pattern -> cons_pattern
-- On INFIX7 reduce production typed_pattern -> cons_pattern
-- On INFIX6 reduce production typed_pattern -> cons_pattern
-- On INFIX5 reduce production typed_pattern -> cons_pattern
-- On INFIX4 reduce production typed_pattern -> cons_pattern
-- On INFIX3 reduce production typed_pattern -> cons_pattern
-- On INFIX2 reduce production typed_pattern -> cons_pattern
-- On INFIX1 reduce production typed_pattern -> cons_pattern
-- On INFIX0 reduce production typed_pattern -> cons_pattern
-- On IN reduce production typed_pattern -> cons_pattern
-- On EQ reduce production typed_pattern -> cons_pattern
-- On COMMA reduce production typed_pattern -> cons_pattern
-- On COLON reduce production typed_pattern -> cons_pattern
-- On CLIENT reduce production typed_pattern -> cons_pattern

State 288:
typed_pattern -> cons_pattern AS . var [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLON CLIENT ]
-- On VARIABLE shift to state 4
-- On var shift to state 289

State 289:
typed_pattern -> cons_pattern AS var . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLON CLIENT ]
-- On VBAR reduce production typed_pattern -> cons_pattern AS var
-- On SERVER reduce production typed_pattern -> cons_pattern AS var
-- On RPAREN reduce production typed_pattern -> cons_pattern AS var
-- On RBRACKET reduce production typed_pattern -> cons_pattern AS var
-- On RBRACE reduce production typed_pattern -> cons_pattern AS var
-- On RARROW reduce production typed_pattern -> cons_pattern AS var
-- On POSTFIXOP reduce production typed_pattern -> cons_pattern AS var
-- On NATIVE reduce production typed_pattern -> cons_pattern AS var
-- On LLARROW reduce production typed_pattern -> cons_pattern AS var
-- On LBRACE reduce production typed_pattern -> cons_pattern AS var
-- On LARROW reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR9 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR8 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR7 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR6 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR5 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR4 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR3 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR2 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR1 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR0 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL9 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL8 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL7 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL6 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL5 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL4 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL3 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL2 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL1 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL0 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX9 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX8 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX7 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX6 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX5 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX4 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX3 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX2 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX1 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX0 reduce production typed_pattern -> cons_pattern AS var
-- On IN reduce production typed_pattern -> cons_pattern AS var
-- On EQ reduce production typed_pattern -> cons_pattern AS var
-- On COMMA reduce production typed_pattern -> cons_pattern AS var
-- On COLON reduce production typed_pattern -> cons_pattern AS var
-- On CLIENT reduce production typed_pattern -> cons_pattern AS var

State 290:
constructor_pattern -> CONSTRUCTOR . [ RPAREN COMMA COLONCOLON COLON AS ]
constructor_pattern -> CONSTRUCTOR . parenthesized_pattern [ RPAREN COMMA COLONCOLON COLON AS ]
field_label -> CONSTRUCTOR . [ EQ ]
-- On LPAREN shift to state 27
-- On parenthesized_pattern shift to state 36
-- On RPAREN reduce production constructor_pattern -> CONSTRUCTOR
-- On EQ reduce production field_label -> CONSTRUCTOR
-- On COMMA reduce production constructor_pattern -> CONSTRUCTOR
-- On COLONCOLON reduce production constructor_pattern -> CONSTRUCTOR
-- On COLON reduce production constructor_pattern -> CONSTRUCTOR
-- On AS reduce production constructor_pattern -> CONSTRUCTOR

State 291:
labeled_patterns -> record_label . EQ pattern [ VBAR RPAREN ]
labeled_patterns -> record_label . EQ pattern COMMA labeled_patterns [ VBAR RPAREN ]
-- On EQ shift to state 292

State 292:
labeled_patterns -> record_label EQ . pattern [ VBAR RPAREN ]
labeled_patterns -> record_label EQ . pattern COMMA labeled_patterns [ VBAR RPAREN ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On primary_pattern shift to state 275
-- On pattern shift to state 293
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 293:
labeled_patterns -> record_label EQ pattern . [ VBAR RPAREN ]
labeled_patterns -> record_label EQ pattern . COMMA labeled_patterns [ VBAR RPAREN ]
-- On COMMA shift to state 294
-- On VBAR reduce production labeled_patterns -> record_label EQ pattern
-- On RPAREN reduce production labeled_patterns -> record_label EQ pattern

State 294:
labeled_patterns -> record_label EQ pattern COMMA . labeled_patterns [ VBAR RPAREN ]
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On CONSTRUCTOR shift to state 91
-- On record_label shift to state 291
-- On labeled_patterns shift to state 295
-- On field_label shift to state 254

State 295:
labeled_patterns -> record_label EQ pattern COMMA labeled_patterns . [ VBAR RPAREN ]
-- On VBAR reduce production labeled_patterns -> record_label EQ pattern COMMA labeled_patterns
-- On RPAREN reduce production labeled_patterns -> record_label EQ pattern COMMA labeled_patterns

State 296:
parenthesized_pattern -> LPAREN pattern . RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
parenthesized_pattern -> LPAREN pattern . COMMA patterns RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On RPAREN shift to state 297
-- On COMMA shift to state 298

State 297:
parenthesized_pattern -> LPAREN pattern RPAREN . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On SERVER reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On RPAREN reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On RBRACKET reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On RBRACE reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On RARROW reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On POSTFIXOP reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On NATIVE reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On LLARROW reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On LBRACE reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On LARROW reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR9 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR8 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR7 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR6 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR5 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR4 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR3 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR2 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR1 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR0 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL9 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL8 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL7 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL6 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL5 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL4 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL3 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL2 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL1 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL0 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX9 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX8 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX7 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX6 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX5 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX4 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX3 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX2 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX1 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX0 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On IN reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On EQ reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On COMMA reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On COLONCOLON reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On COLON reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On CLIENT reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On AS reduce production parenthesized_pattern -> LPAREN pattern RPAREN

State 298:
parenthesized_pattern -> LPAREN pattern COMMA . patterns RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On primary_pattern shift to state 275
-- On patterns shift to state 299
-- On pattern shift to state 278
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 299:
parenthesized_pattern -> LPAREN pattern COMMA patterns . RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On RPAREN shift to state 300

State 300:
parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On SERVER reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On RPAREN reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On RBRACKET reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On RBRACE reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On RARROW reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On POSTFIXOP reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On NATIVE reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On LLARROW reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On LBRACE reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On LARROW reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR9 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR8 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR7 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR6 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR5 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR4 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR3 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR2 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR1 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR0 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL9 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL8 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL7 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL6 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL5 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL4 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL3 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL2 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL1 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL0 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX9 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX8 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX7 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX6 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX5 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX4 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX3 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX2 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX1 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX0 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On IN reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On EQ reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On COMMA reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On COLONCOLON reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On COLON reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On CLIENT reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On AS reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN

State 301:
parenthesized_pattern -> LPAREN labeled_patterns . VBAR pattern RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
parenthesized_pattern -> LPAREN labeled_patterns . RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR shift to state 302
-- On RPAREN shift to state 305

State 302:
parenthesized_pattern -> LPAREN labeled_patterns VBAR . pattern RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On primary_pattern shift to state 275
-- On pattern shift to state 303
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 303:
parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern . RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On RPAREN shift to state 304

State 304:
parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On SERVER reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On RPAREN reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On RBRACKET reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On RBRACE reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On RARROW reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On POSTFIXOP reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On NATIVE reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On LLARROW reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On LBRACE reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On LARROW reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR9 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR8 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR7 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR6 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR5 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR4 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR3 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR2 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR1 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR0 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL9 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL8 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL7 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL6 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL5 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL4 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL3 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL2 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL1 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL0 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX9 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX8 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX7 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX6 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX5 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX4 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX3 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX2 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX1 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX0 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On IN reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On EQ reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On COMMA reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On COLONCOLON reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On COLON reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On CLIENT reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On AS reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN

State 305:
parenthesized_pattern -> LPAREN labeled_patterns RPAREN . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On SERVER reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On RPAREN reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On RBRACKET reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On RBRACE reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On RARROW reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On POSTFIXOP reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On NATIVE reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On LLARROW reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On LBRACE reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On LARROW reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR9 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR8 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR7 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR6 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR5 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR4 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR3 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR2 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR1 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR0 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL9 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL8 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL7 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL6 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL5 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL4 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL3 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL2 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL1 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL0 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX9 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX8 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX7 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX6 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX5 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX4 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX3 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX2 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX1 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX0 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On IN reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On EQ reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On COMMA reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On COLONCOLON reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On COLON reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On CLIENT reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On AS reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN

State 306:
db_expression -> UPDATE LPAREN table_generator . RPAREN perhaps_where SET LPAREN labeled_exps RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RPAREN shift to state 307

State 307:
db_expression -> UPDATE LPAREN table_generator RPAREN . perhaps_where SET LPAREN labeled_exps RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WHERE shift to state 308
-- On perhaps_where shift to state 1073
-- On SET reduce production perhaps_where ->

State 308:
perhaps_where -> WHERE . LPAREN exp RPAREN [ WITH VBAR VARIABLE VALUES UPDATE UINTEGER UFLOAT TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SET SEMICOLON SELECT RPAREN RETURNING RECEIVE RBRACKET RBRACE RAISE QUERY PREFIXOP PAGE OTHERWISE ORDERBY ON OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FROM FORMLET FOR FALSE ESCAPE END ELSE DOTDOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA CHAR CASE BY BARRBRACE AS ]
-- On LPAREN shift to state 309

State 309:
perhaps_where -> WHERE LPAREN . exp RPAREN [ WITH VBAR VARIABLE VALUES UPDATE UINTEGER UFLOAT TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SET SEMICOLON SELECT RPAREN RETURNING RECEIVE RBRACKET RBRACE RAISE QUERY PREFIXOP PAGE OTHERWISE ORDERBY ON OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FROM FORMLET FOR FALSE ESCAPE END ELSE DOTDOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA CHAR CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 1071
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 310:
case_expression -> TRY . exp AS pattern IN exp OTHERWISE exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 1064
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 311:
table_expression -> TABLE . exp WITH datatype perhaps_table_constraints FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
table_expression -> TABLE . exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 1044
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 312:
case_expression -> SWITCH . LPAREN exp RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LPAREN shift to state 313

State 313:
case_expression -> SWITCH LPAREN . exp RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 1039
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 314:
spawn_expression -> SPAWNWAIT . block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LBRACE shift to state 315
-- On block shift to state 1038

State 315:
block -> LBRACE . block_contents RBRACE [ WITH VBAR VARIABLE VAR VALUES UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLEKEYS TABLE SWITCH STRING STAR SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SLASHRXML SLASHFLAGS SLASH SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RXML RQUOTE RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW RANGE RAISE QUOTEDMETA QUESTION QUERY PREFIXOP PREFIX POSTFIXOP POSTFIX PLUS PAGE OTHERWISE OPEN OP ON OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXR INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIXL INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 INFIX IF HANDLER HANDLE FUN FROM FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE END ELSE DOTDOT DOT DOOP DOLLAR DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE CARET BY BARRBRACE BARBAR BANG AS AMPAMP ALTERNATE ALIEN ]
-- On VARIABLE shift to state 2
-- On VAR shift to state 316
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TYPENAME shift to state 339
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SIG shift to state 347
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SEMICOLON shift to state 384
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OPEN shift to state 429
-- On OFFER shift to state 400
-- On MODULE shift to state 432
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 524
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 872
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On ALIEN shift to state 876
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typedecl shift to state 879
-- On typed_handler_binding shift to state 881
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On signature shift to state 882
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On perhaps_semi shift to state 891
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On links_open shift to state 892
-- On links_module shift to state 893
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 894
-- On formlet_expression shift to state 746
-- On exp shift to state 896
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block_contents shift to state 976
-- On block shift to state 610
-- On bindings shift to state 900
-- On binding shift to state 905
-- On atomic_expression shift to state 611
-- On alien_block shift to state 904
-- On RBRACE reduce production perhaps_semi ->

State 316:
binding -> VAR . pattern EQ exp SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On primary_pattern shift to state 275
-- On pattern shift to state 317
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 317:
binding -> VAR pattern . EQ exp SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On EQ shift to state 318

State 318:
binding -> VAR pattern EQ . exp SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 1036
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 319:
spawn_expression -> SPAWNCLIENT . block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LBRACE shift to state 315
-- On block shift to state 320

State 320:
spawn_expression -> SPAWNCLIENT block . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production spawn_expression -> SPAWNCLIENT block
-- On VBAR reduce production spawn_expression -> SPAWNCLIENT block
-- On VALUES reduce production spawn_expression -> SPAWNCLIENT block
-- On TABLEKEYS reduce production spawn_expression -> SPAWNCLIENT block
-- On SEMICOLON reduce production spawn_expression -> SPAWNCLIENT block
-- On RPAREN reduce production spawn_expression -> SPAWNCLIENT block
-- On RETURNING reduce production spawn_expression -> SPAWNCLIENT block
-- On RBRACKET reduce production spawn_expression -> SPAWNCLIENT block
-- On RBRACE reduce production spawn_expression -> SPAWNCLIENT block
-- On RARROW reduce production spawn_expression -> SPAWNCLIENT block
-- On OTHERWISE reduce production spawn_expression -> SPAWNCLIENT block
-- On ON reduce production spawn_expression -> SPAWNCLIENT block
-- On MINUSDOT reduce production spawn_expression -> SPAWNCLIENT block
-- On MINUS reduce production spawn_expression -> SPAWNCLIENT block
-- On LPAREN reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXR9 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXR8 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXR7 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXR6 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXR5 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXR4 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXR3 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXR2 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXR1 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXR0 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXL9 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXL8 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXL7 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXL6 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXL5 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXL4 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXL3 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXL2 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXL1 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIXL0 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIX9 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIX8 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIX7 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIX6 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIX5 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIX4 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIX3 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIX2 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIX1 reduce production spawn_expression -> SPAWNCLIENT block
-- On INFIX0 reduce production spawn_expression -> SPAWNCLIENT block
-- On FROM reduce production spawn_expression -> SPAWNCLIENT block
-- On FATRARROW reduce production spawn_expression -> SPAWNCLIENT block
-- On EQUALSTILDE reduce production spawn_expression -> SPAWNCLIENT block
-- On END reduce production spawn_expression -> SPAWNCLIENT block
-- On ELSE reduce production spawn_expression -> SPAWNCLIENT block
-- On DOTDOT reduce production spawn_expression -> SPAWNCLIENT block
-- On DOT reduce production spawn_expression -> SPAWNCLIENT block
-- On DELETE_LEFT reduce production spawn_expression -> SPAWNCLIENT block
-- On DELETE reduce production spawn_expression -> SPAWNCLIENT block
-- On DEFAULT reduce production spawn_expression -> SPAWNCLIENT block
-- On COMMA reduce production spawn_expression -> SPAWNCLIENT block
-- On COLONCOLON reduce production spawn_expression -> SPAWNCLIENT block
-- On COLON reduce production spawn_expression -> SPAWNCLIENT block
-- On CASE reduce production spawn_expression -> SPAWNCLIENT block
-- On BY reduce production spawn_expression -> SPAWNCLIENT block
-- On BARRBRACE reduce production spawn_expression -> SPAWNCLIENT block
-- On BARBAR reduce production spawn_expression -> SPAWNCLIENT block
-- On BANG reduce production spawn_expression -> SPAWNCLIENT block
-- On AS reduce production spawn_expression -> SPAWNCLIENT block
-- On AMPAMP reduce production spawn_expression -> SPAWNCLIENT block

State 321:
spawn_expression -> SPAWNAT . LPAREN exp COMMA block RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LPAREN shift to state 322

State 322:
spawn_expression -> SPAWNAT LPAREN . exp COMMA block RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 1032
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 323:
spawn_expression -> SPAWNANGELAT . LPAREN exp COMMA block RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LPAREN shift to state 324

State 324:
spawn_expression -> SPAWNANGELAT LPAREN . exp COMMA block RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 1028
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 325:
spawn_expression -> SPAWNANGEL . block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LBRACE shift to state 315
-- On block shift to state 326

State 326:
spawn_expression -> SPAWNANGEL block . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production spawn_expression -> SPAWNANGEL block
-- On VBAR reduce production spawn_expression -> SPAWNANGEL block
-- On VALUES reduce production spawn_expression -> SPAWNANGEL block
-- On TABLEKEYS reduce production spawn_expression -> SPAWNANGEL block
-- On SEMICOLON reduce production spawn_expression -> SPAWNANGEL block
-- On RPAREN reduce production spawn_expression -> SPAWNANGEL block
-- On RETURNING reduce production spawn_expression -> SPAWNANGEL block
-- On RBRACKET reduce production spawn_expression -> SPAWNANGEL block
-- On RBRACE reduce production spawn_expression -> SPAWNANGEL block
-- On RARROW reduce production spawn_expression -> SPAWNANGEL block
-- On OTHERWISE reduce production spawn_expression -> SPAWNANGEL block
-- On ON reduce production spawn_expression -> SPAWNANGEL block
-- On MINUSDOT reduce production spawn_expression -> SPAWNANGEL block
-- On MINUS reduce production spawn_expression -> SPAWNANGEL block
-- On LPAREN reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXR9 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXR8 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXR7 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXR6 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXR5 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXR4 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXR3 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXR2 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXR1 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXR0 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXL9 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXL8 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXL7 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXL6 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXL5 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXL4 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXL3 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXL2 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXL1 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIXL0 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIX9 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIX8 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIX7 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIX6 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIX5 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIX4 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIX3 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIX2 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIX1 reduce production spawn_expression -> SPAWNANGEL block
-- On INFIX0 reduce production spawn_expression -> SPAWNANGEL block
-- On FROM reduce production spawn_expression -> SPAWNANGEL block
-- On FATRARROW reduce production spawn_expression -> SPAWNANGEL block
-- On EQUALSTILDE reduce production spawn_expression -> SPAWNANGEL block
-- On END reduce production spawn_expression -> SPAWNANGEL block
-- On ELSE reduce production spawn_expression -> SPAWNANGEL block
-- On DOTDOT reduce production spawn_expression -> SPAWNANGEL block
-- On DOT reduce production spawn_expression -> SPAWNANGEL block
-- On DELETE_LEFT reduce production spawn_expression -> SPAWNANGEL block
-- On DELETE reduce production spawn_expression -> SPAWNANGEL block
-- On DEFAULT reduce production spawn_expression -> SPAWNANGEL block
-- On COMMA reduce production spawn_expression -> SPAWNANGEL block
-- On COLONCOLON reduce production spawn_expression -> SPAWNANGEL block
-- On COLON reduce production spawn_expression -> SPAWNANGEL block
-- On CASE reduce production spawn_expression -> SPAWNANGEL block
-- On BY reduce production spawn_expression -> SPAWNANGEL block
-- On BARRBRACE reduce production spawn_expression -> SPAWNANGEL block
-- On BARBAR reduce production spawn_expression -> SPAWNANGEL block
-- On BANG reduce production spawn_expression -> SPAWNANGEL block
-- On AS reduce production spawn_expression -> SPAWNANGEL block
-- On AMPAMP reduce production spawn_expression -> SPAWNANGEL block

State 327:
spawn_expression -> SPAWN . block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LBRACE shift to state 315
-- On block shift to state 328

State 328:
spawn_expression -> SPAWN block . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production spawn_expression -> SPAWN block
-- On VBAR reduce production spawn_expression -> SPAWN block
-- On VALUES reduce production spawn_expression -> SPAWN block
-- On TABLEKEYS reduce production spawn_expression -> SPAWN block
-- On SEMICOLON reduce production spawn_expression -> SPAWN block
-- On RPAREN reduce production spawn_expression -> SPAWN block
-- On RETURNING reduce production spawn_expression -> SPAWN block
-- On RBRACKET reduce production spawn_expression -> SPAWN block
-- On RBRACE reduce production spawn_expression -> SPAWN block
-- On RARROW reduce production spawn_expression -> SPAWN block
-- On OTHERWISE reduce production spawn_expression -> SPAWN block
-- On ON reduce production spawn_expression -> SPAWN block
-- On MINUSDOT reduce production spawn_expression -> SPAWN block
-- On MINUS reduce production spawn_expression -> SPAWN block
-- On LPAREN reduce production spawn_expression -> SPAWN block
-- On INFIXR9 reduce production spawn_expression -> SPAWN block
-- On INFIXR8 reduce production spawn_expression -> SPAWN block
-- On INFIXR7 reduce production spawn_expression -> SPAWN block
-- On INFIXR6 reduce production spawn_expression -> SPAWN block
-- On INFIXR5 reduce production spawn_expression -> SPAWN block
-- On INFIXR4 reduce production spawn_expression -> SPAWN block
-- On INFIXR3 reduce production spawn_expression -> SPAWN block
-- On INFIXR2 reduce production spawn_expression -> SPAWN block
-- On INFIXR1 reduce production spawn_expression -> SPAWN block
-- On INFIXR0 reduce production spawn_expression -> SPAWN block
-- On INFIXL9 reduce production spawn_expression -> SPAWN block
-- On INFIXL8 reduce production spawn_expression -> SPAWN block
-- On INFIXL7 reduce production spawn_expression -> SPAWN block
-- On INFIXL6 reduce production spawn_expression -> SPAWN block
-- On INFIXL5 reduce production spawn_expression -> SPAWN block
-- On INFIXL4 reduce production spawn_expression -> SPAWN block
-- On INFIXL3 reduce production spawn_expression -> SPAWN block
-- On INFIXL2 reduce production spawn_expression -> SPAWN block
-- On INFIXL1 reduce production spawn_expression -> SPAWN block
-- On INFIXL0 reduce production spawn_expression -> SPAWN block
-- On INFIX9 reduce production spawn_expression -> SPAWN block
-- On INFIX8 reduce production spawn_expression -> SPAWN block
-- On INFIX7 reduce production spawn_expression -> SPAWN block
-- On INFIX6 reduce production spawn_expression -> SPAWN block
-- On INFIX5 reduce production spawn_expression -> SPAWN block
-- On INFIX4 reduce production spawn_expression -> SPAWN block
-- On INFIX3 reduce production spawn_expression -> SPAWN block
-- On INFIX2 reduce production spawn_expression -> SPAWN block
-- On INFIX1 reduce production spawn_expression -> SPAWN block
-- On INFIX0 reduce production spawn_expression -> SPAWN block
-- On FROM reduce production spawn_expression -> SPAWN block
-- On FATRARROW reduce production spawn_expression -> SPAWN block
-- On EQUALSTILDE reduce production spawn_expression -> SPAWN block
-- On END reduce production spawn_expression -> SPAWN block
-- On ELSE reduce production spawn_expression -> SPAWN block
-- On DOTDOT reduce production spawn_expression -> SPAWN block
-- On DOT reduce production spawn_expression -> SPAWN block
-- On DELETE_LEFT reduce production spawn_expression -> SPAWN block
-- On DELETE reduce production spawn_expression -> SPAWN block
-- On DEFAULT reduce production spawn_expression -> SPAWN block
-- On COMMA reduce production spawn_expression -> SPAWN block
-- On COLONCOLON reduce production spawn_expression -> SPAWN block
-- On COLON reduce production spawn_expression -> SPAWN block
-- On CASE reduce production spawn_expression -> SPAWN block
-- On BY reduce production spawn_expression -> SPAWN block
-- On BARRBRACE reduce production spawn_expression -> SPAWN block
-- On BARBAR reduce production spawn_expression -> SPAWN block
-- On BANG reduce production spawn_expression -> SPAWN block
-- On AS reduce production spawn_expression -> SPAWN block
-- On AMPAMP reduce production spawn_expression -> SPAWN block

State 329:
handler_depth -> SHALLOWHANDLER . [ VARIABLE LPAREN LBRACKET LBRACE ]
-- On VARIABLE reduce production handler_depth -> SHALLOWHANDLER
-- On LPAREN reduce production handler_depth -> SHALLOWHANDLER
-- On LBRACKET reduce production handler_depth -> SHALLOWHANDLER
-- On LBRACE reduce production handler_depth -> SHALLOWHANDLER

State 330:
case_expression -> SHALLOWHANDLE . LPAREN exp RPAREN LBRACE cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LPAREN shift to state 331

State 331:
case_expression -> SHALLOWHANDLE LPAREN . exp RPAREN LBRACE cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 1023
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 332:
session_expression -> SELECT . field_label exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On CONSTRUCTOR shift to state 91
-- On field_label shift to state 333

State 333:
session_expression -> SELECT field_label . exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 1022
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 334:
atomic_expression -> RECEIVE . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
case_expression -> RECEIVE . LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LBRACE shift to state 335
-- On WITH reduce production atomic_expression -> RECEIVE
-- On VBAR reduce production atomic_expression -> RECEIVE
-- On VALUES reduce production atomic_expression -> RECEIVE
-- On TABLEKEYS reduce production atomic_expression -> RECEIVE
-- On SEMICOLON reduce production atomic_expression -> RECEIVE
-- On RPAREN reduce production atomic_expression -> RECEIVE
-- On RETURNING reduce production atomic_expression -> RECEIVE
-- On RBRACKET reduce production atomic_expression -> RECEIVE
-- On RBRACE reduce production atomic_expression -> RECEIVE
-- On RARROW reduce production atomic_expression -> RECEIVE
-- On POSTFIXOP reduce production atomic_expression -> RECEIVE
-- On OTHERWISE reduce production atomic_expression -> RECEIVE
-- On ON reduce production atomic_expression -> RECEIVE
-- On MINUSDOT reduce production atomic_expression -> RECEIVE
-- On MINUS reduce production atomic_expression -> RECEIVE
-- On LPAREN reduce production atomic_expression -> RECEIVE
-- On INFIXR9 reduce production atomic_expression -> RECEIVE
-- On INFIXR8 reduce production atomic_expression -> RECEIVE
-- On INFIXR7 reduce production atomic_expression -> RECEIVE
-- On INFIXR6 reduce production atomic_expression -> RECEIVE
-- On INFIXR5 reduce production atomic_expression -> RECEIVE
-- On INFIXR4 reduce production atomic_expression -> RECEIVE
-- On INFIXR3 reduce production atomic_expression -> RECEIVE
-- On INFIXR2 reduce production atomic_expression -> RECEIVE
-- On INFIXR1 reduce production atomic_expression -> RECEIVE
-- On INFIXR0 reduce production atomic_expression -> RECEIVE
-- On INFIXL9 reduce production atomic_expression -> RECEIVE
-- On INFIXL8 reduce production atomic_expression -> RECEIVE
-- On INFIXL7 reduce production atomic_expression -> RECEIVE
-- On INFIXL6 reduce production atomic_expression -> RECEIVE
-- On INFIXL5 reduce production atomic_expression -> RECEIVE
-- On INFIXL4 reduce production atomic_expression -> RECEIVE
-- On INFIXL3 reduce production atomic_expression -> RECEIVE
-- On INFIXL2 reduce production atomic_expression -> RECEIVE
-- On INFIXL1 reduce production atomic_expression -> RECEIVE
-- On INFIXL0 reduce production atomic_expression -> RECEIVE
-- On INFIX9 reduce production atomic_expression -> RECEIVE
-- On INFIX8 reduce production atomic_expression -> RECEIVE
-- On INFIX7 reduce production atomic_expression -> RECEIVE
-- On INFIX6 reduce production atomic_expression -> RECEIVE
-- On INFIX5 reduce production atomic_expression -> RECEIVE
-- On INFIX4 reduce production atomic_expression -> RECEIVE
-- On INFIX3 reduce production atomic_expression -> RECEIVE
-- On INFIX2 reduce production atomic_expression -> RECEIVE
-- On INFIX1 reduce production atomic_expression -> RECEIVE
-- On INFIX0 reduce production atomic_expression -> RECEIVE
-- On FROM reduce production atomic_expression -> RECEIVE
-- On FATRARROW reduce production atomic_expression -> RECEIVE
-- On EQUALSTILDE reduce production atomic_expression -> RECEIVE
-- On END reduce production atomic_expression -> RECEIVE
-- On ELSE reduce production atomic_expression -> RECEIVE
-- On DOTDOT reduce production atomic_expression -> RECEIVE
-- On DOT reduce production atomic_expression -> RECEIVE
-- On DELETE_LEFT reduce production atomic_expression -> RECEIVE
-- On DELETE reduce production atomic_expression -> RECEIVE
-- On DEFAULT reduce production atomic_expression -> RECEIVE
-- On COMMA reduce production atomic_expression -> RECEIVE
-- On COLONCOLON reduce production atomic_expression -> RECEIVE
-- On COLON reduce production atomic_expression -> RECEIVE
-- On CASE reduce production atomic_expression -> RECEIVE
-- On BY reduce production atomic_expression -> RECEIVE
-- On BARRBRACE reduce production atomic_expression -> RECEIVE
-- On BARBAR reduce production atomic_expression -> RECEIVE
-- On BANG reduce production atomic_expression -> RECEIVE
-- On AS reduce production atomic_expression -> RECEIVE
-- On AMPAMP reduce production atomic_expression -> RECEIVE

State 335:
case_expression -> RECEIVE LBRACE . perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On CASE shift to state 336
-- On perhaps_cases shift to state 1020
-- On cases shift to state 782
-- On case shift to state 503
-- On RBRACE reduce production perhaps_cases ->

State 336:
case -> CASE . pattern RARROW block_contents [ RBRACE CASE ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On primary_pattern shift to state 275
-- On pattern shift to state 337
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 337:
case -> CASE pattern . RARROW block_contents [ RBRACE CASE ]
-- On RARROW shift to state 338

State 338:
case -> CASE pattern RARROW . block_contents [ RBRACE CASE ]
-- On VARIABLE shift to state 2
-- On VAR shift to state 316
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TYPENAME shift to state 339
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SIG shift to state 347
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SEMICOLON shift to state 384
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OPEN shift to state 429
-- On OFFER shift to state 400
-- On MODULE shift to state 432
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 524
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 872
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On ALIEN shift to state 876
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typedecl shift to state 879
-- On typed_handler_binding shift to state 881
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On signature shift to state 882
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On perhaps_semi shift to state 891
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On links_open shift to state 892
-- On links_module shift to state 893
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 894
-- On formlet_expression shift to state 746
-- On exp shift to state 896
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block_contents shift to state 1019
-- On block shift to state 610
-- On bindings shift to state 900
-- On binding shift to state 905
-- On atomic_expression shift to state 611
-- On alien_block shift to state 904
-- On RBRACE reduce production perhaps_semi ->
-- On CASE reduce production perhaps_semi ->

State 339:
typedecl -> TYPENAME . CONSTRUCTOR typeargs_opt EQ datatype [ SEMICOLON ]
-- On CONSTRUCTOR shift to state 340

State 340:
typedecl -> TYPENAME CONSTRUCTOR . typeargs_opt EQ datatype [ SEMICOLON ]
-- On LPAREN shift to state 341
-- On typeargs_opt shift to state 344
-- On EQ reduce production typeargs_opt ->

State 341:
typeargs_opt -> LPAREN . varlist RPAREN [ EQ ]
-- On VARIABLE shift to state 117
-- On varlist shift to state 342
-- On typearg shift to state 222

State 342:
typeargs_opt -> LPAREN varlist . RPAREN [ EQ ]
-- On RPAREN shift to state 343

State 343:
typeargs_opt -> LPAREN varlist RPAREN . [ EQ ]
-- On EQ reduce production typeargs_opt -> LPAREN varlist RPAREN

State 344:
typedecl -> TYPENAME CONSTRUCTOR typeargs_opt . EQ datatype [ SEMICOLON ]
-- On EQ shift to state 345

State 345:
typedecl -> TYPENAME CONSTRUCTOR typeargs_opt EQ . datatype [ SEMICOLON ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 346

State 346:
typedecl -> TYPENAME CONSTRUCTOR typeargs_opt EQ datatype . [ SEMICOLON ]
-- On SEMICOLON reduce production typedecl -> TYPENAME CONSTRUCTOR typeargs_opt EQ datatype

State 347:
signature -> SIG . var COLON datatype [ VAR SHALLOWHANDLER OP LINFUN HANDLER FUN ]
signature -> SIG . op COLON datatype [ VAR SHALLOWHANDLER OP LINFUN HANDLER FUN ]
-- On VARIABLE shift to state 4
-- On INFIXR9 shift to state 348
-- On INFIXR8 shift to state 349
-- On INFIXR7 shift to state 350
-- On INFIXR6 shift to state 351
-- On INFIXR5 shift to state 352
-- On INFIXR4 shift to state 353
-- On INFIXR3 shift to state 354
-- On INFIXR2 shift to state 355
-- On INFIXR1 shift to state 356
-- On INFIXR0 shift to state 357
-- On INFIXL9 shift to state 358
-- On INFIXL8 shift to state 359
-- On INFIXL7 shift to state 360
-- On INFIXL6 shift to state 361
-- On INFIXL5 shift to state 362
-- On INFIXL4 shift to state 363
-- On INFIXL3 shift to state 364
-- On INFIXL2 shift to state 365
-- On INFIXL1 shift to state 366
-- On INFIXL0 shift to state 367
-- On INFIX9 shift to state 368
-- On INFIX8 shift to state 369
-- On INFIX7 shift to state 370
-- On INFIX6 shift to state 371
-- On INFIX5 shift to state 372
-- On INFIX4 shift to state 373
-- On INFIX3 shift to state 374
-- On INFIX2 shift to state 375
-- On INFIX1 shift to state 376
-- On INFIX0 shift to state 377
-- On var shift to state 378
-- On op shift to state 381

State 348:
op -> INFIXR9 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR9
-- On UNDERSCORE reduce production op -> INFIXR9
-- On UINTEGER reduce production op -> INFIXR9
-- On UFLOAT reduce production op -> INFIXR9
-- On TRUE reduce production op -> INFIXR9
-- On STRING reduce production op -> INFIXR9
-- On SEMICOLON reduce production op -> INFIXR9
-- On RPAREN reduce production op -> INFIXR9
-- On MINUS reduce production op -> INFIXR9
-- On LPAREN reduce production op -> INFIXR9
-- On LBRACKET reduce production op -> INFIXR9
-- On FALSE reduce production op -> INFIXR9
-- On CONSTRUCTOR reduce production op -> INFIXR9
-- On COLON reduce production op -> INFIXR9
-- On CHAR reduce production op -> INFIXR9

State 349:
op -> INFIXR8 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR8
-- On UNDERSCORE reduce production op -> INFIXR8
-- On UINTEGER reduce production op -> INFIXR8
-- On UFLOAT reduce production op -> INFIXR8
-- On TRUE reduce production op -> INFIXR8
-- On STRING reduce production op -> INFIXR8
-- On SEMICOLON reduce production op -> INFIXR8
-- On RPAREN reduce production op -> INFIXR8
-- On MINUS reduce production op -> INFIXR8
-- On LPAREN reduce production op -> INFIXR8
-- On LBRACKET reduce production op -> INFIXR8
-- On FALSE reduce production op -> INFIXR8
-- On CONSTRUCTOR reduce production op -> INFIXR8
-- On COLON reduce production op -> INFIXR8
-- On CHAR reduce production op -> INFIXR8

State 350:
op -> INFIXR7 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR7
-- On UNDERSCORE reduce production op -> INFIXR7
-- On UINTEGER reduce production op -> INFIXR7
-- On UFLOAT reduce production op -> INFIXR7
-- On TRUE reduce production op -> INFIXR7
-- On STRING reduce production op -> INFIXR7
-- On SEMICOLON reduce production op -> INFIXR7
-- On RPAREN reduce production op -> INFIXR7
-- On MINUS reduce production op -> INFIXR7
-- On LPAREN reduce production op -> INFIXR7
-- On LBRACKET reduce production op -> INFIXR7
-- On FALSE reduce production op -> INFIXR7
-- On CONSTRUCTOR reduce production op -> INFIXR7
-- On COLON reduce production op -> INFIXR7
-- On CHAR reduce production op -> INFIXR7

State 351:
op -> INFIXR6 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR6
-- On UNDERSCORE reduce production op -> INFIXR6
-- On UINTEGER reduce production op -> INFIXR6
-- On UFLOAT reduce production op -> INFIXR6
-- On TRUE reduce production op -> INFIXR6
-- On STRING reduce production op -> INFIXR6
-- On SEMICOLON reduce production op -> INFIXR6
-- On RPAREN reduce production op -> INFIXR6
-- On MINUS reduce production op -> INFIXR6
-- On LPAREN reduce production op -> INFIXR6
-- On LBRACKET reduce production op -> INFIXR6
-- On FALSE reduce production op -> INFIXR6
-- On CONSTRUCTOR reduce production op -> INFIXR6
-- On COLON reduce production op -> INFIXR6
-- On CHAR reduce production op -> INFIXR6

State 352:
op -> INFIXR5 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR5
-- On UNDERSCORE reduce production op -> INFIXR5
-- On UINTEGER reduce production op -> INFIXR5
-- On UFLOAT reduce production op -> INFIXR5
-- On TRUE reduce production op -> INFIXR5
-- On STRING reduce production op -> INFIXR5
-- On SEMICOLON reduce production op -> INFIXR5
-- On RPAREN reduce production op -> INFIXR5
-- On MINUS reduce production op -> INFIXR5
-- On LPAREN reduce production op -> INFIXR5
-- On LBRACKET reduce production op -> INFIXR5
-- On FALSE reduce production op -> INFIXR5
-- On CONSTRUCTOR reduce production op -> INFIXR5
-- On COLON reduce production op -> INFIXR5
-- On CHAR reduce production op -> INFIXR5

State 353:
op -> INFIXR4 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR4
-- On UNDERSCORE reduce production op -> INFIXR4
-- On UINTEGER reduce production op -> INFIXR4
-- On UFLOAT reduce production op -> INFIXR4
-- On TRUE reduce production op -> INFIXR4
-- On STRING reduce production op -> INFIXR4
-- On SEMICOLON reduce production op -> INFIXR4
-- On RPAREN reduce production op -> INFIXR4
-- On MINUS reduce production op -> INFIXR4
-- On LPAREN reduce production op -> INFIXR4
-- On LBRACKET reduce production op -> INFIXR4
-- On FALSE reduce production op -> INFIXR4
-- On CONSTRUCTOR reduce production op -> INFIXR4
-- On COLON reduce production op -> INFIXR4
-- On CHAR reduce production op -> INFIXR4

State 354:
op -> INFIXR3 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR3
-- On UNDERSCORE reduce production op -> INFIXR3
-- On UINTEGER reduce production op -> INFIXR3
-- On UFLOAT reduce production op -> INFIXR3
-- On TRUE reduce production op -> INFIXR3
-- On STRING reduce production op -> INFIXR3
-- On SEMICOLON reduce production op -> INFIXR3
-- On RPAREN reduce production op -> INFIXR3
-- On MINUS reduce production op -> INFIXR3
-- On LPAREN reduce production op -> INFIXR3
-- On LBRACKET reduce production op -> INFIXR3
-- On FALSE reduce production op -> INFIXR3
-- On CONSTRUCTOR reduce production op -> INFIXR3
-- On COLON reduce production op -> INFIXR3
-- On CHAR reduce production op -> INFIXR3

State 355:
op -> INFIXR2 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR2
-- On UNDERSCORE reduce production op -> INFIXR2
-- On UINTEGER reduce production op -> INFIXR2
-- On UFLOAT reduce production op -> INFIXR2
-- On TRUE reduce production op -> INFIXR2
-- On STRING reduce production op -> INFIXR2
-- On SEMICOLON reduce production op -> INFIXR2
-- On RPAREN reduce production op -> INFIXR2
-- On MINUS reduce production op -> INFIXR2
-- On LPAREN reduce production op -> INFIXR2
-- On LBRACKET reduce production op -> INFIXR2
-- On FALSE reduce production op -> INFIXR2
-- On CONSTRUCTOR reduce production op -> INFIXR2
-- On COLON reduce production op -> INFIXR2
-- On CHAR reduce production op -> INFIXR2

State 356:
op -> INFIXR1 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR1
-- On UNDERSCORE reduce production op -> INFIXR1
-- On UINTEGER reduce production op -> INFIXR1
-- On UFLOAT reduce production op -> INFIXR1
-- On TRUE reduce production op -> INFIXR1
-- On STRING reduce production op -> INFIXR1
-- On SEMICOLON reduce production op -> INFIXR1
-- On RPAREN reduce production op -> INFIXR1
-- On MINUS reduce production op -> INFIXR1
-- On LPAREN reduce production op -> INFIXR1
-- On LBRACKET reduce production op -> INFIXR1
-- On FALSE reduce production op -> INFIXR1
-- On CONSTRUCTOR reduce production op -> INFIXR1
-- On COLON reduce production op -> INFIXR1
-- On CHAR reduce production op -> INFIXR1

State 357:
op -> INFIXR0 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR0
-- On UNDERSCORE reduce production op -> INFIXR0
-- On UINTEGER reduce production op -> INFIXR0
-- On UFLOAT reduce production op -> INFIXR0
-- On TRUE reduce production op -> INFIXR0
-- On STRING reduce production op -> INFIXR0
-- On SEMICOLON reduce production op -> INFIXR0
-- On RPAREN reduce production op -> INFIXR0
-- On MINUS reduce production op -> INFIXR0
-- On LPAREN reduce production op -> INFIXR0
-- On LBRACKET reduce production op -> INFIXR0
-- On FALSE reduce production op -> INFIXR0
-- On CONSTRUCTOR reduce production op -> INFIXR0
-- On COLON reduce production op -> INFIXR0
-- On CHAR reduce production op -> INFIXR0

State 358:
op -> INFIXL9 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL9
-- On UNDERSCORE reduce production op -> INFIXL9
-- On UINTEGER reduce production op -> INFIXL9
-- On UFLOAT reduce production op -> INFIXL9
-- On TRUE reduce production op -> INFIXL9
-- On STRING reduce production op -> INFIXL9
-- On SEMICOLON reduce production op -> INFIXL9
-- On RPAREN reduce production op -> INFIXL9
-- On MINUS reduce production op -> INFIXL9
-- On LPAREN reduce production op -> INFIXL9
-- On LBRACKET reduce production op -> INFIXL9
-- On FALSE reduce production op -> INFIXL9
-- On CONSTRUCTOR reduce production op -> INFIXL9
-- On COLON reduce production op -> INFIXL9
-- On CHAR reduce production op -> INFIXL9

State 359:
op -> INFIXL8 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL8
-- On UNDERSCORE reduce production op -> INFIXL8
-- On UINTEGER reduce production op -> INFIXL8
-- On UFLOAT reduce production op -> INFIXL8
-- On TRUE reduce production op -> INFIXL8
-- On STRING reduce production op -> INFIXL8
-- On SEMICOLON reduce production op -> INFIXL8
-- On RPAREN reduce production op -> INFIXL8
-- On MINUS reduce production op -> INFIXL8
-- On LPAREN reduce production op -> INFIXL8
-- On LBRACKET reduce production op -> INFIXL8
-- On FALSE reduce production op -> INFIXL8
-- On CONSTRUCTOR reduce production op -> INFIXL8
-- On COLON reduce production op -> INFIXL8
-- On CHAR reduce production op -> INFIXL8

State 360:
op -> INFIXL7 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL7
-- On UNDERSCORE reduce production op -> INFIXL7
-- On UINTEGER reduce production op -> INFIXL7
-- On UFLOAT reduce production op -> INFIXL7
-- On TRUE reduce production op -> INFIXL7
-- On STRING reduce production op -> INFIXL7
-- On SEMICOLON reduce production op -> INFIXL7
-- On RPAREN reduce production op -> INFIXL7
-- On MINUS reduce production op -> INFIXL7
-- On LPAREN reduce production op -> INFIXL7
-- On LBRACKET reduce production op -> INFIXL7
-- On FALSE reduce production op -> INFIXL7
-- On CONSTRUCTOR reduce production op -> INFIXL7
-- On COLON reduce production op -> INFIXL7
-- On CHAR reduce production op -> INFIXL7

State 361:
op -> INFIXL6 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL6
-- On UNDERSCORE reduce production op -> INFIXL6
-- On UINTEGER reduce production op -> INFIXL6
-- On UFLOAT reduce production op -> INFIXL6
-- On TRUE reduce production op -> INFIXL6
-- On STRING reduce production op -> INFIXL6
-- On SEMICOLON reduce production op -> INFIXL6
-- On RPAREN reduce production op -> INFIXL6
-- On MINUS reduce production op -> INFIXL6
-- On LPAREN reduce production op -> INFIXL6
-- On LBRACKET reduce production op -> INFIXL6
-- On FALSE reduce production op -> INFIXL6
-- On CONSTRUCTOR reduce production op -> INFIXL6
-- On COLON reduce production op -> INFIXL6
-- On CHAR reduce production op -> INFIXL6

State 362:
op -> INFIXL5 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL5
-- On UNDERSCORE reduce production op -> INFIXL5
-- On UINTEGER reduce production op -> INFIXL5
-- On UFLOAT reduce production op -> INFIXL5
-- On TRUE reduce production op -> INFIXL5
-- On STRING reduce production op -> INFIXL5
-- On SEMICOLON reduce production op -> INFIXL5
-- On RPAREN reduce production op -> INFIXL5
-- On MINUS reduce production op -> INFIXL5
-- On LPAREN reduce production op -> INFIXL5
-- On LBRACKET reduce production op -> INFIXL5
-- On FALSE reduce production op -> INFIXL5
-- On CONSTRUCTOR reduce production op -> INFIXL5
-- On COLON reduce production op -> INFIXL5
-- On CHAR reduce production op -> INFIXL5

State 363:
op -> INFIXL4 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL4
-- On UNDERSCORE reduce production op -> INFIXL4
-- On UINTEGER reduce production op -> INFIXL4
-- On UFLOAT reduce production op -> INFIXL4
-- On TRUE reduce production op -> INFIXL4
-- On STRING reduce production op -> INFIXL4
-- On SEMICOLON reduce production op -> INFIXL4
-- On RPAREN reduce production op -> INFIXL4
-- On MINUS reduce production op -> INFIXL4
-- On LPAREN reduce production op -> INFIXL4
-- On LBRACKET reduce production op -> INFIXL4
-- On FALSE reduce production op -> INFIXL4
-- On CONSTRUCTOR reduce production op -> INFIXL4
-- On COLON reduce production op -> INFIXL4
-- On CHAR reduce production op -> INFIXL4

State 364:
op -> INFIXL3 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL3
-- On UNDERSCORE reduce production op -> INFIXL3
-- On UINTEGER reduce production op -> INFIXL3
-- On UFLOAT reduce production op -> INFIXL3
-- On TRUE reduce production op -> INFIXL3
-- On STRING reduce production op -> INFIXL3
-- On SEMICOLON reduce production op -> INFIXL3
-- On RPAREN reduce production op -> INFIXL3
-- On MINUS reduce production op -> INFIXL3
-- On LPAREN reduce production op -> INFIXL3
-- On LBRACKET reduce production op -> INFIXL3
-- On FALSE reduce production op -> INFIXL3
-- On CONSTRUCTOR reduce production op -> INFIXL3
-- On COLON reduce production op -> INFIXL3
-- On CHAR reduce production op -> INFIXL3

State 365:
op -> INFIXL2 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL2
-- On UNDERSCORE reduce production op -> INFIXL2
-- On UINTEGER reduce production op -> INFIXL2
-- On UFLOAT reduce production op -> INFIXL2
-- On TRUE reduce production op -> INFIXL2
-- On STRING reduce production op -> INFIXL2
-- On SEMICOLON reduce production op -> INFIXL2
-- On RPAREN reduce production op -> INFIXL2
-- On MINUS reduce production op -> INFIXL2
-- On LPAREN reduce production op -> INFIXL2
-- On LBRACKET reduce production op -> INFIXL2
-- On FALSE reduce production op -> INFIXL2
-- On CONSTRUCTOR reduce production op -> INFIXL2
-- On COLON reduce production op -> INFIXL2
-- On CHAR reduce production op -> INFIXL2

State 366:
op -> INFIXL1 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL1
-- On UNDERSCORE reduce production op -> INFIXL1
-- On UINTEGER reduce production op -> INFIXL1
-- On UFLOAT reduce production op -> INFIXL1
-- On TRUE reduce production op -> INFIXL1
-- On STRING reduce production op -> INFIXL1
-- On SEMICOLON reduce production op -> INFIXL1
-- On RPAREN reduce production op -> INFIXL1
-- On MINUS reduce production op -> INFIXL1
-- On LPAREN reduce production op -> INFIXL1
-- On LBRACKET reduce production op -> INFIXL1
-- On FALSE reduce production op -> INFIXL1
-- On CONSTRUCTOR reduce production op -> INFIXL1
-- On COLON reduce production op -> INFIXL1
-- On CHAR reduce production op -> INFIXL1

State 367:
op -> INFIXL0 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL0
-- On UNDERSCORE reduce production op -> INFIXL0
-- On UINTEGER reduce production op -> INFIXL0
-- On UFLOAT reduce production op -> INFIXL0
-- On TRUE reduce production op -> INFIXL0
-- On STRING reduce production op -> INFIXL0
-- On SEMICOLON reduce production op -> INFIXL0
-- On RPAREN reduce production op -> INFIXL0
-- On MINUS reduce production op -> INFIXL0
-- On LPAREN reduce production op -> INFIXL0
-- On LBRACKET reduce production op -> INFIXL0
-- On FALSE reduce production op -> INFIXL0
-- On CONSTRUCTOR reduce production op -> INFIXL0
-- On COLON reduce production op -> INFIXL0
-- On CHAR reduce production op -> INFIXL0

State 368:
op -> INFIX9 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX9
-- On UNDERSCORE reduce production op -> INFIX9
-- On UINTEGER reduce production op -> INFIX9
-- On UFLOAT reduce production op -> INFIX9
-- On TRUE reduce production op -> INFIX9
-- On STRING reduce production op -> INFIX9
-- On SEMICOLON reduce production op -> INFIX9
-- On RPAREN reduce production op -> INFIX9
-- On MINUS reduce production op -> INFIX9
-- On LPAREN reduce production op -> INFIX9
-- On LBRACKET reduce production op -> INFIX9
-- On FALSE reduce production op -> INFIX9
-- On CONSTRUCTOR reduce production op -> INFIX9
-- On COLON reduce production op -> INFIX9
-- On CHAR reduce production op -> INFIX9

State 369:
op -> INFIX8 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX8
-- On UNDERSCORE reduce production op -> INFIX8
-- On UINTEGER reduce production op -> INFIX8
-- On UFLOAT reduce production op -> INFIX8
-- On TRUE reduce production op -> INFIX8
-- On STRING reduce production op -> INFIX8
-- On SEMICOLON reduce production op -> INFIX8
-- On RPAREN reduce production op -> INFIX8
-- On MINUS reduce production op -> INFIX8
-- On LPAREN reduce production op -> INFIX8
-- On LBRACKET reduce production op -> INFIX8
-- On FALSE reduce production op -> INFIX8
-- On CONSTRUCTOR reduce production op -> INFIX8
-- On COLON reduce production op -> INFIX8
-- On CHAR reduce production op -> INFIX8

State 370:
op -> INFIX7 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX7
-- On UNDERSCORE reduce production op -> INFIX7
-- On UINTEGER reduce production op -> INFIX7
-- On UFLOAT reduce production op -> INFIX7
-- On TRUE reduce production op -> INFIX7
-- On STRING reduce production op -> INFIX7
-- On SEMICOLON reduce production op -> INFIX7
-- On RPAREN reduce production op -> INFIX7
-- On MINUS reduce production op -> INFIX7
-- On LPAREN reduce production op -> INFIX7
-- On LBRACKET reduce production op -> INFIX7
-- On FALSE reduce production op -> INFIX7
-- On CONSTRUCTOR reduce production op -> INFIX7
-- On COLON reduce production op -> INFIX7
-- On CHAR reduce production op -> INFIX7

State 371:
op -> INFIX6 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX6
-- On UNDERSCORE reduce production op -> INFIX6
-- On UINTEGER reduce production op -> INFIX6
-- On UFLOAT reduce production op -> INFIX6
-- On TRUE reduce production op -> INFIX6
-- On STRING reduce production op -> INFIX6
-- On SEMICOLON reduce production op -> INFIX6
-- On RPAREN reduce production op -> INFIX6
-- On MINUS reduce production op -> INFIX6
-- On LPAREN reduce production op -> INFIX6
-- On LBRACKET reduce production op -> INFIX6
-- On FALSE reduce production op -> INFIX6
-- On CONSTRUCTOR reduce production op -> INFIX6
-- On COLON reduce production op -> INFIX6
-- On CHAR reduce production op -> INFIX6

State 372:
op -> INFIX5 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX5
-- On UNDERSCORE reduce production op -> INFIX5
-- On UINTEGER reduce production op -> INFIX5
-- On UFLOAT reduce production op -> INFIX5
-- On TRUE reduce production op -> INFIX5
-- On STRING reduce production op -> INFIX5
-- On SEMICOLON reduce production op -> INFIX5
-- On RPAREN reduce production op -> INFIX5
-- On MINUS reduce production op -> INFIX5
-- On LPAREN reduce production op -> INFIX5
-- On LBRACKET reduce production op -> INFIX5
-- On FALSE reduce production op -> INFIX5
-- On CONSTRUCTOR reduce production op -> INFIX5
-- On COLON reduce production op -> INFIX5
-- On CHAR reduce production op -> INFIX5

State 373:
op -> INFIX4 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX4
-- On UNDERSCORE reduce production op -> INFIX4
-- On UINTEGER reduce production op -> INFIX4
-- On UFLOAT reduce production op -> INFIX4
-- On TRUE reduce production op -> INFIX4
-- On STRING reduce production op -> INFIX4
-- On SEMICOLON reduce production op -> INFIX4
-- On RPAREN reduce production op -> INFIX4
-- On MINUS reduce production op -> INFIX4
-- On LPAREN reduce production op -> INFIX4
-- On LBRACKET reduce production op -> INFIX4
-- On FALSE reduce production op -> INFIX4
-- On CONSTRUCTOR reduce production op -> INFIX4
-- On COLON reduce production op -> INFIX4
-- On CHAR reduce production op -> INFIX4

State 374:
op -> INFIX3 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX3
-- On UNDERSCORE reduce production op -> INFIX3
-- On UINTEGER reduce production op -> INFIX3
-- On UFLOAT reduce production op -> INFIX3
-- On TRUE reduce production op -> INFIX3
-- On STRING reduce production op -> INFIX3
-- On SEMICOLON reduce production op -> INFIX3
-- On RPAREN reduce production op -> INFIX3
-- On MINUS reduce production op -> INFIX3
-- On LPAREN reduce production op -> INFIX3
-- On LBRACKET reduce production op -> INFIX3
-- On FALSE reduce production op -> INFIX3
-- On CONSTRUCTOR reduce production op -> INFIX3
-- On COLON reduce production op -> INFIX3
-- On CHAR reduce production op -> INFIX3

State 375:
op -> INFIX2 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX2
-- On UNDERSCORE reduce production op -> INFIX2
-- On UINTEGER reduce production op -> INFIX2
-- On UFLOAT reduce production op -> INFIX2
-- On TRUE reduce production op -> INFIX2
-- On STRING reduce production op -> INFIX2
-- On SEMICOLON reduce production op -> INFIX2
-- On RPAREN reduce production op -> INFIX2
-- On MINUS reduce production op -> INFIX2
-- On LPAREN reduce production op -> INFIX2
-- On LBRACKET reduce production op -> INFIX2
-- On FALSE reduce production op -> INFIX2
-- On CONSTRUCTOR reduce production op -> INFIX2
-- On COLON reduce production op -> INFIX2
-- On CHAR reduce production op -> INFIX2

State 376:
op -> INFIX1 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX1
-- On UNDERSCORE reduce production op -> INFIX1
-- On UINTEGER reduce production op -> INFIX1
-- On UFLOAT reduce production op -> INFIX1
-- On TRUE reduce production op -> INFIX1
-- On STRING reduce production op -> INFIX1
-- On SEMICOLON reduce production op -> INFIX1
-- On RPAREN reduce production op -> INFIX1
-- On MINUS reduce production op -> INFIX1
-- On LPAREN reduce production op -> INFIX1
-- On LBRACKET reduce production op -> INFIX1
-- On FALSE reduce production op -> INFIX1
-- On CONSTRUCTOR reduce production op -> INFIX1
-- On COLON reduce production op -> INFIX1
-- On CHAR reduce production op -> INFIX1

State 377:
op -> INFIX0 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX0
-- On UNDERSCORE reduce production op -> INFIX0
-- On UINTEGER reduce production op -> INFIX0
-- On UFLOAT reduce production op -> INFIX0
-- On TRUE reduce production op -> INFIX0
-- On STRING reduce production op -> INFIX0
-- On SEMICOLON reduce production op -> INFIX0
-- On RPAREN reduce production op -> INFIX0
-- On MINUS reduce production op -> INFIX0
-- On LPAREN reduce production op -> INFIX0
-- On LBRACKET reduce production op -> INFIX0
-- On FALSE reduce production op -> INFIX0
-- On CONSTRUCTOR reduce production op -> INFIX0
-- On COLON reduce production op -> INFIX0
-- On CHAR reduce production op -> INFIX0

State 378:
signature -> SIG var . COLON datatype [ VAR SHALLOWHANDLER OP LINFUN HANDLER FUN ]
-- On COLON shift to state 379

State 379:
signature -> SIG var COLON . datatype [ VAR SHALLOWHANDLER OP LINFUN HANDLER FUN ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 380

State 380:
signature -> SIG var COLON datatype . [ VAR SHALLOWHANDLER OP LINFUN HANDLER FUN ]
-- On VAR reduce production signature -> SIG var COLON datatype
-- On SHALLOWHANDLER reduce production signature -> SIG var COLON datatype
-- On OP reduce production signature -> SIG var COLON datatype
-- On LINFUN reduce production signature -> SIG var COLON datatype
-- On HANDLER reduce production signature -> SIG var COLON datatype
-- On FUN reduce production signature -> SIG var COLON datatype

State 381:
signature -> SIG op . COLON datatype [ VAR SHALLOWHANDLER OP LINFUN HANDLER FUN ]
-- On COLON shift to state 382

State 382:
signature -> SIG op COLON . datatype [ VAR SHALLOWHANDLER OP LINFUN HANDLER FUN ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 383

State 383:
signature -> SIG op COLON datatype . [ VAR SHALLOWHANDLER OP LINFUN HANDLER FUN ]
-- On VAR reduce production signature -> SIG op COLON datatype
-- On SHALLOWHANDLER reduce production signature -> SIG op COLON datatype
-- On OP reduce production signature -> SIG op COLON datatype
-- On LINFUN reduce production signature -> SIG op COLON datatype
-- On HANDLER reduce production signature -> SIG op COLON datatype
-- On FUN reduce production signature -> SIG op COLON datatype

State 384:
perhaps_semi -> SEMICOLON . [ RBRACE CASE ]
-- On RBRACE reduce production perhaps_semi -> SEMICOLON
-- On CASE reduce production perhaps_semi -> SEMICOLON

State 385:
case_expression -> RAISE . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production case_expression -> RAISE
-- On VBAR reduce production case_expression -> RAISE
-- On VALUES reduce production case_expression -> RAISE
-- On TABLEKEYS reduce production case_expression -> RAISE
-- On SEMICOLON reduce production case_expression -> RAISE
-- On RPAREN reduce production case_expression -> RAISE
-- On RBRACKET reduce production case_expression -> RAISE
-- On RBRACE reduce production case_expression -> RAISE
-- On OTHERWISE reduce production case_expression -> RAISE
-- On ON reduce production case_expression -> RAISE
-- On FROM reduce production case_expression -> RAISE
-- On END reduce production case_expression -> RAISE
-- On ELSE reduce production case_expression -> RAISE
-- On DOTDOT reduce production case_expression -> RAISE
-- On DELETE_LEFT reduce production case_expression -> RAISE
-- On DELETE reduce production case_expression -> RAISE
-- On DEFAULT reduce production case_expression -> RAISE
-- On COMMA reduce production case_expression -> RAISE
-- On CASE reduce production case_expression -> RAISE
-- On BY reduce production case_expression -> RAISE
-- On BARRBRACE reduce production case_expression -> RAISE
-- On AS reduce production case_expression -> RAISE

State 386:
postfix_expression -> QUERY . block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
postfix_expression -> QUERY . LBRACKET exp RBRACKET block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
postfix_expression -> QUERY . LBRACKET exp COMMA exp RBRACKET block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LBRACKET shift to state 387
-- On LBRACE shift to state 315
-- On block shift to state 1018

State 387:
postfix_expression -> QUERY LBRACKET . exp RBRACKET block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
postfix_expression -> QUERY LBRACKET . exp COMMA exp RBRACKET block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 1011
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 388:
unary_expression -> PREFIXOP . unary_expression [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 1010
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 389:
atomic_expression -> RECEIVE . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production atomic_expression -> RECEIVE
-- On VBAR reduce production atomic_expression -> RECEIVE
-- On VARIABLE reduce production atomic_expression -> RECEIVE
-- On VALUES reduce production atomic_expression -> RECEIVE
-- On UINTEGER reduce production atomic_expression -> RECEIVE
-- On UFLOAT reduce production atomic_expression -> RECEIVE
-- On TRUE reduce production atomic_expression -> RECEIVE
-- On TABLEKEYS reduce production atomic_expression -> RECEIVE
-- On STRING reduce production atomic_expression -> RECEIVE
-- On SEMICOLON reduce production atomic_expression -> RECEIVE
-- On RPAREN reduce production atomic_expression -> RECEIVE
-- On RETURNING reduce production atomic_expression -> RECEIVE
-- On RECEIVE reduce production atomic_expression -> RECEIVE
-- On RBRACKET reduce production atomic_expression -> RECEIVE
-- On RBRACE reduce production atomic_expression -> RECEIVE
-- On RARROW reduce production atomic_expression -> RECEIVE
-- On POSTFIXOP reduce production atomic_expression -> RECEIVE
-- On OTHERWISE reduce production atomic_expression -> RECEIVE
-- On ON reduce production atomic_expression -> RECEIVE
-- On MINUSDOT reduce production atomic_expression -> RECEIVE
-- On MINUS reduce production atomic_expression -> RECEIVE
-- On LPAREN reduce production atomic_expression -> RECEIVE
-- On INFIXR9 reduce production atomic_expression -> RECEIVE
-- On INFIXR8 reduce production atomic_expression -> RECEIVE
-- On INFIXR7 reduce production atomic_expression -> RECEIVE
-- On INFIXR6 reduce production atomic_expression -> RECEIVE
-- On INFIXR5 reduce production atomic_expression -> RECEIVE
-- On INFIXR4 reduce production atomic_expression -> RECEIVE
-- On INFIXR3 reduce production atomic_expression -> RECEIVE
-- On INFIXR2 reduce production atomic_expression -> RECEIVE
-- On INFIXR1 reduce production atomic_expression -> RECEIVE
-- On INFIXR0 reduce production atomic_expression -> RECEIVE
-- On INFIXL9 reduce production atomic_expression -> RECEIVE
-- On INFIXL8 reduce production atomic_expression -> RECEIVE
-- On INFIXL7 reduce production atomic_expression -> RECEIVE
-- On INFIXL6 reduce production atomic_expression -> RECEIVE
-- On INFIXL5 reduce production atomic_expression -> RECEIVE
-- On INFIXL4 reduce production atomic_expression -> RECEIVE
-- On INFIXL3 reduce production atomic_expression -> RECEIVE
-- On INFIXL2 reduce production atomic_expression -> RECEIVE
-- On INFIXL1 reduce production atomic_expression -> RECEIVE
-- On INFIXL0 reduce production atomic_expression -> RECEIVE
-- On INFIX9 reduce production atomic_expression -> RECEIVE
-- On INFIX8 reduce production atomic_expression -> RECEIVE
-- On INFIX7 reduce production atomic_expression -> RECEIVE
-- On INFIX6 reduce production atomic_expression -> RECEIVE
-- On INFIX5 reduce production atomic_expression -> RECEIVE
-- On INFIX4 reduce production atomic_expression -> RECEIVE
-- On INFIX3 reduce production atomic_expression -> RECEIVE
-- On INFIX2 reduce production atomic_expression -> RECEIVE
-- On INFIX1 reduce production atomic_expression -> RECEIVE
-- On INFIX0 reduce production atomic_expression -> RECEIVE
-- On FROM reduce production atomic_expression -> RECEIVE
-- On FATRARROW reduce production atomic_expression -> RECEIVE
-- On FALSE reduce production atomic_expression -> RECEIVE
-- On EQUALSTILDE reduce production atomic_expression -> RECEIVE
-- On END reduce production atomic_expression -> RECEIVE
-- On ELSE reduce production atomic_expression -> RECEIVE
-- On DOTDOT reduce production atomic_expression -> RECEIVE
-- On DOT reduce production atomic_expression -> RECEIVE
-- On DELETE_LEFT reduce production atomic_expression -> RECEIVE
-- On DELETE reduce production atomic_expression -> RECEIVE
-- On DEFAULT reduce production atomic_expression -> RECEIVE
-- On CONSTRUCTOR reduce production atomic_expression -> RECEIVE
-- On COMMA reduce production atomic_expression -> RECEIVE
-- On COLONCOLON reduce production atomic_expression -> RECEIVE
-- On COLON reduce production atomic_expression -> RECEIVE
-- On CHAR reduce production atomic_expression -> RECEIVE
-- On CASE reduce production atomic_expression -> RECEIVE
-- On BY reduce production atomic_expression -> RECEIVE
-- On BARRBRACE reduce production atomic_expression -> RECEIVE
-- On BARBAR reduce production atomic_expression -> RECEIVE
-- On BANG reduce production atomic_expression -> RECEIVE
-- On AS reduce production atomic_expression -> RECEIVE
-- On AMPAMP reduce production atomic_expression -> RECEIVE

State 390:
unary_expression -> MINUSDOT . unary_expression [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 937
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 391:
unary_expression -> MINUS . unary_expression [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 939
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 392:
xml_tree -> LXML . SLASHRXML [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
xml_tree -> LXML . RXML ENDTAG [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
xml_tree -> LXML . RXML xml_contents_list ENDTAG [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
xml_tree -> LXML . attrs RXML ENDTAG [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
xml_tree -> LXML . attrs SLASHRXML [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
xml_tree -> LXML . attrs RXML xml_contents_list ENDTAG [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 393
-- On SLASHRXML shift to state 394
-- On RXML shift to state 395
-- On LBRACE shift to state 315
-- On xmlid shift to state 989
-- On block shift to state 999
-- On attrs shift to state 1000
-- On attr_list shift to state 1006
-- On attr shift to state 1009

State 393:
xmlid -> VARIABLE . [ EQ ]
-- On EQ reduce production xmlid -> VARIABLE

State 394:
xml_tree -> LXML SLASHRXML . [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On YIELDS reduce production xml_tree -> LXML SLASHRXML
-- On WITH reduce production xml_tree -> LXML SLASHRXML
-- On VBAR reduce production xml_tree -> LXML SLASHRXML
-- On VALUES reduce production xml_tree -> LXML SLASHRXML
-- On TABLEKEYS reduce production xml_tree -> LXML SLASHRXML
-- On SEMICOLON reduce production xml_tree -> LXML SLASHRXML
-- On RPAREN reduce production xml_tree -> LXML SLASHRXML
-- On RETURNING reduce production xml_tree -> LXML SLASHRXML
-- On RBRACKET reduce production xml_tree -> LXML SLASHRXML
-- On RBRACE reduce production xml_tree -> LXML SLASHRXML
-- On RARROW reduce production xml_tree -> LXML SLASHRXML
-- On POSTFIXOP reduce production xml_tree -> LXML SLASHRXML
-- On OTHERWISE reduce production xml_tree -> LXML SLASHRXML
-- On ON reduce production xml_tree -> LXML SLASHRXML
-- On MINUSDOT reduce production xml_tree -> LXML SLASHRXML
-- On MINUS reduce production xml_tree -> LXML SLASHRXML
-- On LXML reduce production xml_tree -> LXML SLASHRXML
-- On LPAREN reduce production xml_tree -> LXML SLASHRXML
-- On LBRACEBAR reduce production xml_tree -> LXML SLASHRXML
-- On LBRACE reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR9 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR8 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR7 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR6 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR5 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR4 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR3 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR2 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR1 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR0 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL9 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL8 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL7 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL6 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL5 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL4 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL3 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL2 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL1 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL0 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX9 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX8 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX7 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX6 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX5 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX4 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX3 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX2 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX1 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX0 reduce production xml_tree -> LXML SLASHRXML
-- On FROM reduce production xml_tree -> LXML SLASHRXML
-- On FATRARROW reduce production xml_tree -> LXML SLASHRXML
-- On EQUALSTILDE reduce production xml_tree -> LXML SLASHRXML
-- On ENDTAG reduce production xml_tree -> LXML SLASHRXML
-- On END reduce production xml_tree -> LXML SLASHRXML
-- On ELSE reduce production xml_tree -> LXML SLASHRXML
-- On DOTDOT reduce production xml_tree -> LXML SLASHRXML
-- On DOT reduce production xml_tree -> LXML SLASHRXML
-- On DELETE_LEFT reduce production xml_tree -> LXML SLASHRXML
-- On DELETE reduce production xml_tree -> LXML SLASHRXML
-- On DEFAULT reduce production xml_tree -> LXML SLASHRXML
-- On COMMA reduce production xml_tree -> LXML SLASHRXML
-- On COLONCOLON reduce production xml_tree -> LXML SLASHRXML
-- On COLON reduce production xml_tree -> LXML SLASHRXML
-- On CDATA reduce production xml_tree -> LXML SLASHRXML
-- On CASE reduce production xml_tree -> LXML SLASHRXML
-- On BY reduce production xml_tree -> LXML SLASHRXML
-- On BARRBRACE reduce production xml_tree -> LXML SLASHRXML
-- On BARBAR reduce production xml_tree -> LXML SLASHRXML
-- On BANG reduce production xml_tree -> LXML SLASHRXML
-- On AS reduce production xml_tree -> LXML SLASHRXML
-- On AMPAMP reduce production xml_tree -> LXML SLASHRXML

State 395:
xml_tree -> LXML RXML . ENDTAG [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
xml_tree -> LXML RXML . xml_contents_list ENDTAG [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LXML shift to state 392
-- On LBRACEBAR shift to state 396
-- On LBRACE shift to state 965
-- On ENDTAG shift to state 978
-- On CDATA shift to state 979
-- On xml_tree shift to state 980
-- On xml_contents_list shift to state 981
-- On xml_contents shift to state 983
-- On page_placement shift to state 985
-- On formlet_placement shift to state 986
-- On formlet_binding shift to state 987
-- On block shift to state 988

State 396:
page_placement -> LBRACEBAR . exp BARRBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 963
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 397:
formlet_expression -> PAGE . xml [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LXML shift to state 392
-- On xml_tree shift to state 398
-- On xml shift to state 399

State 398:
xml -> xml_tree . [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On YIELDS reduce production xml -> xml_tree
-- On WITH reduce production xml -> xml_tree
-- On VBAR reduce production xml -> xml_tree
-- On VALUES reduce production xml -> xml_tree
-- On TABLEKEYS reduce production xml -> xml_tree
-- On SEMICOLON reduce production xml -> xml_tree
-- On RPAREN reduce production xml -> xml_tree
-- On RETURNING reduce production xml -> xml_tree
-- On RBRACKET reduce production xml -> xml_tree
-- On RBRACE reduce production xml -> xml_tree
-- On RARROW reduce production xml -> xml_tree
-- On POSTFIXOP reduce production xml -> xml_tree
-- On OTHERWISE reduce production xml -> xml_tree
-- On ON reduce production xml -> xml_tree
-- On MINUSDOT reduce production xml -> xml_tree
-- On MINUS reduce production xml -> xml_tree
-- On LPAREN reduce production xml -> xml_tree
-- On INFIXR9 reduce production xml -> xml_tree
-- On INFIXR8 reduce production xml -> xml_tree
-- On INFIXR7 reduce production xml -> xml_tree
-- On INFIXR6 reduce production xml -> xml_tree
-- On INFIXR5 reduce production xml -> xml_tree
-- On INFIXR4 reduce production xml -> xml_tree
-- On INFIXR3 reduce production xml -> xml_tree
-- On INFIXR2 reduce production xml -> xml_tree
-- On INFIXR1 reduce production xml -> xml_tree
-- On INFIXR0 reduce production xml -> xml_tree
-- On INFIXL9 reduce production xml -> xml_tree
-- On INFIXL8 reduce production xml -> xml_tree
-- On INFIXL7 reduce production xml -> xml_tree
-- On INFIXL6 reduce production xml -> xml_tree
-- On INFIXL5 reduce production xml -> xml_tree
-- On INFIXL4 reduce production xml -> xml_tree
-- On INFIXL3 reduce production xml -> xml_tree
-- On INFIXL2 reduce production xml -> xml_tree
-- On INFIXL1 reduce production xml -> xml_tree
-- On INFIXL0 reduce production xml -> xml_tree
-- On INFIX9 reduce production xml -> xml_tree
-- On INFIX8 reduce production xml -> xml_tree
-- On INFIX7 reduce production xml -> xml_tree
-- On INFIX6 reduce production xml -> xml_tree
-- On INFIX5 reduce production xml -> xml_tree
-- On INFIX4 reduce production xml -> xml_tree
-- On INFIX3 reduce production xml -> xml_tree
-- On INFIX2 reduce production xml -> xml_tree
-- On INFIX1 reduce production xml -> xml_tree
-- On INFIX0 reduce production xml -> xml_tree
-- On FROM reduce production xml -> xml_tree
-- On FATRARROW reduce production xml -> xml_tree
-- On EQUALSTILDE reduce production xml -> xml_tree
-- On END reduce production xml -> xml_tree
-- On ELSE reduce production xml -> xml_tree
-- On DOTDOT reduce production xml -> xml_tree
-- On DOT reduce production xml -> xml_tree
-- On DELETE_LEFT reduce production xml -> xml_tree
-- On DELETE reduce production xml -> xml_tree
-- On DEFAULT reduce production xml -> xml_tree
-- On COMMA reduce production xml -> xml_tree
-- On COLONCOLON reduce production xml -> xml_tree
-- On COLON reduce production xml -> xml_tree
-- On CASE reduce production xml -> xml_tree
-- On BY reduce production xml -> xml_tree
-- On BARRBRACE reduce production xml -> xml_tree
-- On BARBAR reduce production xml -> xml_tree
-- On BANG reduce production xml -> xml_tree
-- On AS reduce production xml -> xml_tree
-- On AMPAMP reduce production xml -> xml_tree

State 399:
formlet_expression -> PAGE xml . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production formlet_expression -> PAGE xml
-- On VBAR reduce production formlet_expression -> PAGE xml
-- On VALUES reduce production formlet_expression -> PAGE xml
-- On TABLEKEYS reduce production formlet_expression -> PAGE xml
-- On SEMICOLON reduce production formlet_expression -> PAGE xml
-- On RPAREN reduce production formlet_expression -> PAGE xml
-- On RBRACKET reduce production formlet_expression -> PAGE xml
-- On RBRACE reduce production formlet_expression -> PAGE xml
-- On OTHERWISE reduce production formlet_expression -> PAGE xml
-- On ON reduce production formlet_expression -> PAGE xml
-- On FROM reduce production formlet_expression -> PAGE xml
-- On END reduce production formlet_expression -> PAGE xml
-- On ELSE reduce production formlet_expression -> PAGE xml
-- On DOTDOT reduce production formlet_expression -> PAGE xml
-- On DELETE_LEFT reduce production formlet_expression -> PAGE xml
-- On DELETE reduce production formlet_expression -> PAGE xml
-- On DEFAULT reduce production formlet_expression -> PAGE xml
-- On COMMA reduce production formlet_expression -> PAGE xml
-- On CASE reduce production formlet_expression -> PAGE xml
-- On BY reduce production formlet_expression -> PAGE xml
-- On BARRBRACE reduce production formlet_expression -> PAGE xml
-- On AS reduce production formlet_expression -> PAGE xml

State 400:
session_expression -> OFFER . LPAREN exp RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LPAREN shift to state 401

State 401:
session_expression -> OFFER LPAREN . exp RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 958
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 402:
parenthesized_thing -> LPAREN . binop RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
parenthesized_thing -> LPAREN . DOT record_label RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
parenthesized_thing -> LPAREN . RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
parenthesized_thing -> LPAREN . labeled_exps VBAR exp RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
parenthesized_thing -> LPAREN . labeled_exps RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
parenthesized_thing -> LPAREN . exps RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
parenthesized_thing -> LPAREN . exp WITH labeled_exps RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 403
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 29
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 30
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RPAREN shift to state 404
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 405
-- On MINUS shift to state 938
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On INFIXR9 shift to state 348
-- On INFIXR8 shift to state 349
-- On INFIXR7 shift to state 350
-- On INFIXR6 shift to state 351
-- On INFIXR5 shift to state 352
-- On INFIXR4 shift to state 353
-- On INFIXR3 shift to state 354
-- On INFIXR2 shift to state 355
-- On INFIXR1 shift to state 356
-- On INFIXR0 shift to state 357
-- On INFIXL9 shift to state 358
-- On INFIXL8 shift to state 359
-- On INFIXL7 shift to state 360
-- On INFIXL6 shift to state 361
-- On INFIXL5 shift to state 362
-- On INFIXL4 shift to state 363
-- On INFIXL3 shift to state 364
-- On INFIXL2 shift to state 365
-- On INFIXL1 shift to state 366
-- On INFIXL0 shift to state 367
-- On INFIX9 shift to state 368
-- On INFIX8 shift to state 369
-- On INFIX7 shift to state 370
-- On INFIX6 shift to state 371
-- On INFIX5 shift to state 372
-- On INFIX4 shift to state 373
-- On INFIX3 shift to state 374
-- On INFIX2 shift to state 375
-- On INFIX1 shift to state 376
-- On INFIX0 shift to state 377
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOT shift to state 940
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 943
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On record_label shift to state 818
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On op shift to state 944
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On labeled_exps shift to state 945
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On field_label shift to state 254
-- On exps shift to state 950
-- On exp shift to state 952
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On binop shift to state 956
-- On atomic_expression shift to state 611

State 403:
atomic_expression -> VARIABLE . [ WITH RPAREN POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE DOT COMMA COLONCOLON COLON BARBAR BANG AMPAMP ]
field_label -> VARIABLE . [ EQ ]
-- On WITH reduce production atomic_expression -> VARIABLE
-- On RPAREN reduce production atomic_expression -> VARIABLE
-- On POSTFIXOP reduce production atomic_expression -> VARIABLE
-- On MINUSDOT reduce production atomic_expression -> VARIABLE
-- On MINUS reduce production atomic_expression -> VARIABLE
-- On LPAREN reduce production atomic_expression -> VARIABLE
-- On INFIXR9 reduce production atomic_expression -> VARIABLE
-- On INFIXR8 reduce production atomic_expression -> VARIABLE
-- On INFIXR7 reduce production atomic_expression -> VARIABLE
-- On INFIXR6 reduce production atomic_expression -> VARIABLE
-- On INFIXR5 reduce production atomic_expression -> VARIABLE
-- On INFIXR4 reduce production atomic_expression -> VARIABLE
-- On INFIXR3 reduce production atomic_expression -> VARIABLE
-- On INFIXR2 reduce production atomic_expression -> VARIABLE
-- On INFIXR1 reduce production atomic_expression -> VARIABLE
-- On INFIXR0 reduce production atomic_expression -> VARIABLE
-- On INFIXL9 reduce production atomic_expression -> VARIABLE
-- On INFIXL8 reduce production atomic_expression -> VARIABLE
-- On INFIXL7 reduce production atomic_expression -> VARIABLE
-- On INFIXL6 reduce production atomic_expression -> VARIABLE
-- On INFIXL5 reduce production atomic_expression -> VARIABLE
-- On INFIXL4 reduce production atomic_expression -> VARIABLE
-- On INFIXL3 reduce production atomic_expression -> VARIABLE
-- On INFIXL2 reduce production atomic_expression -> VARIABLE
-- On INFIXL1 reduce production atomic_expression -> VARIABLE
-- On INFIXL0 reduce production atomic_expression -> VARIABLE
-- On INFIX9 reduce production atomic_expression -> VARIABLE
-- On INFIX8 reduce production atomic_expression -> VARIABLE
-- On INFIX7 reduce production atomic_expression -> VARIABLE
-- On INFIX6 reduce production atomic_expression -> VARIABLE
-- On INFIX5 reduce production atomic_expression -> VARIABLE
-- On INFIX4 reduce production atomic_expression -> VARIABLE
-- On INFIX3 reduce production atomic_expression -> VARIABLE
-- On INFIX2 reduce production atomic_expression -> VARIABLE
-- On INFIX1 reduce production atomic_expression -> VARIABLE
-- On INFIX0 reduce production atomic_expression -> VARIABLE
-- On EQUALSTILDE reduce production atomic_expression -> VARIABLE
-- On EQ reduce production field_label -> VARIABLE
-- On DOT reduce production atomic_expression -> VARIABLE
-- On COMMA reduce production atomic_expression -> VARIABLE
-- On COLONCOLON reduce production atomic_expression -> VARIABLE
-- On COLON reduce production atomic_expression -> VARIABLE
-- On BARBAR reduce production atomic_expression -> VARIABLE
-- On BANG reduce production atomic_expression -> VARIABLE
-- On AMPAMP reduce production atomic_expression -> VARIABLE

State 404:
parenthesized_thing -> LPAREN RPAREN . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production parenthesized_thing -> LPAREN RPAREN
-- On VBAR reduce production parenthesized_thing -> LPAREN RPAREN
-- On VARIABLE reduce production parenthesized_thing -> LPAREN RPAREN
-- On VALUES reduce production parenthesized_thing -> LPAREN RPAREN
-- On UINTEGER reduce production parenthesized_thing -> LPAREN RPAREN
-- On UFLOAT reduce production parenthesized_thing -> LPAREN RPAREN
-- On TRUE reduce production parenthesized_thing -> LPAREN RPAREN
-- On TABLEKEYS reduce production parenthesized_thing -> LPAREN RPAREN
-- On STRING reduce production parenthesized_thing -> LPAREN RPAREN
-- On SEMICOLON reduce production parenthesized_thing -> LPAREN RPAREN
-- On RPAREN reduce production parenthesized_thing -> LPAREN RPAREN
-- On RETURNING reduce production parenthesized_thing -> LPAREN RPAREN
-- On RECEIVE reduce production parenthesized_thing -> LPAREN RPAREN
-- On RBRACKET reduce production parenthesized_thing -> LPAREN RPAREN
-- On RBRACE reduce production parenthesized_thing -> LPAREN RPAREN
-- On RARROW reduce production parenthesized_thing -> LPAREN RPAREN
-- On POSTFIXOP reduce production parenthesized_thing -> LPAREN RPAREN
-- On OTHERWISE reduce production parenthesized_thing -> LPAREN RPAREN
-- On ON reduce production parenthesized_thing -> LPAREN RPAREN
-- On MINUSDOT reduce production parenthesized_thing -> LPAREN RPAREN
-- On MINUS reduce production parenthesized_thing -> LPAREN RPAREN
-- On LPAREN reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR9 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR8 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR7 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR6 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR5 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR4 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR3 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR2 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR1 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR0 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL9 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL8 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL7 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL6 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL5 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL4 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL3 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL2 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL1 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL0 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX9 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX8 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX7 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX6 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX5 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX4 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX3 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX2 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX1 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX0 reduce production parenthesized_thing -> LPAREN RPAREN
-- On FROM reduce production parenthesized_thing -> LPAREN RPAREN
-- On FATRARROW reduce production parenthesized_thing -> LPAREN RPAREN
-- On FALSE reduce production parenthesized_thing -> LPAREN RPAREN
-- On EQUALSTILDE reduce production parenthesized_thing -> LPAREN RPAREN
-- On END reduce production parenthesized_thing -> LPAREN RPAREN
-- On ELSE reduce production parenthesized_thing -> LPAREN RPAREN
-- On DOTDOT reduce production parenthesized_thing -> LPAREN RPAREN
-- On DOT reduce production parenthesized_thing -> LPAREN RPAREN
-- On DELETE_LEFT reduce production parenthesized_thing -> LPAREN RPAREN
-- On DELETE reduce production parenthesized_thing -> LPAREN RPAREN
-- On DEFAULT reduce production parenthesized_thing -> LPAREN RPAREN
-- On CONSTRUCTOR reduce production parenthesized_thing -> LPAREN RPAREN
-- On COMMA reduce production parenthesized_thing -> LPAREN RPAREN
-- On COLONCOLON reduce production parenthesized_thing -> LPAREN RPAREN
-- On COLON reduce production parenthesized_thing -> LPAREN RPAREN
-- On CHAR reduce production parenthesized_thing -> LPAREN RPAREN
-- On CASE reduce production parenthesized_thing -> LPAREN RPAREN
-- On BY reduce production parenthesized_thing -> LPAREN RPAREN
-- On BARRBRACE reduce production parenthesized_thing -> LPAREN RPAREN
-- On BARBAR reduce production parenthesized_thing -> LPAREN RPAREN
-- On BANG reduce production parenthesized_thing -> LPAREN RPAREN
-- On AS reduce production parenthesized_thing -> LPAREN RPAREN
-- On AMPAMP reduce production parenthesized_thing -> LPAREN RPAREN

State 405:
binop -> MINUSDOT . [ RPAREN ]
unary_expression -> MINUSDOT . unary_expression [ WITH RPAREN MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE COMMA COLONCOLON COLON BARBAR BANG AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 937
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611
-- On RPAREN reduce production binop -> MINUSDOT

State 406:
primary_expression -> LINFUN . arg_lists block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LPAREN shift to state 407
-- On multi_args shift to state 411
-- On arg_lists shift to state 413

State 407:
multi_args -> LPAREN . patterns RPAREN [ SERVER NATIVE LPAREN LBRACE CLIENT ]
multi_args -> LPAREN . RPAREN [ SERVER NATIVE LPAREN LBRACE CLIENT ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On RPAREN shift to state 408
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On primary_pattern shift to state 275
-- On patterns shift to state 409
-- On pattern shift to state 278
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 408:
multi_args -> LPAREN RPAREN . [ SERVER NATIVE LPAREN LBRACE CLIENT ]
-- On SERVER reduce production multi_args -> LPAREN RPAREN
-- On NATIVE reduce production multi_args -> LPAREN RPAREN
-- On LPAREN reduce production multi_args -> LPAREN RPAREN
-- On LBRACE reduce production multi_args -> LPAREN RPAREN
-- On CLIENT reduce production multi_args -> LPAREN RPAREN

State 409:
multi_args -> LPAREN patterns . RPAREN [ SERVER NATIVE LPAREN LBRACE CLIENT ]
-- On RPAREN shift to state 410

State 410:
multi_args -> LPAREN patterns RPAREN . [ SERVER NATIVE LPAREN LBRACE CLIENT ]
-- On SERVER reduce production multi_args -> LPAREN patterns RPAREN
-- On NATIVE reduce production multi_args -> LPAREN patterns RPAREN
-- On LPAREN reduce production multi_args -> LPAREN patterns RPAREN
-- On LBRACE reduce production multi_args -> LPAREN patterns RPAREN
-- On CLIENT reduce production multi_args -> LPAREN patterns RPAREN

State 411:
arg_lists -> multi_args . [ SERVER NATIVE LBRACE CLIENT ]
arg_lists -> multi_args . arg_lists [ SERVER NATIVE LBRACE CLIENT ]
-- On LPAREN shift to state 407
-- On multi_args shift to state 411
-- On arg_lists shift to state 412
-- On SERVER reduce production arg_lists -> multi_args
-- On NATIVE reduce production arg_lists -> multi_args
-- On LBRACE reduce production arg_lists -> multi_args
-- On CLIENT reduce production arg_lists -> multi_args

State 412:
arg_lists -> multi_args arg_lists . [ SERVER NATIVE LBRACE CLIENT ]
-- On SERVER reduce production arg_lists -> multi_args arg_lists
-- On NATIVE reduce production arg_lists -> multi_args arg_lists
-- On LBRACE reduce production arg_lists -> multi_args arg_lists
-- On CLIENT reduce production arg_lists -> multi_args arg_lists

State 413:
primary_expression -> LINFUN arg_lists . block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LBRACE shift to state 315
-- On block shift to state 414

State 414:
primary_expression -> LINFUN arg_lists block . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production primary_expression -> LINFUN arg_lists block
-- On VBAR reduce production primary_expression -> LINFUN arg_lists block
-- On VALUES reduce production primary_expression -> LINFUN arg_lists block
-- On TABLEKEYS reduce production primary_expression -> LINFUN arg_lists block
-- On SEMICOLON reduce production primary_expression -> LINFUN arg_lists block
-- On RPAREN reduce production primary_expression -> LINFUN arg_lists block
-- On RETURNING reduce production primary_expression -> LINFUN arg_lists block
-- On RBRACKET reduce production primary_expression -> LINFUN arg_lists block
-- On RBRACE reduce production primary_expression -> LINFUN arg_lists block
-- On RARROW reduce production primary_expression -> LINFUN arg_lists block
-- On POSTFIXOP reduce production primary_expression -> LINFUN arg_lists block
-- On OTHERWISE reduce production primary_expression -> LINFUN arg_lists block
-- On ON reduce production primary_expression -> LINFUN arg_lists block
-- On MINUSDOT reduce production primary_expression -> LINFUN arg_lists block
-- On MINUS reduce production primary_expression -> LINFUN arg_lists block
-- On LPAREN reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXR9 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXR8 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXR7 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXR6 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXR5 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXR4 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXR3 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXR2 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXR1 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXR0 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXL9 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXL8 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXL7 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXL6 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXL5 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXL4 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXL3 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXL2 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXL1 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIXL0 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIX9 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIX8 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIX7 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIX6 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIX5 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIX4 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIX3 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIX2 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIX1 reduce production primary_expression -> LINFUN arg_lists block
-- On INFIX0 reduce production primary_expression -> LINFUN arg_lists block
-- On FROM reduce production primary_expression -> LINFUN arg_lists block
-- On FATRARROW reduce production primary_expression -> LINFUN arg_lists block
-- On EQUALSTILDE reduce production primary_expression -> LINFUN arg_lists block
-- On END reduce production primary_expression -> LINFUN arg_lists block
-- On ELSE reduce production primary_expression -> LINFUN arg_lists block
-- On DOTDOT reduce production primary_expression -> LINFUN arg_lists block
-- On DOT reduce production primary_expression -> LINFUN arg_lists block
-- On DELETE_LEFT reduce production primary_expression -> LINFUN arg_lists block
-- On DELETE reduce production primary_expression -> LINFUN arg_lists block
-- On DEFAULT reduce production primary_expression -> LINFUN arg_lists block
-- On COMMA reduce production primary_expression -> LINFUN arg_lists block
-- On COLONCOLON reduce production primary_expression -> LINFUN arg_lists block
-- On COLON reduce production primary_expression -> LINFUN arg_lists block
-- On CASE reduce production primary_expression -> LINFUN arg_lists block
-- On BY reduce production primary_expression -> LINFUN arg_lists block
-- On BARRBRACE reduce production primary_expression -> LINFUN arg_lists block
-- On BARBAR reduce production primary_expression -> LINFUN arg_lists block
-- On BANG reduce production primary_expression -> LINFUN arg_lists block
-- On AS reduce production primary_expression -> LINFUN arg_lists block
-- On AMPAMP reduce production primary_expression -> LINFUN arg_lists block

State 415:
primary_expression -> LEFTTRIANGLE . cp_expression RIGHTTRIANGLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 416
-- On OFFER shift to state 417
-- On NU shift to state 424
-- On LBRACE shift to state 428
-- On CONSTRUCTOR shift to state 421
-- On cp_name shift to state 906
-- On cp_label shift to state 913
-- On cp_expression shift to state 935

State 416:
cp_name -> VARIABLE . [ VBAR RPAREN RIGHTTRIANGLE RBRACE LRARROW LPAREN LBRACKET LBRACE DOT CASE ]
-- On VBAR reduce production cp_name -> VARIABLE
-- On RPAREN reduce production cp_name -> VARIABLE
-- On RIGHTTRIANGLE reduce production cp_name -> VARIABLE
-- On RBRACE reduce production cp_name -> VARIABLE
-- On LRARROW reduce production cp_name -> VARIABLE
-- On LPAREN reduce production cp_name -> VARIABLE
-- On LBRACKET reduce production cp_name -> VARIABLE
-- On LBRACE reduce production cp_name -> VARIABLE
-- On DOT reduce production cp_name -> VARIABLE
-- On CASE reduce production cp_name -> VARIABLE

State 417:
cp_expression -> OFFER . cp_name LBRACE perhaps_cp_cases RBRACE [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VARIABLE shift to state 416
-- On cp_name shift to state 418

State 418:
cp_expression -> OFFER cp_name . LBRACE perhaps_cp_cases RBRACE [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On LBRACE shift to state 419

State 419:
cp_expression -> OFFER cp_name LBRACE . perhaps_cp_cases RBRACE [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On CASE shift to state 420
-- On perhaps_cp_cases shift to state 930
-- On cp_cases shift to state 932
-- On cp_case shift to state 933
-- On RBRACE reduce production perhaps_cp_cases ->

State 420:
cp_case -> CASE . cp_label RARROW cp_expression [ RBRACE CASE ]
-- On CONSTRUCTOR shift to state 421
-- On cp_label shift to state 422

State 421:
cp_label -> CONSTRUCTOR . [ VARIABLE RARROW ]
-- On VARIABLE reduce production cp_label -> CONSTRUCTOR
-- On RARROW reduce production cp_label -> CONSTRUCTOR

State 422:
cp_case -> CASE cp_label . RARROW cp_expression [ RBRACE CASE ]
-- On RARROW shift to state 423

State 423:
cp_case -> CASE cp_label RARROW . cp_expression [ RBRACE CASE ]
-- On VARIABLE shift to state 416
-- On OFFER shift to state 417
-- On NU shift to state 424
-- On LBRACE shift to state 428
-- On CONSTRUCTOR shift to state 421
-- On cp_name shift to state 906
-- On cp_label shift to state 913
-- On cp_expression shift to state 929

State 424:
cp_expression -> NU . cp_name DOT LPAREN cp_expression VBAR cp_expression RPAREN [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VARIABLE shift to state 416
-- On cp_name shift to state 425

State 425:
cp_expression -> NU cp_name . DOT LPAREN cp_expression VBAR cp_expression RPAREN [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On DOT shift to state 426

State 426:
cp_expression -> NU cp_name DOT . LPAREN cp_expression VBAR cp_expression RPAREN [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On LPAREN shift to state 427

State 427:
cp_expression -> NU cp_name DOT LPAREN . cp_expression VBAR cp_expression RPAREN [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VARIABLE shift to state 416
-- On OFFER shift to state 417
-- On NU shift to state 424
-- On LBRACE shift to state 428
-- On CONSTRUCTOR shift to state 421
-- On cp_name shift to state 906
-- On cp_label shift to state 913
-- On cp_expression shift to state 925

State 428:
cp_expression -> LBRACE . block_contents RBRACE [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VARIABLE shift to state 2
-- On VAR shift to state 316
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TYPENAME shift to state 339
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SIG shift to state 347
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SEMICOLON shift to state 384
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OPEN shift to state 429
-- On OFFER shift to state 400
-- On MODULE shift to state 432
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 524
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 872
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On ALIEN shift to state 876
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typedecl shift to state 879
-- On typed_handler_binding shift to state 881
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On signature shift to state 882
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On perhaps_semi shift to state 891
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On links_open shift to state 892
-- On links_module shift to state 893
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 894
-- On formlet_expression shift to state 746
-- On exp shift to state 896
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block_contents shift to state 898
-- On block shift to state 610
-- On bindings shift to state 900
-- On binding shift to state 905
-- On atomic_expression shift to state 611
-- On alien_block shift to state 904
-- On RBRACE reduce production perhaps_semi ->

State 429:
links_open -> OPEN . qualified_type_name [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
links_open -> OPEN . CONSTRUCTOR [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On CONSTRUCTOR shift to state 430
-- On qualified_type_name shift to state 431

State 430:
links_open -> OPEN CONSTRUCTOR . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
qualified_type_name -> CONSTRUCTOR . DOT qualified_type_name_inner [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On DOT shift to state 239
-- On VARIABLE reduce production links_open -> OPEN CONSTRUCTOR
-- On VAR reduce production links_open -> OPEN CONSTRUCTOR
-- On UPDATE reduce production links_open -> OPEN CONSTRUCTOR
-- On UINTEGER reduce production links_open -> OPEN CONSTRUCTOR
-- On UFLOAT reduce production links_open -> OPEN CONSTRUCTOR
-- On TYPENAME reduce production links_open -> OPEN CONSTRUCTOR
-- On TRY reduce production links_open -> OPEN CONSTRUCTOR
-- On TRUE reduce production links_open -> OPEN CONSTRUCTOR
-- On TABLE reduce production links_open -> OPEN CONSTRUCTOR
-- On SWITCH reduce production links_open -> OPEN CONSTRUCTOR
-- On STRING reduce production links_open -> OPEN CONSTRUCTOR
-- On SPAWNWAIT reduce production links_open -> OPEN CONSTRUCTOR
-- On SPAWNCLIENT reduce production links_open -> OPEN CONSTRUCTOR
-- On SPAWNAT reduce production links_open -> OPEN CONSTRUCTOR
-- On SPAWNANGELAT reduce production links_open -> OPEN CONSTRUCTOR
-- On SPAWNANGEL reduce production links_open -> OPEN CONSTRUCTOR
-- On SPAWN reduce production links_open -> OPEN CONSTRUCTOR
-- On SIG reduce production links_open -> OPEN CONSTRUCTOR
-- On SHALLOWHANDLER reduce production links_open -> OPEN CONSTRUCTOR
-- On SHALLOWHANDLE reduce production links_open -> OPEN CONSTRUCTOR
-- On SELECT reduce production links_open -> OPEN CONSTRUCTOR
-- On RECEIVE reduce production links_open -> OPEN CONSTRUCTOR
-- On RBRACE reduce production links_open -> OPEN CONSTRUCTOR
-- On RAISE reduce production links_open -> OPEN CONSTRUCTOR
-- On QUERY reduce production links_open -> OPEN CONSTRUCTOR
-- On PREFIXOP reduce production links_open -> OPEN CONSTRUCTOR
-- On PREFIX reduce production links_open -> OPEN CONSTRUCTOR
-- On POSTFIX reduce production links_open -> OPEN CONSTRUCTOR
-- On PAGE reduce production links_open -> OPEN CONSTRUCTOR
-- On OPEN reduce production links_open -> OPEN CONSTRUCTOR
-- On OP reduce production links_open -> OPEN CONSTRUCTOR
-- On OFFER reduce production links_open -> OPEN CONSTRUCTOR
-- On MODULE reduce production links_open -> OPEN CONSTRUCTOR
-- On MINUSDOT reduce production links_open -> OPEN CONSTRUCTOR
-- On MINUS reduce production links_open -> OPEN CONSTRUCTOR
-- On LXML reduce production links_open -> OPEN CONSTRUCTOR
-- On LPAREN reduce production links_open -> OPEN CONSTRUCTOR
-- On LINFUN reduce production links_open -> OPEN CONSTRUCTOR
-- On LENSSELECT reduce production links_open -> OPEN CONSTRUCTOR
-- On LENSPUT reduce production links_open -> OPEN CONSTRUCTOR
-- On LENSJOIN reduce production links_open -> OPEN CONSTRUCTOR
-- On LENSGET reduce production links_open -> OPEN CONSTRUCTOR
-- On LENSDROP reduce production links_open -> OPEN CONSTRUCTOR
-- On LENS reduce production links_open -> OPEN CONSTRUCTOR
-- On LEFTTRIANGLE reduce production links_open -> OPEN CONSTRUCTOR
-- On LBRACKET reduce production links_open -> OPEN CONSTRUCTOR
-- On LBRACE reduce production links_open -> OPEN CONSTRUCTOR
-- On INSERT reduce production links_open -> OPEN CONSTRUCTOR
-- On INFIXR reduce production links_open -> OPEN CONSTRUCTOR
-- On INFIXL reduce production links_open -> OPEN CONSTRUCTOR
-- On INFIX reduce production links_open -> OPEN CONSTRUCTOR
-- On IF reduce production links_open -> OPEN CONSTRUCTOR
-- On HANDLER reduce production links_open -> OPEN CONSTRUCTOR
-- On HANDLE reduce production links_open -> OPEN CONSTRUCTOR
-- On FUN reduce production links_open -> OPEN CONSTRUCTOR
-- On FORMLET reduce production links_open -> OPEN CONSTRUCTOR
-- On FOR reduce production links_open -> OPEN CONSTRUCTOR
-- On FALSE reduce production links_open -> OPEN CONSTRUCTOR
-- On ESCAPE reduce production links_open -> OPEN CONSTRUCTOR
-- On END reduce production links_open -> OPEN CONSTRUCTOR
-- On DOOP reduce production links_open -> OPEN CONSTRUCTOR
-- On DELETE reduce production links_open -> OPEN CONSTRUCTOR
-- On DATABASE reduce production links_open -> OPEN CONSTRUCTOR
-- On CONSTRUCTOR reduce production links_open -> OPEN CONSTRUCTOR
-- On CHAR reduce production links_open -> OPEN CONSTRUCTOR
-- On ALIEN reduce production links_open -> OPEN CONSTRUCTOR

State 431:
links_open -> OPEN qualified_type_name . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production links_open -> OPEN qualified_type_name
-- On VAR reduce production links_open -> OPEN qualified_type_name
-- On UPDATE reduce production links_open -> OPEN qualified_type_name
-- On UINTEGER reduce production links_open -> OPEN qualified_type_name
-- On UFLOAT reduce production links_open -> OPEN qualified_type_name
-- On TYPENAME reduce production links_open -> OPEN qualified_type_name
-- On TRY reduce production links_open -> OPEN qualified_type_name
-- On TRUE reduce production links_open -> OPEN qualified_type_name
-- On TABLE reduce production links_open -> OPEN qualified_type_name
-- On SWITCH reduce production links_open -> OPEN qualified_type_name
-- On STRING reduce production links_open -> OPEN qualified_type_name
-- On SPAWNWAIT reduce production links_open -> OPEN qualified_type_name
-- On SPAWNCLIENT reduce production links_open -> OPEN qualified_type_name
-- On SPAWNAT reduce production links_open -> OPEN qualified_type_name
-- On SPAWNANGELAT reduce production links_open -> OPEN qualified_type_name
-- On SPAWNANGEL reduce production links_open -> OPEN qualified_type_name
-- On SPAWN reduce production links_open -> OPEN qualified_type_name
-- On SIG reduce production links_open -> OPEN qualified_type_name
-- On SHALLOWHANDLER reduce production links_open -> OPEN qualified_type_name
-- On SHALLOWHANDLE reduce production links_open -> OPEN qualified_type_name
-- On SELECT reduce production links_open -> OPEN qualified_type_name
-- On RECEIVE reduce production links_open -> OPEN qualified_type_name
-- On RBRACE reduce production links_open -> OPEN qualified_type_name
-- On RAISE reduce production links_open -> OPEN qualified_type_name
-- On QUERY reduce production links_open -> OPEN qualified_type_name
-- On PREFIXOP reduce production links_open -> OPEN qualified_type_name
-- On PREFIX reduce production links_open -> OPEN qualified_type_name
-- On POSTFIX reduce production links_open -> OPEN qualified_type_name
-- On PAGE reduce production links_open -> OPEN qualified_type_name
-- On OPEN reduce production links_open -> OPEN qualified_type_name
-- On OP reduce production links_open -> OPEN qualified_type_name
-- On OFFER reduce production links_open -> OPEN qualified_type_name
-- On MODULE reduce production links_open -> OPEN qualified_type_name
-- On MINUSDOT reduce production links_open -> OPEN qualified_type_name
-- On MINUS reduce production links_open -> OPEN qualified_type_name
-- On LXML reduce production links_open -> OPEN qualified_type_name
-- On LPAREN reduce production links_open -> OPEN qualified_type_name
-- On LINFUN reduce production links_open -> OPEN qualified_type_name
-- On LENSSELECT reduce production links_open -> OPEN qualified_type_name
-- On LENSPUT reduce production links_open -> OPEN qualified_type_name
-- On LENSJOIN reduce production links_open -> OPEN qualified_type_name
-- On LENSGET reduce production links_open -> OPEN qualified_type_name
-- On LENSDROP reduce production links_open -> OPEN qualified_type_name
-- On LENS reduce production links_open -> OPEN qualified_type_name
-- On LEFTTRIANGLE reduce production links_open -> OPEN qualified_type_name
-- On LBRACKET reduce production links_open -> OPEN qualified_type_name
-- On LBRACE reduce production links_open -> OPEN qualified_type_name
-- On INSERT reduce production links_open -> OPEN qualified_type_name
-- On INFIXR reduce production links_open -> OPEN qualified_type_name
-- On INFIXL reduce production links_open -> OPEN qualified_type_name
-- On INFIX reduce production links_open -> OPEN qualified_type_name
-- On IF reduce production links_open -> OPEN qualified_type_name
-- On HANDLER reduce production links_open -> OPEN qualified_type_name
-- On HANDLE reduce production links_open -> OPEN qualified_type_name
-- On FUN reduce production links_open -> OPEN qualified_type_name
-- On FORMLET reduce production links_open -> OPEN qualified_type_name
-- On FOR reduce production links_open -> OPEN qualified_type_name
-- On FALSE reduce production links_open -> OPEN qualified_type_name
-- On ESCAPE reduce production links_open -> OPEN qualified_type_name
-- On END reduce production links_open -> OPEN qualified_type_name
-- On DOOP reduce production links_open -> OPEN qualified_type_name
-- On DELETE reduce production links_open -> OPEN qualified_type_name
-- On DATABASE reduce production links_open -> OPEN qualified_type_name
-- On CONSTRUCTOR reduce production links_open -> OPEN qualified_type_name
-- On CHAR reduce production links_open -> OPEN qualified_type_name
-- On ALIEN reduce production links_open -> OPEN qualified_type_name

State 432:
links_module -> MODULE . module_name moduleblock [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On CONSTRUCTOR shift to state 433
-- On module_name shift to state 434

State 433:
module_name -> CONSTRUCTOR . [ LBRACE ]
-- On LBRACE reduce production module_name -> CONSTRUCTOR

State 434:
links_module -> MODULE module_name . moduleblock [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LBRACE shift to state 435
-- On moduleblock shift to state 523

State 435:
moduleblock -> LBRACE . declarations RBRACE [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VAR shift to state 3
-- On TYPENAME shift to state 339
-- On SIG shift to state 347
-- On SHALLOWHANDLER shift to state 329
-- On PREFIX shift to state 436
-- On POSTFIX shift to state 437
-- On OPEN shift to state 429
-- On OP shift to state 438
-- On MODULE shift to state 432
-- On LINFUN shift to state 453
-- On INFIXR shift to state 458
-- On INFIXL shift to state 459
-- On INFIX shift to state 460
-- On HANDLER shift to state 461
-- On FUN shift to state 462
-- On ALIEN shift to state 467
-- On typedecl shift to state 483
-- On typed_handler_binding shift to state 485
-- On tlvarbinding shift to state 486
-- On tlfunbinding shift to state 488
-- On signature shift to state 489
-- On nofun_declaration shift to state 509
-- On links_open shift to state 510
-- On links_module shift to state 511
-- On handler_depth shift to state 494
-- On fun_declaration shift to state 512
-- On fixity shift to state 513
-- On declarations shift to state 518
-- On declaration shift to state 522
-- On alien_block shift to state 521

State 436:
fixity -> PREFIX . [ UINTEGER INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 ]
-- On UINTEGER reduce production fixity -> PREFIX
-- On INFIXR9 reduce production fixity -> PREFIX
-- On INFIXR8 reduce production fixity -> PREFIX
-- On INFIXR7 reduce production fixity -> PREFIX
-- On INFIXR6 reduce production fixity -> PREFIX
-- On INFIXR5 reduce production fixity -> PREFIX
-- On INFIXR4 reduce production fixity -> PREFIX
-- On INFIXR3 reduce production fixity -> PREFIX
-- On INFIXR2 reduce production fixity -> PREFIX
-- On INFIXR1 reduce production fixity -> PREFIX
-- On INFIXR0 reduce production fixity -> PREFIX
-- On INFIXL9 reduce production fixity -> PREFIX
-- On INFIXL8 reduce production fixity -> PREFIX
-- On INFIXL7 reduce production fixity -> PREFIX
-- On INFIXL6 reduce production fixity -> PREFIX
-- On INFIXL5 reduce production fixity -> PREFIX
-- On INFIXL4 reduce production fixity -> PREFIX
-- On INFIXL3 reduce production fixity -> PREFIX
-- On INFIXL2 reduce production fixity -> PREFIX
-- On INFIXL1 reduce production fixity -> PREFIX
-- On INFIXL0 reduce production fixity -> PREFIX
-- On INFIX9 reduce production fixity -> PREFIX
-- On INFIX8 reduce production fixity -> PREFIX
-- On INFIX7 reduce production fixity -> PREFIX
-- On INFIX6 reduce production fixity -> PREFIX
-- On INFIX5 reduce production fixity -> PREFIX
-- On INFIX4 reduce production fixity -> PREFIX
-- On INFIX3 reduce production fixity -> PREFIX
-- On INFIX2 reduce production fixity -> PREFIX
-- On INFIX1 reduce production fixity -> PREFIX
-- On INFIX0 reduce production fixity -> PREFIX

State 437:
fixity -> POSTFIX . [ UINTEGER INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 ]
-- On UINTEGER reduce production fixity -> POSTFIX
-- On INFIXR9 reduce production fixity -> POSTFIX
-- On INFIXR8 reduce production fixity -> POSTFIX
-- On INFIXR7 reduce production fixity -> POSTFIX
-- On INFIXR6 reduce production fixity -> POSTFIX
-- On INFIXR5 reduce production fixity -> POSTFIX
-- On INFIXR4 reduce production fixity -> POSTFIX
-- On INFIXR3 reduce production fixity -> POSTFIX
-- On INFIXR2 reduce production fixity -> POSTFIX
-- On INFIXR1 reduce production fixity -> POSTFIX
-- On INFIXR0 reduce production fixity -> POSTFIX
-- On INFIXL9 reduce production fixity -> POSTFIX
-- On INFIXL8 reduce production fixity -> POSTFIX
-- On INFIXL7 reduce production fixity -> POSTFIX
-- On INFIXL6 reduce production fixity -> POSTFIX
-- On INFIXL5 reduce production fixity -> POSTFIX
-- On INFIXL4 reduce production fixity -> POSTFIX
-- On INFIXL3 reduce production fixity -> POSTFIX
-- On INFIXL2 reduce production fixity -> POSTFIX
-- On INFIXL1 reduce production fixity -> POSTFIX
-- On INFIXL0 reduce production fixity -> POSTFIX
-- On INFIX9 reduce production fixity -> POSTFIX
-- On INFIX8 reduce production fixity -> POSTFIX
-- On INFIX7 reduce production fixity -> POSTFIX
-- On INFIX6 reduce production fixity -> POSTFIX
-- On INFIX5 reduce production fixity -> POSTFIX
-- On INFIX4 reduce production fixity -> POSTFIX
-- On INFIX3 reduce production fixity -> POSTFIX
-- On INFIX2 reduce production fixity -> POSTFIX
-- On INFIX1 reduce production fixity -> POSTFIX
-- On INFIX0 reduce production fixity -> POSTFIX

State 438:
tlfunbinding -> OP . pattern op pattern perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
tlfunbinding -> OP . prefixop pattern perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
tlfunbinding -> OP . pattern postfixop perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On PREFIXOP shift to state 439
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On primary_pattern shift to state 275
-- On prefixop shift to state 440
-- On pattern shift to state 444
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 439:
prefixop -> PREFIXOP . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING MINUS LPAREN LBRACKET FALSE CONSTRUCTOR CHAR ]
-- On VARIABLE reduce production prefixop -> PREFIXOP
-- On UNDERSCORE reduce production prefixop -> PREFIXOP
-- On UINTEGER reduce production prefixop -> PREFIXOP
-- On UFLOAT reduce production prefixop -> PREFIXOP
-- On TRUE reduce production prefixop -> PREFIXOP
-- On STRING reduce production prefixop -> PREFIXOP
-- On MINUS reduce production prefixop -> PREFIXOP
-- On LPAREN reduce production prefixop -> PREFIXOP
-- On LBRACKET reduce production prefixop -> PREFIXOP
-- On FALSE reduce production prefixop -> PREFIXOP
-- On CONSTRUCTOR reduce production prefixop -> PREFIXOP
-- On CHAR reduce production prefixop -> PREFIXOP

State 440:
tlfunbinding -> OP prefixop . pattern perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On primary_pattern shift to state 275
-- On pattern shift to state 441
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 441:
tlfunbinding -> OP prefixop pattern . perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SERVER shift to state 6
-- On NATIVE shift to state 7
-- On CLIENT shift to state 8
-- On perhaps_location shift to state 442
-- On LBRACE reduce production perhaps_location ->

State 442:
tlfunbinding -> OP prefixop pattern perhaps_location . block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LBRACE shift to state 315
-- On block shift to state 443

State 443:
tlfunbinding -> OP prefixop pattern perhaps_location block . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On VAR reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On UPDATE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On UINTEGER reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On UFLOAT reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On TYPENAME reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On TRY reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On TRUE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On TABLE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On SWITCH reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On STRING reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On SPAWNWAIT reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On SPAWNCLIENT reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On SPAWNAT reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On SPAWNANGELAT reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On SPAWNANGEL reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On SPAWN reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On SIG reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On SHALLOWHANDLER reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On SHALLOWHANDLE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On SEMICOLON reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On SELECT reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On RECEIVE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On RBRACE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On RAISE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On QUERY reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On PREFIXOP reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On PREFIX reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On POSTFIX reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On PAGE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On OPEN reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On OP reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On OFFER reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On MODULE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On MINUSDOT reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On MINUS reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On LXML reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On LPAREN reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On LINFUN reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On LENSSELECT reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On LENSPUT reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On LENSJOIN reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On LENSGET reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On LENSDROP reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On LENS reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On LEFTTRIANGLE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On LBRACKET reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On LBRACE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On INSERT reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On INFIXR reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On INFIXL reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On INFIX reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On IF reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On HANDLER reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On HANDLE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On FUN reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On FORMLET reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On FOR reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On FALSE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On ESCAPE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On END reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On DOOP reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On DELETE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On DATABASE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On CONSTRUCTOR reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On CHAR reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On ALIEN reduce production tlfunbinding -> OP prefixop pattern perhaps_location block

State 444:
tlfunbinding -> OP pattern . op pattern perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
tlfunbinding -> OP pattern . postfixop perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On POSTFIXOP shift to state 445
-- On INFIXR9 shift to state 348
-- On INFIXR8 shift to state 349
-- On INFIXR7 shift to state 350
-- On INFIXR6 shift to state 351
-- On INFIXR5 shift to state 352
-- On INFIXR4 shift to state 353
-- On INFIXR3 shift to state 354
-- On INFIXR2 shift to state 355
-- On INFIXR1 shift to state 356
-- On INFIXR0 shift to state 357
-- On INFIXL9 shift to state 358
-- On INFIXL8 shift to state 359
-- On INFIXL7 shift to state 360
-- On INFIXL6 shift to state 361
-- On INFIXL5 shift to state 362
-- On INFIXL4 shift to state 363
-- On INFIXL3 shift to state 364
-- On INFIXL2 shift to state 365
-- On INFIXL1 shift to state 366
-- On INFIXL0 shift to state 367
-- On INFIX9 shift to state 368
-- On INFIX8 shift to state 369
-- On INFIX7 shift to state 370
-- On INFIX6 shift to state 371
-- On INFIX5 shift to state 372
-- On INFIX4 shift to state 373
-- On INFIX3 shift to state 374
-- On INFIX2 shift to state 375
-- On INFIX1 shift to state 376
-- On INFIX0 shift to state 377
-- On postfixop shift to state 446
-- On op shift to state 449

State 445:
postfixop -> POSTFIXOP . [ SERVER NATIVE LBRACE CLIENT ]
-- On SERVER reduce production postfixop -> POSTFIXOP
-- On NATIVE reduce production postfixop -> POSTFIXOP
-- On LBRACE reduce production postfixop -> POSTFIXOP
-- On CLIENT reduce production postfixop -> POSTFIXOP

State 446:
tlfunbinding -> OP pattern postfixop . perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SERVER shift to state 6
-- On NATIVE shift to state 7
-- On CLIENT shift to state 8
-- On perhaps_location shift to state 447
-- On LBRACE reduce production perhaps_location ->

State 447:
tlfunbinding -> OP pattern postfixop perhaps_location . block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LBRACE shift to state 315
-- On block shift to state 448

State 448:
tlfunbinding -> OP pattern postfixop perhaps_location block . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On VAR reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On UPDATE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On UINTEGER reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On UFLOAT reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On TYPENAME reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On TRY reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On TRUE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On TABLE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On SWITCH reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On STRING reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On SPAWNWAIT reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On SPAWNCLIENT reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On SPAWNAT reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On SPAWNANGELAT reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On SPAWNANGEL reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On SPAWN reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On SIG reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On SHALLOWHANDLER reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On SHALLOWHANDLE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On SEMICOLON reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On SELECT reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On RECEIVE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On RBRACE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On RAISE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On QUERY reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On PREFIXOP reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On PREFIX reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On POSTFIX reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On PAGE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On OPEN reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On OP reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On OFFER reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On MODULE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On MINUSDOT reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On MINUS reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On LXML reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On LPAREN reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On LINFUN reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On LENSSELECT reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On LENSPUT reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On LENSJOIN reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On LENSGET reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On LENSDROP reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On LENS reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On LEFTTRIANGLE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On LBRACKET reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On LBRACE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On INSERT reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On INFIXR reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On INFIXL reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On INFIX reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On IF reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On HANDLER reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On HANDLE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On FUN reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On FORMLET reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On FOR reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On FALSE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On ESCAPE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On END reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On DOOP reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On DELETE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On DATABASE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On CONSTRUCTOR reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On CHAR reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On ALIEN reduce production tlfunbinding -> OP pattern postfixop perhaps_location block

State 449:
tlfunbinding -> OP pattern op . pattern perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On primary_pattern shift to state 275
-- On pattern shift to state 450
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 450:
tlfunbinding -> OP pattern op pattern . perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SERVER shift to state 6
-- On NATIVE shift to state 7
-- On CLIENT shift to state 8
-- On perhaps_location shift to state 451
-- On LBRACE reduce production perhaps_location ->

State 451:
tlfunbinding -> OP pattern op pattern perhaps_location . block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LBRACE shift to state 315
-- On block shift to state 452

State 452:
tlfunbinding -> OP pattern op pattern perhaps_location block . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On VAR reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On UPDATE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On UINTEGER reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On UFLOAT reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On TYPENAME reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On TRY reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On TRUE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On TABLE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On SWITCH reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On STRING reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On SPAWNWAIT reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On SPAWNCLIENT reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On SPAWNAT reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On SPAWNANGELAT reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On SPAWNANGEL reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On SPAWN reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On SIG reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On SHALLOWHANDLER reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On SHALLOWHANDLE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On SEMICOLON reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On SELECT reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On RECEIVE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On RBRACE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On RAISE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On QUERY reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On PREFIXOP reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On PREFIX reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On POSTFIX reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On PAGE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On OPEN reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On OP reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On OFFER reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On MODULE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On MINUSDOT reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On MINUS reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On LXML reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On LPAREN reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On LINFUN reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On LENSSELECT reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On LENSPUT reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On LENSJOIN reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On LENSGET reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On LENSDROP reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On LENS reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On LEFTTRIANGLE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On LBRACKET reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On LBRACE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On INSERT reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On INFIXR reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On INFIXL reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On INFIX reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On IF reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On HANDLER reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On HANDLE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On FUN reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On FORMLET reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On FOR reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On FALSE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On ESCAPE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On END reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On DOOP reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On DELETE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On DATABASE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On CONSTRUCTOR reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On CHAR reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On ALIEN reduce production tlfunbinding -> OP pattern op pattern perhaps_location block

State 453:
tlfunbinding -> LINFUN . var arg_lists perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 4
-- On var shift to state 454

State 454:
tlfunbinding -> LINFUN var . arg_lists perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LPAREN shift to state 407
-- On multi_args shift to state 411
-- On arg_lists shift to state 455

State 455:
tlfunbinding -> LINFUN var arg_lists . perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SERVER shift to state 6
-- On NATIVE shift to state 7
-- On CLIENT shift to state 8
-- On perhaps_location shift to state 456
-- On LBRACE reduce production perhaps_location ->

State 456:
tlfunbinding -> LINFUN var arg_lists perhaps_location . block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LBRACE shift to state 315
-- On block shift to state 457

State 457:
tlfunbinding -> LINFUN var arg_lists perhaps_location block . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On VAR reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On UPDATE reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On UINTEGER reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On UFLOAT reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On TYPENAME reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On TRY reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On TRUE reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On TABLE reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On SWITCH reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On STRING reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On SPAWNWAIT reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On SPAWNCLIENT reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On SPAWNAT reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On SPAWNANGELAT reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On SPAWNANGEL reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On SPAWN reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On SIG reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On SHALLOWHANDLER reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On SHALLOWHANDLE reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On SEMICOLON reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On SELECT reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On RECEIVE reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On RBRACE reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On RAISE reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On QUERY reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On PREFIXOP reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On PREFIX reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On POSTFIX reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On PAGE reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On OPEN reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On OP reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On OFFER reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On MODULE reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On MINUSDOT reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On MINUS reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On LXML reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On LPAREN reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On LINFUN reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On LENSSELECT reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On LENSPUT reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On LENSJOIN reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On LENSGET reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On LENSDROP reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On LENS reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On LEFTTRIANGLE reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On LBRACKET reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On LBRACE reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On INSERT reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On INFIXR reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On INFIXL reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On INFIX reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On IF reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On HANDLER reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On HANDLE reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On FUN reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On FORMLET reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On FOR reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On FALSE reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On ESCAPE reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On END reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On DOOP reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On DELETE reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On DATABASE reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On CONSTRUCTOR reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On CHAR reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block
-- On ALIEN reduce production tlfunbinding -> LINFUN var arg_lists perhaps_location block

State 458:
fixity -> INFIXR . [ UINTEGER INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 ]
-- On UINTEGER reduce production fixity -> INFIXR
-- On INFIXR9 reduce production fixity -> INFIXR
-- On INFIXR8 reduce production fixity -> INFIXR
-- On INFIXR7 reduce production fixity -> INFIXR
-- On INFIXR6 reduce production fixity -> INFIXR
-- On INFIXR5 reduce production fixity -> INFIXR
-- On INFIXR4 reduce production fixity -> INFIXR
-- On INFIXR3 reduce production fixity -> INFIXR
-- On INFIXR2 reduce production fixity -> INFIXR
-- On INFIXR1 reduce production fixity -> INFIXR
-- On INFIXR0 reduce production fixity -> INFIXR
-- On INFIXL9 reduce production fixity -> INFIXR
-- On INFIXL8 reduce production fixity -> INFIXR
-- On INFIXL7 reduce production fixity -> INFIXR
-- On INFIXL6 reduce production fixity -> INFIXR
-- On INFIXL5 reduce production fixity -> INFIXR
-- On INFIXL4 reduce production fixity -> INFIXR
-- On INFIXL3 reduce production fixity -> INFIXR
-- On INFIXL2 reduce production fixity -> INFIXR
-- On INFIXL1 reduce production fixity -> INFIXR
-- On INFIXL0 reduce production fixity -> INFIXR
-- On INFIX9 reduce production fixity -> INFIXR
-- On INFIX8 reduce production fixity -> INFIXR
-- On INFIX7 reduce production fixity -> INFIXR
-- On INFIX6 reduce production fixity -> INFIXR
-- On INFIX5 reduce production fixity -> INFIXR
-- On INFIX4 reduce production fixity -> INFIXR
-- On INFIX3 reduce production fixity -> INFIXR
-- On INFIX2 reduce production fixity -> INFIXR
-- On INFIX1 reduce production fixity -> INFIXR
-- On INFIX0 reduce production fixity -> INFIXR

State 459:
fixity -> INFIXL . [ UINTEGER INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 ]
-- On UINTEGER reduce production fixity -> INFIXL
-- On INFIXR9 reduce production fixity -> INFIXL
-- On INFIXR8 reduce production fixity -> INFIXL
-- On INFIXR7 reduce production fixity -> INFIXL
-- On INFIXR6 reduce production fixity -> INFIXL
-- On INFIXR5 reduce production fixity -> INFIXL
-- On INFIXR4 reduce production fixity -> INFIXL
-- On INFIXR3 reduce production fixity -> INFIXL
-- On INFIXR2 reduce production fixity -> INFIXL
-- On INFIXR1 reduce production fixity -> INFIXL
-- On INFIXR0 reduce production fixity -> INFIXL
-- On INFIXL9 reduce production fixity -> INFIXL
-- On INFIXL8 reduce production fixity -> INFIXL
-- On INFIXL7 reduce production fixity -> INFIXL
-- On INFIXL6 reduce production fixity -> INFIXL
-- On INFIXL5 reduce production fixity -> INFIXL
-- On INFIXL4 reduce production fixity -> INFIXL
-- On INFIXL3 reduce production fixity -> INFIXL
-- On INFIXL2 reduce production fixity -> INFIXL
-- On INFIXL1 reduce production fixity -> INFIXL
-- On INFIXL0 reduce production fixity -> INFIXL
-- On INFIX9 reduce production fixity -> INFIXL
-- On INFIX8 reduce production fixity -> INFIXL
-- On INFIX7 reduce production fixity -> INFIXL
-- On INFIX6 reduce production fixity -> INFIXL
-- On INFIX5 reduce production fixity -> INFIXL
-- On INFIX4 reduce production fixity -> INFIXL
-- On INFIX3 reduce production fixity -> INFIXL
-- On INFIX2 reduce production fixity -> INFIXL
-- On INFIX1 reduce production fixity -> INFIXL
-- On INFIX0 reduce production fixity -> INFIXL

State 460:
fixity -> INFIX . [ UINTEGER INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 ]
-- On UINTEGER reduce production fixity -> INFIX
-- On INFIXR9 reduce production fixity -> INFIX
-- On INFIXR8 reduce production fixity -> INFIX
-- On INFIXR7 reduce production fixity -> INFIX
-- On INFIXR6 reduce production fixity -> INFIX
-- On INFIXR5 reduce production fixity -> INFIX
-- On INFIXR4 reduce production fixity -> INFIX
-- On INFIXR3 reduce production fixity -> INFIX
-- On INFIXR2 reduce production fixity -> INFIX
-- On INFIXR1 reduce production fixity -> INFIX
-- On INFIXR0 reduce production fixity -> INFIX
-- On INFIXL9 reduce production fixity -> INFIX
-- On INFIXL8 reduce production fixity -> INFIX
-- On INFIXL7 reduce production fixity -> INFIX
-- On INFIXL6 reduce production fixity -> INFIX
-- On INFIXL5 reduce production fixity -> INFIX
-- On INFIXL4 reduce production fixity -> INFIX
-- On INFIXL3 reduce production fixity -> INFIX
-- On INFIXL2 reduce production fixity -> INFIX
-- On INFIXL1 reduce production fixity -> INFIX
-- On INFIXL0 reduce production fixity -> INFIX
-- On INFIX9 reduce production fixity -> INFIX
-- On INFIX8 reduce production fixity -> INFIX
-- On INFIX7 reduce production fixity -> INFIX
-- On INFIX6 reduce production fixity -> INFIX
-- On INFIX5 reduce production fixity -> INFIX
-- On INFIX4 reduce production fixity -> INFIX
-- On INFIX3 reduce production fixity -> INFIX
-- On INFIX2 reduce production fixity -> INFIX
-- On INFIX1 reduce production fixity -> INFIX
-- On INFIX0 reduce production fixity -> INFIX

State 461:
handler_depth -> HANDLER . [ VARIABLE LPAREN LBRACKET LBRACE ]
-- On VARIABLE reduce production handler_depth -> HANDLER
-- On LPAREN reduce production handler_depth -> HANDLER
-- On LBRACKET reduce production handler_depth -> HANDLER
-- On LBRACE reduce production handler_depth -> HANDLER

State 462:
tlfunbinding -> FUN . var arg_lists perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 4
-- On var shift to state 463

State 463:
tlfunbinding -> FUN var . arg_lists perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LPAREN shift to state 407
-- On multi_args shift to state 411
-- On arg_lists shift to state 464

State 464:
tlfunbinding -> FUN var arg_lists . perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SERVER shift to state 6
-- On NATIVE shift to state 7
-- On CLIENT shift to state 8
-- On perhaps_location shift to state 465
-- On LBRACE reduce production perhaps_location ->

State 465:
tlfunbinding -> FUN var arg_lists perhaps_location . block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LBRACE shift to state 315
-- On block shift to state 466

State 466:
tlfunbinding -> FUN var arg_lists perhaps_location block . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On VAR reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On UPDATE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On UINTEGER reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On UFLOAT reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On TYPENAME reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On TRY reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On TRUE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On TABLE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On SWITCH reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On STRING reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On SPAWNWAIT reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On SPAWNCLIENT reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On SPAWNAT reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On SPAWNANGELAT reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On SPAWNANGEL reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On SPAWN reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On SIG reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On SHALLOWHANDLER reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On SHALLOWHANDLE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On SEMICOLON reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On SELECT reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On RECEIVE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On RBRACE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On RAISE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On QUERY reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On PREFIXOP reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On PREFIX reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On POSTFIX reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On PAGE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On OPEN reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On OP reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On OFFER reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On MODULE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On MINUSDOT reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On MINUS reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On LXML reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On LPAREN reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On LINFUN reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On LENSSELECT reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On LENSPUT reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On LENSJOIN reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On LENSGET reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On LENSDROP reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On LENS reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On LEFTTRIANGLE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On LBRACKET reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On LBRACE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On INSERT reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On INFIXR reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On INFIXL reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On INFIX reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On IF reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On HANDLER reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On HANDLE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On FUN reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On FORMLET reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On FOR reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On FALSE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On ESCAPE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On END reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On DOOP reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On DELETE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On DATABASE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On CONSTRUCTOR reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On CHAR reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On ALIEN reduce production tlfunbinding -> FUN var arg_lists perhaps_location block

State 467:
alien_block -> ALIEN . VARIABLE STRING LBRACE alien_datatypes RBRACE [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
nofun_declaration -> ALIEN . VARIABLE STRING var COLON datatype SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 468

State 468:
alien_block -> ALIEN VARIABLE . STRING LBRACE alien_datatypes RBRACE [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
nofun_declaration -> ALIEN VARIABLE . STRING var COLON datatype SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On STRING shift to state 469

State 469:
alien_block -> ALIEN VARIABLE STRING . LBRACE alien_datatypes RBRACE [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
nofun_declaration -> ALIEN VARIABLE STRING . var COLON datatype SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 4
-- On LBRACE shift to state 470
-- On var shift to state 479

State 470:
alien_block -> ALIEN VARIABLE STRING LBRACE . alien_datatypes RBRACE [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 4
-- On var shift to state 471
-- On alien_datatypes shift to state 475
-- On alien_datatype shift to state 477

State 471:
alien_datatype -> var . COLON datatype SEMICOLON [ VARIABLE RBRACE ]
-- On COLON shift to state 472

State 472:
alien_datatype -> var COLON . datatype SEMICOLON [ VARIABLE RBRACE ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 473

State 473:
alien_datatype -> var COLON datatype . SEMICOLON [ VARIABLE RBRACE ]
-- On SEMICOLON shift to state 474

State 474:
alien_datatype -> var COLON datatype SEMICOLON . [ VARIABLE RBRACE ]
-- On VARIABLE reduce production alien_datatype -> var COLON datatype SEMICOLON
-- On RBRACE reduce production alien_datatype -> var COLON datatype SEMICOLON

State 475:
alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes . RBRACE [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On RBRACE shift to state 476

State 476:
alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On VAR reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On UPDATE reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On UINTEGER reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On UFLOAT reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On TYPENAME reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On TRY reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On TRUE reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On TABLE reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On SWITCH reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On STRING reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On SPAWNWAIT reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On SPAWNCLIENT reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On SPAWNAT reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On SPAWNANGELAT reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On SPAWNANGEL reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On SPAWN reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On SIG reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On SHALLOWHANDLER reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On SHALLOWHANDLE reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On SELECT reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On RECEIVE reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On RBRACE reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On RAISE reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On QUERY reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On PREFIXOP reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On PREFIX reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On POSTFIX reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On PAGE reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On OPEN reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On OP reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On OFFER reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On MODULE reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On MINUSDOT reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On MINUS reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On LXML reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On LPAREN reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On LINFUN reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On LENSSELECT reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On LENSPUT reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On LENSJOIN reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On LENSGET reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On LENSDROP reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On LENS reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On LEFTTRIANGLE reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On LBRACKET reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On LBRACE reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On INSERT reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On INFIXR reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On INFIXL reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On INFIX reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On IF reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On HANDLER reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On HANDLE reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On FUN reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On FORMLET reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On FOR reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On FALSE reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On ESCAPE reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On END reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On DOOP reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On DELETE reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On DATABASE reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On CONSTRUCTOR reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On CHAR reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE
-- On ALIEN reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE

State 477:
alien_datatypes -> alien_datatype . [ RBRACE ]
alien_datatypes -> alien_datatype . alien_datatypes [ RBRACE ]
-- On VARIABLE shift to state 4
-- On var shift to state 471
-- On alien_datatypes shift to state 478
-- On alien_datatype shift to state 477
-- On RBRACE reduce production alien_datatypes -> alien_datatype

State 478:
alien_datatypes -> alien_datatype alien_datatypes . [ RBRACE ]
-- On RBRACE reduce production alien_datatypes -> alien_datatype alien_datatypes

State 479:
nofun_declaration -> ALIEN VARIABLE STRING var . COLON datatype SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On COLON shift to state 480

State 480:
nofun_declaration -> ALIEN VARIABLE STRING var COLON . datatype SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 481

State 481:
nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SEMICOLON shift to state 482

State 482:
nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On VAR reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On UPDATE reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On UINTEGER reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On UFLOAT reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On TYPENAME reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On TRY reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On TRUE reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On TABLE reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On SWITCH reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On STRING reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On SPAWNWAIT reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On SPAWNCLIENT reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On SPAWNAT reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On SPAWNANGELAT reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On SPAWNANGEL reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On SPAWN reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On SIG reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On SHALLOWHANDLER reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On SHALLOWHANDLE reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On SELECT reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On RECEIVE reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On RBRACE reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On RAISE reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On QUERY reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On PREFIXOP reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On PREFIX reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On POSTFIX reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On PAGE reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On OPEN reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On OP reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On OFFER reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On MODULE reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On MINUSDOT reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On MINUS reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On LXML reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On LPAREN reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On LINFUN reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On LENSSELECT reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On LENSPUT reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On LENSJOIN reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On LENSGET reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On LENSDROP reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On LENS reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On LEFTTRIANGLE reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On LBRACKET reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On LBRACE reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On INSERT reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On INFIXR reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On INFIXL reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On INFIX reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On IF reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On HANDLER reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On HANDLE reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On FUN reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On FORMLET reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On FOR reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On FALSE reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On ESCAPE reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On END reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On DOOP reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On DELETE reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On DATABASE reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On CONSTRUCTOR reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On CHAR reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON
-- On ALIEN reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON

State 483:
nofun_declaration -> typedecl . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SEMICOLON shift to state 484

State 484:
nofun_declaration -> typedecl SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production nofun_declaration -> typedecl SEMICOLON
-- On VAR reduce production nofun_declaration -> typedecl SEMICOLON
-- On UPDATE reduce production nofun_declaration -> typedecl SEMICOLON
-- On UINTEGER reduce production nofun_declaration -> typedecl SEMICOLON
-- On UFLOAT reduce production nofun_declaration -> typedecl SEMICOLON
-- On TYPENAME reduce production nofun_declaration -> typedecl SEMICOLON
-- On TRY reduce production nofun_declaration -> typedecl SEMICOLON
-- On TRUE reduce production nofun_declaration -> typedecl SEMICOLON
-- On TABLE reduce production nofun_declaration -> typedecl SEMICOLON
-- On SWITCH reduce production nofun_declaration -> typedecl SEMICOLON
-- On STRING reduce production nofun_declaration -> typedecl SEMICOLON
-- On SPAWNWAIT reduce production nofun_declaration -> typedecl SEMICOLON
-- On SPAWNCLIENT reduce production nofun_declaration -> typedecl SEMICOLON
-- On SPAWNAT reduce production nofun_declaration -> typedecl SEMICOLON
-- On SPAWNANGELAT reduce production nofun_declaration -> typedecl SEMICOLON
-- On SPAWNANGEL reduce production nofun_declaration -> typedecl SEMICOLON
-- On SPAWN reduce production nofun_declaration -> typedecl SEMICOLON
-- On SIG reduce production nofun_declaration -> typedecl SEMICOLON
-- On SHALLOWHANDLER reduce production nofun_declaration -> typedecl SEMICOLON
-- On SHALLOWHANDLE reduce production nofun_declaration -> typedecl SEMICOLON
-- On SELECT reduce production nofun_declaration -> typedecl SEMICOLON
-- On RECEIVE reduce production nofun_declaration -> typedecl SEMICOLON
-- On RBRACE reduce production nofun_declaration -> typedecl SEMICOLON
-- On RAISE reduce production nofun_declaration -> typedecl SEMICOLON
-- On QUERY reduce production nofun_declaration -> typedecl SEMICOLON
-- On PREFIXOP reduce production nofun_declaration -> typedecl SEMICOLON
-- On PREFIX reduce production nofun_declaration -> typedecl SEMICOLON
-- On POSTFIX reduce production nofun_declaration -> typedecl SEMICOLON
-- On PAGE reduce production nofun_declaration -> typedecl SEMICOLON
-- On OPEN reduce production nofun_declaration -> typedecl SEMICOLON
-- On OP reduce production nofun_declaration -> typedecl SEMICOLON
-- On OFFER reduce production nofun_declaration -> typedecl SEMICOLON
-- On MODULE reduce production nofun_declaration -> typedecl SEMICOLON
-- On MINUSDOT reduce production nofun_declaration -> typedecl SEMICOLON
-- On MINUS reduce production nofun_declaration -> typedecl SEMICOLON
-- On LXML reduce production nofun_declaration -> typedecl SEMICOLON
-- On LPAREN reduce production nofun_declaration -> typedecl SEMICOLON
-- On LINFUN reduce production nofun_declaration -> typedecl SEMICOLON
-- On LENSSELECT reduce production nofun_declaration -> typedecl SEMICOLON
-- On LENSPUT reduce production nofun_declaration -> typedecl SEMICOLON
-- On LENSJOIN reduce production nofun_declaration -> typedecl SEMICOLON
-- On LENSGET reduce production nofun_declaration -> typedecl SEMICOLON
-- On LENSDROP reduce production nofun_declaration -> typedecl SEMICOLON
-- On LENS reduce production nofun_declaration -> typedecl SEMICOLON
-- On LEFTTRIANGLE reduce production nofun_declaration -> typedecl SEMICOLON
-- On LBRACKET reduce production nofun_declaration -> typedecl SEMICOLON
-- On LBRACE reduce production nofun_declaration -> typedecl SEMICOLON
-- On INSERT reduce production nofun_declaration -> typedecl SEMICOLON
-- On INFIXR reduce production nofun_declaration -> typedecl SEMICOLON
-- On INFIXL reduce production nofun_declaration -> typedecl SEMICOLON
-- On INFIX reduce production nofun_declaration -> typedecl SEMICOLON
-- On IF reduce production nofun_declaration -> typedecl SEMICOLON
-- On HANDLER reduce production nofun_declaration -> typedecl SEMICOLON
-- On HANDLE reduce production nofun_declaration -> typedecl SEMICOLON
-- On FUN reduce production nofun_declaration -> typedecl SEMICOLON
-- On FORMLET reduce production nofun_declaration -> typedecl SEMICOLON
-- On FOR reduce production nofun_declaration -> typedecl SEMICOLON
-- On FALSE reduce production nofun_declaration -> typedecl SEMICOLON
-- On ESCAPE reduce production nofun_declaration -> typedecl SEMICOLON
-- On END reduce production nofun_declaration -> typedecl SEMICOLON
-- On DOOP reduce production nofun_declaration -> typedecl SEMICOLON
-- On DELETE reduce production nofun_declaration -> typedecl SEMICOLON
-- On DATABASE reduce production nofun_declaration -> typedecl SEMICOLON
-- On CONSTRUCTOR reduce production nofun_declaration -> typedecl SEMICOLON
-- On CHAR reduce production nofun_declaration -> typedecl SEMICOLON
-- On ALIEN reduce production nofun_declaration -> typedecl SEMICOLON

State 485:
fun_declaration -> typed_handler_binding . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production fun_declaration -> typed_handler_binding
-- On VAR reduce production fun_declaration -> typed_handler_binding
-- On UPDATE reduce production fun_declaration -> typed_handler_binding
-- On UINTEGER reduce production fun_declaration -> typed_handler_binding
-- On UFLOAT reduce production fun_declaration -> typed_handler_binding
-- On TYPENAME reduce production fun_declaration -> typed_handler_binding
-- On TRY reduce production fun_declaration -> typed_handler_binding
-- On TRUE reduce production fun_declaration -> typed_handler_binding
-- On TABLE reduce production fun_declaration -> typed_handler_binding
-- On SWITCH reduce production fun_declaration -> typed_handler_binding
-- On STRING reduce production fun_declaration -> typed_handler_binding
-- On SPAWNWAIT reduce production fun_declaration -> typed_handler_binding
-- On SPAWNCLIENT reduce production fun_declaration -> typed_handler_binding
-- On SPAWNAT reduce production fun_declaration -> typed_handler_binding
-- On SPAWNANGELAT reduce production fun_declaration -> typed_handler_binding
-- On SPAWNANGEL reduce production fun_declaration -> typed_handler_binding
-- On SPAWN reduce production fun_declaration -> typed_handler_binding
-- On SIG reduce production fun_declaration -> typed_handler_binding
-- On SHALLOWHANDLER reduce production fun_declaration -> typed_handler_binding
-- On SHALLOWHANDLE reduce production fun_declaration -> typed_handler_binding
-- On SEMICOLON reduce production fun_declaration -> typed_handler_binding
-- On SELECT reduce production fun_declaration -> typed_handler_binding
-- On RECEIVE reduce production fun_declaration -> typed_handler_binding
-- On RBRACE reduce production fun_declaration -> typed_handler_binding
-- On RAISE reduce production fun_declaration -> typed_handler_binding
-- On QUERY reduce production fun_declaration -> typed_handler_binding
-- On PREFIXOP reduce production fun_declaration -> typed_handler_binding
-- On PREFIX reduce production fun_declaration -> typed_handler_binding
-- On POSTFIX reduce production fun_declaration -> typed_handler_binding
-- On PAGE reduce production fun_declaration -> typed_handler_binding
-- On OPEN reduce production fun_declaration -> typed_handler_binding
-- On OP reduce production fun_declaration -> typed_handler_binding
-- On OFFER reduce production fun_declaration -> typed_handler_binding
-- On MODULE reduce production fun_declaration -> typed_handler_binding
-- On MINUSDOT reduce production fun_declaration -> typed_handler_binding
-- On MINUS reduce production fun_declaration -> typed_handler_binding
-- On LXML reduce production fun_declaration -> typed_handler_binding
-- On LPAREN reduce production fun_declaration -> typed_handler_binding
-- On LINFUN reduce production fun_declaration -> typed_handler_binding
-- On LENSSELECT reduce production fun_declaration -> typed_handler_binding
-- On LENSPUT reduce production fun_declaration -> typed_handler_binding
-- On LENSJOIN reduce production fun_declaration -> typed_handler_binding
-- On LENSGET reduce production fun_declaration -> typed_handler_binding
-- On LENSDROP reduce production fun_declaration -> typed_handler_binding
-- On LENS reduce production fun_declaration -> typed_handler_binding
-- On LEFTTRIANGLE reduce production fun_declaration -> typed_handler_binding
-- On LBRACKET reduce production fun_declaration -> typed_handler_binding
-- On LBRACE reduce production fun_declaration -> typed_handler_binding
-- On INSERT reduce production fun_declaration -> typed_handler_binding
-- On INFIXR reduce production fun_declaration -> typed_handler_binding
-- On INFIXL reduce production fun_declaration -> typed_handler_binding
-- On INFIX reduce production fun_declaration -> typed_handler_binding
-- On IF reduce production fun_declaration -> typed_handler_binding
-- On HANDLER reduce production fun_declaration -> typed_handler_binding
-- On HANDLE reduce production fun_declaration -> typed_handler_binding
-- On FUN reduce production fun_declaration -> typed_handler_binding
-- On FORMLET reduce production fun_declaration -> typed_handler_binding
-- On FOR reduce production fun_declaration -> typed_handler_binding
-- On FALSE reduce production fun_declaration -> typed_handler_binding
-- On ESCAPE reduce production fun_declaration -> typed_handler_binding
-- On END reduce production fun_declaration -> typed_handler_binding
-- On DOOP reduce production fun_declaration -> typed_handler_binding
-- On DELETE reduce production fun_declaration -> typed_handler_binding
-- On DATABASE reduce production fun_declaration -> typed_handler_binding
-- On CONSTRUCTOR reduce production fun_declaration -> typed_handler_binding
-- On CHAR reduce production fun_declaration -> typed_handler_binding
-- On ALIEN reduce production fun_declaration -> typed_handler_binding

State 486:
nofun_declaration -> tlvarbinding . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SEMICOLON shift to state 487

State 487:
nofun_declaration -> tlvarbinding SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On VAR reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On UPDATE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On UINTEGER reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On UFLOAT reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On TYPENAME reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On TRY reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On TRUE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On TABLE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On SWITCH reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On STRING reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On SPAWNWAIT reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On SPAWNCLIENT reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On SPAWNAT reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On SPAWNANGELAT reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On SPAWNANGEL reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On SPAWN reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On SIG reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On SHALLOWHANDLER reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On SHALLOWHANDLE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On SELECT reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On RECEIVE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On RBRACE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On RAISE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On QUERY reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On PREFIXOP reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On PREFIX reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On POSTFIX reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On PAGE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On OPEN reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On OP reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On OFFER reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On MODULE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On MINUSDOT reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On MINUS reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On LXML reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On LPAREN reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On LINFUN reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On LENSSELECT reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On LENSPUT reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On LENSJOIN reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On LENSGET reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On LENSDROP reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On LENS reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On LEFTTRIANGLE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On LBRACKET reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On LBRACE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On INSERT reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On INFIXR reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On INFIXL reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On INFIX reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On IF reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On HANDLER reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On HANDLE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On FUN reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On FORMLET reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On FOR reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On FALSE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On ESCAPE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On END reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On DOOP reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On DELETE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On DATABASE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On CONSTRUCTOR reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On CHAR reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On ALIEN reduce production nofun_declaration -> tlvarbinding SEMICOLON

State 488:
fun_declaration -> tlfunbinding . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production fun_declaration -> tlfunbinding
-- On VAR reduce production fun_declaration -> tlfunbinding
-- On UPDATE reduce production fun_declaration -> tlfunbinding
-- On UINTEGER reduce production fun_declaration -> tlfunbinding
-- On UFLOAT reduce production fun_declaration -> tlfunbinding
-- On TYPENAME reduce production fun_declaration -> tlfunbinding
-- On TRY reduce production fun_declaration -> tlfunbinding
-- On TRUE reduce production fun_declaration -> tlfunbinding
-- On TABLE reduce production fun_declaration -> tlfunbinding
-- On SWITCH reduce production fun_declaration -> tlfunbinding
-- On STRING reduce production fun_declaration -> tlfunbinding
-- On SPAWNWAIT reduce production fun_declaration -> tlfunbinding
-- On SPAWNCLIENT reduce production fun_declaration -> tlfunbinding
-- On SPAWNAT reduce production fun_declaration -> tlfunbinding
-- On SPAWNANGELAT reduce production fun_declaration -> tlfunbinding
-- On SPAWNANGEL reduce production fun_declaration -> tlfunbinding
-- On SPAWN reduce production fun_declaration -> tlfunbinding
-- On SIG reduce production fun_declaration -> tlfunbinding
-- On SHALLOWHANDLER reduce production fun_declaration -> tlfunbinding
-- On SHALLOWHANDLE reduce production fun_declaration -> tlfunbinding
-- On SEMICOLON reduce production fun_declaration -> tlfunbinding
-- On SELECT reduce production fun_declaration -> tlfunbinding
-- On RECEIVE reduce production fun_declaration -> tlfunbinding
-- On RBRACE reduce production fun_declaration -> tlfunbinding
-- On RAISE reduce production fun_declaration -> tlfunbinding
-- On QUERY reduce production fun_declaration -> tlfunbinding
-- On PREFIXOP reduce production fun_declaration -> tlfunbinding
-- On PREFIX reduce production fun_declaration -> tlfunbinding
-- On POSTFIX reduce production fun_declaration -> tlfunbinding
-- On PAGE reduce production fun_declaration -> tlfunbinding
-- On OPEN reduce production fun_declaration -> tlfunbinding
-- On OP reduce production fun_declaration -> tlfunbinding
-- On OFFER reduce production fun_declaration -> tlfunbinding
-- On MODULE reduce production fun_declaration -> tlfunbinding
-- On MINUSDOT reduce production fun_declaration -> tlfunbinding
-- On MINUS reduce production fun_declaration -> tlfunbinding
-- On LXML reduce production fun_declaration -> tlfunbinding
-- On LPAREN reduce production fun_declaration -> tlfunbinding
-- On LINFUN reduce production fun_declaration -> tlfunbinding
-- On LENSSELECT reduce production fun_declaration -> tlfunbinding
-- On LENSPUT reduce production fun_declaration -> tlfunbinding
-- On LENSJOIN reduce production fun_declaration -> tlfunbinding
-- On LENSGET reduce production fun_declaration -> tlfunbinding
-- On LENSDROP reduce production fun_declaration -> tlfunbinding
-- On LENS reduce production fun_declaration -> tlfunbinding
-- On LEFTTRIANGLE reduce production fun_declaration -> tlfunbinding
-- On LBRACKET reduce production fun_declaration -> tlfunbinding
-- On LBRACE reduce production fun_declaration -> tlfunbinding
-- On INSERT reduce production fun_declaration -> tlfunbinding
-- On INFIXR reduce production fun_declaration -> tlfunbinding
-- On INFIXL reduce production fun_declaration -> tlfunbinding
-- On INFIX reduce production fun_declaration -> tlfunbinding
-- On IF reduce production fun_declaration -> tlfunbinding
-- On HANDLER reduce production fun_declaration -> tlfunbinding
-- On HANDLE reduce production fun_declaration -> tlfunbinding
-- On FUN reduce production fun_declaration -> tlfunbinding
-- On FORMLET reduce production fun_declaration -> tlfunbinding
-- On FOR reduce production fun_declaration -> tlfunbinding
-- On FALSE reduce production fun_declaration -> tlfunbinding
-- On ESCAPE reduce production fun_declaration -> tlfunbinding
-- On END reduce production fun_declaration -> tlfunbinding
-- On DOOP reduce production fun_declaration -> tlfunbinding
-- On DELETE reduce production fun_declaration -> tlfunbinding
-- On DATABASE reduce production fun_declaration -> tlfunbinding
-- On CONSTRUCTOR reduce production fun_declaration -> tlfunbinding
-- On CHAR reduce production fun_declaration -> tlfunbinding
-- On ALIEN reduce production fun_declaration -> tlfunbinding

State 489:
fun_declaration -> signature . tlfunbinding [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
fun_declaration -> signature . typed_handler_binding [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
nofun_declaration -> signature . tlvarbinding SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VAR shift to state 3
-- On SHALLOWHANDLER shift to state 329
-- On OP shift to state 438
-- On LINFUN shift to state 453
-- On HANDLER shift to state 461
-- On FUN shift to state 462
-- On typed_handler_binding shift to state 490
-- On tlvarbinding shift to state 491
-- On tlfunbinding shift to state 493
-- On handler_depth shift to state 494

State 490:
fun_declaration -> signature typed_handler_binding . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production fun_declaration -> signature typed_handler_binding
-- On VAR reduce production fun_declaration -> signature typed_handler_binding
-- On UPDATE reduce production fun_declaration -> signature typed_handler_binding
-- On UINTEGER reduce production fun_declaration -> signature typed_handler_binding
-- On UFLOAT reduce production fun_declaration -> signature typed_handler_binding
-- On TYPENAME reduce production fun_declaration -> signature typed_handler_binding
-- On TRY reduce production fun_declaration -> signature typed_handler_binding
-- On TRUE reduce production fun_declaration -> signature typed_handler_binding
-- On TABLE reduce production fun_declaration -> signature typed_handler_binding
-- On SWITCH reduce production fun_declaration -> signature typed_handler_binding
-- On STRING reduce production fun_declaration -> signature typed_handler_binding
-- On SPAWNWAIT reduce production fun_declaration -> signature typed_handler_binding
-- On SPAWNCLIENT reduce production fun_declaration -> signature typed_handler_binding
-- On SPAWNAT reduce production fun_declaration -> signature typed_handler_binding
-- On SPAWNANGELAT reduce production fun_declaration -> signature typed_handler_binding
-- On SPAWNANGEL reduce production fun_declaration -> signature typed_handler_binding
-- On SPAWN reduce production fun_declaration -> signature typed_handler_binding
-- On SIG reduce production fun_declaration -> signature typed_handler_binding
-- On SHALLOWHANDLER reduce production fun_declaration -> signature typed_handler_binding
-- On SHALLOWHANDLE reduce production fun_declaration -> signature typed_handler_binding
-- On SEMICOLON reduce production fun_declaration -> signature typed_handler_binding
-- On SELECT reduce production fun_declaration -> signature typed_handler_binding
-- On RECEIVE reduce production fun_declaration -> signature typed_handler_binding
-- On RBRACE reduce production fun_declaration -> signature typed_handler_binding
-- On RAISE reduce production fun_declaration -> signature typed_handler_binding
-- On QUERY reduce production fun_declaration -> signature typed_handler_binding
-- On PREFIXOP reduce production fun_declaration -> signature typed_handler_binding
-- On PREFIX reduce production fun_declaration -> signature typed_handler_binding
-- On POSTFIX reduce production fun_declaration -> signature typed_handler_binding
-- On PAGE reduce production fun_declaration -> signature typed_handler_binding
-- On OPEN reduce production fun_declaration -> signature typed_handler_binding
-- On OP reduce production fun_declaration -> signature typed_handler_binding
-- On OFFER reduce production fun_declaration -> signature typed_handler_binding
-- On MODULE reduce production fun_declaration -> signature typed_handler_binding
-- On MINUSDOT reduce production fun_declaration -> signature typed_handler_binding
-- On MINUS reduce production fun_declaration -> signature typed_handler_binding
-- On LXML reduce production fun_declaration -> signature typed_handler_binding
-- On LPAREN reduce production fun_declaration -> signature typed_handler_binding
-- On LINFUN reduce production fun_declaration -> signature typed_handler_binding
-- On LENSSELECT reduce production fun_declaration -> signature typed_handler_binding
-- On LENSPUT reduce production fun_declaration -> signature typed_handler_binding
-- On LENSJOIN reduce production fun_declaration -> signature typed_handler_binding
-- On LENSGET reduce production fun_declaration -> signature typed_handler_binding
-- On LENSDROP reduce production fun_declaration -> signature typed_handler_binding
-- On LENS reduce production fun_declaration -> signature typed_handler_binding
-- On LEFTTRIANGLE reduce production fun_declaration -> signature typed_handler_binding
-- On LBRACKET reduce production fun_declaration -> signature typed_handler_binding
-- On LBRACE reduce production fun_declaration -> signature typed_handler_binding
-- On INSERT reduce production fun_declaration -> signature typed_handler_binding
-- On INFIXR reduce production fun_declaration -> signature typed_handler_binding
-- On INFIXL reduce production fun_declaration -> signature typed_handler_binding
-- On INFIX reduce production fun_declaration -> signature typed_handler_binding
-- On IF reduce production fun_declaration -> signature typed_handler_binding
-- On HANDLER reduce production fun_declaration -> signature typed_handler_binding
-- On HANDLE reduce production fun_declaration -> signature typed_handler_binding
-- On FUN reduce production fun_declaration -> signature typed_handler_binding
-- On FORMLET reduce production fun_declaration -> signature typed_handler_binding
-- On FOR reduce production fun_declaration -> signature typed_handler_binding
-- On FALSE reduce production fun_declaration -> signature typed_handler_binding
-- On ESCAPE reduce production fun_declaration -> signature typed_handler_binding
-- On END reduce production fun_declaration -> signature typed_handler_binding
-- On DOOP reduce production fun_declaration -> signature typed_handler_binding
-- On DELETE reduce production fun_declaration -> signature typed_handler_binding
-- On DATABASE reduce production fun_declaration -> signature typed_handler_binding
-- On CONSTRUCTOR reduce production fun_declaration -> signature typed_handler_binding
-- On CHAR reduce production fun_declaration -> signature typed_handler_binding
-- On ALIEN reduce production fun_declaration -> signature typed_handler_binding

State 491:
nofun_declaration -> signature tlvarbinding . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SEMICOLON shift to state 492

State 492:
nofun_declaration -> signature tlvarbinding SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On VAR reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On UPDATE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On UINTEGER reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On UFLOAT reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On TYPENAME reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On TRY reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On TRUE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On TABLE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On SWITCH reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On STRING reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On SPAWNWAIT reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On SPAWNCLIENT reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On SPAWNAT reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On SPAWNANGELAT reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On SPAWNANGEL reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On SPAWN reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On SIG reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On SHALLOWHANDLER reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On SHALLOWHANDLE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On SELECT reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On RECEIVE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On RBRACE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On RAISE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On QUERY reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On PREFIXOP reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On PREFIX reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On POSTFIX reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On PAGE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On OPEN reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On OP reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On OFFER reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On MODULE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On MINUSDOT reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On MINUS reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On LXML reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On LPAREN reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On LINFUN reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On LENSSELECT reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On LENSPUT reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On LENSJOIN reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On LENSGET reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On LENSDROP reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On LENS reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On LEFTTRIANGLE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On LBRACKET reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On LBRACE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On INSERT reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On INFIXR reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On INFIXL reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On INFIX reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On IF reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On HANDLER reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On HANDLE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On FUN reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On FORMLET reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On FOR reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On FALSE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On ESCAPE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On END reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On DOOP reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On DELETE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On DATABASE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On CONSTRUCTOR reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On CHAR reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On ALIEN reduce production nofun_declaration -> signature tlvarbinding SEMICOLON

State 493:
fun_declaration -> signature tlfunbinding . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production fun_declaration -> signature tlfunbinding
-- On VAR reduce production fun_declaration -> signature tlfunbinding
-- On UPDATE reduce production fun_declaration -> signature tlfunbinding
-- On UINTEGER reduce production fun_declaration -> signature tlfunbinding
-- On UFLOAT reduce production fun_declaration -> signature tlfunbinding
-- On TYPENAME reduce production fun_declaration -> signature tlfunbinding
-- On TRY reduce production fun_declaration -> signature tlfunbinding
-- On TRUE reduce production fun_declaration -> signature tlfunbinding
-- On TABLE reduce production fun_declaration -> signature tlfunbinding
-- On SWITCH reduce production fun_declaration -> signature tlfunbinding
-- On STRING reduce production fun_declaration -> signature tlfunbinding
-- On SPAWNWAIT reduce production fun_declaration -> signature tlfunbinding
-- On SPAWNCLIENT reduce production fun_declaration -> signature tlfunbinding
-- On SPAWNAT reduce production fun_declaration -> signature tlfunbinding
-- On SPAWNANGELAT reduce production fun_declaration -> signature tlfunbinding
-- On SPAWNANGEL reduce production fun_declaration -> signature tlfunbinding
-- On SPAWN reduce production fun_declaration -> signature tlfunbinding
-- On SIG reduce production fun_declaration -> signature tlfunbinding
-- On SHALLOWHANDLER reduce production fun_declaration -> signature tlfunbinding
-- On SHALLOWHANDLE reduce production fun_declaration -> signature tlfunbinding
-- On SEMICOLON reduce production fun_declaration -> signature tlfunbinding
-- On SELECT reduce production fun_declaration -> signature tlfunbinding
-- On RECEIVE reduce production fun_declaration -> signature tlfunbinding
-- On RBRACE reduce production fun_declaration -> signature tlfunbinding
-- On RAISE reduce production fun_declaration -> signature tlfunbinding
-- On QUERY reduce production fun_declaration -> signature tlfunbinding
-- On PREFIXOP reduce production fun_declaration -> signature tlfunbinding
-- On PREFIX reduce production fun_declaration -> signature tlfunbinding
-- On POSTFIX reduce production fun_declaration -> signature tlfunbinding
-- On PAGE reduce production fun_declaration -> signature tlfunbinding
-- On OPEN reduce production fun_declaration -> signature tlfunbinding
-- On OP reduce production fun_declaration -> signature tlfunbinding
-- On OFFER reduce production fun_declaration -> signature tlfunbinding
-- On MODULE reduce production fun_declaration -> signature tlfunbinding
-- On MINUSDOT reduce production fun_declaration -> signature tlfunbinding
-- On MINUS reduce production fun_declaration -> signature tlfunbinding
-- On LXML reduce production fun_declaration -> signature tlfunbinding
-- On LPAREN reduce production fun_declaration -> signature tlfunbinding
-- On LINFUN reduce production fun_declaration -> signature tlfunbinding
-- On LENSSELECT reduce production fun_declaration -> signature tlfunbinding
-- On LENSPUT reduce production fun_declaration -> signature tlfunbinding
-- On LENSJOIN reduce production fun_declaration -> signature tlfunbinding
-- On LENSGET reduce production fun_declaration -> signature tlfunbinding
-- On LENSDROP reduce production fun_declaration -> signature tlfunbinding
-- On LENS reduce production fun_declaration -> signature tlfunbinding
-- On LEFTTRIANGLE reduce production fun_declaration -> signature tlfunbinding
-- On LBRACKET reduce production fun_declaration -> signature tlfunbinding
-- On LBRACE reduce production fun_declaration -> signature tlfunbinding
-- On INSERT reduce production fun_declaration -> signature tlfunbinding
-- On INFIXR reduce production fun_declaration -> signature tlfunbinding
-- On INFIXL reduce production fun_declaration -> signature tlfunbinding
-- On INFIX reduce production fun_declaration -> signature tlfunbinding
-- On IF reduce production fun_declaration -> signature tlfunbinding
-- On HANDLER reduce production fun_declaration -> signature tlfunbinding
-- On HANDLE reduce production fun_declaration -> signature tlfunbinding
-- On FUN reduce production fun_declaration -> signature tlfunbinding
-- On FORMLET reduce production fun_declaration -> signature tlfunbinding
-- On FOR reduce production fun_declaration -> signature tlfunbinding
-- On FALSE reduce production fun_declaration -> signature tlfunbinding
-- On ESCAPE reduce production fun_declaration -> signature tlfunbinding
-- On END reduce production fun_declaration -> signature tlfunbinding
-- On DOOP reduce production fun_declaration -> signature tlfunbinding
-- On DELETE reduce production fun_declaration -> signature tlfunbinding
-- On DATABASE reduce production fun_declaration -> signature tlfunbinding
-- On CONSTRUCTOR reduce production fun_declaration -> signature tlfunbinding
-- On CHAR reduce production fun_declaration -> signature tlfunbinding
-- On ALIEN reduce production fun_declaration -> signature tlfunbinding

State 494:
typed_handler_binding -> handler_depth . optional_computation_parameter var handler_parameterization [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LBRACKET shift to state 495
-- On optional_computation_parameter shift to state 498
-- On VARIABLE reduce production optional_computation_parameter ->

State 495:
optional_computation_parameter -> LBRACKET . pattern RBRACKET [ VARIABLE LPAREN LBRACE ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On primary_pattern shift to state 275
-- On pattern shift to state 496
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 496:
optional_computation_parameter -> LBRACKET pattern . RBRACKET [ VARIABLE LPAREN LBRACE ]
-- On RBRACKET shift to state 497

State 497:
optional_computation_parameter -> LBRACKET pattern RBRACKET . [ VARIABLE LPAREN LBRACE ]
-- On VARIABLE reduce production optional_computation_parameter -> LBRACKET pattern RBRACKET
-- On LPAREN reduce production optional_computation_parameter -> LBRACKET pattern RBRACKET
-- On LBRACE reduce production optional_computation_parameter -> LBRACKET pattern RBRACKET

State 498:
typed_handler_binding -> handler_depth optional_computation_parameter . var handler_parameterization [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 4
-- On var shift to state 499

State 499:
typed_handler_binding -> handler_depth optional_computation_parameter var . handler_parameterization [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LPAREN shift to state 407
-- On LBRACE shift to state 500
-- On multi_args shift to state 411
-- On handler_parameterization shift to state 505
-- On handler_body shift to state 506
-- On arg_lists shift to state 507

State 500:
handler_body -> LBRACE . cases RBRACE [ WITH VBAR VARIABLE VAR VALUES UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW RAISE QUERY PREFIXOP PREFIX POSTFIXOP POSTFIX PAGE OTHERWISE OPEN OP ON OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXR INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIXL INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 INFIX IF HANDLER HANDLE FUN FROM FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE END ELSE DOTDOT DOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ALIEN ]
-- On CASE shift to state 336
-- On cases shift to state 501
-- On case shift to state 503

State 501:
handler_body -> LBRACE cases . RBRACE [ WITH VBAR VARIABLE VAR VALUES UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW RAISE QUERY PREFIXOP PREFIX POSTFIXOP POSTFIX PAGE OTHERWISE OPEN OP ON OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXR INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIXL INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 INFIX IF HANDLER HANDLE FUN FROM FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE END ELSE DOTDOT DOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ALIEN ]
-- On RBRACE shift to state 502

State 502:
handler_body -> LBRACE cases RBRACE . [ WITH VBAR VARIABLE VAR VALUES UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW RAISE QUERY PREFIXOP PREFIX POSTFIXOP POSTFIX PAGE OTHERWISE OPEN OP ON OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXR INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIXL INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 INFIX IF HANDLER HANDLE FUN FROM FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE END ELSE DOTDOT DOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ALIEN ]
-- On WITH reduce production handler_body -> LBRACE cases RBRACE
-- On VBAR reduce production handler_body -> LBRACE cases RBRACE
-- On VARIABLE reduce production handler_body -> LBRACE cases RBRACE
-- On VAR reduce production handler_body -> LBRACE cases RBRACE
-- On VALUES reduce production handler_body -> LBRACE cases RBRACE
-- On UPDATE reduce production handler_body -> LBRACE cases RBRACE
-- On UINTEGER reduce production handler_body -> LBRACE cases RBRACE
-- On UFLOAT reduce production handler_body -> LBRACE cases RBRACE
-- On TYPENAME reduce production handler_body -> LBRACE cases RBRACE
-- On TRY reduce production handler_body -> LBRACE cases RBRACE
-- On TRUE reduce production handler_body -> LBRACE cases RBRACE
-- On TABLEKEYS reduce production handler_body -> LBRACE cases RBRACE
-- On TABLE reduce production handler_body -> LBRACE cases RBRACE
-- On SWITCH reduce production handler_body -> LBRACE cases RBRACE
-- On STRING reduce production handler_body -> LBRACE cases RBRACE
-- On SPAWNWAIT reduce production handler_body -> LBRACE cases RBRACE
-- On SPAWNCLIENT reduce production handler_body -> LBRACE cases RBRACE
-- On SPAWNAT reduce production handler_body -> LBRACE cases RBRACE
-- On SPAWNANGELAT reduce production handler_body -> LBRACE cases RBRACE
-- On SPAWNANGEL reduce production handler_body -> LBRACE cases RBRACE
-- On SPAWN reduce production handler_body -> LBRACE cases RBRACE
-- On SIG reduce production handler_body -> LBRACE cases RBRACE
-- On SHALLOWHANDLER reduce production handler_body -> LBRACE cases RBRACE
-- On SHALLOWHANDLE reduce production handler_body -> LBRACE cases RBRACE
-- On SEMICOLON reduce production handler_body -> LBRACE cases RBRACE
-- On SELECT reduce production handler_body -> LBRACE cases RBRACE
-- On RPAREN reduce production handler_body -> LBRACE cases RBRACE
-- On RETURNING reduce production handler_body -> LBRACE cases RBRACE
-- On RECEIVE reduce production handler_body -> LBRACE cases RBRACE
-- On RBRACKET reduce production handler_body -> LBRACE cases RBRACE
-- On RBRACE reduce production handler_body -> LBRACE cases RBRACE
-- On RARROW reduce production handler_body -> LBRACE cases RBRACE
-- On RAISE reduce production handler_body -> LBRACE cases RBRACE
-- On QUERY reduce production handler_body -> LBRACE cases RBRACE
-- On PREFIXOP reduce production handler_body -> LBRACE cases RBRACE
-- On PREFIX reduce production handler_body -> LBRACE cases RBRACE
-- On POSTFIXOP reduce production handler_body -> LBRACE cases RBRACE
-- On POSTFIX reduce production handler_body -> LBRACE cases RBRACE
-- On PAGE reduce production handler_body -> LBRACE cases RBRACE
-- On OTHERWISE reduce production handler_body -> LBRACE cases RBRACE
-- On OPEN reduce production handler_body -> LBRACE cases RBRACE
-- On OP reduce production handler_body -> LBRACE cases RBRACE
-- On ON reduce production handler_body -> LBRACE cases RBRACE
-- On OFFER reduce production handler_body -> LBRACE cases RBRACE
-- On MODULE reduce production handler_body -> LBRACE cases RBRACE
-- On MINUSDOT reduce production handler_body -> LBRACE cases RBRACE
-- On MINUS reduce production handler_body -> LBRACE cases RBRACE
-- On LXML reduce production handler_body -> LBRACE cases RBRACE
-- On LPAREN reduce production handler_body -> LBRACE cases RBRACE
-- On LINFUN reduce production handler_body -> LBRACE cases RBRACE
-- On LENSSELECT reduce production handler_body -> LBRACE cases RBRACE
-- On LENSPUT reduce production handler_body -> LBRACE cases RBRACE
-- On LENSJOIN reduce production handler_body -> LBRACE cases RBRACE
-- On LENSGET reduce production handler_body -> LBRACE cases RBRACE
-- On LENSDROP reduce production handler_body -> LBRACE cases RBRACE
-- On LENS reduce production handler_body -> LBRACE cases RBRACE
-- On LEFTTRIANGLE reduce production handler_body -> LBRACE cases RBRACE
-- On LBRACKET reduce production handler_body -> LBRACE cases RBRACE
-- On LBRACE reduce production handler_body -> LBRACE cases RBRACE
-- On INSERT reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXR9 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXR8 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXR7 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXR6 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXR5 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXR4 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXR3 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXR2 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXR1 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXR0 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXR reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXL9 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXL8 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXL7 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXL6 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXL5 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXL4 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXL3 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXL2 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXL1 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXL0 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIXL reduce production handler_body -> LBRACE cases RBRACE
-- On INFIX9 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIX8 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIX7 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIX6 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIX5 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIX4 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIX3 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIX2 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIX1 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIX0 reduce production handler_body -> LBRACE cases RBRACE
-- On INFIX reduce production handler_body -> LBRACE cases RBRACE
-- On IF reduce production handler_body -> LBRACE cases RBRACE
-- On HANDLER reduce production handler_body -> LBRACE cases RBRACE
-- On HANDLE reduce production handler_body -> LBRACE cases RBRACE
-- On FUN reduce production handler_body -> LBRACE cases RBRACE
-- On FROM reduce production handler_body -> LBRACE cases RBRACE
-- On FORMLET reduce production handler_body -> LBRACE cases RBRACE
-- On FOR reduce production handler_body -> LBRACE cases RBRACE
-- On FATRARROW reduce production handler_body -> LBRACE cases RBRACE
-- On FALSE reduce production handler_body -> LBRACE cases RBRACE
-- On ESCAPE reduce production handler_body -> LBRACE cases RBRACE
-- On EQUALSTILDE reduce production handler_body -> LBRACE cases RBRACE
-- On END reduce production handler_body -> LBRACE cases RBRACE
-- On ELSE reduce production handler_body -> LBRACE cases RBRACE
-- On DOTDOT reduce production handler_body -> LBRACE cases RBRACE
-- On DOT reduce production handler_body -> LBRACE cases RBRACE
-- On DOOP reduce production handler_body -> LBRACE cases RBRACE
-- On DELETE_LEFT reduce production handler_body -> LBRACE cases RBRACE
-- On DELETE reduce production handler_body -> LBRACE cases RBRACE
-- On DEFAULT reduce production handler_body -> LBRACE cases RBRACE
-- On DATABASE reduce production handler_body -> LBRACE cases RBRACE
-- On CONSTRUCTOR reduce production handler_body -> LBRACE cases RBRACE
-- On COMMA reduce production handler_body -> LBRACE cases RBRACE
-- On COLONCOLON reduce production handler_body -> LBRACE cases RBRACE
-- On COLON reduce production handler_body -> LBRACE cases RBRACE
-- On CHAR reduce production handler_body -> LBRACE cases RBRACE
-- On CASE reduce production handler_body -> LBRACE cases RBRACE
-- On BY reduce production handler_body -> LBRACE cases RBRACE
-- On BARRBRACE reduce production handler_body -> LBRACE cases RBRACE
-- On BARBAR reduce production handler_body -> LBRACE cases RBRACE
-- On BANG reduce production handler_body -> LBRACE cases RBRACE
-- On AS reduce production handler_body -> LBRACE cases RBRACE
-- On AMPAMP reduce production handler_body -> LBRACE cases RBRACE
-- On ALIEN reduce production handler_body -> LBRACE cases RBRACE

State 503:
cases -> case . [ RBRACE ]
cases -> case . cases [ RBRACE ]
-- On CASE shift to state 336
-- On cases shift to state 504
-- On case shift to state 503
-- On RBRACE reduce production cases -> case

State 504:
cases -> case cases . [ RBRACE ]
-- On RBRACE reduce production cases -> case cases

State 505:
typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On VAR reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On UPDATE reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On UINTEGER reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On UFLOAT reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On TYPENAME reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On TRY reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On TRUE reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On TABLE reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On SWITCH reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On STRING reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On SPAWNWAIT reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On SPAWNCLIENT reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On SPAWNAT reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On SPAWNANGELAT reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On SPAWNANGEL reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On SPAWN reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On SIG reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On SHALLOWHANDLER reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On SHALLOWHANDLE reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On SEMICOLON reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On SELECT reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On RECEIVE reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On RBRACE reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On RAISE reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On QUERY reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On PREFIXOP reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On PREFIX reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On POSTFIX reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On PAGE reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On OPEN reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On OP reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On OFFER reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On MODULE reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On MINUSDOT reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On MINUS reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On LXML reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On LPAREN reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On LINFUN reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On LENSSELECT reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On LENSPUT reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On LENSJOIN reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On LENSGET reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On LENSDROP reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On LENS reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On LEFTTRIANGLE reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On LBRACKET reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On LBRACE reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On INSERT reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On INFIXR reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On INFIXL reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On INFIX reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On IF reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On HANDLER reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On HANDLE reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On FUN reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On FORMLET reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On FOR reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On FALSE reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On ESCAPE reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On END reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On DOOP reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On DELETE reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On DATABASE reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On CONSTRUCTOR reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On CHAR reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization
-- On ALIEN reduce production typed_handler_binding -> handler_depth optional_computation_parameter var handler_parameterization

State 506:
handler_parameterization -> handler_body . [ WITH VBAR VARIABLE VAR VALUES UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW RAISE QUERY PREFIXOP PREFIX POSTFIXOP POSTFIX PAGE OTHERWISE OPEN OP ON OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXR INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIXL INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 INFIX IF HANDLER HANDLE FUN FROM FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE END ELSE DOTDOT DOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ALIEN ]
-- On WITH reduce production handler_parameterization -> handler_body
-- On VBAR reduce production handler_parameterization -> handler_body
-- On VARIABLE reduce production handler_parameterization -> handler_body
-- On VAR reduce production handler_parameterization -> handler_body
-- On VALUES reduce production handler_parameterization -> handler_body
-- On UPDATE reduce production handler_parameterization -> handler_body
-- On UINTEGER reduce production handler_parameterization -> handler_body
-- On UFLOAT reduce production handler_parameterization -> handler_body
-- On TYPENAME reduce production handler_parameterization -> handler_body
-- On TRY reduce production handler_parameterization -> handler_body
-- On TRUE reduce production handler_parameterization -> handler_body
-- On TABLEKEYS reduce production handler_parameterization -> handler_body
-- On TABLE reduce production handler_parameterization -> handler_body
-- On SWITCH reduce production handler_parameterization -> handler_body
-- On STRING reduce production handler_parameterization -> handler_body
-- On SPAWNWAIT reduce production handler_parameterization -> handler_body
-- On SPAWNCLIENT reduce production handler_parameterization -> handler_body
-- On SPAWNAT reduce production handler_parameterization -> handler_body
-- On SPAWNANGELAT reduce production handler_parameterization -> handler_body
-- On SPAWNANGEL reduce production handler_parameterization -> handler_body
-- On SPAWN reduce production handler_parameterization -> handler_body
-- On SIG reduce production handler_parameterization -> handler_body
-- On SHALLOWHANDLER reduce production handler_parameterization -> handler_body
-- On SHALLOWHANDLE reduce production handler_parameterization -> handler_body
-- On SEMICOLON reduce production handler_parameterization -> handler_body
-- On SELECT reduce production handler_parameterization -> handler_body
-- On RPAREN reduce production handler_parameterization -> handler_body
-- On RETURNING reduce production handler_parameterization -> handler_body
-- On RECEIVE reduce production handler_parameterization -> handler_body
-- On RBRACKET reduce production handler_parameterization -> handler_body
-- On RBRACE reduce production handler_parameterization -> handler_body
-- On RARROW reduce production handler_parameterization -> handler_body
-- On RAISE reduce production handler_parameterization -> handler_body
-- On QUERY reduce production handler_parameterization -> handler_body
-- On PREFIXOP reduce production handler_parameterization -> handler_body
-- On PREFIX reduce production handler_parameterization -> handler_body
-- On POSTFIXOP reduce production handler_parameterization -> handler_body
-- On POSTFIX reduce production handler_parameterization -> handler_body
-- On PAGE reduce production handler_parameterization -> handler_body
-- On OTHERWISE reduce production handler_parameterization -> handler_body
-- On OPEN reduce production handler_parameterization -> handler_body
-- On OP reduce production handler_parameterization -> handler_body
-- On ON reduce production handler_parameterization -> handler_body
-- On OFFER reduce production handler_parameterization -> handler_body
-- On MODULE reduce production handler_parameterization -> handler_body
-- On MINUSDOT reduce production handler_parameterization -> handler_body
-- On MINUS reduce production handler_parameterization -> handler_body
-- On LXML reduce production handler_parameterization -> handler_body
-- On LPAREN reduce production handler_parameterization -> handler_body
-- On LINFUN reduce production handler_parameterization -> handler_body
-- On LENSSELECT reduce production handler_parameterization -> handler_body
-- On LENSPUT reduce production handler_parameterization -> handler_body
-- On LENSJOIN reduce production handler_parameterization -> handler_body
-- On LENSGET reduce production handler_parameterization -> handler_body
-- On LENSDROP reduce production handler_parameterization -> handler_body
-- On LENS reduce production handler_parameterization -> handler_body
-- On LEFTTRIANGLE reduce production handler_parameterization -> handler_body
-- On LBRACKET reduce production handler_parameterization -> handler_body
-- On LBRACE reduce production handler_parameterization -> handler_body
-- On INSERT reduce production handler_parameterization -> handler_body
-- On INFIXR9 reduce production handler_parameterization -> handler_body
-- On INFIXR8 reduce production handler_parameterization -> handler_body
-- On INFIXR7 reduce production handler_parameterization -> handler_body
-- On INFIXR6 reduce production handler_parameterization -> handler_body
-- On INFIXR5 reduce production handler_parameterization -> handler_body
-- On INFIXR4 reduce production handler_parameterization -> handler_body
-- On INFIXR3 reduce production handler_parameterization -> handler_body
-- On INFIXR2 reduce production handler_parameterization -> handler_body
-- On INFIXR1 reduce production handler_parameterization -> handler_body
-- On INFIXR0 reduce production handler_parameterization -> handler_body
-- On INFIXR reduce production handler_parameterization -> handler_body
-- On INFIXL9 reduce production handler_parameterization -> handler_body
-- On INFIXL8 reduce production handler_parameterization -> handler_body
-- On INFIXL7 reduce production handler_parameterization -> handler_body
-- On INFIXL6 reduce production handler_parameterization -> handler_body
-- On INFIXL5 reduce production handler_parameterization -> handler_body
-- On INFIXL4 reduce production handler_parameterization -> handler_body
-- On INFIXL3 reduce production handler_parameterization -> handler_body
-- On INFIXL2 reduce production handler_parameterization -> handler_body
-- On INFIXL1 reduce production handler_parameterization -> handler_body
-- On INFIXL0 reduce production handler_parameterization -> handler_body
-- On INFIXL reduce production handler_parameterization -> handler_body
-- On INFIX9 reduce production handler_parameterization -> handler_body
-- On INFIX8 reduce production handler_parameterization -> handler_body
-- On INFIX7 reduce production handler_parameterization -> handler_body
-- On INFIX6 reduce production handler_parameterization -> handler_body
-- On INFIX5 reduce production handler_parameterization -> handler_body
-- On INFIX4 reduce production handler_parameterization -> handler_body
-- On INFIX3 reduce production handler_parameterization -> handler_body
-- On INFIX2 reduce production handler_parameterization -> handler_body
-- On INFIX1 reduce production handler_parameterization -> handler_body
-- On INFIX0 reduce production handler_parameterization -> handler_body
-- On INFIX reduce production handler_parameterization -> handler_body
-- On IF reduce production handler_parameterization -> handler_body
-- On HANDLER reduce production handler_parameterization -> handler_body
-- On HANDLE reduce production handler_parameterization -> handler_body
-- On FUN reduce production handler_parameterization -> handler_body
-- On FROM reduce production handler_parameterization -> handler_body
-- On FORMLET reduce production handler_parameterization -> handler_body
-- On FOR reduce production handler_parameterization -> handler_body
-- On FATRARROW reduce production handler_parameterization -> handler_body
-- On FALSE reduce production handler_parameterization -> handler_body
-- On ESCAPE reduce production handler_parameterization -> handler_body
-- On EQUALSTILDE reduce production handler_parameterization -> handler_body
-- On END reduce production handler_parameterization -> handler_body
-- On ELSE reduce production handler_parameterization -> handler_body
-- On DOTDOT reduce production handler_parameterization -> handler_body
-- On DOT reduce production handler_parameterization -> handler_body
-- On DOOP reduce production handler_parameterization -> handler_body
-- On DELETE_LEFT reduce production handler_parameterization -> handler_body
-- On DELETE reduce production handler_parameterization -> handler_body
-- On DEFAULT reduce production handler_parameterization -> handler_body
-- On DATABASE reduce production handler_parameterization -> handler_body
-- On CONSTRUCTOR reduce production handler_parameterization -> handler_body
-- On COMMA reduce production handler_parameterization -> handler_body
-- On COLONCOLON reduce production handler_parameterization -> handler_body
-- On COLON reduce production handler_parameterization -> handler_body
-- On CHAR reduce production handler_parameterization -> handler_body
-- On CASE reduce production handler_parameterization -> handler_body
-- On BY reduce production handler_parameterization -> handler_body
-- On BARRBRACE reduce production handler_parameterization -> handler_body
-- On BARBAR reduce production handler_parameterization -> handler_body
-- On BANG reduce production handler_parameterization -> handler_body
-- On AS reduce production handler_parameterization -> handler_body
-- On AMPAMP reduce production handler_parameterization -> handler_body
-- On ALIEN reduce production handler_parameterization -> handler_body

State 507:
handler_parameterization -> arg_lists . handler_body [ WITH VBAR VARIABLE VAR VALUES UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW RAISE QUERY PREFIXOP PREFIX POSTFIXOP POSTFIX PAGE OTHERWISE OPEN OP ON OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXR INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIXL INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 INFIX IF HANDLER HANDLE FUN FROM FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE END ELSE DOTDOT DOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ALIEN ]
-- On LBRACE shift to state 500
-- On handler_body shift to state 508

State 508:
handler_parameterization -> arg_lists handler_body . [ WITH VBAR VARIABLE VAR VALUES UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW RAISE QUERY PREFIXOP PREFIX POSTFIXOP POSTFIX PAGE OTHERWISE OPEN OP ON OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXR INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIXL INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 INFIX IF HANDLER HANDLE FUN FROM FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE END ELSE DOTDOT DOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ALIEN ]
-- On WITH reduce production handler_parameterization -> arg_lists handler_body
-- On VBAR reduce production handler_parameterization -> arg_lists handler_body
-- On VARIABLE reduce production handler_parameterization -> arg_lists handler_body
-- On VAR reduce production handler_parameterization -> arg_lists handler_body
-- On VALUES reduce production handler_parameterization -> arg_lists handler_body
-- On UPDATE reduce production handler_parameterization -> arg_lists handler_body
-- On UINTEGER reduce production handler_parameterization -> arg_lists handler_body
-- On UFLOAT reduce production handler_parameterization -> arg_lists handler_body
-- On TYPENAME reduce production handler_parameterization -> arg_lists handler_body
-- On TRY reduce production handler_parameterization -> arg_lists handler_body
-- On TRUE reduce production handler_parameterization -> arg_lists handler_body
-- On TABLEKEYS reduce production handler_parameterization -> arg_lists handler_body
-- On TABLE reduce production handler_parameterization -> arg_lists handler_body
-- On SWITCH reduce production handler_parameterization -> arg_lists handler_body
-- On STRING reduce production handler_parameterization -> arg_lists handler_body
-- On SPAWNWAIT reduce production handler_parameterization -> arg_lists handler_body
-- On SPAWNCLIENT reduce production handler_parameterization -> arg_lists handler_body
-- On SPAWNAT reduce production handler_parameterization -> arg_lists handler_body
-- On SPAWNANGELAT reduce production handler_parameterization -> arg_lists handler_body
-- On SPAWNANGEL reduce production handler_parameterization -> arg_lists handler_body
-- On SPAWN reduce production handler_parameterization -> arg_lists handler_body
-- On SIG reduce production handler_parameterization -> arg_lists handler_body
-- On SHALLOWHANDLER reduce production handler_parameterization -> arg_lists handler_body
-- On SHALLOWHANDLE reduce production handler_parameterization -> arg_lists handler_body
-- On SEMICOLON reduce production handler_parameterization -> arg_lists handler_body
-- On SELECT reduce production handler_parameterization -> arg_lists handler_body
-- On RPAREN reduce production handler_parameterization -> arg_lists handler_body
-- On RETURNING reduce production handler_parameterization -> arg_lists handler_body
-- On RECEIVE reduce production handler_parameterization -> arg_lists handler_body
-- On RBRACKET reduce production handler_parameterization -> arg_lists handler_body
-- On RBRACE reduce production handler_parameterization -> arg_lists handler_body
-- On RARROW reduce production handler_parameterization -> arg_lists handler_body
-- On RAISE reduce production handler_parameterization -> arg_lists handler_body
-- On QUERY reduce production handler_parameterization -> arg_lists handler_body
-- On PREFIXOP reduce production handler_parameterization -> arg_lists handler_body
-- On PREFIX reduce production handler_parameterization -> arg_lists handler_body
-- On POSTFIXOP reduce production handler_parameterization -> arg_lists handler_body
-- On POSTFIX reduce production handler_parameterization -> arg_lists handler_body
-- On PAGE reduce production handler_parameterization -> arg_lists handler_body
-- On OTHERWISE reduce production handler_parameterization -> arg_lists handler_body
-- On OPEN reduce production handler_parameterization -> arg_lists handler_body
-- On OP reduce production handler_parameterization -> arg_lists handler_body
-- On ON reduce production handler_parameterization -> arg_lists handler_body
-- On OFFER reduce production handler_parameterization -> arg_lists handler_body
-- On MODULE reduce production handler_parameterization -> arg_lists handler_body
-- On MINUSDOT reduce production handler_parameterization -> arg_lists handler_body
-- On MINUS reduce production handler_parameterization -> arg_lists handler_body
-- On LXML reduce production handler_parameterization -> arg_lists handler_body
-- On LPAREN reduce production handler_parameterization -> arg_lists handler_body
-- On LINFUN reduce production handler_parameterization -> arg_lists handler_body
-- On LENSSELECT reduce production handler_parameterization -> arg_lists handler_body
-- On LENSPUT reduce production handler_parameterization -> arg_lists handler_body
-- On LENSJOIN reduce production handler_parameterization -> arg_lists handler_body
-- On LENSGET reduce production handler_parameterization -> arg_lists handler_body
-- On LENSDROP reduce production handler_parameterization -> arg_lists handler_body
-- On LENS reduce production handler_parameterization -> arg_lists handler_body
-- On LEFTTRIANGLE reduce production handler_parameterization -> arg_lists handler_body
-- On LBRACKET reduce production handler_parameterization -> arg_lists handler_body
-- On LBRACE reduce production handler_parameterization -> arg_lists handler_body
-- On INSERT reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXR9 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXR8 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXR7 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXR6 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXR5 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXR4 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXR3 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXR2 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXR1 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXR0 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXR reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXL9 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXL8 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXL7 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXL6 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXL5 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXL4 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXL3 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXL2 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXL1 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXL0 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIXL reduce production handler_parameterization -> arg_lists handler_body
-- On INFIX9 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIX8 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIX7 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIX6 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIX5 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIX4 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIX3 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIX2 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIX1 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIX0 reduce production handler_parameterization -> arg_lists handler_body
-- On INFIX reduce production handler_parameterization -> arg_lists handler_body
-- On IF reduce production handler_parameterization -> arg_lists handler_body
-- On HANDLER reduce production handler_parameterization -> arg_lists handler_body
-- On HANDLE reduce production handler_parameterization -> arg_lists handler_body
-- On FUN reduce production handler_parameterization -> arg_lists handler_body
-- On FROM reduce production handler_parameterization -> arg_lists handler_body
-- On FORMLET reduce production handler_parameterization -> arg_lists handler_body
-- On FOR reduce production handler_parameterization -> arg_lists handler_body
-- On FATRARROW reduce production handler_parameterization -> arg_lists handler_body
-- On FALSE reduce production handler_parameterization -> arg_lists handler_body
-- On ESCAPE reduce production handler_parameterization -> arg_lists handler_body
-- On EQUALSTILDE reduce production handler_parameterization -> arg_lists handler_body
-- On END reduce production handler_parameterization -> arg_lists handler_body
-- On ELSE reduce production handler_parameterization -> arg_lists handler_body
-- On DOTDOT reduce production handler_parameterization -> arg_lists handler_body
-- On DOT reduce production handler_parameterization -> arg_lists handler_body
-- On DOOP reduce production handler_parameterization -> arg_lists handler_body
-- On DELETE_LEFT reduce production handler_parameterization -> arg_lists handler_body
-- On DELETE reduce production handler_parameterization -> arg_lists handler_body
-- On DEFAULT reduce production handler_parameterization -> arg_lists handler_body
-- On DATABASE reduce production handler_parameterization -> arg_lists handler_body
-- On CONSTRUCTOR reduce production handler_parameterization -> arg_lists handler_body
-- On COMMA reduce production handler_parameterization -> arg_lists handler_body
-- On COLONCOLON reduce production handler_parameterization -> arg_lists handler_body
-- On COLON reduce production handler_parameterization -> arg_lists handler_body
-- On CHAR reduce production handler_parameterization -> arg_lists handler_body
-- On CASE reduce production handler_parameterization -> arg_lists handler_body
-- On BY reduce production handler_parameterization -> arg_lists handler_body
-- On BARRBRACE reduce production handler_parameterization -> arg_lists handler_body
-- On BARBAR reduce production handler_parameterization -> arg_lists handler_body
-- On BANG reduce production handler_parameterization -> arg_lists handler_body
-- On AS reduce production handler_parameterization -> arg_lists handler_body
-- On AMPAMP reduce production handler_parameterization -> arg_lists handler_body
-- On ALIEN reduce production handler_parameterization -> arg_lists handler_body

State 509:
declaration -> nofun_declaration . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production declaration -> nofun_declaration
-- On VAR reduce production declaration -> nofun_declaration
-- On UPDATE reduce production declaration -> nofun_declaration
-- On UINTEGER reduce production declaration -> nofun_declaration
-- On UFLOAT reduce production declaration -> nofun_declaration
-- On TYPENAME reduce production declaration -> nofun_declaration
-- On TRY reduce production declaration -> nofun_declaration
-- On TRUE reduce production declaration -> nofun_declaration
-- On TABLE reduce production declaration -> nofun_declaration
-- On SWITCH reduce production declaration -> nofun_declaration
-- On STRING reduce production declaration -> nofun_declaration
-- On SPAWNWAIT reduce production declaration -> nofun_declaration
-- On SPAWNCLIENT reduce production declaration -> nofun_declaration
-- On SPAWNAT reduce production declaration -> nofun_declaration
-- On SPAWNANGELAT reduce production declaration -> nofun_declaration
-- On SPAWNANGEL reduce production declaration -> nofun_declaration
-- On SPAWN reduce production declaration -> nofun_declaration
-- On SIG reduce production declaration -> nofun_declaration
-- On SHALLOWHANDLER reduce production declaration -> nofun_declaration
-- On SHALLOWHANDLE reduce production declaration -> nofun_declaration
-- On SELECT reduce production declaration -> nofun_declaration
-- On RECEIVE reduce production declaration -> nofun_declaration
-- On RBRACE reduce production declaration -> nofun_declaration
-- On RAISE reduce production declaration -> nofun_declaration
-- On QUERY reduce production declaration -> nofun_declaration
-- On PREFIXOP reduce production declaration -> nofun_declaration
-- On PREFIX reduce production declaration -> nofun_declaration
-- On POSTFIX reduce production declaration -> nofun_declaration
-- On PAGE reduce production declaration -> nofun_declaration
-- On OPEN reduce production declaration -> nofun_declaration
-- On OP reduce production declaration -> nofun_declaration
-- On OFFER reduce production declaration -> nofun_declaration
-- On MODULE reduce production declaration -> nofun_declaration
-- On MINUSDOT reduce production declaration -> nofun_declaration
-- On MINUS reduce production declaration -> nofun_declaration
-- On LXML reduce production declaration -> nofun_declaration
-- On LPAREN reduce production declaration -> nofun_declaration
-- On LINFUN reduce production declaration -> nofun_declaration
-- On LENSSELECT reduce production declaration -> nofun_declaration
-- On LENSPUT reduce production declaration -> nofun_declaration
-- On LENSJOIN reduce production declaration -> nofun_declaration
-- On LENSGET reduce production declaration -> nofun_declaration
-- On LENSDROP reduce production declaration -> nofun_declaration
-- On LENS reduce production declaration -> nofun_declaration
-- On LEFTTRIANGLE reduce production declaration -> nofun_declaration
-- On LBRACKET reduce production declaration -> nofun_declaration
-- On LBRACE reduce production declaration -> nofun_declaration
-- On INSERT reduce production declaration -> nofun_declaration
-- On INFIXR reduce production declaration -> nofun_declaration
-- On INFIXL reduce production declaration -> nofun_declaration
-- On INFIX reduce production declaration -> nofun_declaration
-- On IF reduce production declaration -> nofun_declaration
-- On HANDLER reduce production declaration -> nofun_declaration
-- On HANDLE reduce production declaration -> nofun_declaration
-- On FUN reduce production declaration -> nofun_declaration
-- On FORMLET reduce production declaration -> nofun_declaration
-- On FOR reduce production declaration -> nofun_declaration
-- On FALSE reduce production declaration -> nofun_declaration
-- On ESCAPE reduce production declaration -> nofun_declaration
-- On END reduce production declaration -> nofun_declaration
-- On DOOP reduce production declaration -> nofun_declaration
-- On DELETE reduce production declaration -> nofun_declaration
-- On DATABASE reduce production declaration -> nofun_declaration
-- On CONSTRUCTOR reduce production declaration -> nofun_declaration
-- On CHAR reduce production declaration -> nofun_declaration
-- On ALIEN reduce production declaration -> nofun_declaration

State 510:
nofun_declaration -> links_open . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production nofun_declaration -> links_open
-- On VAR reduce production nofun_declaration -> links_open
-- On UPDATE reduce production nofun_declaration -> links_open
-- On UINTEGER reduce production nofun_declaration -> links_open
-- On UFLOAT reduce production nofun_declaration -> links_open
-- On TYPENAME reduce production nofun_declaration -> links_open
-- On TRY reduce production nofun_declaration -> links_open
-- On TRUE reduce production nofun_declaration -> links_open
-- On TABLE reduce production nofun_declaration -> links_open
-- On SWITCH reduce production nofun_declaration -> links_open
-- On STRING reduce production nofun_declaration -> links_open
-- On SPAWNWAIT reduce production nofun_declaration -> links_open
-- On SPAWNCLIENT reduce production nofun_declaration -> links_open
-- On SPAWNAT reduce production nofun_declaration -> links_open
-- On SPAWNANGELAT reduce production nofun_declaration -> links_open
-- On SPAWNANGEL reduce production nofun_declaration -> links_open
-- On SPAWN reduce production nofun_declaration -> links_open
-- On SIG reduce production nofun_declaration -> links_open
-- On SHALLOWHANDLER reduce production nofun_declaration -> links_open
-- On SHALLOWHANDLE reduce production nofun_declaration -> links_open
-- On SELECT reduce production nofun_declaration -> links_open
-- On RECEIVE reduce production nofun_declaration -> links_open
-- On RBRACE reduce production nofun_declaration -> links_open
-- On RAISE reduce production nofun_declaration -> links_open
-- On QUERY reduce production nofun_declaration -> links_open
-- On PREFIXOP reduce production nofun_declaration -> links_open
-- On PREFIX reduce production nofun_declaration -> links_open
-- On POSTFIX reduce production nofun_declaration -> links_open
-- On PAGE reduce production nofun_declaration -> links_open
-- On OPEN reduce production nofun_declaration -> links_open
-- On OP reduce production nofun_declaration -> links_open
-- On OFFER reduce production nofun_declaration -> links_open
-- On MODULE reduce production nofun_declaration -> links_open
-- On MINUSDOT reduce production nofun_declaration -> links_open
-- On MINUS reduce production nofun_declaration -> links_open
-- On LXML reduce production nofun_declaration -> links_open
-- On LPAREN reduce production nofun_declaration -> links_open
-- On LINFUN reduce production nofun_declaration -> links_open
-- On LENSSELECT reduce production nofun_declaration -> links_open
-- On LENSPUT reduce production nofun_declaration -> links_open
-- On LENSJOIN reduce production nofun_declaration -> links_open
-- On LENSGET reduce production nofun_declaration -> links_open
-- On LENSDROP reduce production nofun_declaration -> links_open
-- On LENS reduce production nofun_declaration -> links_open
-- On LEFTTRIANGLE reduce production nofun_declaration -> links_open
-- On LBRACKET reduce production nofun_declaration -> links_open
-- On LBRACE reduce production nofun_declaration -> links_open
-- On INSERT reduce production nofun_declaration -> links_open
-- On INFIXR reduce production nofun_declaration -> links_open
-- On INFIXL reduce production nofun_declaration -> links_open
-- On INFIX reduce production nofun_declaration -> links_open
-- On IF reduce production nofun_declaration -> links_open
-- On HANDLER reduce production nofun_declaration -> links_open
-- On HANDLE reduce production nofun_declaration -> links_open
-- On FUN reduce production nofun_declaration -> links_open
-- On FORMLET reduce production nofun_declaration -> links_open
-- On FOR reduce production nofun_declaration -> links_open
-- On FALSE reduce production nofun_declaration -> links_open
-- On ESCAPE reduce production nofun_declaration -> links_open
-- On END reduce production nofun_declaration -> links_open
-- On DOOP reduce production nofun_declaration -> links_open
-- On DELETE reduce production nofun_declaration -> links_open
-- On DATABASE reduce production nofun_declaration -> links_open
-- On CONSTRUCTOR reduce production nofun_declaration -> links_open
-- On CHAR reduce production nofun_declaration -> links_open
-- On ALIEN reduce production nofun_declaration -> links_open

State 511:
nofun_declaration -> links_module . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production nofun_declaration -> links_module
-- On VAR reduce production nofun_declaration -> links_module
-- On UPDATE reduce production nofun_declaration -> links_module
-- On UINTEGER reduce production nofun_declaration -> links_module
-- On UFLOAT reduce production nofun_declaration -> links_module
-- On TYPENAME reduce production nofun_declaration -> links_module
-- On TRY reduce production nofun_declaration -> links_module
-- On TRUE reduce production nofun_declaration -> links_module
-- On TABLE reduce production nofun_declaration -> links_module
-- On SWITCH reduce production nofun_declaration -> links_module
-- On STRING reduce production nofun_declaration -> links_module
-- On SPAWNWAIT reduce production nofun_declaration -> links_module
-- On SPAWNCLIENT reduce production nofun_declaration -> links_module
-- On SPAWNAT reduce production nofun_declaration -> links_module
-- On SPAWNANGELAT reduce production nofun_declaration -> links_module
-- On SPAWNANGEL reduce production nofun_declaration -> links_module
-- On SPAWN reduce production nofun_declaration -> links_module
-- On SIG reduce production nofun_declaration -> links_module
-- On SHALLOWHANDLER reduce production nofun_declaration -> links_module
-- On SHALLOWHANDLE reduce production nofun_declaration -> links_module
-- On SELECT reduce production nofun_declaration -> links_module
-- On RECEIVE reduce production nofun_declaration -> links_module
-- On RBRACE reduce production nofun_declaration -> links_module
-- On RAISE reduce production nofun_declaration -> links_module
-- On QUERY reduce production nofun_declaration -> links_module
-- On PREFIXOP reduce production nofun_declaration -> links_module
-- On PREFIX reduce production nofun_declaration -> links_module
-- On POSTFIX reduce production nofun_declaration -> links_module
-- On PAGE reduce production nofun_declaration -> links_module
-- On OPEN reduce production nofun_declaration -> links_module
-- On OP reduce production nofun_declaration -> links_module
-- On OFFER reduce production nofun_declaration -> links_module
-- On MODULE reduce production nofun_declaration -> links_module
-- On MINUSDOT reduce production nofun_declaration -> links_module
-- On MINUS reduce production nofun_declaration -> links_module
-- On LXML reduce production nofun_declaration -> links_module
-- On LPAREN reduce production nofun_declaration -> links_module
-- On LINFUN reduce production nofun_declaration -> links_module
-- On LENSSELECT reduce production nofun_declaration -> links_module
-- On LENSPUT reduce production nofun_declaration -> links_module
-- On LENSJOIN reduce production nofun_declaration -> links_module
-- On LENSGET reduce production nofun_declaration -> links_module
-- On LENSDROP reduce production nofun_declaration -> links_module
-- On LENS reduce production nofun_declaration -> links_module
-- On LEFTTRIANGLE reduce production nofun_declaration -> links_module
-- On LBRACKET reduce production nofun_declaration -> links_module
-- On LBRACE reduce production nofun_declaration -> links_module
-- On INSERT reduce production nofun_declaration -> links_module
-- On INFIXR reduce production nofun_declaration -> links_module
-- On INFIXL reduce production nofun_declaration -> links_module
-- On INFIX reduce production nofun_declaration -> links_module
-- On IF reduce production nofun_declaration -> links_module
-- On HANDLER reduce production nofun_declaration -> links_module
-- On HANDLE reduce production nofun_declaration -> links_module
-- On FUN reduce production nofun_declaration -> links_module
-- On FORMLET reduce production nofun_declaration -> links_module
-- On FOR reduce production nofun_declaration -> links_module
-- On FALSE reduce production nofun_declaration -> links_module
-- On ESCAPE reduce production nofun_declaration -> links_module
-- On END reduce production nofun_declaration -> links_module
-- On DOOP reduce production nofun_declaration -> links_module
-- On DELETE reduce production nofun_declaration -> links_module
-- On DATABASE reduce production nofun_declaration -> links_module
-- On CONSTRUCTOR reduce production nofun_declaration -> links_module
-- On CHAR reduce production nofun_declaration -> links_module
-- On ALIEN reduce production nofun_declaration -> links_module

State 512:
declaration -> fun_declaration . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production declaration -> fun_declaration
-- On VAR reduce production declaration -> fun_declaration
-- On UPDATE reduce production declaration -> fun_declaration
-- On UINTEGER reduce production declaration -> fun_declaration
-- On UFLOAT reduce production declaration -> fun_declaration
-- On TYPENAME reduce production declaration -> fun_declaration
-- On TRY reduce production declaration -> fun_declaration
-- On TRUE reduce production declaration -> fun_declaration
-- On TABLE reduce production declaration -> fun_declaration
-- On SWITCH reduce production declaration -> fun_declaration
-- On STRING reduce production declaration -> fun_declaration
-- On SPAWNWAIT reduce production declaration -> fun_declaration
-- On SPAWNCLIENT reduce production declaration -> fun_declaration
-- On SPAWNAT reduce production declaration -> fun_declaration
-- On SPAWNANGELAT reduce production declaration -> fun_declaration
-- On SPAWNANGEL reduce production declaration -> fun_declaration
-- On SPAWN reduce production declaration -> fun_declaration
-- On SIG reduce production declaration -> fun_declaration
-- On SHALLOWHANDLER reduce production declaration -> fun_declaration
-- On SHALLOWHANDLE reduce production declaration -> fun_declaration
-- On SELECT reduce production declaration -> fun_declaration
-- On RECEIVE reduce production declaration -> fun_declaration
-- On RBRACE reduce production declaration -> fun_declaration
-- On RAISE reduce production declaration -> fun_declaration
-- On QUERY reduce production declaration -> fun_declaration
-- On PREFIXOP reduce production declaration -> fun_declaration
-- On PREFIX reduce production declaration -> fun_declaration
-- On POSTFIX reduce production declaration -> fun_declaration
-- On PAGE reduce production declaration -> fun_declaration
-- On OPEN reduce production declaration -> fun_declaration
-- On OP reduce production declaration -> fun_declaration
-- On OFFER reduce production declaration -> fun_declaration
-- On MODULE reduce production declaration -> fun_declaration
-- On MINUSDOT reduce production declaration -> fun_declaration
-- On MINUS reduce production declaration -> fun_declaration
-- On LXML reduce production declaration -> fun_declaration
-- On LPAREN reduce production declaration -> fun_declaration
-- On LINFUN reduce production declaration -> fun_declaration
-- On LENSSELECT reduce production declaration -> fun_declaration
-- On LENSPUT reduce production declaration -> fun_declaration
-- On LENSJOIN reduce production declaration -> fun_declaration
-- On LENSGET reduce production declaration -> fun_declaration
-- On LENSDROP reduce production declaration -> fun_declaration
-- On LENS reduce production declaration -> fun_declaration
-- On LEFTTRIANGLE reduce production declaration -> fun_declaration
-- On LBRACKET reduce production declaration -> fun_declaration
-- On LBRACE reduce production declaration -> fun_declaration
-- On INSERT reduce production declaration -> fun_declaration
-- On INFIXR reduce production declaration -> fun_declaration
-- On INFIXL reduce production declaration -> fun_declaration
-- On INFIX reduce production declaration -> fun_declaration
-- On IF reduce production declaration -> fun_declaration
-- On HANDLER reduce production declaration -> fun_declaration
-- On HANDLE reduce production declaration -> fun_declaration
-- On FUN reduce production declaration -> fun_declaration
-- On FORMLET reduce production declaration -> fun_declaration
-- On FOR reduce production declaration -> fun_declaration
-- On FALSE reduce production declaration -> fun_declaration
-- On ESCAPE reduce production declaration -> fun_declaration
-- On END reduce production declaration -> fun_declaration
-- On DOOP reduce production declaration -> fun_declaration
-- On DELETE reduce production declaration -> fun_declaration
-- On DATABASE reduce production declaration -> fun_declaration
-- On CONSTRUCTOR reduce production declaration -> fun_declaration
-- On CHAR reduce production declaration -> fun_declaration
-- On ALIEN reduce production declaration -> fun_declaration

State 513:
nofun_declaration -> fixity . perhaps_uinteger op SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On UINTEGER shift to state 514
-- On perhaps_uinteger shift to state 515
-- On INFIXR9 reduce production perhaps_uinteger ->
-- On INFIXR8 reduce production perhaps_uinteger ->
-- On INFIXR7 reduce production perhaps_uinteger ->
-- On INFIXR6 reduce production perhaps_uinteger ->
-- On INFIXR5 reduce production perhaps_uinteger ->
-- On INFIXR4 reduce production perhaps_uinteger ->
-- On INFIXR3 reduce production perhaps_uinteger ->
-- On INFIXR2 reduce production perhaps_uinteger ->
-- On INFIXR1 reduce production perhaps_uinteger ->
-- On INFIXR0 reduce production perhaps_uinteger ->
-- On INFIXL9 reduce production perhaps_uinteger ->
-- On INFIXL8 reduce production perhaps_uinteger ->
-- On INFIXL7 reduce production perhaps_uinteger ->
-- On INFIXL6 reduce production perhaps_uinteger ->
-- On INFIXL5 reduce production perhaps_uinteger ->
-- On INFIXL4 reduce production perhaps_uinteger ->
-- On INFIXL3 reduce production perhaps_uinteger ->
-- On INFIXL2 reduce production perhaps_uinteger ->
-- On INFIXL1 reduce production perhaps_uinteger ->
-- On INFIXL0 reduce production perhaps_uinteger ->
-- On INFIX9 reduce production perhaps_uinteger ->
-- On INFIX8 reduce production perhaps_uinteger ->
-- On INFIX7 reduce production perhaps_uinteger ->
-- On INFIX6 reduce production perhaps_uinteger ->
-- On INFIX5 reduce production perhaps_uinteger ->
-- On INFIX4 reduce production perhaps_uinteger ->
-- On INFIX3 reduce production perhaps_uinteger ->
-- On INFIX2 reduce production perhaps_uinteger ->
-- On INFIX1 reduce production perhaps_uinteger ->
-- On INFIX0 reduce production perhaps_uinteger ->

State 514:
perhaps_uinteger -> UINTEGER . [ INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 ]
-- On INFIXR9 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR8 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR7 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR6 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR5 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR4 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR3 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR2 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR1 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR0 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL9 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL8 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL7 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL6 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL5 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL4 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL3 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL2 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL1 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL0 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX9 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX8 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX7 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX6 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX5 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX4 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX3 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX2 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX1 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX0 reduce production perhaps_uinteger -> UINTEGER

State 515:
nofun_declaration -> fixity perhaps_uinteger . op SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On INFIXR9 shift to state 348
-- On INFIXR8 shift to state 349
-- On INFIXR7 shift to state 350
-- On INFIXR6 shift to state 351
-- On INFIXR5 shift to state 352
-- On INFIXR4 shift to state 353
-- On INFIXR3 shift to state 354
-- On INFIXR2 shift to state 355
-- On INFIXR1 shift to state 356
-- On INFIXR0 shift to state 357
-- On INFIXL9 shift to state 358
-- On INFIXL8 shift to state 359
-- On INFIXL7 shift to state 360
-- On INFIXL6 shift to state 361
-- On INFIXL5 shift to state 362
-- On INFIXL4 shift to state 363
-- On INFIXL3 shift to state 364
-- On INFIXL2 shift to state 365
-- On INFIXL1 shift to state 366
-- On INFIXL0 shift to state 367
-- On INFIX9 shift to state 368
-- On INFIX8 shift to state 369
-- On INFIX7 shift to state 370
-- On INFIX6 shift to state 371
-- On INFIX5 shift to state 372
-- On INFIX4 shift to state 373
-- On INFIX3 shift to state 374
-- On INFIX2 shift to state 375
-- On INFIX1 shift to state 376
-- On INFIX0 shift to state 377
-- On op shift to state 516

State 516:
nofun_declaration -> fixity perhaps_uinteger op . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SEMICOLON shift to state 517

State 517:
nofun_declaration -> fixity perhaps_uinteger op SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On VAR reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On UPDATE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On UINTEGER reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On UFLOAT reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On TYPENAME reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On TRY reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On TRUE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On TABLE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On SWITCH reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On STRING reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On SPAWNWAIT reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On SPAWNCLIENT reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On SPAWNAT reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On SPAWNANGELAT reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On SPAWNANGEL reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On SPAWN reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On SIG reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On SHALLOWHANDLER reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On SHALLOWHANDLE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On SELECT reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On RECEIVE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On RBRACE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On RAISE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On QUERY reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On PREFIXOP reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On PREFIX reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On POSTFIX reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On PAGE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On OPEN reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On OP reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On OFFER reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On MODULE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On MINUSDOT reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On MINUS reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On LXML reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On LPAREN reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On LINFUN reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On LENSSELECT reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On LENSPUT reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On LENSJOIN reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On LENSGET reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On LENSDROP reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On LENS reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On LEFTTRIANGLE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On LBRACKET reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On LBRACE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On INSERT reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On INFIXR reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On INFIXL reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On INFIX reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On IF reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On HANDLER reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On HANDLE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On FUN reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On FORMLET reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On FOR reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On FALSE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On ESCAPE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On END reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On DOOP reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On DELETE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On DATABASE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On CONSTRUCTOR reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On CHAR reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On ALIEN reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON

State 518:
declarations -> declarations . declaration [ VAR TYPENAME SIG SHALLOWHANDLER RBRACE PREFIX POSTFIX OPEN OP MODULE LINFUN INFIXR INFIXL INFIX HANDLER FUN ALIEN ]
moduleblock -> LBRACE declarations . RBRACE [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VAR shift to state 3
-- On TYPENAME shift to state 339
-- On SIG shift to state 347
-- On SHALLOWHANDLER shift to state 329
-- On RBRACE shift to state 519
-- On PREFIX shift to state 436
-- On POSTFIX shift to state 437
-- On OPEN shift to state 429
-- On OP shift to state 438
-- On MODULE shift to state 432
-- On LINFUN shift to state 453
-- On INFIXR shift to state 458
-- On INFIXL shift to state 459
-- On INFIX shift to state 460
-- On HANDLER shift to state 461
-- On FUN shift to state 462
-- On ALIEN shift to state 467
-- On typedecl shift to state 483
-- On typed_handler_binding shift to state 485
-- On tlvarbinding shift to state 486
-- On tlfunbinding shift to state 488
-- On signature shift to state 489
-- On nofun_declaration shift to state 509
-- On links_open shift to state 510
-- On links_module shift to state 511
-- On handler_depth shift to state 494
-- On fun_declaration shift to state 512
-- On fixity shift to state 513
-- On declaration shift to state 520
-- On alien_block shift to state 521

State 519:
moduleblock -> LBRACE declarations RBRACE . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production moduleblock -> LBRACE declarations RBRACE
-- On VAR reduce production moduleblock -> LBRACE declarations RBRACE
-- On UPDATE reduce production moduleblock -> LBRACE declarations RBRACE
-- On UINTEGER reduce production moduleblock -> LBRACE declarations RBRACE
-- On UFLOAT reduce production moduleblock -> LBRACE declarations RBRACE
-- On TYPENAME reduce production moduleblock -> LBRACE declarations RBRACE
-- On TRY reduce production moduleblock -> LBRACE declarations RBRACE
-- On TRUE reduce production moduleblock -> LBRACE declarations RBRACE
-- On TABLE reduce production moduleblock -> LBRACE declarations RBRACE
-- On SWITCH reduce production moduleblock -> LBRACE declarations RBRACE
-- On STRING reduce production moduleblock -> LBRACE declarations RBRACE
-- On SPAWNWAIT reduce production moduleblock -> LBRACE declarations RBRACE
-- On SPAWNCLIENT reduce production moduleblock -> LBRACE declarations RBRACE
-- On SPAWNAT reduce production moduleblock -> LBRACE declarations RBRACE
-- On SPAWNANGELAT reduce production moduleblock -> LBRACE declarations RBRACE
-- On SPAWNANGEL reduce production moduleblock -> LBRACE declarations RBRACE
-- On SPAWN reduce production moduleblock -> LBRACE declarations RBRACE
-- On SIG reduce production moduleblock -> LBRACE declarations RBRACE
-- On SHALLOWHANDLER reduce production moduleblock -> LBRACE declarations RBRACE
-- On SHALLOWHANDLE reduce production moduleblock -> LBRACE declarations RBRACE
-- On SELECT reduce production moduleblock -> LBRACE declarations RBRACE
-- On RECEIVE reduce production moduleblock -> LBRACE declarations RBRACE
-- On RBRACE reduce production moduleblock -> LBRACE declarations RBRACE
-- On RAISE reduce production moduleblock -> LBRACE declarations RBRACE
-- On QUERY reduce production moduleblock -> LBRACE declarations RBRACE
-- On PREFIXOP reduce production moduleblock -> LBRACE declarations RBRACE
-- On PREFIX reduce production moduleblock -> LBRACE declarations RBRACE
-- On POSTFIX reduce production moduleblock -> LBRACE declarations RBRACE
-- On PAGE reduce production moduleblock -> LBRACE declarations RBRACE
-- On OPEN reduce production moduleblock -> LBRACE declarations RBRACE
-- On OP reduce production moduleblock -> LBRACE declarations RBRACE
-- On OFFER reduce production moduleblock -> LBRACE declarations RBRACE
-- On MODULE reduce production moduleblock -> LBRACE declarations RBRACE
-- On MINUSDOT reduce production moduleblock -> LBRACE declarations RBRACE
-- On MINUS reduce production moduleblock -> LBRACE declarations RBRACE
-- On LXML reduce production moduleblock -> LBRACE declarations RBRACE
-- On LPAREN reduce production moduleblock -> LBRACE declarations RBRACE
-- On LINFUN reduce production moduleblock -> LBRACE declarations RBRACE
-- On LENSSELECT reduce production moduleblock -> LBRACE declarations RBRACE
-- On LENSPUT reduce production moduleblock -> LBRACE declarations RBRACE
-- On LENSJOIN reduce production moduleblock -> LBRACE declarations RBRACE
-- On LENSGET reduce production moduleblock -> LBRACE declarations RBRACE
-- On LENSDROP reduce production moduleblock -> LBRACE declarations RBRACE
-- On LENS reduce production moduleblock -> LBRACE declarations RBRACE
-- On LEFTTRIANGLE reduce production moduleblock -> LBRACE declarations RBRACE
-- On LBRACKET reduce production moduleblock -> LBRACE declarations RBRACE
-- On LBRACE reduce production moduleblock -> LBRACE declarations RBRACE
-- On INSERT reduce production moduleblock -> LBRACE declarations RBRACE
-- On INFIXR reduce production moduleblock -> LBRACE declarations RBRACE
-- On INFIXL reduce production moduleblock -> LBRACE declarations RBRACE
-- On INFIX reduce production moduleblock -> LBRACE declarations RBRACE
-- On IF reduce production moduleblock -> LBRACE declarations RBRACE
-- On HANDLER reduce production moduleblock -> LBRACE declarations RBRACE
-- On HANDLE reduce production moduleblock -> LBRACE declarations RBRACE
-- On FUN reduce production moduleblock -> LBRACE declarations RBRACE
-- On FORMLET reduce production moduleblock -> LBRACE declarations RBRACE
-- On FOR reduce production moduleblock -> LBRACE declarations RBRACE
-- On FALSE reduce production moduleblock -> LBRACE declarations RBRACE
-- On ESCAPE reduce production moduleblock -> LBRACE declarations RBRACE
-- On END reduce production moduleblock -> LBRACE declarations RBRACE
-- On DOOP reduce production moduleblock -> LBRACE declarations RBRACE
-- On DELETE reduce production moduleblock -> LBRACE declarations RBRACE
-- On DATABASE reduce production moduleblock -> LBRACE declarations RBRACE
-- On CONSTRUCTOR reduce production moduleblock -> LBRACE declarations RBRACE
-- On CHAR reduce production moduleblock -> LBRACE declarations RBRACE
-- On ALIEN reduce production moduleblock -> LBRACE declarations RBRACE

State 520:
declarations -> declarations declaration . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production declarations -> declarations declaration
-- On VAR reduce production declarations -> declarations declaration
-- On UPDATE reduce production declarations -> declarations declaration
-- On UINTEGER reduce production declarations -> declarations declaration
-- On UFLOAT reduce production declarations -> declarations declaration
-- On TYPENAME reduce production declarations -> declarations declaration
-- On TRY reduce production declarations -> declarations declaration
-- On TRUE reduce production declarations -> declarations declaration
-- On TABLE reduce production declarations -> declarations declaration
-- On SWITCH reduce production declarations -> declarations declaration
-- On STRING reduce production declarations -> declarations declaration
-- On SPAWNWAIT reduce production declarations -> declarations declaration
-- On SPAWNCLIENT reduce production declarations -> declarations declaration
-- On SPAWNAT reduce production declarations -> declarations declaration
-- On SPAWNANGELAT reduce production declarations -> declarations declaration
-- On SPAWNANGEL reduce production declarations -> declarations declaration
-- On SPAWN reduce production declarations -> declarations declaration
-- On SIG reduce production declarations -> declarations declaration
-- On SHALLOWHANDLER reduce production declarations -> declarations declaration
-- On SHALLOWHANDLE reduce production declarations -> declarations declaration
-- On SELECT reduce production declarations -> declarations declaration
-- On RECEIVE reduce production declarations -> declarations declaration
-- On RBRACE reduce production declarations -> declarations declaration
-- On RAISE reduce production declarations -> declarations declaration
-- On QUERY reduce production declarations -> declarations declaration
-- On PREFIXOP reduce production declarations -> declarations declaration
-- On PREFIX reduce production declarations -> declarations declaration
-- On POSTFIX reduce production declarations -> declarations declaration
-- On PAGE reduce production declarations -> declarations declaration
-- On OPEN reduce production declarations -> declarations declaration
-- On OP reduce production declarations -> declarations declaration
-- On OFFER reduce production declarations -> declarations declaration
-- On MODULE reduce production declarations -> declarations declaration
-- On MINUSDOT reduce production declarations -> declarations declaration
-- On MINUS reduce production declarations -> declarations declaration
-- On LXML reduce production declarations -> declarations declaration
-- On LPAREN reduce production declarations -> declarations declaration
-- On LINFUN reduce production declarations -> declarations declaration
-- On LENSSELECT reduce production declarations -> declarations declaration
-- On LENSPUT reduce production declarations -> declarations declaration
-- On LENSJOIN reduce production declarations -> declarations declaration
-- On LENSGET reduce production declarations -> declarations declaration
-- On LENSDROP reduce production declarations -> declarations declaration
-- On LENS reduce production declarations -> declarations declaration
-- On LEFTTRIANGLE reduce production declarations -> declarations declaration
-- On LBRACKET reduce production declarations -> declarations declaration
-- On LBRACE reduce production declarations -> declarations declaration
-- On INSERT reduce production declarations -> declarations declaration
-- On INFIXR reduce production declarations -> declarations declaration
-- On INFIXL reduce production declarations -> declarations declaration
-- On INFIX reduce production declarations -> declarations declaration
-- On IF reduce production declarations -> declarations declaration
-- On HANDLER reduce production declarations -> declarations declaration
-- On HANDLE reduce production declarations -> declarations declaration
-- On FUN reduce production declarations -> declarations declaration
-- On FORMLET reduce production declarations -> declarations declaration
-- On FOR reduce production declarations -> declarations declaration
-- On FALSE reduce production declarations -> declarations declaration
-- On ESCAPE reduce production declarations -> declarations declaration
-- On END reduce production declarations -> declarations declaration
-- On DOOP reduce production declarations -> declarations declaration
-- On DELETE reduce production declarations -> declarations declaration
-- On DATABASE reduce production declarations -> declarations declaration
-- On CONSTRUCTOR reduce production declarations -> declarations declaration
-- On CHAR reduce production declarations -> declarations declaration
-- On ALIEN reduce production declarations -> declarations declaration

State 521:
nofun_declaration -> alien_block . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production nofun_declaration -> alien_block
-- On VAR reduce production nofun_declaration -> alien_block
-- On UPDATE reduce production nofun_declaration -> alien_block
-- On UINTEGER reduce production nofun_declaration -> alien_block
-- On UFLOAT reduce production nofun_declaration -> alien_block
-- On TYPENAME reduce production nofun_declaration -> alien_block
-- On TRY reduce production nofun_declaration -> alien_block
-- On TRUE reduce production nofun_declaration -> alien_block
-- On TABLE reduce production nofun_declaration -> alien_block
-- On SWITCH reduce production nofun_declaration -> alien_block
-- On STRING reduce production nofun_declaration -> alien_block
-- On SPAWNWAIT reduce production nofun_declaration -> alien_block
-- On SPAWNCLIENT reduce production nofun_declaration -> alien_block
-- On SPAWNAT reduce production nofun_declaration -> alien_block
-- On SPAWNANGELAT reduce production nofun_declaration -> alien_block
-- On SPAWNANGEL reduce production nofun_declaration -> alien_block
-- On SPAWN reduce production nofun_declaration -> alien_block
-- On SIG reduce production nofun_declaration -> alien_block
-- On SHALLOWHANDLER reduce production nofun_declaration -> alien_block
-- On SHALLOWHANDLE reduce production nofun_declaration -> alien_block
-- On SELECT reduce production nofun_declaration -> alien_block
-- On RECEIVE reduce production nofun_declaration -> alien_block
-- On RBRACE reduce production nofun_declaration -> alien_block
-- On RAISE reduce production nofun_declaration -> alien_block
-- On QUERY reduce production nofun_declaration -> alien_block
-- On PREFIXOP reduce production nofun_declaration -> alien_block
-- On PREFIX reduce production nofun_declaration -> alien_block
-- On POSTFIX reduce production nofun_declaration -> alien_block
-- On PAGE reduce production nofun_declaration -> alien_block
-- On OPEN reduce production nofun_declaration -> alien_block
-- On OP reduce production nofun_declaration -> alien_block
-- On OFFER reduce production nofun_declaration -> alien_block
-- On MODULE reduce production nofun_declaration -> alien_block
-- On MINUSDOT reduce production nofun_declaration -> alien_block
-- On MINUS reduce production nofun_declaration -> alien_block
-- On LXML reduce production nofun_declaration -> alien_block
-- On LPAREN reduce production nofun_declaration -> alien_block
-- On LINFUN reduce production nofun_declaration -> alien_block
-- On LENSSELECT reduce production nofun_declaration -> alien_block
-- On LENSPUT reduce production nofun_declaration -> alien_block
-- On LENSJOIN reduce production nofun_declaration -> alien_block
-- On LENSGET reduce production nofun_declaration -> alien_block
-- On LENSDROP reduce production nofun_declaration -> alien_block
-- On LENS reduce production nofun_declaration -> alien_block
-- On LEFTTRIANGLE reduce production nofun_declaration -> alien_block
-- On LBRACKET reduce production nofun_declaration -> alien_block
-- On LBRACE reduce production nofun_declaration -> alien_block
-- On INSERT reduce production nofun_declaration -> alien_block
-- On INFIXR reduce production nofun_declaration -> alien_block
-- On INFIXL reduce production nofun_declaration -> alien_block
-- On INFIX reduce production nofun_declaration -> alien_block
-- On IF reduce production nofun_declaration -> alien_block
-- On HANDLER reduce production nofun_declaration -> alien_block
-- On HANDLE reduce production nofun_declaration -> alien_block
-- On FUN reduce production nofun_declaration -> alien_block
-- On FORMLET reduce production nofun_declaration -> alien_block
-- On FOR reduce production nofun_declaration -> alien_block
-- On FALSE reduce production nofun_declaration -> alien_block
-- On ESCAPE reduce production nofun_declaration -> alien_block
-- On END reduce production nofun_declaration -> alien_block
-- On DOOP reduce production nofun_declaration -> alien_block
-- On DELETE reduce production nofun_declaration -> alien_block
-- On DATABASE reduce production nofun_declaration -> alien_block
-- On CONSTRUCTOR reduce production nofun_declaration -> alien_block
-- On CHAR reduce production nofun_declaration -> alien_block
-- On ALIEN reduce production nofun_declaration -> alien_block

State 522:
declarations -> declaration . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production declarations -> declaration
-- On VAR reduce production declarations -> declaration
-- On UPDATE reduce production declarations -> declaration
-- On UINTEGER reduce production declarations -> declaration
-- On UFLOAT reduce production declarations -> declaration
-- On TYPENAME reduce production declarations -> declaration
-- On TRY reduce production declarations -> declaration
-- On TRUE reduce production declarations -> declaration
-- On TABLE reduce production declarations -> declaration
-- On SWITCH reduce production declarations -> declaration
-- On STRING reduce production declarations -> declaration
-- On SPAWNWAIT reduce production declarations -> declaration
-- On SPAWNCLIENT reduce production declarations -> declaration
-- On SPAWNAT reduce production declarations -> declaration
-- On SPAWNANGELAT reduce production declarations -> declaration
-- On SPAWNANGEL reduce production declarations -> declaration
-- On SPAWN reduce production declarations -> declaration
-- On SIG reduce production declarations -> declaration
-- On SHALLOWHANDLER reduce production declarations -> declaration
-- On SHALLOWHANDLE reduce production declarations -> declaration
-- On SELECT reduce production declarations -> declaration
-- On RECEIVE reduce production declarations -> declaration
-- On RBRACE reduce production declarations -> declaration
-- On RAISE reduce production declarations -> declaration
-- On QUERY reduce production declarations -> declaration
-- On PREFIXOP reduce production declarations -> declaration
-- On PREFIX reduce production declarations -> declaration
-- On POSTFIX reduce production declarations -> declaration
-- On PAGE reduce production declarations -> declaration
-- On OPEN reduce production declarations -> declaration
-- On OP reduce production declarations -> declaration
-- On OFFER reduce production declarations -> declaration
-- On MODULE reduce production declarations -> declaration
-- On MINUSDOT reduce production declarations -> declaration
-- On MINUS reduce production declarations -> declaration
-- On LXML reduce production declarations -> declaration
-- On LPAREN reduce production declarations -> declaration
-- On LINFUN reduce production declarations -> declaration
-- On LENSSELECT reduce production declarations -> declaration
-- On LENSPUT reduce production declarations -> declaration
-- On LENSJOIN reduce production declarations -> declaration
-- On LENSGET reduce production declarations -> declaration
-- On LENSDROP reduce production declarations -> declaration
-- On LENS reduce production declarations -> declaration
-- On LEFTTRIANGLE reduce production declarations -> declaration
-- On LBRACKET reduce production declarations -> declaration
-- On LBRACE reduce production declarations -> declaration
-- On INSERT reduce production declarations -> declaration
-- On INFIXR reduce production declarations -> declaration
-- On INFIXL reduce production declarations -> declaration
-- On INFIX reduce production declarations -> declaration
-- On IF reduce production declarations -> declaration
-- On HANDLER reduce production declarations -> declaration
-- On HANDLE reduce production declarations -> declaration
-- On FUN reduce production declarations -> declaration
-- On FORMLET reduce production declarations -> declaration
-- On FOR reduce production declarations -> declaration
-- On FALSE reduce production declarations -> declaration
-- On ESCAPE reduce production declarations -> declaration
-- On END reduce production declarations -> declaration
-- On DOOP reduce production declarations -> declaration
-- On DELETE reduce production declarations -> declaration
-- On DATABASE reduce production declarations -> declaration
-- On CONSTRUCTOR reduce production declarations -> declaration
-- On CHAR reduce production declarations -> declaration
-- On ALIEN reduce production declarations -> declaration

State 523:
links_module -> MODULE module_name moduleblock . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production links_module -> MODULE module_name moduleblock
-- On VAR reduce production links_module -> MODULE module_name moduleblock
-- On UPDATE reduce production links_module -> MODULE module_name moduleblock
-- On UINTEGER reduce production links_module -> MODULE module_name moduleblock
-- On UFLOAT reduce production links_module -> MODULE module_name moduleblock
-- On TYPENAME reduce production links_module -> MODULE module_name moduleblock
-- On TRY reduce production links_module -> MODULE module_name moduleblock
-- On TRUE reduce production links_module -> MODULE module_name moduleblock
-- On TABLE reduce production links_module -> MODULE module_name moduleblock
-- On SWITCH reduce production links_module -> MODULE module_name moduleblock
-- On STRING reduce production links_module -> MODULE module_name moduleblock
-- On SPAWNWAIT reduce production links_module -> MODULE module_name moduleblock
-- On SPAWNCLIENT reduce production links_module -> MODULE module_name moduleblock
-- On SPAWNAT reduce production links_module -> MODULE module_name moduleblock
-- On SPAWNANGELAT reduce production links_module -> MODULE module_name moduleblock
-- On SPAWNANGEL reduce production links_module -> MODULE module_name moduleblock
-- On SPAWN reduce production links_module -> MODULE module_name moduleblock
-- On SIG reduce production links_module -> MODULE module_name moduleblock
-- On SHALLOWHANDLER reduce production links_module -> MODULE module_name moduleblock
-- On SHALLOWHANDLE reduce production links_module -> MODULE module_name moduleblock
-- On SELECT reduce production links_module -> MODULE module_name moduleblock
-- On RECEIVE reduce production links_module -> MODULE module_name moduleblock
-- On RBRACE reduce production links_module -> MODULE module_name moduleblock
-- On RAISE reduce production links_module -> MODULE module_name moduleblock
-- On QUERY reduce production links_module -> MODULE module_name moduleblock
-- On PREFIXOP reduce production links_module -> MODULE module_name moduleblock
-- On PREFIX reduce production links_module -> MODULE module_name moduleblock
-- On POSTFIX reduce production links_module -> MODULE module_name moduleblock
-- On PAGE reduce production links_module -> MODULE module_name moduleblock
-- On OPEN reduce production links_module -> MODULE module_name moduleblock
-- On OP reduce production links_module -> MODULE module_name moduleblock
-- On OFFER reduce production links_module -> MODULE module_name moduleblock
-- On MODULE reduce production links_module -> MODULE module_name moduleblock
-- On MINUSDOT reduce production links_module -> MODULE module_name moduleblock
-- On MINUS reduce production links_module -> MODULE module_name moduleblock
-- On LXML reduce production links_module -> MODULE module_name moduleblock
-- On LPAREN reduce production links_module -> MODULE module_name moduleblock
-- On LINFUN reduce production links_module -> MODULE module_name moduleblock
-- On LENSSELECT reduce production links_module -> MODULE module_name moduleblock
-- On LENSPUT reduce production links_module -> MODULE module_name moduleblock
-- On LENSJOIN reduce production links_module -> MODULE module_name moduleblock
-- On LENSGET reduce production links_module -> MODULE module_name moduleblock
-- On LENSDROP reduce production links_module -> MODULE module_name moduleblock
-- On LENS reduce production links_module -> MODULE module_name moduleblock
-- On LEFTTRIANGLE reduce production links_module -> MODULE module_name moduleblock
-- On LBRACKET reduce production links_module -> MODULE module_name moduleblock
-- On LBRACE reduce production links_module -> MODULE module_name moduleblock
-- On INSERT reduce production links_module -> MODULE module_name moduleblock
-- On INFIXR reduce production links_module -> MODULE module_name moduleblock
-- On INFIXL reduce production links_module -> MODULE module_name moduleblock
-- On INFIX reduce production links_module -> MODULE module_name moduleblock
-- On IF reduce production links_module -> MODULE module_name moduleblock
-- On HANDLER reduce production links_module -> MODULE module_name moduleblock
-- On HANDLE reduce production links_module -> MODULE module_name moduleblock
-- On FUN reduce production links_module -> MODULE module_name moduleblock
-- On FORMLET reduce production links_module -> MODULE module_name moduleblock
-- On FOR reduce production links_module -> MODULE module_name moduleblock
-- On FALSE reduce production links_module -> MODULE module_name moduleblock
-- On ESCAPE reduce production links_module -> MODULE module_name moduleblock
-- On END reduce production links_module -> MODULE module_name moduleblock
-- On DOOP reduce production links_module -> MODULE module_name moduleblock
-- On DELETE reduce production links_module -> MODULE module_name moduleblock
-- On DATABASE reduce production links_module -> MODULE module_name moduleblock
-- On CONSTRUCTOR reduce production links_module -> MODULE module_name moduleblock
-- On CHAR reduce production links_module -> MODULE module_name moduleblock
-- On ALIEN reduce production links_module -> MODULE module_name moduleblock

State 524:
binding -> LINFUN . var arg_lists block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
primary_expression -> LINFUN . arg_lists block [ SEMICOLON RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE DOT COLONCOLON COLON CASE BARBAR BANG AMPAMP ]
-- On VARIABLE shift to state 4
-- On LPAREN shift to state 407
-- On var shift to state 525
-- On multi_args shift to state 411
-- On arg_lists shift to state 413

State 525:
binding -> LINFUN var . arg_lists block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LPAREN shift to state 407
-- On multi_args shift to state 411
-- On arg_lists shift to state 526

State 526:
binding -> LINFUN var arg_lists . block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LBRACE shift to state 315
-- On block shift to state 527

State 527:
binding -> LINFUN var arg_lists block . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production binding -> LINFUN var arg_lists block
-- On VAR reduce production binding -> LINFUN var arg_lists block
-- On UPDATE reduce production binding -> LINFUN var arg_lists block
-- On UINTEGER reduce production binding -> LINFUN var arg_lists block
-- On UFLOAT reduce production binding -> LINFUN var arg_lists block
-- On TYPENAME reduce production binding -> LINFUN var arg_lists block
-- On TRY reduce production binding -> LINFUN var arg_lists block
-- On TRUE reduce production binding -> LINFUN var arg_lists block
-- On TABLE reduce production binding -> LINFUN var arg_lists block
-- On SWITCH reduce production binding -> LINFUN var arg_lists block
-- On STRING reduce production binding -> LINFUN var arg_lists block
-- On SPAWNWAIT reduce production binding -> LINFUN var arg_lists block
-- On SPAWNCLIENT reduce production binding -> LINFUN var arg_lists block
-- On SPAWNAT reduce production binding -> LINFUN var arg_lists block
-- On SPAWNANGELAT reduce production binding -> LINFUN var arg_lists block
-- On SPAWNANGEL reduce production binding -> LINFUN var arg_lists block
-- On SPAWN reduce production binding -> LINFUN var arg_lists block
-- On SIG reduce production binding -> LINFUN var arg_lists block
-- On SHALLOWHANDLER reduce production binding -> LINFUN var arg_lists block
-- On SHALLOWHANDLE reduce production binding -> LINFUN var arg_lists block
-- On SELECT reduce production binding -> LINFUN var arg_lists block
-- On RECEIVE reduce production binding -> LINFUN var arg_lists block
-- On RAISE reduce production binding -> LINFUN var arg_lists block
-- On QUERY reduce production binding -> LINFUN var arg_lists block
-- On PREFIXOP reduce production binding -> LINFUN var arg_lists block
-- On PAGE reduce production binding -> LINFUN var arg_lists block
-- On OPEN reduce production binding -> LINFUN var arg_lists block
-- On OFFER reduce production binding -> LINFUN var arg_lists block
-- On MODULE reduce production binding -> LINFUN var arg_lists block
-- On MINUSDOT reduce production binding -> LINFUN var arg_lists block
-- On MINUS reduce production binding -> LINFUN var arg_lists block
-- On LXML reduce production binding -> LINFUN var arg_lists block
-- On LPAREN reduce production binding -> LINFUN var arg_lists block
-- On LINFUN reduce production binding -> LINFUN var arg_lists block
-- On LENSSELECT reduce production binding -> LINFUN var arg_lists block
-- On LENSPUT reduce production binding -> LINFUN var arg_lists block
-- On LENSJOIN reduce production binding -> LINFUN var arg_lists block
-- On LENSGET reduce production binding -> LINFUN var arg_lists block
-- On LENSDROP reduce production binding -> LINFUN var arg_lists block
-- On LENS reduce production binding -> LINFUN var arg_lists block
-- On LEFTTRIANGLE reduce production binding -> LINFUN var arg_lists block
-- On LBRACKET reduce production binding -> LINFUN var arg_lists block
-- On LBRACE reduce production binding -> LINFUN var arg_lists block
-- On INSERT reduce production binding -> LINFUN var arg_lists block
-- On IF reduce production binding -> LINFUN var arg_lists block
-- On HANDLER reduce production binding -> LINFUN var arg_lists block
-- On HANDLE reduce production binding -> LINFUN var arg_lists block
-- On FUN reduce production binding -> LINFUN var arg_lists block
-- On FORMLET reduce production binding -> LINFUN var arg_lists block
-- On FOR reduce production binding -> LINFUN var arg_lists block
-- On FALSE reduce production binding -> LINFUN var arg_lists block
-- On ESCAPE reduce production binding -> LINFUN var arg_lists block
-- On DOOP reduce production binding -> LINFUN var arg_lists block
-- On DELETE reduce production binding -> LINFUN var arg_lists block
-- On DATABASE reduce production binding -> LINFUN var arg_lists block
-- On CONSTRUCTOR reduce production binding -> LINFUN var arg_lists block
-- On CHAR reduce production binding -> LINFUN var arg_lists block
-- On ALIEN reduce production binding -> LINFUN var arg_lists block

State 528:
lens_expression -> LENSSELECT . FROM exp BY exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On FROM shift to state 529

State 529:
lens_expression -> LENSSELECT FROM . exp BY exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 869
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 530:
lens_expression -> LENSPUT . exp WITH exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 866
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 531:
lens_expression -> LENSJOIN . exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
lens_expression -> LENSJOIN . exp WITH exp ON exp DELETE_LEFT [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 854
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 532:
lens_expression -> LENSGET . exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 853
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 533:
lens_expression -> LENSDROP . VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 534

State 534:
lens_expression -> LENSDROP VARIABLE . DETERMINED BY VARIABLE DEFAULT exp FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On DETERMINED shift to state 535

State 535:
lens_expression -> LENSDROP VARIABLE DETERMINED . BY VARIABLE DEFAULT exp FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On BY shift to state 536

State 536:
lens_expression -> LENSDROP VARIABLE DETERMINED BY . VARIABLE DEFAULT exp FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 537

State 537:
lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE . DEFAULT exp FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On DEFAULT shift to state 538

State 538:
lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT . exp FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 850
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 539:
lens_expression -> LENS . exp DEFAULT [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
lens_expression -> LENS . exp TABLEKEYS exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
lens_expression -> LENS . exp WITH LBRACE fn_deps RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 834
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 540:
primary_expression -> LBRACKET . RBRACKET [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
primary_expression -> LBRACKET . exps RBRACKET [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
primary_expression -> LBRACKET . exp DOTDOT exp RBRACKET [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RBRACKET shift to state 541
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exps shift to state 828
-- On exp shift to state 830
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 541:
primary_expression -> LBRACKET RBRACKET . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production primary_expression -> LBRACKET RBRACKET
-- On VBAR reduce production primary_expression -> LBRACKET RBRACKET
-- On VALUES reduce production primary_expression -> LBRACKET RBRACKET
-- On TABLEKEYS reduce production primary_expression -> LBRACKET RBRACKET
-- On SEMICOLON reduce production primary_expression -> LBRACKET RBRACKET
-- On RPAREN reduce production primary_expression -> LBRACKET RBRACKET
-- On RETURNING reduce production primary_expression -> LBRACKET RBRACKET
-- On RBRACKET reduce production primary_expression -> LBRACKET RBRACKET
-- On RBRACE reduce production primary_expression -> LBRACKET RBRACKET
-- On RARROW reduce production primary_expression -> LBRACKET RBRACKET
-- On POSTFIXOP reduce production primary_expression -> LBRACKET RBRACKET
-- On OTHERWISE reduce production primary_expression -> LBRACKET RBRACKET
-- On ON reduce production primary_expression -> LBRACKET RBRACKET
-- On MINUSDOT reduce production primary_expression -> LBRACKET RBRACKET
-- On MINUS reduce production primary_expression -> LBRACKET RBRACKET
-- On LPAREN reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR9 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR8 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR7 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR6 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR5 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR4 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR3 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR2 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR1 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR0 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL9 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL8 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL7 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL6 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL5 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL4 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL3 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL2 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL1 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL0 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX9 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX8 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX7 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX6 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX5 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX4 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX3 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX2 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX1 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX0 reduce production primary_expression -> LBRACKET RBRACKET
-- On FROM reduce production primary_expression -> LBRACKET RBRACKET
-- On FATRARROW reduce production primary_expression -> LBRACKET RBRACKET
-- On EQUALSTILDE reduce production primary_expression -> LBRACKET RBRACKET
-- On END reduce production primary_expression -> LBRACKET RBRACKET
-- On ELSE reduce production primary_expression -> LBRACKET RBRACKET
-- On DOTDOT reduce production primary_expression -> LBRACKET RBRACKET
-- On DOT reduce production primary_expression -> LBRACKET RBRACKET
-- On DELETE_LEFT reduce production primary_expression -> LBRACKET RBRACKET
-- On DELETE reduce production primary_expression -> LBRACKET RBRACKET
-- On DEFAULT reduce production primary_expression -> LBRACKET RBRACKET
-- On COMMA reduce production primary_expression -> LBRACKET RBRACKET
-- On COLONCOLON reduce production primary_expression -> LBRACKET RBRACKET
-- On COLON reduce production primary_expression -> LBRACKET RBRACKET
-- On CASE reduce production primary_expression -> LBRACKET RBRACKET
-- On BY reduce production primary_expression -> LBRACKET RBRACKET
-- On BARRBRACE reduce production primary_expression -> LBRACKET RBRACKET
-- On BARBAR reduce production primary_expression -> LBRACKET RBRACKET
-- On BANG reduce production primary_expression -> LBRACKET RBRACKET
-- On AS reduce production primary_expression -> LBRACKET RBRACKET
-- On AMPAMP reduce production primary_expression -> LBRACKET RBRACKET

State 542:
database_expression -> INSERT . exp VALUES LPAREN RPAREN exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT . exp VALUES LPAREN record_labels RPAREN exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT . exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT . exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT . exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT . exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT . exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 795
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 543:
conditional_expression -> IF . LPAREN exp RPAREN exp ELSE exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LPAREN shift to state 544

State 544:
conditional_expression -> IF LPAREN . exp RPAREN exp ELSE exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 790
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 545:
case_expression -> HANDLE . LPAREN exp RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
case_expression -> HANDLE . LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LPAREN shift to state 546

State 546:
case_expression -> HANDLE LPAREN . exp RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
case_expression -> HANDLE LPAREN . exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 771
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 547:
primary_expression -> FUN . arg_lists block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LPAREN shift to state 407
-- On multi_args shift to state 411
-- On arg_lists shift to state 548

State 548:
primary_expression -> FUN arg_lists . block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LBRACE shift to state 315
-- On block shift to state 549

State 549:
primary_expression -> FUN arg_lists block . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production primary_expression -> FUN arg_lists block
-- On VBAR reduce production primary_expression -> FUN arg_lists block
-- On VALUES reduce production primary_expression -> FUN arg_lists block
-- On TABLEKEYS reduce production primary_expression -> FUN arg_lists block
-- On SEMICOLON reduce production primary_expression -> FUN arg_lists block
-- On RPAREN reduce production primary_expression -> FUN arg_lists block
-- On RETURNING reduce production primary_expression -> FUN arg_lists block
-- On RBRACKET reduce production primary_expression -> FUN arg_lists block
-- On RBRACE reduce production primary_expression -> FUN arg_lists block
-- On RARROW reduce production primary_expression -> FUN arg_lists block
-- On POSTFIXOP reduce production primary_expression -> FUN arg_lists block
-- On OTHERWISE reduce production primary_expression -> FUN arg_lists block
-- On ON reduce production primary_expression -> FUN arg_lists block
-- On MINUSDOT reduce production primary_expression -> FUN arg_lists block
-- On MINUS reduce production primary_expression -> FUN arg_lists block
-- On LPAREN reduce production primary_expression -> FUN arg_lists block
-- On INFIXR9 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR8 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR7 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR6 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR5 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR4 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR3 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR2 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR1 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR0 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL9 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL8 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL7 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL6 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL5 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL4 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL3 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL2 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL1 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL0 reduce production primary_expression -> FUN arg_lists block
-- On INFIX9 reduce production primary_expression -> FUN arg_lists block
-- On INFIX8 reduce production primary_expression -> FUN arg_lists block
-- On INFIX7 reduce production primary_expression -> FUN arg_lists block
-- On INFIX6 reduce production primary_expression -> FUN arg_lists block
-- On INFIX5 reduce production primary_expression -> FUN arg_lists block
-- On INFIX4 reduce production primary_expression -> FUN arg_lists block
-- On INFIX3 reduce production primary_expression -> FUN arg_lists block
-- On INFIX2 reduce production primary_expression -> FUN arg_lists block
-- On INFIX1 reduce production primary_expression -> FUN arg_lists block
-- On INFIX0 reduce production primary_expression -> FUN arg_lists block
-- On FROM reduce production primary_expression -> FUN arg_lists block
-- On FATRARROW reduce production primary_expression -> FUN arg_lists block
-- On EQUALSTILDE reduce production primary_expression -> FUN arg_lists block
-- On END reduce production primary_expression -> FUN arg_lists block
-- On ELSE reduce production primary_expression -> FUN arg_lists block
-- On DOTDOT reduce production primary_expression -> FUN arg_lists block
-- On DOT reduce production primary_expression -> FUN arg_lists block
-- On DELETE_LEFT reduce production primary_expression -> FUN arg_lists block
-- On DELETE reduce production primary_expression -> FUN arg_lists block
-- On DEFAULT reduce production primary_expression -> FUN arg_lists block
-- On COMMA reduce production primary_expression -> FUN arg_lists block
-- On COLONCOLON reduce production primary_expression -> FUN arg_lists block
-- On COLON reduce production primary_expression -> FUN arg_lists block
-- On CASE reduce production primary_expression -> FUN arg_lists block
-- On BY reduce production primary_expression -> FUN arg_lists block
-- On BARRBRACE reduce production primary_expression -> FUN arg_lists block
-- On BARBAR reduce production primary_expression -> FUN arg_lists block
-- On BANG reduce production primary_expression -> FUN arg_lists block
-- On AS reduce production primary_expression -> FUN arg_lists block
-- On AMPAMP reduce production primary_expression -> FUN arg_lists block

State 550:
formlet_expression -> FORMLET . xml YIELDS exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LXML shift to state 392
-- On xml_tree shift to state 398
-- On xml shift to state 551

State 551:
formlet_expression -> FORMLET xml . YIELDS exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On YIELDS shift to state 552

State 552:
formlet_expression -> FORMLET xml YIELDS . exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 770
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 553:
iteration_expression -> FOR . LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LPAREN shift to state 554

State 554:
iteration_expression -> FOR LPAREN . perhaps_generators RPAREN perhaps_where perhaps_orderby exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On table_generator shift to state 555
-- On primary_pattern shift to state 275
-- On perhaps_generators shift to state 556
-- On pattern shift to state 762
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On list_generator shift to state 765
-- On generators shift to state 766
-- On generator shift to state 767
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287
-- On RPAREN reduce production perhaps_generators ->

State 555:
generator -> table_generator . [ RPAREN COMMA ]
-- On RPAREN reduce production generator -> table_generator
-- On COMMA reduce production generator -> table_generator

State 556:
iteration_expression -> FOR LPAREN perhaps_generators . RPAREN perhaps_where perhaps_orderby exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RPAREN shift to state 557

State 557:
iteration_expression -> FOR LPAREN perhaps_generators RPAREN . perhaps_where perhaps_orderby exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WHERE shift to state 308
-- On perhaps_where shift to state 558
-- On VARIABLE reduce production perhaps_where ->
-- On UPDATE reduce production perhaps_where ->
-- On UINTEGER reduce production perhaps_where ->
-- On UFLOAT reduce production perhaps_where ->
-- On TRY reduce production perhaps_where ->
-- On TRUE reduce production perhaps_where ->
-- On TABLE reduce production perhaps_where ->
-- On SWITCH reduce production perhaps_where ->
-- On STRING reduce production perhaps_where ->
-- On SPAWNWAIT reduce production perhaps_where ->
-- On SPAWNCLIENT reduce production perhaps_where ->
-- On SPAWNAT reduce production perhaps_where ->
-- On SPAWNANGELAT reduce production perhaps_where ->
-- On SPAWNANGEL reduce production perhaps_where ->
-- On SPAWN reduce production perhaps_where ->
-- On SHALLOWHANDLER reduce production perhaps_where ->
-- On SHALLOWHANDLE reduce production perhaps_where ->
-- On SELECT reduce production perhaps_where ->
-- On RECEIVE reduce production perhaps_where ->
-- On RAISE reduce production perhaps_where ->
-- On QUERY reduce production perhaps_where ->
-- On PREFIXOP reduce production perhaps_where ->
-- On PAGE reduce production perhaps_where ->
-- On ORDERBY reduce production perhaps_where ->
-- On OFFER reduce production perhaps_where ->
-- On MINUSDOT reduce production perhaps_where ->
-- On MINUS reduce production perhaps_where ->
-- On LXML reduce production perhaps_where ->
-- On LPAREN reduce production perhaps_where ->
-- On LINFUN reduce production perhaps_where ->
-- On LENSSELECT reduce production perhaps_where ->
-- On LENSPUT reduce production perhaps_where ->
-- On LENSJOIN reduce production perhaps_where ->
-- On LENSGET reduce production perhaps_where ->
-- On LENSDROP reduce production perhaps_where ->
-- On LENS reduce production perhaps_where ->
-- On LEFTTRIANGLE reduce production perhaps_where ->
-- On LBRACKET reduce production perhaps_where ->
-- On LBRACE reduce production perhaps_where ->
-- On INSERT reduce production perhaps_where ->
-- On IF reduce production perhaps_where ->
-- On HANDLER reduce production perhaps_where ->
-- On HANDLE reduce production perhaps_where ->
-- On FUN reduce production perhaps_where ->
-- On FORMLET reduce production perhaps_where ->
-- On FOR reduce production perhaps_where ->
-- On FALSE reduce production perhaps_where ->
-- On ESCAPE reduce production perhaps_where ->
-- On DOOP reduce production perhaps_where ->
-- On DELETE reduce production perhaps_where ->
-- On DATABASE reduce production perhaps_where ->
-- On CONSTRUCTOR reduce production perhaps_where ->
-- On CHAR reduce production perhaps_where ->

State 558:
iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where . perhaps_orderby exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On ORDERBY shift to state 559
-- On perhaps_orderby shift to state 760
-- On VARIABLE reduce production perhaps_orderby ->
-- On UPDATE reduce production perhaps_orderby ->
-- On UINTEGER reduce production perhaps_orderby ->
-- On UFLOAT reduce production perhaps_orderby ->
-- On TRY reduce production perhaps_orderby ->
-- On TRUE reduce production perhaps_orderby ->
-- On TABLE reduce production perhaps_orderby ->
-- On SWITCH reduce production perhaps_orderby ->
-- On STRING reduce production perhaps_orderby ->
-- On SPAWNWAIT reduce production perhaps_orderby ->
-- On SPAWNCLIENT reduce production perhaps_orderby ->
-- On SPAWNAT reduce production perhaps_orderby ->
-- On SPAWNANGELAT reduce production perhaps_orderby ->
-- On SPAWNANGEL reduce production perhaps_orderby ->
-- On SPAWN reduce production perhaps_orderby ->
-- On SHALLOWHANDLER reduce production perhaps_orderby ->
-- On SHALLOWHANDLE reduce production perhaps_orderby ->
-- On SELECT reduce production perhaps_orderby ->
-- On RECEIVE reduce production perhaps_orderby ->
-- On RAISE reduce production perhaps_orderby ->
-- On QUERY reduce production perhaps_orderby ->
-- On PREFIXOP reduce production perhaps_orderby ->
-- On PAGE reduce production perhaps_orderby ->
-- On OFFER reduce production perhaps_orderby ->
-- On MINUSDOT reduce production perhaps_orderby ->
-- On MINUS reduce production perhaps_orderby ->
-- On LXML reduce production perhaps_orderby ->
-- On LPAREN reduce production perhaps_orderby ->
-- On LINFUN reduce production perhaps_orderby ->
-- On LENSSELECT reduce production perhaps_orderby ->
-- On LENSPUT reduce production perhaps_orderby ->
-- On LENSJOIN reduce production perhaps_orderby ->
-- On LENSGET reduce production perhaps_orderby ->
-- On LENSDROP reduce production perhaps_orderby ->
-- On LENS reduce production perhaps_orderby ->
-- On LEFTTRIANGLE reduce production perhaps_orderby ->
-- On LBRACKET reduce production perhaps_orderby ->
-- On LBRACE reduce production perhaps_orderby ->
-- On INSERT reduce production perhaps_orderby ->
-- On IF reduce production perhaps_orderby ->
-- On HANDLER reduce production perhaps_orderby ->
-- On HANDLE reduce production perhaps_orderby ->
-- On FUN reduce production perhaps_orderby ->
-- On FORMLET reduce production perhaps_orderby ->
-- On FOR reduce production perhaps_orderby ->
-- On FALSE reduce production perhaps_orderby ->
-- On ESCAPE reduce production perhaps_orderby ->
-- On DOOP reduce production perhaps_orderby ->
-- On DELETE reduce production perhaps_orderby ->
-- On DATABASE reduce production perhaps_orderby ->
-- On CONSTRUCTOR reduce production perhaps_orderby ->
-- On CHAR reduce production perhaps_orderby ->

State 559:
perhaps_orderby -> ORDERBY . LPAREN exps RPAREN [ VARIABLE UPDATE UINTEGER UFLOAT TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ]
-- On LPAREN shift to state 560

State 560:
perhaps_orderby -> ORDERBY LPAREN . exps RPAREN [ VARIABLE UPDATE UINTEGER UFLOAT TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exps shift to state 758
-- On exp shift to state 755
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 561:
escape_expression -> ESCAPE . var IN postfix_expression [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 4
-- On var shift to state 562

State 562:
escape_expression -> ESCAPE var . IN postfix_expression [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On IN shift to state 563

State 563:
escape_expression -> ESCAPE var IN . postfix_expression [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 564
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 576
-- On parenthesized_thing shift to state 590
-- On handler_depth shift to state 606
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 564:
qualified_name -> CONSTRUCTOR . DOT qualified_name_inner [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RECEIVE RBRACKET RBRACE POSTFIXOP OTHERWISE ON LPAREN FROM FALSE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA CHAR CASE BY BARRBRACE AS ]
-- On DOT shift to state 565

State 565:
qualified_name -> CONSTRUCTOR DOT . qualified_name_inner [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 566
-- On CONSTRUCTOR shift to state 567
-- On qualified_name_inner shift to state 570

State 566:
qualified_name_inner -> VARIABLE . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production qualified_name_inner -> VARIABLE
-- On VBAR reduce production qualified_name_inner -> VARIABLE
-- On VARIABLE reduce production qualified_name_inner -> VARIABLE
-- On VALUES reduce production qualified_name_inner -> VARIABLE
-- On UINTEGER reduce production qualified_name_inner -> VARIABLE
-- On UFLOAT reduce production qualified_name_inner -> VARIABLE
-- On TRUE reduce production qualified_name_inner -> VARIABLE
-- On TABLEKEYS reduce production qualified_name_inner -> VARIABLE
-- On STRING reduce production qualified_name_inner -> VARIABLE
-- On SEMICOLON reduce production qualified_name_inner -> VARIABLE
-- On RPAREN reduce production qualified_name_inner -> VARIABLE
-- On RETURNING reduce production qualified_name_inner -> VARIABLE
-- On RECEIVE reduce production qualified_name_inner -> VARIABLE
-- On RBRACKET reduce production qualified_name_inner -> VARIABLE
-- On RBRACE reduce production qualified_name_inner -> VARIABLE
-- On RARROW reduce production qualified_name_inner -> VARIABLE
-- On POSTFIXOP reduce production qualified_name_inner -> VARIABLE
-- On OTHERWISE reduce production qualified_name_inner -> VARIABLE
-- On ON reduce production qualified_name_inner -> VARIABLE
-- On MINUSDOT reduce production qualified_name_inner -> VARIABLE
-- On MINUS reduce production qualified_name_inner -> VARIABLE
-- On LPAREN reduce production qualified_name_inner -> VARIABLE
-- On INFIXR9 reduce production qualified_name_inner -> VARIABLE
-- On INFIXR8 reduce production qualified_name_inner -> VARIABLE
-- On INFIXR7 reduce production qualified_name_inner -> VARIABLE
-- On INFIXR6 reduce production qualified_name_inner -> VARIABLE
-- On INFIXR5 reduce production qualified_name_inner -> VARIABLE
-- On INFIXR4 reduce production qualified_name_inner -> VARIABLE
-- On INFIXR3 reduce production qualified_name_inner -> VARIABLE
-- On INFIXR2 reduce production qualified_name_inner -> VARIABLE
-- On INFIXR1 reduce production qualified_name_inner -> VARIABLE
-- On INFIXR0 reduce production qualified_name_inner -> VARIABLE
-- On INFIXL9 reduce production qualified_name_inner -> VARIABLE
-- On INFIXL8 reduce production qualified_name_inner -> VARIABLE
-- On INFIXL7 reduce production qualified_name_inner -> VARIABLE
-- On INFIXL6 reduce production qualified_name_inner -> VARIABLE
-- On INFIXL5 reduce production qualified_name_inner -> VARIABLE
-- On INFIXL4 reduce production qualified_name_inner -> VARIABLE
-- On INFIXL3 reduce production qualified_name_inner -> VARIABLE
-- On INFIXL2 reduce production qualified_name_inner -> VARIABLE
-- On INFIXL1 reduce production qualified_name_inner -> VARIABLE
-- On INFIXL0 reduce production qualified_name_inner -> VARIABLE
-- On INFIX9 reduce production qualified_name_inner -> VARIABLE
-- On INFIX8 reduce production qualified_name_inner -> VARIABLE
-- On INFIX7 reduce production qualified_name_inner -> VARIABLE
-- On INFIX6 reduce production qualified_name_inner -> VARIABLE
-- On INFIX5 reduce production qualified_name_inner -> VARIABLE
-- On INFIX4 reduce production qualified_name_inner -> VARIABLE
-- On INFIX3 reduce production qualified_name_inner -> VARIABLE
-- On INFIX2 reduce production qualified_name_inner -> VARIABLE
-- On INFIX1 reduce production qualified_name_inner -> VARIABLE
-- On INFIX0 reduce production qualified_name_inner -> VARIABLE
-- On FROM reduce production qualified_name_inner -> VARIABLE
-- On FATRARROW reduce production qualified_name_inner -> VARIABLE
-- On FALSE reduce production qualified_name_inner -> VARIABLE
-- On EQUALSTILDE reduce production qualified_name_inner -> VARIABLE
-- On END reduce production qualified_name_inner -> VARIABLE
-- On ELSE reduce production qualified_name_inner -> VARIABLE
-- On DOTDOT reduce production qualified_name_inner -> VARIABLE
-- On DOT reduce production qualified_name_inner -> VARIABLE
-- On DELETE_LEFT reduce production qualified_name_inner -> VARIABLE
-- On DELETE reduce production qualified_name_inner -> VARIABLE
-- On DEFAULT reduce production qualified_name_inner -> VARIABLE
-- On CONSTRUCTOR reduce production qualified_name_inner -> VARIABLE
-- On COMMA reduce production qualified_name_inner -> VARIABLE
-- On COLONCOLON reduce production qualified_name_inner -> VARIABLE
-- On COLON reduce production qualified_name_inner -> VARIABLE
-- On CHAR reduce production qualified_name_inner -> VARIABLE
-- On CASE reduce production qualified_name_inner -> VARIABLE
-- On BY reduce production qualified_name_inner -> VARIABLE
-- On BARRBRACE reduce production qualified_name_inner -> VARIABLE
-- On BARBAR reduce production qualified_name_inner -> VARIABLE
-- On BANG reduce production qualified_name_inner -> VARIABLE
-- On AS reduce production qualified_name_inner -> VARIABLE
-- On AMPAMP reduce production qualified_name_inner -> VARIABLE

State 567:
qualified_name_inner -> CONSTRUCTOR . DOT qualified_name_inner [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On DOT shift to state 568

State 568:
qualified_name_inner -> CONSTRUCTOR DOT . qualified_name_inner [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 566
-- On CONSTRUCTOR shift to state 567
-- On qualified_name_inner shift to state 569

State 569:
qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On VBAR reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On VARIABLE reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On VALUES reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On UINTEGER reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On UFLOAT reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On TRUE reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On TABLEKEYS reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On STRING reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On SEMICOLON reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On RPAREN reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On RETURNING reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On RECEIVE reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On RBRACKET reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On RBRACE reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On RARROW reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On POSTFIXOP reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On OTHERWISE reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On ON reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On MINUSDOT reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On MINUS reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On LPAREN reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR9 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR8 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR7 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR6 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR5 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR4 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR3 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR2 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR1 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR0 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL9 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL8 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL7 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL6 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL5 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL4 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL3 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL2 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL1 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL0 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX9 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX8 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX7 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX6 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX5 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX4 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX3 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX2 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX1 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX0 reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On FROM reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On FATRARROW reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On FALSE reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On EQUALSTILDE reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On END reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On ELSE reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On DOTDOT reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On DOT reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On DELETE_LEFT reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On DELETE reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On DEFAULT reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On CONSTRUCTOR reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On COMMA reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On COLONCOLON reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On COLON reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On CHAR reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On CASE reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On BY reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On BARRBRACE reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On BARBAR reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On BANG reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On AS reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner
-- On AMPAMP reduce production qualified_name_inner -> CONSTRUCTOR DOT qualified_name_inner

State 570:
qualified_name -> CONSTRUCTOR DOT qualified_name_inner . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On VBAR reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On VARIABLE reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On VALUES reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On UINTEGER reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On UFLOAT reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On TRUE reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On TABLEKEYS reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On STRING reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On SEMICOLON reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On RPAREN reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On RETURNING reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On RECEIVE reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On RBRACKET reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On RBRACE reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On RARROW reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On POSTFIXOP reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On OTHERWISE reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On ON reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On MINUSDOT reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On MINUS reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On LPAREN reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR9 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR8 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR7 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR6 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR5 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR4 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR3 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR2 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR1 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXR0 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL9 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL8 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL7 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL6 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL5 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL4 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL3 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL2 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL1 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIXL0 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX9 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX8 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX7 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX6 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX5 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX4 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX3 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX2 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX1 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On INFIX0 reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On FROM reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On FATRARROW reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On FALSE reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On EQUALSTILDE reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On END reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On ELSE reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On DOTDOT reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On DOT reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On DELETE_LEFT reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On DELETE reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On DEFAULT reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On CONSTRUCTOR reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On COMMA reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On COLONCOLON reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On COLON reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On CHAR reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On CASE reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On BY reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On BARRBRACE reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On BARBAR reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On BANG reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On AS reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner
-- On AMPAMP reduce production qualified_name -> CONSTRUCTOR DOT qualified_name_inner

State 571:
primary_expression -> xml . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production primary_expression -> xml
-- On VBAR reduce production primary_expression -> xml
-- On VALUES reduce production primary_expression -> xml
-- On TABLEKEYS reduce production primary_expression -> xml
-- On SEMICOLON reduce production primary_expression -> xml
-- On RPAREN reduce production primary_expression -> xml
-- On RETURNING reduce production primary_expression -> xml
-- On RBRACKET reduce production primary_expression -> xml
-- On RBRACE reduce production primary_expression -> xml
-- On RARROW reduce production primary_expression -> xml
-- On POSTFIXOP reduce production primary_expression -> xml
-- On OTHERWISE reduce production primary_expression -> xml
-- On ON reduce production primary_expression -> xml
-- On MINUSDOT reduce production primary_expression -> xml
-- On MINUS reduce production primary_expression -> xml
-- On LPAREN reduce production primary_expression -> xml
-- On INFIXR9 reduce production primary_expression -> xml
-- On INFIXR8 reduce production primary_expression -> xml
-- On INFIXR7 reduce production primary_expression -> xml
-- On INFIXR6 reduce production primary_expression -> xml
-- On INFIXR5 reduce production primary_expression -> xml
-- On INFIXR4 reduce production primary_expression -> xml
-- On INFIXR3 reduce production primary_expression -> xml
-- On INFIXR2 reduce production primary_expression -> xml
-- On INFIXR1 reduce production primary_expression -> xml
-- On INFIXR0 reduce production primary_expression -> xml
-- On INFIXL9 reduce production primary_expression -> xml
-- On INFIXL8 reduce production primary_expression -> xml
-- On INFIXL7 reduce production primary_expression -> xml
-- On INFIXL6 reduce production primary_expression -> xml
-- On INFIXL5 reduce production primary_expression -> xml
-- On INFIXL4 reduce production primary_expression -> xml
-- On INFIXL3 reduce production primary_expression -> xml
-- On INFIXL2 reduce production primary_expression -> xml
-- On INFIXL1 reduce production primary_expression -> xml
-- On INFIXL0 reduce production primary_expression -> xml
-- On INFIX9 reduce production primary_expression -> xml
-- On INFIX8 reduce production primary_expression -> xml
-- On INFIX7 reduce production primary_expression -> xml
-- On INFIX6 reduce production primary_expression -> xml
-- On INFIX5 reduce production primary_expression -> xml
-- On INFIX4 reduce production primary_expression -> xml
-- On INFIX3 reduce production primary_expression -> xml
-- On INFIX2 reduce production primary_expression -> xml
-- On INFIX1 reduce production primary_expression -> xml
-- On INFIX0 reduce production primary_expression -> xml
-- On FROM reduce production primary_expression -> xml
-- On FATRARROW reduce production primary_expression -> xml
-- On EQUALSTILDE reduce production primary_expression -> xml
-- On END reduce production primary_expression -> xml
-- On ELSE reduce production primary_expression -> xml
-- On DOTDOT reduce production primary_expression -> xml
-- On DOT reduce production primary_expression -> xml
-- On DELETE_LEFT reduce production primary_expression -> xml
-- On DELETE reduce production primary_expression -> xml
-- On DEFAULT reduce production primary_expression -> xml
-- On COMMA reduce production primary_expression -> xml
-- On COLONCOLON reduce production primary_expression -> xml
-- On COLON reduce production primary_expression -> xml
-- On CASE reduce production primary_expression -> xml
-- On BY reduce production primary_expression -> xml
-- On BARRBRACE reduce production primary_expression -> xml
-- On BARBAR reduce production primary_expression -> xml
-- On BANG reduce production primary_expression -> xml
-- On AS reduce production primary_expression -> xml
-- On AMPAMP reduce production primary_expression -> xml

State 572:
postfix_expression -> spawn_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production postfix_expression -> spawn_expression
-- On VBAR reduce production postfix_expression -> spawn_expression
-- On VALUES reduce production postfix_expression -> spawn_expression
-- On TABLEKEYS reduce production postfix_expression -> spawn_expression
-- On SEMICOLON reduce production postfix_expression -> spawn_expression
-- On RPAREN reduce production postfix_expression -> spawn_expression
-- On RETURNING reduce production postfix_expression -> spawn_expression
-- On RBRACKET reduce production postfix_expression -> spawn_expression
-- On RBRACE reduce production postfix_expression -> spawn_expression
-- On RARROW reduce production postfix_expression -> spawn_expression
-- On OTHERWISE reduce production postfix_expression -> spawn_expression
-- On ON reduce production postfix_expression -> spawn_expression
-- On MINUSDOT reduce production postfix_expression -> spawn_expression
-- On MINUS reduce production postfix_expression -> spawn_expression
-- On LPAREN reduce production postfix_expression -> spawn_expression
-- On INFIXR9 reduce production postfix_expression -> spawn_expression
-- On INFIXR8 reduce production postfix_expression -> spawn_expression
-- On INFIXR7 reduce production postfix_expression -> spawn_expression
-- On INFIXR6 reduce production postfix_expression -> spawn_expression
-- On INFIXR5 reduce production postfix_expression -> spawn_expression
-- On INFIXR4 reduce production postfix_expression -> spawn_expression
-- On INFIXR3 reduce production postfix_expression -> spawn_expression
-- On INFIXR2 reduce production postfix_expression -> spawn_expression
-- On INFIXR1 reduce production postfix_expression -> spawn_expression
-- On INFIXR0 reduce production postfix_expression -> spawn_expression
-- On INFIXL9 reduce production postfix_expression -> spawn_expression
-- On INFIXL8 reduce production postfix_expression -> spawn_expression
-- On INFIXL7 reduce production postfix_expression -> spawn_expression
-- On INFIXL6 reduce production postfix_expression -> spawn_expression
-- On INFIXL5 reduce production postfix_expression -> spawn_expression
-- On INFIXL4 reduce production postfix_expression -> spawn_expression
-- On INFIXL3 reduce production postfix_expression -> spawn_expression
-- On INFIXL2 reduce production postfix_expression -> spawn_expression
-- On INFIXL1 reduce production postfix_expression -> spawn_expression
-- On INFIXL0 reduce production postfix_expression -> spawn_expression
-- On INFIX9 reduce production postfix_expression -> spawn_expression
-- On INFIX8 reduce production postfix_expression -> spawn_expression
-- On INFIX7 reduce production postfix_expression -> spawn_expression
-- On INFIX6 reduce production postfix_expression -> spawn_expression
-- On INFIX5 reduce production postfix_expression -> spawn_expression
-- On INFIX4 reduce production postfix_expression -> spawn_expression
-- On INFIX3 reduce production postfix_expression -> spawn_expression
-- On INFIX2 reduce production postfix_expression -> spawn_expression
-- On INFIX1 reduce production postfix_expression -> spawn_expression
-- On INFIX0 reduce production postfix_expression -> spawn_expression
-- On FROM reduce production postfix_expression -> spawn_expression
-- On FATRARROW reduce production postfix_expression -> spawn_expression
-- On EQUALSTILDE reduce production postfix_expression -> spawn_expression
-- On END reduce production postfix_expression -> spawn_expression
-- On ELSE reduce production postfix_expression -> spawn_expression
-- On DOTDOT reduce production postfix_expression -> spawn_expression
-- On DOT reduce production postfix_expression -> spawn_expression
-- On DELETE_LEFT reduce production postfix_expression -> spawn_expression
-- On DELETE reduce production postfix_expression -> spawn_expression
-- On DEFAULT reduce production postfix_expression -> spawn_expression
-- On COMMA reduce production postfix_expression -> spawn_expression
-- On COLONCOLON reduce production postfix_expression -> spawn_expression
-- On COLON reduce production postfix_expression -> spawn_expression
-- On CASE reduce production postfix_expression -> spawn_expression
-- On BY reduce production postfix_expression -> spawn_expression
-- On BARRBRACE reduce production postfix_expression -> spawn_expression
-- On BARBAR reduce production postfix_expression -> spawn_expression
-- On BANG reduce production postfix_expression -> spawn_expression
-- On AS reduce production postfix_expression -> spawn_expression
-- On AMPAMP reduce production postfix_expression -> spawn_expression

State 573:
atomic_expression -> qualified_name . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production atomic_expression -> qualified_name
-- On VBAR reduce production atomic_expression -> qualified_name
-- On VARIABLE reduce production atomic_expression -> qualified_name
-- On VALUES reduce production atomic_expression -> qualified_name
-- On UINTEGER reduce production atomic_expression -> qualified_name
-- On UFLOAT reduce production atomic_expression -> qualified_name
-- On TRUE reduce production atomic_expression -> qualified_name
-- On TABLEKEYS reduce production atomic_expression -> qualified_name
-- On STRING reduce production atomic_expression -> qualified_name
-- On SEMICOLON reduce production atomic_expression -> qualified_name
-- On RPAREN reduce production atomic_expression -> qualified_name
-- On RETURNING reduce production atomic_expression -> qualified_name
-- On RECEIVE reduce production atomic_expression -> qualified_name
-- On RBRACKET reduce production atomic_expression -> qualified_name
-- On RBRACE reduce production atomic_expression -> qualified_name
-- On RARROW reduce production atomic_expression -> qualified_name
-- On POSTFIXOP reduce production atomic_expression -> qualified_name
-- On OTHERWISE reduce production atomic_expression -> qualified_name
-- On ON reduce production atomic_expression -> qualified_name
-- On MINUSDOT reduce production atomic_expression -> qualified_name
-- On MINUS reduce production atomic_expression -> qualified_name
-- On LPAREN reduce production atomic_expression -> qualified_name
-- On INFIXR9 reduce production atomic_expression -> qualified_name
-- On INFIXR8 reduce production atomic_expression -> qualified_name
-- On INFIXR7 reduce production atomic_expression -> qualified_name
-- On INFIXR6 reduce production atomic_expression -> qualified_name
-- On INFIXR5 reduce production atomic_expression -> qualified_name
-- On INFIXR4 reduce production atomic_expression -> qualified_name
-- On INFIXR3 reduce production atomic_expression -> qualified_name
-- On INFIXR2 reduce production atomic_expression -> qualified_name
-- On INFIXR1 reduce production atomic_expression -> qualified_name
-- On INFIXR0 reduce production atomic_expression -> qualified_name
-- On INFIXL9 reduce production atomic_expression -> qualified_name
-- On INFIXL8 reduce production atomic_expression -> qualified_name
-- On INFIXL7 reduce production atomic_expression -> qualified_name
-- On INFIXL6 reduce production atomic_expression -> qualified_name
-- On INFIXL5 reduce production atomic_expression -> qualified_name
-- On INFIXL4 reduce production atomic_expression -> qualified_name
-- On INFIXL3 reduce production atomic_expression -> qualified_name
-- On INFIXL2 reduce production atomic_expression -> qualified_name
-- On INFIXL1 reduce production atomic_expression -> qualified_name
-- On INFIXL0 reduce production atomic_expression -> qualified_name
-- On INFIX9 reduce production atomic_expression -> qualified_name
-- On INFIX8 reduce production atomic_expression -> qualified_name
-- On INFIX7 reduce production atomic_expression -> qualified_name
-- On INFIX6 reduce production atomic_expression -> qualified_name
-- On INFIX5 reduce production atomic_expression -> qualified_name
-- On INFIX4 reduce production atomic_expression -> qualified_name
-- On INFIX3 reduce production atomic_expression -> qualified_name
-- On INFIX2 reduce production atomic_expression -> qualified_name
-- On INFIX1 reduce production atomic_expression -> qualified_name
-- On INFIX0 reduce production atomic_expression -> qualified_name
-- On FROM reduce production atomic_expression -> qualified_name
-- On FATRARROW reduce production atomic_expression -> qualified_name
-- On FALSE reduce production atomic_expression -> qualified_name
-- On EQUALSTILDE reduce production atomic_expression -> qualified_name
-- On END reduce production atomic_expression -> qualified_name
-- On ELSE reduce production atomic_expression -> qualified_name
-- On DOTDOT reduce production atomic_expression -> qualified_name
-- On DOT reduce production atomic_expression -> qualified_name
-- On DELETE_LEFT reduce production atomic_expression -> qualified_name
-- On DELETE reduce production atomic_expression -> qualified_name
-- On DEFAULT reduce production atomic_expression -> qualified_name
-- On CONSTRUCTOR reduce production atomic_expression -> qualified_name
-- On COMMA reduce production atomic_expression -> qualified_name
-- On COLONCOLON reduce production atomic_expression -> qualified_name
-- On COLON reduce production atomic_expression -> qualified_name
-- On CHAR reduce production atomic_expression -> qualified_name
-- On CASE reduce production atomic_expression -> qualified_name
-- On BY reduce production atomic_expression -> qualified_name
-- On BARRBRACE reduce production atomic_expression -> qualified_name
-- On BARBAR reduce production atomic_expression -> qualified_name
-- On BANG reduce production atomic_expression -> qualified_name
-- On AS reduce production atomic_expression -> qualified_name
-- On AMPAMP reduce production atomic_expression -> qualified_name

State 574:
postfix_expression -> primary_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
postfix_expression -> primary_expression . POSTFIXOP [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On POSTFIXOP shift to state 575
-- On WITH reduce production postfix_expression -> primary_expression
-- On VBAR reduce production postfix_expression -> primary_expression
-- On VALUES reduce production postfix_expression -> primary_expression
-- On TABLEKEYS reduce production postfix_expression -> primary_expression
-- On SEMICOLON reduce production postfix_expression -> primary_expression
-- On RPAREN reduce production postfix_expression -> primary_expression
-- On RETURNING reduce production postfix_expression -> primary_expression
-- On RBRACKET reduce production postfix_expression -> primary_expression
-- On RBRACE reduce production postfix_expression -> primary_expression
-- On RARROW reduce production postfix_expression -> primary_expression
-- On OTHERWISE reduce production postfix_expression -> primary_expression
-- On ON reduce production postfix_expression -> primary_expression
-- On MINUSDOT reduce production postfix_expression -> primary_expression
-- On MINUS reduce production postfix_expression -> primary_expression
-- On LPAREN reduce production postfix_expression -> primary_expression
-- On INFIXR9 reduce production postfix_expression -> primary_expression
-- On INFIXR8 reduce production postfix_expression -> primary_expression
-- On INFIXR7 reduce production postfix_expression -> primary_expression
-- On INFIXR6 reduce production postfix_expression -> primary_expression
-- On INFIXR5 reduce production postfix_expression -> primary_expression
-- On INFIXR4 reduce production postfix_expression -> primary_expression
-- On INFIXR3 reduce production postfix_expression -> primary_expression
-- On INFIXR2 reduce production postfix_expression -> primary_expression
-- On INFIXR1 reduce production postfix_expression -> primary_expression
-- On INFIXR0 reduce production postfix_expression -> primary_expression
-- On INFIXL9 reduce production postfix_expression -> primary_expression
-- On INFIXL8 reduce production postfix_expression -> primary_expression
-- On INFIXL7 reduce production postfix_expression -> primary_expression
-- On INFIXL6 reduce production postfix_expression -> primary_expression
-- On INFIXL5 reduce production postfix_expression -> primary_expression
-- On INFIXL4 reduce production postfix_expression -> primary_expression
-- On INFIXL3 reduce production postfix_expression -> primary_expression
-- On INFIXL2 reduce production postfix_expression -> primary_expression
-- On INFIXL1 reduce production postfix_expression -> primary_expression
-- On INFIXL0 reduce production postfix_expression -> primary_expression
-- On INFIX9 reduce production postfix_expression -> primary_expression
-- On INFIX8 reduce production postfix_expression -> primary_expression
-- On INFIX7 reduce production postfix_expression -> primary_expression
-- On INFIX6 reduce production postfix_expression -> primary_expression
-- On INFIX5 reduce production postfix_expression -> primary_expression
-- On INFIX4 reduce production postfix_expression -> primary_expression
-- On INFIX3 reduce production postfix_expression -> primary_expression
-- On INFIX2 reduce production postfix_expression -> primary_expression
-- On INFIX1 reduce production postfix_expression -> primary_expression
-- On INFIX0 reduce production postfix_expression -> primary_expression
-- On FROM reduce production postfix_expression -> primary_expression
-- On FATRARROW reduce production postfix_expression -> primary_expression
-- On EQUALSTILDE reduce production postfix_expression -> primary_expression
-- On END reduce production postfix_expression -> primary_expression
-- On ELSE reduce production postfix_expression -> primary_expression
-- On DOTDOT reduce production postfix_expression -> primary_expression
-- On DOT reduce production postfix_expression -> primary_expression
-- On DELETE_LEFT reduce production postfix_expression -> primary_expression
-- On DELETE reduce production postfix_expression -> primary_expression
-- On DEFAULT reduce production postfix_expression -> primary_expression
-- On COMMA reduce production postfix_expression -> primary_expression
-- On COLONCOLON reduce production postfix_expression -> primary_expression
-- On COLON reduce production postfix_expression -> primary_expression
-- On CASE reduce production postfix_expression -> primary_expression
-- On BY reduce production postfix_expression -> primary_expression
-- On BARRBRACE reduce production postfix_expression -> primary_expression
-- On BARBAR reduce production postfix_expression -> primary_expression
-- On BANG reduce production postfix_expression -> primary_expression
-- On AS reduce production postfix_expression -> primary_expression
-- On AMPAMP reduce production postfix_expression -> primary_expression

State 575:
postfix_expression -> primary_expression POSTFIXOP . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production postfix_expression -> primary_expression POSTFIXOP
-- On VBAR reduce production postfix_expression -> primary_expression POSTFIXOP
-- On VALUES reduce production postfix_expression -> primary_expression POSTFIXOP
-- On TABLEKEYS reduce production postfix_expression -> primary_expression POSTFIXOP
-- On SEMICOLON reduce production postfix_expression -> primary_expression POSTFIXOP
-- On RPAREN reduce production postfix_expression -> primary_expression POSTFIXOP
-- On RETURNING reduce production postfix_expression -> primary_expression POSTFIXOP
-- On RBRACKET reduce production postfix_expression -> primary_expression POSTFIXOP
-- On RBRACE reduce production postfix_expression -> primary_expression POSTFIXOP
-- On RARROW reduce production postfix_expression -> primary_expression POSTFIXOP
-- On OTHERWISE reduce production postfix_expression -> primary_expression POSTFIXOP
-- On ON reduce production postfix_expression -> primary_expression POSTFIXOP
-- On MINUSDOT reduce production postfix_expression -> primary_expression POSTFIXOP
-- On MINUS reduce production postfix_expression -> primary_expression POSTFIXOP
-- On LPAREN reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR9 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR8 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR7 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR6 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR5 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR4 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR3 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR2 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR1 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR0 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL9 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL8 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL7 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL6 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL5 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL4 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL3 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL2 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL1 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL0 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX9 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX8 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX7 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX6 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX5 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX4 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX3 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX2 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX1 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX0 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On FROM reduce production postfix_expression -> primary_expression POSTFIXOP
-- On FATRARROW reduce production postfix_expression -> primary_expression POSTFIXOP
-- On EQUALSTILDE reduce production postfix_expression -> primary_expression POSTFIXOP
-- On END reduce production postfix_expression -> primary_expression POSTFIXOP
-- On ELSE reduce production postfix_expression -> primary_expression POSTFIXOP
-- On DOTDOT reduce production postfix_expression -> primary_expression POSTFIXOP
-- On DOT reduce production postfix_expression -> primary_expression POSTFIXOP
-- On DELETE_LEFT reduce production postfix_expression -> primary_expression POSTFIXOP
-- On DELETE reduce production postfix_expression -> primary_expression POSTFIXOP
-- On DEFAULT reduce production postfix_expression -> primary_expression POSTFIXOP
-- On COMMA reduce production postfix_expression -> primary_expression POSTFIXOP
-- On COLONCOLON reduce production postfix_expression -> primary_expression POSTFIXOP
-- On COLON reduce production postfix_expression -> primary_expression POSTFIXOP
-- On CASE reduce production postfix_expression -> primary_expression POSTFIXOP
-- On BY reduce production postfix_expression -> primary_expression POSTFIXOP
-- On BARRBRACE reduce production postfix_expression -> primary_expression POSTFIXOP
-- On BARBAR reduce production postfix_expression -> primary_expression POSTFIXOP
-- On BANG reduce production postfix_expression -> primary_expression POSTFIXOP
-- On AS reduce production postfix_expression -> primary_expression POSTFIXOP
-- On AMPAMP reduce production postfix_expression -> primary_expression POSTFIXOP

State 576:
escape_expression -> ESCAPE var IN postfix_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
postfix_expression -> postfix_expression . arg_spec [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON LPAREN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
postfix_expression -> postfix_expression . DOT record_label [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON LPAREN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LPAREN shift to state 577
-- On DOT shift to state 602
-- On arg_spec shift to state 604
-- On WITH reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On VBAR reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On VALUES reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On TABLEKEYS reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On SEMICOLON reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On RPAREN reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On RBRACKET reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On RBRACE reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On OTHERWISE reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On ON reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On FROM reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On END reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On ELSE reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On DOTDOT reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On DELETE_LEFT reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On DELETE reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On DEFAULT reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On COMMA reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On CASE reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On BY reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On BARRBRACE reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On AS reduce production escape_expression -> ESCAPE var IN postfix_expression

State 577:
arg_spec -> LPAREN . RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
arg_spec -> LPAREN . exps RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RPAREN shift to state 578
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exps shift to state 753
-- On exp shift to state 755
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 578:
arg_spec -> LPAREN RPAREN . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production arg_spec -> LPAREN RPAREN
-- On VBAR reduce production arg_spec -> LPAREN RPAREN
-- On VALUES reduce production arg_spec -> LPAREN RPAREN
-- On TABLEKEYS reduce production arg_spec -> LPAREN RPAREN
-- On SEMICOLON reduce production arg_spec -> LPAREN RPAREN
-- On RPAREN reduce production arg_spec -> LPAREN RPAREN
-- On RETURNING reduce production arg_spec -> LPAREN RPAREN
-- On RBRACKET reduce production arg_spec -> LPAREN RPAREN
-- On RBRACE reduce production arg_spec -> LPAREN RPAREN
-- On RARROW reduce production arg_spec -> LPAREN RPAREN
-- On OTHERWISE reduce production arg_spec -> LPAREN RPAREN
-- On ON reduce production arg_spec -> LPAREN RPAREN
-- On MINUSDOT reduce production arg_spec -> LPAREN RPAREN
-- On MINUS reduce production arg_spec -> LPAREN RPAREN
-- On LPAREN reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR9 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR8 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR7 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR6 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR5 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR4 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR3 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR2 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR1 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR0 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL9 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL8 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL7 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL6 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL5 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL4 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL3 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL2 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL1 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL0 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX9 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX8 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX7 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX6 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX5 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX4 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX3 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX2 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX1 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX0 reduce production arg_spec -> LPAREN RPAREN
-- On FROM reduce production arg_spec -> LPAREN RPAREN
-- On FATRARROW reduce production arg_spec -> LPAREN RPAREN
-- On EQUALSTILDE reduce production arg_spec -> LPAREN RPAREN
-- On END reduce production arg_spec -> LPAREN RPAREN
-- On ELSE reduce production arg_spec -> LPAREN RPAREN
-- On DOTDOT reduce production arg_spec -> LPAREN RPAREN
-- On DOT reduce production arg_spec -> LPAREN RPAREN
-- On DELETE_LEFT reduce production arg_spec -> LPAREN RPAREN
-- On DELETE reduce production arg_spec -> LPAREN RPAREN
-- On DEFAULT reduce production arg_spec -> LPAREN RPAREN
-- On COMMA reduce production arg_spec -> LPAREN RPAREN
-- On COLONCOLON reduce production arg_spec -> LPAREN RPAREN
-- On COLON reduce production arg_spec -> LPAREN RPAREN
-- On CASE reduce production arg_spec -> LPAREN RPAREN
-- On BY reduce production arg_spec -> LPAREN RPAREN
-- On BARRBRACE reduce production arg_spec -> LPAREN RPAREN
-- On BARBAR reduce production arg_spec -> LPAREN RPAREN
-- On BANG reduce production arg_spec -> LPAREN RPAREN
-- On AS reduce production arg_spec -> LPAREN RPAREN
-- On AMPAMP reduce production arg_spec -> LPAREN RPAREN

State 579:
unary_expression -> DOOP . CONSTRUCTOR arg_spec [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
unary_expression -> DOOP . CONSTRUCTOR [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On CONSTRUCTOR shift to state 580

State 580:
unary_expression -> DOOP CONSTRUCTOR . arg_spec [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
unary_expression -> DOOP CONSTRUCTOR . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LPAREN shift to state 577
-- On arg_spec shift to state 581
-- On WITH reduce production unary_expression -> DOOP CONSTRUCTOR
-- On VBAR reduce production unary_expression -> DOOP CONSTRUCTOR
-- On VALUES reduce production unary_expression -> DOOP CONSTRUCTOR
-- On TABLEKEYS reduce production unary_expression -> DOOP CONSTRUCTOR
-- On SEMICOLON reduce production unary_expression -> DOOP CONSTRUCTOR
-- On RPAREN reduce production unary_expression -> DOOP CONSTRUCTOR
-- On RETURNING reduce production unary_expression -> DOOP CONSTRUCTOR
-- On RBRACKET reduce production unary_expression -> DOOP CONSTRUCTOR
-- On RBRACE reduce production unary_expression -> DOOP CONSTRUCTOR
-- On RARROW reduce production unary_expression -> DOOP CONSTRUCTOR
-- On OTHERWISE reduce production unary_expression -> DOOP CONSTRUCTOR
-- On ON reduce production unary_expression -> DOOP CONSTRUCTOR
-- On MINUSDOT reduce production unary_expression -> DOOP CONSTRUCTOR
-- On MINUS reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXR9 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXR8 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXR7 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXR6 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXR5 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXR4 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXR3 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXR2 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXR1 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXR0 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXL9 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXL8 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXL7 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXL6 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXL5 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXL4 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXL3 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXL2 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXL1 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIXL0 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIX9 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIX8 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIX7 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIX6 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIX5 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIX4 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIX3 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIX2 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIX1 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On INFIX0 reduce production unary_expression -> DOOP CONSTRUCTOR
-- On FROM reduce production unary_expression -> DOOP CONSTRUCTOR
-- On FATRARROW reduce production unary_expression -> DOOP CONSTRUCTOR
-- On EQUALSTILDE reduce production unary_expression -> DOOP CONSTRUCTOR
-- On END reduce production unary_expression -> DOOP CONSTRUCTOR
-- On ELSE reduce production unary_expression -> DOOP CONSTRUCTOR
-- On DOTDOT reduce production unary_expression -> DOOP CONSTRUCTOR
-- On DELETE_LEFT reduce production unary_expression -> DOOP CONSTRUCTOR
-- On DELETE reduce production unary_expression -> DOOP CONSTRUCTOR
-- On DEFAULT reduce production unary_expression -> DOOP CONSTRUCTOR
-- On COMMA reduce production unary_expression -> DOOP CONSTRUCTOR
-- On COLONCOLON reduce production unary_expression -> DOOP CONSTRUCTOR
-- On COLON reduce production unary_expression -> DOOP CONSTRUCTOR
-- On CASE reduce production unary_expression -> DOOP CONSTRUCTOR
-- On BY reduce production unary_expression -> DOOP CONSTRUCTOR
-- On BARRBRACE reduce production unary_expression -> DOOP CONSTRUCTOR
-- On BARBAR reduce production unary_expression -> DOOP CONSTRUCTOR
-- On BANG reduce production unary_expression -> DOOP CONSTRUCTOR
-- On AS reduce production unary_expression -> DOOP CONSTRUCTOR
-- On AMPAMP reduce production unary_expression -> DOOP CONSTRUCTOR

State 581:
unary_expression -> DOOP CONSTRUCTOR arg_spec . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On VBAR reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On VALUES reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On TABLEKEYS reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On SEMICOLON reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On RPAREN reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On RETURNING reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On RBRACKET reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On RBRACE reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On RARROW reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On OTHERWISE reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On ON reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On MINUSDOT reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On MINUS reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXR9 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXR8 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXR7 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXR6 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXR5 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXR4 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXR3 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXR2 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXR1 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXR0 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXL9 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXL8 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXL7 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXL6 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXL5 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXL4 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXL3 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXL2 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXL1 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIXL0 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIX9 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIX8 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIX7 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIX6 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIX5 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIX4 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIX3 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIX2 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIX1 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On INFIX0 reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On FROM reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On FATRARROW reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On EQUALSTILDE reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On END reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On ELSE reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On DOTDOT reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On DELETE_LEFT reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On DELETE reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On DEFAULT reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On COMMA reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On COLONCOLON reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On COLON reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On CASE reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On BY reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On BARRBRACE reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On BARBAR reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On BANG reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On AS reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec
-- On AMPAMP reduce production unary_expression -> DOOP CONSTRUCTOR arg_spec

State 582:
db_expression -> DELETE . LPAREN table_generator RPAREN perhaps_where [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LPAREN shift to state 583

State 583:
db_expression -> DELETE LPAREN . table_generator RPAREN perhaps_where [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On table_generator shift to state 584
-- On primary_pattern shift to state 275
-- On pattern shift to state 587
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 584:
db_expression -> DELETE LPAREN table_generator . RPAREN perhaps_where [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RPAREN shift to state 585

State 585:
db_expression -> DELETE LPAREN table_generator RPAREN . perhaps_where [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WHERE shift to state 308
-- On perhaps_where shift to state 586
-- On WITH reduce production perhaps_where ->
-- On VBAR reduce production perhaps_where ->
-- On VALUES reduce production perhaps_where ->
-- On TABLEKEYS reduce production perhaps_where ->
-- On SEMICOLON reduce production perhaps_where ->
-- On RPAREN reduce production perhaps_where ->
-- On RETURNING reduce production perhaps_where ->
-- On RBRACKET reduce production perhaps_where ->
-- On RBRACE reduce production perhaps_where ->
-- On OTHERWISE reduce production perhaps_where ->
-- On ON reduce production perhaps_where ->
-- On FROM reduce production perhaps_where ->
-- On END reduce production perhaps_where ->
-- On ELSE reduce production perhaps_where ->
-- On DOTDOT reduce production perhaps_where ->
-- On DELETE_LEFT reduce production perhaps_where ->
-- On DELETE reduce production perhaps_where ->
-- On DEFAULT reduce production perhaps_where ->
-- On COMMA reduce production perhaps_where ->
-- On CASE reduce production perhaps_where ->
-- On BY reduce production perhaps_where ->
-- On BARRBRACE reduce production perhaps_where ->
-- On AS reduce production perhaps_where ->

State 586:
db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On VBAR reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On VALUES reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On TABLEKEYS reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On SEMICOLON reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On RPAREN reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On RETURNING reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On RBRACKET reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On RBRACE reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On OTHERWISE reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On ON reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On FROM reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On END reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On ELSE reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On DOTDOT reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On DELETE_LEFT reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On DELETE reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On DEFAULT reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On COMMA reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On CASE reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On BY reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On BARRBRACE reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On AS reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where

State 587:
table_generator -> pattern . LLARROW exp [ RPAREN ]
-- On LLARROW shift to state 588

State 588:
table_generator -> pattern LLARROW . exp [ RPAREN COMMA ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 747
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 589:
database_expression -> DATABASE . atomic_expression perhaps_db_driver [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On RECEIVE shift to state 389
-- On LPAREN shift to state 402
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 564
-- On CHAR shift to state 37
-- On qualified_name shift to state 573
-- On parenthesized_thing shift to state 590
-- On constant shift to state 591
-- On atomic_expression shift to state 592

State 590:
atomic_expression -> parenthesized_thing . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production atomic_expression -> parenthesized_thing
-- On VBAR reduce production atomic_expression -> parenthesized_thing
-- On VARIABLE reduce production atomic_expression -> parenthesized_thing
-- On VALUES reduce production atomic_expression -> parenthesized_thing
-- On UINTEGER reduce production atomic_expression -> parenthesized_thing
-- On UFLOAT reduce production atomic_expression -> parenthesized_thing
-- On TRUE reduce production atomic_expression -> parenthesized_thing
-- On TABLEKEYS reduce production atomic_expression -> parenthesized_thing
-- On STRING reduce production atomic_expression -> parenthesized_thing
-- On SEMICOLON reduce production atomic_expression -> parenthesized_thing
-- On RPAREN reduce production atomic_expression -> parenthesized_thing
-- On RETURNING reduce production atomic_expression -> parenthesized_thing
-- On RECEIVE reduce production atomic_expression -> parenthesized_thing
-- On RBRACKET reduce production atomic_expression -> parenthesized_thing
-- On RBRACE reduce production atomic_expression -> parenthesized_thing
-- On RARROW reduce production atomic_expression -> parenthesized_thing
-- On POSTFIXOP reduce production atomic_expression -> parenthesized_thing
-- On OTHERWISE reduce production atomic_expression -> parenthesized_thing
-- On ON reduce production atomic_expression -> parenthesized_thing
-- On MINUSDOT reduce production atomic_expression -> parenthesized_thing
-- On MINUS reduce production atomic_expression -> parenthesized_thing
-- On LPAREN reduce production atomic_expression -> parenthesized_thing
-- On INFIXR9 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR8 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR7 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR6 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR5 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR4 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR3 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR2 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR1 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR0 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL9 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL8 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL7 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL6 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL5 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL4 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL3 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL2 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL1 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL0 reduce production atomic_expression -> parenthesized_thing
-- On INFIX9 reduce production atomic_expression -> parenthesized_thing
-- On INFIX8 reduce production atomic_expression -> parenthesized_thing
-- On INFIX7 reduce production atomic_expression -> parenthesized_thing
-- On INFIX6 reduce production atomic_expression -> parenthesized_thing
-- On INFIX5 reduce production atomic_expression -> parenthesized_thing
-- On INFIX4 reduce production atomic_expression -> parenthesized_thing
-- On INFIX3 reduce production atomic_expression -> parenthesized_thing
-- On INFIX2 reduce production atomic_expression -> parenthesized_thing
-- On INFIX1 reduce production atomic_expression -> parenthesized_thing
-- On INFIX0 reduce production atomic_expression -> parenthesized_thing
-- On FROM reduce production atomic_expression -> parenthesized_thing
-- On FATRARROW reduce production atomic_expression -> parenthesized_thing
-- On FALSE reduce production atomic_expression -> parenthesized_thing
-- On EQUALSTILDE reduce production atomic_expression -> parenthesized_thing
-- On END reduce production atomic_expression -> parenthesized_thing
-- On ELSE reduce production atomic_expression -> parenthesized_thing
-- On DOTDOT reduce production atomic_expression -> parenthesized_thing
-- On DOT reduce production atomic_expression -> parenthesized_thing
-- On DELETE_LEFT reduce production atomic_expression -> parenthesized_thing
-- On DELETE reduce production atomic_expression -> parenthesized_thing
-- On DEFAULT reduce production atomic_expression -> parenthesized_thing
-- On CONSTRUCTOR reduce production atomic_expression -> parenthesized_thing
-- On COMMA reduce production atomic_expression -> parenthesized_thing
-- On COLONCOLON reduce production atomic_expression -> parenthesized_thing
-- On COLON reduce production atomic_expression -> parenthesized_thing
-- On CHAR reduce production atomic_expression -> parenthesized_thing
-- On CASE reduce production atomic_expression -> parenthesized_thing
-- On BY reduce production atomic_expression -> parenthesized_thing
-- On BARRBRACE reduce production atomic_expression -> parenthesized_thing
-- On BARBAR reduce production atomic_expression -> parenthesized_thing
-- On BANG reduce production atomic_expression -> parenthesized_thing
-- On AS reduce production atomic_expression -> parenthesized_thing
-- On AMPAMP reduce production atomic_expression -> parenthesized_thing

State 591:
atomic_expression -> constant . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production atomic_expression -> constant
-- On VBAR reduce production atomic_expression -> constant
-- On VARIABLE reduce production atomic_expression -> constant
-- On VALUES reduce production atomic_expression -> constant
-- On UINTEGER reduce production atomic_expression -> constant
-- On UFLOAT reduce production atomic_expression -> constant
-- On TRUE reduce production atomic_expression -> constant
-- On TABLEKEYS reduce production atomic_expression -> constant
-- On STRING reduce production atomic_expression -> constant
-- On SEMICOLON reduce production atomic_expression -> constant
-- On RPAREN reduce production atomic_expression -> constant
-- On RETURNING reduce production atomic_expression -> constant
-- On RECEIVE reduce production atomic_expression -> constant
-- On RBRACKET reduce production atomic_expression -> constant
-- On RBRACE reduce production atomic_expression -> constant
-- On RARROW reduce production atomic_expression -> constant
-- On POSTFIXOP reduce production atomic_expression -> constant
-- On OTHERWISE reduce production atomic_expression -> constant
-- On ON reduce production atomic_expression -> constant
-- On MINUSDOT reduce production atomic_expression -> constant
-- On MINUS reduce production atomic_expression -> constant
-- On LPAREN reduce production atomic_expression -> constant
-- On INFIXR9 reduce production atomic_expression -> constant
-- On INFIXR8 reduce production atomic_expression -> constant
-- On INFIXR7 reduce production atomic_expression -> constant
-- On INFIXR6 reduce production atomic_expression -> constant
-- On INFIXR5 reduce production atomic_expression -> constant
-- On INFIXR4 reduce production atomic_expression -> constant
-- On INFIXR3 reduce production atomic_expression -> constant
-- On INFIXR2 reduce production atomic_expression -> constant
-- On INFIXR1 reduce production atomic_expression -> constant
-- On INFIXR0 reduce production atomic_expression -> constant
-- On INFIXL9 reduce production atomic_expression -> constant
-- On INFIXL8 reduce production atomic_expression -> constant
-- On INFIXL7 reduce production atomic_expression -> constant
-- On INFIXL6 reduce production atomic_expression -> constant
-- On INFIXL5 reduce production atomic_expression -> constant
-- On INFIXL4 reduce production atomic_expression -> constant
-- On INFIXL3 reduce production atomic_expression -> constant
-- On INFIXL2 reduce production atomic_expression -> constant
-- On INFIXL1 reduce production atomic_expression -> constant
-- On INFIXL0 reduce production atomic_expression -> constant
-- On INFIX9 reduce production atomic_expression -> constant
-- On INFIX8 reduce production atomic_expression -> constant
-- On INFIX7 reduce production atomic_expression -> constant
-- On INFIX6 reduce production atomic_expression -> constant
-- On INFIX5 reduce production atomic_expression -> constant
-- On INFIX4 reduce production atomic_expression -> constant
-- On INFIX3 reduce production atomic_expression -> constant
-- On INFIX2 reduce production atomic_expression -> constant
-- On INFIX1 reduce production atomic_expression -> constant
-- On INFIX0 reduce production atomic_expression -> constant
-- On FROM reduce production atomic_expression -> constant
-- On FATRARROW reduce production atomic_expression -> constant
-- On FALSE reduce production atomic_expression -> constant
-- On EQUALSTILDE reduce production atomic_expression -> constant
-- On END reduce production atomic_expression -> constant
-- On ELSE reduce production atomic_expression -> constant
-- On DOTDOT reduce production atomic_expression -> constant
-- On DOT reduce production atomic_expression -> constant
-- On DELETE_LEFT reduce production atomic_expression -> constant
-- On DELETE reduce production atomic_expression -> constant
-- On DEFAULT reduce production atomic_expression -> constant
-- On CONSTRUCTOR reduce production atomic_expression -> constant
-- On COMMA reduce production atomic_expression -> constant
-- On COLONCOLON reduce production atomic_expression -> constant
-- On COLON reduce production atomic_expression -> constant
-- On CHAR reduce production atomic_expression -> constant
-- On CASE reduce production atomic_expression -> constant
-- On BY reduce production atomic_expression -> constant
-- On BARRBRACE reduce production atomic_expression -> constant
-- On BARBAR reduce production atomic_expression -> constant
-- On BANG reduce production atomic_expression -> constant
-- On AS reduce production atomic_expression -> constant
-- On AMPAMP reduce production atomic_expression -> constant

State 592:
database_expression -> DATABASE atomic_expression . perhaps_db_driver [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On RECEIVE shift to state 389
-- On LPAREN shift to state 402
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 564
-- On CHAR shift to state 37
-- On qualified_name shift to state 573
-- On perhaps_db_driver shift to state 593
-- On parenthesized_thing shift to state 590
-- On constant shift to state 591
-- On atomic_expression shift to state 594
-- On WITH reduce production perhaps_db_driver ->
-- On VBAR reduce production perhaps_db_driver ->
-- On VALUES reduce production perhaps_db_driver ->
-- On TABLEKEYS reduce production perhaps_db_driver ->
-- On SEMICOLON reduce production perhaps_db_driver ->
-- On RPAREN reduce production perhaps_db_driver ->
-- On RBRACKET reduce production perhaps_db_driver ->
-- On RBRACE reduce production perhaps_db_driver ->
-- On OTHERWISE reduce production perhaps_db_driver ->
-- On ON reduce production perhaps_db_driver ->
-- On FROM reduce production perhaps_db_driver ->
-- On END reduce production perhaps_db_driver ->
-- On ELSE reduce production perhaps_db_driver ->
-- On DOTDOT reduce production perhaps_db_driver ->
-- On DELETE_LEFT reduce production perhaps_db_driver ->
-- On DELETE reduce production perhaps_db_driver ->
-- On DEFAULT reduce production perhaps_db_driver ->
-- On COMMA reduce production perhaps_db_driver ->
-- On CASE reduce production perhaps_db_driver ->
-- On BY reduce production perhaps_db_driver ->
-- On BARRBRACE reduce production perhaps_db_driver ->
-- On AS reduce production perhaps_db_driver ->

State 593:
database_expression -> DATABASE atomic_expression perhaps_db_driver . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On VBAR reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On VALUES reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On TABLEKEYS reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On SEMICOLON reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On RPAREN reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On RBRACKET reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On RBRACE reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On OTHERWISE reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On ON reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On FROM reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On END reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On ELSE reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On DOTDOT reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On DELETE_LEFT reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On DELETE reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On DEFAULT reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On COMMA reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On CASE reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On BY reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On BARRBRACE reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On AS reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver

State 594:
perhaps_db_driver -> atomic_expression . perhaps_db_args [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On RECEIVE shift to state 389
-- On LPAREN shift to state 402
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 564
-- On CHAR shift to state 37
-- On qualified_name shift to state 573
-- On perhaps_db_args shift to state 595
-- On parenthesized_thing shift to state 590
-- On constant shift to state 591
-- On atomic_expression shift to state 596
-- On WITH reduce production perhaps_db_args ->
-- On VBAR reduce production perhaps_db_args ->
-- On VALUES reduce production perhaps_db_args ->
-- On TABLEKEYS reduce production perhaps_db_args ->
-- On SEMICOLON reduce production perhaps_db_args ->
-- On RPAREN reduce production perhaps_db_args ->
-- On RBRACKET reduce production perhaps_db_args ->
-- On RBRACE reduce production perhaps_db_args ->
-- On OTHERWISE reduce production perhaps_db_args ->
-- On ON reduce production perhaps_db_args ->
-- On FROM reduce production perhaps_db_args ->
-- On END reduce production perhaps_db_args ->
-- On ELSE reduce production perhaps_db_args ->
-- On DOTDOT reduce production perhaps_db_args ->
-- On DELETE_LEFT reduce production perhaps_db_args ->
-- On DELETE reduce production perhaps_db_args ->
-- On DEFAULT reduce production perhaps_db_args ->
-- On COMMA reduce production perhaps_db_args ->
-- On CASE reduce production perhaps_db_args ->
-- On BY reduce production perhaps_db_args ->
-- On BARRBRACE reduce production perhaps_db_args ->
-- On AS reduce production perhaps_db_args ->

State 595:
perhaps_db_driver -> atomic_expression perhaps_db_args . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On VBAR reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On VALUES reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On TABLEKEYS reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On SEMICOLON reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On RPAREN reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On RBRACKET reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On RBRACE reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On OTHERWISE reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On ON reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On FROM reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On END reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On ELSE reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On DOTDOT reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On DELETE_LEFT reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On DELETE reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On DEFAULT reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On COMMA reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On CASE reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On BY reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On BARRBRACE reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On AS reduce production perhaps_db_driver -> atomic_expression perhaps_db_args

State 596:
perhaps_db_args -> atomic_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production perhaps_db_args -> atomic_expression
-- On VBAR reduce production perhaps_db_args -> atomic_expression
-- On VALUES reduce production perhaps_db_args -> atomic_expression
-- On TABLEKEYS reduce production perhaps_db_args -> atomic_expression
-- On SEMICOLON reduce production perhaps_db_args -> atomic_expression
-- On RPAREN reduce production perhaps_db_args -> atomic_expression
-- On RBRACKET reduce production perhaps_db_args -> atomic_expression
-- On RBRACE reduce production perhaps_db_args -> atomic_expression
-- On OTHERWISE reduce production perhaps_db_args -> atomic_expression
-- On ON reduce production perhaps_db_args -> atomic_expression
-- On FROM reduce production perhaps_db_args -> atomic_expression
-- On END reduce production perhaps_db_args -> atomic_expression
-- On ELSE reduce production perhaps_db_args -> atomic_expression
-- On DOTDOT reduce production perhaps_db_args -> atomic_expression
-- On DELETE_LEFT reduce production perhaps_db_args -> atomic_expression
-- On DELETE reduce production perhaps_db_args -> atomic_expression
-- On DEFAULT reduce production perhaps_db_args -> atomic_expression
-- On COMMA reduce production perhaps_db_args -> atomic_expression
-- On CASE reduce production perhaps_db_args -> atomic_expression
-- On BY reduce production perhaps_db_args -> atomic_expression
-- On BARRBRACE reduce production perhaps_db_args -> atomic_expression
-- On AS reduce production perhaps_db_args -> atomic_expression

State 597:
constructor_expression -> CONSTRUCTOR . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
constructor_expression -> CONSTRUCTOR . parenthesized_thing [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
qualified_name -> CONSTRUCTOR . DOT qualified_name_inner [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LPAREN shift to state 402
-- On DOT shift to state 565
-- On parenthesized_thing shift to state 598
-- On WITH reduce production constructor_expression -> CONSTRUCTOR
-- On VBAR reduce production constructor_expression -> CONSTRUCTOR
-- On VALUES reduce production constructor_expression -> CONSTRUCTOR
-- On TABLEKEYS reduce production constructor_expression -> CONSTRUCTOR
-- On SEMICOLON reduce production constructor_expression -> CONSTRUCTOR
-- On RPAREN reduce production constructor_expression -> CONSTRUCTOR
-- On RETURNING reduce production constructor_expression -> CONSTRUCTOR
-- On RBRACKET reduce production constructor_expression -> CONSTRUCTOR
-- On RBRACE reduce production constructor_expression -> CONSTRUCTOR
-- On RARROW reduce production constructor_expression -> CONSTRUCTOR
-- On OTHERWISE reduce production constructor_expression -> CONSTRUCTOR
-- On ON reduce production constructor_expression -> CONSTRUCTOR
-- On MINUSDOT reduce production constructor_expression -> CONSTRUCTOR
-- On MINUS reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR9 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR8 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR7 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR6 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR5 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR4 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR3 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR2 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR1 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR0 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL9 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL8 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL7 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL6 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL5 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL4 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL3 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL2 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL1 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL0 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX9 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX8 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX7 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX6 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX5 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX4 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX3 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX2 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX1 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX0 reduce production constructor_expression -> CONSTRUCTOR
-- On FROM reduce production constructor_expression -> CONSTRUCTOR
-- On FATRARROW reduce production constructor_expression -> CONSTRUCTOR
-- On EQUALSTILDE reduce production constructor_expression -> CONSTRUCTOR
-- On END reduce production constructor_expression -> CONSTRUCTOR
-- On ELSE reduce production constructor_expression -> CONSTRUCTOR
-- On DOTDOT reduce production constructor_expression -> CONSTRUCTOR
-- On DELETE_LEFT reduce production constructor_expression -> CONSTRUCTOR
-- On DELETE reduce production constructor_expression -> CONSTRUCTOR
-- On DEFAULT reduce production constructor_expression -> CONSTRUCTOR
-- On COMMA reduce production constructor_expression -> CONSTRUCTOR
-- On COLONCOLON reduce production constructor_expression -> CONSTRUCTOR
-- On COLON reduce production constructor_expression -> CONSTRUCTOR
-- On CASE reduce production constructor_expression -> CONSTRUCTOR
-- On BY reduce production constructor_expression -> CONSTRUCTOR
-- On BARRBRACE reduce production constructor_expression -> CONSTRUCTOR
-- On BARBAR reduce production constructor_expression -> CONSTRUCTOR
-- On BANG reduce production constructor_expression -> CONSTRUCTOR
-- On AS reduce production constructor_expression -> CONSTRUCTOR
-- On AMPAMP reduce production constructor_expression -> CONSTRUCTOR

State 598:
constructor_expression -> CONSTRUCTOR parenthesized_thing . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On VBAR reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On VALUES reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On TABLEKEYS reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On SEMICOLON reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On RPAREN reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On RETURNING reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On RBRACKET reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On RBRACE reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On RARROW reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On OTHERWISE reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On ON reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On MINUSDOT reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On MINUS reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR9 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR8 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR7 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR6 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR5 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR4 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR3 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR2 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR1 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR0 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL9 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL8 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL7 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL6 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL5 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL4 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL3 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL2 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL1 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL0 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX9 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX8 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX7 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX6 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX5 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX4 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX3 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX2 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX1 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX0 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On FROM reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On FATRARROW reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On EQUALSTILDE reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On END reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On ELSE reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On DOTDOT reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On DELETE_LEFT reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On DELETE reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On DEFAULT reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On COMMA reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On COLONCOLON reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On COLON reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On CASE reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On BY reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On BARRBRACE reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On BARBAR reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On BANG reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On AS reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On AMPAMP reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing

State 599:
infixr_9 -> unary_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixr_9 -> unary_expression . INFIX9 unary_expression [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixr_9 -> unary_expression . INFIXR9 infixr_9 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On INFIXR9 shift to state 600
-- On INFIX9 shift to state 612
-- On WITH reduce production infixr_9 -> unary_expression
-- On VBAR reduce production infixr_9 -> unary_expression
-- On VALUES reduce production infixr_9 -> unary_expression
-- On TABLEKEYS reduce production infixr_9 -> unary_expression
-- On SEMICOLON reduce production infixr_9 -> unary_expression
-- On RPAREN reduce production infixr_9 -> unary_expression
-- On RETURNING reduce production infixr_9 -> unary_expression
-- On RBRACKET reduce production infixr_9 -> unary_expression
-- On RBRACE reduce production infixr_9 -> unary_expression
-- On RARROW reduce production infixr_9 -> unary_expression
-- On OTHERWISE reduce production infixr_9 -> unary_expression
-- On ON reduce production infixr_9 -> unary_expression
-- On MINUSDOT reduce production infixr_9 -> unary_expression
-- On MINUS reduce production infixr_9 -> unary_expression
-- On INFIXR8 reduce production infixr_9 -> unary_expression
-- On INFIXR7 reduce production infixr_9 -> unary_expression
-- On INFIXR6 reduce production infixr_9 -> unary_expression
-- On INFIXR5 reduce production infixr_9 -> unary_expression
-- On INFIXR4 reduce production infixr_9 -> unary_expression
-- On INFIXR3 reduce production infixr_9 -> unary_expression
-- On INFIXR2 reduce production infixr_9 -> unary_expression
-- On INFIXR1 reduce production infixr_9 -> unary_expression
-- On INFIXR0 reduce production infixr_9 -> unary_expression
-- On INFIXL9 reduce production infixr_9 -> unary_expression
-- On INFIXL8 reduce production infixr_9 -> unary_expression
-- On INFIXL7 reduce production infixr_9 -> unary_expression
-- On INFIXL6 reduce production infixr_9 -> unary_expression
-- On INFIXL5 reduce production infixr_9 -> unary_expression
-- On INFIXL4 reduce production infixr_9 -> unary_expression
-- On INFIXL3 reduce production infixr_9 -> unary_expression
-- On INFIXL2 reduce production infixr_9 -> unary_expression
-- On INFIXL1 reduce production infixr_9 -> unary_expression
-- On INFIXL0 reduce production infixr_9 -> unary_expression
-- On INFIX8 reduce production infixr_9 -> unary_expression
-- On INFIX7 reduce production infixr_9 -> unary_expression
-- On INFIX6 reduce production infixr_9 -> unary_expression
-- On INFIX5 reduce production infixr_9 -> unary_expression
-- On INFIX4 reduce production infixr_9 -> unary_expression
-- On INFIX3 reduce production infixr_9 -> unary_expression
-- On INFIX2 reduce production infixr_9 -> unary_expression
-- On INFIX1 reduce production infixr_9 -> unary_expression
-- On INFIX0 reduce production infixr_9 -> unary_expression
-- On FROM reduce production infixr_9 -> unary_expression
-- On FATRARROW reduce production infixr_9 -> unary_expression
-- On EQUALSTILDE reduce production infixr_9 -> unary_expression
-- On END reduce production infixr_9 -> unary_expression
-- On ELSE reduce production infixr_9 -> unary_expression
-- On DOTDOT reduce production infixr_9 -> unary_expression
-- On DELETE_LEFT reduce production infixr_9 -> unary_expression
-- On DELETE reduce production infixr_9 -> unary_expression
-- On DEFAULT reduce production infixr_9 -> unary_expression
-- On COMMA reduce production infixr_9 -> unary_expression
-- On COLONCOLON reduce production infixr_9 -> unary_expression
-- On COLON reduce production infixr_9 -> unary_expression
-- On CASE reduce production infixr_9 -> unary_expression
-- On BY reduce production infixr_9 -> unary_expression
-- On BARRBRACE reduce production infixr_9 -> unary_expression
-- On BARBAR reduce production infixr_9 -> unary_expression
-- On BANG reduce production infixr_9 -> unary_expression
-- On AS reduce production infixr_9 -> unary_expression
-- On AMPAMP reduce production infixr_9 -> unary_expression

State 600:
infixr_9 -> unary_expression INFIXR9 . infixr_9 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 605
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 601:
postfix_expression -> postfix_expression . arg_spec [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
postfix_expression -> postfix_expression . DOT record_label [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
unary_expression -> postfix_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LPAREN shift to state 577
-- On DOT shift to state 602
-- On arg_spec shift to state 604
-- On WITH reduce production unary_expression -> postfix_expression
-- On VBAR reduce production unary_expression -> postfix_expression
-- On VALUES reduce production unary_expression -> postfix_expression
-- On TABLEKEYS reduce production unary_expression -> postfix_expression
-- On SEMICOLON reduce production unary_expression -> postfix_expression
-- On RPAREN reduce production unary_expression -> postfix_expression
-- On RETURNING reduce production unary_expression -> postfix_expression
-- On RBRACKET reduce production unary_expression -> postfix_expression
-- On RBRACE reduce production unary_expression -> postfix_expression
-- On RARROW reduce production unary_expression -> postfix_expression
-- On OTHERWISE reduce production unary_expression -> postfix_expression
-- On ON reduce production unary_expression -> postfix_expression
-- On MINUSDOT reduce production unary_expression -> postfix_expression
-- On MINUS reduce production unary_expression -> postfix_expression
-- On INFIXR9 reduce production unary_expression -> postfix_expression
-- On INFIXR8 reduce production unary_expression -> postfix_expression
-- On INFIXR7 reduce production unary_expression -> postfix_expression
-- On INFIXR6 reduce production unary_expression -> postfix_expression
-- On INFIXR5 reduce production unary_expression -> postfix_expression
-- On INFIXR4 reduce production unary_expression -> postfix_expression
-- On INFIXR3 reduce production unary_expression -> postfix_expression
-- On INFIXR2 reduce production unary_expression -> postfix_expression
-- On INFIXR1 reduce production unary_expression -> postfix_expression
-- On INFIXR0 reduce production unary_expression -> postfix_expression
-- On INFIXL9 reduce production unary_expression -> postfix_expression
-- On INFIXL8 reduce production unary_expression -> postfix_expression
-- On INFIXL7 reduce production unary_expression -> postfix_expression
-- On INFIXL6 reduce production unary_expression -> postfix_expression
-- On INFIXL5 reduce production unary_expression -> postfix_expression
-- On INFIXL4 reduce production unary_expression -> postfix_expression
-- On INFIXL3 reduce production unary_expression -> postfix_expression
-- On INFIXL2 reduce production unary_expression -> postfix_expression
-- On INFIXL1 reduce production unary_expression -> postfix_expression
-- On INFIXL0 reduce production unary_expression -> postfix_expression
-- On INFIX9 reduce production unary_expression -> postfix_expression
-- On INFIX8 reduce production unary_expression -> postfix_expression
-- On INFIX7 reduce production unary_expression -> postfix_expression
-- On INFIX6 reduce production unary_expression -> postfix_expression
-- On INFIX5 reduce production unary_expression -> postfix_expression
-- On INFIX4 reduce production unary_expression -> postfix_expression
-- On INFIX3 reduce production unary_expression -> postfix_expression
-- On INFIX2 reduce production unary_expression -> postfix_expression
-- On INFIX1 reduce production unary_expression -> postfix_expression
-- On INFIX0 reduce production unary_expression -> postfix_expression
-- On FROM reduce production unary_expression -> postfix_expression
-- On FATRARROW reduce production unary_expression -> postfix_expression
-- On EQUALSTILDE reduce production unary_expression -> postfix_expression
-- On END reduce production unary_expression -> postfix_expression
-- On ELSE reduce production unary_expression -> postfix_expression
-- On DOTDOT reduce production unary_expression -> postfix_expression
-- On DELETE_LEFT reduce production unary_expression -> postfix_expression
-- On DELETE reduce production unary_expression -> postfix_expression
-- On DEFAULT reduce production unary_expression -> postfix_expression
-- On COMMA reduce production unary_expression -> postfix_expression
-- On COLONCOLON reduce production unary_expression -> postfix_expression
-- On COLON reduce production unary_expression -> postfix_expression
-- On CASE reduce production unary_expression -> postfix_expression
-- On BY reduce production unary_expression -> postfix_expression
-- On BARRBRACE reduce production unary_expression -> postfix_expression
-- On BARBAR reduce production unary_expression -> postfix_expression
-- On BANG reduce production unary_expression -> postfix_expression
-- On AS reduce production unary_expression -> postfix_expression
-- On AMPAMP reduce production unary_expression -> postfix_expression

State 602:
postfix_expression -> postfix_expression DOT . record_label [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On CONSTRUCTOR shift to state 91
-- On record_label shift to state 603
-- On field_label shift to state 254

State 603:
postfix_expression -> postfix_expression DOT record_label . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production postfix_expression -> postfix_expression DOT record_label
-- On VBAR reduce production postfix_expression -> postfix_expression DOT record_label
-- On VALUES reduce production postfix_expression -> postfix_expression DOT record_label
-- On TABLEKEYS reduce production postfix_expression -> postfix_expression DOT record_label
-- On SEMICOLON reduce production postfix_expression -> postfix_expression DOT record_label
-- On RPAREN reduce production postfix_expression -> postfix_expression DOT record_label
-- On RETURNING reduce production postfix_expression -> postfix_expression DOT record_label
-- On RBRACKET reduce production postfix_expression -> postfix_expression DOT record_label
-- On RBRACE reduce production postfix_expression -> postfix_expression DOT record_label
-- On RARROW reduce production postfix_expression -> postfix_expression DOT record_label
-- On OTHERWISE reduce production postfix_expression -> postfix_expression DOT record_label
-- On ON reduce production postfix_expression -> postfix_expression DOT record_label
-- On MINUSDOT reduce production postfix_expression -> postfix_expression DOT record_label
-- On MINUS reduce production postfix_expression -> postfix_expression DOT record_label
-- On LPAREN reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR9 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR8 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR7 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR6 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR5 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR4 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR3 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR2 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR1 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR0 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL9 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL8 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL7 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL6 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL5 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL4 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL3 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL2 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL1 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL0 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX9 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX8 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX7 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX6 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX5 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX4 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX3 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX2 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX1 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX0 reduce production postfix_expression -> postfix_expression DOT record_label
-- On FROM reduce production postfix_expression -> postfix_expression DOT record_label
-- On FATRARROW reduce production postfix_expression -> postfix_expression DOT record_label
-- On EQUALSTILDE reduce production postfix_expression -> postfix_expression DOT record_label
-- On END reduce production postfix_expression -> postfix_expression DOT record_label
-- On ELSE reduce production postfix_expression -> postfix_expression DOT record_label
-- On DOTDOT reduce production postfix_expression -> postfix_expression DOT record_label
-- On DOT reduce production postfix_expression -> postfix_expression DOT record_label
-- On DELETE_LEFT reduce production postfix_expression -> postfix_expression DOT record_label
-- On DELETE reduce production postfix_expression -> postfix_expression DOT record_label
-- On DEFAULT reduce production postfix_expression -> postfix_expression DOT record_label
-- On COMMA reduce production postfix_expression -> postfix_expression DOT record_label
-- On COLONCOLON reduce production postfix_expression -> postfix_expression DOT record_label
-- On COLON reduce production postfix_expression -> postfix_expression DOT record_label
-- On CASE reduce production postfix_expression -> postfix_expression DOT record_label
-- On BY reduce production postfix_expression -> postfix_expression DOT record_label
-- On BARRBRACE reduce production postfix_expression -> postfix_expression DOT record_label
-- On BARBAR reduce production postfix_expression -> postfix_expression DOT record_label
-- On BANG reduce production postfix_expression -> postfix_expression DOT record_label
-- On AS reduce production postfix_expression -> postfix_expression DOT record_label
-- On AMPAMP reduce production postfix_expression -> postfix_expression DOT record_label

State 604:
postfix_expression -> postfix_expression arg_spec . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production postfix_expression -> postfix_expression arg_spec
-- On VBAR reduce production postfix_expression -> postfix_expression arg_spec
-- On VALUES reduce production postfix_expression -> postfix_expression arg_spec
-- On TABLEKEYS reduce production postfix_expression -> postfix_expression arg_spec
-- On SEMICOLON reduce production postfix_expression -> postfix_expression arg_spec
-- On RPAREN reduce production postfix_expression -> postfix_expression arg_spec
-- On RETURNING reduce production postfix_expression -> postfix_expression arg_spec
-- On RBRACKET reduce production postfix_expression -> postfix_expression arg_spec
-- On RBRACE reduce production postfix_expression -> postfix_expression arg_spec
-- On RARROW reduce production postfix_expression -> postfix_expression arg_spec
-- On OTHERWISE reduce production postfix_expression -> postfix_expression arg_spec
-- On ON reduce production postfix_expression -> postfix_expression arg_spec
-- On MINUSDOT reduce production postfix_expression -> postfix_expression arg_spec
-- On MINUS reduce production postfix_expression -> postfix_expression arg_spec
-- On LPAREN reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR9 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR8 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR7 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR6 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR5 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR4 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR3 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR2 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR1 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR0 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL9 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL8 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL7 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL6 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL5 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL4 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL3 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL2 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL1 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL0 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX9 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX8 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX7 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX6 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX5 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX4 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX3 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX2 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX1 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX0 reduce production postfix_expression -> postfix_expression arg_spec
-- On FROM reduce production postfix_expression -> postfix_expression arg_spec
-- On FATRARROW reduce production postfix_expression -> postfix_expression arg_spec
-- On EQUALSTILDE reduce production postfix_expression -> postfix_expression arg_spec
-- On END reduce production postfix_expression -> postfix_expression arg_spec
-- On ELSE reduce production postfix_expression -> postfix_expression arg_spec
-- On DOTDOT reduce production postfix_expression -> postfix_expression arg_spec
-- On DOT reduce production postfix_expression -> postfix_expression arg_spec
-- On DELETE_LEFT reduce production postfix_expression -> postfix_expression arg_spec
-- On DELETE reduce production postfix_expression -> postfix_expression arg_spec
-- On DEFAULT reduce production postfix_expression -> postfix_expression arg_spec
-- On COMMA reduce production postfix_expression -> postfix_expression arg_spec
-- On COLONCOLON reduce production postfix_expression -> postfix_expression arg_spec
-- On COLON reduce production postfix_expression -> postfix_expression arg_spec
-- On CASE reduce production postfix_expression -> postfix_expression arg_spec
-- On BY reduce production postfix_expression -> postfix_expression arg_spec
-- On BARRBRACE reduce production postfix_expression -> postfix_expression arg_spec
-- On BARBAR reduce production postfix_expression -> postfix_expression arg_spec
-- On BANG reduce production postfix_expression -> postfix_expression arg_spec
-- On AS reduce production postfix_expression -> postfix_expression arg_spec
-- On AMPAMP reduce production postfix_expression -> postfix_expression arg_spec

State 605:
infixr_9 -> unary_expression INFIXR9 infixr_9 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On VBAR reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On VALUES reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On TABLEKEYS reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On SEMICOLON reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On RPAREN reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On RETURNING reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On RBRACKET reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On RBRACE reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On RARROW reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On OTHERWISE reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On ON reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On MINUSDOT reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On MINUS reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR8 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR7 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR6 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR5 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR4 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR3 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR2 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR1 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR0 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL9 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL8 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL7 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL6 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL5 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL4 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL3 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL2 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL1 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL0 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX8 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX7 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX6 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX5 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX4 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX3 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX2 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX1 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX0 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On FROM reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On FATRARROW reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On EQUALSTILDE reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On END reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On ELSE reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On DOTDOT reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On DELETE_LEFT reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On DELETE reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On DEFAULT reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On COMMA reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On COLONCOLON reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On COLON reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On CASE reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On BY reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On BARRBRACE reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On BARBAR reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On BANG reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On AS reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On AMPAMP reduce production infixr_9 -> unary_expression INFIXR9 infixr_9

State 606:
primary_expression -> handler_depth . optional_computation_parameter handler_parameterization [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LBRACKET shift to state 495
-- On optional_computation_parameter shift to state 607
-- On LPAREN reduce production optional_computation_parameter ->
-- On LBRACE reduce production optional_computation_parameter ->

State 607:
primary_expression -> handler_depth optional_computation_parameter . handler_parameterization [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LPAREN shift to state 407
-- On LBRACE shift to state 500
-- On multi_args shift to state 411
-- On handler_parameterization shift to state 608
-- On handler_body shift to state 506
-- On arg_lists shift to state 507

State 608:
primary_expression -> handler_depth optional_computation_parameter handler_parameterization . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On VBAR reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On VALUES reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On TABLEKEYS reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On SEMICOLON reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On RPAREN reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On RETURNING reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On RBRACKET reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On RBRACE reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On RARROW reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On POSTFIXOP reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On OTHERWISE reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On ON reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On MINUSDOT reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On MINUS reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On LPAREN reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXR9 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXR8 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXR7 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXR6 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXR5 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXR4 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXR3 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXR2 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXR1 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXR0 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXL9 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXL8 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXL7 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXL6 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXL5 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXL4 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXL3 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXL2 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXL1 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIXL0 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIX9 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIX8 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIX7 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIX6 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIX5 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIX4 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIX3 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIX2 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIX1 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On INFIX0 reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On FROM reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On FATRARROW reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On EQUALSTILDE reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On END reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On ELSE reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On DOTDOT reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On DOT reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On DELETE_LEFT reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On DELETE reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On DEFAULT reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On COMMA reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On COLONCOLON reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On COLON reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On CASE reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On BY reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On BARRBRACE reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On BARBAR reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On BANG reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On AS reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization
-- On AMPAMP reduce production primary_expression -> handler_depth optional_computation_parameter handler_parameterization

State 609:
unary_expression -> constructor_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production unary_expression -> constructor_expression
-- On VBAR reduce production unary_expression -> constructor_expression
-- On VALUES reduce production unary_expression -> constructor_expression
-- On TABLEKEYS reduce production unary_expression -> constructor_expression
-- On SEMICOLON reduce production unary_expression -> constructor_expression
-- On RPAREN reduce production unary_expression -> constructor_expression
-- On RETURNING reduce production unary_expression -> constructor_expression
-- On RBRACKET reduce production unary_expression -> constructor_expression
-- On RBRACE reduce production unary_expression -> constructor_expression
-- On RARROW reduce production unary_expression -> constructor_expression
-- On OTHERWISE reduce production unary_expression -> constructor_expression
-- On ON reduce production unary_expression -> constructor_expression
-- On MINUSDOT reduce production unary_expression -> constructor_expression
-- On MINUS reduce production unary_expression -> constructor_expression
-- On INFIXR9 reduce production unary_expression -> constructor_expression
-- On INFIXR8 reduce production unary_expression -> constructor_expression
-- On INFIXR7 reduce production unary_expression -> constructor_expression
-- On INFIXR6 reduce production unary_expression -> constructor_expression
-- On INFIXR5 reduce production unary_expression -> constructor_expression
-- On INFIXR4 reduce production unary_expression -> constructor_expression
-- On INFIXR3 reduce production unary_expression -> constructor_expression
-- On INFIXR2 reduce production unary_expression -> constructor_expression
-- On INFIXR1 reduce production unary_expression -> constructor_expression
-- On INFIXR0 reduce production unary_expression -> constructor_expression
-- On INFIXL9 reduce production unary_expression -> constructor_expression
-- On INFIXL8 reduce production unary_expression -> constructor_expression
-- On INFIXL7 reduce production unary_expression -> constructor_expression
-- On INFIXL6 reduce production unary_expression -> constructor_expression
-- On INFIXL5 reduce production unary_expression -> constructor_expression
-- On INFIXL4 reduce production unary_expression -> constructor_expression
-- On INFIXL3 reduce production unary_expression -> constructor_expression
-- On INFIXL2 reduce production unary_expression -> constructor_expression
-- On INFIXL1 reduce production unary_expression -> constructor_expression
-- On INFIXL0 reduce production unary_expression -> constructor_expression
-- On INFIX9 reduce production unary_expression -> constructor_expression
-- On INFIX8 reduce production unary_expression -> constructor_expression
-- On INFIX7 reduce production unary_expression -> constructor_expression
-- On INFIX6 reduce production unary_expression -> constructor_expression
-- On INFIX5 reduce production unary_expression -> constructor_expression
-- On INFIX4 reduce production unary_expression -> constructor_expression
-- On INFIX3 reduce production unary_expression -> constructor_expression
-- On INFIX2 reduce production unary_expression -> constructor_expression
-- On INFIX1 reduce production unary_expression -> constructor_expression
-- On INFIX0 reduce production unary_expression -> constructor_expression
-- On FROM reduce production unary_expression -> constructor_expression
-- On FATRARROW reduce production unary_expression -> constructor_expression
-- On EQUALSTILDE reduce production unary_expression -> constructor_expression
-- On END reduce production unary_expression -> constructor_expression
-- On ELSE reduce production unary_expression -> constructor_expression
-- On DOTDOT reduce production unary_expression -> constructor_expression
-- On DELETE_LEFT reduce production unary_expression -> constructor_expression
-- On DELETE reduce production unary_expression -> constructor_expression
-- On DEFAULT reduce production unary_expression -> constructor_expression
-- On COMMA reduce production unary_expression -> constructor_expression
-- On COLONCOLON reduce production unary_expression -> constructor_expression
-- On COLON reduce production unary_expression -> constructor_expression
-- On CASE reduce production unary_expression -> constructor_expression
-- On BY reduce production unary_expression -> constructor_expression
-- On BARRBRACE reduce production unary_expression -> constructor_expression
-- On BARBAR reduce production unary_expression -> constructor_expression
-- On BANG reduce production unary_expression -> constructor_expression
-- On AS reduce production unary_expression -> constructor_expression
-- On AMPAMP reduce production unary_expression -> constructor_expression

State 610:
postfix_expression -> block . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production postfix_expression -> block
-- On VBAR reduce production postfix_expression -> block
-- On VALUES reduce production postfix_expression -> block
-- On TABLEKEYS reduce production postfix_expression -> block
-- On SEMICOLON reduce production postfix_expression -> block
-- On RPAREN reduce production postfix_expression -> block
-- On RETURNING reduce production postfix_expression -> block
-- On RBRACKET reduce production postfix_expression -> block
-- On RBRACE reduce production postfix_expression -> block
-- On RARROW reduce production postfix_expression -> block
-- On OTHERWISE reduce production postfix_expression -> block
-- On ON reduce production postfix_expression -> block
-- On MINUSDOT reduce production postfix_expression -> block
-- On MINUS reduce production postfix_expression -> block
-- On LPAREN reduce production postfix_expression -> block
-- On INFIXR9 reduce production postfix_expression -> block
-- On INFIXR8 reduce production postfix_expression -> block
-- On INFIXR7 reduce production postfix_expression -> block
-- On INFIXR6 reduce production postfix_expression -> block
-- On INFIXR5 reduce production postfix_expression -> block
-- On INFIXR4 reduce production postfix_expression -> block
-- On INFIXR3 reduce production postfix_expression -> block
-- On INFIXR2 reduce production postfix_expression -> block
-- On INFIXR1 reduce production postfix_expression -> block
-- On INFIXR0 reduce production postfix_expression -> block
-- On INFIXL9 reduce production postfix_expression -> block
-- On INFIXL8 reduce production postfix_expression -> block
-- On INFIXL7 reduce production postfix_expression -> block
-- On INFIXL6 reduce production postfix_expression -> block
-- On INFIXL5 reduce production postfix_expression -> block
-- On INFIXL4 reduce production postfix_expression -> block
-- On INFIXL3 reduce production postfix_expression -> block
-- On INFIXL2 reduce production postfix_expression -> block
-- On INFIXL1 reduce production postfix_expression -> block
-- On INFIXL0 reduce production postfix_expression -> block
-- On INFIX9 reduce production postfix_expression -> block
-- On INFIX8 reduce production postfix_expression -> block
-- On INFIX7 reduce production postfix_expression -> block
-- On INFIX6 reduce production postfix_expression -> block
-- On INFIX5 reduce production postfix_expression -> block
-- On INFIX4 reduce production postfix_expression -> block
-- On INFIX3 reduce production postfix_expression -> block
-- On INFIX2 reduce production postfix_expression -> block
-- On INFIX1 reduce production postfix_expression -> block
-- On INFIX0 reduce production postfix_expression -> block
-- On FROM reduce production postfix_expression -> block
-- On FATRARROW reduce production postfix_expression -> block
-- On EQUALSTILDE reduce production postfix_expression -> block
-- On END reduce production postfix_expression -> block
-- On ELSE reduce production postfix_expression -> block
-- On DOTDOT reduce production postfix_expression -> block
-- On DOT reduce production postfix_expression -> block
-- On DELETE_LEFT reduce production postfix_expression -> block
-- On DELETE reduce production postfix_expression -> block
-- On DEFAULT reduce production postfix_expression -> block
-- On COMMA reduce production postfix_expression -> block
-- On COLONCOLON reduce production postfix_expression -> block
-- On COLON reduce production postfix_expression -> block
-- On CASE reduce production postfix_expression -> block
-- On BY reduce production postfix_expression -> block
-- On BARRBRACE reduce production postfix_expression -> block
-- On BARBAR reduce production postfix_expression -> block
-- On BANG reduce production postfix_expression -> block
-- On AS reduce production postfix_expression -> block
-- On AMPAMP reduce production postfix_expression -> block

State 611:
primary_expression -> atomic_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production primary_expression -> atomic_expression
-- On VBAR reduce production primary_expression -> atomic_expression
-- On VALUES reduce production primary_expression -> atomic_expression
-- On TABLEKEYS reduce production primary_expression -> atomic_expression
-- On SEMICOLON reduce production primary_expression -> atomic_expression
-- On RPAREN reduce production primary_expression -> atomic_expression
-- On RETURNING reduce production primary_expression -> atomic_expression
-- On RBRACKET reduce production primary_expression -> atomic_expression
-- On RBRACE reduce production primary_expression -> atomic_expression
-- On RARROW reduce production primary_expression -> atomic_expression
-- On POSTFIXOP reduce production primary_expression -> atomic_expression
-- On OTHERWISE reduce production primary_expression -> atomic_expression
-- On ON reduce production primary_expression -> atomic_expression
-- On MINUSDOT reduce production primary_expression -> atomic_expression
-- On MINUS reduce production primary_expression -> atomic_expression
-- On LPAREN reduce production primary_expression -> atomic_expression
-- On INFIXR9 reduce production primary_expression -> atomic_expression
-- On INFIXR8 reduce production primary_expression -> atomic_expression
-- On INFIXR7 reduce production primary_expression -> atomic_expression
-- On INFIXR6 reduce production primary_expression -> atomic_expression
-- On INFIXR5 reduce production primary_expression -> atomic_expression
-- On INFIXR4 reduce production primary_expression -> atomic_expression
-- On INFIXR3 reduce production primary_expression -> atomic_expression
-- On INFIXR2 reduce production primary_expression -> atomic_expression
-- On INFIXR1 reduce production primary_expression -> atomic_expression
-- On INFIXR0 reduce production primary_expression -> atomic_expression
-- On INFIXL9 reduce production primary_expression -> atomic_expression
-- On INFIXL8 reduce production primary_expression -> atomic_expression
-- On INFIXL7 reduce production primary_expression -> atomic_expression
-- On INFIXL6 reduce production primary_expression -> atomic_expression
-- On INFIXL5 reduce production primary_expression -> atomic_expression
-- On INFIXL4 reduce production primary_expression -> atomic_expression
-- On INFIXL3 reduce production primary_expression -> atomic_expression
-- On INFIXL2 reduce production primary_expression -> atomic_expression
-- On INFIXL1 reduce production primary_expression -> atomic_expression
-- On INFIXL0 reduce production primary_expression -> atomic_expression
-- On INFIX9 reduce production primary_expression -> atomic_expression
-- On INFIX8 reduce production primary_expression -> atomic_expression
-- On INFIX7 reduce production primary_expression -> atomic_expression
-- On INFIX6 reduce production primary_expression -> atomic_expression
-- On INFIX5 reduce production primary_expression -> atomic_expression
-- On INFIX4 reduce production primary_expression -> atomic_expression
-- On INFIX3 reduce production primary_expression -> atomic_expression
-- On INFIX2 reduce production primary_expression -> atomic_expression
-- On INFIX1 reduce production primary_expression -> atomic_expression
-- On INFIX0 reduce production primary_expression -> atomic_expression
-- On FROM reduce production primary_expression -> atomic_expression
-- On FATRARROW reduce production primary_expression -> atomic_expression
-- On EQUALSTILDE reduce production primary_expression -> atomic_expression
-- On END reduce production primary_expression -> atomic_expression
-- On ELSE reduce production primary_expression -> atomic_expression
-- On DOTDOT reduce production primary_expression -> atomic_expression
-- On DOT reduce production primary_expression -> atomic_expression
-- On DELETE_LEFT reduce production primary_expression -> atomic_expression
-- On DELETE reduce production primary_expression -> atomic_expression
-- On DEFAULT reduce production primary_expression -> atomic_expression
-- On COMMA reduce production primary_expression -> atomic_expression
-- On COLONCOLON reduce production primary_expression -> atomic_expression
-- On COLON reduce production primary_expression -> atomic_expression
-- On CASE reduce production primary_expression -> atomic_expression
-- On BY reduce production primary_expression -> atomic_expression
-- On BARRBRACE reduce production primary_expression -> atomic_expression
-- On BARBAR reduce production primary_expression -> atomic_expression
-- On BANG reduce production primary_expression -> atomic_expression
-- On AS reduce production primary_expression -> atomic_expression
-- On AMPAMP reduce production primary_expression -> atomic_expression

State 612:
infixr_9 -> unary_expression INFIX9 . unary_expression [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 613
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 613:
infixr_9 -> unary_expression INFIX9 unary_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On VBAR reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On VALUES reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On TABLEKEYS reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On SEMICOLON reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On RPAREN reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On RETURNING reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On RBRACKET reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On RBRACE reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On RARROW reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On OTHERWISE reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On ON reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On MINUSDOT reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On MINUS reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR8 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR7 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR6 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR5 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR4 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR3 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR2 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR1 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR0 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL9 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL8 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL7 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL6 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL5 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL4 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL3 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL2 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL1 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL0 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX8 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX7 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX6 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX5 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX4 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX3 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX2 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX1 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX0 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On FROM reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On FATRARROW reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On EQUALSTILDE reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On END reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On ELSE reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On DOTDOT reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On DELETE_LEFT reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On DELETE reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On DEFAULT reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On COMMA reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On COLONCOLON reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On COLON reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On CASE reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On BY reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On BARRBRACE reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On BARBAR reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On BANG reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On AS reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On AMPAMP reduce production infixr_9 -> unary_expression INFIX9 unary_expression

State 614:
db_expression -> typed_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
typed_expression -> typed_expression . COLON datatype [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE AS ]
typed_expression -> typed_expression . COLON datatype LARROW datatype [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE AS ]
-- On COLON shift to state 615
-- On WITH reduce production db_expression -> typed_expression
-- On VBAR reduce production db_expression -> typed_expression
-- On VALUES reduce production db_expression -> typed_expression
-- On TABLEKEYS reduce production db_expression -> typed_expression
-- On SEMICOLON reduce production db_expression -> typed_expression
-- On RPAREN reduce production db_expression -> typed_expression
-- On RETURNING reduce production db_expression -> typed_expression
-- On RBRACKET reduce production db_expression -> typed_expression
-- On RBRACE reduce production db_expression -> typed_expression
-- On OTHERWISE reduce production db_expression -> typed_expression
-- On ON reduce production db_expression -> typed_expression
-- On FROM reduce production db_expression -> typed_expression
-- On END reduce production db_expression -> typed_expression
-- On ELSE reduce production db_expression -> typed_expression
-- On DOTDOT reduce production db_expression -> typed_expression
-- On DELETE_LEFT reduce production db_expression -> typed_expression
-- On DELETE reduce production db_expression -> typed_expression
-- On DEFAULT reduce production db_expression -> typed_expression
-- On COMMA reduce production db_expression -> typed_expression
-- On CASE reduce production db_expression -> typed_expression
-- On BY reduce production db_expression -> typed_expression
-- On BARRBRACE reduce production db_expression -> typed_expression
-- On AS reduce production db_expression -> typed_expression

State 615:
typed_expression -> typed_expression COLON . datatype [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE AS ]
typed_expression -> typed_expression COLON . datatype LARROW datatype [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 616

State 616:
typed_expression -> typed_expression COLON datatype . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE AS ]
typed_expression -> typed_expression COLON datatype . LARROW datatype [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE AS ]
-- On LARROW shift to state 617
-- On WITH reduce production typed_expression -> typed_expression COLON datatype
-- On VBAR reduce production typed_expression -> typed_expression COLON datatype
-- On VALUES reduce production typed_expression -> typed_expression COLON datatype
-- On TABLEKEYS reduce production typed_expression -> typed_expression COLON datatype
-- On SEMICOLON reduce production typed_expression -> typed_expression COLON datatype
-- On RPAREN reduce production typed_expression -> typed_expression COLON datatype
-- On RETURNING reduce production typed_expression -> typed_expression COLON datatype
-- On RBRACKET reduce production typed_expression -> typed_expression COLON datatype
-- On RBRACE reduce production typed_expression -> typed_expression COLON datatype
-- On OTHERWISE reduce production typed_expression -> typed_expression COLON datatype
-- On ON reduce production typed_expression -> typed_expression COLON datatype
-- On FROM reduce production typed_expression -> typed_expression COLON datatype
-- On END reduce production typed_expression -> typed_expression COLON datatype
-- On ELSE reduce production typed_expression -> typed_expression COLON datatype
-- On DOTDOT reduce production typed_expression -> typed_expression COLON datatype
-- On DELETE_LEFT reduce production typed_expression -> typed_expression COLON datatype
-- On DELETE reduce production typed_expression -> typed_expression COLON datatype
-- On DEFAULT reduce production typed_expression -> typed_expression COLON datatype
-- On COMMA reduce production typed_expression -> typed_expression COLON datatype
-- On COLON reduce production typed_expression -> typed_expression COLON datatype
-- On CASE reduce production typed_expression -> typed_expression COLON datatype
-- On BY reduce production typed_expression -> typed_expression COLON datatype
-- On BARRBRACE reduce production typed_expression -> typed_expression COLON datatype
-- On AS reduce production typed_expression -> typed_expression COLON datatype

State 617:
typed_expression -> typed_expression COLON datatype LARROW . datatype [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 618

State 618:
typed_expression -> typed_expression COLON datatype LARROW datatype . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE AS ]
-- On WITH reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On VBAR reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On VALUES reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On TABLEKEYS reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On SEMICOLON reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On RPAREN reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On RETURNING reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On RBRACKET reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On RBRACE reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On OTHERWISE reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On ON reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On FROM reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On END reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On ELSE reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On DOTDOT reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On DELETE_LEFT reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On DELETE reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On DEFAULT reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On COMMA reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On COLON reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On CASE reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On BY reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On BARRBRACE reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On AS reduce production typed_expression -> typed_expression COLON datatype LARROW datatype

State 619:
database_expression -> table_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production database_expression -> table_expression
-- On VBAR reduce production database_expression -> table_expression
-- On VALUES reduce production database_expression -> table_expression
-- On TABLEKEYS reduce production database_expression -> table_expression
-- On SEMICOLON reduce production database_expression -> table_expression
-- On RPAREN reduce production database_expression -> table_expression
-- On RBRACKET reduce production database_expression -> table_expression
-- On RBRACE reduce production database_expression -> table_expression
-- On OTHERWISE reduce production database_expression -> table_expression
-- On ON reduce production database_expression -> table_expression
-- On FROM reduce production database_expression -> table_expression
-- On END reduce production database_expression -> table_expression
-- On ELSE reduce production database_expression -> table_expression
-- On DOTDOT reduce production database_expression -> table_expression
-- On DELETE_LEFT reduce production database_expression -> table_expression
-- On DELETE reduce production database_expression -> table_expression
-- On DEFAULT reduce production database_expression -> table_expression
-- On COMMA reduce production database_expression -> table_expression
-- On CASE reduce production database_expression -> table_expression
-- On BY reduce production database_expression -> table_expression
-- On BARRBRACE reduce production database_expression -> table_expression
-- On AS reduce production database_expression -> table_expression

State 620:
conditional_expression -> session_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production conditional_expression -> session_expression
-- On VBAR reduce production conditional_expression -> session_expression
-- On VALUES reduce production conditional_expression -> session_expression
-- On TABLEKEYS reduce production conditional_expression -> session_expression
-- On SEMICOLON reduce production conditional_expression -> session_expression
-- On RPAREN reduce production conditional_expression -> session_expression
-- On RBRACKET reduce production conditional_expression -> session_expression
-- On RBRACE reduce production conditional_expression -> session_expression
-- On OTHERWISE reduce production conditional_expression -> session_expression
-- On ON reduce production conditional_expression -> session_expression
-- On FROM reduce production conditional_expression -> session_expression
-- On END reduce production conditional_expression -> session_expression
-- On ELSE reduce production conditional_expression -> session_expression
-- On DOTDOT reduce production conditional_expression -> session_expression
-- On DELETE_LEFT reduce production conditional_expression -> session_expression
-- On DELETE reduce production conditional_expression -> session_expression
-- On DEFAULT reduce production conditional_expression -> session_expression
-- On COMMA reduce production conditional_expression -> session_expression
-- On CASE reduce production conditional_expression -> session_expression
-- On BY reduce production conditional_expression -> session_expression
-- On BARRBRACE reduce production conditional_expression -> session_expression
-- On AS reduce production conditional_expression -> session_expression

State 621:
logical_expression -> logical_expression . BARBAR infixl_0 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
logical_expression -> logical_expression . AMPAMP infixl_0 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
typed_expression -> logical_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE AS ]
-- On BARBAR shift to state 622
-- On AMPAMP shift to state 741
-- On WITH reduce production typed_expression -> logical_expression
-- On VBAR reduce production typed_expression -> logical_expression
-- On VALUES reduce production typed_expression -> logical_expression
-- On TABLEKEYS reduce production typed_expression -> logical_expression
-- On SEMICOLON reduce production typed_expression -> logical_expression
-- On RPAREN reduce production typed_expression -> logical_expression
-- On RETURNING reduce production typed_expression -> logical_expression
-- On RBRACKET reduce production typed_expression -> logical_expression
-- On RBRACE reduce production typed_expression -> logical_expression
-- On OTHERWISE reduce production typed_expression -> logical_expression
-- On ON reduce production typed_expression -> logical_expression
-- On FROM reduce production typed_expression -> logical_expression
-- On END reduce production typed_expression -> logical_expression
-- On ELSE reduce production typed_expression -> logical_expression
-- On DOTDOT reduce production typed_expression -> logical_expression
-- On DELETE_LEFT reduce production typed_expression -> logical_expression
-- On DELETE reduce production typed_expression -> logical_expression
-- On DEFAULT reduce production typed_expression -> logical_expression
-- On COMMA reduce production typed_expression -> logical_expression
-- On COLON reduce production typed_expression -> logical_expression
-- On CASE reduce production typed_expression -> logical_expression
-- On BY reduce production typed_expression -> logical_expression
-- On BARRBRACE reduce production typed_expression -> logical_expression
-- On AS reduce production typed_expression -> logical_expression

State 622:
logical_expression -> logical_expression BARBAR . infixl_0 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 738
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 623:
infixl_9 -> infixr_9 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production infixl_9 -> infixr_9
-- On VBAR reduce production infixl_9 -> infixr_9
-- On VALUES reduce production infixl_9 -> infixr_9
-- On TABLEKEYS reduce production infixl_9 -> infixr_9
-- On SEMICOLON reduce production infixl_9 -> infixr_9
-- On RPAREN reduce production infixl_9 -> infixr_9
-- On RETURNING reduce production infixl_9 -> infixr_9
-- On RBRACKET reduce production infixl_9 -> infixr_9
-- On RBRACE reduce production infixl_9 -> infixr_9
-- On RARROW reduce production infixl_9 -> infixr_9
-- On OTHERWISE reduce production infixl_9 -> infixr_9
-- On ON reduce production infixl_9 -> infixr_9
-- On MINUSDOT reduce production infixl_9 -> infixr_9
-- On MINUS reduce production infixl_9 -> infixr_9
-- On INFIXR8 reduce production infixl_9 -> infixr_9
-- On INFIXR7 reduce production infixl_9 -> infixr_9
-- On INFIXR6 reduce production infixl_9 -> infixr_9
-- On INFIXR5 reduce production infixl_9 -> infixr_9
-- On INFIXR4 reduce production infixl_9 -> infixr_9
-- On INFIXR3 reduce production infixl_9 -> infixr_9
-- On INFIXR2 reduce production infixl_9 -> infixr_9
-- On INFIXR1 reduce production infixl_9 -> infixr_9
-- On INFIXR0 reduce production infixl_9 -> infixr_9
-- On INFIXL9 reduce production infixl_9 -> infixr_9
-- On INFIXL8 reduce production infixl_9 -> infixr_9
-- On INFIXL7 reduce production infixl_9 -> infixr_9
-- On INFIXL6 reduce production infixl_9 -> infixr_9
-- On INFIXL5 reduce production infixl_9 -> infixr_9
-- On INFIXL4 reduce production infixl_9 -> infixr_9
-- On INFIXL3 reduce production infixl_9 -> infixr_9
-- On INFIXL2 reduce production infixl_9 -> infixr_9
-- On INFIXL1 reduce production infixl_9 -> infixr_9
-- On INFIXL0 reduce production infixl_9 -> infixr_9
-- On INFIX8 reduce production infixl_9 -> infixr_9
-- On INFIX7 reduce production infixl_9 -> infixr_9
-- On INFIX6 reduce production infixl_9 -> infixr_9
-- On INFIX5 reduce production infixl_9 -> infixr_9
-- On INFIX4 reduce production infixl_9 -> infixr_9
-- On INFIX3 reduce production infixl_9 -> infixr_9
-- On INFIX2 reduce production infixl_9 -> infixr_9
-- On INFIX1 reduce production infixl_9 -> infixr_9
-- On INFIX0 reduce production infixl_9 -> infixr_9
-- On FROM reduce production infixl_9 -> infixr_9
-- On FATRARROW reduce production infixl_9 -> infixr_9
-- On EQUALSTILDE reduce production infixl_9 -> infixr_9
-- On END reduce production infixl_9 -> infixr_9
-- On ELSE reduce production infixl_9 -> infixr_9
-- On DOTDOT reduce production infixl_9 -> infixr_9
-- On DELETE_LEFT reduce production infixl_9 -> infixr_9
-- On DELETE reduce production infixl_9 -> infixr_9
-- On DEFAULT reduce production infixl_9 -> infixr_9
-- On COMMA reduce production infixl_9 -> infixr_9
-- On COLONCOLON reduce production infixl_9 -> infixr_9
-- On COLON reduce production infixl_9 -> infixr_9
-- On CASE reduce production infixl_9 -> infixr_9
-- On BY reduce production infixl_9 -> infixr_9
-- On BARRBRACE reduce production infixl_9 -> infixr_9
-- On BARBAR reduce production infixl_9 -> infixr_9
-- On BANG reduce production infixl_9 -> infixr_9
-- On AS reduce production infixl_9 -> infixr_9
-- On AMPAMP reduce production infixl_9 -> infixr_9

State 624:
infixl_8 -> infixr_8 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production infixl_8 -> infixr_8
-- On VBAR reduce production infixl_8 -> infixr_8
-- On VALUES reduce production infixl_8 -> infixr_8
-- On TABLEKEYS reduce production infixl_8 -> infixr_8
-- On SEMICOLON reduce production infixl_8 -> infixr_8
-- On RPAREN reduce production infixl_8 -> infixr_8
-- On RETURNING reduce production infixl_8 -> infixr_8
-- On RBRACKET reduce production infixl_8 -> infixr_8
-- On RBRACE reduce production infixl_8 -> infixr_8
-- On RARROW reduce production infixl_8 -> infixr_8
-- On OTHERWISE reduce production infixl_8 -> infixr_8
-- On ON reduce production infixl_8 -> infixr_8
-- On MINUSDOT reduce production infixl_8 -> infixr_8
-- On MINUS reduce production infixl_8 -> infixr_8
-- On INFIXR7 reduce production infixl_8 -> infixr_8
-- On INFIXR6 reduce production infixl_8 -> infixr_8
-- On INFIXR5 reduce production infixl_8 -> infixr_8
-- On INFIXR4 reduce production infixl_8 -> infixr_8
-- On INFIXR3 reduce production infixl_8 -> infixr_8
-- On INFIXR2 reduce production infixl_8 -> infixr_8
-- On INFIXR1 reduce production infixl_8 -> infixr_8
-- On INFIXR0 reduce production infixl_8 -> infixr_8
-- On INFIXL8 reduce production infixl_8 -> infixr_8
-- On INFIXL7 reduce production infixl_8 -> infixr_8
-- On INFIXL6 reduce production infixl_8 -> infixr_8
-- On INFIXL5 reduce production infixl_8 -> infixr_8
-- On INFIXL4 reduce production infixl_8 -> infixr_8
-- On INFIXL3 reduce production infixl_8 -> infixr_8
-- On INFIXL2 reduce production infixl_8 -> infixr_8
-- On INFIXL1 reduce production infixl_8 -> infixr_8
-- On INFIXL0 reduce production infixl_8 -> infixr_8
-- On INFIX7 reduce production infixl_8 -> infixr_8
-- On INFIX6 reduce production infixl_8 -> infixr_8
-- On INFIX5 reduce production infixl_8 -> infixr_8
-- On INFIX4 reduce production infixl_8 -> infixr_8
-- On INFIX3 reduce production infixl_8 -> infixr_8
-- On INFIX2 reduce production infixl_8 -> infixr_8
-- On INFIX1 reduce production infixl_8 -> infixr_8
-- On INFIX0 reduce production infixl_8 -> infixr_8
-- On FROM reduce production infixl_8 -> infixr_8
-- On FATRARROW reduce production infixl_8 -> infixr_8
-- On EQUALSTILDE reduce production infixl_8 -> infixr_8
-- On END reduce production infixl_8 -> infixr_8
-- On ELSE reduce production infixl_8 -> infixr_8
-- On DOTDOT reduce production infixl_8 -> infixr_8
-- On DELETE_LEFT reduce production infixl_8 -> infixr_8
-- On DELETE reduce production infixl_8 -> infixr_8
-- On DEFAULT reduce production infixl_8 -> infixr_8
-- On COMMA reduce production infixl_8 -> infixr_8
-- On COLON reduce production infixl_8 -> infixr_8
-- On CASE reduce production infixl_8 -> infixr_8
-- On BY reduce production infixl_8 -> infixr_8
-- On BARRBRACE reduce production infixl_8 -> infixr_8
-- On BARBAR reduce production infixl_8 -> infixr_8
-- On BANG reduce production infixl_8 -> infixr_8
-- On AS reduce production infixl_8 -> infixr_8
-- On AMPAMP reduce production infixl_8 -> infixr_8

State 625:
infixl_7 -> infixr_7 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production infixl_7 -> infixr_7
-- On VBAR reduce production infixl_7 -> infixr_7
-- On VALUES reduce production infixl_7 -> infixr_7
-- On TABLEKEYS reduce production infixl_7 -> infixr_7
-- On SEMICOLON reduce production infixl_7 -> infixr_7
-- On RPAREN reduce production infixl_7 -> infixr_7
-- On RETURNING reduce production infixl_7 -> infixr_7
-- On RBRACKET reduce production infixl_7 -> infixr_7
-- On RBRACE reduce production infixl_7 -> infixr_7
-- On RARROW reduce production infixl_7 -> infixr_7
-- On OTHERWISE reduce production infixl_7 -> infixr_7
-- On ON reduce production infixl_7 -> infixr_7
-- On MINUSDOT reduce production infixl_7 -> infixr_7
-- On MINUS reduce production infixl_7 -> infixr_7
-- On INFIXR6 reduce production infixl_7 -> infixr_7
-- On INFIXR5 reduce production infixl_7 -> infixr_7
-- On INFIXR4 reduce production infixl_7 -> infixr_7
-- On INFIXR3 reduce production infixl_7 -> infixr_7
-- On INFIXR2 reduce production infixl_7 -> infixr_7
-- On INFIXR1 reduce production infixl_7 -> infixr_7
-- On INFIXR0 reduce production infixl_7 -> infixr_7
-- On INFIXL7 reduce production infixl_7 -> infixr_7
-- On INFIXL6 reduce production infixl_7 -> infixr_7
-- On INFIXL5 reduce production infixl_7 -> infixr_7
-- On INFIXL4 reduce production infixl_7 -> infixr_7
-- On INFIXL3 reduce production infixl_7 -> infixr_7
-- On INFIXL2 reduce production infixl_7 -> infixr_7
-- On INFIXL1 reduce production infixl_7 -> infixr_7
-- On INFIXL0 reduce production infixl_7 -> infixr_7
-- On INFIX6 reduce production infixl_7 -> infixr_7
-- On INFIX5 reduce production infixl_7 -> infixr_7
-- On INFIX4 reduce production infixl_7 -> infixr_7
-- On INFIX3 reduce production infixl_7 -> infixr_7
-- On INFIX2 reduce production infixl_7 -> infixr_7
-- On INFIX1 reduce production infixl_7 -> infixr_7
-- On INFIX0 reduce production infixl_7 -> infixr_7
-- On FROM reduce production infixl_7 -> infixr_7
-- On FATRARROW reduce production infixl_7 -> infixr_7
-- On EQUALSTILDE reduce production infixl_7 -> infixr_7
-- On END reduce production infixl_7 -> infixr_7
-- On ELSE reduce production infixl_7 -> infixr_7
-- On DOTDOT reduce production infixl_7 -> infixr_7
-- On DELETE_LEFT reduce production infixl_7 -> infixr_7
-- On DELETE reduce production infixl_7 -> infixr_7
-- On DEFAULT reduce production infixl_7 -> infixr_7
-- On COMMA reduce production infixl_7 -> infixr_7
-- On COLON reduce production infixl_7 -> infixr_7
-- On CASE reduce production infixl_7 -> infixr_7
-- On BY reduce production infixl_7 -> infixr_7
-- On BARRBRACE reduce production infixl_7 -> infixr_7
-- On BARBAR reduce production infixl_7 -> infixr_7
-- On BANG reduce production infixl_7 -> infixr_7
-- On AS reduce production infixl_7 -> infixr_7
-- On AMPAMP reduce production infixl_7 -> infixr_7

State 626:
infixl_6 -> infixr_6 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production infixl_6 -> infixr_6
-- On VBAR reduce production infixl_6 -> infixr_6
-- On VALUES reduce production infixl_6 -> infixr_6
-- On TABLEKEYS reduce production infixl_6 -> infixr_6
-- On SEMICOLON reduce production infixl_6 -> infixr_6
-- On RPAREN reduce production infixl_6 -> infixr_6
-- On RETURNING reduce production infixl_6 -> infixr_6
-- On RBRACKET reduce production infixl_6 -> infixr_6
-- On RBRACE reduce production infixl_6 -> infixr_6
-- On RARROW reduce production infixl_6 -> infixr_6
-- On OTHERWISE reduce production infixl_6 -> infixr_6
-- On ON reduce production infixl_6 -> infixr_6
-- On MINUSDOT reduce production infixl_6 -> infixr_6
-- On MINUS reduce production infixl_6 -> infixr_6
-- On INFIXR5 reduce production infixl_6 -> infixr_6
-- On INFIXR4 reduce production infixl_6 -> infixr_6
-- On INFIXR3 reduce production infixl_6 -> infixr_6
-- On INFIXR2 reduce production infixl_6 -> infixr_6
-- On INFIXR1 reduce production infixl_6 -> infixr_6
-- On INFIXR0 reduce production infixl_6 -> infixr_6
-- On INFIXL6 reduce production infixl_6 -> infixr_6
-- On INFIXL5 reduce production infixl_6 -> infixr_6
-- On INFIXL4 reduce production infixl_6 -> infixr_6
-- On INFIXL3 reduce production infixl_6 -> infixr_6
-- On INFIXL2 reduce production infixl_6 -> infixr_6
-- On INFIXL1 reduce production infixl_6 -> infixr_6
-- On INFIXL0 reduce production infixl_6 -> infixr_6
-- On INFIX5 reduce production infixl_6 -> infixr_6
-- On INFIX4 reduce production infixl_6 -> infixr_6
-- On INFIX3 reduce production infixl_6 -> infixr_6
-- On INFIX2 reduce production infixl_6 -> infixr_6
-- On INFIX1 reduce production infixl_6 -> infixr_6
-- On INFIX0 reduce production infixl_6 -> infixr_6
-- On FROM reduce production infixl_6 -> infixr_6
-- On FATRARROW reduce production infixl_6 -> infixr_6
-- On EQUALSTILDE reduce production infixl_6 -> infixr_6
-- On END reduce production infixl_6 -> infixr_6
-- On ELSE reduce production infixl_6 -> infixr_6
-- On DOTDOT reduce production infixl_6 -> infixr_6
-- On DELETE_LEFT reduce production infixl_6 -> infixr_6
-- On DELETE reduce production infixl_6 -> infixr_6
-- On DEFAULT reduce production infixl_6 -> infixr_6
-- On COMMA reduce production infixl_6 -> infixr_6
-- On COLON reduce production infixl_6 -> infixr_6
-- On CASE reduce production infixl_6 -> infixr_6
-- On BY reduce production infixl_6 -> infixr_6
-- On BARRBRACE reduce production infixl_6 -> infixr_6
-- On BARBAR reduce production infixl_6 -> infixr_6
-- On BANG reduce production infixl_6 -> infixr_6
-- On AS reduce production infixl_6 -> infixr_6
-- On AMPAMP reduce production infixl_6 -> infixr_6

State 627:
infixl_5 -> infixr_5 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_4 -> infixr_5 . EQUALSTILDE regex [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On EQUALSTILDE shift to state 628
-- On WITH reduce production infixl_5 -> infixr_5
-- On VBAR reduce production infixl_5 -> infixr_5
-- On VALUES reduce production infixl_5 -> infixr_5
-- On TABLEKEYS reduce production infixl_5 -> infixr_5
-- On SEMICOLON reduce production infixl_5 -> infixr_5
-- On RPAREN reduce production infixl_5 -> infixr_5
-- On RETURNING reduce production infixl_5 -> infixr_5
-- On RBRACKET reduce production infixl_5 -> infixr_5
-- On RBRACE reduce production infixl_5 -> infixr_5
-- On RARROW reduce production infixl_5 -> infixr_5
-- On OTHERWISE reduce production infixl_5 -> infixr_5
-- On ON reduce production infixl_5 -> infixr_5
-- On INFIXR4 reduce production infixl_5 -> infixr_5
-- On INFIXR3 reduce production infixl_5 -> infixr_5
-- On INFIXR2 reduce production infixl_5 -> infixr_5
-- On INFIXR1 reduce production infixl_5 -> infixr_5
-- On INFIXR0 reduce production infixl_5 -> infixr_5
-- On INFIXL5 reduce production infixl_5 -> infixr_5
-- On INFIXL4 reduce production infixl_5 -> infixr_5
-- On INFIXL3 reduce production infixl_5 -> infixr_5
-- On INFIXL2 reduce production infixl_5 -> infixr_5
-- On INFIXL1 reduce production infixl_5 -> infixr_5
-- On INFIXL0 reduce production infixl_5 -> infixr_5
-- On INFIX4 reduce production infixl_5 -> infixr_5
-- On INFIX3 reduce production infixl_5 -> infixr_5
-- On INFIX2 reduce production infixl_5 -> infixr_5
-- On INFIX1 reduce production infixl_5 -> infixr_5
-- On INFIX0 reduce production infixl_5 -> infixr_5
-- On FROM reduce production infixl_5 -> infixr_5
-- On FATRARROW reduce production infixl_5 -> infixr_5
-- On END reduce production infixl_5 -> infixr_5
-- On ELSE reduce production infixl_5 -> infixr_5
-- On DOTDOT reduce production infixl_5 -> infixr_5
-- On DELETE_LEFT reduce production infixl_5 -> infixr_5
-- On DELETE reduce production infixl_5 -> infixr_5
-- On DEFAULT reduce production infixl_5 -> infixr_5
-- On COMMA reduce production infixl_5 -> infixr_5
-- On COLON reduce production infixl_5 -> infixr_5
-- On CASE reduce production infixl_5 -> infixr_5
-- On BY reduce production infixl_5 -> infixr_5
-- On BARRBRACE reduce production infixl_5 -> infixr_5
-- On BARBAR reduce production infixl_5 -> infixr_5
-- On AS reduce production infixl_5 -> infixr_5
-- On AMPAMP reduce production infixl_5 -> infixr_5

State 628:
infixr_4 -> infixr_5 EQUALSTILDE . regex [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On SSLASH shift to state 629
-- On SLASH shift to state 656
-- On regex shift to state 660

State 629:
regex -> SSLASH . regex_pattern_alternate SLASH regex_replace regex_flags_opt [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On STRING shift to state 630
-- On RANGE shift to state 631
-- On QUOTEDMETA shift to state 632
-- On LPAREN shift to state 633
-- On LBRACE shift to state 315
-- On DOT shift to state 634
-- On DOLLAR shift to state 635
-- On CARET shift to state 636
-- On regex_pattern_sequence shift to state 637
-- On regex_pattern_alternate shift to state 648
-- On regex_pattern shift to state 640
-- On block shift to state 645

State 630:
regex_pattern -> STRING . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> STRING
-- On STAR reduce production regex_pattern -> STRING
-- On SLASHFLAGS reduce production regex_pattern -> STRING
-- On SLASH reduce production regex_pattern -> STRING
-- On RPAREN reduce production regex_pattern -> STRING
-- On RANGE reduce production regex_pattern -> STRING
-- On QUOTEDMETA reduce production regex_pattern -> STRING
-- On QUESTION reduce production regex_pattern -> STRING
-- On PLUS reduce production regex_pattern -> STRING
-- On LPAREN reduce production regex_pattern -> STRING
-- On LBRACE reduce production regex_pattern -> STRING
-- On DOT reduce production regex_pattern -> STRING
-- On DOLLAR reduce production regex_pattern -> STRING
-- On CARET reduce production regex_pattern -> STRING
-- On ALTERNATE reduce production regex_pattern -> STRING

State 631:
regex_pattern -> RANGE . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> RANGE
-- On STAR reduce production regex_pattern -> RANGE
-- On SLASHFLAGS reduce production regex_pattern -> RANGE
-- On SLASH reduce production regex_pattern -> RANGE
-- On RPAREN reduce production regex_pattern -> RANGE
-- On RANGE reduce production regex_pattern -> RANGE
-- On QUOTEDMETA reduce production regex_pattern -> RANGE
-- On QUESTION reduce production regex_pattern -> RANGE
-- On PLUS reduce production regex_pattern -> RANGE
-- On LPAREN reduce production regex_pattern -> RANGE
-- On LBRACE reduce production regex_pattern -> RANGE
-- On DOT reduce production regex_pattern -> RANGE
-- On DOLLAR reduce production regex_pattern -> RANGE
-- On CARET reduce production regex_pattern -> RANGE
-- On ALTERNATE reduce production regex_pattern -> RANGE

State 632:
regex_pattern -> QUOTEDMETA . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> QUOTEDMETA
-- On STAR reduce production regex_pattern -> QUOTEDMETA
-- On SLASHFLAGS reduce production regex_pattern -> QUOTEDMETA
-- On SLASH reduce production regex_pattern -> QUOTEDMETA
-- On RPAREN reduce production regex_pattern -> QUOTEDMETA
-- On RANGE reduce production regex_pattern -> QUOTEDMETA
-- On QUOTEDMETA reduce production regex_pattern -> QUOTEDMETA
-- On QUESTION reduce production regex_pattern -> QUOTEDMETA
-- On PLUS reduce production regex_pattern -> QUOTEDMETA
-- On LPAREN reduce production regex_pattern -> QUOTEDMETA
-- On LBRACE reduce production regex_pattern -> QUOTEDMETA
-- On DOT reduce production regex_pattern -> QUOTEDMETA
-- On DOLLAR reduce production regex_pattern -> QUOTEDMETA
-- On CARET reduce production regex_pattern -> QUOTEDMETA
-- On ALTERNATE reduce production regex_pattern -> QUOTEDMETA

State 633:
regex_pattern -> LPAREN . regex_pattern_alternate RPAREN [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING shift to state 630
-- On RANGE shift to state 631
-- On QUOTEDMETA shift to state 632
-- On LPAREN shift to state 633
-- On LBRACE shift to state 315
-- On DOT shift to state 634
-- On DOLLAR shift to state 635
-- On CARET shift to state 636
-- On regex_pattern_sequence shift to state 637
-- On regex_pattern_alternate shift to state 646
-- On regex_pattern shift to state 640
-- On block shift to state 645

State 634:
regex_pattern -> DOT . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> DOT
-- On STAR reduce production regex_pattern -> DOT
-- On SLASHFLAGS reduce production regex_pattern -> DOT
-- On SLASH reduce production regex_pattern -> DOT
-- On RPAREN reduce production regex_pattern -> DOT
-- On RANGE reduce production regex_pattern -> DOT
-- On QUOTEDMETA reduce production regex_pattern -> DOT
-- On QUESTION reduce production regex_pattern -> DOT
-- On PLUS reduce production regex_pattern -> DOT
-- On LPAREN reduce production regex_pattern -> DOT
-- On LBRACE reduce production regex_pattern -> DOT
-- On DOT reduce production regex_pattern -> DOT
-- On DOLLAR reduce production regex_pattern -> DOT
-- On CARET reduce production regex_pattern -> DOT
-- On ALTERNATE reduce production regex_pattern -> DOT

State 635:
regex_pattern -> DOLLAR . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> DOLLAR
-- On STAR reduce production regex_pattern -> DOLLAR
-- On SLASHFLAGS reduce production regex_pattern -> DOLLAR
-- On SLASH reduce production regex_pattern -> DOLLAR
-- On RPAREN reduce production regex_pattern -> DOLLAR
-- On RANGE reduce production regex_pattern -> DOLLAR
-- On QUOTEDMETA reduce production regex_pattern -> DOLLAR
-- On QUESTION reduce production regex_pattern -> DOLLAR
-- On PLUS reduce production regex_pattern -> DOLLAR
-- On LPAREN reduce production regex_pattern -> DOLLAR
-- On LBRACE reduce production regex_pattern -> DOLLAR
-- On DOT reduce production regex_pattern -> DOLLAR
-- On DOLLAR reduce production regex_pattern -> DOLLAR
-- On CARET reduce production regex_pattern -> DOLLAR
-- On ALTERNATE reduce production regex_pattern -> DOLLAR

State 636:
regex_pattern -> CARET . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> CARET
-- On STAR reduce production regex_pattern -> CARET
-- On SLASHFLAGS reduce production regex_pattern -> CARET
-- On SLASH reduce production regex_pattern -> CARET
-- On RPAREN reduce production regex_pattern -> CARET
-- On RANGE reduce production regex_pattern -> CARET
-- On QUOTEDMETA reduce production regex_pattern -> CARET
-- On QUESTION reduce production regex_pattern -> CARET
-- On PLUS reduce production regex_pattern -> CARET
-- On LPAREN reduce production regex_pattern -> CARET
-- On LBRACE reduce production regex_pattern -> CARET
-- On DOT reduce production regex_pattern -> CARET
-- On DOLLAR reduce production regex_pattern -> CARET
-- On CARET reduce production regex_pattern -> CARET
-- On ALTERNATE reduce production regex_pattern -> CARET

State 637:
regex_pattern_alternate -> regex_pattern_sequence . [ SLASHFLAGS SLASH RPAREN ]
regex_pattern_alternate -> regex_pattern_sequence . ALTERNATE regex_pattern_alternate [ SLASHFLAGS SLASH RPAREN ]
-- On ALTERNATE shift to state 638
-- On SLASHFLAGS reduce production regex_pattern_alternate -> regex_pattern_sequence
-- On SLASH reduce production regex_pattern_alternate -> regex_pattern_sequence
-- On RPAREN reduce production regex_pattern_alternate -> regex_pattern_sequence

State 638:
regex_pattern_alternate -> regex_pattern_sequence ALTERNATE . regex_pattern_alternate [ SLASHFLAGS SLASH RPAREN ]
-- On STRING shift to state 630
-- On RANGE shift to state 631
-- On QUOTEDMETA shift to state 632
-- On LPAREN shift to state 633
-- On LBRACE shift to state 315
-- On DOT shift to state 634
-- On DOLLAR shift to state 635
-- On CARET shift to state 636
-- On regex_pattern_sequence shift to state 637
-- On regex_pattern_alternate shift to state 639
-- On regex_pattern shift to state 640
-- On block shift to state 645

State 639:
regex_pattern_alternate -> regex_pattern_sequence ALTERNATE regex_pattern_alternate . [ SLASHFLAGS SLASH RPAREN ]
-- On SLASHFLAGS reduce production regex_pattern_alternate -> regex_pattern_sequence ALTERNATE regex_pattern_alternate
-- On SLASH reduce production regex_pattern_alternate -> regex_pattern_sequence ALTERNATE regex_pattern_alternate
-- On RPAREN reduce production regex_pattern_alternate -> regex_pattern_sequence ALTERNATE regex_pattern_alternate

State 640:
regex_pattern -> regex_pattern . STAR [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
regex_pattern -> regex_pattern . PLUS [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
regex_pattern -> regex_pattern . QUESTION [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
regex_pattern_sequence -> regex_pattern . [ SLASHFLAGS SLASH RPAREN ALTERNATE ]
regex_pattern_sequence -> regex_pattern . regex_pattern_sequence [ SLASHFLAGS SLASH RPAREN ALTERNATE ]
-- On STRING shift to state 630
-- On STAR shift to state 641
-- On RANGE shift to state 631
-- On QUOTEDMETA shift to state 632
-- On QUESTION shift to state 642
-- On PLUS shift to state 643
-- On LPAREN shift to state 633
-- On LBRACE shift to state 315
-- On DOT shift to state 634
-- On DOLLAR shift to state 635
-- On CARET shift to state 636
-- On regex_pattern_sequence shift to state 644
-- On regex_pattern shift to state 640
-- On block shift to state 645
-- On SLASHFLAGS reduce production regex_pattern_sequence -> regex_pattern
-- On SLASH reduce production regex_pattern_sequence -> regex_pattern
-- On RPAREN reduce production regex_pattern_sequence -> regex_pattern
-- On ALTERNATE reduce production regex_pattern_sequence -> regex_pattern

State 641:
regex_pattern -> regex_pattern STAR . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> regex_pattern STAR
-- On STAR reduce production regex_pattern -> regex_pattern STAR
-- On SLASHFLAGS reduce production regex_pattern -> regex_pattern STAR
-- On SLASH reduce production regex_pattern -> regex_pattern STAR
-- On RPAREN reduce production regex_pattern -> regex_pattern STAR
-- On RANGE reduce production regex_pattern -> regex_pattern STAR
-- On QUOTEDMETA reduce production regex_pattern -> regex_pattern STAR
-- On QUESTION reduce production regex_pattern -> regex_pattern STAR
-- On PLUS reduce production regex_pattern -> regex_pattern STAR
-- On LPAREN reduce production regex_pattern -> regex_pattern STAR
-- On LBRACE reduce production regex_pattern -> regex_pattern STAR
-- On DOT reduce production regex_pattern -> regex_pattern STAR
-- On DOLLAR reduce production regex_pattern -> regex_pattern STAR
-- On CARET reduce production regex_pattern -> regex_pattern STAR
-- On ALTERNATE reduce production regex_pattern -> regex_pattern STAR

State 642:
regex_pattern -> regex_pattern QUESTION . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> regex_pattern QUESTION
-- On STAR reduce production regex_pattern -> regex_pattern QUESTION
-- On SLASHFLAGS reduce production regex_pattern -> regex_pattern QUESTION
-- On SLASH reduce production regex_pattern -> regex_pattern QUESTION
-- On RPAREN reduce production regex_pattern -> regex_pattern QUESTION
-- On RANGE reduce production regex_pattern -> regex_pattern QUESTION
-- On QUOTEDMETA reduce production regex_pattern -> regex_pattern QUESTION
-- On QUESTION reduce production regex_pattern -> regex_pattern QUESTION
-- On PLUS reduce production regex_pattern -> regex_pattern QUESTION
-- On LPAREN reduce production regex_pattern -> regex_pattern QUESTION
-- On LBRACE reduce production regex_pattern -> regex_pattern QUESTION
-- On DOT reduce production regex_pattern -> regex_pattern QUESTION
-- On DOLLAR reduce production regex_pattern -> regex_pattern QUESTION
-- On CARET reduce production regex_pattern -> regex_pattern QUESTION
-- On ALTERNATE reduce production regex_pattern -> regex_pattern QUESTION

State 643:
regex_pattern -> regex_pattern PLUS . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> regex_pattern PLUS
-- On STAR reduce production regex_pattern -> regex_pattern PLUS
-- On SLASHFLAGS reduce production regex_pattern -> regex_pattern PLUS
-- On SLASH reduce production regex_pattern -> regex_pattern PLUS
-- On RPAREN reduce production regex_pattern -> regex_pattern PLUS
-- On RANGE reduce production regex_pattern -> regex_pattern PLUS
-- On QUOTEDMETA reduce production regex_pattern -> regex_pattern PLUS
-- On QUESTION reduce production regex_pattern -> regex_pattern PLUS
-- On PLUS reduce production regex_pattern -> regex_pattern PLUS
-- On LPAREN reduce production regex_pattern -> regex_pattern PLUS
-- On LBRACE reduce production regex_pattern -> regex_pattern PLUS
-- On DOT reduce production regex_pattern -> regex_pattern PLUS
-- On DOLLAR reduce production regex_pattern -> regex_pattern PLUS
-- On CARET reduce production regex_pattern -> regex_pattern PLUS
-- On ALTERNATE reduce production regex_pattern -> regex_pattern PLUS

State 644:
regex_pattern_sequence -> regex_pattern regex_pattern_sequence . [ SLASHFLAGS SLASH RPAREN ALTERNATE ]
-- On SLASHFLAGS reduce production regex_pattern_sequence -> regex_pattern regex_pattern_sequence
-- On SLASH reduce production regex_pattern_sequence -> regex_pattern regex_pattern_sequence
-- On RPAREN reduce production regex_pattern_sequence -> regex_pattern regex_pattern_sequence
-- On ALTERNATE reduce production regex_pattern_sequence -> regex_pattern regex_pattern_sequence

State 645:
regex_pattern -> block . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> block
-- On STAR reduce production regex_pattern -> block
-- On SLASHFLAGS reduce production regex_pattern -> block
-- On SLASH reduce production regex_pattern -> block
-- On RPAREN reduce production regex_pattern -> block
-- On RANGE reduce production regex_pattern -> block
-- On QUOTEDMETA reduce production regex_pattern -> block
-- On QUESTION reduce production regex_pattern -> block
-- On PLUS reduce production regex_pattern -> block
-- On LPAREN reduce production regex_pattern -> block
-- On LBRACE reduce production regex_pattern -> block
-- On DOT reduce production regex_pattern -> block
-- On DOLLAR reduce production regex_pattern -> block
-- On CARET reduce production regex_pattern -> block
-- On ALTERNATE reduce production regex_pattern -> block

State 646:
regex_pattern -> LPAREN regex_pattern_alternate . RPAREN [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On RPAREN shift to state 647

State 647:
regex_pattern -> LPAREN regex_pattern_alternate RPAREN . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On STAR reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On SLASHFLAGS reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On SLASH reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On RPAREN reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On RANGE reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On QUOTEDMETA reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On QUESTION reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On PLUS reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On LPAREN reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On LBRACE reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On DOT reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On DOLLAR reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On CARET reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On ALTERNATE reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN

State 648:
regex -> SSLASH regex_pattern_alternate . SLASH regex_replace regex_flags_opt [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On SLASH shift to state 649

State 649:
regex -> SSLASH regex_pattern_alternate SLASH . regex_replace regex_flags_opt [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On REGEXREPL shift to state 650
-- On LBRACE shift to state 315
-- On regex_replace shift to state 651
-- On block shift to state 655
-- On SLASHFLAGS reduce production regex_replace ->
-- On SLASH reduce production regex_replace ->

State 650:
regex_replace -> REGEXREPL . [ SLASHFLAGS SLASH ]
-- On SLASHFLAGS reduce production regex_replace -> REGEXREPL
-- On SLASH reduce production regex_replace -> REGEXREPL

State 651:
regex -> SSLASH regex_pattern_alternate SLASH regex_replace . regex_flags_opt [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On SLASHFLAGS shift to state 652
-- On SLASH shift to state 653
-- On regex_flags_opt shift to state 654

State 652:
regex_flags_opt -> SLASHFLAGS . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production regex_flags_opt -> SLASHFLAGS
-- On VBAR reduce production regex_flags_opt -> SLASHFLAGS
-- On VALUES reduce production regex_flags_opt -> SLASHFLAGS
-- On TABLEKEYS reduce production regex_flags_opt -> SLASHFLAGS
-- On SEMICOLON reduce production regex_flags_opt -> SLASHFLAGS
-- On RPAREN reduce production regex_flags_opt -> SLASHFLAGS
-- On RETURNING reduce production regex_flags_opt -> SLASHFLAGS
-- On RBRACKET reduce production regex_flags_opt -> SLASHFLAGS
-- On RBRACE reduce production regex_flags_opt -> SLASHFLAGS
-- On RARROW reduce production regex_flags_opt -> SLASHFLAGS
-- On OTHERWISE reduce production regex_flags_opt -> SLASHFLAGS
-- On ON reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXR3 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXR2 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXR1 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXR0 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXL4 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXL3 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXL2 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXL1 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXL0 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIX3 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIX2 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIX1 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIX0 reduce production regex_flags_opt -> SLASHFLAGS
-- On FROM reduce production regex_flags_opt -> SLASHFLAGS
-- On FATRARROW reduce production regex_flags_opt -> SLASHFLAGS
-- On END reduce production regex_flags_opt -> SLASHFLAGS
-- On ELSE reduce production regex_flags_opt -> SLASHFLAGS
-- On DOTDOT reduce production regex_flags_opt -> SLASHFLAGS
-- On DELETE_LEFT reduce production regex_flags_opt -> SLASHFLAGS
-- On DELETE reduce production regex_flags_opt -> SLASHFLAGS
-- On DEFAULT reduce production regex_flags_opt -> SLASHFLAGS
-- On COMMA reduce production regex_flags_opt -> SLASHFLAGS
-- On COLON reduce production regex_flags_opt -> SLASHFLAGS
-- On CASE reduce production regex_flags_opt -> SLASHFLAGS
-- On BY reduce production regex_flags_opt -> SLASHFLAGS
-- On BARRBRACE reduce production regex_flags_opt -> SLASHFLAGS
-- On BARBAR reduce production regex_flags_opt -> SLASHFLAGS
-- On AS reduce production regex_flags_opt -> SLASHFLAGS
-- On AMPAMP reduce production regex_flags_opt -> SLASHFLAGS

State 653:
regex_flags_opt -> SLASH . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production regex_flags_opt -> SLASH
-- On VBAR reduce production regex_flags_opt -> SLASH
-- On VALUES reduce production regex_flags_opt -> SLASH
-- On TABLEKEYS reduce production regex_flags_opt -> SLASH
-- On SEMICOLON reduce production regex_flags_opt -> SLASH
-- On RPAREN reduce production regex_flags_opt -> SLASH
-- On RETURNING reduce production regex_flags_opt -> SLASH
-- On RBRACKET reduce production regex_flags_opt -> SLASH
-- On RBRACE reduce production regex_flags_opt -> SLASH
-- On RARROW reduce production regex_flags_opt -> SLASH
-- On OTHERWISE reduce production regex_flags_opt -> SLASH
-- On ON reduce production regex_flags_opt -> SLASH
-- On INFIXR3 reduce production regex_flags_opt -> SLASH
-- On INFIXR2 reduce production regex_flags_opt -> SLASH
-- On INFIXR1 reduce production regex_flags_opt -> SLASH
-- On INFIXR0 reduce production regex_flags_opt -> SLASH
-- On INFIXL4 reduce production regex_flags_opt -> SLASH
-- On INFIXL3 reduce production regex_flags_opt -> SLASH
-- On INFIXL2 reduce production regex_flags_opt -> SLASH
-- On INFIXL1 reduce production regex_flags_opt -> SLASH
-- On INFIXL0 reduce production regex_flags_opt -> SLASH
-- On INFIX3 reduce production regex_flags_opt -> SLASH
-- On INFIX2 reduce production regex_flags_opt -> SLASH
-- On INFIX1 reduce production regex_flags_opt -> SLASH
-- On INFIX0 reduce production regex_flags_opt -> SLASH
-- On FROM reduce production regex_flags_opt -> SLASH
-- On FATRARROW reduce production regex_flags_opt -> SLASH
-- On END reduce production regex_flags_opt -> SLASH
-- On ELSE reduce production regex_flags_opt -> SLASH
-- On DOTDOT reduce production regex_flags_opt -> SLASH
-- On DELETE_LEFT reduce production regex_flags_opt -> SLASH
-- On DELETE reduce production regex_flags_opt -> SLASH
-- On DEFAULT reduce production regex_flags_opt -> SLASH
-- On COMMA reduce production regex_flags_opt -> SLASH
-- On COLON reduce production regex_flags_opt -> SLASH
-- On CASE reduce production regex_flags_opt -> SLASH
-- On BY reduce production regex_flags_opt -> SLASH
-- On BARRBRACE reduce production regex_flags_opt -> SLASH
-- On BARBAR reduce production regex_flags_opt -> SLASH
-- On AS reduce production regex_flags_opt -> SLASH
-- On AMPAMP reduce production regex_flags_opt -> SLASH

State 654:
regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On VBAR reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On VALUES reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On TABLEKEYS reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On SEMICOLON reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On RPAREN reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On RETURNING reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On RBRACKET reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On RBRACE reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On RARROW reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On OTHERWISE reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On ON reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXR3 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXR2 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXR1 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXR0 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXL4 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXL3 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXL2 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXL1 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXL0 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIX3 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIX2 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIX1 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIX0 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On FROM reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On FATRARROW reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On END reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On ELSE reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On DOTDOT reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On DELETE_LEFT reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On DELETE reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On DEFAULT reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On COMMA reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On COLON reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On CASE reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On BY reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On BARRBRACE reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On BARBAR reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On AS reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On AMPAMP reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt

State 655:
regex_replace -> block . [ SLASHFLAGS SLASH ]
-- On SLASHFLAGS reduce production regex_replace -> block
-- On SLASH reduce production regex_replace -> block

State 656:
regex -> SLASH . regex_pattern_alternate regex_flags_opt [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
regex -> SLASH . regex_flags_opt [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On STRING shift to state 630
-- On SLASHFLAGS shift to state 652
-- On SLASH shift to state 653
-- On RANGE shift to state 631
-- On QUOTEDMETA shift to state 632
-- On LPAREN shift to state 633
-- On LBRACE shift to state 315
-- On DOT shift to state 634
-- On DOLLAR shift to state 635
-- On CARET shift to state 636
-- On regex_pattern_sequence shift to state 637
-- On regex_pattern_alternate shift to state 657
-- On regex_pattern shift to state 640
-- On regex_flags_opt shift to state 659
-- On block shift to state 645

State 657:
regex -> SLASH regex_pattern_alternate . regex_flags_opt [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On SLASHFLAGS shift to state 652
-- On SLASH shift to state 653
-- On regex_flags_opt shift to state 658

State 658:
regex -> SLASH regex_pattern_alternate regex_flags_opt . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On VBAR reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On VALUES reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On TABLEKEYS reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On SEMICOLON reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On RPAREN reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On RETURNING reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On RBRACKET reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On RBRACE reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On RARROW reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On OTHERWISE reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On ON reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXR3 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXR2 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXR1 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXR0 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXL4 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXL3 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXL2 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXL1 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXL0 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIX3 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIX2 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIX1 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIX0 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On FROM reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On FATRARROW reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On END reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On ELSE reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On DOTDOT reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On DELETE_LEFT reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On DELETE reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On DEFAULT reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On COMMA reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On COLON reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On CASE reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On BY reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On BARRBRACE reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On BARBAR reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On AS reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On AMPAMP reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt

State 659:
regex -> SLASH regex_flags_opt . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production regex -> SLASH regex_flags_opt
-- On VBAR reduce production regex -> SLASH regex_flags_opt
-- On VALUES reduce production regex -> SLASH regex_flags_opt
-- On TABLEKEYS reduce production regex -> SLASH regex_flags_opt
-- On SEMICOLON reduce production regex -> SLASH regex_flags_opt
-- On RPAREN reduce production regex -> SLASH regex_flags_opt
-- On RETURNING reduce production regex -> SLASH regex_flags_opt
-- On RBRACKET reduce production regex -> SLASH regex_flags_opt
-- On RBRACE reduce production regex -> SLASH regex_flags_opt
-- On RARROW reduce production regex -> SLASH regex_flags_opt
-- On OTHERWISE reduce production regex -> SLASH regex_flags_opt
-- On ON reduce production regex -> SLASH regex_flags_opt
-- On INFIXR3 reduce production regex -> SLASH regex_flags_opt
-- On INFIXR2 reduce production regex -> SLASH regex_flags_opt
-- On INFIXR1 reduce production regex -> SLASH regex_flags_opt
-- On INFIXR0 reduce production regex -> SLASH regex_flags_opt
-- On INFIXL4 reduce production regex -> SLASH regex_flags_opt
-- On INFIXL3 reduce production regex -> SLASH regex_flags_opt
-- On INFIXL2 reduce production regex -> SLASH regex_flags_opt
-- On INFIXL1 reduce production regex -> SLASH regex_flags_opt
-- On INFIXL0 reduce production regex -> SLASH regex_flags_opt
-- On INFIX3 reduce production regex -> SLASH regex_flags_opt
-- On INFIX2 reduce production regex -> SLASH regex_flags_opt
-- On INFIX1 reduce production regex -> SLASH regex_flags_opt
-- On INFIX0 reduce production regex -> SLASH regex_flags_opt
-- On FROM reduce production regex -> SLASH regex_flags_opt
-- On FATRARROW reduce production regex -> SLASH regex_flags_opt
-- On END reduce production regex -> SLASH regex_flags_opt
-- On ELSE reduce production regex -> SLASH regex_flags_opt
-- On DOTDOT reduce production regex -> SLASH regex_flags_opt
-- On DELETE_LEFT reduce production regex -> SLASH regex_flags_opt
-- On DELETE reduce production regex -> SLASH regex_flags_opt
-- On DEFAULT reduce production regex -> SLASH regex_flags_opt
-- On COMMA reduce production regex -> SLASH regex_flags_opt
-- On COLON reduce production regex -> SLASH regex_flags_opt
-- On CASE reduce production regex -> SLASH regex_flags_opt
-- On BY reduce production regex -> SLASH regex_flags_opt
-- On BARRBRACE reduce production regex -> SLASH regex_flags_opt
-- On BARBAR reduce production regex -> SLASH regex_flags_opt
-- On AS reduce production regex -> SLASH regex_flags_opt
-- On AMPAMP reduce production regex -> SLASH regex_flags_opt

State 660:
infixr_4 -> infixr_5 EQUALSTILDE regex . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On VBAR reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On VALUES reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On TABLEKEYS reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On SEMICOLON reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On RPAREN reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On RETURNING reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On RBRACKET reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On RBRACE reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On RARROW reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On OTHERWISE reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On ON reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXR3 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXR2 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXR1 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXR0 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXL4 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXL3 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXL2 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXL1 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXL0 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIX3 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIX2 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIX1 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIX0 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On FROM reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On FATRARROW reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On END reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On ELSE reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On DOTDOT reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On DELETE_LEFT reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On DELETE reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On DEFAULT reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On COMMA reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On COLON reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On CASE reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On BY reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On BARRBRACE reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On BARBAR reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On AS reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On AMPAMP reduce production infixr_4 -> infixr_5 EQUALSTILDE regex

State 661:
infixl_4 -> infixr_4 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixl_4 -> infixr_4
-- On VBAR reduce production infixl_4 -> infixr_4
-- On VALUES reduce production infixl_4 -> infixr_4
-- On TABLEKEYS reduce production infixl_4 -> infixr_4
-- On SEMICOLON reduce production infixl_4 -> infixr_4
-- On RPAREN reduce production infixl_4 -> infixr_4
-- On RETURNING reduce production infixl_4 -> infixr_4
-- On RBRACKET reduce production infixl_4 -> infixr_4
-- On RBRACE reduce production infixl_4 -> infixr_4
-- On RARROW reduce production infixl_4 -> infixr_4
-- On OTHERWISE reduce production infixl_4 -> infixr_4
-- On ON reduce production infixl_4 -> infixr_4
-- On INFIXR3 reduce production infixl_4 -> infixr_4
-- On INFIXR2 reduce production infixl_4 -> infixr_4
-- On INFIXR1 reduce production infixl_4 -> infixr_4
-- On INFIXR0 reduce production infixl_4 -> infixr_4
-- On INFIXL4 reduce production infixl_4 -> infixr_4
-- On INFIXL3 reduce production infixl_4 -> infixr_4
-- On INFIXL2 reduce production infixl_4 -> infixr_4
-- On INFIXL1 reduce production infixl_4 -> infixr_4
-- On INFIXL0 reduce production infixl_4 -> infixr_4
-- On INFIX3 reduce production infixl_4 -> infixr_4
-- On INFIX2 reduce production infixl_4 -> infixr_4
-- On INFIX1 reduce production infixl_4 -> infixr_4
-- On INFIX0 reduce production infixl_4 -> infixr_4
-- On FROM reduce production infixl_4 -> infixr_4
-- On FATRARROW reduce production infixl_4 -> infixr_4
-- On END reduce production infixl_4 -> infixr_4
-- On ELSE reduce production infixl_4 -> infixr_4
-- On DOTDOT reduce production infixl_4 -> infixr_4
-- On DELETE_LEFT reduce production infixl_4 -> infixr_4
-- On DELETE reduce production infixl_4 -> infixr_4
-- On DEFAULT reduce production infixl_4 -> infixr_4
-- On COMMA reduce production infixl_4 -> infixr_4
-- On COLON reduce production infixl_4 -> infixr_4
-- On CASE reduce production infixl_4 -> infixr_4
-- On BY reduce production infixl_4 -> infixr_4
-- On BARRBRACE reduce production infixl_4 -> infixr_4
-- On BARBAR reduce production infixl_4 -> infixr_4
-- On AS reduce production infixl_4 -> infixr_4
-- On AMPAMP reduce production infixl_4 -> infixr_4

State 662:
infixl_3 -> infixr_3 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixl_3 -> infixr_3
-- On VBAR reduce production infixl_3 -> infixr_3
-- On VALUES reduce production infixl_3 -> infixr_3
-- On TABLEKEYS reduce production infixl_3 -> infixr_3
-- On SEMICOLON reduce production infixl_3 -> infixr_3
-- On RPAREN reduce production infixl_3 -> infixr_3
-- On RETURNING reduce production infixl_3 -> infixr_3
-- On RBRACKET reduce production infixl_3 -> infixr_3
-- On RBRACE reduce production infixl_3 -> infixr_3
-- On RARROW reduce production infixl_3 -> infixr_3
-- On OTHERWISE reduce production infixl_3 -> infixr_3
-- On ON reduce production infixl_3 -> infixr_3
-- On INFIXR2 reduce production infixl_3 -> infixr_3
-- On INFIXR1 reduce production infixl_3 -> infixr_3
-- On INFIXR0 reduce production infixl_3 -> infixr_3
-- On INFIXL3 reduce production infixl_3 -> infixr_3
-- On INFIXL2 reduce production infixl_3 -> infixr_3
-- On INFIXL1 reduce production infixl_3 -> infixr_3
-- On INFIXL0 reduce production infixl_3 -> infixr_3
-- On INFIX2 reduce production infixl_3 -> infixr_3
-- On INFIX1 reduce production infixl_3 -> infixr_3
-- On INFIX0 reduce production infixl_3 -> infixr_3
-- On FROM reduce production infixl_3 -> infixr_3
-- On FATRARROW reduce production infixl_3 -> infixr_3
-- On END reduce production infixl_3 -> infixr_3
-- On ELSE reduce production infixl_3 -> infixr_3
-- On DOTDOT reduce production infixl_3 -> infixr_3
-- On DELETE_LEFT reduce production infixl_3 -> infixr_3
-- On DELETE reduce production infixl_3 -> infixr_3
-- On DEFAULT reduce production infixl_3 -> infixr_3
-- On COMMA reduce production infixl_3 -> infixr_3
-- On COLON reduce production infixl_3 -> infixr_3
-- On CASE reduce production infixl_3 -> infixr_3
-- On BY reduce production infixl_3 -> infixr_3
-- On BARRBRACE reduce production infixl_3 -> infixr_3
-- On BARBAR reduce production infixl_3 -> infixr_3
-- On AS reduce production infixl_3 -> infixr_3
-- On AMPAMP reduce production infixl_3 -> infixr_3

State 663:
infixl_2 -> infixr_2 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixl_2 -> infixr_2
-- On VBAR reduce production infixl_2 -> infixr_2
-- On VALUES reduce production infixl_2 -> infixr_2
-- On TABLEKEYS reduce production infixl_2 -> infixr_2
-- On SEMICOLON reduce production infixl_2 -> infixr_2
-- On RPAREN reduce production infixl_2 -> infixr_2
-- On RETURNING reduce production infixl_2 -> infixr_2
-- On RBRACKET reduce production infixl_2 -> infixr_2
-- On RBRACE reduce production infixl_2 -> infixr_2
-- On RARROW reduce production infixl_2 -> infixr_2
-- On OTHERWISE reduce production infixl_2 -> infixr_2
-- On ON reduce production infixl_2 -> infixr_2
-- On INFIXR1 reduce production infixl_2 -> infixr_2
-- On INFIXR0 reduce production infixl_2 -> infixr_2
-- On INFIXL2 reduce production infixl_2 -> infixr_2
-- On INFIXL1 reduce production infixl_2 -> infixr_2
-- On INFIXL0 reduce production infixl_2 -> infixr_2
-- On INFIX1 reduce production infixl_2 -> infixr_2
-- On INFIX0 reduce production infixl_2 -> infixr_2
-- On FROM reduce production infixl_2 -> infixr_2
-- On FATRARROW reduce production infixl_2 -> infixr_2
-- On END reduce production infixl_2 -> infixr_2
-- On ELSE reduce production infixl_2 -> infixr_2
-- On DOTDOT reduce production infixl_2 -> infixr_2
-- On DELETE_LEFT reduce production infixl_2 -> infixr_2
-- On DELETE reduce production infixl_2 -> infixr_2
-- On DEFAULT reduce production infixl_2 -> infixr_2
-- On COMMA reduce production infixl_2 -> infixr_2
-- On COLON reduce production infixl_2 -> infixr_2
-- On CASE reduce production infixl_2 -> infixr_2
-- On BY reduce production infixl_2 -> infixr_2
-- On BARRBRACE reduce production infixl_2 -> infixr_2
-- On BARBAR reduce production infixl_2 -> infixr_2
-- On AS reduce production infixl_2 -> infixr_2
-- On AMPAMP reduce production infixl_2 -> infixr_2

State 664:
infixl_1 -> infixr_1 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR0 INFIXL1 INFIXL0 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixl_1 -> infixr_1
-- On VBAR reduce production infixl_1 -> infixr_1
-- On VALUES reduce production infixl_1 -> infixr_1
-- On TABLEKEYS reduce production infixl_1 -> infixr_1
-- On SEMICOLON reduce production infixl_1 -> infixr_1
-- On RPAREN reduce production infixl_1 -> infixr_1
-- On RETURNING reduce production infixl_1 -> infixr_1
-- On RBRACKET reduce production infixl_1 -> infixr_1
-- On RBRACE reduce production infixl_1 -> infixr_1
-- On RARROW reduce production infixl_1 -> infixr_1
-- On OTHERWISE reduce production infixl_1 -> infixr_1
-- On ON reduce production infixl_1 -> infixr_1
-- On INFIXR0 reduce production infixl_1 -> infixr_1
-- On INFIXL1 reduce production infixl_1 -> infixr_1
-- On INFIXL0 reduce production infixl_1 -> infixr_1
-- On INFIX0 reduce production infixl_1 -> infixr_1
-- On FROM reduce production infixl_1 -> infixr_1
-- On FATRARROW reduce production infixl_1 -> infixr_1
-- On END reduce production infixl_1 -> infixr_1
-- On ELSE reduce production infixl_1 -> infixr_1
-- On DOTDOT reduce production infixl_1 -> infixr_1
-- On DELETE_LEFT reduce production infixl_1 -> infixr_1
-- On DELETE reduce production infixl_1 -> infixr_1
-- On DEFAULT reduce production infixl_1 -> infixr_1
-- On COMMA reduce production infixl_1 -> infixr_1
-- On COLON reduce production infixl_1 -> infixr_1
-- On CASE reduce production infixl_1 -> infixr_1
-- On BY reduce production infixl_1 -> infixr_1
-- On BARRBRACE reduce production infixl_1 -> infixr_1
-- On BARBAR reduce production infixl_1 -> infixr_1
-- On AS reduce production infixl_1 -> infixr_1
-- On AMPAMP reduce production infixl_1 -> infixr_1

State 665:
infixl_0 -> infixr_0 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXL0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixl_0 -> infixr_0
-- On VBAR reduce production infixl_0 -> infixr_0
-- On VALUES reduce production infixl_0 -> infixr_0
-- On TABLEKEYS reduce production infixl_0 -> infixr_0
-- On SEMICOLON reduce production infixl_0 -> infixr_0
-- On RPAREN reduce production infixl_0 -> infixr_0
-- On RETURNING reduce production infixl_0 -> infixr_0
-- On RBRACKET reduce production infixl_0 -> infixr_0
-- On RBRACE reduce production infixl_0 -> infixr_0
-- On RARROW reduce production infixl_0 -> infixr_0
-- On OTHERWISE reduce production infixl_0 -> infixr_0
-- On ON reduce production infixl_0 -> infixr_0
-- On INFIXL0 reduce production infixl_0 -> infixr_0
-- On FROM reduce production infixl_0 -> infixr_0
-- On FATRARROW reduce production infixl_0 -> infixr_0
-- On END reduce production infixl_0 -> infixr_0
-- On ELSE reduce production infixl_0 -> infixr_0
-- On DOTDOT reduce production infixl_0 -> infixr_0
-- On DELETE_LEFT reduce production infixl_0 -> infixr_0
-- On DELETE reduce production infixl_0 -> infixr_0
-- On DEFAULT reduce production infixl_0 -> infixr_0
-- On COMMA reduce production infixl_0 -> infixr_0
-- On COLON reduce production infixl_0 -> infixr_0
-- On CASE reduce production infixl_0 -> infixr_0
-- On BY reduce production infixl_0 -> infixr_0
-- On BARRBRACE reduce production infixl_0 -> infixr_0
-- On BARBAR reduce production infixl_0 -> infixr_0
-- On AS reduce production infixl_0 -> infixr_0
-- On AMPAMP reduce production infixl_0 -> infixr_0

State 666:
infixl_9 -> infixl_9 . INFIXL9 infixr_9 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixr_8 -> infixl_9 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixr_8 -> infixl_9 . INFIX8 infixl_9 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixr_8 -> infixl_9 . INFIXR8 infixr_8 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixr_8 -> infixl_9 . COLONCOLON infixr_8 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On INFIXR8 shift to state 667
-- On INFIXL9 shift to state 669
-- On INFIX8 shift to state 671
-- On COLONCOLON shift to state 673
-- On WITH reduce production infixr_8 -> infixl_9
-- On VBAR reduce production infixr_8 -> infixl_9
-- On VALUES reduce production infixr_8 -> infixl_9
-- On TABLEKEYS reduce production infixr_8 -> infixl_9
-- On SEMICOLON reduce production infixr_8 -> infixl_9
-- On RPAREN reduce production infixr_8 -> infixl_9
-- On RETURNING reduce production infixr_8 -> infixl_9
-- On RBRACKET reduce production infixr_8 -> infixl_9
-- On RBRACE reduce production infixr_8 -> infixl_9
-- On RARROW reduce production infixr_8 -> infixl_9
-- On OTHERWISE reduce production infixr_8 -> infixl_9
-- On ON reduce production infixr_8 -> infixl_9
-- On MINUSDOT reduce production infixr_8 -> infixl_9
-- On MINUS reduce production infixr_8 -> infixl_9
-- On INFIXR7 reduce production infixr_8 -> infixl_9
-- On INFIXR6 reduce production infixr_8 -> infixl_9
-- On INFIXR5 reduce production infixr_8 -> infixl_9
-- On INFIXR4 reduce production infixr_8 -> infixl_9
-- On INFIXR3 reduce production infixr_8 -> infixl_9
-- On INFIXR2 reduce production infixr_8 -> infixl_9
-- On INFIXR1 reduce production infixr_8 -> infixl_9
-- On INFIXR0 reduce production infixr_8 -> infixl_9
-- On INFIXL8 reduce production infixr_8 -> infixl_9
-- On INFIXL7 reduce production infixr_8 -> infixl_9
-- On INFIXL6 reduce production infixr_8 -> infixl_9
-- On INFIXL5 reduce production infixr_8 -> infixl_9
-- On INFIXL4 reduce production infixr_8 -> infixl_9
-- On INFIXL3 reduce production infixr_8 -> infixl_9
-- On INFIXL2 reduce production infixr_8 -> infixl_9
-- On INFIXL1 reduce production infixr_8 -> infixl_9
-- On INFIXL0 reduce production infixr_8 -> infixl_9
-- On INFIX7 reduce production infixr_8 -> infixl_9
-- On INFIX6 reduce production infixr_8 -> infixl_9
-- On INFIX5 reduce production infixr_8 -> infixl_9
-- On INFIX4 reduce production infixr_8 -> infixl_9
-- On INFIX3 reduce production infixr_8 -> infixl_9
-- On INFIX2 reduce production infixr_8 -> infixl_9
-- On INFIX1 reduce production infixr_8 -> infixl_9
-- On INFIX0 reduce production infixr_8 -> infixl_9
-- On FROM reduce production infixr_8 -> infixl_9
-- On FATRARROW reduce production infixr_8 -> infixl_9
-- On EQUALSTILDE reduce production infixr_8 -> infixl_9
-- On END reduce production infixr_8 -> infixl_9
-- On ELSE reduce production infixr_8 -> infixl_9
-- On DOTDOT reduce production infixr_8 -> infixl_9
-- On DELETE_LEFT reduce production infixr_8 -> infixl_9
-- On DELETE reduce production infixr_8 -> infixl_9
-- On DEFAULT reduce production infixr_8 -> infixl_9
-- On COMMA reduce production infixr_8 -> infixl_9
-- On COLON reduce production infixr_8 -> infixl_9
-- On CASE reduce production infixr_8 -> infixl_9
-- On BY reduce production infixr_8 -> infixl_9
-- On BARRBRACE reduce production infixr_8 -> infixl_9
-- On BARBAR reduce production infixr_8 -> infixl_9
-- On BANG reduce production infixr_8 -> infixl_9
-- On AS reduce production infixr_8 -> infixl_9
-- On AMPAMP reduce production infixr_8 -> infixl_9

State 667:
infixr_8 -> infixl_9 INFIXR8 . infixr_8 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 668
-- On infixl_9 shift to state 666
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 668:
infixr_8 -> infixl_9 INFIXR8 infixr_8 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On VBAR reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On VALUES reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On TABLEKEYS reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On SEMICOLON reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On RPAREN reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On RETURNING reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On RBRACKET reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On RBRACE reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On RARROW reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On OTHERWISE reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On ON reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On MINUSDOT reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On MINUS reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXR7 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXR6 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXR5 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXR4 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXR3 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXR2 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXR1 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXR0 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL8 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL7 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL6 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL5 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL4 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL3 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL2 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL1 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL0 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIX7 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIX6 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIX5 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIX4 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIX3 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIX2 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIX1 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIX0 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On FROM reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On FATRARROW reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On EQUALSTILDE reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On END reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On ELSE reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On DOTDOT reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On DELETE_LEFT reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On DELETE reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On DEFAULT reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On COMMA reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On COLON reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On CASE reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On BY reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On BARRBRACE reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On BARBAR reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On BANG reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On AS reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On AMPAMP reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8

State 669:
infixl_9 -> infixl_9 INFIXL9 . infixr_9 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 670
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 670:
infixl_9 -> infixl_9 INFIXL9 infixr_9 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On VBAR reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On VALUES reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On TABLEKEYS reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On SEMICOLON reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On RPAREN reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On RETURNING reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On RBRACKET reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On RBRACE reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On RARROW reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On OTHERWISE reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On ON reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On MINUSDOT reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On MINUS reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR8 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR7 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR6 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR5 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR4 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR3 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR2 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR1 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR0 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL9 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL8 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL7 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL6 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL5 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL4 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL3 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL2 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL1 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL0 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX8 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX7 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX6 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX5 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX4 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX3 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX2 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX1 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX0 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On FROM reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On FATRARROW reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On EQUALSTILDE reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On END reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On ELSE reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On DOTDOT reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On DELETE_LEFT reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On DELETE reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On DEFAULT reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On COMMA reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On COLONCOLON reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On COLON reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On CASE reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On BY reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On BARRBRACE reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On BARBAR reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On BANG reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On AS reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On AMPAMP reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9

State 671:
infixr_8 -> infixl_9 INFIX8 . infixl_9 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixl_9 shift to state 672
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 672:
infixl_9 -> infixl_9 . INFIXL9 infixr_9 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixr_8 -> infixl_9 INFIX8 infixl_9 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On INFIXL9 shift to state 669
-- On WITH reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On VBAR reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On VALUES reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On TABLEKEYS reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On SEMICOLON reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On RPAREN reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On RETURNING reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On RBRACKET reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On RBRACE reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On RARROW reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On OTHERWISE reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On ON reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On MINUSDOT reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On MINUS reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXR7 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXR6 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXR5 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXR4 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXR3 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXR2 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXR1 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXR0 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL8 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL7 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL6 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL5 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL4 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL3 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL2 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL1 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL0 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIX7 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIX6 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIX5 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIX4 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIX3 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIX2 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIX1 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIX0 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On FROM reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On FATRARROW reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On EQUALSTILDE reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On END reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On ELSE reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On DOTDOT reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On DELETE_LEFT reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On DELETE reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On DEFAULT reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On COMMA reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On COLON reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On CASE reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On BY reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On BARRBRACE reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On BARBAR reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On BANG reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On AS reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On AMPAMP reduce production infixr_8 -> infixl_9 INFIX8 infixl_9

State 673:
infixr_8 -> infixl_9 COLONCOLON . infixr_8 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 674
-- On infixl_9 shift to state 666
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 674:
infixr_8 -> infixl_9 COLONCOLON infixr_8 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On VBAR reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On VALUES reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On TABLEKEYS reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On SEMICOLON reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On RPAREN reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On RETURNING reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On RBRACKET reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On RBRACE reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On RARROW reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On OTHERWISE reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On ON reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On MINUSDOT reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On MINUS reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXR7 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXR6 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXR5 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXR4 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXR3 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXR2 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXR1 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXR0 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL8 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL7 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL6 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL5 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL4 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL3 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL2 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL1 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL0 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIX7 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIX6 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIX5 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIX4 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIX3 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIX2 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIX1 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIX0 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On FROM reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On FATRARROW reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On EQUALSTILDE reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On END reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On ELSE reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On DOTDOT reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On DELETE_LEFT reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On DELETE reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On DEFAULT reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On COMMA reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On COLON reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On CASE reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On BY reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On BARRBRACE reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On BARBAR reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On BANG reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On AS reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On AMPAMP reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8

State 675:
infixl_8 -> infixl_8 . INFIXL8 infixr_8 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixr_7 -> infixl_8 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixr_7 -> infixl_8 . INFIX7 infixl_8 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixr_7 -> infixl_8 . INFIXR7 infixr_7 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On INFIXR7 shift to state 676
-- On INFIXL8 shift to state 678
-- On INFIX7 shift to state 680
-- On WITH reduce production infixr_7 -> infixl_8
-- On VBAR reduce production infixr_7 -> infixl_8
-- On VALUES reduce production infixr_7 -> infixl_8
-- On TABLEKEYS reduce production infixr_7 -> infixl_8
-- On SEMICOLON reduce production infixr_7 -> infixl_8
-- On RPAREN reduce production infixr_7 -> infixl_8
-- On RETURNING reduce production infixr_7 -> infixl_8
-- On RBRACKET reduce production infixr_7 -> infixl_8
-- On RBRACE reduce production infixr_7 -> infixl_8
-- On RARROW reduce production infixr_7 -> infixl_8
-- On OTHERWISE reduce production infixr_7 -> infixl_8
-- On ON reduce production infixr_7 -> infixl_8
-- On MINUSDOT reduce production infixr_7 -> infixl_8
-- On MINUS reduce production infixr_7 -> infixl_8
-- On INFIXR6 reduce production infixr_7 -> infixl_8
-- On INFIXR5 reduce production infixr_7 -> infixl_8
-- On INFIXR4 reduce production infixr_7 -> infixl_8
-- On INFIXR3 reduce production infixr_7 -> infixl_8
-- On INFIXR2 reduce production infixr_7 -> infixl_8
-- On INFIXR1 reduce production infixr_7 -> infixl_8
-- On INFIXR0 reduce production infixr_7 -> infixl_8
-- On INFIXL7 reduce production infixr_7 -> infixl_8
-- On INFIXL6 reduce production infixr_7 -> infixl_8
-- On INFIXL5 reduce production infixr_7 -> infixl_8
-- On INFIXL4 reduce production infixr_7 -> infixl_8
-- On INFIXL3 reduce production infixr_7 -> infixl_8
-- On INFIXL2 reduce production infixr_7 -> infixl_8
-- On INFIXL1 reduce production infixr_7 -> infixl_8
-- On INFIXL0 reduce production infixr_7 -> infixl_8
-- On INFIX6 reduce production infixr_7 -> infixl_8
-- On INFIX5 reduce production infixr_7 -> infixl_8
-- On INFIX4 reduce production infixr_7 -> infixl_8
-- On INFIX3 reduce production infixr_7 -> infixl_8
-- On INFIX2 reduce production infixr_7 -> infixl_8
-- On INFIX1 reduce production infixr_7 -> infixl_8
-- On INFIX0 reduce production infixr_7 -> infixl_8
-- On FROM reduce production infixr_7 -> infixl_8
-- On FATRARROW reduce production infixr_7 -> infixl_8
-- On EQUALSTILDE reduce production infixr_7 -> infixl_8
-- On END reduce production infixr_7 -> infixl_8
-- On ELSE reduce production infixr_7 -> infixl_8
-- On DOTDOT reduce production infixr_7 -> infixl_8
-- On DELETE_LEFT reduce production infixr_7 -> infixl_8
-- On DELETE reduce production infixr_7 -> infixl_8
-- On DEFAULT reduce production infixr_7 -> infixl_8
-- On COMMA reduce production infixr_7 -> infixl_8
-- On COLON reduce production infixr_7 -> infixl_8
-- On CASE reduce production infixr_7 -> infixl_8
-- On BY reduce production infixr_7 -> infixl_8
-- On BARRBRACE reduce production infixr_7 -> infixl_8
-- On BARBAR reduce production infixr_7 -> infixl_8
-- On BANG reduce production infixr_7 -> infixl_8
-- On AS reduce production infixr_7 -> infixl_8
-- On AMPAMP reduce production infixr_7 -> infixl_8

State 676:
infixr_7 -> infixl_8 INFIXR7 . infixr_7 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 677
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 677:
infixr_7 -> infixl_8 INFIXR7 infixr_7 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On VBAR reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On VALUES reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On TABLEKEYS reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On SEMICOLON reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On RPAREN reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On RETURNING reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On RBRACKET reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On RBRACE reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On RARROW reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On OTHERWISE reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On ON reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On MINUSDOT reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On MINUS reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXR6 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXR5 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXR4 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXR3 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXR2 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXR1 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXR0 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXL7 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXL6 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXL5 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXL4 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXL3 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXL2 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXL1 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXL0 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIX6 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIX5 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIX4 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIX3 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIX2 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIX1 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIX0 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On FROM reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On FATRARROW reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On EQUALSTILDE reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On END reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On ELSE reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On DOTDOT reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On DELETE_LEFT reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On DELETE reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On DEFAULT reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On COMMA reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On COLON reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On CASE reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On BY reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On BARRBRACE reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On BARBAR reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On BANG reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On AS reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On AMPAMP reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7

State 678:
infixl_8 -> infixl_8 INFIXL8 . infixr_8 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 679
-- On infixl_9 shift to state 666
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 679:
infixl_8 -> infixl_8 INFIXL8 infixr_8 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On VBAR reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On VALUES reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On TABLEKEYS reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On SEMICOLON reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On RPAREN reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On RETURNING reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On RBRACKET reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On RBRACE reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On RARROW reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On OTHERWISE reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On ON reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On MINUSDOT reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On MINUS reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXR7 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXR6 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXR5 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXR4 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXR3 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXR2 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXR1 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXR0 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL8 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL7 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL6 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL5 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL4 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL3 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL2 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL1 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL0 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIX7 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIX6 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIX5 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIX4 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIX3 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIX2 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIX1 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIX0 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On FROM reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On FATRARROW reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On EQUALSTILDE reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On END reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On ELSE reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On DOTDOT reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On DELETE_LEFT reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On DELETE reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On DEFAULT reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On COMMA reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On COLON reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On CASE reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On BY reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On BARRBRACE reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On BARBAR reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On BANG reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On AS reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On AMPAMP reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8

State 680:
infixr_7 -> infixl_8 INFIX7 . infixl_8 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 681
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 681:
infixl_8 -> infixl_8 . INFIXL8 infixr_8 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixr_7 -> infixl_8 INFIX7 infixl_8 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On INFIXL8 shift to state 678
-- On WITH reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On VBAR reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On VALUES reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On TABLEKEYS reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On SEMICOLON reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On RPAREN reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On RETURNING reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On RBRACKET reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On RBRACE reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On RARROW reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On OTHERWISE reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On ON reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On MINUSDOT reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On MINUS reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXR6 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXR5 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXR4 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXR3 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXR2 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXR1 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXR0 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXL7 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXL6 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXL5 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXL4 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXL3 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXL2 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXL1 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXL0 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIX6 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIX5 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIX4 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIX3 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIX2 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIX1 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIX0 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On FROM reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On FATRARROW reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On EQUALSTILDE reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On END reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On ELSE reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On DOTDOT reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On DELETE_LEFT reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On DELETE reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On DEFAULT reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On COMMA reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On COLON reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On CASE reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On BY reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On BARRBRACE reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On BARBAR reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On BANG reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On AS reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On AMPAMP reduce production infixr_7 -> infixl_8 INFIX7 infixl_8

State 682:
infixl_7 -> infixl_7 . INFIXL7 infixr_7 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixr_6 -> infixl_7 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixr_6 -> infixl_7 . INFIX6 infixl_7 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixr_6 -> infixl_7 . INFIXR6 infixr_6 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On INFIXR6 shift to state 683
-- On INFIXL7 shift to state 685
-- On INFIX6 shift to state 687
-- On WITH reduce production infixr_6 -> infixl_7
-- On VBAR reduce production infixr_6 -> infixl_7
-- On VALUES reduce production infixr_6 -> infixl_7
-- On TABLEKEYS reduce production infixr_6 -> infixl_7
-- On SEMICOLON reduce production infixr_6 -> infixl_7
-- On RPAREN reduce production infixr_6 -> infixl_7
-- On RETURNING reduce production infixr_6 -> infixl_7
-- On RBRACKET reduce production infixr_6 -> infixl_7
-- On RBRACE reduce production infixr_6 -> infixl_7
-- On RARROW reduce production infixr_6 -> infixl_7
-- On OTHERWISE reduce production infixr_6 -> infixl_7
-- On ON reduce production infixr_6 -> infixl_7
-- On MINUSDOT reduce production infixr_6 -> infixl_7
-- On MINUS reduce production infixr_6 -> infixl_7
-- On INFIXR5 reduce production infixr_6 -> infixl_7
-- On INFIXR4 reduce production infixr_6 -> infixl_7
-- On INFIXR3 reduce production infixr_6 -> infixl_7
-- On INFIXR2 reduce production infixr_6 -> infixl_7
-- On INFIXR1 reduce production infixr_6 -> infixl_7
-- On INFIXR0 reduce production infixr_6 -> infixl_7
-- On INFIXL6 reduce production infixr_6 -> infixl_7
-- On INFIXL5 reduce production infixr_6 -> infixl_7
-- On INFIXL4 reduce production infixr_6 -> infixl_7
-- On INFIXL3 reduce production infixr_6 -> infixl_7
-- On INFIXL2 reduce production infixr_6 -> infixl_7
-- On INFIXL1 reduce production infixr_6 -> infixl_7
-- On INFIXL0 reduce production infixr_6 -> infixl_7
-- On INFIX5 reduce production infixr_6 -> infixl_7
-- On INFIX4 reduce production infixr_6 -> infixl_7
-- On INFIX3 reduce production infixr_6 -> infixl_7
-- On INFIX2 reduce production infixr_6 -> infixl_7
-- On INFIX1 reduce production infixr_6 -> infixl_7
-- On INFIX0 reduce production infixr_6 -> infixl_7
-- On FROM reduce production infixr_6 -> infixl_7
-- On FATRARROW reduce production infixr_6 -> infixl_7
-- On EQUALSTILDE reduce production infixr_6 -> infixl_7
-- On END reduce production infixr_6 -> infixl_7
-- On ELSE reduce production infixr_6 -> infixl_7
-- On DOTDOT reduce production infixr_6 -> infixl_7
-- On DELETE_LEFT reduce production infixr_6 -> infixl_7
-- On DELETE reduce production infixr_6 -> infixl_7
-- On DEFAULT reduce production infixr_6 -> infixl_7
-- On COMMA reduce production infixr_6 -> infixl_7
-- On COLON reduce production infixr_6 -> infixl_7
-- On CASE reduce production infixr_6 -> infixl_7
-- On BY reduce production infixr_6 -> infixl_7
-- On BARRBRACE reduce production infixr_6 -> infixl_7
-- On BARBAR reduce production infixr_6 -> infixl_7
-- On BANG reduce production infixr_6 -> infixl_7
-- On AS reduce production infixr_6 -> infixl_7
-- On AMPAMP reduce production infixr_6 -> infixl_7

State 683:
infixr_6 -> infixl_7 INFIXR6 . infixr_6 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 684
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 684:
infixr_6 -> infixl_7 INFIXR6 infixr_6 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On VBAR reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On VALUES reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On TABLEKEYS reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On SEMICOLON reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On RPAREN reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On RETURNING reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On RBRACKET reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On RBRACE reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On RARROW reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On OTHERWISE reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On ON reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On MINUSDOT reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On MINUS reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXR5 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXR4 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXR3 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXR2 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXR1 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXR0 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXL6 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXL5 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXL4 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXL3 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXL2 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXL1 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXL0 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIX5 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIX4 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIX3 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIX2 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIX1 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIX0 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On FROM reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On FATRARROW reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On EQUALSTILDE reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On END reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On ELSE reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On DOTDOT reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On DELETE_LEFT reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On DELETE reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On DEFAULT reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On COMMA reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On COLON reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On CASE reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On BY reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On BARRBRACE reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On BARBAR reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On BANG reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On AS reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On AMPAMP reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6

State 685:
infixl_7 -> infixl_7 INFIXL7 . infixr_7 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 686
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 686:
infixl_7 -> infixl_7 INFIXL7 infixr_7 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On VBAR reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On VALUES reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On TABLEKEYS reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On SEMICOLON reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On RPAREN reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On RETURNING reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On RBRACKET reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On RBRACE reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On RARROW reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On OTHERWISE reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On ON reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On MINUSDOT reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On MINUS reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXR6 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXR5 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXR4 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXR3 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXR2 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXR1 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXR0 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXL7 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXL6 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXL5 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXL4 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXL3 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXL2 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXL1 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXL0 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIX6 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIX5 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIX4 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIX3 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIX2 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIX1 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIX0 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On FROM reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On FATRARROW reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On EQUALSTILDE reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On END reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On ELSE reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On DOTDOT reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On DELETE_LEFT reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On DELETE reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On DEFAULT reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On COMMA reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On COLON reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On CASE reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On BY reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On BARRBRACE reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On BARBAR reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On BANG reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On AS reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On AMPAMP reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7

State 687:
infixr_6 -> infixl_7 INFIX6 . infixl_7 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 688
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 688:
infixl_7 -> infixl_7 . INFIXL7 infixr_7 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixr_6 -> infixl_7 INFIX6 infixl_7 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On INFIXL7 shift to state 685
-- On WITH reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On VBAR reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On VALUES reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On TABLEKEYS reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On SEMICOLON reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On RPAREN reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On RETURNING reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On RBRACKET reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On RBRACE reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On RARROW reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On OTHERWISE reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On ON reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On MINUSDOT reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On MINUS reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXR5 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXR4 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXR3 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXR2 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXR1 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXR0 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXL6 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXL5 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXL4 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXL3 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXL2 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXL1 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXL0 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIX5 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIX4 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIX3 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIX2 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIX1 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIX0 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On FROM reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On FATRARROW reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On EQUALSTILDE reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On END reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On ELSE reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On DOTDOT reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On DELETE_LEFT reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On DELETE reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On DEFAULT reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On COMMA reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On COLON reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On CASE reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On BY reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On BARRBRACE reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On BARBAR reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On BANG reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On AS reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On AMPAMP reduce production infixr_6 -> infixl_7 INFIX6 infixl_7

State 689:
infixl_6 -> infixl_6 . INFIXL6 infixr_6 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixl_6 -> infixl_6 . MINUS infixr_6 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixl_6 -> infixl_6 . MINUSDOT infixr_6 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixl_6 -> infixl_6 . BANG infixr_6 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixr_5 -> infixl_6 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_5 -> infixl_6 . INFIX5 infixl_6 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_5 -> infixl_6 . INFIXR5 infixr_5 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On MINUSDOT shift to state 690
-- On MINUS shift to state 692
-- On INFIXR5 shift to state 694
-- On INFIXL6 shift to state 696
-- On INFIX5 shift to state 698
-- On BANG shift to state 700
-- On WITH reduce production infixr_5 -> infixl_6
-- On VBAR reduce production infixr_5 -> infixl_6
-- On VALUES reduce production infixr_5 -> infixl_6
-- On TABLEKEYS reduce production infixr_5 -> infixl_6
-- On SEMICOLON reduce production infixr_5 -> infixl_6
-- On RPAREN reduce production infixr_5 -> infixl_6
-- On RETURNING reduce production infixr_5 -> infixl_6
-- On RBRACKET reduce production infixr_5 -> infixl_6
-- On RBRACE reduce production infixr_5 -> infixl_6
-- On RARROW reduce production infixr_5 -> infixl_6
-- On OTHERWISE reduce production infixr_5 -> infixl_6
-- On ON reduce production infixr_5 -> infixl_6
-- On INFIXR4 reduce production infixr_5 -> infixl_6
-- On INFIXR3 reduce production infixr_5 -> infixl_6
-- On INFIXR2 reduce production infixr_5 -> infixl_6
-- On INFIXR1 reduce production infixr_5 -> infixl_6
-- On INFIXR0 reduce production infixr_5 -> infixl_6
-- On INFIXL5 reduce production infixr_5 -> infixl_6
-- On INFIXL4 reduce production infixr_5 -> infixl_6
-- On INFIXL3 reduce production infixr_5 -> infixl_6
-- On INFIXL2 reduce production infixr_5 -> infixl_6
-- On INFIXL1 reduce production infixr_5 -> infixl_6
-- On INFIXL0 reduce production infixr_5 -> infixl_6
-- On INFIX4 reduce production infixr_5 -> infixl_6
-- On INFIX3 reduce production infixr_5 -> infixl_6
-- On INFIX2 reduce production infixr_5 -> infixl_6
-- On INFIX1 reduce production infixr_5 -> infixl_6
-- On INFIX0 reduce production infixr_5 -> infixl_6
-- On FROM reduce production infixr_5 -> infixl_6
-- On FATRARROW reduce production infixr_5 -> infixl_6
-- On EQUALSTILDE reduce production infixr_5 -> infixl_6
-- On END reduce production infixr_5 -> infixl_6
-- On ELSE reduce production infixr_5 -> infixl_6
-- On DOTDOT reduce production infixr_5 -> infixl_6
-- On DELETE_LEFT reduce production infixr_5 -> infixl_6
-- On DELETE reduce production infixr_5 -> infixl_6
-- On DEFAULT reduce production infixr_5 -> infixl_6
-- On COMMA reduce production infixr_5 -> infixl_6
-- On COLON reduce production infixr_5 -> infixl_6
-- On CASE reduce production infixr_5 -> infixl_6
-- On BY reduce production infixr_5 -> infixl_6
-- On BARRBRACE reduce production infixr_5 -> infixl_6
-- On BARBAR reduce production infixr_5 -> infixl_6
-- On AS reduce production infixr_5 -> infixl_6
-- On AMPAMP reduce production infixr_5 -> infixl_6

State 690:
infixl_6 -> infixl_6 MINUSDOT . infixr_6 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 691
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 691:
infixl_6 -> infixl_6 MINUSDOT infixr_6 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On VBAR reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On VALUES reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On TABLEKEYS reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On SEMICOLON reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On RPAREN reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On RETURNING reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On RBRACKET reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On RBRACE reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On RARROW reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On OTHERWISE reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On ON reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On MINUSDOT reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On MINUS reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXR5 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXR4 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXR3 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXR2 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXR1 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXR0 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXL6 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXL5 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXL4 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXL3 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXL2 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXL1 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXL0 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIX5 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIX4 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIX3 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIX2 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIX1 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIX0 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On FROM reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On FATRARROW reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On EQUALSTILDE reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On END reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On ELSE reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On DOTDOT reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On DELETE_LEFT reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On DELETE reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On DEFAULT reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On COMMA reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On COLON reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On CASE reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On BY reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On BARRBRACE reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On BARBAR reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On BANG reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On AS reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On AMPAMP reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6

State 692:
infixl_6 -> infixl_6 MINUS . infixr_6 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 693
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 693:
infixl_6 -> infixl_6 MINUS infixr_6 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On VBAR reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On VALUES reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On TABLEKEYS reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On SEMICOLON reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On RPAREN reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On RETURNING reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On RBRACKET reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On RBRACE reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On RARROW reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On OTHERWISE reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On ON reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On MINUSDOT reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On MINUS reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXR5 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXR4 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXR3 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXR2 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXR1 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXR0 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXL6 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXL5 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXL4 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXL3 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXL2 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXL1 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXL0 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIX5 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIX4 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIX3 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIX2 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIX1 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIX0 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On FROM reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On FATRARROW reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On EQUALSTILDE reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On END reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On ELSE reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On DOTDOT reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On DELETE_LEFT reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On DELETE reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On DEFAULT reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On COMMA reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On COLON reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On CASE reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On BY reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On BARRBRACE reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On BARBAR reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On BANG reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On AS reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On AMPAMP reduce production infixl_6 -> infixl_6 MINUS infixr_6

State 694:
infixr_5 -> infixl_6 INFIXR5 . infixr_5 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 695
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 695:
infixr_5 -> infixl_6 INFIXR5 infixr_5 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On VBAR reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On VALUES reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On TABLEKEYS reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On SEMICOLON reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On RPAREN reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On RETURNING reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On RBRACKET reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On RBRACE reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On RARROW reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On OTHERWISE reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On ON reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXR4 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXR3 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXR2 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXR1 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXR0 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXL5 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXL4 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXL3 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXL2 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXL1 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXL0 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIX4 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIX3 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIX2 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIX1 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIX0 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On FROM reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On FATRARROW reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On EQUALSTILDE reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On END reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On ELSE reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On DOTDOT reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On DELETE_LEFT reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On DELETE reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On DEFAULT reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On COMMA reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On COLON reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On CASE reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On BY reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On BARRBRACE reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On BARBAR reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On AS reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On AMPAMP reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5

State 696:
infixl_6 -> infixl_6 INFIXL6 . infixr_6 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 697
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 697:
infixl_6 -> infixl_6 INFIXL6 infixr_6 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On VBAR reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On VALUES reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On TABLEKEYS reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On SEMICOLON reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On RPAREN reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On RETURNING reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On RBRACKET reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On RBRACE reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On RARROW reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On OTHERWISE reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On ON reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On MINUSDOT reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On MINUS reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXR5 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXR4 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXR3 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXR2 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXR1 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXR0 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXL6 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXL5 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXL4 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXL3 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXL2 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXL1 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXL0 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIX5 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIX4 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIX3 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIX2 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIX1 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIX0 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On FROM reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On FATRARROW reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On EQUALSTILDE reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On END reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On ELSE reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On DOTDOT reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On DELETE_LEFT reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On DELETE reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On DEFAULT reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On COMMA reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On COLON reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On CASE reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On BY reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On BARRBRACE reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On BARBAR reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On BANG reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On AS reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On AMPAMP reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6

State 698:
infixr_5 -> infixl_6 INFIX5 . infixl_6 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 699
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 699:
infixl_6 -> infixl_6 . INFIXL6 infixr_6 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixl_6 -> infixl_6 . MINUS infixr_6 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixl_6 -> infixl_6 . MINUSDOT infixr_6 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixl_6 -> infixl_6 . BANG infixr_6 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
infixr_5 -> infixl_6 INFIX5 infixl_6 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On MINUSDOT shift to state 690
-- On MINUS shift to state 692
-- On INFIXL6 shift to state 696
-- On BANG shift to state 700
-- On WITH reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On VBAR reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On VALUES reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On TABLEKEYS reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On SEMICOLON reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On RPAREN reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On RETURNING reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On RBRACKET reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On RBRACE reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On RARROW reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On OTHERWISE reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On ON reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXR4 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXR3 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXR2 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXR1 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXR0 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXL5 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXL4 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXL3 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXL2 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXL1 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXL0 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIX4 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIX3 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIX2 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIX1 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIX0 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On FROM reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On FATRARROW reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On EQUALSTILDE reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On END reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On ELSE reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On DOTDOT reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On DELETE_LEFT reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On DELETE reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On DEFAULT reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On COMMA reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On COLON reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On CASE reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On BY reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On BARRBRACE reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On BARBAR reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On AS reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On AMPAMP reduce production infixr_5 -> infixl_6 INFIX5 infixl_6

State 700:
infixl_6 -> infixl_6 BANG . infixr_6 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 701
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 701:
infixl_6 -> infixl_6 BANG infixr_6 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On VBAR reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On VALUES reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On TABLEKEYS reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On SEMICOLON reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On RPAREN reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On RETURNING reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On RBRACKET reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On RBRACE reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On RARROW reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On OTHERWISE reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On ON reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On MINUSDOT reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On MINUS reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIXR5 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIXR4 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIXR3 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIXR2 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIXR1 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIXR0 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIXL6 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIXL5 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIXL4 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIXL3 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIXL2 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIXL1 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIXL0 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIX5 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIX4 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIX3 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIX2 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIX1 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On INFIX0 reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On FROM reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On FATRARROW reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On EQUALSTILDE reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On END reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On ELSE reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On DOTDOT reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On DELETE_LEFT reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On DELETE reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On DEFAULT reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On COMMA reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On COLON reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On CASE reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On BY reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On BARRBRACE reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On BARBAR reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On BANG reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On AS reduce production infixl_6 -> infixl_6 BANG infixr_6
-- On AMPAMP reduce production infixl_6 -> infixl_6 BANG infixr_6

State 702:
infixl_5 -> infixl_5 . INFIXL5 infixr_5 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_4 -> infixl_5 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_4 -> infixl_5 . INFIX4 infixl_5 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_4 -> infixl_5 . INFIXR4 infixr_4 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On INFIXR4 shift to state 703
-- On INFIXL5 shift to state 705
-- On INFIX4 shift to state 707
-- On WITH reduce production infixr_4 -> infixl_5
-- On VBAR reduce production infixr_4 -> infixl_5
-- On VALUES reduce production infixr_4 -> infixl_5
-- On TABLEKEYS reduce production infixr_4 -> infixl_5
-- On SEMICOLON reduce production infixr_4 -> infixl_5
-- On RPAREN reduce production infixr_4 -> infixl_5
-- On RETURNING reduce production infixr_4 -> infixl_5
-- On RBRACKET reduce production infixr_4 -> infixl_5
-- On RBRACE reduce production infixr_4 -> infixl_5
-- On RARROW reduce production infixr_4 -> infixl_5
-- On OTHERWISE reduce production infixr_4 -> infixl_5
-- On ON reduce production infixr_4 -> infixl_5
-- On INFIXR3 reduce production infixr_4 -> infixl_5
-- On INFIXR2 reduce production infixr_4 -> infixl_5
-- On INFIXR1 reduce production infixr_4 -> infixl_5
-- On INFIXR0 reduce production infixr_4 -> infixl_5
-- On INFIXL4 reduce production infixr_4 -> infixl_5
-- On INFIXL3 reduce production infixr_4 -> infixl_5
-- On INFIXL2 reduce production infixr_4 -> infixl_5
-- On INFIXL1 reduce production infixr_4 -> infixl_5
-- On INFIXL0 reduce production infixr_4 -> infixl_5
-- On INFIX3 reduce production infixr_4 -> infixl_5
-- On INFIX2 reduce production infixr_4 -> infixl_5
-- On INFIX1 reduce production infixr_4 -> infixl_5
-- On INFIX0 reduce production infixr_4 -> infixl_5
-- On FROM reduce production infixr_4 -> infixl_5
-- On FATRARROW reduce production infixr_4 -> infixl_5
-- On END reduce production infixr_4 -> infixl_5
-- On ELSE reduce production infixr_4 -> infixl_5
-- On DOTDOT reduce production infixr_4 -> infixl_5
-- On DELETE_LEFT reduce production infixr_4 -> infixl_5
-- On DELETE reduce production infixr_4 -> infixl_5
-- On DEFAULT reduce production infixr_4 -> infixl_5
-- On COMMA reduce production infixr_4 -> infixl_5
-- On COLON reduce production infixr_4 -> infixl_5
-- On CASE reduce production infixr_4 -> infixl_5
-- On BY reduce production infixr_4 -> infixl_5
-- On BARRBRACE reduce production infixr_4 -> infixl_5
-- On BARBAR reduce production infixr_4 -> infixl_5
-- On AS reduce production infixr_4 -> infixl_5
-- On AMPAMP reduce production infixr_4 -> infixl_5

State 703:
infixr_4 -> infixl_5 INFIXR4 . infixr_4 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 704
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 704:
infixr_4 -> infixl_5 INFIXR4 infixr_4 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On VBAR reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On VALUES reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On TABLEKEYS reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On SEMICOLON reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On RPAREN reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On RETURNING reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On RBRACKET reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On RBRACE reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On RARROW reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On OTHERWISE reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On ON reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXR3 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXR2 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXR1 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXR0 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXL4 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXL3 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXL2 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXL1 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXL0 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIX3 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIX2 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIX1 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIX0 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On FROM reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On FATRARROW reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On END reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On ELSE reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On DOTDOT reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On DELETE_LEFT reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On DELETE reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On DEFAULT reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On COMMA reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On COLON reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On CASE reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On BY reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On BARRBRACE reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On BARBAR reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On AS reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On AMPAMP reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4

State 705:
infixl_5 -> infixl_5 INFIXL5 . infixr_5 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 706
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 706:
infixl_5 -> infixl_5 INFIXL5 infixr_5 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On VBAR reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On VALUES reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On TABLEKEYS reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On SEMICOLON reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On RPAREN reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On RETURNING reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On RBRACKET reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On RBRACE reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On RARROW reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On OTHERWISE reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On ON reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXR4 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXR3 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXR2 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXR1 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXR0 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXL5 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXL4 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXL3 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXL2 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXL1 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXL0 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIX4 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIX3 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIX2 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIX1 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIX0 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On FROM reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On FATRARROW reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On END reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On ELSE reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On DOTDOT reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On DELETE_LEFT reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On DELETE reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On DEFAULT reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On COMMA reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On COLON reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On CASE reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On BY reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On BARRBRACE reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On BARBAR reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On AS reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On AMPAMP reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5

State 707:
infixr_4 -> infixl_5 INFIX4 . infixl_5 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 708
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 709
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 708:
infixl_5 -> infixr_5 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixl_5 -> infixr_5
-- On VBAR reduce production infixl_5 -> infixr_5
-- On VALUES reduce production infixl_5 -> infixr_5
-- On TABLEKEYS reduce production infixl_5 -> infixr_5
-- On SEMICOLON reduce production infixl_5 -> infixr_5
-- On RPAREN reduce production infixl_5 -> infixr_5
-- On RETURNING reduce production infixl_5 -> infixr_5
-- On RBRACKET reduce production infixl_5 -> infixr_5
-- On RBRACE reduce production infixl_5 -> infixr_5
-- On RARROW reduce production infixl_5 -> infixr_5
-- On OTHERWISE reduce production infixl_5 -> infixr_5
-- On ON reduce production infixl_5 -> infixr_5
-- On INFIXR3 reduce production infixl_5 -> infixr_5
-- On INFIXR2 reduce production infixl_5 -> infixr_5
-- On INFIXR1 reduce production infixl_5 -> infixr_5
-- On INFIXR0 reduce production infixl_5 -> infixr_5
-- On INFIXL5 reduce production infixl_5 -> infixr_5
-- On INFIXL4 reduce production infixl_5 -> infixr_5
-- On INFIXL3 reduce production infixl_5 -> infixr_5
-- On INFIXL2 reduce production infixl_5 -> infixr_5
-- On INFIXL1 reduce production infixl_5 -> infixr_5
-- On INFIXL0 reduce production infixl_5 -> infixr_5
-- On INFIX3 reduce production infixl_5 -> infixr_5
-- On INFIX2 reduce production infixl_5 -> infixr_5
-- On INFIX1 reduce production infixl_5 -> infixr_5
-- On INFIX0 reduce production infixl_5 -> infixr_5
-- On FROM reduce production infixl_5 -> infixr_5
-- On FATRARROW reduce production infixl_5 -> infixr_5
-- On END reduce production infixl_5 -> infixr_5
-- On ELSE reduce production infixl_5 -> infixr_5
-- On DOTDOT reduce production infixl_5 -> infixr_5
-- On DELETE_LEFT reduce production infixl_5 -> infixr_5
-- On DELETE reduce production infixl_5 -> infixr_5
-- On DEFAULT reduce production infixl_5 -> infixr_5
-- On COMMA reduce production infixl_5 -> infixr_5
-- On COLON reduce production infixl_5 -> infixr_5
-- On CASE reduce production infixl_5 -> infixr_5
-- On BY reduce production infixl_5 -> infixr_5
-- On BARRBRACE reduce production infixl_5 -> infixr_5
-- On BARBAR reduce production infixl_5 -> infixr_5
-- On AS reduce production infixl_5 -> infixr_5
-- On AMPAMP reduce production infixl_5 -> infixr_5

State 709:
infixl_5 -> infixl_5 . INFIXL5 infixr_5 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_4 -> infixl_5 INFIX4 infixl_5 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On INFIXL5 shift to state 705
-- On WITH reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On VBAR reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On VALUES reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On TABLEKEYS reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On SEMICOLON reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On RPAREN reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On RETURNING reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On RBRACKET reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On RBRACE reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On RARROW reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On OTHERWISE reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On ON reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXR3 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXR2 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXR1 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXR0 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXL4 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXL3 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXL2 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXL1 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXL0 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIX3 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIX2 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIX1 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIX0 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On FROM reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On FATRARROW reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On END reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On ELSE reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On DOTDOT reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On DELETE_LEFT reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On DELETE reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On DEFAULT reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On COMMA reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On COLON reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On CASE reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On BY reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On BARRBRACE reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On BARBAR reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On AS reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On AMPAMP reduce production infixr_4 -> infixl_5 INFIX4 infixl_5

State 710:
infixl_4 -> infixl_4 . INFIXL4 infixr_4 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_3 -> infixl_4 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_3 -> infixl_4 . INFIX3 infixl_4 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_3 -> infixl_4 . INFIXR3 infixr_3 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On INFIXR3 shift to state 711
-- On INFIXL4 shift to state 713
-- On INFIX3 shift to state 715
-- On WITH reduce production infixr_3 -> infixl_4
-- On VBAR reduce production infixr_3 -> infixl_4
-- On VALUES reduce production infixr_3 -> infixl_4
-- On TABLEKEYS reduce production infixr_3 -> infixl_4
-- On SEMICOLON reduce production infixr_3 -> infixl_4
-- On RPAREN reduce production infixr_3 -> infixl_4
-- On RETURNING reduce production infixr_3 -> infixl_4
-- On RBRACKET reduce production infixr_3 -> infixl_4
-- On RBRACE reduce production infixr_3 -> infixl_4
-- On RARROW reduce production infixr_3 -> infixl_4
-- On OTHERWISE reduce production infixr_3 -> infixl_4
-- On ON reduce production infixr_3 -> infixl_4
-- On INFIXR2 reduce production infixr_3 -> infixl_4
-- On INFIXR1 reduce production infixr_3 -> infixl_4
-- On INFIXR0 reduce production infixr_3 -> infixl_4
-- On INFIXL3 reduce production infixr_3 -> infixl_4
-- On INFIXL2 reduce production infixr_3 -> infixl_4
-- On INFIXL1 reduce production infixr_3 -> infixl_4
-- On INFIXL0 reduce production infixr_3 -> infixl_4
-- On INFIX2 reduce production infixr_3 -> infixl_4
-- On INFIX1 reduce production infixr_3 -> infixl_4
-- On INFIX0 reduce production infixr_3 -> infixl_4
-- On FROM reduce production infixr_3 -> infixl_4
-- On FATRARROW reduce production infixr_3 -> infixl_4
-- On END reduce production infixr_3 -> infixl_4
-- On ELSE reduce production infixr_3 -> infixl_4
-- On DOTDOT reduce production infixr_3 -> infixl_4
-- On DELETE_LEFT reduce production infixr_3 -> infixl_4
-- On DELETE reduce production infixr_3 -> infixl_4
-- On DEFAULT reduce production infixr_3 -> infixl_4
-- On COMMA reduce production infixr_3 -> infixl_4
-- On COLON reduce production infixr_3 -> infixl_4
-- On CASE reduce production infixr_3 -> infixl_4
-- On BY reduce production infixr_3 -> infixl_4
-- On BARRBRACE reduce production infixr_3 -> infixl_4
-- On BARBAR reduce production infixr_3 -> infixl_4
-- On AS reduce production infixr_3 -> infixl_4
-- On AMPAMP reduce production infixr_3 -> infixl_4

State 711:
infixr_3 -> infixl_4 INFIXR3 . infixr_3 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 712
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 712:
infixr_3 -> infixl_4 INFIXR3 infixr_3 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On VBAR reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On VALUES reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On TABLEKEYS reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On SEMICOLON reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On RPAREN reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On RETURNING reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On RBRACKET reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On RBRACE reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On RARROW reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On OTHERWISE reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On ON reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIXR2 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIXR1 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIXR0 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIXL3 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIXL2 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIXL1 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIXL0 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIX2 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIX1 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIX0 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On FROM reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On FATRARROW reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On END reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On ELSE reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On DOTDOT reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On DELETE_LEFT reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On DELETE reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On DEFAULT reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On COMMA reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On COLON reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On CASE reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On BY reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On BARRBRACE reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On BARBAR reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On AS reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On AMPAMP reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3

State 713:
infixl_4 -> infixl_4 INFIXL4 . infixr_4 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 714
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 714:
infixl_4 -> infixl_4 INFIXL4 infixr_4 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On VBAR reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On VALUES reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On TABLEKEYS reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On SEMICOLON reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On RPAREN reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On RETURNING reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On RBRACKET reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On RBRACE reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On RARROW reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On OTHERWISE reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On ON reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXR3 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXR2 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXR1 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXR0 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXL4 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXL3 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXL2 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXL1 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXL0 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIX3 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIX2 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIX1 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIX0 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On FROM reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On FATRARROW reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On END reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On ELSE reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On DOTDOT reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On DELETE_LEFT reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On DELETE reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On DEFAULT reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On COMMA reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On COLON reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On CASE reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On BY reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On BARRBRACE reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On BARBAR reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On AS reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On AMPAMP reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4

State 715:
infixr_3 -> infixl_4 INFIX3 . infixl_4 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 716
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 716:
infixl_4 -> infixl_4 . INFIXL4 infixr_4 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_3 -> infixl_4 INFIX3 infixl_4 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On INFIXL4 shift to state 713
-- On WITH reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On VBAR reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On VALUES reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On TABLEKEYS reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On SEMICOLON reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On RPAREN reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On RETURNING reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On RBRACKET reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On RBRACE reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On RARROW reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On OTHERWISE reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On ON reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIXR2 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIXR1 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIXR0 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIXL3 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIXL2 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIXL1 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIXL0 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIX2 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIX1 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIX0 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On FROM reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On FATRARROW reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On END reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On ELSE reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On DOTDOT reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On DELETE_LEFT reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On DELETE reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On DEFAULT reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On COMMA reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On COLON reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On CASE reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On BY reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On BARRBRACE reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On BARBAR reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On AS reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On AMPAMP reduce production infixr_3 -> infixl_4 INFIX3 infixl_4

State 717:
infixl_3 -> infixl_3 . INFIXL3 infixr_3 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_2 -> infixl_3 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_2 -> infixl_3 . INFIX2 infixl_3 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_2 -> infixl_3 . INFIXR2 infixr_2 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On INFIXR2 shift to state 718
-- On INFIXL3 shift to state 720
-- On INFIX2 shift to state 722
-- On WITH reduce production infixr_2 -> infixl_3
-- On VBAR reduce production infixr_2 -> infixl_3
-- On VALUES reduce production infixr_2 -> infixl_3
-- On TABLEKEYS reduce production infixr_2 -> infixl_3
-- On SEMICOLON reduce production infixr_2 -> infixl_3
-- On RPAREN reduce production infixr_2 -> infixl_3
-- On RETURNING reduce production infixr_2 -> infixl_3
-- On RBRACKET reduce production infixr_2 -> infixl_3
-- On RBRACE reduce production infixr_2 -> infixl_3
-- On RARROW reduce production infixr_2 -> infixl_3
-- On OTHERWISE reduce production infixr_2 -> infixl_3
-- On ON reduce production infixr_2 -> infixl_3
-- On INFIXR1 reduce production infixr_2 -> infixl_3
-- On INFIXR0 reduce production infixr_2 -> infixl_3
-- On INFIXL2 reduce production infixr_2 -> infixl_3
-- On INFIXL1 reduce production infixr_2 -> infixl_3
-- On INFIXL0 reduce production infixr_2 -> infixl_3
-- On INFIX1 reduce production infixr_2 -> infixl_3
-- On INFIX0 reduce production infixr_2 -> infixl_3
-- On FROM reduce production infixr_2 -> infixl_3
-- On FATRARROW reduce production infixr_2 -> infixl_3
-- On END reduce production infixr_2 -> infixl_3
-- On ELSE reduce production infixr_2 -> infixl_3
-- On DOTDOT reduce production infixr_2 -> infixl_3
-- On DELETE_LEFT reduce production infixr_2 -> infixl_3
-- On DELETE reduce production infixr_2 -> infixl_3
-- On DEFAULT reduce production infixr_2 -> infixl_3
-- On COMMA reduce production infixr_2 -> infixl_3
-- On COLON reduce production infixr_2 -> infixl_3
-- On CASE reduce production infixr_2 -> infixl_3
-- On BY reduce production infixr_2 -> infixl_3
-- On BARRBRACE reduce production infixr_2 -> infixl_3
-- On BARBAR reduce production infixr_2 -> infixl_3
-- On AS reduce production infixr_2 -> infixl_3
-- On AMPAMP reduce production infixr_2 -> infixl_3

State 718:
infixr_2 -> infixl_3 INFIXR2 . infixr_2 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 719
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 719:
infixr_2 -> infixl_3 INFIXR2 infixr_2 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On VBAR reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On VALUES reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On TABLEKEYS reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On SEMICOLON reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On RPAREN reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On RETURNING reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On RBRACKET reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On RBRACE reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On RARROW reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On OTHERWISE reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On ON reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On INFIXR1 reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On INFIXR0 reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On INFIXL2 reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On INFIXL1 reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On INFIXL0 reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On INFIX1 reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On INFIX0 reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On FROM reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On FATRARROW reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On END reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On ELSE reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On DOTDOT reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On DELETE_LEFT reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On DELETE reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On DEFAULT reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On COMMA reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On COLON reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On CASE reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On BY reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On BARRBRACE reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On BARBAR reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On AS reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On AMPAMP reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2

State 720:
infixl_3 -> infixl_3 INFIXL3 . infixr_3 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 721
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 721:
infixl_3 -> infixl_3 INFIXL3 infixr_3 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On VBAR reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On VALUES reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On TABLEKEYS reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On SEMICOLON reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On RPAREN reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On RETURNING reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On RBRACKET reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On RBRACE reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On RARROW reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On OTHERWISE reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On ON reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIXR2 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIXR1 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIXR0 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIXL3 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIXL2 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIXL1 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIXL0 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIX2 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIX1 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIX0 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On FROM reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On FATRARROW reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On END reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On ELSE reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On DOTDOT reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On DELETE_LEFT reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On DELETE reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On DEFAULT reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On COMMA reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On COLON reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On CASE reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On BY reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On BARRBRACE reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On BARBAR reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On AS reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On AMPAMP reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3

State 722:
infixr_2 -> infixl_3 INFIX2 . infixl_3 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 723
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 723:
infixl_3 -> infixl_3 . INFIXL3 infixr_3 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_2 -> infixl_3 INFIX2 infixl_3 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On INFIXL3 shift to state 720
-- On WITH reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On VBAR reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On VALUES reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On TABLEKEYS reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On SEMICOLON reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On RPAREN reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On RETURNING reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On RBRACKET reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On RBRACE reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On RARROW reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On OTHERWISE reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On ON reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On INFIXR1 reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On INFIXR0 reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On INFIXL2 reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On INFIXL1 reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On INFIXL0 reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On INFIX1 reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On INFIX0 reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On FROM reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On FATRARROW reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On END reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On ELSE reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On DOTDOT reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On DELETE_LEFT reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On DELETE reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On DEFAULT reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On COMMA reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On COLON reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On CASE reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On BY reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On BARRBRACE reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On BARBAR reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On AS reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On AMPAMP reduce production infixr_2 -> infixl_3 INFIX2 infixl_3

State 724:
infixl_2 -> infixl_2 . INFIXL2 infixr_2 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_1 -> infixl_2 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR0 INFIXL1 INFIXL0 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_1 -> infixl_2 . INFIX1 infixl_2 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR0 INFIXL1 INFIXL0 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_1 -> infixl_2 . INFIXR1 infixr_1 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR0 INFIXL1 INFIXL0 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On INFIXR1 shift to state 725
-- On INFIXL2 shift to state 727
-- On INFIX1 shift to state 729
-- On WITH reduce production infixr_1 -> infixl_2
-- On VBAR reduce production infixr_1 -> infixl_2
-- On VALUES reduce production infixr_1 -> infixl_2
-- On TABLEKEYS reduce production infixr_1 -> infixl_2
-- On SEMICOLON reduce production infixr_1 -> infixl_2
-- On RPAREN reduce production infixr_1 -> infixl_2
-- On RETURNING reduce production infixr_1 -> infixl_2
-- On RBRACKET reduce production infixr_1 -> infixl_2
-- On RBRACE reduce production infixr_1 -> infixl_2
-- On RARROW reduce production infixr_1 -> infixl_2
-- On OTHERWISE reduce production infixr_1 -> infixl_2
-- On ON reduce production infixr_1 -> infixl_2
-- On INFIXR0 reduce production infixr_1 -> infixl_2
-- On INFIXL1 reduce production infixr_1 -> infixl_2
-- On INFIXL0 reduce production infixr_1 -> infixl_2
-- On INFIX0 reduce production infixr_1 -> infixl_2
-- On FROM reduce production infixr_1 -> infixl_2
-- On FATRARROW reduce production infixr_1 -> infixl_2
-- On END reduce production infixr_1 -> infixl_2
-- On ELSE reduce production infixr_1 -> infixl_2
-- On DOTDOT reduce production infixr_1 -> infixl_2
-- On DELETE_LEFT reduce production infixr_1 -> infixl_2
-- On DELETE reduce production infixr_1 -> infixl_2
-- On DEFAULT reduce production infixr_1 -> infixl_2
-- On COMMA reduce production infixr_1 -> infixl_2
-- On COLON reduce production infixr_1 -> infixl_2
-- On CASE reduce production infixr_1 -> infixl_2
-- On BY reduce production infixr_1 -> infixl_2
-- On BARRBRACE reduce production infixr_1 -> infixl_2
-- On BARBAR reduce production infixr_1 -> infixl_2
-- On AS reduce production infixr_1 -> infixl_2
-- On AMPAMP reduce production infixr_1 -> infixl_2

State 725:
infixr_1 -> infixl_2 INFIXR1 . infixr_1 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR0 INFIXL1 INFIXL0 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 726
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 726:
infixr_1 -> infixl_2 INFIXR1 infixr_1 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR0 INFIXL1 INFIXL0 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On VBAR reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On VALUES reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On TABLEKEYS reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On SEMICOLON reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On RPAREN reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On RETURNING reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On RBRACKET reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On RBRACE reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On RARROW reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On OTHERWISE reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On ON reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On INFIXR0 reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On INFIXL1 reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On INFIXL0 reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On INFIX0 reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On FROM reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On FATRARROW reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On END reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On ELSE reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On DOTDOT reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On DELETE_LEFT reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On DELETE reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On DEFAULT reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On COMMA reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On COLON reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On CASE reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On BY reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On BARRBRACE reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On BARBAR reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On AS reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On AMPAMP reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1

State 727:
infixl_2 -> infixl_2 INFIXL2 . infixr_2 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 728
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 728:
infixl_2 -> infixl_2 INFIXL2 infixr_2 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On VBAR reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On VALUES reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On TABLEKEYS reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On SEMICOLON reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On RPAREN reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On RETURNING reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On RBRACKET reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On RBRACE reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On RARROW reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On OTHERWISE reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On ON reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On INFIXR1 reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On INFIXR0 reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On INFIXL2 reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On INFIXL1 reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On INFIXL0 reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On INFIX1 reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On INFIX0 reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On FROM reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On FATRARROW reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On END reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On ELSE reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On DOTDOT reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On DELETE_LEFT reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On DELETE reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On DEFAULT reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On COMMA reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On COLON reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On CASE reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On BY reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On BARRBRACE reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On BARBAR reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On AS reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On AMPAMP reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2

State 729:
infixr_1 -> infixl_2 INFIX1 . infixl_2 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR0 INFIXL1 INFIXL0 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 730
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 730:
infixl_2 -> infixl_2 . INFIXL2 infixr_2 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_1 -> infixl_2 INFIX1 infixl_2 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR0 INFIXL1 INFIXL0 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On INFIXL2 shift to state 727
-- On WITH reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On VBAR reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On VALUES reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On TABLEKEYS reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On SEMICOLON reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On RPAREN reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On RETURNING reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On RBRACKET reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On RBRACE reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On RARROW reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On OTHERWISE reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On ON reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On INFIXR0 reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On INFIXL1 reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On INFIXL0 reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On INFIX0 reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On FROM reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On FATRARROW reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On END reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On ELSE reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On DOTDOT reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On DELETE_LEFT reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On DELETE reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On DEFAULT reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On COMMA reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On COLON reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On CASE reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On BY reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On BARRBRACE reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On BARBAR reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On AS reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On AMPAMP reduce production infixr_1 -> infixl_2 INFIX1 infixl_2

State 731:
infixl_1 -> infixl_1 . INFIXL1 infixr_1 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR0 INFIXL1 INFIXL0 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_0 -> infixl_1 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXL0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_0 -> infixl_1 . INFIX0 infixl_1 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXL0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_0 -> infixl_1 . INFIXR0 infixr_0 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXL0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On INFIXR0 shift to state 732
-- On INFIXL1 shift to state 734
-- On INFIX0 shift to state 736
-- On WITH reduce production infixr_0 -> infixl_1
-- On VBAR reduce production infixr_0 -> infixl_1
-- On VALUES reduce production infixr_0 -> infixl_1
-- On TABLEKEYS reduce production infixr_0 -> infixl_1
-- On SEMICOLON reduce production infixr_0 -> infixl_1
-- On RPAREN reduce production infixr_0 -> infixl_1
-- On RETURNING reduce production infixr_0 -> infixl_1
-- On RBRACKET reduce production infixr_0 -> infixl_1
-- On RBRACE reduce production infixr_0 -> infixl_1
-- On RARROW reduce production infixr_0 -> infixl_1
-- On OTHERWISE reduce production infixr_0 -> infixl_1
-- On ON reduce production infixr_0 -> infixl_1
-- On INFIXL0 reduce production infixr_0 -> infixl_1
-- On FROM reduce production infixr_0 -> infixl_1
-- On FATRARROW reduce production infixr_0 -> infixl_1
-- On END reduce production infixr_0 -> infixl_1
-- On ELSE reduce production infixr_0 -> infixl_1
-- On DOTDOT reduce production infixr_0 -> infixl_1
-- On DELETE_LEFT reduce production infixr_0 -> infixl_1
-- On DELETE reduce production infixr_0 -> infixl_1
-- On DEFAULT reduce production infixr_0 -> infixl_1
-- On COMMA reduce production infixr_0 -> infixl_1
-- On COLON reduce production infixr_0 -> infixl_1
-- On CASE reduce production infixr_0 -> infixl_1
-- On BY reduce production infixr_0 -> infixl_1
-- On BARRBRACE reduce production infixr_0 -> infixl_1
-- On BARBAR reduce production infixr_0 -> infixl_1
-- On AS reduce production infixr_0 -> infixl_1
-- On AMPAMP reduce production infixr_0 -> infixl_1

State 732:
infixr_0 -> infixl_1 INFIXR0 . infixr_0 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXL0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 733
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 733:
infixr_0 -> infixl_1 INFIXR0 infixr_0 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXL0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On VBAR reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On VALUES reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On TABLEKEYS reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On SEMICOLON reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On RPAREN reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On RETURNING reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On RBRACKET reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On RBRACE reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On RARROW reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On OTHERWISE reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On ON reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On INFIXL0 reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On FROM reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On FATRARROW reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On END reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On ELSE reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On DOTDOT reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On DELETE_LEFT reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On DELETE reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On DEFAULT reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On COMMA reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On COLON reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On CASE reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On BY reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On BARRBRACE reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On BARBAR reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On AS reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On AMPAMP reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0

State 734:
infixl_1 -> infixl_1 INFIXL1 . infixr_1 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR0 INFIXL1 INFIXL0 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 735
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 735:
infixl_1 -> infixl_1 INFIXL1 infixr_1 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR0 INFIXL1 INFIXL0 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On VBAR reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On VALUES reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On TABLEKEYS reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On SEMICOLON reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On RPAREN reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On RETURNING reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On RBRACKET reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On RBRACE reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On RARROW reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On OTHERWISE reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On ON reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On INFIXR0 reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On INFIXL1 reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On INFIXL0 reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On INFIX0 reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On FROM reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On FATRARROW reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On END reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On ELSE reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On DOTDOT reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On DELETE_LEFT reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On DELETE reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On DEFAULT reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On COMMA reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On COLON reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On CASE reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On BY reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On BARRBRACE reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On BARBAR reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On AS reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On AMPAMP reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1

State 736:
infixr_0 -> infixl_1 INFIX0 . infixl_1 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXL0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 737
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 737:
infixl_1 -> infixl_1 . INFIXL1 infixr_1 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXL1 INFIXL0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
infixr_0 -> infixl_1 INFIX0 infixl_1 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXL0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On INFIXL1 shift to state 734
-- On WITH reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On VBAR reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On VALUES reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On TABLEKEYS reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On SEMICOLON reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On RPAREN reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On RETURNING reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On RBRACKET reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On RBRACE reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On RARROW reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On OTHERWISE reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On ON reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On INFIXL0 reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On FROM reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On FATRARROW reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On END reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On ELSE reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On DOTDOT reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On DELETE_LEFT reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On DELETE reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On DEFAULT reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On COMMA reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On COLON reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On CASE reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On BY reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On BARRBRACE reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On BARBAR reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On AS reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On AMPAMP reduce production infixr_0 -> infixl_1 INFIX0 infixl_1

State 738:
infixl_0 -> infixl_0 . INFIXL0 infixr_0 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXL0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
logical_expression -> logical_expression BARBAR infixl_0 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On INFIXL0 shift to state 739
-- On WITH reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On VBAR reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On VALUES reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On TABLEKEYS reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On SEMICOLON reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On RPAREN reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On RETURNING reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On RBRACKET reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On RBRACE reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On RARROW reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On OTHERWISE reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On ON reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On FROM reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On FATRARROW reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On END reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On ELSE reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On DOTDOT reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On DELETE_LEFT reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On DELETE reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On DEFAULT reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On COMMA reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On COLON reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On CASE reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On BY reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On BARRBRACE reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On BARBAR reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On AS reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On AMPAMP reduce production logical_expression -> logical_expression BARBAR infixl_0

State 739:
infixl_0 -> infixl_0 INFIXL0 . infixr_0 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXL0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 740
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 740:
infixl_0 -> infixl_0 INFIXL0 infixr_0 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXL0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On VBAR reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On VALUES reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On TABLEKEYS reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On SEMICOLON reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On RPAREN reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On RETURNING reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On RBRACKET reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On RBRACE reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On RARROW reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On OTHERWISE reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On ON reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On INFIXL0 reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On FROM reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On FATRARROW reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On END reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On ELSE reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On DOTDOT reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On DELETE_LEFT reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On DELETE reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On DEFAULT reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On COMMA reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On COLON reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On CASE reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On BY reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On BARRBRACE reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On BARBAR reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On AS reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On AMPAMP reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0

State 741:
logical_expression -> logical_expression AMPAMP . infixl_0 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 742
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 742:
infixl_0 -> infixl_0 . INFIXL0 infixr_0 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXL0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
logical_expression -> logical_expression AMPAMP infixl_0 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On INFIXL0 shift to state 739
-- On WITH reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On VBAR reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On VALUES reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On TABLEKEYS reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On SEMICOLON reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On RPAREN reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On RETURNING reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On RBRACKET reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On RBRACE reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On RARROW reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On OTHERWISE reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On ON reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On FROM reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On FATRARROW reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On END reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On ELSE reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On DOTDOT reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On DELETE_LEFT reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On DELETE reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On DEFAULT reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On COMMA reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On COLON reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On CASE reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On BY reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On BARRBRACE reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On BARBAR reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On AS reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On AMPAMP reduce production logical_expression -> logical_expression AMPAMP infixl_0

State 743:
exp -> lens_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production exp -> lens_expression
-- On VBAR reduce production exp -> lens_expression
-- On VALUES reduce production exp -> lens_expression
-- On TABLEKEYS reduce production exp -> lens_expression
-- On SEMICOLON reduce production exp -> lens_expression
-- On RPAREN reduce production exp -> lens_expression
-- On RBRACKET reduce production exp -> lens_expression
-- On RBRACE reduce production exp -> lens_expression
-- On OTHERWISE reduce production exp -> lens_expression
-- On ON reduce production exp -> lens_expression
-- On FROM reduce production exp -> lens_expression
-- On END reduce production exp -> lens_expression
-- On ELSE reduce production exp -> lens_expression
-- On DOTDOT reduce production exp -> lens_expression
-- On DELETE_LEFT reduce production exp -> lens_expression
-- On DELETE reduce production exp -> lens_expression
-- On DEFAULT reduce production exp -> lens_expression
-- On COMMA reduce production exp -> lens_expression
-- On CASE reduce production exp -> lens_expression
-- On BY reduce production exp -> lens_expression
-- On BARRBRACE reduce production exp -> lens_expression
-- On AS reduce production exp -> lens_expression

State 744:
escape_expression -> iteration_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production escape_expression -> iteration_expression
-- On VBAR reduce production escape_expression -> iteration_expression
-- On VALUES reduce production escape_expression -> iteration_expression
-- On TABLEKEYS reduce production escape_expression -> iteration_expression
-- On SEMICOLON reduce production escape_expression -> iteration_expression
-- On RPAREN reduce production escape_expression -> iteration_expression
-- On RBRACKET reduce production escape_expression -> iteration_expression
-- On RBRACE reduce production escape_expression -> iteration_expression
-- On OTHERWISE reduce production escape_expression -> iteration_expression
-- On ON reduce production escape_expression -> iteration_expression
-- On FROM reduce production escape_expression -> iteration_expression
-- On END reduce production escape_expression -> iteration_expression
-- On ELSE reduce production escape_expression -> iteration_expression
-- On DOTDOT reduce production escape_expression -> iteration_expression
-- On DELETE_LEFT reduce production escape_expression -> iteration_expression
-- On DELETE reduce production escape_expression -> iteration_expression
-- On DEFAULT reduce production escape_expression -> iteration_expression
-- On COMMA reduce production escape_expression -> iteration_expression
-- On CASE reduce production escape_expression -> iteration_expression
-- On BY reduce production escape_expression -> iteration_expression
-- On BARRBRACE reduce production escape_expression -> iteration_expression
-- On AS reduce production escape_expression -> iteration_expression

State 745:
infixl_0 -> infixl_0 . INFIXL0 infixr_0 [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXL0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
logical_expression -> infixl_0 . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP ]
-- On INFIXL0 shift to state 739
-- On WITH reduce production logical_expression -> infixl_0
-- On VBAR reduce production logical_expression -> infixl_0
-- On VALUES reduce production logical_expression -> infixl_0
-- On TABLEKEYS reduce production logical_expression -> infixl_0
-- On SEMICOLON reduce production logical_expression -> infixl_0
-- On RPAREN reduce production logical_expression -> infixl_0
-- On RETURNING reduce production logical_expression -> infixl_0
-- On RBRACKET reduce production logical_expression -> infixl_0
-- On RBRACE reduce production logical_expression -> infixl_0
-- On RARROW reduce production logical_expression -> infixl_0
-- On OTHERWISE reduce production logical_expression -> infixl_0
-- On ON reduce production logical_expression -> infixl_0
-- On FROM reduce production logical_expression -> infixl_0
-- On FATRARROW reduce production logical_expression -> infixl_0
-- On END reduce production logical_expression -> infixl_0
-- On ELSE reduce production logical_expression -> infixl_0
-- On DOTDOT reduce production logical_expression -> infixl_0
-- On DELETE_LEFT reduce production logical_expression -> infixl_0
-- On DELETE reduce production logical_expression -> infixl_0
-- On DEFAULT reduce production logical_expression -> infixl_0
-- On COMMA reduce production logical_expression -> infixl_0
-- On COLON reduce production logical_expression -> infixl_0
-- On CASE reduce production logical_expression -> infixl_0
-- On BY reduce production logical_expression -> infixl_0
-- On BARRBRACE reduce production logical_expression -> infixl_0
-- On BARBAR reduce production logical_expression -> infixl_0
-- On AS reduce production logical_expression -> infixl_0
-- On AMPAMP reduce production logical_expression -> infixl_0

State 746:
table_expression -> formlet_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production table_expression -> formlet_expression
-- On VBAR reduce production table_expression -> formlet_expression
-- On VALUES reduce production table_expression -> formlet_expression
-- On TABLEKEYS reduce production table_expression -> formlet_expression
-- On SEMICOLON reduce production table_expression -> formlet_expression
-- On RPAREN reduce production table_expression -> formlet_expression
-- On RBRACKET reduce production table_expression -> formlet_expression
-- On RBRACE reduce production table_expression -> formlet_expression
-- On OTHERWISE reduce production table_expression -> formlet_expression
-- On ON reduce production table_expression -> formlet_expression
-- On FROM reduce production table_expression -> formlet_expression
-- On END reduce production table_expression -> formlet_expression
-- On ELSE reduce production table_expression -> formlet_expression
-- On DOTDOT reduce production table_expression -> formlet_expression
-- On DELETE_LEFT reduce production table_expression -> formlet_expression
-- On DELETE reduce production table_expression -> formlet_expression
-- On DEFAULT reduce production table_expression -> formlet_expression
-- On COMMA reduce production table_expression -> formlet_expression
-- On CASE reduce production table_expression -> formlet_expression
-- On BY reduce production table_expression -> formlet_expression
-- On BARRBRACE reduce production table_expression -> formlet_expression
-- On AS reduce production table_expression -> formlet_expression

State 747:
table_generator -> pattern LLARROW exp . [ RPAREN COMMA ]
-- On RPAREN reduce production table_generator -> pattern LLARROW exp
-- On COMMA reduce production table_generator -> pattern LLARROW exp

State 748:
formlet_expression -> escape_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production formlet_expression -> escape_expression
-- On VBAR reduce production formlet_expression -> escape_expression
-- On VALUES reduce production formlet_expression -> escape_expression
-- On TABLEKEYS reduce production formlet_expression -> escape_expression
-- On SEMICOLON reduce production formlet_expression -> escape_expression
-- On RPAREN reduce production formlet_expression -> escape_expression
-- On RBRACKET reduce production formlet_expression -> escape_expression
-- On RBRACE reduce production formlet_expression -> escape_expression
-- On OTHERWISE reduce production formlet_expression -> escape_expression
-- On ON reduce production formlet_expression -> escape_expression
-- On FROM reduce production formlet_expression -> escape_expression
-- On END reduce production formlet_expression -> escape_expression
-- On ELSE reduce production formlet_expression -> escape_expression
-- On DOTDOT reduce production formlet_expression -> escape_expression
-- On DELETE_LEFT reduce production formlet_expression -> escape_expression
-- On DELETE reduce production formlet_expression -> escape_expression
-- On DEFAULT reduce production formlet_expression -> escape_expression
-- On COMMA reduce production formlet_expression -> escape_expression
-- On CASE reduce production formlet_expression -> escape_expression
-- On BY reduce production formlet_expression -> escape_expression
-- On BARRBRACE reduce production formlet_expression -> escape_expression
-- On AS reduce production formlet_expression -> escape_expression

State 749:
session_expression -> db_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production session_expression -> db_expression
-- On VBAR reduce production session_expression -> db_expression
-- On VALUES reduce production session_expression -> db_expression
-- On TABLEKEYS reduce production session_expression -> db_expression
-- On SEMICOLON reduce production session_expression -> db_expression
-- On RPAREN reduce production session_expression -> db_expression
-- On RBRACKET reduce production session_expression -> db_expression
-- On RBRACE reduce production session_expression -> db_expression
-- On OTHERWISE reduce production session_expression -> db_expression
-- On ON reduce production session_expression -> db_expression
-- On FROM reduce production session_expression -> db_expression
-- On END reduce production session_expression -> db_expression
-- On ELSE reduce production session_expression -> db_expression
-- On DOTDOT reduce production session_expression -> db_expression
-- On DELETE_LEFT reduce production session_expression -> db_expression
-- On DELETE reduce production session_expression -> db_expression
-- On DEFAULT reduce production session_expression -> db_expression
-- On COMMA reduce production session_expression -> db_expression
-- On CASE reduce production session_expression -> db_expression
-- On BY reduce production session_expression -> db_expression
-- On BARRBRACE reduce production session_expression -> db_expression
-- On AS reduce production session_expression -> db_expression

State 750:
lens_expression -> database_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production lens_expression -> database_expression
-- On VBAR reduce production lens_expression -> database_expression
-- On VALUES reduce production lens_expression -> database_expression
-- On TABLEKEYS reduce production lens_expression -> database_expression
-- On SEMICOLON reduce production lens_expression -> database_expression
-- On RPAREN reduce production lens_expression -> database_expression
-- On RBRACKET reduce production lens_expression -> database_expression
-- On RBRACE reduce production lens_expression -> database_expression
-- On OTHERWISE reduce production lens_expression -> database_expression
-- On ON reduce production lens_expression -> database_expression
-- On FROM reduce production lens_expression -> database_expression
-- On END reduce production lens_expression -> database_expression
-- On ELSE reduce production lens_expression -> database_expression
-- On DOTDOT reduce production lens_expression -> database_expression
-- On DELETE_LEFT reduce production lens_expression -> database_expression
-- On DELETE reduce production lens_expression -> database_expression
-- On DEFAULT reduce production lens_expression -> database_expression
-- On COMMA reduce production lens_expression -> database_expression
-- On CASE reduce production lens_expression -> database_expression
-- On BY reduce production lens_expression -> database_expression
-- On BARRBRACE reduce production lens_expression -> database_expression
-- On AS reduce production lens_expression -> database_expression

State 751:
case_expression -> conditional_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production case_expression -> conditional_expression
-- On VBAR reduce production case_expression -> conditional_expression
-- On VALUES reduce production case_expression -> conditional_expression
-- On TABLEKEYS reduce production case_expression -> conditional_expression
-- On SEMICOLON reduce production case_expression -> conditional_expression
-- On RPAREN reduce production case_expression -> conditional_expression
-- On RBRACKET reduce production case_expression -> conditional_expression
-- On RBRACE reduce production case_expression -> conditional_expression
-- On OTHERWISE reduce production case_expression -> conditional_expression
-- On ON reduce production case_expression -> conditional_expression
-- On FROM reduce production case_expression -> conditional_expression
-- On END reduce production case_expression -> conditional_expression
-- On ELSE reduce production case_expression -> conditional_expression
-- On DOTDOT reduce production case_expression -> conditional_expression
-- On DELETE_LEFT reduce production case_expression -> conditional_expression
-- On DELETE reduce production case_expression -> conditional_expression
-- On DEFAULT reduce production case_expression -> conditional_expression
-- On COMMA reduce production case_expression -> conditional_expression
-- On CASE reduce production case_expression -> conditional_expression
-- On BY reduce production case_expression -> conditional_expression
-- On BARRBRACE reduce production case_expression -> conditional_expression
-- On AS reduce production case_expression -> conditional_expression

State 752:
iteration_expression -> case_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production iteration_expression -> case_expression
-- On VBAR reduce production iteration_expression -> case_expression
-- On VALUES reduce production iteration_expression -> case_expression
-- On TABLEKEYS reduce production iteration_expression -> case_expression
-- On SEMICOLON reduce production iteration_expression -> case_expression
-- On RPAREN reduce production iteration_expression -> case_expression
-- On RBRACKET reduce production iteration_expression -> case_expression
-- On RBRACE reduce production iteration_expression -> case_expression
-- On OTHERWISE reduce production iteration_expression -> case_expression
-- On ON reduce production iteration_expression -> case_expression
-- On FROM reduce production iteration_expression -> case_expression
-- On END reduce production iteration_expression -> case_expression
-- On ELSE reduce production iteration_expression -> case_expression
-- On DOTDOT reduce production iteration_expression -> case_expression
-- On DELETE_LEFT reduce production iteration_expression -> case_expression
-- On DELETE reduce production iteration_expression -> case_expression
-- On DEFAULT reduce production iteration_expression -> case_expression
-- On COMMA reduce production iteration_expression -> case_expression
-- On CASE reduce production iteration_expression -> case_expression
-- On BY reduce production iteration_expression -> case_expression
-- On BARRBRACE reduce production iteration_expression -> case_expression
-- On AS reduce production iteration_expression -> case_expression

State 753:
arg_spec -> LPAREN exps . RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On RPAREN shift to state 754

State 754:
arg_spec -> LPAREN exps RPAREN . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production arg_spec -> LPAREN exps RPAREN
-- On VBAR reduce production arg_spec -> LPAREN exps RPAREN
-- On VALUES reduce production arg_spec -> LPAREN exps RPAREN
-- On TABLEKEYS reduce production arg_spec -> LPAREN exps RPAREN
-- On SEMICOLON reduce production arg_spec -> LPAREN exps RPAREN
-- On RPAREN reduce production arg_spec -> LPAREN exps RPAREN
-- On RETURNING reduce production arg_spec -> LPAREN exps RPAREN
-- On RBRACKET reduce production arg_spec -> LPAREN exps RPAREN
-- On RBRACE reduce production arg_spec -> LPAREN exps RPAREN
-- On RARROW reduce production arg_spec -> LPAREN exps RPAREN
-- On OTHERWISE reduce production arg_spec -> LPAREN exps RPAREN
-- On ON reduce production arg_spec -> LPAREN exps RPAREN
-- On MINUSDOT reduce production arg_spec -> LPAREN exps RPAREN
-- On MINUS reduce production arg_spec -> LPAREN exps RPAREN
-- On LPAREN reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR9 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR8 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR7 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR6 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR5 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR4 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR3 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR2 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR1 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR0 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL9 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL8 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL7 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL6 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL5 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL4 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL3 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL2 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL1 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL0 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX9 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX8 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX7 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX6 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX5 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX4 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX3 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX2 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX1 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX0 reduce production arg_spec -> LPAREN exps RPAREN
-- On FROM reduce production arg_spec -> LPAREN exps RPAREN
-- On FATRARROW reduce production arg_spec -> LPAREN exps RPAREN
-- On EQUALSTILDE reduce production arg_spec -> LPAREN exps RPAREN
-- On END reduce production arg_spec -> LPAREN exps RPAREN
-- On ELSE reduce production arg_spec -> LPAREN exps RPAREN
-- On DOTDOT reduce production arg_spec -> LPAREN exps RPAREN
-- On DOT reduce production arg_spec -> LPAREN exps RPAREN
-- On DELETE_LEFT reduce production arg_spec -> LPAREN exps RPAREN
-- On DELETE reduce production arg_spec -> LPAREN exps RPAREN
-- On DEFAULT reduce production arg_spec -> LPAREN exps RPAREN
-- On COMMA reduce production arg_spec -> LPAREN exps RPAREN
-- On COLONCOLON reduce production arg_spec -> LPAREN exps RPAREN
-- On COLON reduce production arg_spec -> LPAREN exps RPAREN
-- On CASE reduce production arg_spec -> LPAREN exps RPAREN
-- On BY reduce production arg_spec -> LPAREN exps RPAREN
-- On BARRBRACE reduce production arg_spec -> LPAREN exps RPAREN
-- On BARBAR reduce production arg_spec -> LPAREN exps RPAREN
-- On BANG reduce production arg_spec -> LPAREN exps RPAREN
-- On AS reduce production arg_spec -> LPAREN exps RPAREN
-- On AMPAMP reduce production arg_spec -> LPAREN exps RPAREN

State 755:
exps -> exp . COMMA exps [ RPAREN RBRACKET ]
exps -> exp . [ RPAREN RBRACKET ]
-- On COMMA shift to state 756
-- On RPAREN reduce production exps -> exp
-- On RBRACKET reduce production exps -> exp

State 756:
exps -> exp COMMA . exps [ RPAREN RBRACKET ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exps shift to state 757
-- On exp shift to state 755
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 757:
exps -> exp COMMA exps . [ RPAREN RBRACKET ]
-- On RPAREN reduce production exps -> exp COMMA exps
-- On RBRACKET reduce production exps -> exp COMMA exps

State 758:
perhaps_orderby -> ORDERBY LPAREN exps . RPAREN [ VARIABLE UPDATE UINTEGER UFLOAT TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ]
-- On RPAREN shift to state 759

State 759:
perhaps_orderby -> ORDERBY LPAREN exps RPAREN . [ VARIABLE UPDATE UINTEGER UFLOAT TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ]
-- On VARIABLE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On UPDATE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On UINTEGER reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On UFLOAT reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On TRY reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On TRUE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On TABLE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On SWITCH reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On STRING reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On SPAWNWAIT reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On SPAWNCLIENT reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On SPAWNAT reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On SPAWNANGELAT reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On SPAWNANGEL reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On SPAWN reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On SHALLOWHANDLER reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On SHALLOWHANDLE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On SELECT reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On RECEIVE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On RAISE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On QUERY reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On PREFIXOP reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On PAGE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On OFFER reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On MINUSDOT reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On MINUS reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On LXML reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On LPAREN reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On LINFUN reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On LENSSELECT reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On LENSPUT reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On LENSJOIN reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On LENSGET reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On LENSDROP reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On LENS reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On LEFTTRIANGLE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On LBRACKET reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On LBRACE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On INSERT reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On IF reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On HANDLER reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On HANDLE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On FUN reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On FORMLET reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On FOR reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On FALSE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On ESCAPE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On DOOP reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On DELETE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On DATABASE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On CONSTRUCTOR reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On CHAR reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN

State 760:
iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby . exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 761
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 761:
iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On VBAR reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On VALUES reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On TABLEKEYS reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On SEMICOLON reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On RPAREN reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On RBRACKET reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On RBRACE reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On OTHERWISE reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On ON reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On FROM reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On END reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On ELSE reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On DOTDOT reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On DELETE_LEFT reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On DELETE reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On DEFAULT reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On COMMA reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On CASE reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On BY reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On BARRBRACE reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On AS reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp

State 762:
list_generator -> pattern . LARROW exp [ RPAREN COMMA ]
table_generator -> pattern . LLARROW exp [ RPAREN COMMA ]
-- On LLARROW shift to state 588
-- On LARROW shift to state 763

State 763:
list_generator -> pattern LARROW . exp [ RPAREN COMMA ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 764
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 764:
list_generator -> pattern LARROW exp . [ RPAREN COMMA ]
-- On RPAREN reduce production list_generator -> pattern LARROW exp
-- On COMMA reduce production list_generator -> pattern LARROW exp

State 765:
generator -> list_generator . [ RPAREN COMMA ]
-- On RPAREN reduce production generator -> list_generator
-- On COMMA reduce production generator -> list_generator

State 766:
perhaps_generators -> generators . [ RPAREN ]
-- On RPAREN reduce production perhaps_generators -> generators

State 767:
generators -> generator . [ RPAREN ]
generators -> generator . COMMA generators [ RPAREN ]
-- On COMMA shift to state 768
-- On RPAREN reduce production generators -> generator

State 768:
generators -> generator COMMA . generators [ RPAREN ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On table_generator shift to state 555
-- On primary_pattern shift to state 275
-- On pattern shift to state 762
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On list_generator shift to state 765
-- On generators shift to state 769
-- On generator shift to state 767
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 769:
generators -> generator COMMA generators . [ RPAREN ]
-- On RPAREN reduce production generators -> generator COMMA generators

State 770:
formlet_expression -> FORMLET xml YIELDS exp . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On VBAR reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On VALUES reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On TABLEKEYS reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On SEMICOLON reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On RPAREN reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On RBRACKET reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On RBRACE reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On OTHERWISE reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On ON reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On FROM reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On END reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On ELSE reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On DOTDOT reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On DELETE_LEFT reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On DELETE reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On DEFAULT reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On COMMA reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On CASE reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On BY reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On BARRBRACE reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On AS reduce production formlet_expression -> FORMLET xml YIELDS exp

State 771:
case_expression -> HANDLE LPAREN exp . RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
case_expression -> HANDLE LPAREN exp . RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RPAREN shift to state 772

State 772:
case_expression -> HANDLE LPAREN exp RPAREN . LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
case_expression -> HANDLE LPAREN exp RPAREN . LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LPAREN shift to state 773
-- On LBRACE shift to state 787

State 773:
case_expression -> HANDLE LPAREN exp RPAREN LPAREN . handle_params RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 774
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On handle_params shift to state 777
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 774:
handle_params -> logical_expression . RARROW pattern [ RPAREN COMMA ]
logical_expression -> logical_expression . BARBAR infixl_0 [ RARROW BARBAR AMPAMP ]
logical_expression -> logical_expression . AMPAMP infixl_0 [ RARROW BARBAR AMPAMP ]
-- On RARROW shift to state 775
-- On BARBAR shift to state 622
-- On AMPAMP shift to state 741

State 775:
handle_params -> logical_expression RARROW . pattern [ RPAREN COMMA ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On primary_pattern shift to state 275
-- On pattern shift to state 776
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 776:
handle_params -> logical_expression RARROW pattern . [ RPAREN COMMA ]
-- On RPAREN reduce production handle_params -> logical_expression RARROW pattern
-- On COMMA reduce production handle_params -> logical_expression RARROW pattern

State 777:
case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params . RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
handle_params -> handle_params . COMMA logical_expression RARROW pattern [ RPAREN COMMA ]
-- On RPAREN shift to state 778
-- On COMMA shift to state 783

State 778:
case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN . LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LBRACE shift to state 779

State 779:
case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE . perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On CASE shift to state 336
-- On perhaps_cases shift to state 780
-- On cases shift to state 782
-- On case shift to state 503
-- On RBRACE reduce production perhaps_cases ->

State 780:
case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases . RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RBRACE shift to state 781

State 781:
case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On VBAR reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On VALUES reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On TABLEKEYS reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On SEMICOLON reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On RPAREN reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On RBRACKET reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On RBRACE reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On OTHERWISE reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On ON reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On FROM reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On END reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On ELSE reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On DOTDOT reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On DELETE_LEFT reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On DELETE reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On DEFAULT reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On COMMA reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On CASE reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On BY reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On BARRBRACE reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE
-- On AS reduce production case_expression -> HANDLE LPAREN exp RPAREN LPAREN handle_params RPAREN LBRACE perhaps_cases RBRACE

State 782:
perhaps_cases -> cases . [ RBRACE ]
-- On RBRACE reduce production perhaps_cases -> cases

State 783:
handle_params -> handle_params COMMA . logical_expression RARROW pattern [ RPAREN COMMA ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 784
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 784:
handle_params -> handle_params COMMA logical_expression . RARROW pattern [ RPAREN COMMA ]
logical_expression -> logical_expression . BARBAR infixl_0 [ RARROW BARBAR AMPAMP ]
logical_expression -> logical_expression . AMPAMP infixl_0 [ RARROW BARBAR AMPAMP ]
-- On RARROW shift to state 785
-- On BARBAR shift to state 622
-- On AMPAMP shift to state 741

State 785:
handle_params -> handle_params COMMA logical_expression RARROW . pattern [ RPAREN COMMA ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On primary_pattern shift to state 275
-- On pattern shift to state 786
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 786:
handle_params -> handle_params COMMA logical_expression RARROW pattern . [ RPAREN COMMA ]
-- On RPAREN reduce production handle_params -> handle_params COMMA logical_expression RARROW pattern
-- On COMMA reduce production handle_params -> handle_params COMMA logical_expression RARROW pattern

State 787:
case_expression -> HANDLE LPAREN exp RPAREN LBRACE . perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On CASE shift to state 336
-- On perhaps_cases shift to state 788
-- On cases shift to state 782
-- On case shift to state 503
-- On RBRACE reduce production perhaps_cases ->

State 788:
case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases . RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RBRACE shift to state 789

State 789:
case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On VBAR reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On VALUES reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On TABLEKEYS reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On SEMICOLON reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On RPAREN reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On RBRACKET reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On RBRACE reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On OTHERWISE reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On ON reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On FROM reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On END reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On ELSE reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On DOTDOT reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On DELETE_LEFT reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On DELETE reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On DEFAULT reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On COMMA reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On CASE reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On BY reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On BARRBRACE reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On AS reduce production case_expression -> HANDLE LPAREN exp RPAREN LBRACE perhaps_cases RBRACE

State 790:
conditional_expression -> IF LPAREN exp . RPAREN exp ELSE exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RPAREN shift to state 791

State 791:
conditional_expression -> IF LPAREN exp RPAREN . exp ELSE exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 792
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 792:
conditional_expression -> IF LPAREN exp RPAREN exp . ELSE exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On ELSE shift to state 793

State 793:
conditional_expression -> IF LPAREN exp RPAREN exp ELSE . exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 794
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 794:
conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On VBAR reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On VALUES reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On TABLEKEYS reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On SEMICOLON reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On RPAREN reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On RBRACKET reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On RBRACE reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On OTHERWISE reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On ON reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On FROM reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On END reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On ELSE reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On DOTDOT reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On DELETE_LEFT reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On DELETE reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On DEFAULT reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On COMMA reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On CASE reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On BY reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On BARRBRACE reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On AS reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp

State 795:
database_expression -> INSERT exp . VALUES LPAREN RPAREN exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp . VALUES LPAREN record_labels RPAREN exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp . VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp . VALUES LPAREN RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp . VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp . VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp . VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VALUES shift to state 796

State 796:
database_expression -> INSERT exp VALUES . LPAREN RPAREN exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES . LPAREN record_labels RPAREN exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES . LBRACKET LPAREN labeled_exps RPAREN RBRACKET [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES . LPAREN RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES . LPAREN record_labels RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES . LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES . LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LPAREN shift to state 797
-- On LBRACKET shift to state 812

State 797:
database_expression -> INSERT exp VALUES LPAREN . RPAREN exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES LPAREN . record_labels RPAREN exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES LPAREN . RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES LPAREN . record_labels RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On RPAREN shift to state 798
-- On CONSTRUCTOR shift to state 91
-- On record_labels shift to state 803
-- On record_label shift to state 809
-- On field_label shift to state 254

State 798:
database_expression -> INSERT exp VALUES LPAREN RPAREN . exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES LPAREN RPAREN . db_expression RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 799
-- On escape_expression shift to state 748
-- On db_expression shift to state 800
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 799:
database_expression -> INSERT exp VALUES LPAREN RPAREN exp . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On VBAR reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On VALUES reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On TABLEKEYS reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On SEMICOLON reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On RPAREN reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On RBRACKET reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On RBRACE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On OTHERWISE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On ON reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On FROM reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On END reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On ELSE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On DOTDOT reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On DELETE_LEFT reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On DELETE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On DEFAULT reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On COMMA reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On CASE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On BY reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On BARRBRACE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On AS reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp

State 800:
database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression . RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
session_expression -> db_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RETURNING shift to state 801
-- On WITH reduce production session_expression -> db_expression
-- On VBAR reduce production session_expression -> db_expression
-- On VALUES reduce production session_expression -> db_expression
-- On TABLEKEYS reduce production session_expression -> db_expression
-- On SEMICOLON reduce production session_expression -> db_expression
-- On RPAREN reduce production session_expression -> db_expression
-- On RBRACKET reduce production session_expression -> db_expression
-- On RBRACE reduce production session_expression -> db_expression
-- On OTHERWISE reduce production session_expression -> db_expression
-- On ON reduce production session_expression -> db_expression
-- On FROM reduce production session_expression -> db_expression
-- On END reduce production session_expression -> db_expression
-- On ELSE reduce production session_expression -> db_expression
-- On DOTDOT reduce production session_expression -> db_expression
-- On DELETE_LEFT reduce production session_expression -> db_expression
-- On DELETE reduce production session_expression -> db_expression
-- On DEFAULT reduce production session_expression -> db_expression
-- On COMMA reduce production session_expression -> db_expression
-- On CASE reduce production session_expression -> db_expression
-- On BY reduce production session_expression -> db_expression
-- On BARRBRACE reduce production session_expression -> db_expression
-- On AS reduce production session_expression -> db_expression

State 801:
database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING . VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 802

State 802:
database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On VBAR reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On VALUES reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On TABLEKEYS reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On SEMICOLON reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On RPAREN reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On RBRACKET reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On RBRACE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On OTHERWISE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On ON reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On FROM reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On END reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On ELSE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On DOTDOT reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On DELETE_LEFT reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On DELETE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On DEFAULT reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On COMMA reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On CASE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On BY reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On BARRBRACE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On AS reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE

State 803:
database_expression -> INSERT exp VALUES LPAREN record_labels . RPAREN exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES LPAREN record_labels . RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RPAREN shift to state 804

State 804:
database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN . exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN . db_expression RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 805
-- On escape_expression shift to state 748
-- On db_expression shift to state 806
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 805:
database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On VBAR reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On VALUES reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On TABLEKEYS reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On SEMICOLON reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On RPAREN reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On RBRACKET reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On RBRACE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On OTHERWISE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On ON reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On FROM reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On END reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On ELSE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On DOTDOT reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On DELETE_LEFT reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On DELETE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On DEFAULT reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On COMMA reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On CASE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On BY reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On BARRBRACE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On AS reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp

State 806:
database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression . RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
session_expression -> db_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RETURNING shift to state 807
-- On WITH reduce production session_expression -> db_expression
-- On VBAR reduce production session_expression -> db_expression
-- On VALUES reduce production session_expression -> db_expression
-- On TABLEKEYS reduce production session_expression -> db_expression
-- On SEMICOLON reduce production session_expression -> db_expression
-- On RPAREN reduce production session_expression -> db_expression
-- On RBRACKET reduce production session_expression -> db_expression
-- On RBRACE reduce production session_expression -> db_expression
-- On OTHERWISE reduce production session_expression -> db_expression
-- On ON reduce production session_expression -> db_expression
-- On FROM reduce production session_expression -> db_expression
-- On END reduce production session_expression -> db_expression
-- On ELSE reduce production session_expression -> db_expression
-- On DOTDOT reduce production session_expression -> db_expression
-- On DELETE_LEFT reduce production session_expression -> db_expression
-- On DELETE reduce production session_expression -> db_expression
-- On DEFAULT reduce production session_expression -> db_expression
-- On COMMA reduce production session_expression -> db_expression
-- On CASE reduce production session_expression -> db_expression
-- On BY reduce production session_expression -> db_expression
-- On BARRBRACE reduce production session_expression -> db_expression
-- On AS reduce production session_expression -> db_expression

State 807:
database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING . VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 808

State 808:
database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On VBAR reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On VALUES reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On TABLEKEYS reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On SEMICOLON reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On RPAREN reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On RBRACKET reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On RBRACE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On OTHERWISE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On ON reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On FROM reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On END reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On ELSE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On DOTDOT reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On DELETE_LEFT reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On DELETE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On DEFAULT reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On COMMA reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On CASE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On BY reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On BARRBRACE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On AS reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE

State 809:
record_labels -> record_label . COMMA record_labels [ RPAREN ]
record_labels -> record_label . [ RPAREN ]
-- On COMMA shift to state 810
-- On RPAREN reduce production record_labels -> record_label

State 810:
record_labels -> record_label COMMA . record_labels [ RPAREN ]
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On CONSTRUCTOR shift to state 91
-- On record_labels shift to state 811
-- On record_label shift to state 809
-- On field_label shift to state 254

State 811:
record_labels -> record_label COMMA record_labels . [ RPAREN ]
-- On RPAREN reduce production record_labels -> record_label COMMA record_labels

State 812:
database_expression -> INSERT exp VALUES LBRACKET . LPAREN labeled_exps RPAREN RBRACKET [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES LBRACKET . LPAREN RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES LBRACKET . LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LPAREN shift to state 813

State 813:
database_expression -> INSERT exp VALUES LBRACKET LPAREN . labeled_exps RPAREN RBRACKET [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES LBRACKET LPAREN . RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES LBRACKET LPAREN . labeled_exps RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On RPAREN shift to state 814
-- On CONSTRUCTOR shift to state 91
-- On record_label shift to state 818
-- On labeled_exps shift to state 823
-- On field_label shift to state 254

State 814:
database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN . RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RBRACKET shift to state 815

State 815:
database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET . RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RETURNING shift to state 816

State 816:
database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING . VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 817

State 817:
database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On VBAR reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On VALUES reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On TABLEKEYS reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On SEMICOLON reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On RPAREN reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On RBRACKET reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On RBRACE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On OTHERWISE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On ON reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On FROM reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On END reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On ELSE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On DOTDOT reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On DELETE_LEFT reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On DELETE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On DEFAULT reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On COMMA reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On CASE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On BY reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On BARRBRACE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On AS reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE

State 818:
labeled_exps -> record_label . EQ exp [ VBAR RPAREN ]
labeled_exps -> record_label . EQ exp COMMA labeled_exps [ VBAR RPAREN ]
-- On EQ shift to state 819

State 819:
labeled_exps -> record_label EQ . exp [ VBAR RPAREN ]
labeled_exps -> record_label EQ . exp COMMA labeled_exps [ VBAR RPAREN ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 820
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 820:
labeled_exps -> record_label EQ exp . [ VBAR RPAREN ]
labeled_exps -> record_label EQ exp . COMMA labeled_exps [ VBAR RPAREN ]
-- On COMMA shift to state 821
-- On VBAR reduce production labeled_exps -> record_label EQ exp
-- On RPAREN reduce production labeled_exps -> record_label EQ exp

State 821:
labeled_exps -> record_label EQ exp COMMA . labeled_exps [ VBAR RPAREN ]
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On CONSTRUCTOR shift to state 91
-- On record_label shift to state 818
-- On labeled_exps shift to state 822
-- On field_label shift to state 254

State 822:
labeled_exps -> record_label EQ exp COMMA labeled_exps . [ VBAR RPAREN ]
-- On VBAR reduce production labeled_exps -> record_label EQ exp COMMA labeled_exps
-- On RPAREN reduce production labeled_exps -> record_label EQ exp COMMA labeled_exps

State 823:
database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps . RPAREN RBRACKET [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps . RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RPAREN shift to state 824

State 824:
database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN . RBRACKET [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN . RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RBRACKET shift to state 825

State 825:
database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET . RETURNING VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RETURNING shift to state 826
-- On WITH reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On VBAR reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On VALUES reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On TABLEKEYS reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On SEMICOLON reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On RPAREN reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On RBRACKET reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On RBRACE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On OTHERWISE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On ON reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On FROM reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On END reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On ELSE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On DOTDOT reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On DELETE_LEFT reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On DELETE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On DEFAULT reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On COMMA reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On CASE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On BY reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On BARRBRACE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On AS reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET

State 826:
database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING . VARIABLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 827

State 827:
database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On VBAR reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On VALUES reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On TABLEKEYS reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On SEMICOLON reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On RPAREN reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On RBRACKET reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On RBRACE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On OTHERWISE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On ON reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On FROM reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On END reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On ELSE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On DOTDOT reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On DELETE_LEFT reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On DELETE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On DEFAULT reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On COMMA reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On CASE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On BY reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On BARRBRACE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On AS reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE

State 828:
primary_expression -> LBRACKET exps . RBRACKET [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On RBRACKET shift to state 829

State 829:
primary_expression -> LBRACKET exps RBRACKET . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production primary_expression -> LBRACKET exps RBRACKET
-- On VBAR reduce production primary_expression -> LBRACKET exps RBRACKET
-- On VALUES reduce production primary_expression -> LBRACKET exps RBRACKET
-- On TABLEKEYS reduce production primary_expression -> LBRACKET exps RBRACKET
-- On SEMICOLON reduce production primary_expression -> LBRACKET exps RBRACKET
-- On RPAREN reduce production primary_expression -> LBRACKET exps RBRACKET
-- On RETURNING reduce production primary_expression -> LBRACKET exps RBRACKET
-- On RBRACKET reduce production primary_expression -> LBRACKET exps RBRACKET
-- On RBRACE reduce production primary_expression -> LBRACKET exps RBRACKET
-- On RARROW reduce production primary_expression -> LBRACKET exps RBRACKET
-- On POSTFIXOP reduce production primary_expression -> LBRACKET exps RBRACKET
-- On OTHERWISE reduce production primary_expression -> LBRACKET exps RBRACKET
-- On ON reduce production primary_expression -> LBRACKET exps RBRACKET
-- On MINUSDOT reduce production primary_expression -> LBRACKET exps RBRACKET
-- On MINUS reduce production primary_expression -> LBRACKET exps RBRACKET
-- On LPAREN reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR9 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR8 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR7 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR6 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR5 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR4 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR3 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR2 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR1 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR0 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL9 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL8 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL7 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL6 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL5 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL4 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL3 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL2 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL1 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL0 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX9 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX8 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX7 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX6 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX5 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX4 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX3 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX2 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX1 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX0 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On FROM reduce production primary_expression -> LBRACKET exps RBRACKET
-- On FATRARROW reduce production primary_expression -> LBRACKET exps RBRACKET
-- On EQUALSTILDE reduce production primary_expression -> LBRACKET exps RBRACKET
-- On END reduce production primary_expression -> LBRACKET exps RBRACKET
-- On ELSE reduce production primary_expression -> LBRACKET exps RBRACKET
-- On DOTDOT reduce production primary_expression -> LBRACKET exps RBRACKET
-- On DOT reduce production primary_expression -> LBRACKET exps RBRACKET
-- On DELETE_LEFT reduce production primary_expression -> LBRACKET exps RBRACKET
-- On DELETE reduce production primary_expression -> LBRACKET exps RBRACKET
-- On DEFAULT reduce production primary_expression -> LBRACKET exps RBRACKET
-- On COMMA reduce production primary_expression -> LBRACKET exps RBRACKET
-- On COLONCOLON reduce production primary_expression -> LBRACKET exps RBRACKET
-- On COLON reduce production primary_expression -> LBRACKET exps RBRACKET
-- On CASE reduce production primary_expression -> LBRACKET exps RBRACKET
-- On BY reduce production primary_expression -> LBRACKET exps RBRACKET
-- On BARRBRACE reduce production primary_expression -> LBRACKET exps RBRACKET
-- On BARBAR reduce production primary_expression -> LBRACKET exps RBRACKET
-- On BANG reduce production primary_expression -> LBRACKET exps RBRACKET
-- On AS reduce production primary_expression -> LBRACKET exps RBRACKET
-- On AMPAMP reduce production primary_expression -> LBRACKET exps RBRACKET

State 830:
exps -> exp . COMMA exps [ RBRACKET ]
exps -> exp . [ RBRACKET ]
primary_expression -> LBRACKET exp . DOTDOT exp RBRACKET [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On DOTDOT shift to state 831
-- On COMMA shift to state 756
-- On RBRACKET reduce production exps -> exp

State 831:
primary_expression -> LBRACKET exp DOTDOT . exp RBRACKET [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 832
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 832:
primary_expression -> LBRACKET exp DOTDOT exp . RBRACKET [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On RBRACKET shift to state 833

State 833:
primary_expression -> LBRACKET exp DOTDOT exp RBRACKET . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On VBAR reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On VALUES reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On TABLEKEYS reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On SEMICOLON reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On RPAREN reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On RETURNING reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On RBRACKET reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On RBRACE reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On RARROW reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On POSTFIXOP reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On OTHERWISE reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On ON reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On MINUSDOT reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On MINUS reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On LPAREN reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR9 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR8 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR7 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR6 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR5 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR4 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR3 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR2 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR1 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR0 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL9 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL8 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL7 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL6 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL5 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL4 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL3 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL2 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL1 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL0 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX9 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX8 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX7 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX6 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX5 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX4 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX3 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX2 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX1 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX0 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On FROM reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On FATRARROW reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On EQUALSTILDE reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On END reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On ELSE reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On DOTDOT reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On DOT reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On DELETE_LEFT reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On DELETE reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On DEFAULT reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On COMMA reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On COLONCOLON reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On COLON reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On CASE reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On BY reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On BARRBRACE reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On BARBAR reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On BANG reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On AS reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On AMPAMP reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET

State 834:
lens_expression -> LENS exp . DEFAULT [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
lens_expression -> LENS exp . TABLEKEYS exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
lens_expression -> LENS exp . WITH LBRACE fn_deps RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH shift to state 835
-- On TABLEKEYS shift to state 847
-- On DEFAULT shift to state 849

State 835:
lens_expression -> LENS exp WITH . LBRACE fn_deps RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LBRACE shift to state 836

State 836:
lens_expression -> LENS exp WITH LBRACE . fn_deps RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 837
-- On fn_deps shift to state 839
-- On fn_dep_cols shift to state 841
-- On fn_dep shift to state 844

State 837:
fn_dep_cols -> VARIABLE . [ RBRACE RARROW COMMA ]
fn_dep_cols -> VARIABLE . fn_dep_cols [ RBRACE RARROW COMMA ]
-- On VARIABLE shift to state 837
-- On fn_dep_cols shift to state 838
-- On RBRACE reduce production fn_dep_cols -> VARIABLE
-- On RARROW reduce production fn_dep_cols -> VARIABLE
-- On COMMA reduce production fn_dep_cols -> VARIABLE

State 838:
fn_dep_cols -> VARIABLE fn_dep_cols . [ RBRACE RARROW COMMA ]
-- On RBRACE reduce production fn_dep_cols -> VARIABLE fn_dep_cols
-- On RARROW reduce production fn_dep_cols -> VARIABLE fn_dep_cols
-- On COMMA reduce production fn_dep_cols -> VARIABLE fn_dep_cols

State 839:
lens_expression -> LENS exp WITH LBRACE fn_deps . RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RBRACE shift to state 840

State 840:
lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On VBAR reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On VALUES reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On TABLEKEYS reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On SEMICOLON reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On RPAREN reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On RBRACKET reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On RBRACE reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On OTHERWISE reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On ON reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On FROM reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On END reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On ELSE reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On DOTDOT reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On DELETE_LEFT reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On DELETE reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On DEFAULT reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On COMMA reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On CASE reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On BY reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On BARRBRACE reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE
-- On AS reduce production lens_expression -> LENS exp WITH LBRACE fn_deps RBRACE

State 841:
fn_dep -> fn_dep_cols . RARROW fn_dep_cols [ RBRACE COMMA ]
-- On RARROW shift to state 842

State 842:
fn_dep -> fn_dep_cols RARROW . fn_dep_cols [ RBRACE COMMA ]
-- On VARIABLE shift to state 837
-- On fn_dep_cols shift to state 843

State 843:
fn_dep -> fn_dep_cols RARROW fn_dep_cols . [ RBRACE COMMA ]
-- On RBRACE reduce production fn_dep -> fn_dep_cols RARROW fn_dep_cols
-- On COMMA reduce production fn_dep -> fn_dep_cols RARROW fn_dep_cols

State 844:
fn_deps -> fn_dep . [ RBRACE ]
fn_deps -> fn_dep . COMMA fn_deps [ RBRACE ]
-- On COMMA shift to state 845
-- On RBRACE reduce production fn_deps -> fn_dep

State 845:
fn_deps -> fn_dep COMMA . fn_deps [ RBRACE ]
-- On VARIABLE shift to state 837
-- On fn_deps shift to state 846
-- On fn_dep_cols shift to state 841
-- On fn_dep shift to state 844

State 846:
fn_deps -> fn_dep COMMA fn_deps . [ RBRACE ]
-- On RBRACE reduce production fn_deps -> fn_dep COMMA fn_deps

State 847:
lens_expression -> LENS exp TABLEKEYS . exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 848
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 848:
lens_expression -> LENS exp TABLEKEYS exp . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On VBAR reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On VALUES reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On TABLEKEYS reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On SEMICOLON reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On RPAREN reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On RBRACKET reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On RBRACE reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On OTHERWISE reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On ON reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On FROM reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On END reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On ELSE reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On DOTDOT reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On DELETE_LEFT reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On DELETE reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On DEFAULT reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On COMMA reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On CASE reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On BY reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On BARRBRACE reduce production lens_expression -> LENS exp TABLEKEYS exp
-- On AS reduce production lens_expression -> LENS exp TABLEKEYS exp

State 849:
lens_expression -> LENS exp DEFAULT . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production lens_expression -> LENS exp DEFAULT
-- On VBAR reduce production lens_expression -> LENS exp DEFAULT
-- On VALUES reduce production lens_expression -> LENS exp DEFAULT
-- On TABLEKEYS reduce production lens_expression -> LENS exp DEFAULT
-- On SEMICOLON reduce production lens_expression -> LENS exp DEFAULT
-- On RPAREN reduce production lens_expression -> LENS exp DEFAULT
-- On RBRACKET reduce production lens_expression -> LENS exp DEFAULT
-- On RBRACE reduce production lens_expression -> LENS exp DEFAULT
-- On OTHERWISE reduce production lens_expression -> LENS exp DEFAULT
-- On ON reduce production lens_expression -> LENS exp DEFAULT
-- On FROM reduce production lens_expression -> LENS exp DEFAULT
-- On END reduce production lens_expression -> LENS exp DEFAULT
-- On ELSE reduce production lens_expression -> LENS exp DEFAULT
-- On DOTDOT reduce production lens_expression -> LENS exp DEFAULT
-- On DELETE_LEFT reduce production lens_expression -> LENS exp DEFAULT
-- On DELETE reduce production lens_expression -> LENS exp DEFAULT
-- On DEFAULT reduce production lens_expression -> LENS exp DEFAULT
-- On COMMA reduce production lens_expression -> LENS exp DEFAULT
-- On CASE reduce production lens_expression -> LENS exp DEFAULT
-- On BY reduce production lens_expression -> LENS exp DEFAULT
-- On BARRBRACE reduce production lens_expression -> LENS exp DEFAULT
-- On AS reduce production lens_expression -> LENS exp DEFAULT

State 850:
lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp . FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On FROM shift to state 851

State 851:
lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM . exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 852
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 852:
lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On VBAR reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On VALUES reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On TABLEKEYS reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On SEMICOLON reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On RPAREN reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On RBRACKET reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On RBRACE reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On OTHERWISE reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On ON reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On FROM reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On END reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On ELSE reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On DOTDOT reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On DELETE_LEFT reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On DELETE reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On DEFAULT reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On COMMA reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On CASE reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On BY reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On BARRBRACE reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp
-- On AS reduce production lens_expression -> LENSDROP VARIABLE DETERMINED BY VARIABLE DEFAULT exp FROM exp

State 853:
lens_expression -> LENSGET exp . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production lens_expression -> LENSGET exp
-- On VBAR reduce production lens_expression -> LENSGET exp
-- On VALUES reduce production lens_expression -> LENSGET exp
-- On TABLEKEYS reduce production lens_expression -> LENSGET exp
-- On SEMICOLON reduce production lens_expression -> LENSGET exp
-- On RPAREN reduce production lens_expression -> LENSGET exp
-- On RBRACKET reduce production lens_expression -> LENSGET exp
-- On RBRACE reduce production lens_expression -> LENSGET exp
-- On OTHERWISE reduce production lens_expression -> LENSGET exp
-- On ON reduce production lens_expression -> LENSGET exp
-- On FROM reduce production lens_expression -> LENSGET exp
-- On END reduce production lens_expression -> LENSGET exp
-- On ELSE reduce production lens_expression -> LENSGET exp
-- On DOTDOT reduce production lens_expression -> LENSGET exp
-- On DELETE_LEFT reduce production lens_expression -> LENSGET exp
-- On DELETE reduce production lens_expression -> LENSGET exp
-- On DEFAULT reduce production lens_expression -> LENSGET exp
-- On COMMA reduce production lens_expression -> LENSGET exp
-- On CASE reduce production lens_expression -> LENSGET exp
-- On BY reduce production lens_expression -> LENSGET exp
-- On BARRBRACE reduce production lens_expression -> LENSGET exp
-- On AS reduce production lens_expression -> LENSGET exp

State 854:
lens_expression -> LENSJOIN exp . WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
lens_expression -> LENSJOIN exp . WITH exp ON exp DELETE_LEFT [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH shift to state 855

State 855:
lens_expression -> LENSJOIN exp WITH . exp ON exp DELETE LBRACE exp COMMA exp RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
lens_expression -> LENSJOIN exp WITH . exp ON exp DELETE_LEFT [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 856
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 856:
lens_expression -> LENSJOIN exp WITH exp . ON exp DELETE LBRACE exp COMMA exp RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
lens_expression -> LENSJOIN exp WITH exp . ON exp DELETE_LEFT [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On ON shift to state 857

State 857:
lens_expression -> LENSJOIN exp WITH exp ON . exp DELETE LBRACE exp COMMA exp RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
lens_expression -> LENSJOIN exp WITH exp ON . exp DELETE_LEFT [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 858
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 858:
lens_expression -> LENSJOIN exp WITH exp ON exp . DELETE LBRACE exp COMMA exp RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
lens_expression -> LENSJOIN exp WITH exp ON exp . DELETE_LEFT [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On DELETE_LEFT shift to state 859
-- On DELETE shift to state 860

State 859:
lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On VBAR reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On VALUES reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On TABLEKEYS reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On SEMICOLON reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On RPAREN reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On RBRACKET reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On RBRACE reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On OTHERWISE reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On ON reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On FROM reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On END reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On ELSE reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On DOTDOT reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On DELETE_LEFT reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On DELETE reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On DEFAULT reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On COMMA reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On CASE reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On BY reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On BARRBRACE reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT
-- On AS reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE_LEFT

State 860:
lens_expression -> LENSJOIN exp WITH exp ON exp DELETE . LBRACE exp COMMA exp RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LBRACE shift to state 861

State 861:
lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE . exp COMMA exp RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 862
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 862:
lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp . COMMA exp RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On COMMA shift to state 863

State 863:
lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA . exp RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 864
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 864:
lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp . RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RBRACE shift to state 865

State 865:
lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On VBAR reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On VALUES reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On TABLEKEYS reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On SEMICOLON reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On RPAREN reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On RBRACKET reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On RBRACE reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On OTHERWISE reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On ON reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On FROM reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On END reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On ELSE reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On DOTDOT reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On DELETE_LEFT reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On DELETE reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On DEFAULT reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On COMMA reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On CASE reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On BY reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On BARRBRACE reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE
-- On AS reduce production lens_expression -> LENSJOIN exp WITH exp ON exp DELETE LBRACE exp COMMA exp RBRACE

State 866:
lens_expression -> LENSPUT exp . WITH exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH shift to state 867

State 867:
lens_expression -> LENSPUT exp WITH . exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 868
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 868:
lens_expression -> LENSPUT exp WITH exp . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production lens_expression -> LENSPUT exp WITH exp
-- On VBAR reduce production lens_expression -> LENSPUT exp WITH exp
-- On VALUES reduce production lens_expression -> LENSPUT exp WITH exp
-- On TABLEKEYS reduce production lens_expression -> LENSPUT exp WITH exp
-- On SEMICOLON reduce production lens_expression -> LENSPUT exp WITH exp
-- On RPAREN reduce production lens_expression -> LENSPUT exp WITH exp
-- On RBRACKET reduce production lens_expression -> LENSPUT exp WITH exp
-- On RBRACE reduce production lens_expression -> LENSPUT exp WITH exp
-- On OTHERWISE reduce production lens_expression -> LENSPUT exp WITH exp
-- On ON reduce production lens_expression -> LENSPUT exp WITH exp
-- On FROM reduce production lens_expression -> LENSPUT exp WITH exp
-- On END reduce production lens_expression -> LENSPUT exp WITH exp
-- On ELSE reduce production lens_expression -> LENSPUT exp WITH exp
-- On DOTDOT reduce production lens_expression -> LENSPUT exp WITH exp
-- On DELETE_LEFT reduce production lens_expression -> LENSPUT exp WITH exp
-- On DELETE reduce production lens_expression -> LENSPUT exp WITH exp
-- On DEFAULT reduce production lens_expression -> LENSPUT exp WITH exp
-- On COMMA reduce production lens_expression -> LENSPUT exp WITH exp
-- On CASE reduce production lens_expression -> LENSPUT exp WITH exp
-- On BY reduce production lens_expression -> LENSPUT exp WITH exp
-- On BARRBRACE reduce production lens_expression -> LENSPUT exp WITH exp
-- On AS reduce production lens_expression -> LENSPUT exp WITH exp

State 869:
lens_expression -> LENSSELECT FROM exp . BY exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On BY shift to state 870

State 870:
lens_expression -> LENSSELECT FROM exp BY . exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 871
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 871:
lens_expression -> LENSSELECT FROM exp BY exp . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On VBAR reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On VALUES reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On TABLEKEYS reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On SEMICOLON reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On RPAREN reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On RBRACKET reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On RBRACE reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On OTHERWISE reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On ON reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On FROM reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On END reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On ELSE reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On DOTDOT reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On DELETE_LEFT reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On DELETE reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On DEFAULT reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On COMMA reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On CASE reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On BY reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On BARRBRACE reduce production lens_expression -> LENSSELECT FROM exp BY exp
-- On AS reduce production lens_expression -> LENSSELECT FROM exp BY exp

State 872:
binding -> FUN . var arg_lists block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
primary_expression -> FUN . arg_lists block [ SEMICOLON RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE DOT COLONCOLON COLON CASE BARBAR BANG AMPAMP ]
-- On VARIABLE shift to state 4
-- On LPAREN shift to state 407
-- On var shift to state 873
-- On multi_args shift to state 411
-- On arg_lists shift to state 548

State 873:
binding -> FUN var . arg_lists block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LPAREN shift to state 407
-- On multi_args shift to state 411
-- On arg_lists shift to state 874

State 874:
binding -> FUN var arg_lists . block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LBRACE shift to state 315
-- On block shift to state 875

State 875:
binding -> FUN var arg_lists block . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production binding -> FUN var arg_lists block
-- On VAR reduce production binding -> FUN var arg_lists block
-- On UPDATE reduce production binding -> FUN var arg_lists block
-- On UINTEGER reduce production binding -> FUN var arg_lists block
-- On UFLOAT reduce production binding -> FUN var arg_lists block
-- On TYPENAME reduce production binding -> FUN var arg_lists block
-- On TRY reduce production binding -> FUN var arg_lists block
-- On TRUE reduce production binding -> FUN var arg_lists block
-- On TABLE reduce production binding -> FUN var arg_lists block
-- On SWITCH reduce production binding -> FUN var arg_lists block
-- On STRING reduce production binding -> FUN var arg_lists block
-- On SPAWNWAIT reduce production binding -> FUN var arg_lists block
-- On SPAWNCLIENT reduce production binding -> FUN var arg_lists block
-- On SPAWNAT reduce production binding -> FUN var arg_lists block
-- On SPAWNANGELAT reduce production binding -> FUN var arg_lists block
-- On SPAWNANGEL reduce production binding -> FUN var arg_lists block
-- On SPAWN reduce production binding -> FUN var arg_lists block
-- On SIG reduce production binding -> FUN var arg_lists block
-- On SHALLOWHANDLER reduce production binding -> FUN var arg_lists block
-- On SHALLOWHANDLE reduce production binding -> FUN var arg_lists block
-- On SELECT reduce production binding -> FUN var arg_lists block
-- On RECEIVE reduce production binding -> FUN var arg_lists block
-- On RAISE reduce production binding -> FUN var arg_lists block
-- On QUERY reduce production binding -> FUN var arg_lists block
-- On PREFIXOP reduce production binding -> FUN var arg_lists block
-- On PAGE reduce production binding -> FUN var arg_lists block
-- On OPEN reduce production binding -> FUN var arg_lists block
-- On OFFER reduce production binding -> FUN var arg_lists block
-- On MODULE reduce production binding -> FUN var arg_lists block
-- On MINUSDOT reduce production binding -> FUN var arg_lists block
-- On MINUS reduce production binding -> FUN var arg_lists block
-- On LXML reduce production binding -> FUN var arg_lists block
-- On LPAREN reduce production binding -> FUN var arg_lists block
-- On LINFUN reduce production binding -> FUN var arg_lists block
-- On LENSSELECT reduce production binding -> FUN var arg_lists block
-- On LENSPUT reduce production binding -> FUN var arg_lists block
-- On LENSJOIN reduce production binding -> FUN var arg_lists block
-- On LENSGET reduce production binding -> FUN var arg_lists block
-- On LENSDROP reduce production binding -> FUN var arg_lists block
-- On LENS reduce production binding -> FUN var arg_lists block
-- On LEFTTRIANGLE reduce production binding -> FUN var arg_lists block
-- On LBRACKET reduce production binding -> FUN var arg_lists block
-- On LBRACE reduce production binding -> FUN var arg_lists block
-- On INSERT reduce production binding -> FUN var arg_lists block
-- On IF reduce production binding -> FUN var arg_lists block
-- On HANDLER reduce production binding -> FUN var arg_lists block
-- On HANDLE reduce production binding -> FUN var arg_lists block
-- On FUN reduce production binding -> FUN var arg_lists block
-- On FORMLET reduce production binding -> FUN var arg_lists block
-- On FOR reduce production binding -> FUN var arg_lists block
-- On FALSE reduce production binding -> FUN var arg_lists block
-- On ESCAPE reduce production binding -> FUN var arg_lists block
-- On DOOP reduce production binding -> FUN var arg_lists block
-- On DELETE reduce production binding -> FUN var arg_lists block
-- On DATABASE reduce production binding -> FUN var arg_lists block
-- On CONSTRUCTOR reduce production binding -> FUN var arg_lists block
-- On CHAR reduce production binding -> FUN var arg_lists block
-- On ALIEN reduce production binding -> FUN var arg_lists block

State 876:
alien_block -> ALIEN . VARIABLE STRING LBRACE alien_datatypes RBRACE [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 877

State 877:
alien_block -> ALIEN VARIABLE . STRING LBRACE alien_datatypes RBRACE [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On STRING shift to state 878

State 878:
alien_block -> ALIEN VARIABLE STRING . LBRACE alien_datatypes RBRACE [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LBRACE shift to state 470

State 879:
binding -> typedecl . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SEMICOLON shift to state 880

State 880:
binding -> typedecl SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production binding -> typedecl SEMICOLON
-- On VAR reduce production binding -> typedecl SEMICOLON
-- On UPDATE reduce production binding -> typedecl SEMICOLON
-- On UINTEGER reduce production binding -> typedecl SEMICOLON
-- On UFLOAT reduce production binding -> typedecl SEMICOLON
-- On TYPENAME reduce production binding -> typedecl SEMICOLON
-- On TRY reduce production binding -> typedecl SEMICOLON
-- On TRUE reduce production binding -> typedecl SEMICOLON
-- On TABLE reduce production binding -> typedecl SEMICOLON
-- On SWITCH reduce production binding -> typedecl SEMICOLON
-- On STRING reduce production binding -> typedecl SEMICOLON
-- On SPAWNWAIT reduce production binding -> typedecl SEMICOLON
-- On SPAWNCLIENT reduce production binding -> typedecl SEMICOLON
-- On SPAWNAT reduce production binding -> typedecl SEMICOLON
-- On SPAWNANGELAT reduce production binding -> typedecl SEMICOLON
-- On SPAWNANGEL reduce production binding -> typedecl SEMICOLON
-- On SPAWN reduce production binding -> typedecl SEMICOLON
-- On SIG reduce production binding -> typedecl SEMICOLON
-- On SHALLOWHANDLER reduce production binding -> typedecl SEMICOLON
-- On SHALLOWHANDLE reduce production binding -> typedecl SEMICOLON
-- On SELECT reduce production binding -> typedecl SEMICOLON
-- On RECEIVE reduce production binding -> typedecl SEMICOLON
-- On RAISE reduce production binding -> typedecl SEMICOLON
-- On QUERY reduce production binding -> typedecl SEMICOLON
-- On PREFIXOP reduce production binding -> typedecl SEMICOLON
-- On PAGE reduce production binding -> typedecl SEMICOLON
-- On OPEN reduce production binding -> typedecl SEMICOLON
-- On OFFER reduce production binding -> typedecl SEMICOLON
-- On MODULE reduce production binding -> typedecl SEMICOLON
-- On MINUSDOT reduce production binding -> typedecl SEMICOLON
-- On MINUS reduce production binding -> typedecl SEMICOLON
-- On LXML reduce production binding -> typedecl SEMICOLON
-- On LPAREN reduce production binding -> typedecl SEMICOLON
-- On LINFUN reduce production binding -> typedecl SEMICOLON
-- On LENSSELECT reduce production binding -> typedecl SEMICOLON
-- On LENSPUT reduce production binding -> typedecl SEMICOLON
-- On LENSJOIN reduce production binding -> typedecl SEMICOLON
-- On LENSGET reduce production binding -> typedecl SEMICOLON
-- On LENSDROP reduce production binding -> typedecl SEMICOLON
-- On LENS reduce production binding -> typedecl SEMICOLON
-- On LEFTTRIANGLE reduce production binding -> typedecl SEMICOLON
-- On LBRACKET reduce production binding -> typedecl SEMICOLON
-- On LBRACE reduce production binding -> typedecl SEMICOLON
-- On INSERT reduce production binding -> typedecl SEMICOLON
-- On IF reduce production binding -> typedecl SEMICOLON
-- On HANDLER reduce production binding -> typedecl SEMICOLON
-- On HANDLE reduce production binding -> typedecl SEMICOLON
-- On FUN reduce production binding -> typedecl SEMICOLON
-- On FORMLET reduce production binding -> typedecl SEMICOLON
-- On FOR reduce production binding -> typedecl SEMICOLON
-- On FALSE reduce production binding -> typedecl SEMICOLON
-- On ESCAPE reduce production binding -> typedecl SEMICOLON
-- On DOOP reduce production binding -> typedecl SEMICOLON
-- On DELETE reduce production binding -> typedecl SEMICOLON
-- On DATABASE reduce production binding -> typedecl SEMICOLON
-- On CONSTRUCTOR reduce production binding -> typedecl SEMICOLON
-- On CHAR reduce production binding -> typedecl SEMICOLON
-- On ALIEN reduce production binding -> typedecl SEMICOLON

State 881:
binding -> typed_handler_binding . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production binding -> typed_handler_binding
-- On VAR reduce production binding -> typed_handler_binding
-- On UPDATE reduce production binding -> typed_handler_binding
-- On UINTEGER reduce production binding -> typed_handler_binding
-- On UFLOAT reduce production binding -> typed_handler_binding
-- On TYPENAME reduce production binding -> typed_handler_binding
-- On TRY reduce production binding -> typed_handler_binding
-- On TRUE reduce production binding -> typed_handler_binding
-- On TABLE reduce production binding -> typed_handler_binding
-- On SWITCH reduce production binding -> typed_handler_binding
-- On STRING reduce production binding -> typed_handler_binding
-- On SPAWNWAIT reduce production binding -> typed_handler_binding
-- On SPAWNCLIENT reduce production binding -> typed_handler_binding
-- On SPAWNAT reduce production binding -> typed_handler_binding
-- On SPAWNANGELAT reduce production binding -> typed_handler_binding
-- On SPAWNANGEL reduce production binding -> typed_handler_binding
-- On SPAWN reduce production binding -> typed_handler_binding
-- On SIG reduce production binding -> typed_handler_binding
-- On SHALLOWHANDLER reduce production binding -> typed_handler_binding
-- On SHALLOWHANDLE reduce production binding -> typed_handler_binding
-- On SELECT reduce production binding -> typed_handler_binding
-- On RECEIVE reduce production binding -> typed_handler_binding
-- On RAISE reduce production binding -> typed_handler_binding
-- On QUERY reduce production binding -> typed_handler_binding
-- On PREFIXOP reduce production binding -> typed_handler_binding
-- On PAGE reduce production binding -> typed_handler_binding
-- On OPEN reduce production binding -> typed_handler_binding
-- On OFFER reduce production binding -> typed_handler_binding
-- On MODULE reduce production binding -> typed_handler_binding
-- On MINUSDOT reduce production binding -> typed_handler_binding
-- On MINUS reduce production binding -> typed_handler_binding
-- On LXML reduce production binding -> typed_handler_binding
-- On LPAREN reduce production binding -> typed_handler_binding
-- On LINFUN reduce production binding -> typed_handler_binding
-- On LENSSELECT reduce production binding -> typed_handler_binding
-- On LENSPUT reduce production binding -> typed_handler_binding
-- On LENSJOIN reduce production binding -> typed_handler_binding
-- On LENSGET reduce production binding -> typed_handler_binding
-- On LENSDROP reduce production binding -> typed_handler_binding
-- On LENS reduce production binding -> typed_handler_binding
-- On LEFTTRIANGLE reduce production binding -> typed_handler_binding
-- On LBRACKET reduce production binding -> typed_handler_binding
-- On LBRACE reduce production binding -> typed_handler_binding
-- On INSERT reduce production binding -> typed_handler_binding
-- On IF reduce production binding -> typed_handler_binding
-- On HANDLER reduce production binding -> typed_handler_binding
-- On HANDLE reduce production binding -> typed_handler_binding
-- On FUN reduce production binding -> typed_handler_binding
-- On FORMLET reduce production binding -> typed_handler_binding
-- On FOR reduce production binding -> typed_handler_binding
-- On FALSE reduce production binding -> typed_handler_binding
-- On ESCAPE reduce production binding -> typed_handler_binding
-- On DOOP reduce production binding -> typed_handler_binding
-- On DELETE reduce production binding -> typed_handler_binding
-- On DATABASE reduce production binding -> typed_handler_binding
-- On CONSTRUCTOR reduce production binding -> typed_handler_binding
-- On CHAR reduce production binding -> typed_handler_binding
-- On ALIEN reduce production binding -> typed_handler_binding

State 882:
binding -> signature . FUN var arg_lists block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
binding -> signature . LINFUN var arg_lists block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LINFUN shift to state 883
-- On FUN shift to state 887

State 883:
binding -> signature LINFUN . var arg_lists block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 4
-- On var shift to state 884

State 884:
binding -> signature LINFUN var . arg_lists block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LPAREN shift to state 407
-- On multi_args shift to state 411
-- On arg_lists shift to state 885

State 885:
binding -> signature LINFUN var arg_lists . block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LBRACE shift to state 315
-- On block shift to state 886

State 886:
binding -> signature LINFUN var arg_lists block . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production binding -> signature LINFUN var arg_lists block
-- On VAR reduce production binding -> signature LINFUN var arg_lists block
-- On UPDATE reduce production binding -> signature LINFUN var arg_lists block
-- On UINTEGER reduce production binding -> signature LINFUN var arg_lists block
-- On UFLOAT reduce production binding -> signature LINFUN var arg_lists block
-- On TYPENAME reduce production binding -> signature LINFUN var arg_lists block
-- On TRY reduce production binding -> signature LINFUN var arg_lists block
-- On TRUE reduce production binding -> signature LINFUN var arg_lists block
-- On TABLE reduce production binding -> signature LINFUN var arg_lists block
-- On SWITCH reduce production binding -> signature LINFUN var arg_lists block
-- On STRING reduce production binding -> signature LINFUN var arg_lists block
-- On SPAWNWAIT reduce production binding -> signature LINFUN var arg_lists block
-- On SPAWNCLIENT reduce production binding -> signature LINFUN var arg_lists block
-- On SPAWNAT reduce production binding -> signature LINFUN var arg_lists block
-- On SPAWNANGELAT reduce production binding -> signature LINFUN var arg_lists block
-- On SPAWNANGEL reduce production binding -> signature LINFUN var arg_lists block
-- On SPAWN reduce production binding -> signature LINFUN var arg_lists block
-- On SIG reduce production binding -> signature LINFUN var arg_lists block
-- On SHALLOWHANDLER reduce production binding -> signature LINFUN var arg_lists block
-- On SHALLOWHANDLE reduce production binding -> signature LINFUN var arg_lists block
-- On SELECT reduce production binding -> signature LINFUN var arg_lists block
-- On RECEIVE reduce production binding -> signature LINFUN var arg_lists block
-- On RAISE reduce production binding -> signature LINFUN var arg_lists block
-- On QUERY reduce production binding -> signature LINFUN var arg_lists block
-- On PREFIXOP reduce production binding -> signature LINFUN var arg_lists block
-- On PAGE reduce production binding -> signature LINFUN var arg_lists block
-- On OPEN reduce production binding -> signature LINFUN var arg_lists block
-- On OFFER reduce production binding -> signature LINFUN var arg_lists block
-- On MODULE reduce production binding -> signature LINFUN var arg_lists block
-- On MINUSDOT reduce production binding -> signature LINFUN var arg_lists block
-- On MINUS reduce production binding -> signature LINFUN var arg_lists block
-- On LXML reduce production binding -> signature LINFUN var arg_lists block
-- On LPAREN reduce production binding -> signature LINFUN var arg_lists block
-- On LINFUN reduce production binding -> signature LINFUN var arg_lists block
-- On LENSSELECT reduce production binding -> signature LINFUN var arg_lists block
-- On LENSPUT reduce production binding -> signature LINFUN var arg_lists block
-- On LENSJOIN reduce production binding -> signature LINFUN var arg_lists block
-- On LENSGET reduce production binding -> signature LINFUN var arg_lists block
-- On LENSDROP reduce production binding -> signature LINFUN var arg_lists block
-- On LENS reduce production binding -> signature LINFUN var arg_lists block
-- On LEFTTRIANGLE reduce production binding -> signature LINFUN var arg_lists block
-- On LBRACKET reduce production binding -> signature LINFUN var arg_lists block
-- On LBRACE reduce production binding -> signature LINFUN var arg_lists block
-- On INSERT reduce production binding -> signature LINFUN var arg_lists block
-- On IF reduce production binding -> signature LINFUN var arg_lists block
-- On HANDLER reduce production binding -> signature LINFUN var arg_lists block
-- On HANDLE reduce production binding -> signature LINFUN var arg_lists block
-- On FUN reduce production binding -> signature LINFUN var arg_lists block
-- On FORMLET reduce production binding -> signature LINFUN var arg_lists block
-- On FOR reduce production binding -> signature LINFUN var arg_lists block
-- On FALSE reduce production binding -> signature LINFUN var arg_lists block
-- On ESCAPE reduce production binding -> signature LINFUN var arg_lists block
-- On DOOP reduce production binding -> signature LINFUN var arg_lists block
-- On DELETE reduce production binding -> signature LINFUN var arg_lists block
-- On DATABASE reduce production binding -> signature LINFUN var arg_lists block
-- On CONSTRUCTOR reduce production binding -> signature LINFUN var arg_lists block
-- On CHAR reduce production binding -> signature LINFUN var arg_lists block
-- On ALIEN reduce production binding -> signature LINFUN var arg_lists block

State 887:
binding -> signature FUN . var arg_lists block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 4
-- On var shift to state 888

State 888:
binding -> signature FUN var . arg_lists block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LPAREN shift to state 407
-- On multi_args shift to state 411
-- On arg_lists shift to state 889

State 889:
binding -> signature FUN var arg_lists . block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LBRACE shift to state 315
-- On block shift to state 890

State 890:
binding -> signature FUN var arg_lists block . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production binding -> signature FUN var arg_lists block
-- On VAR reduce production binding -> signature FUN var arg_lists block
-- On UPDATE reduce production binding -> signature FUN var arg_lists block
-- On UINTEGER reduce production binding -> signature FUN var arg_lists block
-- On UFLOAT reduce production binding -> signature FUN var arg_lists block
-- On TYPENAME reduce production binding -> signature FUN var arg_lists block
-- On TRY reduce production binding -> signature FUN var arg_lists block
-- On TRUE reduce production binding -> signature FUN var arg_lists block
-- On TABLE reduce production binding -> signature FUN var arg_lists block
-- On SWITCH reduce production binding -> signature FUN var arg_lists block
-- On STRING reduce production binding -> signature FUN var arg_lists block
-- On SPAWNWAIT reduce production binding -> signature FUN var arg_lists block
-- On SPAWNCLIENT reduce production binding -> signature FUN var arg_lists block
-- On SPAWNAT reduce production binding -> signature FUN var arg_lists block
-- On SPAWNANGELAT reduce production binding -> signature FUN var arg_lists block
-- On SPAWNANGEL reduce production binding -> signature FUN var arg_lists block
-- On SPAWN reduce production binding -> signature FUN var arg_lists block
-- On SIG reduce production binding -> signature FUN var arg_lists block
-- On SHALLOWHANDLER reduce production binding -> signature FUN var arg_lists block
-- On SHALLOWHANDLE reduce production binding -> signature FUN var arg_lists block
-- On SELECT reduce production binding -> signature FUN var arg_lists block
-- On RECEIVE reduce production binding -> signature FUN var arg_lists block
-- On RAISE reduce production binding -> signature FUN var arg_lists block
-- On QUERY reduce production binding -> signature FUN var arg_lists block
-- On PREFIXOP reduce production binding -> signature FUN var arg_lists block
-- On PAGE reduce production binding -> signature FUN var arg_lists block
-- On OPEN reduce production binding -> signature FUN var arg_lists block
-- On OFFER reduce production binding -> signature FUN var arg_lists block
-- On MODULE reduce production binding -> signature FUN var arg_lists block
-- On MINUSDOT reduce production binding -> signature FUN var arg_lists block
-- On MINUS reduce production binding -> signature FUN var arg_lists block
-- On LXML reduce production binding -> signature FUN var arg_lists block
-- On LPAREN reduce production binding -> signature FUN var arg_lists block
-- On LINFUN reduce production binding -> signature FUN var arg_lists block
-- On LENSSELECT reduce production binding -> signature FUN var arg_lists block
-- On LENSPUT reduce production binding -> signature FUN var arg_lists block
-- On LENSJOIN reduce production binding -> signature FUN var arg_lists block
-- On LENSGET reduce production binding -> signature FUN var arg_lists block
-- On LENSDROP reduce production binding -> signature FUN var arg_lists block
-- On LENS reduce production binding -> signature FUN var arg_lists block
-- On LEFTTRIANGLE reduce production binding -> signature FUN var arg_lists block
-- On LBRACKET reduce production binding -> signature FUN var arg_lists block
-- On LBRACE reduce production binding -> signature FUN var arg_lists block
-- On INSERT reduce production binding -> signature FUN var arg_lists block
-- On IF reduce production binding -> signature FUN var arg_lists block
-- On HANDLER reduce production binding -> signature FUN var arg_lists block
-- On HANDLE reduce production binding -> signature FUN var arg_lists block
-- On FUN reduce production binding -> signature FUN var arg_lists block
-- On FORMLET reduce production binding -> signature FUN var arg_lists block
-- On FOR reduce production binding -> signature FUN var arg_lists block
-- On FALSE reduce production binding -> signature FUN var arg_lists block
-- On ESCAPE reduce production binding -> signature FUN var arg_lists block
-- On DOOP reduce production binding -> signature FUN var arg_lists block
-- On DELETE reduce production binding -> signature FUN var arg_lists block
-- On DATABASE reduce production binding -> signature FUN var arg_lists block
-- On CONSTRUCTOR reduce production binding -> signature FUN var arg_lists block
-- On CHAR reduce production binding -> signature FUN var arg_lists block
-- On ALIEN reduce production binding -> signature FUN var arg_lists block

State 891:
block_contents -> perhaps_semi . [ RBRACE CASE ]
-- On RBRACE reduce production block_contents -> perhaps_semi
-- On CASE reduce production block_contents -> perhaps_semi

State 892:
binding -> links_open . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production binding -> links_open
-- On VAR reduce production binding -> links_open
-- On UPDATE reduce production binding -> links_open
-- On UINTEGER reduce production binding -> links_open
-- On UFLOAT reduce production binding -> links_open
-- On TYPENAME reduce production binding -> links_open
-- On TRY reduce production binding -> links_open
-- On TRUE reduce production binding -> links_open
-- On TABLE reduce production binding -> links_open
-- On SWITCH reduce production binding -> links_open
-- On STRING reduce production binding -> links_open
-- On SPAWNWAIT reduce production binding -> links_open
-- On SPAWNCLIENT reduce production binding -> links_open
-- On SPAWNAT reduce production binding -> links_open
-- On SPAWNANGELAT reduce production binding -> links_open
-- On SPAWNANGEL reduce production binding -> links_open
-- On SPAWN reduce production binding -> links_open
-- On SIG reduce production binding -> links_open
-- On SHALLOWHANDLER reduce production binding -> links_open
-- On SHALLOWHANDLE reduce production binding -> links_open
-- On SELECT reduce production binding -> links_open
-- On RECEIVE reduce production binding -> links_open
-- On RAISE reduce production binding -> links_open
-- On QUERY reduce production binding -> links_open
-- On PREFIXOP reduce production binding -> links_open
-- On PAGE reduce production binding -> links_open
-- On OPEN reduce production binding -> links_open
-- On OFFER reduce production binding -> links_open
-- On MODULE reduce production binding -> links_open
-- On MINUSDOT reduce production binding -> links_open
-- On MINUS reduce production binding -> links_open
-- On LXML reduce production binding -> links_open
-- On LPAREN reduce production binding -> links_open
-- On LINFUN reduce production binding -> links_open
-- On LENSSELECT reduce production binding -> links_open
-- On LENSPUT reduce production binding -> links_open
-- On LENSJOIN reduce production binding -> links_open
-- On LENSGET reduce production binding -> links_open
-- On LENSDROP reduce production binding -> links_open
-- On LENS reduce production binding -> links_open
-- On LEFTTRIANGLE reduce production binding -> links_open
-- On LBRACKET reduce production binding -> links_open
-- On LBRACE reduce production binding -> links_open
-- On INSERT reduce production binding -> links_open
-- On IF reduce production binding -> links_open
-- On HANDLER reduce production binding -> links_open
-- On HANDLE reduce production binding -> links_open
-- On FUN reduce production binding -> links_open
-- On FORMLET reduce production binding -> links_open
-- On FOR reduce production binding -> links_open
-- On FALSE reduce production binding -> links_open
-- On ESCAPE reduce production binding -> links_open
-- On DOOP reduce production binding -> links_open
-- On DELETE reduce production binding -> links_open
-- On DATABASE reduce production binding -> links_open
-- On CONSTRUCTOR reduce production binding -> links_open
-- On CHAR reduce production binding -> links_open
-- On ALIEN reduce production binding -> links_open

State 893:
binding -> links_module . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production binding -> links_module
-- On VAR reduce production binding -> links_module
-- On UPDATE reduce production binding -> links_module
-- On UINTEGER reduce production binding -> links_module
-- On UFLOAT reduce production binding -> links_module
-- On TYPENAME reduce production binding -> links_module
-- On TRY reduce production binding -> links_module
-- On TRUE reduce production binding -> links_module
-- On TABLE reduce production binding -> links_module
-- On SWITCH reduce production binding -> links_module
-- On STRING reduce production binding -> links_module
-- On SPAWNWAIT reduce production binding -> links_module
-- On SPAWNCLIENT reduce production binding -> links_module
-- On SPAWNAT reduce production binding -> links_module
-- On SPAWNANGELAT reduce production binding -> links_module
-- On SPAWNANGEL reduce production binding -> links_module
-- On SPAWN reduce production binding -> links_module
-- On SIG reduce production binding -> links_module
-- On SHALLOWHANDLER reduce production binding -> links_module
-- On SHALLOWHANDLE reduce production binding -> links_module
-- On SELECT reduce production binding -> links_module
-- On RECEIVE reduce production binding -> links_module
-- On RAISE reduce production binding -> links_module
-- On QUERY reduce production binding -> links_module
-- On PREFIXOP reduce production binding -> links_module
-- On PAGE reduce production binding -> links_module
-- On OPEN reduce production binding -> links_module
-- On OFFER reduce production binding -> links_module
-- On MODULE reduce production binding -> links_module
-- On MINUSDOT reduce production binding -> links_module
-- On MINUS reduce production binding -> links_module
-- On LXML reduce production binding -> links_module
-- On LPAREN reduce production binding -> links_module
-- On LINFUN reduce production binding -> links_module
-- On LENSSELECT reduce production binding -> links_module
-- On LENSPUT reduce production binding -> links_module
-- On LENSJOIN reduce production binding -> links_module
-- On LENSGET reduce production binding -> links_module
-- On LENSDROP reduce production binding -> links_module
-- On LENS reduce production binding -> links_module
-- On LEFTTRIANGLE reduce production binding -> links_module
-- On LBRACKET reduce production binding -> links_module
-- On LBRACE reduce production binding -> links_module
-- On INSERT reduce production binding -> links_module
-- On IF reduce production binding -> links_module
-- On HANDLER reduce production binding -> links_module
-- On HANDLE reduce production binding -> links_module
-- On FUN reduce production binding -> links_module
-- On FORMLET reduce production binding -> links_module
-- On FOR reduce production binding -> links_module
-- On FALSE reduce production binding -> links_module
-- On ESCAPE reduce production binding -> links_module
-- On DOOP reduce production binding -> links_module
-- On DELETE reduce production binding -> links_module
-- On DATABASE reduce production binding -> links_module
-- On CONSTRUCTOR reduce production binding -> links_module
-- On CHAR reduce production binding -> links_module
-- On ALIEN reduce production binding -> links_module

State 894:
primary_expression -> handler_depth . optional_computation_parameter handler_parameterization [ SEMICOLON RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END DOT COLONCOLON COLON CASE BARBAR BANG AMPAMP ]
typed_handler_binding -> handler_depth . optional_computation_parameter var handler_parameterization [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LBRACKET shift to state 495
-- On optional_computation_parameter shift to state 895
-- On VARIABLE reduce production optional_computation_parameter ->
-- On LPAREN reduce production optional_computation_parameter ->
-- On LBRACE reduce production optional_computation_parameter ->

State 895:
primary_expression -> handler_depth optional_computation_parameter . handler_parameterization [ SEMICOLON RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END DOT COLONCOLON COLON CASE BARBAR BANG AMPAMP ]
typed_handler_binding -> handler_depth optional_computation_parameter . var handler_parameterization [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 4
-- On LPAREN shift to state 407
-- On LBRACE shift to state 500
-- On var shift to state 499
-- On multi_args shift to state 411
-- On handler_parameterization shift to state 608
-- On handler_body shift to state 506
-- On arg_lists shift to state 507

State 896:
binding -> exp . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
block_contents -> exp . SEMICOLON [ RBRACE CASE ]
block_contents -> exp . [ RBRACE CASE ]
-- On SEMICOLON shift to state 897
-- On RBRACE reduce production block_contents -> exp
-- On CASE reduce production block_contents -> exp

State 897:
binding -> exp SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
block_contents -> exp SEMICOLON . [ RBRACE CASE ]
-- On VARIABLE reduce production binding -> exp SEMICOLON
-- On VAR reduce production binding -> exp SEMICOLON
-- On UPDATE reduce production binding -> exp SEMICOLON
-- On UINTEGER reduce production binding -> exp SEMICOLON
-- On UFLOAT reduce production binding -> exp SEMICOLON
-- On TYPENAME reduce production binding -> exp SEMICOLON
-- On TRY reduce production binding -> exp SEMICOLON
-- On TRUE reduce production binding -> exp SEMICOLON
-- On TABLE reduce production binding -> exp SEMICOLON
-- On SWITCH reduce production binding -> exp SEMICOLON
-- On STRING reduce production binding -> exp SEMICOLON
-- On SPAWNWAIT reduce production binding -> exp SEMICOLON
-- On SPAWNCLIENT reduce production binding -> exp SEMICOLON
-- On SPAWNAT reduce production binding -> exp SEMICOLON
-- On SPAWNANGELAT reduce production binding -> exp SEMICOLON
-- On SPAWNANGEL reduce production binding -> exp SEMICOLON
-- On SPAWN reduce production binding -> exp SEMICOLON
-- On SIG reduce production binding -> exp SEMICOLON
-- On SHALLOWHANDLER reduce production binding -> exp SEMICOLON
-- On SHALLOWHANDLE reduce production binding -> exp SEMICOLON
-- On SELECT reduce production binding -> exp SEMICOLON
-- On RECEIVE reduce production binding -> exp SEMICOLON
-- On RBRACE reduce production block_contents -> exp SEMICOLON
-- On RAISE reduce production binding -> exp SEMICOLON
-- On QUERY reduce production binding -> exp SEMICOLON
-- On PREFIXOP reduce production binding -> exp SEMICOLON
-- On PAGE reduce production binding -> exp SEMICOLON
-- On OPEN reduce production binding -> exp SEMICOLON
-- On OFFER reduce production binding -> exp SEMICOLON
-- On MODULE reduce production binding -> exp SEMICOLON
-- On MINUSDOT reduce production binding -> exp SEMICOLON
-- On MINUS reduce production binding -> exp SEMICOLON
-- On LXML reduce production binding -> exp SEMICOLON
-- On LPAREN reduce production binding -> exp SEMICOLON
-- On LINFUN reduce production binding -> exp SEMICOLON
-- On LENSSELECT reduce production binding -> exp SEMICOLON
-- On LENSPUT reduce production binding -> exp SEMICOLON
-- On LENSJOIN reduce production binding -> exp SEMICOLON
-- On LENSGET reduce production binding -> exp SEMICOLON
-- On LENSDROP reduce production binding -> exp SEMICOLON
-- On LENS reduce production binding -> exp SEMICOLON
-- On LEFTTRIANGLE reduce production binding -> exp SEMICOLON
-- On LBRACKET reduce production binding -> exp SEMICOLON
-- On LBRACE reduce production binding -> exp SEMICOLON
-- On INSERT reduce production binding -> exp SEMICOLON
-- On IF reduce production binding -> exp SEMICOLON
-- On HANDLER reduce production binding -> exp SEMICOLON
-- On HANDLE reduce production binding -> exp SEMICOLON
-- On FUN reduce production binding -> exp SEMICOLON
-- On FORMLET reduce production binding -> exp SEMICOLON
-- On FOR reduce production binding -> exp SEMICOLON
-- On FALSE reduce production binding -> exp SEMICOLON
-- On ESCAPE reduce production binding -> exp SEMICOLON
-- On DOOP reduce production binding -> exp SEMICOLON
-- On DELETE reduce production binding -> exp SEMICOLON
-- On DATABASE reduce production binding -> exp SEMICOLON
-- On CONSTRUCTOR reduce production binding -> exp SEMICOLON
-- On CHAR reduce production binding -> exp SEMICOLON
-- On CASE reduce production block_contents -> exp SEMICOLON
-- On ALIEN reduce production binding -> exp SEMICOLON

State 898:
cp_expression -> LBRACE block_contents . RBRACE [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On RBRACE shift to state 899

State 899:
cp_expression -> LBRACE block_contents RBRACE . [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VBAR reduce production cp_expression -> LBRACE block_contents RBRACE
-- On RPAREN reduce production cp_expression -> LBRACE block_contents RBRACE
-- On RIGHTTRIANGLE reduce production cp_expression -> LBRACE block_contents RBRACE
-- On RBRACE reduce production cp_expression -> LBRACE block_contents RBRACE
-- On CASE reduce production cp_expression -> LBRACE block_contents RBRACE

State 900:
bindings -> bindings . binding [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
block_contents -> bindings . exp SEMICOLON [ RBRACE CASE ]
block_contents -> bindings . exp [ RBRACE CASE ]
-- On VARIABLE shift to state 2
-- On VAR shift to state 316
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TYPENAME shift to state 339
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SIG shift to state 347
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OPEN shift to state 429
-- On OFFER shift to state 400
-- On MODULE shift to state 432
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 524
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 872
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On ALIEN shift to state 876
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typedecl shift to state 879
-- On typed_handler_binding shift to state 881
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On signature shift to state 882
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On links_open shift to state 892
-- On links_module shift to state 893
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 894
-- On formlet_expression shift to state 746
-- On exp shift to state 901
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On binding shift to state 903
-- On atomic_expression shift to state 611
-- On alien_block shift to state 904

State 901:
binding -> exp . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
block_contents -> bindings exp . SEMICOLON [ RBRACE CASE ]
block_contents -> bindings exp . [ RBRACE CASE ]
-- On SEMICOLON shift to state 902
-- On RBRACE reduce production block_contents -> bindings exp
-- On CASE reduce production block_contents -> bindings exp

State 902:
binding -> exp SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
block_contents -> bindings exp SEMICOLON . [ RBRACE CASE ]
-- On VARIABLE reduce production binding -> exp SEMICOLON
-- On VAR reduce production binding -> exp SEMICOLON
-- On UPDATE reduce production binding -> exp SEMICOLON
-- On UINTEGER reduce production binding -> exp SEMICOLON
-- On UFLOAT reduce production binding -> exp SEMICOLON
-- On TYPENAME reduce production binding -> exp SEMICOLON
-- On TRY reduce production binding -> exp SEMICOLON
-- On TRUE reduce production binding -> exp SEMICOLON
-- On TABLE reduce production binding -> exp SEMICOLON
-- On SWITCH reduce production binding -> exp SEMICOLON
-- On STRING reduce production binding -> exp SEMICOLON
-- On SPAWNWAIT reduce production binding -> exp SEMICOLON
-- On SPAWNCLIENT reduce production binding -> exp SEMICOLON
-- On SPAWNAT reduce production binding -> exp SEMICOLON
-- On SPAWNANGELAT reduce production binding -> exp SEMICOLON
-- On SPAWNANGEL reduce production binding -> exp SEMICOLON
-- On SPAWN reduce production binding -> exp SEMICOLON
-- On SIG reduce production binding -> exp SEMICOLON
-- On SHALLOWHANDLER reduce production binding -> exp SEMICOLON
-- On SHALLOWHANDLE reduce production binding -> exp SEMICOLON
-- On SELECT reduce production binding -> exp SEMICOLON
-- On RECEIVE reduce production binding -> exp SEMICOLON
-- On RBRACE reduce production block_contents -> bindings exp SEMICOLON
-- On RAISE reduce production binding -> exp SEMICOLON
-- On QUERY reduce production binding -> exp SEMICOLON
-- On PREFIXOP reduce production binding -> exp SEMICOLON
-- On PAGE reduce production binding -> exp SEMICOLON
-- On OPEN reduce production binding -> exp SEMICOLON
-- On OFFER reduce production binding -> exp SEMICOLON
-- On MODULE reduce production binding -> exp SEMICOLON
-- On MINUSDOT reduce production binding -> exp SEMICOLON
-- On MINUS reduce production binding -> exp SEMICOLON
-- On LXML reduce production binding -> exp SEMICOLON
-- On LPAREN reduce production binding -> exp SEMICOLON
-- On LINFUN reduce production binding -> exp SEMICOLON
-- On LENSSELECT reduce production binding -> exp SEMICOLON
-- On LENSPUT reduce production binding -> exp SEMICOLON
-- On LENSJOIN reduce production binding -> exp SEMICOLON
-- On LENSGET reduce production binding -> exp SEMICOLON
-- On LENSDROP reduce production binding -> exp SEMICOLON
-- On LENS reduce production binding -> exp SEMICOLON
-- On LEFTTRIANGLE reduce production binding -> exp SEMICOLON
-- On LBRACKET reduce production binding -> exp SEMICOLON
-- On LBRACE reduce production binding -> exp SEMICOLON
-- On INSERT reduce production binding -> exp SEMICOLON
-- On IF reduce production binding -> exp SEMICOLON
-- On HANDLER reduce production binding -> exp SEMICOLON
-- On HANDLE reduce production binding -> exp SEMICOLON
-- On FUN reduce production binding -> exp SEMICOLON
-- On FORMLET reduce production binding -> exp SEMICOLON
-- On FOR reduce production binding -> exp SEMICOLON
-- On FALSE reduce production binding -> exp SEMICOLON
-- On ESCAPE reduce production binding -> exp SEMICOLON
-- On DOOP reduce production binding -> exp SEMICOLON
-- On DELETE reduce production binding -> exp SEMICOLON
-- On DATABASE reduce production binding -> exp SEMICOLON
-- On CONSTRUCTOR reduce production binding -> exp SEMICOLON
-- On CHAR reduce production binding -> exp SEMICOLON
-- On CASE reduce production block_contents -> bindings exp SEMICOLON
-- On ALIEN reduce production binding -> exp SEMICOLON

State 903:
bindings -> bindings binding . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production bindings -> bindings binding
-- On VAR reduce production bindings -> bindings binding
-- On UPDATE reduce production bindings -> bindings binding
-- On UINTEGER reduce production bindings -> bindings binding
-- On UFLOAT reduce production bindings -> bindings binding
-- On TYPENAME reduce production bindings -> bindings binding
-- On TRY reduce production bindings -> bindings binding
-- On TRUE reduce production bindings -> bindings binding
-- On TABLE reduce production bindings -> bindings binding
-- On SWITCH reduce production bindings -> bindings binding
-- On STRING reduce production bindings -> bindings binding
-- On SPAWNWAIT reduce production bindings -> bindings binding
-- On SPAWNCLIENT reduce production bindings -> bindings binding
-- On SPAWNAT reduce production bindings -> bindings binding
-- On SPAWNANGELAT reduce production bindings -> bindings binding
-- On SPAWNANGEL reduce production bindings -> bindings binding
-- On SPAWN reduce production bindings -> bindings binding
-- On SIG reduce production bindings -> bindings binding
-- On SHALLOWHANDLER reduce production bindings -> bindings binding
-- On SHALLOWHANDLE reduce production bindings -> bindings binding
-- On SELECT reduce production bindings -> bindings binding
-- On RECEIVE reduce production bindings -> bindings binding
-- On RAISE reduce production bindings -> bindings binding
-- On QUERY reduce production bindings -> bindings binding
-- On PREFIXOP reduce production bindings -> bindings binding
-- On PAGE reduce production bindings -> bindings binding
-- On OPEN reduce production bindings -> bindings binding
-- On OFFER reduce production bindings -> bindings binding
-- On MODULE reduce production bindings -> bindings binding
-- On MINUSDOT reduce production bindings -> bindings binding
-- On MINUS reduce production bindings -> bindings binding
-- On LXML reduce production bindings -> bindings binding
-- On LPAREN reduce production bindings -> bindings binding
-- On LINFUN reduce production bindings -> bindings binding
-- On LENSSELECT reduce production bindings -> bindings binding
-- On LENSPUT reduce production bindings -> bindings binding
-- On LENSJOIN reduce production bindings -> bindings binding
-- On LENSGET reduce production bindings -> bindings binding
-- On LENSDROP reduce production bindings -> bindings binding
-- On LENS reduce production bindings -> bindings binding
-- On LEFTTRIANGLE reduce production bindings -> bindings binding
-- On LBRACKET reduce production bindings -> bindings binding
-- On LBRACE reduce production bindings -> bindings binding
-- On INSERT reduce production bindings -> bindings binding
-- On IF reduce production bindings -> bindings binding
-- On HANDLER reduce production bindings -> bindings binding
-- On HANDLE reduce production bindings -> bindings binding
-- On FUN reduce production bindings -> bindings binding
-- On FORMLET reduce production bindings -> bindings binding
-- On FOR reduce production bindings -> bindings binding
-- On FALSE reduce production bindings -> bindings binding
-- On ESCAPE reduce production bindings -> bindings binding
-- On DOOP reduce production bindings -> bindings binding
-- On DELETE reduce production bindings -> bindings binding
-- On DATABASE reduce production bindings -> bindings binding
-- On CONSTRUCTOR reduce production bindings -> bindings binding
-- On CHAR reduce production bindings -> bindings binding
-- On ALIEN reduce production bindings -> bindings binding

State 904:
binding -> alien_block . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production binding -> alien_block
-- On VAR reduce production binding -> alien_block
-- On UPDATE reduce production binding -> alien_block
-- On UINTEGER reduce production binding -> alien_block
-- On UFLOAT reduce production binding -> alien_block
-- On TYPENAME reduce production binding -> alien_block
-- On TRY reduce production binding -> alien_block
-- On TRUE reduce production binding -> alien_block
-- On TABLE reduce production binding -> alien_block
-- On SWITCH reduce production binding -> alien_block
-- On STRING reduce production binding -> alien_block
-- On SPAWNWAIT reduce production binding -> alien_block
-- On SPAWNCLIENT reduce production binding -> alien_block
-- On SPAWNAT reduce production binding -> alien_block
-- On SPAWNANGELAT reduce production binding -> alien_block
-- On SPAWNANGEL reduce production binding -> alien_block
-- On SPAWN reduce production binding -> alien_block
-- On SIG reduce production binding -> alien_block
-- On SHALLOWHANDLER reduce production binding -> alien_block
-- On SHALLOWHANDLE reduce production binding -> alien_block
-- On SELECT reduce production binding -> alien_block
-- On RECEIVE reduce production binding -> alien_block
-- On RAISE reduce production binding -> alien_block
-- On QUERY reduce production binding -> alien_block
-- On PREFIXOP reduce production binding -> alien_block
-- On PAGE reduce production binding -> alien_block
-- On OPEN reduce production binding -> alien_block
-- On OFFER reduce production binding -> alien_block
-- On MODULE reduce production binding -> alien_block
-- On MINUSDOT reduce production binding -> alien_block
-- On MINUS reduce production binding -> alien_block
-- On LXML reduce production binding -> alien_block
-- On LPAREN reduce production binding -> alien_block
-- On LINFUN reduce production binding -> alien_block
-- On LENSSELECT reduce production binding -> alien_block
-- On LENSPUT reduce production binding -> alien_block
-- On LENSJOIN reduce production binding -> alien_block
-- On LENSGET reduce production binding -> alien_block
-- On LENSDROP reduce production binding -> alien_block
-- On LENS reduce production binding -> alien_block
-- On LEFTTRIANGLE reduce production binding -> alien_block
-- On LBRACKET reduce production binding -> alien_block
-- On LBRACE reduce production binding -> alien_block
-- On INSERT reduce production binding -> alien_block
-- On IF reduce production binding -> alien_block
-- On HANDLER reduce production binding -> alien_block
-- On HANDLE reduce production binding -> alien_block
-- On FUN reduce production binding -> alien_block
-- On FORMLET reduce production binding -> alien_block
-- On FOR reduce production binding -> alien_block
-- On FALSE reduce production binding -> alien_block
-- On ESCAPE reduce production binding -> alien_block
-- On DOOP reduce production binding -> alien_block
-- On DELETE reduce production binding -> alien_block
-- On DATABASE reduce production binding -> alien_block
-- On CONSTRUCTOR reduce production binding -> alien_block
-- On CHAR reduce production binding -> alien_block
-- On ALIEN reduce production binding -> alien_block

State 905:
bindings -> binding . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production bindings -> binding
-- On VAR reduce production bindings -> binding
-- On UPDATE reduce production bindings -> binding
-- On UINTEGER reduce production bindings -> binding
-- On UFLOAT reduce production bindings -> binding
-- On TYPENAME reduce production bindings -> binding
-- On TRY reduce production bindings -> binding
-- On TRUE reduce production bindings -> binding
-- On TABLE reduce production bindings -> binding
-- On SWITCH reduce production bindings -> binding
-- On STRING reduce production bindings -> binding
-- On SPAWNWAIT reduce production bindings -> binding
-- On SPAWNCLIENT reduce production bindings -> binding
-- On SPAWNAT reduce production bindings -> binding
-- On SPAWNANGELAT reduce production bindings -> binding
-- On SPAWNANGEL reduce production bindings -> binding
-- On SPAWN reduce production bindings -> binding
-- On SIG reduce production bindings -> binding
-- On SHALLOWHANDLER reduce production bindings -> binding
-- On SHALLOWHANDLE reduce production bindings -> binding
-- On SELECT reduce production bindings -> binding
-- On RECEIVE reduce production bindings -> binding
-- On RAISE reduce production bindings -> binding
-- On QUERY reduce production bindings -> binding
-- On PREFIXOP reduce production bindings -> binding
-- On PAGE reduce production bindings -> binding
-- On OPEN reduce production bindings -> binding
-- On OFFER reduce production bindings -> binding
-- On MODULE reduce production bindings -> binding
-- On MINUSDOT reduce production bindings -> binding
-- On MINUS reduce production bindings -> binding
-- On LXML reduce production bindings -> binding
-- On LPAREN reduce production bindings -> binding
-- On LINFUN reduce production bindings -> binding
-- On LENSSELECT reduce production bindings -> binding
-- On LENSPUT reduce production bindings -> binding
-- On LENSJOIN reduce production bindings -> binding
-- On LENSGET reduce production bindings -> binding
-- On LENSDROP reduce production bindings -> binding
-- On LENS reduce production bindings -> binding
-- On LEFTTRIANGLE reduce production bindings -> binding
-- On LBRACKET reduce production bindings -> binding
-- On LBRACE reduce production bindings -> binding
-- On INSERT reduce production bindings -> binding
-- On IF reduce production bindings -> binding
-- On HANDLER reduce production bindings -> binding
-- On HANDLE reduce production bindings -> binding
-- On FUN reduce production bindings -> binding
-- On FORMLET reduce production bindings -> binding
-- On FOR reduce production bindings -> binding
-- On FALSE reduce production bindings -> binding
-- On ESCAPE reduce production bindings -> binding
-- On DOOP reduce production bindings -> binding
-- On DELETE reduce production bindings -> binding
-- On DATABASE reduce production bindings -> binding
-- On CONSTRUCTOR reduce production bindings -> binding
-- On CHAR reduce production bindings -> binding
-- On ALIEN reduce production bindings -> binding

State 906:
cp_expression -> cp_name . LPAREN perhaps_name RPAREN DOT cp_expression [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
cp_expression -> cp_name . LPAREN perhaps_name RPAREN [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
cp_expression -> cp_name . LBRACKET exp RBRACKET DOT cp_expression [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
cp_expression -> cp_name . LBRACKET exp RBRACKET [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
cp_expression -> cp_name . LBRACKET RBRACKET [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
cp_expression -> cp_name . LRARROW cp_name [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On LRARROW shift to state 907
-- On LPAREN shift to state 909
-- On LBRACKET shift to state 919

State 907:
cp_expression -> cp_name LRARROW . cp_name [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VARIABLE shift to state 416
-- On cp_name shift to state 908

State 908:
cp_expression -> cp_name LRARROW cp_name . [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VBAR reduce production cp_expression -> cp_name LRARROW cp_name
-- On RPAREN reduce production cp_expression -> cp_name LRARROW cp_name
-- On RIGHTTRIANGLE reduce production cp_expression -> cp_name LRARROW cp_name
-- On RBRACE reduce production cp_expression -> cp_name LRARROW cp_name
-- On CASE reduce production cp_expression -> cp_name LRARROW cp_name

State 909:
cp_expression -> cp_name LPAREN . perhaps_name RPAREN DOT cp_expression [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
cp_expression -> cp_name LPAREN . perhaps_name RPAREN [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VARIABLE shift to state 416
-- On perhaps_name shift to state 910
-- On cp_name shift to state 918
-- On RPAREN reduce production perhaps_name ->

State 910:
cp_expression -> cp_name LPAREN perhaps_name . RPAREN DOT cp_expression [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
cp_expression -> cp_name LPAREN perhaps_name . RPAREN [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On RPAREN shift to state 911

State 911:
cp_expression -> cp_name LPAREN perhaps_name RPAREN . DOT cp_expression [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
cp_expression -> cp_name LPAREN perhaps_name RPAREN . [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On DOT shift to state 912
-- On VBAR reduce production cp_expression -> cp_name LPAREN perhaps_name RPAREN
-- On RPAREN reduce production cp_expression -> cp_name LPAREN perhaps_name RPAREN
-- On RIGHTTRIANGLE reduce production cp_expression -> cp_name LPAREN perhaps_name RPAREN
-- On RBRACE reduce production cp_expression -> cp_name LPAREN perhaps_name RPAREN
-- On CASE reduce production cp_expression -> cp_name LPAREN perhaps_name RPAREN

State 912:
cp_expression -> cp_name LPAREN perhaps_name RPAREN DOT . cp_expression [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VARIABLE shift to state 416
-- On OFFER shift to state 417
-- On NU shift to state 424
-- On LBRACE shift to state 428
-- On CONSTRUCTOR shift to state 421
-- On cp_name shift to state 906
-- On cp_label shift to state 913
-- On cp_expression shift to state 917

State 913:
cp_expression -> cp_label . cp_name DOT cp_expression [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
cp_expression -> cp_label . cp_name [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VARIABLE shift to state 416
-- On cp_name shift to state 914

State 914:
cp_expression -> cp_label cp_name . DOT cp_expression [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
cp_expression -> cp_label cp_name . [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On DOT shift to state 915
-- On VBAR reduce production cp_expression -> cp_label cp_name
-- On RPAREN reduce production cp_expression -> cp_label cp_name
-- On RIGHTTRIANGLE reduce production cp_expression -> cp_label cp_name
-- On RBRACE reduce production cp_expression -> cp_label cp_name
-- On CASE reduce production cp_expression -> cp_label cp_name

State 915:
cp_expression -> cp_label cp_name DOT . cp_expression [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VARIABLE shift to state 416
-- On OFFER shift to state 417
-- On NU shift to state 424
-- On LBRACE shift to state 428
-- On CONSTRUCTOR shift to state 421
-- On cp_name shift to state 906
-- On cp_label shift to state 913
-- On cp_expression shift to state 916

State 916:
cp_expression -> cp_label cp_name DOT cp_expression . [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VBAR reduce production cp_expression -> cp_label cp_name DOT cp_expression
-- On RPAREN reduce production cp_expression -> cp_label cp_name DOT cp_expression
-- On RIGHTTRIANGLE reduce production cp_expression -> cp_label cp_name DOT cp_expression
-- On RBRACE reduce production cp_expression -> cp_label cp_name DOT cp_expression
-- On CASE reduce production cp_expression -> cp_label cp_name DOT cp_expression

State 917:
cp_expression -> cp_name LPAREN perhaps_name RPAREN DOT cp_expression . [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VBAR reduce production cp_expression -> cp_name LPAREN perhaps_name RPAREN DOT cp_expression
-- On RPAREN reduce production cp_expression -> cp_name LPAREN perhaps_name RPAREN DOT cp_expression
-- On RIGHTTRIANGLE reduce production cp_expression -> cp_name LPAREN perhaps_name RPAREN DOT cp_expression
-- On RBRACE reduce production cp_expression -> cp_name LPAREN perhaps_name RPAREN DOT cp_expression
-- On CASE reduce production cp_expression -> cp_name LPAREN perhaps_name RPAREN DOT cp_expression

State 918:
perhaps_name -> cp_name . [ RPAREN ]
-- On RPAREN reduce production perhaps_name -> cp_name

State 919:
cp_expression -> cp_name LBRACKET . exp RBRACKET DOT cp_expression [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
cp_expression -> cp_name LBRACKET . exp RBRACKET [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
cp_expression -> cp_name LBRACKET . RBRACKET [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RBRACKET shift to state 920
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 921
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 920:
cp_expression -> cp_name LBRACKET RBRACKET . [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VBAR reduce production cp_expression -> cp_name LBRACKET RBRACKET
-- On RPAREN reduce production cp_expression -> cp_name LBRACKET RBRACKET
-- On RIGHTTRIANGLE reduce production cp_expression -> cp_name LBRACKET RBRACKET
-- On RBRACE reduce production cp_expression -> cp_name LBRACKET RBRACKET
-- On CASE reduce production cp_expression -> cp_name LBRACKET RBRACKET

State 921:
cp_expression -> cp_name LBRACKET exp . RBRACKET DOT cp_expression [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
cp_expression -> cp_name LBRACKET exp . RBRACKET [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On RBRACKET shift to state 922

State 922:
cp_expression -> cp_name LBRACKET exp RBRACKET . DOT cp_expression [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
cp_expression -> cp_name LBRACKET exp RBRACKET . [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On DOT shift to state 923
-- On VBAR reduce production cp_expression -> cp_name LBRACKET exp RBRACKET
-- On RPAREN reduce production cp_expression -> cp_name LBRACKET exp RBRACKET
-- On RIGHTTRIANGLE reduce production cp_expression -> cp_name LBRACKET exp RBRACKET
-- On RBRACE reduce production cp_expression -> cp_name LBRACKET exp RBRACKET
-- On CASE reduce production cp_expression -> cp_name LBRACKET exp RBRACKET

State 923:
cp_expression -> cp_name LBRACKET exp RBRACKET DOT . cp_expression [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VARIABLE shift to state 416
-- On OFFER shift to state 417
-- On NU shift to state 424
-- On LBRACE shift to state 428
-- On CONSTRUCTOR shift to state 421
-- On cp_name shift to state 906
-- On cp_label shift to state 913
-- On cp_expression shift to state 924

State 924:
cp_expression -> cp_name LBRACKET exp RBRACKET DOT cp_expression . [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VBAR reduce production cp_expression -> cp_name LBRACKET exp RBRACKET DOT cp_expression
-- On RPAREN reduce production cp_expression -> cp_name LBRACKET exp RBRACKET DOT cp_expression
-- On RIGHTTRIANGLE reduce production cp_expression -> cp_name LBRACKET exp RBRACKET DOT cp_expression
-- On RBRACE reduce production cp_expression -> cp_name LBRACKET exp RBRACKET DOT cp_expression
-- On CASE reduce production cp_expression -> cp_name LBRACKET exp RBRACKET DOT cp_expression

State 925:
cp_expression -> NU cp_name DOT LPAREN cp_expression . VBAR cp_expression RPAREN [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VBAR shift to state 926

State 926:
cp_expression -> NU cp_name DOT LPAREN cp_expression VBAR . cp_expression RPAREN [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VARIABLE shift to state 416
-- On OFFER shift to state 417
-- On NU shift to state 424
-- On LBRACE shift to state 428
-- On CONSTRUCTOR shift to state 421
-- On cp_name shift to state 906
-- On cp_label shift to state 913
-- On cp_expression shift to state 927

State 927:
cp_expression -> NU cp_name DOT LPAREN cp_expression VBAR cp_expression . RPAREN [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On RPAREN shift to state 928

State 928:
cp_expression -> NU cp_name DOT LPAREN cp_expression VBAR cp_expression RPAREN . [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VBAR reduce production cp_expression -> NU cp_name DOT LPAREN cp_expression VBAR cp_expression RPAREN
-- On RPAREN reduce production cp_expression -> NU cp_name DOT LPAREN cp_expression VBAR cp_expression RPAREN
-- On RIGHTTRIANGLE reduce production cp_expression -> NU cp_name DOT LPAREN cp_expression VBAR cp_expression RPAREN
-- On RBRACE reduce production cp_expression -> NU cp_name DOT LPAREN cp_expression VBAR cp_expression RPAREN
-- On CASE reduce production cp_expression -> NU cp_name DOT LPAREN cp_expression VBAR cp_expression RPAREN

State 929:
cp_case -> CASE cp_label RARROW cp_expression . [ RBRACE CASE ]
-- On RBRACE reduce production cp_case -> CASE cp_label RARROW cp_expression
-- On CASE reduce production cp_case -> CASE cp_label RARROW cp_expression

State 930:
cp_expression -> OFFER cp_name LBRACE perhaps_cp_cases . RBRACE [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On RBRACE shift to state 931

State 931:
cp_expression -> OFFER cp_name LBRACE perhaps_cp_cases RBRACE . [ VBAR RPAREN RIGHTTRIANGLE RBRACE CASE ]
-- On VBAR reduce production cp_expression -> OFFER cp_name LBRACE perhaps_cp_cases RBRACE
-- On RPAREN reduce production cp_expression -> OFFER cp_name LBRACE perhaps_cp_cases RBRACE
-- On RIGHTTRIANGLE reduce production cp_expression -> OFFER cp_name LBRACE perhaps_cp_cases RBRACE
-- On RBRACE reduce production cp_expression -> OFFER cp_name LBRACE perhaps_cp_cases RBRACE
-- On CASE reduce production cp_expression -> OFFER cp_name LBRACE perhaps_cp_cases RBRACE

State 932:
perhaps_cp_cases -> cp_cases . [ RBRACE ]
-- On RBRACE reduce production perhaps_cp_cases -> cp_cases

State 933:
cp_cases -> cp_case . [ RBRACE ]
cp_cases -> cp_case . cp_cases [ RBRACE ]
-- On CASE shift to state 420
-- On cp_cases shift to state 934
-- On cp_case shift to state 933
-- On RBRACE reduce production cp_cases -> cp_case

State 934:
cp_cases -> cp_case cp_cases . [ RBRACE ]
-- On RBRACE reduce production cp_cases -> cp_case cp_cases

State 935:
primary_expression -> LEFTTRIANGLE cp_expression . RIGHTTRIANGLE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On RIGHTTRIANGLE shift to state 936

State 936:
primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On VBAR reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On VALUES reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On TABLEKEYS reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On SEMICOLON reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On RPAREN reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On RETURNING reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On RBRACKET reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On RBRACE reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On RARROW reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On POSTFIXOP reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On OTHERWISE reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On ON reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On MINUSDOT reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On MINUS reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On LPAREN reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXR9 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXR8 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXR7 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXR6 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXR5 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXR4 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXR3 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXR2 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXR1 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXR0 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXL9 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXL8 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXL7 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXL6 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXL5 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXL4 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXL3 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXL2 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXL1 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIXL0 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIX9 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIX8 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIX7 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIX6 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIX5 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIX4 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIX3 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIX2 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIX1 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On INFIX0 reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On FROM reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On FATRARROW reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On EQUALSTILDE reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On END reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On ELSE reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On DOTDOT reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On DOT reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On DELETE_LEFT reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On DELETE reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On DEFAULT reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On COMMA reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On COLONCOLON reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On COLON reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On CASE reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On BY reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On BARRBRACE reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On BARBAR reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On BANG reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On AS reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE
-- On AMPAMP reduce production primary_expression -> LEFTTRIANGLE cp_expression RIGHTTRIANGLE

State 937:
unary_expression -> MINUSDOT unary_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production unary_expression -> MINUSDOT unary_expression
-- On VBAR reduce production unary_expression -> MINUSDOT unary_expression
-- On VALUES reduce production unary_expression -> MINUSDOT unary_expression
-- On TABLEKEYS reduce production unary_expression -> MINUSDOT unary_expression
-- On SEMICOLON reduce production unary_expression -> MINUSDOT unary_expression
-- On RPAREN reduce production unary_expression -> MINUSDOT unary_expression
-- On RETURNING reduce production unary_expression -> MINUSDOT unary_expression
-- On RBRACKET reduce production unary_expression -> MINUSDOT unary_expression
-- On RBRACE reduce production unary_expression -> MINUSDOT unary_expression
-- On RARROW reduce production unary_expression -> MINUSDOT unary_expression
-- On OTHERWISE reduce production unary_expression -> MINUSDOT unary_expression
-- On ON reduce production unary_expression -> MINUSDOT unary_expression
-- On MINUSDOT reduce production unary_expression -> MINUSDOT unary_expression
-- On MINUS reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR9 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR8 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR7 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR6 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR5 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR4 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR3 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR2 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR1 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR0 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL9 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL8 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL7 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL6 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL5 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL4 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL3 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL2 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL1 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL0 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX9 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX8 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX7 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX6 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX5 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX4 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX3 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX2 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX1 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX0 reduce production unary_expression -> MINUSDOT unary_expression
-- On FROM reduce production unary_expression -> MINUSDOT unary_expression
-- On FATRARROW reduce production unary_expression -> MINUSDOT unary_expression
-- On EQUALSTILDE reduce production unary_expression -> MINUSDOT unary_expression
-- On END reduce production unary_expression -> MINUSDOT unary_expression
-- On ELSE reduce production unary_expression -> MINUSDOT unary_expression
-- On DOTDOT reduce production unary_expression -> MINUSDOT unary_expression
-- On DELETE_LEFT reduce production unary_expression -> MINUSDOT unary_expression
-- On DELETE reduce production unary_expression -> MINUSDOT unary_expression
-- On DEFAULT reduce production unary_expression -> MINUSDOT unary_expression
-- On COMMA reduce production unary_expression -> MINUSDOT unary_expression
-- On COLONCOLON reduce production unary_expression -> MINUSDOT unary_expression
-- On COLON reduce production unary_expression -> MINUSDOT unary_expression
-- On CASE reduce production unary_expression -> MINUSDOT unary_expression
-- On BY reduce production unary_expression -> MINUSDOT unary_expression
-- On BARRBRACE reduce production unary_expression -> MINUSDOT unary_expression
-- On BARBAR reduce production unary_expression -> MINUSDOT unary_expression
-- On BANG reduce production unary_expression -> MINUSDOT unary_expression
-- On AS reduce production unary_expression -> MINUSDOT unary_expression
-- On AMPAMP reduce production unary_expression -> MINUSDOT unary_expression

State 938:
binop -> MINUS . [ RPAREN ]
unary_expression -> MINUS . unary_expression [ WITH RPAREN MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE COMMA COLONCOLON COLON BARBAR BANG AMPAMP ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 939
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611
-- On RPAREN reduce production binop -> MINUS

State 939:
unary_expression -> MINUS unary_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production unary_expression -> MINUS unary_expression
-- On VBAR reduce production unary_expression -> MINUS unary_expression
-- On VALUES reduce production unary_expression -> MINUS unary_expression
-- On TABLEKEYS reduce production unary_expression -> MINUS unary_expression
-- On SEMICOLON reduce production unary_expression -> MINUS unary_expression
-- On RPAREN reduce production unary_expression -> MINUS unary_expression
-- On RETURNING reduce production unary_expression -> MINUS unary_expression
-- On RBRACKET reduce production unary_expression -> MINUS unary_expression
-- On RBRACE reduce production unary_expression -> MINUS unary_expression
-- On RARROW reduce production unary_expression -> MINUS unary_expression
-- On OTHERWISE reduce production unary_expression -> MINUS unary_expression
-- On ON reduce production unary_expression -> MINUS unary_expression
-- On MINUSDOT reduce production unary_expression -> MINUS unary_expression
-- On MINUS reduce production unary_expression -> MINUS unary_expression
-- On INFIXR9 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR8 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR7 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR6 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR5 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR4 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR3 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR2 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR1 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR0 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL9 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL8 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL7 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL6 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL5 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL4 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL3 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL2 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL1 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL0 reduce production unary_expression -> MINUS unary_expression
-- On INFIX9 reduce production unary_expression -> MINUS unary_expression
-- On INFIX8 reduce production unary_expression -> MINUS unary_expression
-- On INFIX7 reduce production unary_expression -> MINUS unary_expression
-- On INFIX6 reduce production unary_expression -> MINUS unary_expression
-- On INFIX5 reduce production unary_expression -> MINUS unary_expression
-- On INFIX4 reduce production unary_expression -> MINUS unary_expression
-- On INFIX3 reduce production unary_expression -> MINUS unary_expression
-- On INFIX2 reduce production unary_expression -> MINUS unary_expression
-- On INFIX1 reduce production unary_expression -> MINUS unary_expression
-- On INFIX0 reduce production unary_expression -> MINUS unary_expression
-- On FROM reduce production unary_expression -> MINUS unary_expression
-- On FATRARROW reduce production unary_expression -> MINUS unary_expression
-- On EQUALSTILDE reduce production unary_expression -> MINUS unary_expression
-- On END reduce production unary_expression -> MINUS unary_expression
-- On ELSE reduce production unary_expression -> MINUS unary_expression
-- On DOTDOT reduce production unary_expression -> MINUS unary_expression
-- On DELETE_LEFT reduce production unary_expression -> MINUS unary_expression
-- On DELETE reduce production unary_expression -> MINUS unary_expression
-- On DEFAULT reduce production unary_expression -> MINUS unary_expression
-- On COMMA reduce production unary_expression -> MINUS unary_expression
-- On COLONCOLON reduce production unary_expression -> MINUS unary_expression
-- On COLON reduce production unary_expression -> MINUS unary_expression
-- On CASE reduce production unary_expression -> MINUS unary_expression
-- On BY reduce production unary_expression -> MINUS unary_expression
-- On BARRBRACE reduce production unary_expression -> MINUS unary_expression
-- On BARBAR reduce production unary_expression -> MINUS unary_expression
-- On BANG reduce production unary_expression -> MINUS unary_expression
-- On AS reduce production unary_expression -> MINUS unary_expression
-- On AMPAMP reduce production unary_expression -> MINUS unary_expression

State 940:
parenthesized_thing -> LPAREN DOT . record_label RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On CONSTRUCTOR shift to state 91
-- On record_label shift to state 941
-- On field_label shift to state 254

State 941:
parenthesized_thing -> LPAREN DOT record_label . RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On RPAREN shift to state 942

State 942:
parenthesized_thing -> LPAREN DOT record_label RPAREN . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On VBAR reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On VARIABLE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On VALUES reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On UINTEGER reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On UFLOAT reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On TRUE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On TABLEKEYS reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On STRING reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On SEMICOLON reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On RPAREN reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On RETURNING reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On RECEIVE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On RBRACKET reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On RBRACE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On RARROW reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On POSTFIXOP reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On OTHERWISE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On ON reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On MINUSDOT reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On MINUS reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On LPAREN reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR9 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR8 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR7 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR6 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR5 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR4 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR3 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR2 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR1 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR0 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL9 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL8 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL7 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL6 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL5 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL4 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL3 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL2 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL1 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL0 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX9 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX8 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX7 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX6 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX5 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX4 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX3 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX2 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX1 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX0 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On FROM reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On FATRARROW reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On FALSE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On EQUALSTILDE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On END reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On ELSE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On DOTDOT reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On DOT reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On DELETE_LEFT reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On DELETE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On DEFAULT reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On CONSTRUCTOR reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On COMMA reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On COLONCOLON reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On COLON reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On CHAR reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On CASE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On BY reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On BARRBRACE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On BARBAR reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On BANG reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On AS reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On AMPAMP reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN

State 943:
constructor_expression -> CONSTRUCTOR . [ WITH RPAREN MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE COMMA COLONCOLON COLON BARBAR BANG AMPAMP ]
constructor_expression -> CONSTRUCTOR . parenthesized_thing [ WITH RPAREN MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE COMMA COLONCOLON COLON BARBAR BANG AMPAMP ]
field_label -> CONSTRUCTOR . [ EQ ]
qualified_name -> CONSTRUCTOR . DOT qualified_name_inner [ WITH RPAREN POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE DOT COMMA COLONCOLON COLON BARBAR BANG AMPAMP ]
-- On LPAREN shift to state 402
-- On DOT shift to state 565
-- On parenthesized_thing shift to state 598
-- On WITH reduce production constructor_expression -> CONSTRUCTOR
-- On RPAREN reduce production constructor_expression -> CONSTRUCTOR
-- On MINUSDOT reduce production constructor_expression -> CONSTRUCTOR
-- On MINUS reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR9 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR8 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR7 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR6 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR5 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR4 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR3 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR2 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR1 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR0 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL9 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL8 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL7 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL6 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL5 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL4 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL3 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL2 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL1 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL0 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX9 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX8 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX7 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX6 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX5 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX4 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX3 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX2 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX1 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX0 reduce production constructor_expression -> CONSTRUCTOR
-- On EQUALSTILDE reduce production constructor_expression -> CONSTRUCTOR
-- On EQ reduce production field_label -> CONSTRUCTOR
-- On COMMA reduce production constructor_expression -> CONSTRUCTOR
-- On COLONCOLON reduce production constructor_expression -> CONSTRUCTOR
-- On COLON reduce production constructor_expression -> CONSTRUCTOR
-- On BARBAR reduce production constructor_expression -> CONSTRUCTOR
-- On BANG reduce production constructor_expression -> CONSTRUCTOR
-- On AMPAMP reduce production constructor_expression -> CONSTRUCTOR

State 944:
binop -> op . [ RPAREN ]
-- On RPAREN reduce production binop -> op

State 945:
parenthesized_thing -> LPAREN labeled_exps . VBAR exp RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
parenthesized_thing -> LPAREN labeled_exps . RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VBAR shift to state 946
-- On RPAREN shift to state 949

State 946:
parenthesized_thing -> LPAREN labeled_exps VBAR . exp RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 947
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 947:
parenthesized_thing -> LPAREN labeled_exps VBAR exp . RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On RPAREN shift to state 948

State 948:
parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On VBAR reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On VARIABLE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On VALUES reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On UINTEGER reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On UFLOAT reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On TRUE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On TABLEKEYS reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On STRING reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On SEMICOLON reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On RPAREN reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On RETURNING reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On RECEIVE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On RBRACKET reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On RBRACE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On RARROW reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On POSTFIXOP reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On OTHERWISE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On ON reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On MINUSDOT reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On MINUS reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On LPAREN reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR9 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR8 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR7 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR6 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR5 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR4 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR3 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR2 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR1 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR0 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL9 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL8 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL7 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL6 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL5 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL4 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL3 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL2 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL1 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL0 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX9 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX8 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX7 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX6 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX5 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX4 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX3 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX2 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX1 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX0 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On FROM reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On FATRARROW reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On FALSE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On EQUALSTILDE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On END reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On ELSE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On DOTDOT reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On DOT reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On DELETE_LEFT reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On DELETE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On DEFAULT reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On CONSTRUCTOR reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On COMMA reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On COLONCOLON reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On COLON reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On CHAR reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On CASE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On BY reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On BARRBRACE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On BARBAR reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On BANG reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On AS reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On AMPAMP reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN

State 949:
parenthesized_thing -> LPAREN labeled_exps RPAREN . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On VBAR reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On VARIABLE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On VALUES reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On UINTEGER reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On UFLOAT reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On TRUE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On TABLEKEYS reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On STRING reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On SEMICOLON reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On RPAREN reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On RETURNING reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On RECEIVE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On RBRACKET reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On RBRACE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On RARROW reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On POSTFIXOP reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On OTHERWISE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On ON reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On MINUSDOT reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On MINUS reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On LPAREN reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR9 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR8 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR7 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR6 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR5 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR4 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR3 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR2 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR1 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR0 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL9 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL8 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL7 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL6 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL5 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL4 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL3 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL2 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL1 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL0 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX9 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX8 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX7 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX6 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX5 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX4 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX3 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX2 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX1 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX0 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On FROM reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On FATRARROW reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On FALSE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On EQUALSTILDE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On END reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On ELSE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On DOTDOT reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On DOT reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On DELETE_LEFT reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On DELETE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On DEFAULT reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On CONSTRUCTOR reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On COMMA reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On COLONCOLON reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On COLON reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On CHAR reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On CASE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On BY reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On BARRBRACE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On BARBAR reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On BANG reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On AS reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On AMPAMP reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN

State 950:
parenthesized_thing -> LPAREN exps . RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On RPAREN shift to state 951

State 951:
parenthesized_thing -> LPAREN exps RPAREN . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On VBAR reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On VARIABLE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On VALUES reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On UINTEGER reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On UFLOAT reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On TRUE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On TABLEKEYS reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On STRING reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On SEMICOLON reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On RPAREN reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On RETURNING reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On RECEIVE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On RBRACKET reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On RBRACE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On RARROW reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On POSTFIXOP reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On OTHERWISE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On ON reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On MINUSDOT reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On MINUS reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On LPAREN reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR9 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR8 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR7 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR6 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR5 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR4 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR3 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR2 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR1 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR0 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL9 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL8 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL7 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL6 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL5 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL4 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL3 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL2 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL1 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL0 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX9 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX8 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX7 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX6 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX5 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX4 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX3 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX2 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX1 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX0 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On FROM reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On FATRARROW reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On FALSE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On EQUALSTILDE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On END reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On ELSE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On DOTDOT reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On DOT reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On DELETE_LEFT reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On DELETE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On DEFAULT reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On CONSTRUCTOR reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On COMMA reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On COLONCOLON reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On COLON reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On CHAR reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On CASE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On BY reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On BARRBRACE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On BARBAR reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On BANG reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On AS reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On AMPAMP reduce production parenthesized_thing -> LPAREN exps RPAREN

State 952:
exps -> exp . COMMA exps [ RPAREN ]
exps -> exp . [ RPAREN ]
parenthesized_thing -> LPAREN exp . WITH labeled_exps RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH shift to state 953
-- On COMMA shift to state 756
-- On RPAREN reduce production exps -> exp

State 953:
parenthesized_thing -> LPAREN exp WITH . labeled_exps RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On CONSTRUCTOR shift to state 91
-- On record_label shift to state 818
-- On labeled_exps shift to state 954
-- On field_label shift to state 254

State 954:
parenthesized_thing -> LPAREN exp WITH labeled_exps . RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On RPAREN shift to state 955

State 955:
parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On VBAR reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On VARIABLE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On VALUES reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On UINTEGER reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On UFLOAT reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On TRUE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On TABLEKEYS reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On STRING reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On SEMICOLON reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On RPAREN reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On RETURNING reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On RECEIVE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On RBRACKET reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On RBRACE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On RARROW reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On POSTFIXOP reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On OTHERWISE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On ON reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On MINUSDOT reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On MINUS reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On LPAREN reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR9 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR8 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR7 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR6 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR5 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR4 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR3 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR2 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR1 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR0 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL9 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL8 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL7 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL6 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL5 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL4 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL3 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL2 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL1 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL0 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX9 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX8 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX7 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX6 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX5 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX4 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX3 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX2 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX1 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX0 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On FROM reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On FATRARROW reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On FALSE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On EQUALSTILDE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On END reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On ELSE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On DOTDOT reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On DOT reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On DELETE_LEFT reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On DELETE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On DEFAULT reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On CONSTRUCTOR reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On COMMA reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On COLONCOLON reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On COLON reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On CHAR reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On CASE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On BY reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On BARRBRACE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On BARBAR reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On BANG reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On AS reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On AMPAMP reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN

State 956:
parenthesized_thing -> LPAREN binop . RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On RPAREN shift to state 957

State 957:
parenthesized_thing -> LPAREN binop RPAREN . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On VBAR reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On VARIABLE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On VALUES reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On UINTEGER reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On UFLOAT reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On TRUE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On TABLEKEYS reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On STRING reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On SEMICOLON reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On RPAREN reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On RETURNING reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On RECEIVE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On RBRACKET reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On RBRACE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On RARROW reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On POSTFIXOP reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On OTHERWISE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On ON reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On MINUSDOT reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On MINUS reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On LPAREN reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR9 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR8 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR7 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR6 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR5 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR4 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR3 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR2 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR1 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR0 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL9 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL8 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL7 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL6 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL5 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL4 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL3 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL2 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL1 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL0 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX9 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX8 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX7 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX6 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX5 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX4 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX3 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX2 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX1 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX0 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On FROM reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On FATRARROW reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On FALSE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On EQUALSTILDE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On END reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On ELSE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On DOTDOT reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On DOT reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On DELETE_LEFT reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On DELETE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On DEFAULT reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On CONSTRUCTOR reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On COMMA reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On COLONCOLON reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On COLON reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On CHAR reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On CASE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On BY reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On BARRBRACE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On BARBAR reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On BANG reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On AS reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On AMPAMP reduce production parenthesized_thing -> LPAREN binop RPAREN

State 958:
session_expression -> OFFER LPAREN exp . RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RPAREN shift to state 959

State 959:
session_expression -> OFFER LPAREN exp RPAREN . LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LBRACE shift to state 960

State 960:
session_expression -> OFFER LPAREN exp RPAREN LBRACE . perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On CASE shift to state 336
-- On perhaps_cases shift to state 961
-- On cases shift to state 782
-- On case shift to state 503
-- On RBRACE reduce production perhaps_cases ->

State 961:
session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases . RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RBRACE shift to state 962

State 962:
session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On VBAR reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On VALUES reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On TABLEKEYS reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On SEMICOLON reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On RPAREN reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On RBRACKET reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On RBRACE reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On OTHERWISE reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On ON reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On FROM reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On END reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On ELSE reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On DOTDOT reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On DELETE_LEFT reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On DELETE reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On DEFAULT reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On COMMA reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On CASE reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On BY reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On BARRBRACE reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On AS reduce production session_expression -> OFFER LPAREN exp RPAREN LBRACE perhaps_cases RBRACE

State 963:
page_placement -> LBRACEBAR exp . BARRBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On BARRBRACE shift to state 964

State 964:
page_placement -> LBRACEBAR exp BARRBRACE . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production page_placement -> LBRACEBAR exp BARRBRACE
-- On LBRACEBAR reduce production page_placement -> LBRACEBAR exp BARRBRACE
-- On LBRACE reduce production page_placement -> LBRACEBAR exp BARRBRACE
-- On ENDTAG reduce production page_placement -> LBRACEBAR exp BARRBRACE
-- On CDATA reduce production page_placement -> LBRACEBAR exp BARRBRACE

State 965:
block -> LBRACE . block_contents RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
formlet_binding -> LBRACE . logical_expression RARROW pattern RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
formlet_placement -> LBRACE . logical_expression FATRARROW logical_expression RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
formlet_placement -> LBRACE . logical_expression FATRARROW logical_expression WITH logical_expression RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On VARIABLE shift to state 2
-- On VAR shift to state 316
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TYPENAME shift to state 339
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SIG shift to state 347
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SEMICOLON shift to state 384
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OPEN shift to state 429
-- On OFFER shift to state 400
-- On MODULE shift to state 432
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 524
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 872
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On ALIEN shift to state 876
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typedecl shift to state 879
-- On typed_handler_binding shift to state 881
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On signature shift to state 882
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On perhaps_semi shift to state 891
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 966
-- On links_open shift to state 892
-- On links_module shift to state 893
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 894
-- On formlet_expression shift to state 746
-- On exp shift to state 896
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block_contents shift to state 976
-- On block shift to state 610
-- On bindings shift to state 900
-- On binding shift to state 905
-- On atomic_expression shift to state 611
-- On alien_block shift to state 904
-- On RBRACE reduce production perhaps_semi ->

State 966:
formlet_binding -> LBRACE logical_expression . RARROW pattern RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
formlet_placement -> LBRACE logical_expression . FATRARROW logical_expression RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
formlet_placement -> LBRACE logical_expression . FATRARROW logical_expression WITH logical_expression RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
logical_expression -> logical_expression . BARBAR infixl_0 [ SEMICOLON RBRACE RARROW FATRARROW COLON BARBAR AMPAMP ]
logical_expression -> logical_expression . AMPAMP infixl_0 [ SEMICOLON RBRACE RARROW FATRARROW COLON BARBAR AMPAMP ]
typed_expression -> logical_expression . [ SEMICOLON RBRACE COLON ]
-- On RARROW shift to state 967
-- On FATRARROW shift to state 970
-- On BARBAR shift to state 622
-- On AMPAMP shift to state 741
-- On SEMICOLON reduce production typed_expression -> logical_expression
-- On RBRACE reduce production typed_expression -> logical_expression
-- On COLON reduce production typed_expression -> logical_expression

State 967:
formlet_binding -> LBRACE logical_expression RARROW . pattern RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On primary_pattern shift to state 275
-- On pattern shift to state 968
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 968:
formlet_binding -> LBRACE logical_expression RARROW pattern . RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On RBRACE shift to state 969

State 969:
formlet_binding -> LBRACE logical_expression RARROW pattern RBRACE . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production formlet_binding -> LBRACE logical_expression RARROW pattern RBRACE
-- On LBRACEBAR reduce production formlet_binding -> LBRACE logical_expression RARROW pattern RBRACE
-- On LBRACE reduce production formlet_binding -> LBRACE logical_expression RARROW pattern RBRACE
-- On ENDTAG reduce production formlet_binding -> LBRACE logical_expression RARROW pattern RBRACE
-- On CDATA reduce production formlet_binding -> LBRACE logical_expression RARROW pattern RBRACE

State 970:
formlet_placement -> LBRACE logical_expression FATRARROW . logical_expression RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
formlet_placement -> LBRACE logical_expression FATRARROW . logical_expression WITH logical_expression RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 971
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 971:
formlet_placement -> LBRACE logical_expression FATRARROW logical_expression . RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
formlet_placement -> LBRACE logical_expression FATRARROW logical_expression . WITH logical_expression RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
logical_expression -> logical_expression . BARBAR infixl_0 [ WITH RBRACE BARBAR AMPAMP ]
logical_expression -> logical_expression . AMPAMP infixl_0 [ WITH RBRACE BARBAR AMPAMP ]
-- On WITH shift to state 972
-- On RBRACE shift to state 975
-- On BARBAR shift to state 622
-- On AMPAMP shift to state 741

State 972:
formlet_placement -> LBRACE logical_expression FATRARROW logical_expression WITH . logical_expression RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On VARIABLE shift to state 2
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On RECEIVE shift to state 389
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On HANDLER shift to state 461
-- On FUN shift to state 547
-- On FALSE shift to state 34
-- On DOOP shift to state 579
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On spawn_expression shift to state 572
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 973
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 973:
formlet_placement -> LBRACE logical_expression FATRARROW logical_expression WITH logical_expression . RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
logical_expression -> logical_expression . BARBAR infixl_0 [ RBRACE BARBAR AMPAMP ]
logical_expression -> logical_expression . AMPAMP infixl_0 [ RBRACE BARBAR AMPAMP ]
-- On RBRACE shift to state 974
-- On BARBAR shift to state 622
-- On AMPAMP shift to state 741

State 974:
formlet_placement -> LBRACE logical_expression FATRARROW logical_expression WITH logical_expression RBRACE . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression WITH logical_expression RBRACE
-- On LBRACEBAR reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression WITH logical_expression RBRACE
-- On LBRACE reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression WITH logical_expression RBRACE
-- On ENDTAG reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression WITH logical_expression RBRACE
-- On CDATA reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression WITH logical_expression RBRACE

State 975:
formlet_placement -> LBRACE logical_expression FATRARROW logical_expression RBRACE . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression RBRACE
-- On LBRACEBAR reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression RBRACE
-- On LBRACE reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression RBRACE
-- On ENDTAG reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression RBRACE
-- On CDATA reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression RBRACE

State 976:
block -> LBRACE block_contents . RBRACE [ WITH VBAR VARIABLE VAR VALUES UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLEKEYS TABLE SWITCH STRING STAR SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SLASHRXML SLASHFLAGS SLASH SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RXML RQUOTE RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW RANGE RAISE QUOTEDMETA QUESTION QUERY PREFIXOP PREFIX POSTFIXOP POSTFIX PLUS PAGE OTHERWISE OPEN OP ON OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACEBAR LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXR INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIXL INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 INFIX IF HANDLER HANDLE FUN FROM FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DOOP DOLLAR DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CDATA CASE CARET BY BARRBRACE BARBAR BANG AS AMPAMP ALTERNATE ALIEN ]
-- On RBRACE shift to state 977

State 977:
block -> LBRACE block_contents RBRACE . [ WITH VBAR VARIABLE VAR VALUES UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLEKEYS TABLE SWITCH STRING STAR SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SLASHRXML SLASHFLAGS SLASH SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RXML RQUOTE RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW RANGE RAISE QUOTEDMETA QUESTION QUERY PREFIXOP PREFIX POSTFIXOP POSTFIX PLUS PAGE OTHERWISE OPEN OP ON OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACEBAR LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXR INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIXL INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 INFIX IF HANDLER HANDLE FUN FROM FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DOOP DOLLAR DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CDATA CASE CARET BY BARRBRACE BARBAR BANG AS AMPAMP ALTERNATE ALIEN ]
-- On WITH reduce production block -> LBRACE block_contents RBRACE
-- On VBAR reduce production block -> LBRACE block_contents RBRACE
-- On VARIABLE reduce production block -> LBRACE block_contents RBRACE
-- On VAR reduce production block -> LBRACE block_contents RBRACE
-- On VALUES reduce production block -> LBRACE block_contents RBRACE
-- On UPDATE reduce production block -> LBRACE block_contents RBRACE
-- On UINTEGER reduce production block -> LBRACE block_contents RBRACE
-- On UFLOAT reduce production block -> LBRACE block_contents RBRACE
-- On TYPENAME reduce production block -> LBRACE block_contents RBRACE
-- On TRY reduce production block -> LBRACE block_contents RBRACE
-- On TRUE reduce production block -> LBRACE block_contents RBRACE
-- On TABLEKEYS reduce production block -> LBRACE block_contents RBRACE
-- On TABLE reduce production block -> LBRACE block_contents RBRACE
-- On SWITCH reduce production block -> LBRACE block_contents RBRACE
-- On STRING reduce production block -> LBRACE block_contents RBRACE
-- On STAR reduce production block -> LBRACE block_contents RBRACE
-- On SPAWNWAIT reduce production block -> LBRACE block_contents RBRACE
-- On SPAWNCLIENT reduce production block -> LBRACE block_contents RBRACE
-- On SPAWNAT reduce production block -> LBRACE block_contents RBRACE
-- On SPAWNANGELAT reduce production block -> LBRACE block_contents RBRACE
-- On SPAWNANGEL reduce production block -> LBRACE block_contents RBRACE
-- On SPAWN reduce production block -> LBRACE block_contents RBRACE
-- On SLASHRXML reduce production block -> LBRACE block_contents RBRACE
-- On SLASHFLAGS reduce production block -> LBRACE block_contents RBRACE
-- On SLASH reduce production block -> LBRACE block_contents RBRACE
-- On SIG reduce production block -> LBRACE block_contents RBRACE
-- On SHALLOWHANDLER reduce production block -> LBRACE block_contents RBRACE
-- On SHALLOWHANDLE reduce production block -> LBRACE block_contents RBRACE
-- On SEMICOLON reduce production block -> LBRACE block_contents RBRACE
-- On SELECT reduce production block -> LBRACE block_contents RBRACE
-- On RXML reduce production block -> LBRACE block_contents RBRACE
-- On RQUOTE reduce production block -> LBRACE block_contents RBRACE
-- On RPAREN reduce production block -> LBRACE block_contents RBRACE
-- On RETURNING reduce production block -> LBRACE block_contents RBRACE
-- On RECEIVE reduce production block -> LBRACE block_contents RBRACE
-- On RBRACKET reduce production block -> LBRACE block_contents RBRACE
-- On RBRACE reduce production block -> LBRACE block_contents RBRACE
-- On RARROW reduce production block -> LBRACE block_contents RBRACE
-- On RANGE reduce production block -> LBRACE block_contents RBRACE
-- On RAISE reduce production block -> LBRACE block_contents RBRACE
-- On QUOTEDMETA reduce production block -> LBRACE block_contents RBRACE
-- On QUESTION reduce production block -> LBRACE block_contents RBRACE
-- On QUERY reduce production block -> LBRACE block_contents RBRACE
-- On PREFIXOP reduce production block -> LBRACE block_contents RBRACE
-- On PREFIX reduce production block -> LBRACE block_contents RBRACE
-- On POSTFIXOP reduce production block -> LBRACE block_contents RBRACE
-- On POSTFIX reduce production block -> LBRACE block_contents RBRACE
-- On PLUS reduce production block -> LBRACE block_contents RBRACE
-- On PAGE reduce production block -> LBRACE block_contents RBRACE
-- On OTHERWISE reduce production block -> LBRACE block_contents RBRACE
-- On OPEN reduce production block -> LBRACE block_contents RBRACE
-- On OP reduce production block -> LBRACE block_contents RBRACE
-- On ON reduce production block -> LBRACE block_contents RBRACE
-- On OFFER reduce production block -> LBRACE block_contents RBRACE
-- On MODULE reduce production block -> LBRACE block_contents RBRACE
-- On MINUSDOT reduce production block -> LBRACE block_contents RBRACE
-- On MINUS reduce production block -> LBRACE block_contents RBRACE
-- On LXML reduce production block -> LBRACE block_contents RBRACE
-- On LPAREN reduce production block -> LBRACE block_contents RBRACE
-- On LINFUN reduce production block -> LBRACE block_contents RBRACE
-- On LENSSELECT reduce production block -> LBRACE block_contents RBRACE
-- On LENSPUT reduce production block -> LBRACE block_contents RBRACE
-- On LENSJOIN reduce production block -> LBRACE block_contents RBRACE
-- On LENSGET reduce production block -> LBRACE block_contents RBRACE
-- On LENSDROP reduce production block -> LBRACE block_contents RBRACE
-- On LENS reduce production block -> LBRACE block_contents RBRACE
-- On LEFTTRIANGLE reduce production block -> LBRACE block_contents RBRACE
-- On LBRACKET reduce production block -> LBRACE block_contents RBRACE
-- On LBRACEBAR reduce production block -> LBRACE block_contents RBRACE
-- On LBRACE reduce production block -> LBRACE block_contents RBRACE
-- On INSERT reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR9 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR8 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR7 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR6 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR5 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR4 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR3 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR2 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR1 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR0 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL9 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL8 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL7 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL6 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL5 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL4 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL3 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL2 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL1 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL0 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL reduce production block -> LBRACE block_contents RBRACE
-- On INFIX9 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX8 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX7 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX6 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX5 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX4 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX3 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX2 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX1 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX0 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX reduce production block -> LBRACE block_contents RBRACE
-- On IF reduce production block -> LBRACE block_contents RBRACE
-- On HANDLER reduce production block -> LBRACE block_contents RBRACE
-- On HANDLE reduce production block -> LBRACE block_contents RBRACE
-- On FUN reduce production block -> LBRACE block_contents RBRACE
-- On FROM reduce production block -> LBRACE block_contents RBRACE
-- On FORMLET reduce production block -> LBRACE block_contents RBRACE
-- On FOR reduce production block -> LBRACE block_contents RBRACE
-- On FATRARROW reduce production block -> LBRACE block_contents RBRACE
-- On FALSE reduce production block -> LBRACE block_contents RBRACE
-- On ESCAPE reduce production block -> LBRACE block_contents RBRACE
-- On EQUALSTILDE reduce production block -> LBRACE block_contents RBRACE
-- On ENDTAG reduce production block -> LBRACE block_contents RBRACE
-- On END reduce production block -> LBRACE block_contents RBRACE
-- On ELSE reduce production block -> LBRACE block_contents RBRACE
-- On DOTDOT reduce production block -> LBRACE block_contents RBRACE
-- On DOT reduce production block -> LBRACE block_contents RBRACE
-- On DOOP reduce production block -> LBRACE block_contents RBRACE
-- On DOLLAR reduce production block -> LBRACE block_contents RBRACE
-- On DELETE_LEFT reduce production block -> LBRACE block_contents RBRACE
-- On DELETE reduce production block -> LBRACE block_contents RBRACE
-- On DEFAULT reduce production block -> LBRACE block_contents RBRACE
-- On DATABASE reduce production block -> LBRACE block_contents RBRACE
-- On CONSTRUCTOR reduce production block -> LBRACE block_contents RBRACE
-- On COMMA reduce production block -> LBRACE block_contents RBRACE
-- On COLONCOLON reduce production block -> LBRACE block_contents RBRACE
-- On COLON reduce production block -> LBRACE block_contents RBRACE
-- On CHAR reduce production block -> LBRACE block_contents RBRACE
-- On CDATA reduce production block -> LBRACE block_contents RBRACE
-- On CASE reduce production block -> LBRACE block_contents RBRACE
-- On CARET reduce production block -> LBRACE block_contents RBRACE
-- On BY reduce production block -> LBRACE block_contents RBRACE
-- On BARRBRACE reduce production block -> LBRACE block_contents RBRACE
-- On BARBAR reduce production block -> LBRACE block_contents RBRACE
-- On BANG reduce production block -> LBRACE block_contents RBRACE
-- On AS reduce production block -> LBRACE block_contents RBRACE
-- On AMPAMP reduce production block -> LBRACE block_contents RBRACE
-- On ALTERNATE reduce production block -> LBRACE block_contents RBRACE
-- On ALIEN reduce production block -> LBRACE block_contents RBRACE

State 978:
xml_tree -> LXML RXML ENDTAG . [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On YIELDS reduce production xml_tree -> LXML RXML ENDTAG
-- On WITH reduce production xml_tree -> LXML RXML ENDTAG
-- On VBAR reduce production xml_tree -> LXML RXML ENDTAG
-- On VALUES reduce production xml_tree -> LXML RXML ENDTAG
-- On TABLEKEYS reduce production xml_tree -> LXML RXML ENDTAG
-- On SEMICOLON reduce production xml_tree -> LXML RXML ENDTAG
-- On RPAREN reduce production xml_tree -> LXML RXML ENDTAG
-- On RETURNING reduce production xml_tree -> LXML RXML ENDTAG
-- On RBRACKET reduce production xml_tree -> LXML RXML ENDTAG
-- On RBRACE reduce production xml_tree -> LXML RXML ENDTAG
-- On RARROW reduce production xml_tree -> LXML RXML ENDTAG
-- On POSTFIXOP reduce production xml_tree -> LXML RXML ENDTAG
-- On OTHERWISE reduce production xml_tree -> LXML RXML ENDTAG
-- On ON reduce production xml_tree -> LXML RXML ENDTAG
-- On MINUSDOT reduce production xml_tree -> LXML RXML ENDTAG
-- On MINUS reduce production xml_tree -> LXML RXML ENDTAG
-- On LXML reduce production xml_tree -> LXML RXML ENDTAG
-- On LPAREN reduce production xml_tree -> LXML RXML ENDTAG
-- On LBRACEBAR reduce production xml_tree -> LXML RXML ENDTAG
-- On LBRACE reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR9 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR8 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR7 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR6 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR5 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR4 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR3 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR2 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR1 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR0 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL9 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL8 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL7 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL6 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL5 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL4 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL3 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL2 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL1 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL0 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX9 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX8 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX7 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX6 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX5 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX4 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX3 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX2 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX1 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX0 reduce production xml_tree -> LXML RXML ENDTAG
-- On FROM reduce production xml_tree -> LXML RXML ENDTAG
-- On FATRARROW reduce production xml_tree -> LXML RXML ENDTAG
-- On EQUALSTILDE reduce production xml_tree -> LXML RXML ENDTAG
-- On ENDTAG reduce production xml_tree -> LXML RXML ENDTAG
-- On END reduce production xml_tree -> LXML RXML ENDTAG
-- On ELSE reduce production xml_tree -> LXML RXML ENDTAG
-- On DOTDOT reduce production xml_tree -> LXML RXML ENDTAG
-- On DOT reduce production xml_tree -> LXML RXML ENDTAG
-- On DELETE_LEFT reduce production xml_tree -> LXML RXML ENDTAG
-- On DELETE reduce production xml_tree -> LXML RXML ENDTAG
-- On DEFAULT reduce production xml_tree -> LXML RXML ENDTAG
-- On COMMA reduce production xml_tree -> LXML RXML ENDTAG
-- On COLONCOLON reduce production xml_tree -> LXML RXML ENDTAG
-- On COLON reduce production xml_tree -> LXML RXML ENDTAG
-- On CDATA reduce production xml_tree -> LXML RXML ENDTAG
-- On CASE reduce production xml_tree -> LXML RXML ENDTAG
-- On BY reduce production xml_tree -> LXML RXML ENDTAG
-- On BARRBRACE reduce production xml_tree -> LXML RXML ENDTAG
-- On BARBAR reduce production xml_tree -> LXML RXML ENDTAG
-- On BANG reduce production xml_tree -> LXML RXML ENDTAG
-- On AS reduce production xml_tree -> LXML RXML ENDTAG
-- On AMPAMP reduce production xml_tree -> LXML RXML ENDTAG

State 979:
xml_contents -> CDATA . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production xml_contents -> CDATA
-- On LBRACEBAR reduce production xml_contents -> CDATA
-- On LBRACE reduce production xml_contents -> CDATA
-- On ENDTAG reduce production xml_contents -> CDATA
-- On CDATA reduce production xml_contents -> CDATA

State 980:
xml_contents -> xml_tree . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production xml_contents -> xml_tree
-- On LBRACEBAR reduce production xml_contents -> xml_tree
-- On LBRACE reduce production xml_contents -> xml_tree
-- On ENDTAG reduce production xml_contents -> xml_tree
-- On CDATA reduce production xml_contents -> xml_tree

State 981:
xml_tree -> LXML RXML xml_contents_list . ENDTAG [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On ENDTAG shift to state 982

State 982:
xml_tree -> LXML RXML xml_contents_list ENDTAG . [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On YIELDS reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On WITH reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On VBAR reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On VALUES reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On TABLEKEYS reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On SEMICOLON reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On RPAREN reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On RETURNING reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On RBRACKET reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On RBRACE reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On RARROW reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On POSTFIXOP reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On OTHERWISE reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On ON reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On MINUSDOT reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On MINUS reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On LXML reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On LPAREN reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On LBRACEBAR reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On LBRACE reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR9 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR8 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR7 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR6 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR5 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR4 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR3 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR2 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR1 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR0 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL9 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL8 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL7 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL6 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL5 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL4 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL3 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL2 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL1 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL0 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX9 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX8 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX7 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX6 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX5 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX4 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX3 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX2 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX1 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX0 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On FROM reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On FATRARROW reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On EQUALSTILDE reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On ENDTAG reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On END reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On ELSE reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On DOTDOT reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On DOT reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On DELETE_LEFT reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On DELETE reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On DEFAULT reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On COMMA reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On COLONCOLON reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On COLON reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On CDATA reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On CASE reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On BY reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On BARRBRACE reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On BARBAR reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On BANG reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On AS reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On AMPAMP reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG

State 983:
xml_contents_list -> xml_contents . [ ENDTAG ]
xml_contents_list -> xml_contents . xml_contents_list [ ENDTAG ]
-- On LXML shift to state 392
-- On LBRACEBAR shift to state 396
-- On LBRACE shift to state 965
-- On CDATA shift to state 979
-- On xml_tree shift to state 980
-- On xml_contents_list shift to state 984
-- On xml_contents shift to state 983
-- On page_placement shift to state 985
-- On formlet_placement shift to state 986
-- On formlet_binding shift to state 987
-- On block shift to state 988
-- On ENDTAG reduce production xml_contents_list -> xml_contents

State 984:
xml_contents_list -> xml_contents xml_contents_list . [ ENDTAG ]
-- On ENDTAG reduce production xml_contents_list -> xml_contents xml_contents_list

State 985:
xml_contents -> page_placement . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production xml_contents -> page_placement
-- On LBRACEBAR reduce production xml_contents -> page_placement
-- On LBRACE reduce production xml_contents -> page_placement
-- On ENDTAG reduce production xml_contents -> page_placement
-- On CDATA reduce production xml_contents -> page_placement

State 986:
xml_contents -> formlet_placement . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production xml_contents -> formlet_placement
-- On LBRACEBAR reduce production xml_contents -> formlet_placement
-- On LBRACE reduce production xml_contents -> formlet_placement
-- On ENDTAG reduce production xml_contents -> formlet_placement
-- On CDATA reduce production xml_contents -> formlet_placement

State 987:
xml_contents -> formlet_binding . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production xml_contents -> formlet_binding
-- On LBRACEBAR reduce production xml_contents -> formlet_binding
-- On LBRACE reduce production xml_contents -> formlet_binding
-- On ENDTAG reduce production xml_contents -> formlet_binding
-- On CDATA reduce production xml_contents -> formlet_binding

State 988:
xml_contents -> block . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production xml_contents -> block
-- On LBRACEBAR reduce production xml_contents -> block
-- On LBRACE reduce production xml_contents -> block
-- On ENDTAG reduce production xml_contents -> block
-- On CDATA reduce production xml_contents -> block

State 989:
attr -> xmlid . EQ LQUOTE attr_val RQUOTE [ VARIABLE SLASHRXML RXML LBRACE ]
attr -> xmlid . EQ LQUOTE RQUOTE [ VARIABLE SLASHRXML RXML LBRACE ]
-- On EQ shift to state 990

State 990:
attr -> xmlid EQ . LQUOTE attr_val RQUOTE [ VARIABLE SLASHRXML RXML LBRACE ]
attr -> xmlid EQ . LQUOTE RQUOTE [ VARIABLE SLASHRXML RXML LBRACE ]
-- On LQUOTE shift to state 991

State 991:
attr -> xmlid EQ LQUOTE . attr_val RQUOTE [ VARIABLE SLASHRXML RXML LBRACE ]
attr -> xmlid EQ LQUOTE . RQUOTE [ VARIABLE SLASHRXML RXML LBRACE ]
-- On STRING shift to state 992
-- On RQUOTE shift to state 996
-- On LBRACE shift to state 315
-- On block shift to state 993
-- On attr_val shift to state 997

State 992:
attr_val -> STRING . [ RQUOTE ]
attr_val -> STRING . attr_val [ RQUOTE ]
-- On STRING shift to state 992
-- On LBRACE shift to state 315
-- On block shift to state 993
-- On attr_val shift to state 995
-- On RQUOTE reduce production attr_val -> STRING

State 993:
attr_val -> block . [ RQUOTE ]
attr_val -> block . attr_val [ RQUOTE ]
-- On STRING shift to state 992
-- On LBRACE shift to state 315
-- On block shift to state 993
-- On attr_val shift to state 994
-- On RQUOTE reduce production attr_val -> block

State 994:
attr_val -> block attr_val . [ RQUOTE ]
-- On RQUOTE reduce production attr_val -> block attr_val

State 995:
attr_val -> STRING attr_val . [ RQUOTE ]
-- On RQUOTE reduce production attr_val -> STRING attr_val

State 996:
attr -> xmlid EQ LQUOTE RQUOTE . [ VARIABLE SLASHRXML RXML LBRACE ]
-- On VARIABLE reduce production attr -> xmlid EQ LQUOTE RQUOTE
-- On SLASHRXML reduce production attr -> xmlid EQ LQUOTE RQUOTE
-- On RXML reduce production attr -> xmlid EQ LQUOTE RQUOTE
-- On LBRACE reduce production attr -> xmlid EQ LQUOTE RQUOTE

State 997:
attr -> xmlid EQ LQUOTE attr_val . RQUOTE [ VARIABLE SLASHRXML RXML LBRACE ]
-- On RQUOTE shift to state 998

State 998:
attr -> xmlid EQ LQUOTE attr_val RQUOTE . [ VARIABLE SLASHRXML RXML LBRACE ]
-- On VARIABLE reduce production attr -> xmlid EQ LQUOTE attr_val RQUOTE
-- On SLASHRXML reduce production attr -> xmlid EQ LQUOTE attr_val RQUOTE
-- On RXML reduce production attr -> xmlid EQ LQUOTE attr_val RQUOTE
-- On LBRACE reduce production attr -> xmlid EQ LQUOTE attr_val RQUOTE

State 999:
attrs -> block . [ SLASHRXML RXML ]
-- On SLASHRXML reduce production attrs -> block
-- On RXML reduce production attrs -> block

State 1000:
xml_tree -> LXML attrs . RXML ENDTAG [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
xml_tree -> LXML attrs . SLASHRXML [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
xml_tree -> LXML attrs . RXML xml_contents_list ENDTAG [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On SLASHRXML shift to state 1001
-- On RXML shift to state 1002

State 1001:
xml_tree -> LXML attrs SLASHRXML . [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On YIELDS reduce production xml_tree -> LXML attrs SLASHRXML
-- On WITH reduce production xml_tree -> LXML attrs SLASHRXML
-- On VBAR reduce production xml_tree -> LXML attrs SLASHRXML
-- On VALUES reduce production xml_tree -> LXML attrs SLASHRXML
-- On TABLEKEYS reduce production xml_tree -> LXML attrs SLASHRXML
-- On SEMICOLON reduce production xml_tree -> LXML attrs SLASHRXML
-- On RPAREN reduce production xml_tree -> LXML attrs SLASHRXML
-- On RETURNING reduce production xml_tree -> LXML attrs SLASHRXML
-- On RBRACKET reduce production xml_tree -> LXML attrs SLASHRXML
-- On RBRACE reduce production xml_tree -> LXML attrs SLASHRXML
-- On RARROW reduce production xml_tree -> LXML attrs SLASHRXML
-- On POSTFIXOP reduce production xml_tree -> LXML attrs SLASHRXML
-- On OTHERWISE reduce production xml_tree -> LXML attrs SLASHRXML
-- On ON reduce production xml_tree -> LXML attrs SLASHRXML
-- On MINUSDOT reduce production xml_tree -> LXML attrs SLASHRXML
-- On MINUS reduce production xml_tree -> LXML attrs SLASHRXML
-- On LXML reduce production xml_tree -> LXML attrs SLASHRXML
-- On LPAREN reduce production xml_tree -> LXML attrs SLASHRXML
-- On LBRACEBAR reduce production xml_tree -> LXML attrs SLASHRXML
-- On LBRACE reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR9 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR8 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR7 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR6 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR5 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR4 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR3 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR2 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR1 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR0 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL9 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL8 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL7 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL6 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL5 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL4 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL3 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL2 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL1 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL0 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX9 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX8 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX7 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX6 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX5 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX4 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX3 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX2 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX1 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX0 reduce production xml_tree -> LXML attrs SLASHRXML
-- On FROM reduce production xml_tree -> LXML attrs SLASHRXML
-- On FATRARROW reduce production xml_tree -> LXML attrs SLASHRXML
-- On EQUALSTILDE reduce production xml_tree -> LXML attrs SLASHRXML
-- On ENDTAG reduce production xml_tree -> LXML attrs SLASHRXML
-- On END reduce production xml_tree -> LXML attrs SLASHRXML
-- On ELSE reduce production xml_tree -> LXML attrs SLASHRXML
-- On DOTDOT reduce production xml_tree -> LXML attrs SLASHRXML
-- On DOT reduce production xml_tree -> LXML attrs SLASHRXML
-- On DELETE_LEFT reduce production xml_tree -> LXML attrs SLASHRXML
-- On DELETE reduce production xml_tree -> LXML attrs SLASHRXML
-- On DEFAULT reduce production xml_tree -> LXML attrs SLASHRXML
-- On COMMA reduce production xml_tree -> LXML attrs SLASHRXML
-- On COLONCOLON reduce production xml_tree -> LXML attrs SLASHRXML
-- On COLON reduce production xml_tree -> LXML attrs SLASHRXML
-- On CDATA reduce production xml_tree -> LXML attrs SLASHRXML
-- On CASE reduce production xml_tree -> LXML attrs SLASHRXML
-- On BY reduce production xml_tree -> LXML attrs SLASHRXML
-- On BARRBRACE reduce production xml_tree -> LXML attrs SLASHRXML
-- On BARBAR reduce production xml_tree -> LXML attrs SLASHRXML
-- On BANG reduce production xml_tree -> LXML attrs SLASHRXML
-- On AS reduce production xml_tree -> LXML attrs SLASHRXML
-- On AMPAMP reduce production xml_tree -> LXML attrs SLASHRXML

State 1002:
xml_tree -> LXML attrs RXML . ENDTAG [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
xml_tree -> LXML attrs RXML . xml_contents_list ENDTAG [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LXML shift to state 392
-- On LBRACEBAR shift to state 396
-- On LBRACE shift to state 965
-- On ENDTAG shift to state 1003
-- On CDATA shift to state 979
-- On xml_tree shift to state 980
-- On xml_contents_list shift to state 1004
-- On xml_contents shift to state 983
-- On page_placement shift to state 985
-- On formlet_placement shift to state 986
-- On formlet_binding shift to state 987
-- On block shift to state 988

State 1003:
xml_tree -> LXML attrs RXML ENDTAG . [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On YIELDS reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On WITH reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On VBAR reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On VALUES reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On TABLEKEYS reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On SEMICOLON reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On RPAREN reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On RETURNING reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On RBRACKET reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On RBRACE reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On RARROW reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On POSTFIXOP reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On OTHERWISE reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On ON reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On MINUSDOT reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On MINUS reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On LXML reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On LPAREN reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On LBRACEBAR reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On LBRACE reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR9 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR8 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR7 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR6 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR5 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR4 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR3 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR2 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR1 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR0 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL9 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL8 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL7 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL6 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL5 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL4 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL3 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL2 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL1 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL0 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX9 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX8 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX7 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX6 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX5 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX4 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX3 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX2 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX1 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX0 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On FROM reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On FATRARROW reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On EQUALSTILDE reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On ENDTAG reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On END reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On ELSE reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On DOTDOT reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On DOT reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On DELETE_LEFT reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On DELETE reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On DEFAULT reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On COMMA reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On COLONCOLON reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On COLON reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On CDATA reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On CASE reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On BY reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On BARRBRACE reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On BARBAR reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On BANG reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On AS reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On AMPAMP reduce production xml_tree -> LXML attrs RXML ENDTAG

State 1004:
xml_tree -> LXML attrs RXML xml_contents_list . ENDTAG [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On ENDTAG shift to state 1005

State 1005:
xml_tree -> LXML attrs RXML xml_contents_list ENDTAG . [ YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On YIELDS reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On WITH reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On VBAR reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On VALUES reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On TABLEKEYS reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On SEMICOLON reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On RPAREN reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On RETURNING reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On RBRACKET reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On RBRACE reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On RARROW reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On POSTFIXOP reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On OTHERWISE reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On ON reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On MINUSDOT reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On MINUS reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On LXML reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On LPAREN reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On LBRACEBAR reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On LBRACE reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR9 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR8 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR7 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR6 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR5 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR4 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR3 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR2 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR1 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR0 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL9 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL8 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL7 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL6 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL5 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL4 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL3 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL2 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL1 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL0 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX9 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX8 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX7 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX6 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX5 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX4 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX3 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX2 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX1 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX0 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On FROM reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On FATRARROW reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On EQUALSTILDE reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On ENDTAG reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On END reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On ELSE reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On DOTDOT reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On DOT reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On DELETE_LEFT reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On DELETE reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On DEFAULT reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On COMMA reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On COLONCOLON reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On COLON reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On CDATA reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On CASE reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On BY reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On BARRBRACE reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On BARBAR reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On BANG reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On AS reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On AMPAMP reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG

State 1006:
attr_list -> attr_list . attr [ VARIABLE SLASHRXML RXML LBRACE ]
attrs -> attr_list . [ SLASHRXML RXML ]
attrs -> attr_list . block [ SLASHRXML RXML ]
-- On VARIABLE shift to state 393
-- On LBRACE shift to state 315
-- On xmlid shift to state 989
-- On block shift to state 1007
-- On attr shift to state 1008
-- On SLASHRXML reduce production attrs -> attr_list
-- On RXML reduce production attrs -> attr_list

State 1007:
attrs -> attr_list block . [ SLASHRXML RXML ]
-- On SLASHRXML reduce production attrs -> attr_list block
-- On RXML reduce production attrs -> attr_list block

State 1008:
attr_list -> attr_list attr . [ VARIABLE SLASHRXML RXML LBRACE ]
-- On VARIABLE reduce production attr_list -> attr_list attr
-- On SLASHRXML reduce production attr_list -> attr_list attr
-- On RXML reduce production attr_list -> attr_list attr
-- On LBRACE reduce production attr_list -> attr_list attr

State 1009:
attr_list -> attr . [ VARIABLE SLASHRXML RXML LBRACE ]
-- On VARIABLE reduce production attr_list -> attr
-- On SLASHRXML reduce production attr_list -> attr
-- On RXML reduce production attr_list -> attr
-- On LBRACE reduce production attr_list -> attr

State 1010:
unary_expression -> PREFIXOP unary_expression . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production unary_expression -> PREFIXOP unary_expression
-- On VBAR reduce production unary_expression -> PREFIXOP unary_expression
-- On VALUES reduce production unary_expression -> PREFIXOP unary_expression
-- On TABLEKEYS reduce production unary_expression -> PREFIXOP unary_expression
-- On SEMICOLON reduce production unary_expression -> PREFIXOP unary_expression
-- On RPAREN reduce production unary_expression -> PREFIXOP unary_expression
-- On RETURNING reduce production unary_expression -> PREFIXOP unary_expression
-- On RBRACKET reduce production unary_expression -> PREFIXOP unary_expression
-- On RBRACE reduce production unary_expression -> PREFIXOP unary_expression
-- On RARROW reduce production unary_expression -> PREFIXOP unary_expression
-- On OTHERWISE reduce production unary_expression -> PREFIXOP unary_expression
-- On ON reduce production unary_expression -> PREFIXOP unary_expression
-- On MINUSDOT reduce production unary_expression -> PREFIXOP unary_expression
-- On MINUS reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR9 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR8 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR7 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR6 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR5 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR4 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR3 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR2 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR1 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR0 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL9 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL8 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL7 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL6 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL5 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL4 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL3 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL2 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL1 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL0 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX9 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX8 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX7 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX6 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX5 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX4 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX3 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX2 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX1 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX0 reduce production unary_expression -> PREFIXOP unary_expression
-- On FROM reduce production unary_expression -> PREFIXOP unary_expression
-- On FATRARROW reduce production unary_expression -> PREFIXOP unary_expression
-- On EQUALSTILDE reduce production unary_expression -> PREFIXOP unary_expression
-- On END reduce production unary_expression -> PREFIXOP unary_expression
-- On ELSE reduce production unary_expression -> PREFIXOP unary_expression
-- On DOTDOT reduce production unary_expression -> PREFIXOP unary_expression
-- On DELETE_LEFT reduce production unary_expression -> PREFIXOP unary_expression
-- On DELETE reduce production unary_expression -> PREFIXOP unary_expression
-- On DEFAULT reduce production unary_expression -> PREFIXOP unary_expression
-- On COMMA reduce production unary_expression -> PREFIXOP unary_expression
-- On COLONCOLON reduce production unary_expression -> PREFIXOP unary_expression
-- On COLON reduce production unary_expression -> PREFIXOP unary_expression
-- On CASE reduce production unary_expression -> PREFIXOP unary_expression
-- On BY reduce production unary_expression -> PREFIXOP unary_expression
-- On BARRBRACE reduce production unary_expression -> PREFIXOP unary_expression
-- On BARBAR reduce production unary_expression -> PREFIXOP unary_expression
-- On BANG reduce production unary_expression -> PREFIXOP unary_expression
-- On AS reduce production unary_expression -> PREFIXOP unary_expression
-- On AMPAMP reduce production unary_expression -> PREFIXOP unary_expression

State 1011:
postfix_expression -> QUERY LBRACKET exp . RBRACKET block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
postfix_expression -> QUERY LBRACKET exp . COMMA exp RBRACKET block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On RBRACKET shift to state 1012
-- On COMMA shift to state 1014

State 1012:
postfix_expression -> QUERY LBRACKET exp RBRACKET . block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LBRACE shift to state 315
-- On block shift to state 1013

State 1013:
postfix_expression -> QUERY LBRACKET exp RBRACKET block . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On VBAR reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On VALUES reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On TABLEKEYS reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On SEMICOLON reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On RPAREN reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On RETURNING reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On RBRACKET reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On RBRACE reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On RARROW reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On OTHERWISE reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On ON reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On MINUSDOT reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On MINUS reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On LPAREN reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR9 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR8 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR7 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR6 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR5 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR4 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR3 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR2 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR1 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR0 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL9 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL8 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL7 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL6 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL5 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL4 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL3 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL2 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL1 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL0 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX9 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX8 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX7 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX6 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX5 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX4 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX3 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX2 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX1 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX0 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On FROM reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On FATRARROW reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On EQUALSTILDE reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On END reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On ELSE reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On DOTDOT reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On DOT reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On DELETE_LEFT reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On DELETE reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On DEFAULT reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On COMMA reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On COLONCOLON reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On COLON reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On CASE reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On BY reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On BARRBRACE reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On BARBAR reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On BANG reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On AS reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On AMPAMP reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block

State 1014:
postfix_expression -> QUERY LBRACKET exp COMMA . exp RBRACKET block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 1015
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 1015:
postfix_expression -> QUERY LBRACKET exp COMMA exp . RBRACKET block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On RBRACKET shift to state 1016

State 1016:
postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET . block [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LBRACE shift to state 315
-- On block shift to state 1017

State 1017:
postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On VBAR reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On VALUES reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On TABLEKEYS reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On SEMICOLON reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On RPAREN reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On RETURNING reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On RBRACKET reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On RBRACE reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On RARROW reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On OTHERWISE reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On ON reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On MINUSDOT reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On MINUS reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On LPAREN reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR9 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR8 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR7 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR6 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR5 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR4 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR3 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR2 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR1 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR0 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL9 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL8 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL7 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL6 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL5 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL4 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL3 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL2 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL1 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL0 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX9 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX8 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX7 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX6 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX5 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX4 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX3 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX2 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX1 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX0 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On FROM reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On FATRARROW reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On EQUALSTILDE reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On END reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On ELSE reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On DOTDOT reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On DOT reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On DELETE_LEFT reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On DELETE reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On DEFAULT reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On COMMA reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On COLONCOLON reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On COLON reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On CASE reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On BY reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On BARRBRACE reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On BARBAR reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On BANG reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On AS reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On AMPAMP reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block

State 1018:
postfix_expression -> QUERY block . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production postfix_expression -> QUERY block
-- On VBAR reduce production postfix_expression -> QUERY block
-- On VALUES reduce production postfix_expression -> QUERY block
-- On TABLEKEYS reduce production postfix_expression -> QUERY block
-- On SEMICOLON reduce production postfix_expression -> QUERY block
-- On RPAREN reduce production postfix_expression -> QUERY block
-- On RETURNING reduce production postfix_expression -> QUERY block
-- On RBRACKET reduce production postfix_expression -> QUERY block
-- On RBRACE reduce production postfix_expression -> QUERY block
-- On RARROW reduce production postfix_expression -> QUERY block
-- On OTHERWISE reduce production postfix_expression -> QUERY block
-- On ON reduce production postfix_expression -> QUERY block
-- On MINUSDOT reduce production postfix_expression -> QUERY block
-- On MINUS reduce production postfix_expression -> QUERY block
-- On LPAREN reduce production postfix_expression -> QUERY block
-- On INFIXR9 reduce production postfix_expression -> QUERY block
-- On INFIXR8 reduce production postfix_expression -> QUERY block
-- On INFIXR7 reduce production postfix_expression -> QUERY block
-- On INFIXR6 reduce production postfix_expression -> QUERY block
-- On INFIXR5 reduce production postfix_expression -> QUERY block
-- On INFIXR4 reduce production postfix_expression -> QUERY block
-- On INFIXR3 reduce production postfix_expression -> QUERY block
-- On INFIXR2 reduce production postfix_expression -> QUERY block
-- On INFIXR1 reduce production postfix_expression -> QUERY block
-- On INFIXR0 reduce production postfix_expression -> QUERY block
-- On INFIXL9 reduce production postfix_expression -> QUERY block
-- On INFIXL8 reduce production postfix_expression -> QUERY block
-- On INFIXL7 reduce production postfix_expression -> QUERY block
-- On INFIXL6 reduce production postfix_expression -> QUERY block
-- On INFIXL5 reduce production postfix_expression -> QUERY block
-- On INFIXL4 reduce production postfix_expression -> QUERY block
-- On INFIXL3 reduce production postfix_expression -> QUERY block
-- On INFIXL2 reduce production postfix_expression -> QUERY block
-- On INFIXL1 reduce production postfix_expression -> QUERY block
-- On INFIXL0 reduce production postfix_expression -> QUERY block
-- On INFIX9 reduce production postfix_expression -> QUERY block
-- On INFIX8 reduce production postfix_expression -> QUERY block
-- On INFIX7 reduce production postfix_expression -> QUERY block
-- On INFIX6 reduce production postfix_expression -> QUERY block
-- On INFIX5 reduce production postfix_expression -> QUERY block
-- On INFIX4 reduce production postfix_expression -> QUERY block
-- On INFIX3 reduce production postfix_expression -> QUERY block
-- On INFIX2 reduce production postfix_expression -> QUERY block
-- On INFIX1 reduce production postfix_expression -> QUERY block
-- On INFIX0 reduce production postfix_expression -> QUERY block
-- On FROM reduce production postfix_expression -> QUERY block
-- On FATRARROW reduce production postfix_expression -> QUERY block
-- On EQUALSTILDE reduce production postfix_expression -> QUERY block
-- On END reduce production postfix_expression -> QUERY block
-- On ELSE reduce production postfix_expression -> QUERY block
-- On DOTDOT reduce production postfix_expression -> QUERY block
-- On DOT reduce production postfix_expression -> QUERY block
-- On DELETE_LEFT reduce production postfix_expression -> QUERY block
-- On DELETE reduce production postfix_expression -> QUERY block
-- On DEFAULT reduce production postfix_expression -> QUERY block
-- On COMMA reduce production postfix_expression -> QUERY block
-- On COLONCOLON reduce production postfix_expression -> QUERY block
-- On COLON reduce production postfix_expression -> QUERY block
-- On CASE reduce production postfix_expression -> QUERY block
-- On BY reduce production postfix_expression -> QUERY block
-- On BARRBRACE reduce production postfix_expression -> QUERY block
-- On BARBAR reduce production postfix_expression -> QUERY block
-- On BANG reduce production postfix_expression -> QUERY block
-- On AS reduce production postfix_expression -> QUERY block
-- On AMPAMP reduce production postfix_expression -> QUERY block

State 1019:
case -> CASE pattern RARROW block_contents . [ RBRACE CASE ]
-- On RBRACE reduce production case -> CASE pattern RARROW block_contents
-- On CASE reduce production case -> CASE pattern RARROW block_contents

State 1020:
case_expression -> RECEIVE LBRACE perhaps_cases . RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RBRACE shift to state 1021

State 1021:
case_expression -> RECEIVE LBRACE perhaps_cases RBRACE . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On VBAR reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On VALUES reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On TABLEKEYS reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On SEMICOLON reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On RPAREN reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On RBRACKET reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On RBRACE reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On OTHERWISE reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On ON reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On FROM reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On END reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On ELSE reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On DOTDOT reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On DELETE_LEFT reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On DELETE reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On DEFAULT reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On COMMA reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On CASE reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On BY reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On BARRBRACE reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On AS reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE

State 1022:
session_expression -> SELECT field_label exp . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production session_expression -> SELECT field_label exp
-- On VBAR reduce production session_expression -> SELECT field_label exp
-- On VALUES reduce production session_expression -> SELECT field_label exp
-- On TABLEKEYS reduce production session_expression -> SELECT field_label exp
-- On SEMICOLON reduce production session_expression -> SELECT field_label exp
-- On RPAREN reduce production session_expression -> SELECT field_label exp
-- On RBRACKET reduce production session_expression -> SELECT field_label exp
-- On RBRACE reduce production session_expression -> SELECT field_label exp
-- On OTHERWISE reduce production session_expression -> SELECT field_label exp
-- On ON reduce production session_expression -> SELECT field_label exp
-- On FROM reduce production session_expression -> SELECT field_label exp
-- On END reduce production session_expression -> SELECT field_label exp
-- On ELSE reduce production session_expression -> SELECT field_label exp
-- On DOTDOT reduce production session_expression -> SELECT field_label exp
-- On DELETE_LEFT reduce production session_expression -> SELECT field_label exp
-- On DELETE reduce production session_expression -> SELECT field_label exp
-- On DEFAULT reduce production session_expression -> SELECT field_label exp
-- On COMMA reduce production session_expression -> SELECT field_label exp
-- On CASE reduce production session_expression -> SELECT field_label exp
-- On BY reduce production session_expression -> SELECT field_label exp
-- On BARRBRACE reduce production session_expression -> SELECT field_label exp
-- On AS reduce production session_expression -> SELECT field_label exp

State 1023:
case_expression -> SHALLOWHANDLE LPAREN exp . RPAREN LBRACE cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RPAREN shift to state 1024

State 1024:
case_expression -> SHALLOWHANDLE LPAREN exp RPAREN . LBRACE cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LBRACE shift to state 1025

State 1025:
case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE . cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On CASE shift to state 336
-- On cases shift to state 1026
-- On case shift to state 503

State 1026:
case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases . RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RBRACE shift to state 1027

State 1027:
case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On VBAR reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On VALUES reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On TABLEKEYS reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On SEMICOLON reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On RPAREN reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On RBRACKET reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On RBRACE reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On OTHERWISE reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On ON reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On FROM reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On END reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On ELSE reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On DOTDOT reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On DELETE_LEFT reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On DELETE reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On DEFAULT reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On COMMA reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On CASE reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On BY reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On BARRBRACE reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE
-- On AS reduce production case_expression -> SHALLOWHANDLE LPAREN exp RPAREN LBRACE cases RBRACE

State 1028:
spawn_expression -> SPAWNANGELAT LPAREN exp . COMMA block RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On COMMA shift to state 1029

State 1029:
spawn_expression -> SPAWNANGELAT LPAREN exp COMMA . block RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LBRACE shift to state 315
-- On block shift to state 1030

State 1030:
spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block . RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On RPAREN shift to state 1031

State 1031:
spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On VBAR reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On VALUES reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On TABLEKEYS reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On SEMICOLON reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On RPAREN reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On RETURNING reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On RBRACKET reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On RBRACE reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On RARROW reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On OTHERWISE reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On ON reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On MINUSDOT reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On MINUS reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On LPAREN reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXR9 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXR8 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXR7 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXR6 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXR5 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXR4 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXR3 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXR2 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXR1 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXR0 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXL9 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXL8 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXL7 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXL6 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXL5 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXL4 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXL3 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXL2 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXL1 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIXL0 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIX9 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIX8 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIX7 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIX6 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIX5 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIX4 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIX3 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIX2 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIX1 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On INFIX0 reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On FROM reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On FATRARROW reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On EQUALSTILDE reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On END reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On ELSE reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On DOTDOT reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On DOT reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On DELETE_LEFT reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On DELETE reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On DEFAULT reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On COMMA reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On COLONCOLON reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On COLON reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On CASE reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On BY reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On BARRBRACE reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On BARBAR reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On BANG reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On AS reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN
-- On AMPAMP reduce production spawn_expression -> SPAWNANGELAT LPAREN exp COMMA block RPAREN

State 1032:
spawn_expression -> SPAWNAT LPAREN exp . COMMA block RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On COMMA shift to state 1033

State 1033:
spawn_expression -> SPAWNAT LPAREN exp COMMA . block RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On LBRACE shift to state 315
-- On block shift to state 1034

State 1034:
spawn_expression -> SPAWNAT LPAREN exp COMMA block . RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On RPAREN shift to state 1035

State 1035:
spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On VBAR reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On VALUES reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On TABLEKEYS reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On SEMICOLON reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On RPAREN reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On RETURNING reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On RBRACKET reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On RBRACE reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On RARROW reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On OTHERWISE reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On ON reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On MINUSDOT reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On MINUS reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On LPAREN reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXR9 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXR8 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXR7 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXR6 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXR5 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXR4 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXR3 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXR2 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXR1 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXR0 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXL9 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXL8 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXL7 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXL6 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXL5 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXL4 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXL3 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXL2 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXL1 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIXL0 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIX9 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIX8 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIX7 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIX6 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIX5 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIX4 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIX3 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIX2 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIX1 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On INFIX0 reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On FROM reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On FATRARROW reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On EQUALSTILDE reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On END reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On ELSE reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On DOTDOT reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On DOT reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On DELETE_LEFT reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On DELETE reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On DEFAULT reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On COMMA reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On COLONCOLON reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On COLON reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On CASE reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On BY reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On BARRBRACE reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On BARBAR reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On BANG reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On AS reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN
-- On AMPAMP reduce production spawn_expression -> SPAWNAT LPAREN exp COMMA block RPAREN

State 1036:
binding -> VAR pattern EQ exp . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SEMICOLON shift to state 1037

State 1037:
binding -> VAR pattern EQ exp SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On VAR reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On UPDATE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On UINTEGER reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On UFLOAT reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On TYPENAME reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On TRY reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On TRUE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On TABLE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On SWITCH reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On STRING reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On SPAWNWAIT reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On SPAWNCLIENT reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On SPAWNAT reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On SPAWNANGELAT reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On SPAWNANGEL reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On SPAWN reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On SIG reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On SHALLOWHANDLER reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On SHALLOWHANDLE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On SELECT reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On RECEIVE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On RAISE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On QUERY reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On PREFIXOP reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On PAGE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On OPEN reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On OFFER reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On MODULE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On MINUSDOT reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On MINUS reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On LXML reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On LPAREN reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On LINFUN reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On LENSSELECT reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On LENSPUT reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On LENSJOIN reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On LENSGET reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On LENSDROP reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On LENS reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On LEFTTRIANGLE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On LBRACKET reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On LBRACE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On INSERT reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On IF reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On HANDLER reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On HANDLE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On FUN reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On FORMLET reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On FOR reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On FALSE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On ESCAPE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On DOOP reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On DELETE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On DATABASE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On CONSTRUCTOR reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On CHAR reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On ALIEN reduce production binding -> VAR pattern EQ exp SEMICOLON

State 1038:
spawn_expression -> SPAWNWAIT block . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP ]
-- On WITH reduce production spawn_expression -> SPAWNWAIT block
-- On VBAR reduce production spawn_expression -> SPAWNWAIT block
-- On VALUES reduce production spawn_expression -> SPAWNWAIT block
-- On TABLEKEYS reduce production spawn_expression -> SPAWNWAIT block
-- On SEMICOLON reduce production spawn_expression -> SPAWNWAIT block
-- On RPAREN reduce production spawn_expression -> SPAWNWAIT block
-- On RETURNING reduce production spawn_expression -> SPAWNWAIT block
-- On RBRACKET reduce production spawn_expression -> SPAWNWAIT block
-- On RBRACE reduce production spawn_expression -> SPAWNWAIT block
-- On RARROW reduce production spawn_expression -> SPAWNWAIT block
-- On OTHERWISE reduce production spawn_expression -> SPAWNWAIT block
-- On ON reduce production spawn_expression -> SPAWNWAIT block
-- On MINUSDOT reduce production spawn_expression -> SPAWNWAIT block
-- On MINUS reduce production spawn_expression -> SPAWNWAIT block
-- On LPAREN reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXR9 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXR8 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXR7 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXR6 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXR5 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXR4 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXR3 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXR2 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXR1 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXR0 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXL9 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXL8 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXL7 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXL6 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXL5 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXL4 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXL3 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXL2 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXL1 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIXL0 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIX9 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIX8 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIX7 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIX6 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIX5 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIX4 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIX3 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIX2 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIX1 reduce production spawn_expression -> SPAWNWAIT block
-- On INFIX0 reduce production spawn_expression -> SPAWNWAIT block
-- On FROM reduce production spawn_expression -> SPAWNWAIT block
-- On FATRARROW reduce production spawn_expression -> SPAWNWAIT block
-- On EQUALSTILDE reduce production spawn_expression -> SPAWNWAIT block
-- On END reduce production spawn_expression -> SPAWNWAIT block
-- On ELSE reduce production spawn_expression -> SPAWNWAIT block
-- On DOTDOT reduce production spawn_expression -> SPAWNWAIT block
-- On DOT reduce production spawn_expression -> SPAWNWAIT block
-- On DELETE_LEFT reduce production spawn_expression -> SPAWNWAIT block
-- On DELETE reduce production spawn_expression -> SPAWNWAIT block
-- On DEFAULT reduce production spawn_expression -> SPAWNWAIT block
-- On COMMA reduce production spawn_expression -> SPAWNWAIT block
-- On COLONCOLON reduce production spawn_expression -> SPAWNWAIT block
-- On COLON reduce production spawn_expression -> SPAWNWAIT block
-- On CASE reduce production spawn_expression -> SPAWNWAIT block
-- On BY reduce production spawn_expression -> SPAWNWAIT block
-- On BARRBRACE reduce production spawn_expression -> SPAWNWAIT block
-- On BARBAR reduce production spawn_expression -> SPAWNWAIT block
-- On BANG reduce production spawn_expression -> SPAWNWAIT block
-- On AS reduce production spawn_expression -> SPAWNWAIT block
-- On AMPAMP reduce production spawn_expression -> SPAWNWAIT block

State 1039:
case_expression -> SWITCH LPAREN exp . RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RPAREN shift to state 1040

State 1040:
case_expression -> SWITCH LPAREN exp RPAREN . LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LBRACE shift to state 1041

State 1041:
case_expression -> SWITCH LPAREN exp RPAREN LBRACE . perhaps_cases RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On CASE shift to state 336
-- On perhaps_cases shift to state 1042
-- On cases shift to state 782
-- On case shift to state 503
-- On RBRACE reduce production perhaps_cases ->

State 1042:
case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases . RBRACE [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RBRACE shift to state 1043

State 1043:
case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On VBAR reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On VALUES reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On TABLEKEYS reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On SEMICOLON reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On RPAREN reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On RBRACKET reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On RBRACE reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On OTHERWISE reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On ON reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On FROM reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On END reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On ELSE reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On DOTDOT reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On DELETE_LEFT reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On DELETE reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On DEFAULT reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On COMMA reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On CASE reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On BY reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On BARRBRACE reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On AS reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE

State 1044:
table_expression -> TABLE exp . WITH datatype perhaps_table_constraints FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
table_expression -> TABLE exp . WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH shift to state 1045

State 1045:
table_expression -> TABLE exp WITH . datatype perhaps_table_constraints FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
table_expression -> TABLE exp WITH . datatype perhaps_table_constraints TABLEKEYS exp FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 1046

State 1046:
table_expression -> TABLE exp WITH datatype . perhaps_table_constraints FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
table_expression -> TABLE exp WITH datatype . perhaps_table_constraints TABLEKEYS exp FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WHERE shift to state 1047
-- On perhaps_table_constraints shift to state 1057
-- On TABLEKEYS reduce production perhaps_table_constraints ->
-- On FROM reduce production perhaps_table_constraints ->

State 1047:
perhaps_table_constraints -> WHERE . table_constraints [ TABLEKEYS FROM ]
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On CONSTRUCTOR shift to state 91
-- On table_constraints shift to state 1048
-- On record_label shift to state 1049
-- On field_label shift to state 254

State 1048:
perhaps_table_constraints -> WHERE table_constraints . [ TABLEKEYS FROM ]
-- On TABLEKEYS reduce production perhaps_table_constraints -> WHERE table_constraints
-- On FROM reduce production perhaps_table_constraints -> WHERE table_constraints

State 1049:
table_constraints -> record_label . field_constraints [ TABLEKEYS FROM ]
table_constraints -> record_label . field_constraints COMMA table_constraints [ TABLEKEYS FROM ]
-- On READONLY shift to state 1050
-- On DEFAULT shift to state 1051
-- On field_constraints shift to state 1052
-- On field_constraint shift to state 1055

State 1050:
field_constraint -> READONLY . [ TABLEKEYS READONLY FROM DEFAULT COMMA ]
-- On TABLEKEYS reduce production field_constraint -> READONLY
-- On READONLY reduce production field_constraint -> READONLY
-- On FROM reduce production field_constraint -> READONLY
-- On DEFAULT reduce production field_constraint -> READONLY
-- On COMMA reduce production field_constraint -> READONLY

State 1051:
field_constraint -> DEFAULT . [ TABLEKEYS READONLY FROM DEFAULT COMMA ]
-- On TABLEKEYS reduce production field_constraint -> DEFAULT
-- On READONLY reduce production field_constraint -> DEFAULT
-- On FROM reduce production field_constraint -> DEFAULT
-- On DEFAULT reduce production field_constraint -> DEFAULT
-- On COMMA reduce production field_constraint -> DEFAULT

State 1052:
table_constraints -> record_label field_constraints . [ TABLEKEYS FROM ]
table_constraints -> record_label field_constraints . COMMA table_constraints [ TABLEKEYS FROM ]
-- On COMMA shift to state 1053
-- On TABLEKEYS reduce production table_constraints -> record_label field_constraints
-- On FROM reduce production table_constraints -> record_label field_constraints

State 1053:
table_constraints -> record_label field_constraints COMMA . table_constraints [ TABLEKEYS FROM ]
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On CONSTRUCTOR shift to state 91
-- On table_constraints shift to state 1054
-- On record_label shift to state 1049
-- On field_label shift to state 254

State 1054:
table_constraints -> record_label field_constraints COMMA table_constraints . [ TABLEKEYS FROM ]
-- On TABLEKEYS reduce production table_constraints -> record_label field_constraints COMMA table_constraints
-- On FROM reduce production table_constraints -> record_label field_constraints COMMA table_constraints

State 1055:
field_constraints -> field_constraint . [ TABLEKEYS FROM COMMA ]
field_constraints -> field_constraint . field_constraints [ TABLEKEYS FROM COMMA ]
-- On READONLY shift to state 1050
-- On DEFAULT shift to state 1051
-- On field_constraints shift to state 1056
-- On field_constraint shift to state 1055
-- On TABLEKEYS reduce production field_constraints -> field_constraint
-- On FROM reduce production field_constraints -> field_constraint
-- On COMMA reduce production field_constraints -> field_constraint

State 1056:
field_constraints -> field_constraint field_constraints . [ TABLEKEYS FROM COMMA ]
-- On TABLEKEYS reduce production field_constraints -> field_constraint field_constraints
-- On FROM reduce production field_constraints -> field_constraint field_constraints
-- On COMMA reduce production field_constraints -> field_constraint field_constraints

State 1057:
table_expression -> TABLE exp WITH datatype perhaps_table_constraints . FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
table_expression -> TABLE exp WITH datatype perhaps_table_constraints . TABLEKEYS exp FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On TABLEKEYS shift to state 1058
-- On FROM shift to state 1062

State 1058:
table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS . exp FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 1059
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 1059:
table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp . FROM exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On FROM shift to state 1060

State 1060:
table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM . exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 1061
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 1061:
table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On VBAR reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On VALUES reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On TABLEKEYS reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On SEMICOLON reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On RPAREN reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On RBRACKET reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On RBRACE reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On OTHERWISE reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On ON reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On FROM reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On END reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On ELSE reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On DOTDOT reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On DELETE_LEFT reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On DELETE reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On DEFAULT reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On COMMA reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On CASE reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On BY reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On BARRBRACE reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp
-- On AS reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints TABLEKEYS exp FROM exp

State 1062:
table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM . exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 1063
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 1063:
table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On VBAR reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On VALUES reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On TABLEKEYS reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On SEMICOLON reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On RPAREN reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On RBRACKET reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On RBRACE reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On OTHERWISE reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On ON reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On FROM reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On END reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On ELSE reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On DOTDOT reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On DELETE_LEFT reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On DELETE reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On DEFAULT reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On COMMA reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On CASE reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On BY reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On BARRBRACE reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On AS reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp

State 1064:
case_expression -> TRY exp . AS pattern IN exp OTHERWISE exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On AS shift to state 1065

State 1065:
case_expression -> TRY exp AS . pattern IN exp OTHERWISE exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 13
-- On UNDERSCORE shift to state 14
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRUE shift to state 17
-- On STRING shift to state 18
-- On MINUS shift to state 19
-- On LPAREN shift to state 27
-- On LBRACKET shift to state 32
-- On FALSE shift to state 34
-- On CONSTRUCTOR shift to state 35
-- On CHAR shift to state 37
-- On typed_pattern shift to state 38
-- On primary_pattern shift to state 275
-- On pattern shift to state 1066
-- On parenthesized_pattern shift to state 281
-- On negative_pattern shift to state 282
-- On constructor_pattern shift to state 283
-- On constant shift to state 285
-- On cons_pattern shift to state 287

State 1066:
case_expression -> TRY exp AS pattern . IN exp OTHERWISE exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On IN shift to state 1067

State 1067:
case_expression -> TRY exp AS pattern IN . exp OTHERWISE exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 1068
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 1068:
case_expression -> TRY exp AS pattern IN exp . OTHERWISE exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On OTHERWISE shift to state 1069

State 1069:
case_expression -> TRY exp AS pattern IN exp OTHERWISE . exp [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 2
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PAGE shift to state 397
-- On OFFER shift to state 400
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 406
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 547
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typed_expression shift to state 614
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On logical_expression shift to state 621
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 606
-- On formlet_expression shift to state 746
-- On exp shift to state 1070
-- On escape_expression shift to state 748
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611

State 1070:
case_expression -> TRY exp AS pattern IN exp OTHERWISE exp . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On VBAR reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On VALUES reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On TABLEKEYS reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On SEMICOLON reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On RPAREN reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On RBRACKET reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On RBRACE reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On OTHERWISE reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On ON reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On FROM reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On END reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On ELSE reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On DOTDOT reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On DELETE_LEFT reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On DELETE reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On DEFAULT reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On COMMA reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On CASE reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On BY reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On BARRBRACE reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp
-- On AS reduce production case_expression -> TRY exp AS pattern IN exp OTHERWISE exp

State 1071:
perhaps_where -> WHERE LPAREN exp . RPAREN [ WITH VBAR VARIABLE VALUES UPDATE UINTEGER UFLOAT TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SET SEMICOLON SELECT RPAREN RETURNING RECEIVE RBRACKET RBRACE RAISE QUERY PREFIXOP PAGE OTHERWISE ORDERBY ON OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FROM FORMLET FOR FALSE ESCAPE END ELSE DOTDOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA CHAR CASE BY BARRBRACE AS ]
-- On RPAREN shift to state 1072

State 1072:
perhaps_where -> WHERE LPAREN exp RPAREN . [ WITH VBAR VARIABLE VALUES UPDATE UINTEGER UFLOAT TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SET SEMICOLON SELECT RPAREN RETURNING RECEIVE RBRACKET RBRACE RAISE QUERY PREFIXOP PAGE OTHERWISE ORDERBY ON OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FROM FORMLET FOR FALSE ESCAPE END ELSE DOTDOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA CHAR CASE BY BARRBRACE AS ]
-- On WITH reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On VBAR reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On VARIABLE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On VALUES reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On UPDATE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On UINTEGER reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On UFLOAT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On TRY reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On TRUE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On TABLEKEYS reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On TABLE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On SWITCH reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On STRING reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On SPAWNWAIT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On SPAWNCLIENT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On SPAWNAT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On SPAWNANGELAT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On SPAWNANGEL reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On SPAWN reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On SHALLOWHANDLER reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On SHALLOWHANDLE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On SET reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On SEMICOLON reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On SELECT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On RPAREN reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On RETURNING reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On RECEIVE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On RBRACKET reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On RBRACE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On RAISE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On QUERY reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On PREFIXOP reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On PAGE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On OTHERWISE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On ORDERBY reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On ON reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On OFFER reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On MINUSDOT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On MINUS reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On LXML reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On LPAREN reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On LINFUN reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On LENSSELECT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On LENSPUT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On LENSJOIN reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On LENSGET reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On LENSDROP reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On LENS reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On LEFTTRIANGLE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On LBRACKET reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On LBRACE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On INSERT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On IF reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On HANDLER reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On HANDLE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On FUN reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On FROM reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On FORMLET reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On FOR reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On FALSE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On ESCAPE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On END reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On ELSE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On DOTDOT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On DOOP reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On DELETE_LEFT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On DELETE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On DEFAULT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On DATABASE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On CONSTRUCTOR reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On COMMA reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On CHAR reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On CASE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On BY reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On BARRBRACE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On AS reduce production perhaps_where -> WHERE LPAREN exp RPAREN

State 1073:
db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where . SET LPAREN labeled_exps RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On SET shift to state 1074

State 1074:
db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET . LPAREN labeled_exps RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On LPAREN shift to state 1075

State 1075:
db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN . labeled_exps RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On VARIABLE shift to state 88
-- On UINTEGER shift to state 89
-- On STRING shift to state 90
-- On CONSTRUCTOR shift to state 91
-- On record_label shift to state 818
-- On labeled_exps shift to state 1076
-- On field_label shift to state 254

State 1076:
db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps . RPAREN [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On RPAREN shift to state 1077

State 1077:
db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN . [ WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS ]
-- On WITH reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On VBAR reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On VALUES reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On TABLEKEYS reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On SEMICOLON reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On RPAREN reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On RETURNING reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On RBRACKET reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On RBRACE reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On OTHERWISE reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On ON reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On FROM reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On END reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On ELSE reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On DOTDOT reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On DELETE_LEFT reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On DELETE reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On DEFAULT reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On COMMA reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On CASE reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On BY reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On BARRBRACE reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On AS reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN

State 1078:
tlvarbinding -> VAR var perhaps_location EQ exp . [ SEMICOLON ]
-- On SEMICOLON reduce production tlvarbinding -> VAR var perhaps_location EQ exp

State 1079:
primary_expression -> LINFUN . arg_lists block [ SEMICOLON POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE END DOT COLONCOLON COLON BARBAR BANG AMPAMP ]
tlfunbinding -> LINFUN . var arg_lists perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 4
-- On LPAREN shift to state 407
-- On var shift to state 454
-- On multi_args shift to state 411
-- On arg_lists shift to state 413

State 1080:
primary_expression -> FUN . arg_lists block [ SEMICOLON POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE END DOT COLONCOLON COLON BARBAR BANG AMPAMP ]
tlfunbinding -> FUN . var arg_lists perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 4
-- On LPAREN shift to state 407
-- On var shift to state 463
-- On multi_args shift to state 411
-- On arg_lists shift to state 548

State 1081:
file -> preamble exp . END [ # ]
-- On END shift to state 1082

State 1082:
file -> preamble exp END . [ # ]
-- On # reduce production file -> preamble exp END

State 1083:
declarations -> declarations . declaration [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
file -> preamble declarations . exp END [ # ]
file -> preamble declarations . END [ # ]
-- On VARIABLE shift to state 2
-- On VAR shift to state 3
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TYPENAME shift to state 339
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SIG shift to state 347
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PREFIX shift to state 436
-- On POSTFIX shift to state 437
-- On PAGE shift to state 397
-- On OPEN shift to state 429
-- On OP shift to state 438
-- On OFFER shift to state 400
-- On MODULE shift to state 432
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 1079
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On INSERT shift to state 542
-- On INFIXR shift to state 458
-- On INFIXL shift to state 459
-- On INFIX shift to state 460
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 1080
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On END shift to state 1084
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On ALIEN shift to state 467
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typedecl shift to state 483
-- On typed_handler_binding shift to state 485
-- On typed_expression shift to state 614
-- On tlvarbinding shift to state 486
-- On tlfunbinding shift to state 488
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On signature shift to state 489
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On nofun_declaration shift to state 509
-- On logical_expression shift to state 621
-- On links_open shift to state 510
-- On links_module shift to state 511
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 894
-- On fun_declaration shift to state 512
-- On formlet_expression shift to state 746
-- On fixity shift to state 513
-- On exp shift to state 1085
-- On escape_expression shift to state 748
-- On declaration shift to state 520
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611
-- On alien_block shift to state 521

State 1084:
file -> preamble declarations END . [ # ]
-- On # reduce production file -> preamble declarations END

State 1085:
file -> preamble declarations exp . END [ # ]
-- On END shift to state 1086

State 1086:
file -> preamble declarations exp END . [ # ]
-- On # reduce production file -> preamble declarations exp END

State 1087:
file' -> file . [ # ]
-- On # accept file

State 1088:
interactive' -> . interactive [ # ]
-- On VARIABLE shift to state 2
-- On VAR shift to state 3
-- On UPDATE shift to state 11
-- On UINTEGER shift to state 15
-- On UFLOAT shift to state 16
-- On TYPENAME shift to state 339
-- On TRY shift to state 310
-- On TRUE shift to state 17
-- On TABLE shift to state 311
-- On SWITCH shift to state 312
-- On STRING shift to state 18
-- On SPAWNWAIT shift to state 314
-- On SPAWNCLIENT shift to state 319
-- On SPAWNAT shift to state 321
-- On SPAWNANGELAT shift to state 323
-- On SPAWNANGEL shift to state 325
-- On SPAWN shift to state 327
-- On SIG shift to state 347
-- On SHALLOWHANDLER shift to state 329
-- On SHALLOWHANDLE shift to state 330
-- On SEMICOLON shift to state 1089
-- On SELECT shift to state 332
-- On RECEIVE shift to state 334
-- On RAISE shift to state 385
-- On QUERY shift to state 386
-- On PREFIXOP shift to state 388
-- On PREFIX shift to state 436
-- On POSTFIX shift to state 437
-- On PAGE shift to state 397
-- On OPEN shift to state 1090
-- On OP shift to state 438
-- On OFFER shift to state 400
-- On MODULE shift to state 1098
-- On MINUSDOT shift to state 390
-- On MINUS shift to state 391
-- On LXML shift to state 392
-- On LPAREN shift to state 402
-- On LINFUN shift to state 1079
-- On LENSSELECT shift to state 528
-- On LENSPUT shift to state 530
-- On LENSJOIN shift to state 531
-- On LENSGET shift to state 532
-- On LENSDROP shift to state 533
-- On LENS shift to state 539
-- On LEFTTRIANGLE shift to state 415
-- On LBRACKET shift to state 540
-- On LBRACE shift to state 315
-- On KEYWORD shift to state 1104
-- On INSERT shift to state 542
-- On INFIXR shift to state 458
-- On INFIXL shift to state 459
-- On INFIX shift to state 460
-- On IF shift to state 543
-- On HANDLER shift to state 461
-- On HANDLE shift to state 545
-- On FUN shift to state 1080
-- On FORMLET shift to state 550
-- On FOR shift to state 553
-- On FALSE shift to state 34
-- On ESCAPE shift to state 561
-- On END shift to state 1116
-- On DOOP shift to state 579
-- On DELETE shift to state 582
-- On DATABASE shift to state 589
-- On CONSTRUCTOR shift to state 597
-- On CHAR shift to state 37
-- On ALIEN shift to state 1117
-- On xml_tree shift to state 398
-- On xml shift to state 571
-- On unary_expression shift to state 599
-- On typedecl shift to state 1127
-- On typed_handler_binding shift to state 485
-- On typed_expression shift to state 614
-- On tlvarbinding shift to state 1129
-- On tlfunbinding shift to state 488
-- On table_expression shift to state 619
-- On spawn_expression shift to state 572
-- On signature shift to state 1131
-- On session_expression shift to state 620
-- On qualified_name shift to state 573
-- On primary_expression shift to state 574
-- On postfix_expression shift to state 601
-- On parenthesized_thing shift to state 590
-- On nofun_declaration shift to state 1134
-- On logical_expression shift to state 621
-- On links_open shift to state 1135
-- On links_module shift to state 1136
-- On lens_expression shift to state 743
-- On iteration_expression shift to state 744
-- On interactive shift to state 1137
-- On infixr_9 shift to state 623
-- On infixr_8 shift to state 624
-- On infixr_7 shift to state 625
-- On infixr_6 shift to state 626
-- On infixr_5 shift to state 627
-- On infixr_4 shift to state 661
-- On infixr_3 shift to state 662
-- On infixr_2 shift to state 663
-- On infixr_1 shift to state 664
-- On infixr_0 shift to state 665
-- On infixl_9 shift to state 666
-- On infixl_8 shift to state 675
-- On infixl_7 shift to state 682
-- On infixl_6 shift to state 689
-- On infixl_5 shift to state 702
-- On infixl_4 shift to state 710
-- On infixl_3 shift to state 717
-- On infixl_2 shift to state 724
-- On infixl_1 shift to state 731
-- On infixl_0 shift to state 745
-- On handler_depth shift to state 894
-- On fun_declarations shift to state 1138
-- On fun_declaration shift to state 1142
-- On formlet_expression shift to state 746
-- On fixity shift to state 1143
-- On exp shift to state 1147
-- On escape_expression shift to state 748
-- On directive shift to state 1149
-- On db_expression shift to state 749
-- On database_expression shift to state 750
-- On constructor_expression shift to state 609
-- On constant shift to state 591
-- On conditional_expression shift to state 751
-- On case_expression shift to state 752
-- On block shift to state 610
-- On atomic_expression shift to state 611
-- On alien_block shift to state 1150

State 1089:
interactive -> SEMICOLON . [ # ]
-- On # reduce production interactive -> SEMICOLON

State 1090:
links_open -> OPEN . qualified_type_name [ # ]
links_open -> OPEN . CONSTRUCTOR [ # ]
-- On CONSTRUCTOR shift to state 1091
-- On qualified_type_name shift to state 1097

State 1091:
links_open -> OPEN CONSTRUCTOR . [ # ]
qualified_type_name -> CONSTRUCTOR . DOT qualified_type_name_inner [ # ]
-- On DOT shift to state 1092

State 1092:
qualified_type_name -> CONSTRUCTOR DOT . qualified_type_name_inner [ # ]
-- On CONSTRUCTOR shift to state 1093
-- On qualified_type_name_inner shift to state 1096

State 1093:
qualified_type_name_inner -> CONSTRUCTOR . DOT qualified_type_name_inner [ # ]
qualified_type_name_inner -> CONSTRUCTOR . [ # ]
-- On DOT shift to state 1094

State 1094:
qualified_type_name_inner -> CONSTRUCTOR DOT . qualified_type_name_inner [ # ]
-- On CONSTRUCTOR shift to state 1093
-- On qualified_type_name_inner shift to state 1095

State 1095:
qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner . [ # ]
-- On # reduce production qualified_type_name_inner -> CONSTRUCTOR DOT qualified_type_name_inner

State 1096:
qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner . [ # ]
-- On # reduce production qualified_type_name -> CONSTRUCTOR DOT qualified_type_name_inner

State 1097:
links_open -> OPEN qualified_type_name . [ # ]
-- On # reduce production links_open -> OPEN qualified_type_name

State 1098:
links_module -> MODULE . module_name moduleblock [ # ]
-- On CONSTRUCTOR shift to state 433
-- On module_name shift to state 1099

State 1099:
links_module -> MODULE module_name . moduleblock [ # ]
-- On LBRACE shift to state 1100
-- On moduleblock shift to state 1103

State 1100:
moduleblock -> LBRACE . declarations RBRACE [ # ]
-- On VAR shift to state 3
-- On TYPENAME shift to state 339
-- On SIG shift to state 347
-- On SHALLOWHANDLER shift to state 329
-- On PREFIX shift to state 436
-- On POSTFIX shift to state 437
-- On OPEN shift to state 429
-- On OP shift to state 438
-- On MODULE shift to state 432
-- On LINFUN shift to state 453
-- On INFIXR shift to state 458
-- On INFIXL shift to state 459
-- On INFIX shift to state 460
-- On HANDLER shift to state 461
-- On FUN shift to state 462
-- On ALIEN shift to state 467
-- On typedecl shift to state 483
-- On typed_handler_binding shift to state 485
-- On tlvarbinding shift to state 486
-- On tlfunbinding shift to state 488
-- On signature shift to state 489
-- On nofun_declaration shift to state 509
-- On links_open shift to state 510
-- On links_module shift to state 511
-- On handler_depth shift to state 494
-- On fun_declaration shift to state 512
-- On fixity shift to state 513
-- On declarations shift to state 1101
-- On declaration shift to state 522
-- On alien_block shift to state 521

State 1101:
declarations -> declarations . declaration [ VAR TYPENAME SIG SHALLOWHANDLER RBRACE PREFIX POSTFIX OPEN OP MODULE LINFUN INFIXR INFIXL INFIX HANDLER FUN ALIEN ]
moduleblock -> LBRACE declarations . RBRACE [ # ]
-- On VAR shift to state 3
-- On TYPENAME shift to state 339
-- On SIG shift to state 347
-- On SHALLOWHANDLER shift to state 329
-- On RBRACE shift to state 1102
-- On PREFIX shift to state 436
-- On POSTFIX shift to state 437
-- On OPEN shift to state 429
-- On OP shift to state 438
-- On MODULE shift to state 432
-- On LINFUN shift to state 453
-- On INFIXR shift to state 458
-- On INFIXL shift to state 459
-- On INFIX shift to state 460
-- On HANDLER shift to state 461
-- On FUN shift to state 462
-- On ALIEN shift to state 467
-- On typedecl shift to state 483
-- On typed_handler_binding shift to state 485
-- On tlvarbinding shift to state 486
-- On tlfunbinding shift to state 488
-- On signature shift to state 489
-- On nofun_declaration shift to state 509
-- On links_open shift to state 510
-- On links_module shift to state 511
-- On handler_depth shift to state 494
-- On fun_declaration shift to state 512
-- On fixity shift to state 513
-- On declaration shift to state 520
-- On alien_block shift to state 521

State 1102:
moduleblock -> LBRACE declarations RBRACE . [ # ]
-- On # reduce production moduleblock -> LBRACE declarations RBRACE

State 1103:
links_module -> MODULE module_name moduleblock . [ # ]
-- On # reduce production links_module -> MODULE module_name moduleblock

State 1104:
directive -> KEYWORD . args SEMICOLON [ # ]
-- On VARIABLE shift to state 1105
-- On UINTEGER shift to state 1106
-- On UFLOAT shift to state 1107
-- On TRUE shift to state 1108
-- On STRING shift to state 1109
-- On FALSE shift to state 1110
-- On CONSTRUCTOR shift to state 1111
-- On args shift to state 1112
-- On arg shift to state 1114
-- On SEMICOLON reduce production args ->

State 1105:
arg -> VARIABLE . [ VARIABLE UINTEGER UFLOAT TRUE STRING SEMICOLON FALSE CONSTRUCTOR ]
-- On VARIABLE reduce production arg -> VARIABLE
-- On UINTEGER reduce production arg -> VARIABLE
-- On UFLOAT reduce production arg -> VARIABLE
-- On TRUE reduce production arg -> VARIABLE
-- On STRING reduce production arg -> VARIABLE
-- On SEMICOLON reduce production arg -> VARIABLE
-- On FALSE reduce production arg -> VARIABLE
-- On CONSTRUCTOR reduce production arg -> VARIABLE

State 1106:
arg -> UINTEGER . [ VARIABLE UINTEGER UFLOAT TRUE STRING SEMICOLON FALSE CONSTRUCTOR ]
-- On VARIABLE reduce production arg -> UINTEGER
-- On UINTEGER reduce production arg -> UINTEGER
-- On UFLOAT reduce production arg -> UINTEGER
-- On TRUE reduce production arg -> UINTEGER
-- On STRING reduce production arg -> UINTEGER
-- On SEMICOLON reduce production arg -> UINTEGER
-- On FALSE reduce production arg -> UINTEGER
-- On CONSTRUCTOR reduce production arg -> UINTEGER

State 1107:
arg -> UFLOAT . [ VARIABLE UINTEGER UFLOAT TRUE STRING SEMICOLON FALSE CONSTRUCTOR ]
-- On VARIABLE reduce production arg -> UFLOAT
-- On UINTEGER reduce production arg -> UFLOAT
-- On UFLOAT reduce production arg -> UFLOAT
-- On TRUE reduce production arg -> UFLOAT
-- On STRING reduce production arg -> UFLOAT
-- On SEMICOLON reduce production arg -> UFLOAT
-- On FALSE reduce production arg -> UFLOAT
-- On CONSTRUCTOR reduce production arg -> UFLOAT

State 1108:
arg -> TRUE . [ VARIABLE UINTEGER UFLOAT TRUE STRING SEMICOLON FALSE CONSTRUCTOR ]
-- On VARIABLE reduce production arg -> TRUE
-- On UINTEGER reduce production arg -> TRUE
-- On UFLOAT reduce production arg -> TRUE
-- On TRUE reduce production arg -> TRUE
-- On STRING reduce production arg -> TRUE
-- On SEMICOLON reduce production arg -> TRUE
-- On FALSE reduce production arg -> TRUE
-- On CONSTRUCTOR reduce production arg -> TRUE

State 1109:
arg -> STRING . [ VARIABLE UINTEGER UFLOAT TRUE STRING SEMICOLON FALSE CONSTRUCTOR ]
-- On VARIABLE reduce production arg -> STRING
-- On UINTEGER reduce production arg -> STRING
-- On UFLOAT reduce production arg -> STRING
-- On TRUE reduce production arg -> STRING
-- On STRING reduce production arg -> STRING
-- On SEMICOLON reduce production arg -> STRING
-- On FALSE reduce production arg -> STRING
-- On CONSTRUCTOR reduce production arg -> STRING

State 1110:
arg -> FALSE . [ VARIABLE UINTEGER UFLOAT TRUE STRING SEMICOLON FALSE CONSTRUCTOR ]
-- On VARIABLE reduce production arg -> FALSE
-- On UINTEGER reduce production arg -> FALSE
-- On UFLOAT reduce production arg -> FALSE
-- On TRUE reduce production arg -> FALSE
-- On STRING reduce production arg -> FALSE
-- On SEMICOLON reduce production arg -> FALSE
-- On FALSE reduce production arg -> FALSE
-- On CONSTRUCTOR reduce production arg -> FALSE

State 1111:
arg -> CONSTRUCTOR . [ VARIABLE UINTEGER UFLOAT TRUE STRING SEMICOLON FALSE CONSTRUCTOR ]
-- On VARIABLE reduce production arg -> CONSTRUCTOR
-- On UINTEGER reduce production arg -> CONSTRUCTOR
-- On UFLOAT reduce production arg -> CONSTRUCTOR
-- On TRUE reduce production arg -> CONSTRUCTOR
-- On STRING reduce production arg -> CONSTRUCTOR
-- On SEMICOLON reduce production arg -> CONSTRUCTOR
-- On FALSE reduce production arg -> CONSTRUCTOR
-- On CONSTRUCTOR reduce production arg -> CONSTRUCTOR

State 1112:
directive -> KEYWORD args . SEMICOLON [ # ]
-- On SEMICOLON shift to state 1113

State 1113:
directive -> KEYWORD args SEMICOLON . [ # ]
-- On # reduce production directive -> KEYWORD args SEMICOLON

State 1114:
args -> arg . args [ SEMICOLON ]
-- On VARIABLE shift to state 1105
-- On UINTEGER shift to state 1106
-- On UFLOAT shift to state 1107
-- On TRUE shift to state 1108
-- On STRING shift to state 1109
-- On FALSE shift to state 1110
-- On CONSTRUCTOR shift to state 1111
-- On args shift to state 1115
-- On arg shift to state 1114
-- On SEMICOLON reduce production args ->

State 1115:
args -> arg args . [ SEMICOLON ]
-- On SEMICOLON reduce production args -> arg args

State 1116:
interactive -> END . [ # ]
-- On # reduce production interactive -> END

State 1117:
alien_block -> ALIEN . VARIABLE STRING LBRACE alien_datatypes RBRACE [ # ]
nofun_declaration -> ALIEN . VARIABLE STRING var COLON datatype SEMICOLON [ # ]
-- On VARIABLE shift to state 1118

State 1118:
alien_block -> ALIEN VARIABLE . STRING LBRACE alien_datatypes RBRACE [ # ]
nofun_declaration -> ALIEN VARIABLE . STRING var COLON datatype SEMICOLON [ # ]
-- On STRING shift to state 1119

State 1119:
alien_block -> ALIEN VARIABLE STRING . LBRACE alien_datatypes RBRACE [ # ]
nofun_declaration -> ALIEN VARIABLE STRING . var COLON datatype SEMICOLON [ # ]
-- On VARIABLE shift to state 4
-- On LBRACE shift to state 1120
-- On var shift to state 1123

State 1120:
alien_block -> ALIEN VARIABLE STRING LBRACE . alien_datatypes RBRACE [ # ]
-- On VARIABLE shift to state 4
-- On var shift to state 471
-- On alien_datatypes shift to state 1121
-- On alien_datatype shift to state 477

State 1121:
alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes . RBRACE [ # ]
-- On RBRACE shift to state 1122

State 1122:
alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE . [ # ]
-- On # reduce production alien_block -> ALIEN VARIABLE STRING LBRACE alien_datatypes RBRACE

State 1123:
nofun_declaration -> ALIEN VARIABLE STRING var . COLON datatype SEMICOLON [ # ]
-- On COLON shift to state 1124

State 1124:
nofun_declaration -> ALIEN VARIABLE STRING var COLON . datatype SEMICOLON [ # ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On forall_datatype shift to state 148
-- On datatype shift to state 1125

State 1125:
nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype . SEMICOLON [ # ]
-- On SEMICOLON shift to state 1126

State 1126:
nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON . [ # ]
-- On # reduce production nofun_declaration -> ALIEN VARIABLE STRING var COLON datatype SEMICOLON

State 1127:
nofun_declaration -> typedecl . SEMICOLON [ # ]
-- On SEMICOLON shift to state 1128

State 1128:
nofun_declaration -> typedecl SEMICOLON . [ # ]
-- On # reduce production nofun_declaration -> typedecl SEMICOLON

State 1129:
nofun_declaration -> tlvarbinding . SEMICOLON [ # ]
-- On SEMICOLON shift to state 1130

State 1130:
nofun_declaration -> tlvarbinding SEMICOLON . [ # ]
-- On # reduce production nofun_declaration -> tlvarbinding SEMICOLON

State 1131:
fun_declaration -> signature . tlfunbinding [ SIG SHALLOWHANDLER SEMICOLON OP LINFUN HANDLER FUN ]
fun_declaration -> signature . typed_handler_binding [ SIG SHALLOWHANDLER SEMICOLON OP LINFUN HANDLER FUN ]
nofun_declaration -> signature . tlvarbinding SEMICOLON [ # ]
-- On VAR shift to state 3
-- On SHALLOWHANDLER shift to state 329
-- On OP shift to state 438
-- On LINFUN shift to state 453
-- On HANDLER shift to state 461
-- On FUN shift to state 462
-- On typed_handler_binding shift to state 490
-- On tlvarbinding shift to state 1132
-- On tlfunbinding shift to state 493
-- On handler_depth shift to state 494

State 1132:
nofun_declaration -> signature tlvarbinding . SEMICOLON [ # ]
-- On SEMICOLON shift to state 1133

State 1133:
nofun_declaration -> signature tlvarbinding SEMICOLON . [ # ]
-- On # reduce production nofun_declaration -> signature tlvarbinding SEMICOLON

State 1134:
interactive -> nofun_declaration . [ # ]
-- On # reduce production interactive -> nofun_declaration

State 1135:
nofun_declaration -> links_open . [ # ]
-- On # reduce production nofun_declaration -> links_open

State 1136:
nofun_declaration -> links_module . [ # ]
-- On # reduce production nofun_declaration -> links_module

State 1137:
interactive' -> interactive . [ # ]
-- On # accept interactive

State 1138:
fun_declarations -> fun_declarations . fun_declaration [ SIG SHALLOWHANDLER SEMICOLON OP LINFUN HANDLER FUN ]
interactive -> fun_declarations . SEMICOLON [ # ]
-- On SIG shift to state 347
-- On SHALLOWHANDLER shift to state 329
-- On SEMICOLON shift to state 1139
-- On OP shift to state 438
-- On LINFUN shift to state 453
-- On HANDLER shift to state 461
-- On FUN shift to state 462
-- On typed_handler_binding shift to state 485
-- On tlfunbinding shift to state 488
-- On signature shift to state 1140
-- On handler_depth shift to state 494
-- On fun_declaration shift to state 1141

State 1139:
interactive -> fun_declarations SEMICOLON . [ # ]
-- On # reduce production interactive -> fun_declarations SEMICOLON

State 1140:
fun_declaration -> signature . tlfunbinding [ SIG SHALLOWHANDLER SEMICOLON OP LINFUN HANDLER FUN ]
fun_declaration -> signature . typed_handler_binding [ SIG SHALLOWHANDLER SEMICOLON OP LINFUN HANDLER FUN ]
-- On SHALLOWHANDLER shift to state 329
-- On OP shift to state 438
-- On LINFUN shift to state 453
-- On HANDLER shift to state 461
-- On FUN shift to state 462
-- On typed_handler_binding shift to state 490
-- On tlfunbinding shift to state 493
-- On handler_depth shift to state 494

State 1141:
fun_declarations -> fun_declarations fun_declaration . [ SIG SHALLOWHANDLER SEMICOLON OP LINFUN HANDLER FUN ]
-- On SIG reduce production fun_declarations -> fun_declarations fun_declaration
-- On SHALLOWHANDLER reduce production fun_declarations -> fun_declarations fun_declaration
-- On SEMICOLON reduce production fun_declarations -> fun_declarations fun_declaration
-- On OP reduce production fun_declarations -> fun_declarations fun_declaration
-- On LINFUN reduce production fun_declarations -> fun_declarations fun_declaration
-- On HANDLER reduce production fun_declarations -> fun_declarations fun_declaration
-- On FUN reduce production fun_declarations -> fun_declarations fun_declaration

State 1142:
fun_declarations -> fun_declaration . [ SIG SHALLOWHANDLER SEMICOLON OP LINFUN HANDLER FUN ]
-- On SIG reduce production fun_declarations -> fun_declaration
-- On SHALLOWHANDLER reduce production fun_declarations -> fun_declaration
-- On SEMICOLON reduce production fun_declarations -> fun_declaration
-- On OP reduce production fun_declarations -> fun_declaration
-- On LINFUN reduce production fun_declarations -> fun_declaration
-- On HANDLER reduce production fun_declarations -> fun_declaration
-- On FUN reduce production fun_declarations -> fun_declaration

State 1143:
nofun_declaration -> fixity . perhaps_uinteger op SEMICOLON [ # ]
-- On UINTEGER shift to state 514
-- On perhaps_uinteger shift to state 1144
-- On INFIXR9 reduce production perhaps_uinteger ->
-- On INFIXR8 reduce production perhaps_uinteger ->
-- On INFIXR7 reduce production perhaps_uinteger ->
-- On INFIXR6 reduce production perhaps_uinteger ->
-- On INFIXR5 reduce production perhaps_uinteger ->
-- On INFIXR4 reduce production perhaps_uinteger ->
-- On INFIXR3 reduce production perhaps_uinteger ->
-- On INFIXR2 reduce production perhaps_uinteger ->
-- On INFIXR1 reduce production perhaps_uinteger ->
-- On INFIXR0 reduce production perhaps_uinteger ->
-- On INFIXL9 reduce production perhaps_uinteger ->
-- On INFIXL8 reduce production perhaps_uinteger ->
-- On INFIXL7 reduce production perhaps_uinteger ->
-- On INFIXL6 reduce production perhaps_uinteger ->
-- On INFIXL5 reduce production perhaps_uinteger ->
-- On INFIXL4 reduce production perhaps_uinteger ->
-- On INFIXL3 reduce production perhaps_uinteger ->
-- On INFIXL2 reduce production perhaps_uinteger ->
-- On INFIXL1 reduce production perhaps_uinteger ->
-- On INFIXL0 reduce production perhaps_uinteger ->
-- On INFIX9 reduce production perhaps_uinteger ->
-- On INFIX8 reduce production perhaps_uinteger ->
-- On INFIX7 reduce production perhaps_uinteger ->
-- On INFIX6 reduce production perhaps_uinteger ->
-- On INFIX5 reduce production perhaps_uinteger ->
-- On INFIX4 reduce production perhaps_uinteger ->
-- On INFIX3 reduce production perhaps_uinteger ->
-- On INFIX2 reduce production perhaps_uinteger ->
-- On INFIX1 reduce production perhaps_uinteger ->
-- On INFIX0 reduce production perhaps_uinteger ->

State 1144:
nofun_declaration -> fixity perhaps_uinteger . op SEMICOLON [ # ]
-- On INFIXR9 shift to state 348
-- On INFIXR8 shift to state 349
-- On INFIXR7 shift to state 350
-- On INFIXR6 shift to state 351
-- On INFIXR5 shift to state 352
-- On INFIXR4 shift to state 353
-- On INFIXR3 shift to state 354
-- On INFIXR2 shift to state 355
-- On INFIXR1 shift to state 356
-- On INFIXR0 shift to state 357
-- On INFIXL9 shift to state 358
-- On INFIXL8 shift to state 359
-- On INFIXL7 shift to state 360
-- On INFIXL6 shift to state 361
-- On INFIXL5 shift to state 362
-- On INFIXL4 shift to state 363
-- On INFIXL3 shift to state 364
-- On INFIXL2 shift to state 365
-- On INFIXL1 shift to state 366
-- On INFIXL0 shift to state 367
-- On INFIX9 shift to state 368
-- On INFIX8 shift to state 369
-- On INFIX7 shift to state 370
-- On INFIX6 shift to state 371
-- On INFIX5 shift to state 372
-- On INFIX4 shift to state 373
-- On INFIX3 shift to state 374
-- On INFIX2 shift to state 375
-- On INFIX1 shift to state 376
-- On INFIX0 shift to state 377
-- On op shift to state 1145

State 1145:
nofun_declaration -> fixity perhaps_uinteger op . SEMICOLON [ # ]
-- On SEMICOLON shift to state 1146

State 1146:
nofun_declaration -> fixity perhaps_uinteger op SEMICOLON . [ # ]
-- On # reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON

State 1147:
interactive -> exp . SEMICOLON [ # ]
-- On SEMICOLON shift to state 1148

State 1148:
interactive -> exp SEMICOLON . [ # ]
-- On # reduce production interactive -> exp SEMICOLON

State 1149:
interactive -> directive . [ # ]
-- On # reduce production interactive -> directive

State 1150:
nofun_declaration -> alien_block . [ # ]
-- On # reduce production nofun_declaration -> alien_block

State 1151:
just_datatype' -> . just_datatype [ # ]
-- On VARIABLE shift to state 40
-- On UNDERSCORE shift to state 41
-- On TILDE shift to state 44
-- On TABLEHANDLE shift to state 42
-- On QUESTION shift to state 45
-- On PERCENTVAR shift to state 46
-- On PERCENT shift to state 47
-- On MU shift to state 48
-- On LPAREN shift to state 51
-- On LBRACKETPLUSBAR shift to state 75
-- On LBRACKETBAR shift to state 97
-- On LBRACKETAMPBAR shift to state 106
-- On LBRACKET shift to state 115
-- On FORALL shift to state 116
-- On END shift to state 128
-- On CONSTRUCTOR shift to state 129
-- On BANG shift to state 133
-- On type_var shift to state 134
-- On straight_arrow shift to state 136
-- On squiggly_arrow shift to state 137
-- On session_datatype shift to state 138
-- On primary_datatype shift to state 139
-- On parenthesized_datatypes shift to state 140
-- On mu_datatype shift to state 146
-- On kinded_type_var shift to state 147
-- On just_datatype shift to state 1152
-- On forall_datatype shift to state 148
-- On datatype shift to state 1153

State 1152:
just_datatype' -> just_datatype . [ # ]
-- On # accept just_datatype

State 1153:
just_datatype -> datatype . END [ # ]
-- On END shift to state 1154

State 1154:
just_datatype -> datatype END . [ # ]
-- On # reduce production just_datatype -> datatype END

