File "links.0.8-parser.mly", line 175, characters 41-52:
Warning: the token MINUSLBRACE is unused.
Grammar has 187 nonterminal symbols, among which 3 start symbols.
Grammar has 182 terminal symbols.
Grammar has 575 productions.
nullable(xmlid) = false
nullable(xml_tree) = false
nullable(xml_contents_list) = false
nullable(xml_contents) = false
nullable(xml) = false
nullable(vrow) = true
nullable(vfields) = false
nullable(vfield) = false
nullable(varlist) = false
nullable(var) = false
nullable(unary_expression) = false
nullable(typedecl) = false
nullable(typed_pattern) = false
nullable(typed_handler_binding) = false
nullable(typed_expression) = false
nullable(typeargs_opt) = true
nullable(typearg) = false
nullable(type_var) = false
nullable(type_arg_list) = false
nullable(type_arg) = false
nullable(tlvarbinding) = false
nullable(tlfunbinding) = false
nullable(table_generator) = false
nullable(table_expression) = false
nullable(table_constraints) = false
nullable(subkind) = false
nullable(straight_arrow_prefix) = false
nullable(straight_arrow) = false
nullable(squiggly_arrow) = false
nullable(squig_arrow_prefix) = false
nullable(spawn_expression) = false
nullable(signature) = false
nullable(session_expression) = false
nullable(session_datatype) = false
nullable(row_var) = false
nullable(row) = true
nullable(rfields) = false
nullable(rfield) = false
nullable(regex_replace) = true
nullable(regex_pattern_sequence) = false
nullable(regex_pattern_alternate) = false
nullable(regex_pattern) = false
nullable(regex_flags_opt) = false
nullable(regex) = false
nullable(record_labels) = false
nullable(record_label) = false
nullable(qualified_type_name_inner) = false
nullable(qualified_type_name) = false
nullable(qualified_name_inner) = false
nullable(qualified_name) = false
nullable(primary_pattern) = false
nullable(primary_expression) = false
nullable(primary_datatype) = false
nullable(prefixop) = false
nullable(preamble) = true
nullable(postfixop) = false
nullable(postfix_expression) = false
nullable(perhaps_where) = true
nullable(perhaps_uinteger) = true
nullable(perhaps_table_constraints) = true
nullable(perhaps_semi) = true
nullable(perhaps_orderby) = true
nullable(perhaps_name) = true
nullable(perhaps_location) = true
nullable(perhaps_generators) = true
nullable(perhaps_db_driver) = true
nullable(perhaps_db_args) = true
nullable(perhaps_cp_cases) = true
nullable(perhaps_cases) = true
nullable(patterns) = false
nullable(pattern) = false
nullable(parenthesized_thing) = false
nullable(parenthesized_pattern) = false
nullable(parenthesized_datatypes) = false
nullable(page_placement) = false
nullable(optional_computation_parameter) = true
nullable(op) = false
nullable(nonrec_row_var) = false
nullable(nofun_declaration) = false
nullable(negative_pattern) = false
nullable(multi_args) = false
nullable(mu_datatype) = false
nullable(moduleblock) = false
nullable(module_name) = false
nullable(logical_expression) = false
nullable(list_generator) = false
nullable(links_open) = false
nullable(links_module) = false
nullable(lens_expression) = false
nullable(labeled_patterns) = false
nullable(labeled_exps) = false
nullable(kinded_type_var) = false
nullable(kinded_row_var) = false
nullable(kinded_nonrec_row_var) = false
nullable(kind) = false
nullable(just_datatype) = false
nullable(iteration_expression) = false
nullable(interactive) = false
nullable(infixr_9) = false
nullable(infixr_8) = false
nullable(infixr_7) = false
nullable(infixr_6) = false
nullable(infixr_5) = false
nullable(infixr_4) = false
nullable(infixr_3) = false
nullable(infixr_2) = false
nullable(infixr_1) = false
nullable(infixr_0) = false
nullable(infixl_9) = false
nullable(infixl_8) = false
nullable(infixl_7) = false
nullable(infixl_6) = false
nullable(infixl_5) = false
nullable(infixl_4) = false
nullable(infixl_3) = false
nullable(infixl_2) = false
nullable(infixl_1) = false
nullable(infixl_0) = false
nullable(hear_arrow_prefix) = false
nullable(handler_parameterization) = false
nullable(handler_depth) = false
nullable(handler_body) = false
nullable(handle_params) = false
nullable(generators) = false
nullable(generator) = false
nullable(fun_declarations) = false
nullable(fun_declaration) = false
nullable(formlet_placement) = false
nullable(formlet_expression) = false
nullable(formlet_binding) = false
nullable(forall_datatype) = false
nullable(fn_deps) = false
nullable(fn_dep_cols) = false
nullable(fn_dep) = false
nullable(fixity) = false
nullable(file) = false
nullable(fieldspec) = false
nullable(fields) = false
nullable(field_label) = false
nullable(field_constraints) = false
nullable(field_constraint) = false
nullable(field) = false
nullable(exps) = false
nullable(exp) = false
nullable(escape_expression) = false
nullable(efields) = false
nullable(efield) = false
nullable(effect_label) = false
nullable(directive) = false
nullable(declarations) = false
nullable(declaration) = false
nullable(db_expression) = false
nullable(datatypes) = false
nullable(datatype) = false
nullable(database_expression) = false
nullable(cp_name) = false
nullable(cp_label) = false
nullable(cp_expression) = false
nullable(cp_cases) = false
nullable(cp_case) = false
nullable(constructors) = false
nullable(constructor_pattern) = false
nullable(constructor_expression) = false
nullable(constant) = false
nullable(cons_pattern) = false
nullable(conditional_expression) = false
nullable(cases) = false
nullable(case_expression) = false
nullable(case) = false
nullable(block_contents) = true
nullable(block) = false
nullable(binop) = false
nullable(bindings) = false
nullable(binding) = false
nullable(attrs) = false
nullable(attr_val) = false
nullable(attr_list) = false
nullable(attr) = false
nullable(atomic_expression) = false
nullable(arrow_prefix) = false
nullable(args) = true
nullable(arg_spec) = false
nullable(arg_lists) = false
nullable(arg) = false
nullable(alien_datatypes) = false
nullable(alien_datatype) = false
nullable(alien_block) = false
first(xmlid) = VARIABLE
first(xml_tree) = LXML
first(xml_contents_list) = LXML LBRACEBAR LBRACE CDATA
first(xml_contents) = LXML LBRACEBAR LBRACE CDATA
first(xml) = LXML
first(vrow) = VARIABLE UNDERSCORE PERCENTVAR PERCENT LPAREN CONSTRUCTOR
first(vfields) = VARIABLE UNDERSCORE PERCENTVAR PERCENT LPAREN CONSTRUCTOR
first(vfield) = CONSTRUCTOR
first(varlist) = VARIABLE
first(var) = VARIABLE
first(unary_expression) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(typedecl) = TYPENAME
first(typed_pattern) = VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING MINUS LPAREN LBRACKET FALSE CONSTRUCTOR CHAR
first(typed_handler_binding) = SHALLOWHANDLER HANDLER
first(typed_expression) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(typeargs_opt) = LPAREN
first(typearg) = VARIABLE
first(type_var) = VARIABLE UNDERSCORE PERCENTVAR PERCENT
first(type_arg_list) = VARIABLE UNDERSCORE TYPE TILDE TABLEHANDLE ROW QUESTION PRESENCE PERCENTVAR PERCENT MU LPAREN LBRACKETPLUSBAR LBRACKETBAR LBRACKETAMPBAR LBRACKET LBRACE FORALL END CONSTRUCTOR BANG
first(type_arg) = VARIABLE UNDERSCORE TYPE TILDE TABLEHANDLE ROW QUESTION PRESENCE PERCENTVAR PERCENT MU LPAREN LBRACKETPLUSBAR LBRACKETBAR LBRACKETAMPBAR LBRACKET LBRACE FORALL END CONSTRUCTOR BANG
first(tlvarbinding) = VAR
first(tlfunbinding) = OP LINFUN FUN
first(table_generator) = VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING MINUS LPAREN LBRACKET FALSE CONSTRUCTOR CHAR
first(table_expression) = VARIABLE UPDATE UINTEGER UFLOAT TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OFFER MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE CONSTRUCTOR CHAR
first(table_constraints) = VARIABLE UINTEGER STRING CONSTRUCTOR
first(subkind) = COLONCOLON
first(straight_arrow_prefix) = MINUS LBRACE
first(straight_arrow) = LPAREN
first(squiggly_arrow) = LPAREN
first(squig_arrow_prefix) = TILDE LBRACE
first(spawn_expression) = SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN
first(signature) = SIG
first(session_expression) = VARIABLE UPDATE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SELECT RECEIVE QUERY PREFIXOP OFFER MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP DELETE CONSTRUCTOR CHAR
first(session_datatype) = VARIABLE UNDERSCORE TILDE TABLEHANDLE QUESTION PERCENTVAR PERCENT LPAREN LBRACKETPLUSBAR LBRACKETBAR LBRACKETAMPBAR LBRACKET END CONSTRUCTOR BANG
first(row_var) = VARIABLE UNDERSCORE PERCENTVAR PERCENT LPAREN
first(row) = VBAR VARIABLE UINTEGER STRING CONSTRUCTOR
first(rfields) = VBAR VARIABLE UINTEGER STRING CONSTRUCTOR
first(rfield) = VARIABLE UINTEGER STRING CONSTRUCTOR
first(regex_replace) = REGEXREPL LBRACE
first(regex_pattern_sequence) = STRING RANGE QUOTEDMETA LPAREN LBRACE DOT DOLLAR CARET
first(regex_pattern_alternate) = STRING RANGE QUOTEDMETA LPAREN LBRACE DOT DOLLAR CARET
first(regex_pattern) = STRING RANGE QUOTEDMETA LPAREN LBRACE DOT DOLLAR CARET
first(regex_flags_opt) = SLASHFLAGS SLASH
first(regex) = SSLASH SLASH
first(record_labels) = VARIABLE UINTEGER STRING CONSTRUCTOR
first(record_label) = VARIABLE UINTEGER STRING CONSTRUCTOR
first(qualified_type_name_inner) = CONSTRUCTOR
first(qualified_type_name) = CONSTRUCTOR
first(qualified_name_inner) = VARIABLE CONSTRUCTOR
first(qualified_name) = CONSTRUCTOR
first(primary_pattern) = VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING LPAREN LBRACKET FALSE CHAR
first(primary_expression) = VARIABLE UINTEGER UFLOAT TRUE STRING SHALLOWHANDLER RECEIVE LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET HANDLER FUN FALSE CONSTRUCTOR CHAR
first(primary_datatype) = VARIABLE UNDERSCORE TABLEHANDLE PERCENTVAR PERCENT LPAREN LBRACKETBAR LBRACKET CONSTRUCTOR
first(prefixop) = PREFIXOP
first(preamble) = 
first(postfixop) = POSTFIXOP
first(postfix_expression) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE CONSTRUCTOR CHAR
first(perhaps_where) = WHERE
first(perhaps_uinteger) = UINTEGER
first(perhaps_table_constraints) = WHERE
first(perhaps_semi) = SEMICOLON
first(perhaps_orderby) = ORDERBY
first(perhaps_name) = VARIABLE
first(perhaps_location) = SERVER NATIVE CLIENT
first(perhaps_generators) = VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING MINUS LPAREN LBRACKET FALSE CONSTRUCTOR CHAR
first(perhaps_db_driver) = VARIABLE UINTEGER UFLOAT TRUE STRING RECEIVE LPAREN FALSE CONSTRUCTOR CHAR
first(perhaps_db_args) = VARIABLE UINTEGER UFLOAT TRUE STRING RECEIVE LPAREN FALSE CONSTRUCTOR CHAR
first(perhaps_cp_cases) = CASE
first(perhaps_cases) = CASE
first(patterns) = VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING MINUS LPAREN LBRACKET FALSE CONSTRUCTOR CHAR
first(pattern) = VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING MINUS LPAREN LBRACKET FALSE CONSTRUCTOR CHAR
first(parenthesized_thing) = LPAREN
first(parenthesized_pattern) = LPAREN
first(parenthesized_datatypes) = LPAREN
first(page_placement) = LBRACEBAR
first(optional_computation_parameter) = LBRACKET
first(op) = INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0
first(nonrec_row_var) = VARIABLE UNDERSCORE PERCENTVAR PERCENT
first(nofun_declaration) = VAR TYPENAME SIG PREFIX POSTFIX OPEN MODULE INFIXR INFIXL INFIX ALIEN
first(negative_pattern) = VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING MINUS LPAREN LBRACKET FALSE CHAR
first(multi_args) = LPAREN
first(mu_datatype) = VARIABLE UNDERSCORE TILDE TABLEHANDLE QUESTION PERCENTVAR PERCENT MU LPAREN LBRACKETPLUSBAR LBRACKETBAR LBRACKETAMPBAR LBRACKET FORALL END CONSTRUCTOR BANG
first(moduleblock) = LBRACE
first(module_name) = CONSTRUCTOR
first(logical_expression) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(list_generator) = VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING MINUS LPAREN LBRACKET FALSE CONSTRUCTOR CHAR
first(links_open) = OPEN
first(links_module) = MODULE
first(lens_expression) = VARIABLE UPDATE UINTEGER UFLOAT TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR
first(labeled_patterns) = VARIABLE UINTEGER STRING CONSTRUCTOR
first(labeled_exps) = VARIABLE UINTEGER STRING CONSTRUCTOR
first(kinded_type_var) = VARIABLE UNDERSCORE PERCENTVAR PERCENT
first(kinded_row_var) = VARIABLE UNDERSCORE PERCENTVAR PERCENT LPAREN
first(kinded_nonrec_row_var) = VARIABLE UNDERSCORE PERCENTVAR PERCENT
first(kind) = COLONCOLON
first(just_datatype) = VARIABLE UNDERSCORE TILDE TABLEHANDLE QUESTION PERCENTVAR PERCENT MU LPAREN LBRACKETPLUSBAR LBRACKETBAR LBRACKETAMPBAR LBRACKET FORALL END CONSTRUCTOR BANG
first(iteration_expression) = VARIABLE UPDATE UINTEGER UFLOAT TRY TRUE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP OFFER MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE IF HANDLER HANDLE FUN FOR FALSE DOOP DELETE CONSTRUCTOR CHAR
first(interactive) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE KEYWORD INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN
first(infixr_9) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixr_8) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixr_7) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixr_6) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixr_5) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixr_4) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixr_3) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixr_2) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixr_1) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixr_0) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixl_9) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixl_8) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixl_7) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixl_6) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixl_5) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixl_4) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixl_3) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixl_2) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixl_1) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(infixl_0) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(hear_arrow_prefix) = LBRACE
first(handler_parameterization) = LPAREN LBRACE
first(handler_depth) = SHALLOWHANDLER HANDLER
first(handler_body) = LBRACE
first(handle_params) = VARIABLE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP CONSTRUCTOR CHAR
first(generators) = VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING MINUS LPAREN LBRACKET FALSE CONSTRUCTOR CHAR
first(generator) = VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING MINUS LPAREN LBRACKET FALSE CONSTRUCTOR CHAR
first(fun_declarations) = SIG SHALLOWHANDLER OP LINFUN HANDLER FUN
first(fun_declaration) = SIG SHALLOWHANDLER OP LINFUN HANDLER FUN
first(formlet_placement) = LBRACE
first(formlet_expression) = VARIABLE UPDATE UINTEGER UFLOAT TRY TRUE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OFFER MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE CONSTRUCTOR CHAR
first(formlet_binding) = LBRACE
first(forall_datatype) = VARIABLE UNDERSCORE TILDE TABLEHANDLE QUESTION PERCENTVAR PERCENT LPAREN LBRACKETPLUSBAR LBRACKETBAR LBRACKETAMPBAR LBRACKET FORALL END CONSTRUCTOR BANG
first(fn_deps) = VARIABLE
first(fn_dep_cols) = VARIABLE
first(fn_dep) = VARIABLE
first(fixity) = PREFIX POSTFIX INFIXR INFIXL INFIX
first(file) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN
first(fieldspec) = MINUS LBRACE COLON
first(fields) = VBAR VARIABLE UINTEGER STRING CONSTRUCTOR
first(field_label) = VARIABLE UINTEGER STRING CONSTRUCTOR
first(field_constraints) = READONLY DEFAULT
first(field_constraint) = READONLY DEFAULT
first(field) = VARIABLE UINTEGER STRING CONSTRUCTOR
first(exps) = VARIABLE UPDATE UINTEGER UFLOAT TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR
first(exp) = VARIABLE UPDATE UINTEGER UFLOAT TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR
first(escape_expression) = VARIABLE UPDATE UINTEGER UFLOAT TRY TRUE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP OFFER MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE IF HANDLER HANDLE FUN FOR FALSE ESCAPE DOOP DELETE CONSTRUCTOR CHAR
first(efields) = VBAR VARIABLE CONSTRUCTOR
first(efield) = VARIABLE CONSTRUCTOR
first(effect_label) = VARIABLE CONSTRUCTOR
first(directive) = KEYWORD
first(declarations) = VAR TYPENAME SIG SHALLOWHANDLER PREFIX POSTFIX OPEN OP MODULE LINFUN INFIXR INFIXL INFIX HANDLER FUN ALIEN
first(declaration) = VAR TYPENAME SIG SHALLOWHANDLER PREFIX POSTFIX OPEN OP MODULE LINFUN INFIXR INFIXL INFIX HANDLER FUN ALIEN
first(db_expression) = VARIABLE UPDATE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER RECEIVE QUERY PREFIXOP MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE HANDLER FUN FALSE DOOP DELETE CONSTRUCTOR CHAR
first(datatypes) = VARIABLE UNDERSCORE TILDE TABLEHANDLE QUESTION PERCENTVAR PERCENT MU LPAREN LBRACKETPLUSBAR LBRACKETBAR LBRACKETAMPBAR LBRACKET FORALL END CONSTRUCTOR BANG
first(datatype) = VARIABLE UNDERSCORE TILDE TABLEHANDLE QUESTION PERCENTVAR PERCENT MU LPAREN LBRACKETPLUSBAR LBRACKETBAR LBRACKETAMPBAR LBRACKET FORALL END CONSTRUCTOR BANG
first(database_expression) = VARIABLE UPDATE UINTEGER UFLOAT TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OFFER MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR
first(cp_name) = VARIABLE
first(cp_label) = CONSTRUCTOR
first(cp_expression) = VARIABLE OFFER NU LBRACE CONSTRUCTOR
first(cp_cases) = CASE
first(cp_case) = CASE
first(constructors) = CONSTRUCTOR
first(constructor_pattern) = VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING MINUS LPAREN LBRACKET FALSE CONSTRUCTOR CHAR
first(constructor_expression) = CONSTRUCTOR
first(constant) = UINTEGER UFLOAT TRUE STRING FALSE CHAR
first(cons_pattern) = VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING MINUS LPAREN LBRACKET FALSE CONSTRUCTOR CHAR
first(conditional_expression) = VARIABLE UPDATE UINTEGER UFLOAT TRUE STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SELECT RECEIVE QUERY PREFIXOP OFFER MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE IF HANDLER FUN FALSE DOOP DELETE CONSTRUCTOR CHAR
first(cases) = CASE
first(case_expression) = VARIABLE UPDATE UINTEGER UFLOAT TRY TRUE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP OFFER MINUSDOT MINUS LXML LPAREN LINFUN LEFTTRIANGLE LBRACKET LBRACE IF HANDLER HANDLE FUN FALSE DOOP DELETE CONSTRUCTOR CHAR
first(case) = CASE
first(block_contents) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN
first(block) = LBRACE
first(binop) = MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0
first(bindings) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN
first(binding) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN
first(attrs) = VARIABLE LBRACE
first(attr_val) = STRING LBRACE
first(attr_list) = VARIABLE
first(attr) = VARIABLE
first(atomic_expression) = VARIABLE UINTEGER UFLOAT TRUE STRING RECEIVE LPAREN FALSE CONSTRUCTOR CHAR
first(arrow_prefix) = LBRACE
first(args) = VARIABLE UINTEGER UFLOAT TRUE STRING FALSE CONSTRUCTOR
first(arg_spec) = LPAREN
first(arg_lists) = LPAREN
first(arg) = VARIABLE UINTEGER UFLOAT TRUE STRING FALSE CONSTRUCTOR
first(alien_datatypes) = VARIABLE
first(alien_datatype) = VARIABLE
first(alien_block) = ALIEN
minimal(xmlid) = (* 1 *) VARIABLE
minimal(xml_tree) = (* 2 *) LXML SLASHRXML
minimal(xml_contents_list) = (* 1 *) CDATA
minimal(xml_contents) = (* 1 *) CDATA
minimal(xml) = (* 2 *) LXML SLASHRXML
minimal(vrow) = (* 0 *)
minimal(vfields) = (* 1 *) CONSTRUCTOR
minimal(vfield) = (* 1 *) CONSTRUCTOR
minimal(varlist) = (* 1 *) VARIABLE
minimal(var) = (* 1 *) VARIABLE
minimal(unary_expression) = (* 1 *) VARIABLE
minimal(typedecl) = (* 4 *) TYPENAME CONSTRUCTOR EQ END
minimal(typed_pattern) = (* 1 *) VARIABLE
minimal(typed_handler_binding) = (* 7 *) HANDLER VARIABLE LBRACE CASE VARIABLE RARROW RBRACE
minimal(typed_expression) = (* 1 *) VARIABLE
minimal(typeargs_opt) = (* 0 *)
minimal(typearg) = (* 1 *) VARIABLE
minimal(type_var) = (* 1 *) VARIABLE
minimal(type_arg_list) = (* 1 *) END
minimal(type_arg) = (* 1 *) END
minimal(tlvarbinding) = (* 4 *) VAR VARIABLE EQ VARIABLE
minimal(tlfunbinding) = (* 5 *) OP PREFIXOP VARIABLE LBRACE RBRACE
minimal(table_generator) = (* 3 *) VARIABLE LLARROW VARIABLE
minimal(table_expression) = (* 1 *) VARIABLE
minimal(table_constraints) = (* 2 *) CONSTRUCTOR READONLY
minimal(subkind) = (* 2 *) COLONCOLON CONSTRUCTOR
minimal(straight_arrow_prefix) = (* 2 *) LBRACE RBRACE
minimal(straight_arrow) = (* 4 *) LPAREN RPAREN RARROW END
minimal(squiggly_arrow) = (* 4 *) LPAREN RPAREN SQUIGRARROW END
minimal(squig_arrow_prefix) = (* 2 *) LBRACE RBRACE
minimal(spawn_expression) = (* 3 *) SPAWN LBRACE RBRACE
minimal(signature) = (* 4 *) SIG VARIABLE COLON END
minimal(session_expression) = (* 1 *) VARIABLE
minimal(session_datatype) = (* 1 *) END
minimal(row_var) = (* 1 *) VARIABLE
minimal(row) = (* 0 *)
minimal(rfields) = (* 2 *) CONSTRUCTOR MINUS
minimal(rfield) = (* 2 *) CONSTRUCTOR MINUS
minimal(regex_replace) = (* 0 *)
minimal(regex_pattern_sequence) = (* 1 *) RANGE
minimal(regex_pattern_alternate) = (* 1 *) RANGE
minimal(regex_pattern) = (* 1 *) RANGE
minimal(regex_flags_opt) = (* 1 *) SLASH
minimal(regex) = (* 2 *) SLASH SLASH
minimal(record_labels) = (* 1 *) CONSTRUCTOR
minimal(record_label) = (* 1 *) CONSTRUCTOR
minimal(qualified_type_name_inner) = (* 1 *) CONSTRUCTOR
minimal(qualified_type_name) = (* 3 *) CONSTRUCTOR DOT CONSTRUCTOR
minimal(qualified_name_inner) = (* 1 *) VARIABLE
minimal(qualified_name) = (* 3 *) CONSTRUCTOR DOT VARIABLE
minimal(primary_pattern) = (* 1 *) VARIABLE
minimal(primary_expression) = (* 1 *) VARIABLE
minimal(primary_datatype) = (* 1 *) VARIABLE
minimal(prefixop) = (* 1 *) PREFIXOP
minimal(preamble) = (* 0 *)
minimal(postfixop) = (* 1 *) POSTFIXOP
minimal(postfix_expression) = (* 1 *) VARIABLE
minimal(perhaps_where) = (* 0 *)
minimal(perhaps_uinteger) = (* 0 *)
minimal(perhaps_table_constraints) = (* 0 *)
minimal(perhaps_semi) = (* 0 *)
minimal(perhaps_orderby) = (* 0 *)
minimal(perhaps_name) = (* 0 *)
minimal(perhaps_location) = (* 0 *)
minimal(perhaps_generators) = (* 0 *)
minimal(perhaps_db_driver) = (* 0 *)
minimal(perhaps_db_args) = (* 0 *)
minimal(perhaps_cp_cases) = (* 0 *)
minimal(perhaps_cases) = (* 0 *)
minimal(patterns) = (* 1 *) VARIABLE
minimal(pattern) = (* 1 *) VARIABLE
minimal(parenthesized_thing) = (* 2 *) LPAREN RPAREN
minimal(parenthesized_pattern) = (* 2 *) LPAREN RPAREN
minimal(parenthesized_datatypes) = (* 2 *) LPAREN RPAREN
minimal(page_placement) = (* 3 *) LBRACEBAR VARIABLE BARRBRACE
minimal(optional_computation_parameter) = (* 0 *)
minimal(op) = (* 1 *) INFIX0
minimal(nonrec_row_var) = (* 1 *) VARIABLE
minimal(nofun_declaration) = (* 2 *) OPEN CONSTRUCTOR
minimal(negative_pattern) = (* 1 *) VARIABLE
minimal(multi_args) = (* 2 *) LPAREN RPAREN
minimal(mu_datatype) = (* 1 *) END
minimal(moduleblock) = (* 4 *) LBRACE OPEN CONSTRUCTOR RBRACE
minimal(module_name) = (* 1 *) CONSTRUCTOR
minimal(logical_expression) = (* 1 *) VARIABLE
minimal(list_generator) = (* 3 *) VARIABLE LARROW VARIABLE
minimal(links_open) = (* 2 *) OPEN CONSTRUCTOR
minimal(links_module) = (* 6 *) MODULE CONSTRUCTOR LBRACE OPEN CONSTRUCTOR RBRACE
minimal(lens_expression) = (* 1 *) VARIABLE
minimal(labeled_patterns) = (* 3 *) CONSTRUCTOR EQ VARIABLE
minimal(labeled_exps) = (* 3 *) CONSTRUCTOR EQ VARIABLE
minimal(kinded_type_var) = (* 3 *) VARIABLE COLONCOLON CONSTRUCTOR
minimal(kinded_row_var) = (* 3 *) VARIABLE COLONCOLON CONSTRUCTOR
minimal(kinded_nonrec_row_var) = (* 3 *) VARIABLE COLONCOLON CONSTRUCTOR
minimal(kind) = (* 2 *) COLONCOLON CONSTRUCTOR
minimal(just_datatype) = (* 2 *) END END
minimal(iteration_expression) = (* 1 *) VARIABLE
minimal(interactive) = (* 1 *) SEMICOLON
minimal(infixr_9) = (* 1 *) VARIABLE
minimal(infixr_8) = (* 1 *) VARIABLE
minimal(infixr_7) = (* 1 *) VARIABLE
minimal(infixr_6) = (* 1 *) VARIABLE
minimal(infixr_5) = (* 1 *) VARIABLE
minimal(infixr_4) = (* 1 *) VARIABLE
minimal(infixr_3) = (* 1 *) VARIABLE
minimal(infixr_2) = (* 1 *) VARIABLE
minimal(infixr_1) = (* 1 *) VARIABLE
minimal(infixr_0) = (* 1 *) VARIABLE
minimal(infixl_9) = (* 1 *) VARIABLE
minimal(infixl_8) = (* 1 *) VARIABLE
minimal(infixl_7) = (* 1 *) VARIABLE
minimal(infixl_6) = (* 1 *) VARIABLE
minimal(infixl_5) = (* 1 *) VARIABLE
minimal(infixl_4) = (* 1 *) VARIABLE
minimal(infixl_3) = (* 1 *) VARIABLE
minimal(infixl_2) = (* 1 *) VARIABLE
minimal(infixl_1) = (* 1 *) VARIABLE
minimal(infixl_0) = (* 1 *) VARIABLE
minimal(hear_arrow_prefix) = (* 4 *) LBRACE COLON END RBRACE
minimal(handler_parameterization) = (* 5 *) LBRACE CASE VARIABLE RARROW RBRACE
minimal(handler_depth) = (* 1 *) HANDLER
minimal(handler_body) = (* 5 *) LBRACE CASE VARIABLE RARROW RBRACE
minimal(handle_params) = (* 3 *) VARIABLE RARROW VARIABLE
minimal(generators) = (* 3 *) VARIABLE LARROW VARIABLE
minimal(generator) = (* 3 *) VARIABLE LARROW VARIABLE
minimal(fun_declarations) = (* 5 *) OP PREFIXOP VARIABLE LBRACE RBRACE
minimal(fun_declaration) = (* 5 *) OP PREFIXOP VARIABLE LBRACE RBRACE
minimal(formlet_placement) = (* 5 *) LBRACE VARIABLE FATRARROW VARIABLE RBRACE
minimal(formlet_expression) = (* 1 *) VARIABLE
minimal(formlet_binding) = (* 5 *) LBRACE VARIABLE RARROW VARIABLE RBRACE
minimal(forall_datatype) = (* 1 *) END
minimal(fn_deps) = (* 3 *) VARIABLE RARROW VARIABLE
minimal(fn_dep_cols) = (* 1 *) VARIABLE
minimal(fn_dep) = (* 3 *) VARIABLE RARROW VARIABLE
minimal(fixity) = (* 1 *) INFIX
minimal(file) = (* 2 *) VARIABLE END
minimal(fieldspec) = (* 1 *) MINUS
minimal(fields) = (* 1 *) CONSTRUCTOR
minimal(field_label) = (* 1 *) CONSTRUCTOR
minimal(field_constraints) = (* 1 *) READONLY
minimal(field_constraint) = (* 1 *) READONLY
minimal(field) = (* 1 *) CONSTRUCTOR
minimal(exps) = (* 1 *) VARIABLE
minimal(exp) = (* 1 *) VARIABLE
minimal(escape_expression) = (* 1 *) VARIABLE
minimal(efields) = (* 1 *) CONSTRUCTOR
minimal(efield) = (* 1 *) CONSTRUCTOR
minimal(effect_label) = (* 1 *) CONSTRUCTOR
minimal(directive) = (* 2 *) KEYWORD SEMICOLON
minimal(declarations) = (* 2 *) OPEN CONSTRUCTOR
minimal(declaration) = (* 2 *) OPEN CONSTRUCTOR
minimal(db_expression) = (* 1 *) VARIABLE
minimal(datatypes) = (* 1 *) END
minimal(datatype) = (* 1 *) END
minimal(database_expression) = (* 1 *) VARIABLE
minimal(cp_name) = (* 1 *) VARIABLE
minimal(cp_label) = (* 1 *) CONSTRUCTOR
minimal(cp_expression) = (* 2 *) CONSTRUCTOR VARIABLE
minimal(cp_cases) = (* 5 *) CASE CONSTRUCTOR RARROW CONSTRUCTOR VARIABLE
minimal(cp_case) = (* 5 *) CASE CONSTRUCTOR RARROW CONSTRUCTOR VARIABLE
minimal(constructors) = (* 1 *) CONSTRUCTOR
minimal(constructor_pattern) = (* 1 *) VARIABLE
minimal(constructor_expression) = (* 1 *) CONSTRUCTOR
minimal(constant) = (* 1 *) UINTEGER
minimal(cons_pattern) = (* 1 *) VARIABLE
minimal(conditional_expression) = (* 1 *) VARIABLE
minimal(cases) = (* 3 *) CASE VARIABLE RARROW
minimal(case_expression) = (* 1 *) VARIABLE
minimal(case) = (* 3 *) CASE VARIABLE RARROW
minimal(block_contents) = (* 0 *)
minimal(block) = (* 2 *) LBRACE RBRACE
minimal(binop) = (* 1 *) MINUS
minimal(bindings) = (* 2 *) VARIABLE SEMICOLON
minimal(binding) = (* 2 *) VARIABLE SEMICOLON
minimal(attrs) = (* 2 *) LBRACE RBRACE
minimal(attr_val) = (* 1 *) STRING
minimal(attr_list) = (* 4 *) VARIABLE EQ LQUOTE RQUOTE
minimal(attr) = (* 4 *) VARIABLE EQ LQUOTE RQUOTE
minimal(atomic_expression) = (* 1 *) VARIABLE
minimal(arrow_prefix) = (* 2 *) LBRACE RBRACE
minimal(args) = (* 0 *)
minimal(arg_spec) = (* 2 *) LPAREN RPAREN
minimal(arg_lists) = (* 2 *) LPAREN RPAREN
minimal(arg) = (* 1 *) STRING
minimal(alien_datatypes) = (* 4 *) VARIABLE COLON END SEMICOLON
minimal(alien_datatype) = (* 4 *) VARIABLE COLON END SEMICOLON
minimal(alien_block) = (* 9 *) ALIEN VARIABLE STRING LBRACE VARIABLE COLON END SEMICOLON RBRACE
follow(xmlid) = EQ
follow(xml_tree) = YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CDATA CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(xml_contents_list) = ENDTAG
follow(xml_contents) = LXML LBRACEBAR LBRACE ENDTAG CDATA
follow(xml) = YIELDS WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(vrow) = BARRBRACKET
follow(vfields) = RPAREN BARRBRACKET
follow(vfield) = VBAR RPAREN BARRBRACKET
follow(varlist) = RPAREN DOT
follow(var) = VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LPAREN LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLON CLIENT
follow(unary_expression) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(typedecl) = SEMICOLON
follow(typed_pattern) = VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLON CLIENT
follow(typed_handler_binding) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN
follow(typed_expression) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE AS
follow(typeargs_opt) = EQ
follow(typearg) = RPAREN DOT COMMA
follow(type_var) = WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS
follow(type_arg_list) = RPAREN
follow(type_arg) = RPAREN COMMA
follow(tlvarbinding) = SEMICOLON
follow(tlfunbinding) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN
follow(table_generator) = RPAREN COMMA
follow(table_expression) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS
follow(table_constraints) = TABLEKEYS FROM
follow(subkind) = WITH WHERE VBAR VAR VALUES TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS
follow(straight_arrow_prefix) = RARROW LOLLI
follow(straight_arrow) = WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS
follow(squiggly_arrow) = WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS
follow(squig_arrow_prefix) = SQUIGRARROW SQUIGLOLLI
follow(spawn_expression) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(signature) = VAR SHALLOWHANDLER OP LINFUN HANDLER FUN
follow(session_expression) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS
follow(session_datatype) = WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS
follow(row_var) = RPAREN RBRACE COLONCOLON BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET
follow(row) = RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET
follow(rfields) = RPAREN
follow(rfield) = VBAR RPAREN COMMA
follow(regex_replace) = SLASHFLAGS SLASH
follow(regex_pattern_sequence) = SLASHFLAGS SLASH RPAREN ALTERNATE
follow(regex_pattern_alternate) = SLASHFLAGS SLASH RPAREN
follow(regex_pattern) = STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE
follow(regex_flags_opt) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP
follow(regex) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP
follow(record_labels) = RPAREN
follow(record_label) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING READONLY RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(qualified_type_name_inner) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RPAREN RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN #
follow(qualified_type_name) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RPAREN RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN #
follow(qualified_name_inner) = WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(qualified_name) = WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(primary_pattern) = VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS
follow(primary_expression) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(primary_datatype) = WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS
follow(prefixop) = VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING MINUS LPAREN LBRACKET FALSE CONSTRUCTOR CHAR
follow(preamble) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN
follow(postfixop) = SERVER NATIVE LBRACE CLIENT
follow(postfix_expression) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(perhaps_where) = WITH VBAR VARIABLE VALUES UPDATE UINTEGER UFLOAT TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SET SEMICOLON SELECT RPAREN RETURNING RECEIVE RBRACKET RBRACE RAISE QUERY PREFIXOP PAGE OTHERWISE ORDERBY ON OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FROM FORMLET FOR FALSE ESCAPE END ELSE DOTDOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA CHAR CASE BY BARRBRACE AS
follow(perhaps_uinteger) = INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0
follow(perhaps_table_constraints) = TABLEKEYS FROM
follow(perhaps_semi) = RBRACE CASE
follow(perhaps_orderby) = VARIABLE UPDATE UINTEGER UFLOAT TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR
follow(perhaps_name) = RPAREN
follow(perhaps_location) = LBRACE EQ
follow(perhaps_generators) = RPAREN
follow(perhaps_db_driver) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS
follow(perhaps_db_args) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS
follow(perhaps_cp_cases) = RBRACE
follow(perhaps_cases) = RBRACE
follow(patterns) = RPAREN RBRACKET
follow(pattern) = VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA CLIENT
follow(parenthesized_thing) = WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(parenthesized_pattern) = VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS
follow(parenthesized_datatypes) = WITH WHERE VBAR VAR VALUES TILDE TABLEKEYS SQUIGRARROW SQUIGLOLLI SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE MINUS LOLLI LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS
follow(page_placement) = LXML LBRACEBAR LBRACE ENDTAG CDATA
follow(optional_computation_parameter) = VARIABLE LPAREN LBRACE
follow(op) = VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR
follow(nonrec_row_var) = SQUIGRARROW SQUIGLOLLI RPAREN RBRACE RARROW LOLLI COLONCOLON BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET
follow(nofun_declaration) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN #
follow(negative_pattern) = VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS
follow(multi_args) = SERVER NATIVE LPAREN LBRACE CLIENT
follow(mu_datatype) = WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS
follow(moduleblock) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN #
follow(module_name) = LBRACE
follow(logical_expression) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP
follow(list_generator) = RPAREN COMMA
follow(links_open) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN #
follow(links_module) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN #
follow(lens_expression) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS
follow(labeled_patterns) = VBAR RPAREN
follow(labeled_exps) = VBAR RPAREN
follow(kinded_type_var) = WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE OP ON NATIVE LLARROW LINFUN LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN HANDLER FUN FROM EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CLIENT CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS
follow(kinded_row_var) = RPAREN RBRACE BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET
follow(kinded_nonrec_row_var) = SQUIGRARROW SQUIGLOLLI RBRACE RARROW LOLLI
follow(kind) = RPAREN DOT COMMA
follow(just_datatype) = #
follow(iteration_expression) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS
follow(interactive) = #
follow(infixr_9) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(infixr_8) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(infixr_7) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(infixr_6) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(infixr_5) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP
follow(infixr_4) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP
follow(infixr_3) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP
follow(infixr_2) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP
follow(infixr_1) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR0 INFIXL1 INFIXL0 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP
follow(infixr_0) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXL0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP
follow(infixl_9) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(infixl_8) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(infixl_7) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(infixl_6) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(infixl_5) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP
follow(infixl_4) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP
follow(infixl_3) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP
follow(infixl_2) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP
follow(infixl_1) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXR0 INFIXL1 INFIXL0 INFIX0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP
follow(infixl_0) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON INFIXL0 FROM FATRARROW END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACE BARBAR AS AMPAMP
follow(hear_arrow_prefix) = SQUIGRARROW SQUIGLOLLI
follow(handler_parameterization) = WITH VBAR VARIABLE VAR VALUES UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW RAISE QUERY PREFIXOP PREFIX POSTFIXOP POSTFIX PAGE OTHERWISE OPEN OP ON OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXR INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIXL INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 INFIX IF HANDLER HANDLE FUN FROM FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE END ELSE DOTDOT DOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ALIEN
follow(handler_depth) = VARIABLE LPAREN LBRACKET LBRACE
follow(handler_body) = WITH VBAR VARIABLE VAR VALUES UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW RAISE QUERY PREFIXOP PREFIX POSTFIXOP POSTFIX PAGE OTHERWISE OPEN OP ON OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXR INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIXL INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 INFIX IF HANDLER HANDLE FUN FROM FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE END ELSE DOTDOT DOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP ALIEN
follow(handle_params) = RPAREN COMMA
follow(generators) = RPAREN
follow(generator) = RPAREN COMMA
follow(fun_declarations) = SIG SHALLOWHANDLER SEMICOLON OP LINFUN HANDLER FUN
follow(fun_declaration) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN
follow(formlet_placement) = LXML LBRACEBAR LBRACE ENDTAG CDATA
follow(formlet_expression) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS
follow(formlet_binding) = LXML LBRACEBAR LBRACE ENDTAG CDATA
follow(forall_datatype) = WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS
follow(fn_deps) = RBRACE
follow(fn_dep_cols) = RBRACE RARROW COMMA
follow(fn_dep) = RBRACE COMMA
follow(fixity) = UINTEGER INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0
follow(file) = #
follow(fieldspec) = VBAR RPAREN RBRACE COMMA BARRBRACKET BARPLUSRBRACKET BARAMPRBRACKET
follow(fields) = RPAREN RBRACE BARPLUSRBRACKET BARAMPRBRACKET
follow(field_label) = WITH VBAR VARIABLE VALUES UPDATE UINTEGER UFLOAT TRY TRUE TABLEKEYS TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RPAREN RETURNING RECEIVE READONLY RBRACKET RBRACE RARROW RAISE QUERY PREFIXOP PAGE OTHERWISE ON OFFER MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IF HANDLER HANDLE FUN FROM FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE EQ END ELSE DOTDOT DOT DOOP DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARPLUSRBRACKET BARBAR BARAMPRBRACKET BANG AS AMPAMP
follow(field_constraints) = TABLEKEYS FROM COMMA
follow(field_constraint) = TABLEKEYS READONLY FROM DEFAULT COMMA
follow(field) = VBAR RPAREN RBRACE COMMA BARPLUSRBRACKET BARAMPRBRACKET
follow(exps) = RPAREN RBRACKET
follow(exp) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS
follow(escape_expression) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS
follow(efields) = RBRACE
follow(efield) = VBAR RBRACE COMMA
follow(effect_label) = VBAR RBRACE MINUS LBRACE COMMA COLON
follow(directive) = #
follow(declarations) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN
follow(declaration) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN
follow(db_expression) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS
follow(datatypes) = RPAREN
follow(datatype) = WITH WHERE VBAR VAR VALUES TABLEKEYS SHALLOWHANDLER SEMICOLON RPAREN RETURNING RBRACKET RBRACE OTHERWISE OP ON LINFUN LARROW HANDLER FUN FROM END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLON CASE BY BARRBRACKET BARRBRACE BARPLUSRBRACKET BARAMPRBRACKET AS
follow(database_expression) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS
follow(cp_name) = VBAR RPAREN RIGHTTRIANGLE RBRACE LRARROW LPAREN LBRACKET LBRACE DOT CASE
follow(cp_label) = VARIABLE RARROW
follow(cp_expression) = VBAR RPAREN RIGHTTRIANGLE RBRACE CASE
follow(cp_cases) = RBRACE
follow(cp_case) = RBRACE CASE
follow(constructors) = RPAREN
follow(constructor_pattern) = VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLONCOLON COLON CLIENT AS
follow(constructor_expression) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(constant) = WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SERVER SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON NATIVE MINUSDOT MINUS LPAREN LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN FROM FATRARROW FALSE EQUALSTILDE EQ END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CLIENT CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(cons_pattern) = VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLON CLIENT AS
follow(conditional_expression) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS
follow(cases) = RBRACE
follow(case_expression) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RBRACKET RBRACE OTHERWISE ON FROM END ELSE DOTDOT DELETE_LEFT DELETE DEFAULT COMMA CASE BY BARRBRACE AS
follow(case) = RBRACE CASE
follow(block_contents) = RBRACE CASE
follow(block) = WITH VBAR VARIABLE VAR VALUES UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLEKEYS TABLE SWITCH STRING STAR SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SLASHRXML SLASHFLAGS SLASH SIG SHALLOWHANDLER SHALLOWHANDLE SEMICOLON SELECT RXML RQUOTE RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW RANGE RAISE QUOTEDMETA QUESTION QUERY PREFIXOP PREFIX POSTFIXOP POSTFIX PLUS PAGE OTHERWISE OPEN OP ON OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACEBAR LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXR INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIXL INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 INFIX IF HANDLER HANDLE FUN FROM FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DOOP DOLLAR DELETE_LEFT DELETE DEFAULT DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CDATA CASE CARET BY BARRBRACE BARBAR BANG AS AMPAMP ALTERNATE ALIEN
follow(binop) = RPAREN
follow(bindings) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN
follow(binding) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RAISE QUERY PREFIXOP PAGE OPEN OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN
follow(attrs) = SLASHRXML RXML
follow(attr_val) = RQUOTE
follow(attr_list) = VARIABLE SLASHRXML RXML LBRACE
follow(attr) = VARIABLE SLASHRXML RXML LBRACE
follow(atomic_expression) = WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE TABLEKEYS STRING SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW POSTFIXOP OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(arrow_prefix) = SQUIGRARROW SQUIGLOLLI RARROW LOLLI
follow(args) = SEMICOLON
follow(arg_spec) = WITH VBAR VALUES TABLEKEYS SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW OTHERWISE ON MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FROM FATRARROW EQUALSTILDE END ELSE DOTDOT DOT DELETE_LEFT DELETE DEFAULT COMMA COLONCOLON COLON CASE BY BARRBRACE BARBAR BANG AS AMPAMP
follow(arg_lists) = SERVER NATIVE LBRACE CLIENT
follow(arg) = VARIABLE UINTEGER UFLOAT TRUE STRING SEMICOLON FALSE CONSTRUCTOR
follow(alien_datatypes) = RBRACE
follow(alien_datatype) = VARIABLE RBRACE
follow(alien_block) = VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRY TRUE TABLE SWITCH STRING SPAWNWAIT SPAWNCLIENT SPAWNAT SPAWNANGELAT SPAWNANGEL SPAWN SIG SHALLOWHANDLER SHALLOWHANDLE SELECT RECEIVE RBRACE RAISE QUERY PREFIXOP PREFIX POSTFIX PAGE OPEN OP OFFER MODULE MINUSDOT MINUS LXML LPAREN LINFUN LENSSELECT LENSPUT LENSJOIN LENSGET LENSDROP LENS LEFTTRIANGLE LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF HANDLER HANDLE FUN FORMLET FOR FALSE ESCAPE END DOOP DELETE DATABASE CONSTRUCTOR CHAR ALIEN #
Built an LR(0) automaton with 1117 states.
The grammar is not SLR(1) -- 9 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 1155 states.
Warning: 2 end-of-stream conflicts were arbitrarily resolved.
481 out of 1155 states have a default reduction.
370 out of 1155 states are represented.
0 out of 374 symbols keep track of their start position.
0 out of 374 symbols keep track of their end position.
331 out of 578 productions exploit shiftreduce optimization.
1927 functions before inlining, 422 functions after inlining.
