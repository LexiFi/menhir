State 0:
## Known stack suffix:
##
## LR(1) items:
xml' -> . xml [ # ]
## Transitions:
-- On LXML shift to state 1
-- On IGNORE shift to state 48
-- On xml_tree shift to state 49
-- On xml shift to state 51
## Reductions:

State 1:
## Known stack suffix:
## LXML
## LR(1) items:
xml_tree -> LXML . SLASHRXML [ # ]
xml_tree -> LXML . RXML ENDTAG [ # ]
xml_tree -> LXML . RXML xml_contents_list ENDTAG [ # ]
xml_tree -> LXML . attrs RXML ENDTAG [ # ]
xml_tree -> LXML . attrs SLASHRXML [ # ]
xml_tree -> LXML . attrs RXML xml_contents_list ENDTAG [ # ]
## Transitions:
-- On VARIABLE shift to state 2
-- On SLASHRXML shift to state 3
-- On RXML shift to state 4
-- On xmlid shift to state 23
-- On attrs shift to state 42
-- On attr_list shift to state 36
-- On attr shift to state 38
## Reductions:

State 2:
## Known stack suffix:
## VARIABLE
## LR(1) items:
xmlid -> VARIABLE . [ EQ ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production xmlid -> VARIABLE

State 3:
## Known stack suffix:
## LXML SLASHRXML
## LR(1) items:
xml_tree -> LXML SLASHRXML . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production xml_tree -> LXML SLASHRXML

State 4:
## Known stack suffix:
## LXML RXML
## LR(1) items:
xml_tree -> LXML RXML . ENDTAG [ # ]
xml_tree -> LXML RXML . xml_contents_list ENDTAG [ # ]
## Transitions:
-- On LXML shift to state 5
-- On LCDATA shift to state 8
-- On IGNORE shift to state 13
-- On ENDTAG shift to state 39
-- On CDATA shift to state 14
-- On xml_tree shift to state 15
-- On xml_contents_list shift to state 40
-- On xml_contents shift to state 17
-- On cdata shift to state 19
## Reductions:

State 5:
## Known stack suffix:
## LXML
## LR(1) items:
xml_tree -> LXML . SLASHRXML [ LXML LCDATA IGNORE ENDTAG CDATA ]
xml_tree -> LXML . RXML ENDTAG [ LXML LCDATA IGNORE ENDTAG CDATA ]
xml_tree -> LXML . RXML xml_contents_list ENDTAG [ LXML LCDATA IGNORE ENDTAG CDATA ]
xml_tree -> LXML . attrs RXML ENDTAG [ LXML LCDATA IGNORE ENDTAG CDATA ]
xml_tree -> LXML . attrs SLASHRXML [ LXML LCDATA IGNORE ENDTAG CDATA ]
xml_tree -> LXML . attrs RXML xml_contents_list ENDTAG [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
-- On VARIABLE shift to state 2
-- On SLASHRXML shift to state 6
-- On RXML shift to state 7
-- On xmlid shift to state 23
-- On attrs shift to state 30
-- On attr_list shift to state 36
-- On attr shift to state 38
## Reductions:

State 6:
## Known stack suffix:
## LXML SLASHRXML
## LR(1) items:
xml_tree -> LXML SLASHRXML . [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production xml_tree -> LXML SLASHRXML

State 7:
## Known stack suffix:
## LXML RXML
## LR(1) items:
xml_tree -> LXML RXML . ENDTAG [ LXML LCDATA IGNORE ENDTAG CDATA ]
xml_tree -> LXML RXML . xml_contents_list ENDTAG [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
-- On LXML shift to state 5
-- On LCDATA shift to state 8
-- On IGNORE shift to state 13
-- On ENDTAG shift to state 20
-- On CDATA shift to state 14
-- On xml_tree shift to state 15
-- On xml_contents_list shift to state 21
-- On xml_contents shift to state 17
-- On cdata shift to state 19
## Reductions:

State 8:
## Known stack suffix:
## LCDATA
## LR(1) items:
cdata -> LCDATA . chars RCDATA [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
-- On CHAR shift to state 9
-- On chars shift to state 11
## Reductions:
-- On RCDATA reduce production chars ->

State 9:
## Known stack suffix:
## CHAR
## LR(1) items:
chars -> CHAR . chars [ RCDATA ]
## Transitions:
-- On CHAR shift to state 9
-- On chars shift to state 10
## Reductions:
-- On RCDATA reduce production chars ->

State 10:
## Known stack suffix:
## CHAR chars
## LR(1) items:
chars -> CHAR chars . [ RCDATA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production chars -> CHAR chars

State 11:
## Known stack suffix:
## LCDATA chars
## LR(1) items:
cdata -> LCDATA chars . RCDATA [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
-- On RCDATA shift to state 12
## Reductions:

State 12:
## Known stack suffix:
## LCDATA chars RCDATA
## LR(1) items:
cdata -> LCDATA chars RCDATA . [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cdata -> LCDATA chars RCDATA

State 13:
## Known stack suffix:
## IGNORE
## LR(1) items:
xml_contents_list -> IGNORE . [ ENDTAG ]
xml_contents_list -> IGNORE . xml_contents_list [ ENDTAG ]
## Transitions:
-- On LXML shift to state 5
-- On LCDATA shift to state 8
-- On IGNORE shift to state 13
-- On CDATA shift to state 14
-- On xml_tree shift to state 15
-- On xml_contents_list shift to state 16
-- On xml_contents shift to state 17
-- On cdata shift to state 19
## Reductions:
-- On ENDTAG reduce production xml_contents_list -> IGNORE

State 14:
## Known stack suffix:
## CDATA
## LR(1) items:
cdata -> CDATA . [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cdata -> CDATA

State 15:
## Known stack suffix:
## xml_tree
## LR(1) items:
xml_contents -> xml_tree . [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production xml_contents -> xml_tree

State 16:
## Known stack suffix:
## IGNORE xml_contents_list
## LR(1) items:
xml_contents_list -> IGNORE xml_contents_list . [ ENDTAG ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production xml_contents_list -> IGNORE xml_contents_list

State 17:
## Known stack suffix:
## xml_contents
## LR(1) items:
xml_contents_list -> xml_contents . [ ENDTAG ]
xml_contents_list -> xml_contents . xml_contents_list [ ENDTAG ]
## Transitions:
-- On LXML shift to state 5
-- On LCDATA shift to state 8
-- On IGNORE shift to state 13
-- On CDATA shift to state 14
-- On xml_tree shift to state 15
-- On xml_contents_list shift to state 18
-- On xml_contents shift to state 17
-- On cdata shift to state 19
## Reductions:
-- On ENDTAG reduce production xml_contents_list -> xml_contents

State 18:
## Known stack suffix:
## xml_contents xml_contents_list
## LR(1) items:
xml_contents_list -> xml_contents xml_contents_list . [ ENDTAG ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production xml_contents_list -> xml_contents xml_contents_list

State 19:
## Known stack suffix:
## cdata
## LR(1) items:
xml_contents -> cdata . [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production xml_contents -> cdata

State 20:
## Known stack suffix:
## LXML RXML ENDTAG
## LR(1) items:
xml_tree -> LXML RXML ENDTAG . [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production xml_tree -> LXML RXML ENDTAG

State 21:
## Known stack suffix:
## LXML RXML xml_contents_list
## LR(1) items:
xml_tree -> LXML RXML xml_contents_list . ENDTAG [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
-- On ENDTAG shift to state 22
## Reductions:

State 22:
## Known stack suffix:
## LXML RXML xml_contents_list ENDTAG
## LR(1) items:
xml_tree -> LXML RXML xml_contents_list ENDTAG . [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG

State 23:
## Known stack suffix:
## xmlid
## LR(1) items:
attr -> xmlid . EQ LQUOTE attr_val RQUOTE [ VARIABLE SLASHRXML RXML ]
attr -> xmlid . EQ LQUOTE RQUOTE [ VARIABLE SLASHRXML RXML ]
## Transitions:
-- On EQ shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## xmlid EQ
## LR(1) items:
attr -> xmlid EQ . LQUOTE attr_val RQUOTE [ VARIABLE SLASHRXML RXML ]
attr -> xmlid EQ . LQUOTE RQUOTE [ VARIABLE SLASHRXML RXML ]
## Transitions:
-- On LQUOTE shift to state 25
## Reductions:

State 25:
## Known stack suffix:
## xmlid EQ LQUOTE
## LR(1) items:
attr -> xmlid EQ LQUOTE . attr_val RQUOTE [ VARIABLE SLASHRXML RXML ]
attr -> xmlid EQ LQUOTE . RQUOTE [ VARIABLE SLASHRXML RXML ]
## Transitions:
-- On STRING shift to state 26
-- On RQUOTE shift to state 27
-- On attr_val shift to state 28
## Reductions:

State 26:
## Known stack suffix:
## STRING
## LR(1) items:
attr_val -> STRING . [ RQUOTE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attr_val -> STRING

State 27:
## Known stack suffix:
## xmlid EQ LQUOTE RQUOTE
## LR(1) items:
attr -> xmlid EQ LQUOTE RQUOTE . [ VARIABLE SLASHRXML RXML ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attr -> xmlid EQ LQUOTE RQUOTE

State 28:
## Known stack suffix:
## xmlid EQ LQUOTE attr_val
## LR(1) items:
attr -> xmlid EQ LQUOTE attr_val . RQUOTE [ VARIABLE SLASHRXML RXML ]
## Transitions:
-- On RQUOTE shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## xmlid EQ LQUOTE attr_val RQUOTE
## LR(1) items:
attr -> xmlid EQ LQUOTE attr_val RQUOTE . [ VARIABLE SLASHRXML RXML ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attr -> xmlid EQ LQUOTE attr_val RQUOTE

State 30:
## Known stack suffix:
## LXML attrs
## LR(1) items:
xml_tree -> LXML attrs . RXML ENDTAG [ LXML LCDATA IGNORE ENDTAG CDATA ]
xml_tree -> LXML attrs . SLASHRXML [ LXML LCDATA IGNORE ENDTAG CDATA ]
xml_tree -> LXML attrs . RXML xml_contents_list ENDTAG [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
-- On SLASHRXML shift to state 31
-- On RXML shift to state 32
## Reductions:

State 31:
## Known stack suffix:
## LXML attrs SLASHRXML
## LR(1) items:
xml_tree -> LXML attrs SLASHRXML . [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production xml_tree -> LXML attrs SLASHRXML

State 32:
## Known stack suffix:
## LXML attrs RXML
## LR(1) items:
xml_tree -> LXML attrs RXML . ENDTAG [ LXML LCDATA IGNORE ENDTAG CDATA ]
xml_tree -> LXML attrs RXML . xml_contents_list ENDTAG [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
-- On LXML shift to state 5
-- On LCDATA shift to state 8
-- On IGNORE shift to state 13
-- On ENDTAG shift to state 33
-- On CDATA shift to state 14
-- On xml_tree shift to state 15
-- On xml_contents_list shift to state 34
-- On xml_contents shift to state 17
-- On cdata shift to state 19
## Reductions:

State 33:
## Known stack suffix:
## LXML attrs RXML ENDTAG
## LR(1) items:
xml_tree -> LXML attrs RXML ENDTAG . [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production xml_tree -> LXML attrs RXML ENDTAG

State 34:
## Known stack suffix:
## LXML attrs RXML xml_contents_list
## LR(1) items:
xml_tree -> LXML attrs RXML xml_contents_list . ENDTAG [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
-- On ENDTAG shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## LXML attrs RXML xml_contents_list ENDTAG
## LR(1) items:
xml_tree -> LXML attrs RXML xml_contents_list ENDTAG . [ LXML LCDATA IGNORE ENDTAG CDATA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG

State 36:
## Known stack suffix:
## attr_list
## LR(1) items:
attr_list -> attr_list . attr [ VARIABLE SLASHRXML RXML ]
attrs -> attr_list . [ SLASHRXML RXML ]
## Transitions:
-- On VARIABLE shift to state 2
-- On xmlid shift to state 23
-- On attr shift to state 37
## Reductions:
-- On SLASHRXML reduce production attrs -> attr_list
-- On RXML reduce production attrs -> attr_list

State 37:
## Known stack suffix:
## attr_list attr
## LR(1) items:
attr_list -> attr_list attr . [ VARIABLE SLASHRXML RXML ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attr_list -> attr_list attr

State 38:
## Known stack suffix:
## attr
## LR(1) items:
attr_list -> attr . [ VARIABLE SLASHRXML RXML ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attr_list -> attr

State 39:
## Known stack suffix:
## LXML RXML ENDTAG
## LR(1) items:
xml_tree -> LXML RXML ENDTAG . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production xml_tree -> LXML RXML ENDTAG

State 40:
## Known stack suffix:
## LXML RXML xml_contents_list
## LR(1) items:
xml_tree -> LXML RXML xml_contents_list . ENDTAG [ # ]
## Transitions:
-- On ENDTAG shift to state 41
## Reductions:

State 41:
## Known stack suffix:
## LXML RXML xml_contents_list ENDTAG
## LR(1) items:
xml_tree -> LXML RXML xml_contents_list ENDTAG . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG

State 42:
## Known stack suffix:
## LXML attrs
## LR(1) items:
xml_tree -> LXML attrs . RXML ENDTAG [ # ]
xml_tree -> LXML attrs . SLASHRXML [ # ]
xml_tree -> LXML attrs . RXML xml_contents_list ENDTAG [ # ]
## Transitions:
-- On SLASHRXML shift to state 43
-- On RXML shift to state 44
## Reductions:

State 43:
## Known stack suffix:
## LXML attrs SLASHRXML
## LR(1) items:
xml_tree -> LXML attrs SLASHRXML . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production xml_tree -> LXML attrs SLASHRXML

State 44:
## Known stack suffix:
## LXML attrs RXML
## LR(1) items:
xml_tree -> LXML attrs RXML . ENDTAG [ # ]
xml_tree -> LXML attrs RXML . xml_contents_list ENDTAG [ # ]
## Transitions:
-- On LXML shift to state 5
-- On LCDATA shift to state 8
-- On IGNORE shift to state 13
-- On ENDTAG shift to state 45
-- On CDATA shift to state 14
-- On xml_tree shift to state 15
-- On xml_contents_list shift to state 46
-- On xml_contents shift to state 17
-- On cdata shift to state 19
## Reductions:

State 45:
## Known stack suffix:
## LXML attrs RXML ENDTAG
## LR(1) items:
xml_tree -> LXML attrs RXML ENDTAG . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production xml_tree -> LXML attrs RXML ENDTAG

State 46:
## Known stack suffix:
## LXML attrs RXML xml_contents_list
## LR(1) items:
xml_tree -> LXML attrs RXML xml_contents_list . ENDTAG [ # ]
## Transitions:
-- On ENDTAG shift to state 47
## Reductions:

State 47:
## Known stack suffix:
## LXML attrs RXML xml_contents_list ENDTAG
## LR(1) items:
xml_tree -> LXML attrs RXML xml_contents_list ENDTAG . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG

State 48:
## Known stack suffix:
## IGNORE
## LR(1) items:
xml -> IGNORE . xml [ # ]
## Transitions:
-- On LXML shift to state 1
-- On IGNORE shift to state 48
-- On xml_tree shift to state 49
-- On xml shift to state 50
## Reductions:

State 49:
## Known stack suffix:
## xml_tree
## LR(1) items:
xml -> xml_tree . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production xml -> xml_tree

State 50:
## Known stack suffix:
## IGNORE xml
## LR(1) items:
xml -> IGNORE xml . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production xml -> IGNORE xml

State 51:
## Known stack suffix:
## xml
## LR(1) items:
xml' -> xml . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept xml

