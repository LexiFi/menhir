State 0:
file' -> . file [ # ]
-- On INCLUDE shift to state 1
-- On preamble_declaration shift to state 3
-- On preamble shift to state 5
-- On file shift to state 797
-- On VARIABLE reduce production preamble -> 
-- On VAR reduce production preamble -> 
-- On UPDATE reduce production preamble -> 
-- On UINTEGER reduce production preamble -> 
-- On UFLOAT reduce production preamble -> 
-- On TYPENAME reduce production preamble -> 
-- On TRUE reduce production preamble -> 
-- On TABLE reduce production preamble -> 
-- On SWITCH reduce production preamble -> 
-- On STRING reduce production preamble -> 
-- On SPAWNWAIT reduce production preamble -> 
-- On SPAWN reduce production preamble -> 
-- On SIG reduce production preamble -> 
-- On RECEIVE reduce production preamble -> 
-- On QUERY reduce production preamble -> 
-- On PREFIXOP reduce production preamble -> 
-- On PREFIX reduce production preamble -> 
-- On POSTFIX reduce production preamble -> 
-- On PAGE reduce production preamble -> 
-- On OP reduce production preamble -> 
-- On MINUSDOT reduce production preamble -> 
-- On MINUS reduce production preamble -> 
-- On LXML reduce production preamble -> 
-- On LPAREN reduce production preamble -> 
-- On LBRACKET reduce production preamble -> 
-- On LBRACE reduce production preamble -> 
-- On INSERT reduce production preamble -> 
-- On INFIXR reduce production preamble -> 
-- On INFIXL reduce production preamble -> 
-- On INFIX reduce production preamble -> 
-- On IF reduce production preamble -> 
-- On FUN reduce production preamble -> 
-- On FORMLET reduce production preamble -> 
-- On FOR reduce production preamble -> 
-- On FALSE reduce production preamble -> 
-- On ESCAPE reduce production preamble -> 
-- On DELETE reduce production preamble -> 
-- On DATABASE reduce production preamble -> 
-- On CONSTRUCTOR reduce production preamble -> 
-- On CHAR reduce production preamble -> 
-- On ALIEN reduce production preamble -> 

State 1:
preamble_declaration -> INCLUDE . STRING [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX INCLUDE IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On STRING shift to state 2

State 2:
preamble_declaration -> INCLUDE STRING . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX INCLUDE IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production preamble_declaration -> INCLUDE STRING
-- On VAR reduce production preamble_declaration -> INCLUDE STRING
-- On UPDATE reduce production preamble_declaration -> INCLUDE STRING
-- On UINTEGER reduce production preamble_declaration -> INCLUDE STRING
-- On UFLOAT reduce production preamble_declaration -> INCLUDE STRING
-- On TYPENAME reduce production preamble_declaration -> INCLUDE STRING
-- On TRUE reduce production preamble_declaration -> INCLUDE STRING
-- On TABLE reduce production preamble_declaration -> INCLUDE STRING
-- On SWITCH reduce production preamble_declaration -> INCLUDE STRING
-- On STRING reduce production preamble_declaration -> INCLUDE STRING
-- On SPAWNWAIT reduce production preamble_declaration -> INCLUDE STRING
-- On SPAWN reduce production preamble_declaration -> INCLUDE STRING
-- On SIG reduce production preamble_declaration -> INCLUDE STRING
-- On RECEIVE reduce production preamble_declaration -> INCLUDE STRING
-- On QUERY reduce production preamble_declaration -> INCLUDE STRING
-- On PREFIXOP reduce production preamble_declaration -> INCLUDE STRING
-- On PREFIX reduce production preamble_declaration -> INCLUDE STRING
-- On POSTFIX reduce production preamble_declaration -> INCLUDE STRING
-- On PAGE reduce production preamble_declaration -> INCLUDE STRING
-- On OP reduce production preamble_declaration -> INCLUDE STRING
-- On MINUSDOT reduce production preamble_declaration -> INCLUDE STRING
-- On MINUS reduce production preamble_declaration -> INCLUDE STRING
-- On LXML reduce production preamble_declaration -> INCLUDE STRING
-- On LPAREN reduce production preamble_declaration -> INCLUDE STRING
-- On LBRACKET reduce production preamble_declaration -> INCLUDE STRING
-- On LBRACE reduce production preamble_declaration -> INCLUDE STRING
-- On INSERT reduce production preamble_declaration -> INCLUDE STRING
-- On INFIXR reduce production preamble_declaration -> INCLUDE STRING
-- On INFIXL reduce production preamble_declaration -> INCLUDE STRING
-- On INFIX reduce production preamble_declaration -> INCLUDE STRING
-- On INCLUDE reduce production preamble_declaration -> INCLUDE STRING
-- On IF reduce production preamble_declaration -> INCLUDE STRING
-- On FUN reduce production preamble_declaration -> INCLUDE STRING
-- On FORMLET reduce production preamble_declaration -> INCLUDE STRING
-- On FOR reduce production preamble_declaration -> INCLUDE STRING
-- On FALSE reduce production preamble_declaration -> INCLUDE STRING
-- On ESCAPE reduce production preamble_declaration -> INCLUDE STRING
-- On DELETE reduce production preamble_declaration -> INCLUDE STRING
-- On DATABASE reduce production preamble_declaration -> INCLUDE STRING
-- On CONSTRUCTOR reduce production preamble_declaration -> INCLUDE STRING
-- On CHAR reduce production preamble_declaration -> INCLUDE STRING
-- On ALIEN reduce production preamble_declaration -> INCLUDE STRING

State 3:
preamble -> preamble_declaration . preamble [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On INCLUDE shift to state 1
-- On preamble_declaration shift to state 3
-- On preamble shift to state 4
-- On VARIABLE reduce production preamble -> 
-- On VAR reduce production preamble -> 
-- On UPDATE reduce production preamble -> 
-- On UINTEGER reduce production preamble -> 
-- On UFLOAT reduce production preamble -> 
-- On TYPENAME reduce production preamble -> 
-- On TRUE reduce production preamble -> 
-- On TABLE reduce production preamble -> 
-- On SWITCH reduce production preamble -> 
-- On STRING reduce production preamble -> 
-- On SPAWNWAIT reduce production preamble -> 
-- On SPAWN reduce production preamble -> 
-- On SIG reduce production preamble -> 
-- On RECEIVE reduce production preamble -> 
-- On QUERY reduce production preamble -> 
-- On PREFIXOP reduce production preamble -> 
-- On PREFIX reduce production preamble -> 
-- On POSTFIX reduce production preamble -> 
-- On PAGE reduce production preamble -> 
-- On OP reduce production preamble -> 
-- On MINUSDOT reduce production preamble -> 
-- On MINUS reduce production preamble -> 
-- On LXML reduce production preamble -> 
-- On LPAREN reduce production preamble -> 
-- On LBRACKET reduce production preamble -> 
-- On LBRACE reduce production preamble -> 
-- On INSERT reduce production preamble -> 
-- On INFIXR reduce production preamble -> 
-- On INFIXL reduce production preamble -> 
-- On INFIX reduce production preamble -> 
-- On IF reduce production preamble -> 
-- On FUN reduce production preamble -> 
-- On FORMLET reduce production preamble -> 
-- On FOR reduce production preamble -> 
-- On FALSE reduce production preamble -> 
-- On ESCAPE reduce production preamble -> 
-- On DELETE reduce production preamble -> 
-- On DATABASE reduce production preamble -> 
-- On CONSTRUCTOR reduce production preamble -> 
-- On CHAR reduce production preamble -> 
-- On ALIEN reduce production preamble -> 

State 4:
preamble -> preamble_declaration preamble . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production preamble -> preamble_declaration preamble
-- On VAR reduce production preamble -> preamble_declaration preamble
-- On UPDATE reduce production preamble -> preamble_declaration preamble
-- On UINTEGER reduce production preamble -> preamble_declaration preamble
-- On UFLOAT reduce production preamble -> preamble_declaration preamble
-- On TYPENAME reduce production preamble -> preamble_declaration preamble
-- On TRUE reduce production preamble -> preamble_declaration preamble
-- On TABLE reduce production preamble -> preamble_declaration preamble
-- On SWITCH reduce production preamble -> preamble_declaration preamble
-- On STRING reduce production preamble -> preamble_declaration preamble
-- On SPAWNWAIT reduce production preamble -> preamble_declaration preamble
-- On SPAWN reduce production preamble -> preamble_declaration preamble
-- On SIG reduce production preamble -> preamble_declaration preamble
-- On RECEIVE reduce production preamble -> preamble_declaration preamble
-- On QUERY reduce production preamble -> preamble_declaration preamble
-- On PREFIXOP reduce production preamble -> preamble_declaration preamble
-- On PREFIX reduce production preamble -> preamble_declaration preamble
-- On POSTFIX reduce production preamble -> preamble_declaration preamble
-- On PAGE reduce production preamble -> preamble_declaration preamble
-- On OP reduce production preamble -> preamble_declaration preamble
-- On MINUSDOT reduce production preamble -> preamble_declaration preamble
-- On MINUS reduce production preamble -> preamble_declaration preamble
-- On LXML reduce production preamble -> preamble_declaration preamble
-- On LPAREN reduce production preamble -> preamble_declaration preamble
-- On LBRACKET reduce production preamble -> preamble_declaration preamble
-- On LBRACE reduce production preamble -> preamble_declaration preamble
-- On INSERT reduce production preamble -> preamble_declaration preamble
-- On INFIXR reduce production preamble -> preamble_declaration preamble
-- On INFIXL reduce production preamble -> preamble_declaration preamble
-- On INFIX reduce production preamble -> preamble_declaration preamble
-- On IF reduce production preamble -> preamble_declaration preamble
-- On FUN reduce production preamble -> preamble_declaration preamble
-- On FORMLET reduce production preamble -> preamble_declaration preamble
-- On FOR reduce production preamble -> preamble_declaration preamble
-- On FALSE reduce production preamble -> preamble_declaration preamble
-- On ESCAPE reduce production preamble -> preamble_declaration preamble
-- On DELETE reduce production preamble -> preamble_declaration preamble
-- On DATABASE reduce production preamble -> preamble_declaration preamble
-- On CONSTRUCTOR reduce production preamble -> preamble_declaration preamble
-- On CHAR reduce production preamble -> preamble_declaration preamble
-- On ALIEN reduce production preamble -> preamble_declaration preamble

State 5:
file -> preamble . declarations exp END [ # ]
file -> preamble . exp END [ # ]
file -> preamble . declarations END [ # ]
-- On VARIABLE shift to state 6
-- On VAR shift to state 7
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TYPENAME shift to state 289
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On SIG shift to state 734
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PREFIX shift to state 741
-- On POSTFIX shift to state 742
-- On PAGE shift to state 308
-- On OP shift to state 743
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On INFIXR shift to state 758
-- On INFIXL shift to state 759
-- On INFIX shift to state 760
-- On IF shift to state 318
-- On FUN shift to state 761
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On ALIEN shift to state 766
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typedecl shift to state 772
-- On typed_expression shift to state 378
-- On tlvarbinding shift to state 774
-- On tlfunbinding shift to state 776
-- On table_expression shift to state 383
-- On signature shift to state 777
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On nofun_declaration shift to state 782
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On fun_declaration shift to state 783
-- On formlet_expression shift to state 506
-- On fixity shift to state 784
-- On exp shift to state 789
-- On escape_expression shift to state 508
-- On declarations shift to state 791
-- On declaration shift to state 796
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 6:
atomic_expression -> VARIABLE . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production atomic_expression -> VARIABLE
-- On VBAR reduce production atomic_expression -> VARIABLE
-- On VARIABLE reduce production atomic_expression -> VARIABLE
-- On VALUES reduce production atomic_expression -> VARIABLE
-- On UINTEGER reduce production atomic_expression -> VARIABLE
-- On UFLOAT reduce production atomic_expression -> VARIABLE
-- On TRUE reduce production atomic_expression -> VARIABLE
-- On STRING reduce production atomic_expression -> VARIABLE
-- On SEMICOLON reduce production atomic_expression -> VARIABLE
-- On RPAREN reduce production atomic_expression -> VARIABLE
-- On RETURNING reduce production atomic_expression -> VARIABLE
-- On RBRACKET reduce production atomic_expression -> VARIABLE
-- On RBRACE reduce production atomic_expression -> VARIABLE
-- On RARROW reduce production atomic_expression -> VARIABLE
-- On POSTFIXOP reduce production atomic_expression -> VARIABLE
-- On MINUSDOT reduce production atomic_expression -> VARIABLE
-- On MINUS reduce production atomic_expression -> VARIABLE
-- On LPAREN reduce production atomic_expression -> VARIABLE
-- On INFIXR9 reduce production atomic_expression -> VARIABLE
-- On INFIXR8 reduce production atomic_expression -> VARIABLE
-- On INFIXR7 reduce production atomic_expression -> VARIABLE
-- On INFIXR6 reduce production atomic_expression -> VARIABLE
-- On INFIXR5 reduce production atomic_expression -> VARIABLE
-- On INFIXR4 reduce production atomic_expression -> VARIABLE
-- On INFIXR3 reduce production atomic_expression -> VARIABLE
-- On INFIXR2 reduce production atomic_expression -> VARIABLE
-- On INFIXR1 reduce production atomic_expression -> VARIABLE
-- On INFIXR0 reduce production atomic_expression -> VARIABLE
-- On INFIXL9 reduce production atomic_expression -> VARIABLE
-- On INFIXL8 reduce production atomic_expression -> VARIABLE
-- On INFIXL7 reduce production atomic_expression -> VARIABLE
-- On INFIXL6 reduce production atomic_expression -> VARIABLE
-- On INFIXL5 reduce production atomic_expression -> VARIABLE
-- On INFIXL4 reduce production atomic_expression -> VARIABLE
-- On INFIXL3 reduce production atomic_expression -> VARIABLE
-- On INFIXL2 reduce production atomic_expression -> VARIABLE
-- On INFIXL1 reduce production atomic_expression -> VARIABLE
-- On INFIXL0 reduce production atomic_expression -> VARIABLE
-- On INFIX9 reduce production atomic_expression -> VARIABLE
-- On INFIX8 reduce production atomic_expression -> VARIABLE
-- On INFIX7 reduce production atomic_expression -> VARIABLE
-- On INFIX6 reduce production atomic_expression -> VARIABLE
-- On INFIX5 reduce production atomic_expression -> VARIABLE
-- On INFIX4 reduce production atomic_expression -> VARIABLE
-- On INFIX3 reduce production atomic_expression -> VARIABLE
-- On INFIX2 reduce production atomic_expression -> VARIABLE
-- On INFIX1 reduce production atomic_expression -> VARIABLE
-- On INFIX0 reduce production atomic_expression -> VARIABLE
-- On FATRARROW reduce production atomic_expression -> VARIABLE
-- On FALSE reduce production atomic_expression -> VARIABLE
-- On EQUALSTILDE reduce production atomic_expression -> VARIABLE
-- On END reduce production atomic_expression -> VARIABLE
-- On ELSE reduce production atomic_expression -> VARIABLE
-- On DOTDOT reduce production atomic_expression -> VARIABLE
-- On DOT reduce production atomic_expression -> VARIABLE
-- On COMMA reduce production atomic_expression -> VARIABLE
-- On COLONCOLON reduce production atomic_expression -> VARIABLE
-- On COLON reduce production atomic_expression -> VARIABLE
-- On CHAR reduce production atomic_expression -> VARIABLE
-- On CASE reduce production atomic_expression -> VARIABLE
-- On BARRBRACE reduce production atomic_expression -> VARIABLE
-- On BARBAR reduce production atomic_expression -> VARIABLE
-- On AMPAMP reduce production atomic_expression -> VARIABLE

State 7:
tlvarbinding -> VAR . var perhaps_location EQ exp [ SEMICOLON ]
-- On VARIABLE shift to state 8
-- On var shift to state 9

State 8:
var -> VARIABLE . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LPAREN LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 IN EQ COMMA COLON CLIENT ]
-- On VBAR reduce production var -> VARIABLE
-- On SERVER reduce production var -> VARIABLE
-- On RPAREN reduce production var -> VARIABLE
-- On RBRACKET reduce production var -> VARIABLE
-- On RBRACE reduce production var -> VARIABLE
-- On RARROW reduce production var -> VARIABLE
-- On POSTFIXOP reduce production var -> VARIABLE
-- On NATIVE reduce production var -> VARIABLE
-- On LPAREN reduce production var -> VARIABLE
-- On LLARROW reduce production var -> VARIABLE
-- On LBRACE reduce production var -> VARIABLE
-- On LARROW reduce production var -> VARIABLE
-- On INFIXR9 reduce production var -> VARIABLE
-- On INFIXR8 reduce production var -> VARIABLE
-- On INFIXR7 reduce production var -> VARIABLE
-- On INFIXR6 reduce production var -> VARIABLE
-- On INFIXR5 reduce production var -> VARIABLE
-- On INFIXR4 reduce production var -> VARIABLE
-- On INFIXR3 reduce production var -> VARIABLE
-- On INFIXR2 reduce production var -> VARIABLE
-- On INFIXR1 reduce production var -> VARIABLE
-- On INFIXR0 reduce production var -> VARIABLE
-- On INFIXL9 reduce production var -> VARIABLE
-- On INFIXL8 reduce production var -> VARIABLE
-- On INFIXL7 reduce production var -> VARIABLE
-- On INFIXL6 reduce production var -> VARIABLE
-- On INFIXL5 reduce production var -> VARIABLE
-- On INFIXL4 reduce production var -> VARIABLE
-- On INFIXL3 reduce production var -> VARIABLE
-- On INFIXL2 reduce production var -> VARIABLE
-- On INFIXL1 reduce production var -> VARIABLE
-- On INFIXL0 reduce production var -> VARIABLE
-- On INFIX9 reduce production var -> VARIABLE
-- On INFIX8 reduce production var -> VARIABLE
-- On INFIX7 reduce production var -> VARIABLE
-- On INFIX6 reduce production var -> VARIABLE
-- On INFIX5 reduce production var -> VARIABLE
-- On INFIX4 reduce production var -> VARIABLE
-- On INFIX3 reduce production var -> VARIABLE
-- On INFIX2 reduce production var -> VARIABLE
-- On INFIX1 reduce production var -> VARIABLE
-- On INFIX0 reduce production var -> VARIABLE
-- On IN reduce production var -> VARIABLE
-- On EQ reduce production var -> VARIABLE
-- On COMMA reduce production var -> VARIABLE
-- On COLON reduce production var -> VARIABLE
-- On CLIENT reduce production var -> VARIABLE

State 9:
tlvarbinding -> VAR var . perhaps_location EQ exp [ SEMICOLON ]
-- On SERVER shift to state 10
-- On NATIVE shift to state 11
-- On CLIENT shift to state 12
-- On perhaps_location shift to state 13
-- On EQ reduce production perhaps_location -> 

State 10:
perhaps_location -> SERVER . [ LBRACE EQ ]
-- On LBRACE reduce production perhaps_location -> SERVER
-- On EQ reduce production perhaps_location -> SERVER

State 11:
perhaps_location -> NATIVE . [ LBRACE EQ ]
-- On LBRACE reduce production perhaps_location -> NATIVE
-- On EQ reduce production perhaps_location -> NATIVE

State 12:
perhaps_location -> CLIENT . [ LBRACE EQ ]
-- On LBRACE reduce production perhaps_location -> CLIENT
-- On EQ reduce production perhaps_location -> CLIENT

State 13:
tlvarbinding -> VAR var perhaps_location . EQ exp [ SEMICOLON ]
-- On EQ shift to state 14

State 14:
tlvarbinding -> VAR var perhaps_location EQ . exp [ SEMICOLON ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 733
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 15:
db_expression -> UPDATE . LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On LPAREN shift to state 16

State 16:
db_expression -> UPDATE LPAREN . table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 17
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 39
-- On CHAR shift to state 41
-- On typed_pattern shift to state 42
-- On table_generator shift to state 270
-- On primary_pattern shift to state 239
-- On pattern shift to state 354
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 251

State 17:
primary_pattern -> VARIABLE . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production primary_pattern -> VARIABLE
-- On SERVER reduce production primary_pattern -> VARIABLE
-- On RPAREN reduce production primary_pattern -> VARIABLE
-- On RBRACKET reduce production primary_pattern -> VARIABLE
-- On RBRACE reduce production primary_pattern -> VARIABLE
-- On RARROW reduce production primary_pattern -> VARIABLE
-- On POSTFIXOP reduce production primary_pattern -> VARIABLE
-- On NATIVE reduce production primary_pattern -> VARIABLE
-- On LLARROW reduce production primary_pattern -> VARIABLE
-- On LBRACE reduce production primary_pattern -> VARIABLE
-- On LARROW reduce production primary_pattern -> VARIABLE
-- On INFIXR9 reduce production primary_pattern -> VARIABLE
-- On INFIXR8 reduce production primary_pattern -> VARIABLE
-- On INFIXR7 reduce production primary_pattern -> VARIABLE
-- On INFIXR6 reduce production primary_pattern -> VARIABLE
-- On INFIXR5 reduce production primary_pattern -> VARIABLE
-- On INFIXR4 reduce production primary_pattern -> VARIABLE
-- On INFIXR3 reduce production primary_pattern -> VARIABLE
-- On INFIXR2 reduce production primary_pattern -> VARIABLE
-- On INFIXR1 reduce production primary_pattern -> VARIABLE
-- On INFIXR0 reduce production primary_pattern -> VARIABLE
-- On INFIXL9 reduce production primary_pattern -> VARIABLE
-- On INFIXL8 reduce production primary_pattern -> VARIABLE
-- On INFIXL7 reduce production primary_pattern -> VARIABLE
-- On INFIXL6 reduce production primary_pattern -> VARIABLE
-- On INFIXL5 reduce production primary_pattern -> VARIABLE
-- On INFIXL4 reduce production primary_pattern -> VARIABLE
-- On INFIXL3 reduce production primary_pattern -> VARIABLE
-- On INFIXL2 reduce production primary_pattern -> VARIABLE
-- On INFIXL1 reduce production primary_pattern -> VARIABLE
-- On INFIXL0 reduce production primary_pattern -> VARIABLE
-- On INFIX9 reduce production primary_pattern -> VARIABLE
-- On INFIX8 reduce production primary_pattern -> VARIABLE
-- On INFIX7 reduce production primary_pattern -> VARIABLE
-- On INFIX6 reduce production primary_pattern -> VARIABLE
-- On INFIX5 reduce production primary_pattern -> VARIABLE
-- On INFIX4 reduce production primary_pattern -> VARIABLE
-- On INFIX3 reduce production primary_pattern -> VARIABLE
-- On INFIX2 reduce production primary_pattern -> VARIABLE
-- On INFIX1 reduce production primary_pattern -> VARIABLE
-- On INFIX0 reduce production primary_pattern -> VARIABLE
-- On EQ reduce production primary_pattern -> VARIABLE
-- On COMMA reduce production primary_pattern -> VARIABLE
-- On COLONCOLON reduce production primary_pattern -> VARIABLE
-- On COLON reduce production primary_pattern -> VARIABLE
-- On CLIENT reduce production primary_pattern -> VARIABLE
-- On AS reduce production primary_pattern -> VARIABLE

State 18:
primary_pattern -> UNDERSCORE . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production primary_pattern -> UNDERSCORE
-- On SERVER reduce production primary_pattern -> UNDERSCORE
-- On RPAREN reduce production primary_pattern -> UNDERSCORE
-- On RBRACKET reduce production primary_pattern -> UNDERSCORE
-- On RBRACE reduce production primary_pattern -> UNDERSCORE
-- On RARROW reduce production primary_pattern -> UNDERSCORE
-- On POSTFIXOP reduce production primary_pattern -> UNDERSCORE
-- On NATIVE reduce production primary_pattern -> UNDERSCORE
-- On LLARROW reduce production primary_pattern -> UNDERSCORE
-- On LBRACE reduce production primary_pattern -> UNDERSCORE
-- On LARROW reduce production primary_pattern -> UNDERSCORE
-- On INFIXR9 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR8 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR7 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR6 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR5 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR4 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR3 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR2 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR1 reduce production primary_pattern -> UNDERSCORE
-- On INFIXR0 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL9 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL8 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL7 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL6 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL5 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL4 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL3 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL2 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL1 reduce production primary_pattern -> UNDERSCORE
-- On INFIXL0 reduce production primary_pattern -> UNDERSCORE
-- On INFIX9 reduce production primary_pattern -> UNDERSCORE
-- On INFIX8 reduce production primary_pattern -> UNDERSCORE
-- On INFIX7 reduce production primary_pattern -> UNDERSCORE
-- On INFIX6 reduce production primary_pattern -> UNDERSCORE
-- On INFIX5 reduce production primary_pattern -> UNDERSCORE
-- On INFIX4 reduce production primary_pattern -> UNDERSCORE
-- On INFIX3 reduce production primary_pattern -> UNDERSCORE
-- On INFIX2 reduce production primary_pattern -> UNDERSCORE
-- On INFIX1 reduce production primary_pattern -> UNDERSCORE
-- On INFIX0 reduce production primary_pattern -> UNDERSCORE
-- On EQ reduce production primary_pattern -> UNDERSCORE
-- On COMMA reduce production primary_pattern -> UNDERSCORE
-- On COLONCOLON reduce production primary_pattern -> UNDERSCORE
-- On COLON reduce production primary_pattern -> UNDERSCORE
-- On CLIENT reduce production primary_pattern -> UNDERSCORE
-- On AS reduce production primary_pattern -> UNDERSCORE

State 19:
constant -> UINTEGER . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP NATIVE MINUSDOT MINUS LPAREN LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE EQ END ELSE DOTDOT DOT COMMA COLONCOLON COLON CLIENT CHAR CASE BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production constant -> UINTEGER
-- On VBAR reduce production constant -> UINTEGER
-- On VARIABLE reduce production constant -> UINTEGER
-- On VALUES reduce production constant -> UINTEGER
-- On UINTEGER reduce production constant -> UINTEGER
-- On UFLOAT reduce production constant -> UINTEGER
-- On TRUE reduce production constant -> UINTEGER
-- On STRING reduce production constant -> UINTEGER
-- On SERVER reduce production constant -> UINTEGER
-- On SEMICOLON reduce production constant -> UINTEGER
-- On RPAREN reduce production constant -> UINTEGER
-- On RETURNING reduce production constant -> UINTEGER
-- On RBRACKET reduce production constant -> UINTEGER
-- On RBRACE reduce production constant -> UINTEGER
-- On RARROW reduce production constant -> UINTEGER
-- On POSTFIXOP reduce production constant -> UINTEGER
-- On NATIVE reduce production constant -> UINTEGER
-- On MINUSDOT reduce production constant -> UINTEGER
-- On MINUS reduce production constant -> UINTEGER
-- On LPAREN reduce production constant -> UINTEGER
-- On LLARROW reduce production constant -> UINTEGER
-- On LBRACE reduce production constant -> UINTEGER
-- On LARROW reduce production constant -> UINTEGER
-- On INFIXR9 reduce production constant -> UINTEGER
-- On INFIXR8 reduce production constant -> UINTEGER
-- On INFIXR7 reduce production constant -> UINTEGER
-- On INFIXR6 reduce production constant -> UINTEGER
-- On INFIXR5 reduce production constant -> UINTEGER
-- On INFIXR4 reduce production constant -> UINTEGER
-- On INFIXR3 reduce production constant -> UINTEGER
-- On INFIXR2 reduce production constant -> UINTEGER
-- On INFIXR1 reduce production constant -> UINTEGER
-- On INFIXR0 reduce production constant -> UINTEGER
-- On INFIXL9 reduce production constant -> UINTEGER
-- On INFIXL8 reduce production constant -> UINTEGER
-- On INFIXL7 reduce production constant -> UINTEGER
-- On INFIXL6 reduce production constant -> UINTEGER
-- On INFIXL5 reduce production constant -> UINTEGER
-- On INFIXL4 reduce production constant -> UINTEGER
-- On INFIXL3 reduce production constant -> UINTEGER
-- On INFIXL2 reduce production constant -> UINTEGER
-- On INFIXL1 reduce production constant -> UINTEGER
-- On INFIXL0 reduce production constant -> UINTEGER
-- On INFIX9 reduce production constant -> UINTEGER
-- On INFIX8 reduce production constant -> UINTEGER
-- On INFIX7 reduce production constant -> UINTEGER
-- On INFIX6 reduce production constant -> UINTEGER
-- On INFIX5 reduce production constant -> UINTEGER
-- On INFIX4 reduce production constant -> UINTEGER
-- On INFIX3 reduce production constant -> UINTEGER
-- On INFIX2 reduce production constant -> UINTEGER
-- On INFIX1 reduce production constant -> UINTEGER
-- On INFIX0 reduce production constant -> UINTEGER
-- On FATRARROW reduce production constant -> UINTEGER
-- On FALSE reduce production constant -> UINTEGER
-- On EQUALSTILDE reduce production constant -> UINTEGER
-- On EQ reduce production constant -> UINTEGER
-- On END reduce production constant -> UINTEGER
-- On ELSE reduce production constant -> UINTEGER
-- On DOTDOT reduce production constant -> UINTEGER
-- On DOT reduce production constant -> UINTEGER
-- On COMMA reduce production constant -> UINTEGER
-- On COLONCOLON reduce production constant -> UINTEGER
-- On COLON reduce production constant -> UINTEGER
-- On CLIENT reduce production constant -> UINTEGER
-- On CHAR reduce production constant -> UINTEGER
-- On CASE reduce production constant -> UINTEGER
-- On BARRBRACE reduce production constant -> UINTEGER
-- On BARBAR reduce production constant -> UINTEGER
-- On AS reduce production constant -> UINTEGER
-- On AMPAMP reduce production constant -> UINTEGER

State 20:
constant -> UFLOAT . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP NATIVE MINUSDOT MINUS LPAREN LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE EQ END ELSE DOTDOT DOT COMMA COLONCOLON COLON CLIENT CHAR CASE BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production constant -> UFLOAT
-- On VBAR reduce production constant -> UFLOAT
-- On VARIABLE reduce production constant -> UFLOAT
-- On VALUES reduce production constant -> UFLOAT
-- On UINTEGER reduce production constant -> UFLOAT
-- On UFLOAT reduce production constant -> UFLOAT
-- On TRUE reduce production constant -> UFLOAT
-- On STRING reduce production constant -> UFLOAT
-- On SERVER reduce production constant -> UFLOAT
-- On SEMICOLON reduce production constant -> UFLOAT
-- On RPAREN reduce production constant -> UFLOAT
-- On RETURNING reduce production constant -> UFLOAT
-- On RBRACKET reduce production constant -> UFLOAT
-- On RBRACE reduce production constant -> UFLOAT
-- On RARROW reduce production constant -> UFLOAT
-- On POSTFIXOP reduce production constant -> UFLOAT
-- On NATIVE reduce production constant -> UFLOAT
-- On MINUSDOT reduce production constant -> UFLOAT
-- On MINUS reduce production constant -> UFLOAT
-- On LPAREN reduce production constant -> UFLOAT
-- On LLARROW reduce production constant -> UFLOAT
-- On LBRACE reduce production constant -> UFLOAT
-- On LARROW reduce production constant -> UFLOAT
-- On INFIXR9 reduce production constant -> UFLOAT
-- On INFIXR8 reduce production constant -> UFLOAT
-- On INFIXR7 reduce production constant -> UFLOAT
-- On INFIXR6 reduce production constant -> UFLOAT
-- On INFIXR5 reduce production constant -> UFLOAT
-- On INFIXR4 reduce production constant -> UFLOAT
-- On INFIXR3 reduce production constant -> UFLOAT
-- On INFIXR2 reduce production constant -> UFLOAT
-- On INFIXR1 reduce production constant -> UFLOAT
-- On INFIXR0 reduce production constant -> UFLOAT
-- On INFIXL9 reduce production constant -> UFLOAT
-- On INFIXL8 reduce production constant -> UFLOAT
-- On INFIXL7 reduce production constant -> UFLOAT
-- On INFIXL6 reduce production constant -> UFLOAT
-- On INFIXL5 reduce production constant -> UFLOAT
-- On INFIXL4 reduce production constant -> UFLOAT
-- On INFIXL3 reduce production constant -> UFLOAT
-- On INFIXL2 reduce production constant -> UFLOAT
-- On INFIXL1 reduce production constant -> UFLOAT
-- On INFIXL0 reduce production constant -> UFLOAT
-- On INFIX9 reduce production constant -> UFLOAT
-- On INFIX8 reduce production constant -> UFLOAT
-- On INFIX7 reduce production constant -> UFLOAT
-- On INFIX6 reduce production constant -> UFLOAT
-- On INFIX5 reduce production constant -> UFLOAT
-- On INFIX4 reduce production constant -> UFLOAT
-- On INFIX3 reduce production constant -> UFLOAT
-- On INFIX2 reduce production constant -> UFLOAT
-- On INFIX1 reduce production constant -> UFLOAT
-- On INFIX0 reduce production constant -> UFLOAT
-- On FATRARROW reduce production constant -> UFLOAT
-- On FALSE reduce production constant -> UFLOAT
-- On EQUALSTILDE reduce production constant -> UFLOAT
-- On EQ reduce production constant -> UFLOAT
-- On END reduce production constant -> UFLOAT
-- On ELSE reduce production constant -> UFLOAT
-- On DOTDOT reduce production constant -> UFLOAT
-- On DOT reduce production constant -> UFLOAT
-- On COMMA reduce production constant -> UFLOAT
-- On COLONCOLON reduce production constant -> UFLOAT
-- On COLON reduce production constant -> UFLOAT
-- On CLIENT reduce production constant -> UFLOAT
-- On CHAR reduce production constant -> UFLOAT
-- On CASE reduce production constant -> UFLOAT
-- On BARRBRACE reduce production constant -> UFLOAT
-- On BARBAR reduce production constant -> UFLOAT
-- On AS reduce production constant -> UFLOAT
-- On AMPAMP reduce production constant -> UFLOAT

State 21:
constant -> TRUE . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP NATIVE MINUSDOT MINUS LPAREN LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE EQ END ELSE DOTDOT DOT COMMA COLONCOLON COLON CLIENT CHAR CASE BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production constant -> TRUE
-- On VBAR reduce production constant -> TRUE
-- On VARIABLE reduce production constant -> TRUE
-- On VALUES reduce production constant -> TRUE
-- On UINTEGER reduce production constant -> TRUE
-- On UFLOAT reduce production constant -> TRUE
-- On TRUE reduce production constant -> TRUE
-- On STRING reduce production constant -> TRUE
-- On SERVER reduce production constant -> TRUE
-- On SEMICOLON reduce production constant -> TRUE
-- On RPAREN reduce production constant -> TRUE
-- On RETURNING reduce production constant -> TRUE
-- On RBRACKET reduce production constant -> TRUE
-- On RBRACE reduce production constant -> TRUE
-- On RARROW reduce production constant -> TRUE
-- On POSTFIXOP reduce production constant -> TRUE
-- On NATIVE reduce production constant -> TRUE
-- On MINUSDOT reduce production constant -> TRUE
-- On MINUS reduce production constant -> TRUE
-- On LPAREN reduce production constant -> TRUE
-- On LLARROW reduce production constant -> TRUE
-- On LBRACE reduce production constant -> TRUE
-- On LARROW reduce production constant -> TRUE
-- On INFIXR9 reduce production constant -> TRUE
-- On INFIXR8 reduce production constant -> TRUE
-- On INFIXR7 reduce production constant -> TRUE
-- On INFIXR6 reduce production constant -> TRUE
-- On INFIXR5 reduce production constant -> TRUE
-- On INFIXR4 reduce production constant -> TRUE
-- On INFIXR3 reduce production constant -> TRUE
-- On INFIXR2 reduce production constant -> TRUE
-- On INFIXR1 reduce production constant -> TRUE
-- On INFIXR0 reduce production constant -> TRUE
-- On INFIXL9 reduce production constant -> TRUE
-- On INFIXL8 reduce production constant -> TRUE
-- On INFIXL7 reduce production constant -> TRUE
-- On INFIXL6 reduce production constant -> TRUE
-- On INFIXL5 reduce production constant -> TRUE
-- On INFIXL4 reduce production constant -> TRUE
-- On INFIXL3 reduce production constant -> TRUE
-- On INFIXL2 reduce production constant -> TRUE
-- On INFIXL1 reduce production constant -> TRUE
-- On INFIXL0 reduce production constant -> TRUE
-- On INFIX9 reduce production constant -> TRUE
-- On INFIX8 reduce production constant -> TRUE
-- On INFIX7 reduce production constant -> TRUE
-- On INFIX6 reduce production constant -> TRUE
-- On INFIX5 reduce production constant -> TRUE
-- On INFIX4 reduce production constant -> TRUE
-- On INFIX3 reduce production constant -> TRUE
-- On INFIX2 reduce production constant -> TRUE
-- On INFIX1 reduce production constant -> TRUE
-- On INFIX0 reduce production constant -> TRUE
-- On FATRARROW reduce production constant -> TRUE
-- On FALSE reduce production constant -> TRUE
-- On EQUALSTILDE reduce production constant -> TRUE
-- On EQ reduce production constant -> TRUE
-- On END reduce production constant -> TRUE
-- On ELSE reduce production constant -> TRUE
-- On DOTDOT reduce production constant -> TRUE
-- On DOT reduce production constant -> TRUE
-- On COMMA reduce production constant -> TRUE
-- On COLONCOLON reduce production constant -> TRUE
-- On COLON reduce production constant -> TRUE
-- On CLIENT reduce production constant -> TRUE
-- On CHAR reduce production constant -> TRUE
-- On CASE reduce production constant -> TRUE
-- On BARRBRACE reduce production constant -> TRUE
-- On BARBAR reduce production constant -> TRUE
-- On AS reduce production constant -> TRUE
-- On AMPAMP reduce production constant -> TRUE

State 22:
constant -> STRING . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP NATIVE MINUSDOT MINUS LPAREN LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE EQ END ELSE DOTDOT DOT COMMA COLONCOLON COLON CLIENT CHAR CASE BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production constant -> STRING
-- On VBAR reduce production constant -> STRING
-- On VARIABLE reduce production constant -> STRING
-- On VALUES reduce production constant -> STRING
-- On UINTEGER reduce production constant -> STRING
-- On UFLOAT reduce production constant -> STRING
-- On TRUE reduce production constant -> STRING
-- On STRING reduce production constant -> STRING
-- On SERVER reduce production constant -> STRING
-- On SEMICOLON reduce production constant -> STRING
-- On RPAREN reduce production constant -> STRING
-- On RETURNING reduce production constant -> STRING
-- On RBRACKET reduce production constant -> STRING
-- On RBRACE reduce production constant -> STRING
-- On RARROW reduce production constant -> STRING
-- On POSTFIXOP reduce production constant -> STRING
-- On NATIVE reduce production constant -> STRING
-- On MINUSDOT reduce production constant -> STRING
-- On MINUS reduce production constant -> STRING
-- On LPAREN reduce production constant -> STRING
-- On LLARROW reduce production constant -> STRING
-- On LBRACE reduce production constant -> STRING
-- On LARROW reduce production constant -> STRING
-- On INFIXR9 reduce production constant -> STRING
-- On INFIXR8 reduce production constant -> STRING
-- On INFIXR7 reduce production constant -> STRING
-- On INFIXR6 reduce production constant -> STRING
-- On INFIXR5 reduce production constant -> STRING
-- On INFIXR4 reduce production constant -> STRING
-- On INFIXR3 reduce production constant -> STRING
-- On INFIXR2 reduce production constant -> STRING
-- On INFIXR1 reduce production constant -> STRING
-- On INFIXR0 reduce production constant -> STRING
-- On INFIXL9 reduce production constant -> STRING
-- On INFIXL8 reduce production constant -> STRING
-- On INFIXL7 reduce production constant -> STRING
-- On INFIXL6 reduce production constant -> STRING
-- On INFIXL5 reduce production constant -> STRING
-- On INFIXL4 reduce production constant -> STRING
-- On INFIXL3 reduce production constant -> STRING
-- On INFIXL2 reduce production constant -> STRING
-- On INFIXL1 reduce production constant -> STRING
-- On INFIXL0 reduce production constant -> STRING
-- On INFIX9 reduce production constant -> STRING
-- On INFIX8 reduce production constant -> STRING
-- On INFIX7 reduce production constant -> STRING
-- On INFIX6 reduce production constant -> STRING
-- On INFIX5 reduce production constant -> STRING
-- On INFIX4 reduce production constant -> STRING
-- On INFIX3 reduce production constant -> STRING
-- On INFIX2 reduce production constant -> STRING
-- On INFIX1 reduce production constant -> STRING
-- On INFIX0 reduce production constant -> STRING
-- On FATRARROW reduce production constant -> STRING
-- On FALSE reduce production constant -> STRING
-- On EQUALSTILDE reduce production constant -> STRING
-- On EQ reduce production constant -> STRING
-- On END reduce production constant -> STRING
-- On ELSE reduce production constant -> STRING
-- On DOTDOT reduce production constant -> STRING
-- On DOT reduce production constant -> STRING
-- On COMMA reduce production constant -> STRING
-- On COLONCOLON reduce production constant -> STRING
-- On COLON reduce production constant -> STRING
-- On CLIENT reduce production constant -> STRING
-- On CHAR reduce production constant -> STRING
-- On CASE reduce production constant -> STRING
-- On BARRBRACE reduce production constant -> STRING
-- On BARBAR reduce production constant -> STRING
-- On AS reduce production constant -> STRING
-- On AMPAMP reduce production constant -> STRING

State 23:
negative_pattern -> MINUS . CONSTRUCTOR [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
negative_pattern -> MINUS . LPAREN constructors RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On LPAREN shift to state 24
-- On CONSTRUCTOR shift to state 30

State 24:
negative_pattern -> MINUS LPAREN . constructors RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On CONSTRUCTOR shift to state 25
-- On constructors shift to state 28

State 25:
constructors -> CONSTRUCTOR . [ RPAREN ]
constructors -> CONSTRUCTOR . COMMA constructors [ RPAREN ]
-- On COMMA shift to state 26
-- On RPAREN reduce production constructors -> CONSTRUCTOR

State 26:
constructors -> CONSTRUCTOR COMMA . constructors [ RPAREN ]
-- On CONSTRUCTOR shift to state 25
-- On constructors shift to state 27

State 27:
constructors -> CONSTRUCTOR COMMA constructors . [ RPAREN ]
-- On RPAREN reduce production constructors -> CONSTRUCTOR COMMA constructors

State 28:
negative_pattern -> MINUS LPAREN constructors . RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On RPAREN shift to state 29

State 29:
negative_pattern -> MINUS LPAREN constructors RPAREN . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On SERVER reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On RPAREN reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On RBRACKET reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On RBRACE reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On RARROW reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On POSTFIXOP reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On NATIVE reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On LLARROW reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On LBRACE reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On LARROW reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR9 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR8 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR7 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR6 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR5 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR4 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR3 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR2 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR1 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXR0 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL9 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL8 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL7 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL6 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL5 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL4 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL3 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL2 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL1 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIXL0 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX9 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX8 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX7 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX6 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX5 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX4 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX3 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX2 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX1 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On INFIX0 reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On EQ reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On COMMA reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On COLONCOLON reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On COLON reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On CLIENT reduce production negative_pattern -> MINUS LPAREN constructors RPAREN
-- On AS reduce production negative_pattern -> MINUS LPAREN constructors RPAREN

State 30:
negative_pattern -> MINUS CONSTRUCTOR . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On SERVER reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On RPAREN reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On RBRACKET reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On RBRACE reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On RARROW reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On POSTFIXOP reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On NATIVE reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On LLARROW reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On LBRACE reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On LARROW reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR9 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR8 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR7 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR6 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR5 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR4 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR3 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR2 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR1 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXR0 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL9 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL8 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL7 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL6 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL5 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL4 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL3 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL2 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL1 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIXL0 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX9 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX8 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX7 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX6 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX5 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX4 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX3 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX2 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX1 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On INFIX0 reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On EQ reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On COMMA reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On COLONCOLON reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On COLON reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On CLIENT reduce production negative_pattern -> MINUS CONSTRUCTOR
-- On AS reduce production negative_pattern -> MINUS CONSTRUCTOR

State 31:
parenthesized_pattern -> LPAREN . RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
parenthesized_pattern -> LPAREN . pattern RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
parenthesized_pattern -> LPAREN . pattern COMMA patterns RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
parenthesized_pattern -> LPAREN . labeled_patterns VBAR pattern RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
parenthesized_pattern -> LPAREN . labeled_patterns RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VARIABLE shift to state 32
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 33
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 34
-- On RPAREN shift to state 35
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 254
-- On CHAR shift to state 41
-- On typed_pattern shift to state 42
-- On record_label shift to state 255
-- On primary_pattern shift to state 239
-- On pattern shift to state 260
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On labeled_patterns shift to state 265
-- On field_label shift to state 224
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 251

State 32:
field_label -> VARIABLE . [ EQ ]
primary_pattern -> VARIABLE . [ RPAREN COMMA COLONCOLON COLON AS ]
-- On RPAREN reduce production primary_pattern -> VARIABLE
-- On EQ reduce production field_label -> VARIABLE
-- On COMMA reduce production primary_pattern -> VARIABLE
-- On COLONCOLON reduce production primary_pattern -> VARIABLE
-- On COLON reduce production primary_pattern -> VARIABLE
-- On AS reduce production primary_pattern -> VARIABLE

State 33:
constant -> UINTEGER . [ WITH RPAREN POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE DOT COMMA COLONCOLON COLON BARBAR AS AMPAMP ]
field_label -> UINTEGER . [ EQ ]
-- On WITH reduce production constant -> UINTEGER
-- On RPAREN reduce production constant -> UINTEGER
-- On POSTFIXOP reduce production constant -> UINTEGER
-- On MINUSDOT reduce production constant -> UINTEGER
-- On MINUS reduce production constant -> UINTEGER
-- On LPAREN reduce production constant -> UINTEGER
-- On INFIXR9 reduce production constant -> UINTEGER
-- On INFIXR8 reduce production constant -> UINTEGER
-- On INFIXR7 reduce production constant -> UINTEGER
-- On INFIXR6 reduce production constant -> UINTEGER
-- On INFIXR5 reduce production constant -> UINTEGER
-- On INFIXR4 reduce production constant -> UINTEGER
-- On INFIXR3 reduce production constant -> UINTEGER
-- On INFIXR2 reduce production constant -> UINTEGER
-- On INFIXR1 reduce production constant -> UINTEGER
-- On INFIXR0 reduce production constant -> UINTEGER
-- On INFIXL9 reduce production constant -> UINTEGER
-- On INFIXL8 reduce production constant -> UINTEGER
-- On INFIXL7 reduce production constant -> UINTEGER
-- On INFIXL6 reduce production constant -> UINTEGER
-- On INFIXL5 reduce production constant -> UINTEGER
-- On INFIXL4 reduce production constant -> UINTEGER
-- On INFIXL3 reduce production constant -> UINTEGER
-- On INFIXL2 reduce production constant -> UINTEGER
-- On INFIXL1 reduce production constant -> UINTEGER
-- On INFIXL0 reduce production constant -> UINTEGER
-- On INFIX9 reduce production constant -> UINTEGER
-- On INFIX8 reduce production constant -> UINTEGER
-- On INFIX7 reduce production constant -> UINTEGER
-- On INFIX6 reduce production constant -> UINTEGER
-- On INFIX5 reduce production constant -> UINTEGER
-- On INFIX4 reduce production constant -> UINTEGER
-- On INFIX3 reduce production constant -> UINTEGER
-- On INFIX2 reduce production constant -> UINTEGER
-- On INFIX1 reduce production constant -> UINTEGER
-- On INFIX0 reduce production constant -> UINTEGER
-- On EQUALSTILDE reduce production constant -> UINTEGER
-- On EQ reduce production field_label -> UINTEGER
-- On DOT reduce production constant -> UINTEGER
-- On COMMA reduce production constant -> UINTEGER
-- On COLONCOLON reduce production constant -> UINTEGER
-- On COLON reduce production constant -> UINTEGER
-- On BARBAR reduce production constant -> UINTEGER
-- On AS reduce production constant -> UINTEGER
-- On AMPAMP reduce production constant -> UINTEGER

State 34:
constant -> STRING . [ WITH RPAREN POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE DOT COMMA COLONCOLON COLON BARBAR AS AMPAMP ]
field_label -> STRING . [ EQ ]
-- On WITH reduce production constant -> STRING
-- On RPAREN reduce production constant -> STRING
-- On POSTFIXOP reduce production constant -> STRING
-- On MINUSDOT reduce production constant -> STRING
-- On MINUS reduce production constant -> STRING
-- On LPAREN reduce production constant -> STRING
-- On INFIXR9 reduce production constant -> STRING
-- On INFIXR8 reduce production constant -> STRING
-- On INFIXR7 reduce production constant -> STRING
-- On INFIXR6 reduce production constant -> STRING
-- On INFIXR5 reduce production constant -> STRING
-- On INFIXR4 reduce production constant -> STRING
-- On INFIXR3 reduce production constant -> STRING
-- On INFIXR2 reduce production constant -> STRING
-- On INFIXR1 reduce production constant -> STRING
-- On INFIXR0 reduce production constant -> STRING
-- On INFIXL9 reduce production constant -> STRING
-- On INFIXL8 reduce production constant -> STRING
-- On INFIXL7 reduce production constant -> STRING
-- On INFIXL6 reduce production constant -> STRING
-- On INFIXL5 reduce production constant -> STRING
-- On INFIXL4 reduce production constant -> STRING
-- On INFIXL3 reduce production constant -> STRING
-- On INFIXL2 reduce production constant -> STRING
-- On INFIXL1 reduce production constant -> STRING
-- On INFIXL0 reduce production constant -> STRING
-- On INFIX9 reduce production constant -> STRING
-- On INFIX8 reduce production constant -> STRING
-- On INFIX7 reduce production constant -> STRING
-- On INFIX6 reduce production constant -> STRING
-- On INFIX5 reduce production constant -> STRING
-- On INFIX4 reduce production constant -> STRING
-- On INFIX3 reduce production constant -> STRING
-- On INFIX2 reduce production constant -> STRING
-- On INFIX1 reduce production constant -> STRING
-- On INFIX0 reduce production constant -> STRING
-- On EQUALSTILDE reduce production constant -> STRING
-- On EQ reduce production field_label -> STRING
-- On DOT reduce production constant -> STRING
-- On COMMA reduce production constant -> STRING
-- On COLONCOLON reduce production constant -> STRING
-- On COLON reduce production constant -> STRING
-- On BARBAR reduce production constant -> STRING
-- On AS reduce production constant -> STRING
-- On AMPAMP reduce production constant -> STRING

State 35:
parenthesized_pattern -> LPAREN RPAREN . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production parenthesized_pattern -> LPAREN RPAREN
-- On SERVER reduce production parenthesized_pattern -> LPAREN RPAREN
-- On RPAREN reduce production parenthesized_pattern -> LPAREN RPAREN
-- On RBRACKET reduce production parenthesized_pattern -> LPAREN RPAREN
-- On RBRACE reduce production parenthesized_pattern -> LPAREN RPAREN
-- On RARROW reduce production parenthesized_pattern -> LPAREN RPAREN
-- On POSTFIXOP reduce production parenthesized_pattern -> LPAREN RPAREN
-- On NATIVE reduce production parenthesized_pattern -> LPAREN RPAREN
-- On LLARROW reduce production parenthesized_pattern -> LPAREN RPAREN
-- On LBRACE reduce production parenthesized_pattern -> LPAREN RPAREN
-- On LARROW reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR9 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR8 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR7 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR6 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR5 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR4 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR3 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR2 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR1 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXR0 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL9 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL8 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL7 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL6 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL5 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL4 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL3 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL2 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL1 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIXL0 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX9 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX8 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX7 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX6 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX5 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX4 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX3 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX2 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX1 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On INFIX0 reduce production parenthesized_pattern -> LPAREN RPAREN
-- On EQ reduce production parenthesized_pattern -> LPAREN RPAREN
-- On COMMA reduce production parenthesized_pattern -> LPAREN RPAREN
-- On COLONCOLON reduce production parenthesized_pattern -> LPAREN RPAREN
-- On COLON reduce production parenthesized_pattern -> LPAREN RPAREN
-- On CLIENT reduce production parenthesized_pattern -> LPAREN RPAREN
-- On AS reduce production parenthesized_pattern -> LPAREN RPAREN

State 36:
primary_pattern -> LBRACKET . RBRACKET [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
primary_pattern -> LBRACKET . patterns RBRACKET [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VARIABLE shift to state 17
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On RBRACKET shift to state 37
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 39
-- On CHAR shift to state 41
-- On typed_pattern shift to state 42
-- On primary_pattern shift to state 239
-- On patterns shift to state 240
-- On pattern shift to state 242
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 251

State 37:
primary_pattern -> LBRACKET RBRACKET . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production primary_pattern -> LBRACKET RBRACKET
-- On SERVER reduce production primary_pattern -> LBRACKET RBRACKET
-- On RPAREN reduce production primary_pattern -> LBRACKET RBRACKET
-- On RBRACKET reduce production primary_pattern -> LBRACKET RBRACKET
-- On RBRACE reduce production primary_pattern -> LBRACKET RBRACKET
-- On RARROW reduce production primary_pattern -> LBRACKET RBRACKET
-- On POSTFIXOP reduce production primary_pattern -> LBRACKET RBRACKET
-- On NATIVE reduce production primary_pattern -> LBRACKET RBRACKET
-- On LLARROW reduce production primary_pattern -> LBRACKET RBRACKET
-- On LBRACE reduce production primary_pattern -> LBRACKET RBRACKET
-- On LARROW reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR9 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR8 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR7 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR6 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR5 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR4 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR3 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR2 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR1 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXR0 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL9 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL8 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL7 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL6 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL5 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL4 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL3 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL2 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL1 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIXL0 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX9 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX8 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX7 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX6 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX5 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX4 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX3 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX2 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX1 reduce production primary_pattern -> LBRACKET RBRACKET
-- On INFIX0 reduce production primary_pattern -> LBRACKET RBRACKET
-- On EQ reduce production primary_pattern -> LBRACKET RBRACKET
-- On COMMA reduce production primary_pattern -> LBRACKET RBRACKET
-- On COLONCOLON reduce production primary_pattern -> LBRACKET RBRACKET
-- On COLON reduce production primary_pattern -> LBRACKET RBRACKET
-- On CLIENT reduce production primary_pattern -> LBRACKET RBRACKET
-- On AS reduce production primary_pattern -> LBRACKET RBRACKET

State 38:
constant -> FALSE . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP NATIVE MINUSDOT MINUS LPAREN LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE EQ END ELSE DOTDOT DOT COMMA COLONCOLON COLON CLIENT CHAR CASE BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production constant -> FALSE
-- On VBAR reduce production constant -> FALSE
-- On VARIABLE reduce production constant -> FALSE
-- On VALUES reduce production constant -> FALSE
-- On UINTEGER reduce production constant -> FALSE
-- On UFLOAT reduce production constant -> FALSE
-- On TRUE reduce production constant -> FALSE
-- On STRING reduce production constant -> FALSE
-- On SERVER reduce production constant -> FALSE
-- On SEMICOLON reduce production constant -> FALSE
-- On RPAREN reduce production constant -> FALSE
-- On RETURNING reduce production constant -> FALSE
-- On RBRACKET reduce production constant -> FALSE
-- On RBRACE reduce production constant -> FALSE
-- On RARROW reduce production constant -> FALSE
-- On POSTFIXOP reduce production constant -> FALSE
-- On NATIVE reduce production constant -> FALSE
-- On MINUSDOT reduce production constant -> FALSE
-- On MINUS reduce production constant -> FALSE
-- On LPAREN reduce production constant -> FALSE
-- On LLARROW reduce production constant -> FALSE
-- On LBRACE reduce production constant -> FALSE
-- On LARROW reduce production constant -> FALSE
-- On INFIXR9 reduce production constant -> FALSE
-- On INFIXR8 reduce production constant -> FALSE
-- On INFIXR7 reduce production constant -> FALSE
-- On INFIXR6 reduce production constant -> FALSE
-- On INFIXR5 reduce production constant -> FALSE
-- On INFIXR4 reduce production constant -> FALSE
-- On INFIXR3 reduce production constant -> FALSE
-- On INFIXR2 reduce production constant -> FALSE
-- On INFIXR1 reduce production constant -> FALSE
-- On INFIXR0 reduce production constant -> FALSE
-- On INFIXL9 reduce production constant -> FALSE
-- On INFIXL8 reduce production constant -> FALSE
-- On INFIXL7 reduce production constant -> FALSE
-- On INFIXL6 reduce production constant -> FALSE
-- On INFIXL5 reduce production constant -> FALSE
-- On INFIXL4 reduce production constant -> FALSE
-- On INFIXL3 reduce production constant -> FALSE
-- On INFIXL2 reduce production constant -> FALSE
-- On INFIXL1 reduce production constant -> FALSE
-- On INFIXL0 reduce production constant -> FALSE
-- On INFIX9 reduce production constant -> FALSE
-- On INFIX8 reduce production constant -> FALSE
-- On INFIX7 reduce production constant -> FALSE
-- On INFIX6 reduce production constant -> FALSE
-- On INFIX5 reduce production constant -> FALSE
-- On INFIX4 reduce production constant -> FALSE
-- On INFIX3 reduce production constant -> FALSE
-- On INFIX2 reduce production constant -> FALSE
-- On INFIX1 reduce production constant -> FALSE
-- On INFIX0 reduce production constant -> FALSE
-- On FATRARROW reduce production constant -> FALSE
-- On FALSE reduce production constant -> FALSE
-- On EQUALSTILDE reduce production constant -> FALSE
-- On EQ reduce production constant -> FALSE
-- On END reduce production constant -> FALSE
-- On ELSE reduce production constant -> FALSE
-- On DOTDOT reduce production constant -> FALSE
-- On DOT reduce production constant -> FALSE
-- On COMMA reduce production constant -> FALSE
-- On COLONCOLON reduce production constant -> FALSE
-- On COLON reduce production constant -> FALSE
-- On CLIENT reduce production constant -> FALSE
-- On CHAR reduce production constant -> FALSE
-- On CASE reduce production constant -> FALSE
-- On BARRBRACE reduce production constant -> FALSE
-- On BARBAR reduce production constant -> FALSE
-- On AS reduce production constant -> FALSE
-- On AMPAMP reduce production constant -> FALSE

State 39:
constructor_pattern -> CONSTRUCTOR . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
constructor_pattern -> CONSTRUCTOR . parenthesized_pattern [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On LPAREN shift to state 31
-- On parenthesized_pattern shift to state 40
-- On VBAR reduce production constructor_pattern -> CONSTRUCTOR
-- On SERVER reduce production constructor_pattern -> CONSTRUCTOR
-- On RPAREN reduce production constructor_pattern -> CONSTRUCTOR
-- On RBRACKET reduce production constructor_pattern -> CONSTRUCTOR
-- On RBRACE reduce production constructor_pattern -> CONSTRUCTOR
-- On RARROW reduce production constructor_pattern -> CONSTRUCTOR
-- On POSTFIXOP reduce production constructor_pattern -> CONSTRUCTOR
-- On NATIVE reduce production constructor_pattern -> CONSTRUCTOR
-- On LLARROW reduce production constructor_pattern -> CONSTRUCTOR
-- On LBRACE reduce production constructor_pattern -> CONSTRUCTOR
-- On LARROW reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR9 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR8 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR7 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR6 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR5 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR4 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR3 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR2 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR1 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXR0 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL9 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL8 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL7 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL6 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL5 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL4 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL3 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL2 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL1 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIXL0 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX9 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX8 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX7 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX6 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX5 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX4 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX3 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX2 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX1 reduce production constructor_pattern -> CONSTRUCTOR
-- On INFIX0 reduce production constructor_pattern -> CONSTRUCTOR
-- On EQ reduce production constructor_pattern -> CONSTRUCTOR
-- On COMMA reduce production constructor_pattern -> CONSTRUCTOR
-- On COLONCOLON reduce production constructor_pattern -> CONSTRUCTOR
-- On COLON reduce production constructor_pattern -> CONSTRUCTOR
-- On CLIENT reduce production constructor_pattern -> CONSTRUCTOR
-- On AS reduce production constructor_pattern -> CONSTRUCTOR

State 40:
constructor_pattern -> CONSTRUCTOR parenthesized_pattern . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On SERVER reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On RPAREN reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On RBRACKET reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On RBRACE reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On RARROW reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On POSTFIXOP reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On NATIVE reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On LLARROW reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On LBRACE reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On LARROW reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR9 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR8 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR7 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR6 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR5 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR4 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR3 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR2 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR1 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXR0 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL9 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL8 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL7 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL6 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL5 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL4 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL3 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL2 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL1 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIXL0 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX9 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX8 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX7 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX6 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX5 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX4 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX3 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX2 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX1 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On INFIX0 reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On EQ reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On COMMA reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On COLONCOLON reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On COLON reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On CLIENT reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern
-- On AS reduce production constructor_pattern -> CONSTRUCTOR parenthesized_pattern

State 41:
constant -> CHAR . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP NATIVE MINUSDOT MINUS LPAREN LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE EQ END ELSE DOTDOT DOT COMMA COLONCOLON COLON CLIENT CHAR CASE BARRBRACE BARBAR AS AMPAMP ]
-- On WITH reduce production constant -> CHAR
-- On VBAR reduce production constant -> CHAR
-- On VARIABLE reduce production constant -> CHAR
-- On VALUES reduce production constant -> CHAR
-- On UINTEGER reduce production constant -> CHAR
-- On UFLOAT reduce production constant -> CHAR
-- On TRUE reduce production constant -> CHAR
-- On STRING reduce production constant -> CHAR
-- On SERVER reduce production constant -> CHAR
-- On SEMICOLON reduce production constant -> CHAR
-- On RPAREN reduce production constant -> CHAR
-- On RETURNING reduce production constant -> CHAR
-- On RBRACKET reduce production constant -> CHAR
-- On RBRACE reduce production constant -> CHAR
-- On RARROW reduce production constant -> CHAR
-- On POSTFIXOP reduce production constant -> CHAR
-- On NATIVE reduce production constant -> CHAR
-- On MINUSDOT reduce production constant -> CHAR
-- On MINUS reduce production constant -> CHAR
-- On LPAREN reduce production constant -> CHAR
-- On LLARROW reduce production constant -> CHAR
-- On LBRACE reduce production constant -> CHAR
-- On LARROW reduce production constant -> CHAR
-- On INFIXR9 reduce production constant -> CHAR
-- On INFIXR8 reduce production constant -> CHAR
-- On INFIXR7 reduce production constant -> CHAR
-- On INFIXR6 reduce production constant -> CHAR
-- On INFIXR5 reduce production constant -> CHAR
-- On INFIXR4 reduce production constant -> CHAR
-- On INFIXR3 reduce production constant -> CHAR
-- On INFIXR2 reduce production constant -> CHAR
-- On INFIXR1 reduce production constant -> CHAR
-- On INFIXR0 reduce production constant -> CHAR
-- On INFIXL9 reduce production constant -> CHAR
-- On INFIXL8 reduce production constant -> CHAR
-- On INFIXL7 reduce production constant -> CHAR
-- On INFIXL6 reduce production constant -> CHAR
-- On INFIXL5 reduce production constant -> CHAR
-- On INFIXL4 reduce production constant -> CHAR
-- On INFIXL3 reduce production constant -> CHAR
-- On INFIXL2 reduce production constant -> CHAR
-- On INFIXL1 reduce production constant -> CHAR
-- On INFIXL0 reduce production constant -> CHAR
-- On INFIX9 reduce production constant -> CHAR
-- On INFIX8 reduce production constant -> CHAR
-- On INFIX7 reduce production constant -> CHAR
-- On INFIX6 reduce production constant -> CHAR
-- On INFIX5 reduce production constant -> CHAR
-- On INFIX4 reduce production constant -> CHAR
-- On INFIX3 reduce production constant -> CHAR
-- On INFIX2 reduce production constant -> CHAR
-- On INFIX1 reduce production constant -> CHAR
-- On INFIX0 reduce production constant -> CHAR
-- On FATRARROW reduce production constant -> CHAR
-- On FALSE reduce production constant -> CHAR
-- On EQUALSTILDE reduce production constant -> CHAR
-- On EQ reduce production constant -> CHAR
-- On END reduce production constant -> CHAR
-- On ELSE reduce production constant -> CHAR
-- On DOTDOT reduce production constant -> CHAR
-- On DOT reduce production constant -> CHAR
-- On COMMA reduce production constant -> CHAR
-- On COLONCOLON reduce production constant -> CHAR
-- On COLON reduce production constant -> CHAR
-- On CLIENT reduce production constant -> CHAR
-- On CHAR reduce production constant -> CHAR
-- On CASE reduce production constant -> CHAR
-- On BARRBRACE reduce production constant -> CHAR
-- On BARBAR reduce production constant -> CHAR
-- On AS reduce production constant -> CHAR
-- On AMPAMP reduce production constant -> CHAR

State 42:
pattern -> typed_pattern . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA CLIENT ]
pattern -> typed_pattern . COLON primary_datatype [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA CLIENT ]
-- On COLON shift to state 43
-- On VBAR reduce production pattern -> typed_pattern
-- On SERVER reduce production pattern -> typed_pattern
-- On RPAREN reduce production pattern -> typed_pattern
-- On RBRACKET reduce production pattern -> typed_pattern
-- On RBRACE reduce production pattern -> typed_pattern
-- On RARROW reduce production pattern -> typed_pattern
-- On POSTFIXOP reduce production pattern -> typed_pattern
-- On NATIVE reduce production pattern -> typed_pattern
-- On LLARROW reduce production pattern -> typed_pattern
-- On LBRACE reduce production pattern -> typed_pattern
-- On LARROW reduce production pattern -> typed_pattern
-- On INFIXR9 reduce production pattern -> typed_pattern
-- On INFIXR8 reduce production pattern -> typed_pattern
-- On INFIXR7 reduce production pattern -> typed_pattern
-- On INFIXR6 reduce production pattern -> typed_pattern
-- On INFIXR5 reduce production pattern -> typed_pattern
-- On INFIXR4 reduce production pattern -> typed_pattern
-- On INFIXR3 reduce production pattern -> typed_pattern
-- On INFIXR2 reduce production pattern -> typed_pattern
-- On INFIXR1 reduce production pattern -> typed_pattern
-- On INFIXR0 reduce production pattern -> typed_pattern
-- On INFIXL9 reduce production pattern -> typed_pattern
-- On INFIXL8 reduce production pattern -> typed_pattern
-- On INFIXL7 reduce production pattern -> typed_pattern
-- On INFIXL6 reduce production pattern -> typed_pattern
-- On INFIXL5 reduce production pattern -> typed_pattern
-- On INFIXL4 reduce production pattern -> typed_pattern
-- On INFIXL3 reduce production pattern -> typed_pattern
-- On INFIXL2 reduce production pattern -> typed_pattern
-- On INFIXL1 reduce production pattern -> typed_pattern
-- On INFIXL0 reduce production pattern -> typed_pattern
-- On INFIX9 reduce production pattern -> typed_pattern
-- On INFIX8 reduce production pattern -> typed_pattern
-- On INFIX7 reduce production pattern -> typed_pattern
-- On INFIX6 reduce production pattern -> typed_pattern
-- On INFIX5 reduce production pattern -> typed_pattern
-- On INFIX4 reduce production pattern -> typed_pattern
-- On INFIX3 reduce production pattern -> typed_pattern
-- On INFIX2 reduce production pattern -> typed_pattern
-- On INFIX1 reduce production pattern -> typed_pattern
-- On INFIX0 reduce production pattern -> typed_pattern
-- On EQ reduce production pattern -> typed_pattern
-- On COMMA reduce production pattern -> typed_pattern
-- On CLIENT reduce production pattern -> typed_pattern

State 43:
pattern -> typed_pattern COLON . primary_datatype [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA CLIENT ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On primary_datatype shift to state 238
-- On parenthesized_datatypes shift to state 230
-- On kinded_type_var shift to state 117

State 44:
type_var -> VARIABLE . [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BASE BARRBRACKET BARRBRACE ANY ]
-- On WITH reduce production type_var -> VARIABLE
-- On WHERE reduce production type_var -> VARIABLE
-- On VBAR reduce production type_var -> VARIABLE
-- On VAR reduce production type_var -> VARIABLE
-- On VALUES reduce production type_var -> VARIABLE
-- On SERVER reduce production type_var -> VARIABLE
-- On SEMICOLON reduce production type_var -> VARIABLE
-- On RPAREN reduce production type_var -> VARIABLE
-- On RETURNING reduce production type_var -> VARIABLE
-- On RBRACKET reduce production type_var -> VARIABLE
-- On RBRACE reduce production type_var -> VARIABLE
-- On RARROW reduce production type_var -> VARIABLE
-- On POSTFIXOP reduce production type_var -> VARIABLE
-- On OP reduce production type_var -> VARIABLE
-- On NATIVE reduce production type_var -> VARIABLE
-- On LLARROW reduce production type_var -> VARIABLE
-- On LBRACE reduce production type_var -> VARIABLE
-- On LARROW reduce production type_var -> VARIABLE
-- On INFIXR9 reduce production type_var -> VARIABLE
-- On INFIXR8 reduce production type_var -> VARIABLE
-- On INFIXR7 reduce production type_var -> VARIABLE
-- On INFIXR6 reduce production type_var -> VARIABLE
-- On INFIXR5 reduce production type_var -> VARIABLE
-- On INFIXR4 reduce production type_var -> VARIABLE
-- On INFIXR3 reduce production type_var -> VARIABLE
-- On INFIXR2 reduce production type_var -> VARIABLE
-- On INFIXR1 reduce production type_var -> VARIABLE
-- On INFIXR0 reduce production type_var -> VARIABLE
-- On INFIXL9 reduce production type_var -> VARIABLE
-- On INFIXL8 reduce production type_var -> VARIABLE
-- On INFIXL7 reduce production type_var -> VARIABLE
-- On INFIXL6 reduce production type_var -> VARIABLE
-- On INFIXL5 reduce production type_var -> VARIABLE
-- On INFIXL4 reduce production type_var -> VARIABLE
-- On INFIXL3 reduce production type_var -> VARIABLE
-- On INFIXL2 reduce production type_var -> VARIABLE
-- On INFIXL1 reduce production type_var -> VARIABLE
-- On INFIXL0 reduce production type_var -> VARIABLE
-- On INFIX9 reduce production type_var -> VARIABLE
-- On INFIX8 reduce production type_var -> VARIABLE
-- On INFIX7 reduce production type_var -> VARIABLE
-- On INFIX6 reduce production type_var -> VARIABLE
-- On INFIX5 reduce production type_var -> VARIABLE
-- On INFIX4 reduce production type_var -> VARIABLE
-- On INFIX3 reduce production type_var -> VARIABLE
-- On INFIX2 reduce production type_var -> VARIABLE
-- On INFIX1 reduce production type_var -> VARIABLE
-- On INFIX0 reduce production type_var -> VARIABLE
-- On FUN reduce production type_var -> VARIABLE
-- On FROM reduce production type_var -> VARIABLE
-- On EQ reduce production type_var -> VARIABLE
-- On END reduce production type_var -> VARIABLE
-- On ELSE reduce production type_var -> VARIABLE
-- On DOTDOT reduce production type_var -> VARIABLE
-- On COMMA reduce production type_var -> VARIABLE
-- On COLON reduce production type_var -> VARIABLE
-- On CLIENT reduce production type_var -> VARIABLE
-- On CASE reduce production type_var -> VARIABLE
-- On BASE reduce production type_var -> VARIABLE
-- On BARRBRACKET reduce production type_var -> VARIABLE
-- On BARRBRACE reduce production type_var -> VARIABLE
-- On ANY reduce production type_var -> VARIABLE

State 45:
type_var -> UNDERSCORE . [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BASE BARRBRACKET BARRBRACE ANY ]
-- On WITH reduce production type_var -> UNDERSCORE
-- On WHERE reduce production type_var -> UNDERSCORE
-- On VBAR reduce production type_var -> UNDERSCORE
-- On VAR reduce production type_var -> UNDERSCORE
-- On VALUES reduce production type_var -> UNDERSCORE
-- On SERVER reduce production type_var -> UNDERSCORE
-- On SEMICOLON reduce production type_var -> UNDERSCORE
-- On RPAREN reduce production type_var -> UNDERSCORE
-- On RETURNING reduce production type_var -> UNDERSCORE
-- On RBRACKET reduce production type_var -> UNDERSCORE
-- On RBRACE reduce production type_var -> UNDERSCORE
-- On RARROW reduce production type_var -> UNDERSCORE
-- On POSTFIXOP reduce production type_var -> UNDERSCORE
-- On OP reduce production type_var -> UNDERSCORE
-- On NATIVE reduce production type_var -> UNDERSCORE
-- On LLARROW reduce production type_var -> UNDERSCORE
-- On LBRACE reduce production type_var -> UNDERSCORE
-- On LARROW reduce production type_var -> UNDERSCORE
-- On INFIXR9 reduce production type_var -> UNDERSCORE
-- On INFIXR8 reduce production type_var -> UNDERSCORE
-- On INFIXR7 reduce production type_var -> UNDERSCORE
-- On INFIXR6 reduce production type_var -> UNDERSCORE
-- On INFIXR5 reduce production type_var -> UNDERSCORE
-- On INFIXR4 reduce production type_var -> UNDERSCORE
-- On INFIXR3 reduce production type_var -> UNDERSCORE
-- On INFIXR2 reduce production type_var -> UNDERSCORE
-- On INFIXR1 reduce production type_var -> UNDERSCORE
-- On INFIXR0 reduce production type_var -> UNDERSCORE
-- On INFIXL9 reduce production type_var -> UNDERSCORE
-- On INFIXL8 reduce production type_var -> UNDERSCORE
-- On INFIXL7 reduce production type_var -> UNDERSCORE
-- On INFIXL6 reduce production type_var -> UNDERSCORE
-- On INFIXL5 reduce production type_var -> UNDERSCORE
-- On INFIXL4 reduce production type_var -> UNDERSCORE
-- On INFIXL3 reduce production type_var -> UNDERSCORE
-- On INFIXL2 reduce production type_var -> UNDERSCORE
-- On INFIXL1 reduce production type_var -> UNDERSCORE
-- On INFIXL0 reduce production type_var -> UNDERSCORE
-- On INFIX9 reduce production type_var -> UNDERSCORE
-- On INFIX8 reduce production type_var -> UNDERSCORE
-- On INFIX7 reduce production type_var -> UNDERSCORE
-- On INFIX6 reduce production type_var -> UNDERSCORE
-- On INFIX5 reduce production type_var -> UNDERSCORE
-- On INFIX4 reduce production type_var -> UNDERSCORE
-- On INFIX3 reduce production type_var -> UNDERSCORE
-- On INFIX2 reduce production type_var -> UNDERSCORE
-- On INFIX1 reduce production type_var -> UNDERSCORE
-- On INFIX0 reduce production type_var -> UNDERSCORE
-- On FUN reduce production type_var -> UNDERSCORE
-- On FROM reduce production type_var -> UNDERSCORE
-- On EQ reduce production type_var -> UNDERSCORE
-- On END reduce production type_var -> UNDERSCORE
-- On ELSE reduce production type_var -> UNDERSCORE
-- On DOTDOT reduce production type_var -> UNDERSCORE
-- On COMMA reduce production type_var -> UNDERSCORE
-- On COLON reduce production type_var -> UNDERSCORE
-- On CLIENT reduce production type_var -> UNDERSCORE
-- On CASE reduce production type_var -> UNDERSCORE
-- On BASE reduce production type_var -> UNDERSCORE
-- On BARRBRACKET reduce production type_var -> UNDERSCORE
-- On BARRBRACE reduce production type_var -> UNDERSCORE
-- On ANY reduce production type_var -> UNDERSCORE

State 46:
primary_datatype -> TABLEHANDLE . LPAREN datatype COMMA datatype COMMA datatype RPAREN [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On LPAREN shift to state 47

State 47:
primary_datatype -> TABLEHANDLE LPAREN . datatype COMMA datatype COMMA datatype RPAREN [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 232

State 48:
type_var -> QUESTIONVAR . [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BASE BARRBRACKET BARRBRACE ANY ]
-- On WITH reduce production type_var -> QUESTIONVAR
-- On WHERE reduce production type_var -> QUESTIONVAR
-- On VBAR reduce production type_var -> QUESTIONVAR
-- On VAR reduce production type_var -> QUESTIONVAR
-- On VALUES reduce production type_var -> QUESTIONVAR
-- On SERVER reduce production type_var -> QUESTIONVAR
-- On SEMICOLON reduce production type_var -> QUESTIONVAR
-- On RPAREN reduce production type_var -> QUESTIONVAR
-- On RETURNING reduce production type_var -> QUESTIONVAR
-- On RBRACKET reduce production type_var -> QUESTIONVAR
-- On RBRACE reduce production type_var -> QUESTIONVAR
-- On RARROW reduce production type_var -> QUESTIONVAR
-- On POSTFIXOP reduce production type_var -> QUESTIONVAR
-- On OP reduce production type_var -> QUESTIONVAR
-- On NATIVE reduce production type_var -> QUESTIONVAR
-- On LLARROW reduce production type_var -> QUESTIONVAR
-- On LBRACE reduce production type_var -> QUESTIONVAR
-- On LARROW reduce production type_var -> QUESTIONVAR
-- On INFIXR9 reduce production type_var -> QUESTIONVAR
-- On INFIXR8 reduce production type_var -> QUESTIONVAR
-- On INFIXR7 reduce production type_var -> QUESTIONVAR
-- On INFIXR6 reduce production type_var -> QUESTIONVAR
-- On INFIXR5 reduce production type_var -> QUESTIONVAR
-- On INFIXR4 reduce production type_var -> QUESTIONVAR
-- On INFIXR3 reduce production type_var -> QUESTIONVAR
-- On INFIXR2 reduce production type_var -> QUESTIONVAR
-- On INFIXR1 reduce production type_var -> QUESTIONVAR
-- On INFIXR0 reduce production type_var -> QUESTIONVAR
-- On INFIXL9 reduce production type_var -> QUESTIONVAR
-- On INFIXL8 reduce production type_var -> QUESTIONVAR
-- On INFIXL7 reduce production type_var -> QUESTIONVAR
-- On INFIXL6 reduce production type_var -> QUESTIONVAR
-- On INFIXL5 reduce production type_var -> QUESTIONVAR
-- On INFIXL4 reduce production type_var -> QUESTIONVAR
-- On INFIXL3 reduce production type_var -> QUESTIONVAR
-- On INFIXL2 reduce production type_var -> QUESTIONVAR
-- On INFIXL1 reduce production type_var -> QUESTIONVAR
-- On INFIXL0 reduce production type_var -> QUESTIONVAR
-- On INFIX9 reduce production type_var -> QUESTIONVAR
-- On INFIX8 reduce production type_var -> QUESTIONVAR
-- On INFIX7 reduce production type_var -> QUESTIONVAR
-- On INFIX6 reduce production type_var -> QUESTIONVAR
-- On INFIX5 reduce production type_var -> QUESTIONVAR
-- On INFIX4 reduce production type_var -> QUESTIONVAR
-- On INFIX3 reduce production type_var -> QUESTIONVAR
-- On INFIX2 reduce production type_var -> QUESTIONVAR
-- On INFIX1 reduce production type_var -> QUESTIONVAR
-- On INFIX0 reduce production type_var -> QUESTIONVAR
-- On FUN reduce production type_var -> QUESTIONVAR
-- On FROM reduce production type_var -> QUESTIONVAR
-- On EQ reduce production type_var -> QUESTIONVAR
-- On END reduce production type_var -> QUESTIONVAR
-- On ELSE reduce production type_var -> QUESTIONVAR
-- On DOTDOT reduce production type_var -> QUESTIONVAR
-- On COMMA reduce production type_var -> QUESTIONVAR
-- On COLON reduce production type_var -> QUESTIONVAR
-- On CLIENT reduce production type_var -> QUESTIONVAR
-- On CASE reduce production type_var -> QUESTIONVAR
-- On BASE reduce production type_var -> QUESTIONVAR
-- On BARRBRACKET reduce production type_var -> QUESTIONVAR
-- On BARRBRACE reduce production type_var -> QUESTIONVAR
-- On ANY reduce production type_var -> QUESTIONVAR

State 49:
type_var -> QUESTION . [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BASE BARRBRACKET BARRBRACE ANY ]
-- On WITH reduce production type_var -> QUESTION
-- On WHERE reduce production type_var -> QUESTION
-- On VBAR reduce production type_var -> QUESTION
-- On VAR reduce production type_var -> QUESTION
-- On VALUES reduce production type_var -> QUESTION
-- On SERVER reduce production type_var -> QUESTION
-- On SEMICOLON reduce production type_var -> QUESTION
-- On RPAREN reduce production type_var -> QUESTION
-- On RETURNING reduce production type_var -> QUESTION
-- On RBRACKET reduce production type_var -> QUESTION
-- On RBRACE reduce production type_var -> QUESTION
-- On RARROW reduce production type_var -> QUESTION
-- On POSTFIXOP reduce production type_var -> QUESTION
-- On OP reduce production type_var -> QUESTION
-- On NATIVE reduce production type_var -> QUESTION
-- On LLARROW reduce production type_var -> QUESTION
-- On LBRACE reduce production type_var -> QUESTION
-- On LARROW reduce production type_var -> QUESTION
-- On INFIXR9 reduce production type_var -> QUESTION
-- On INFIXR8 reduce production type_var -> QUESTION
-- On INFIXR7 reduce production type_var -> QUESTION
-- On INFIXR6 reduce production type_var -> QUESTION
-- On INFIXR5 reduce production type_var -> QUESTION
-- On INFIXR4 reduce production type_var -> QUESTION
-- On INFIXR3 reduce production type_var -> QUESTION
-- On INFIXR2 reduce production type_var -> QUESTION
-- On INFIXR1 reduce production type_var -> QUESTION
-- On INFIXR0 reduce production type_var -> QUESTION
-- On INFIXL9 reduce production type_var -> QUESTION
-- On INFIXL8 reduce production type_var -> QUESTION
-- On INFIXL7 reduce production type_var -> QUESTION
-- On INFIXL6 reduce production type_var -> QUESTION
-- On INFIXL5 reduce production type_var -> QUESTION
-- On INFIXL4 reduce production type_var -> QUESTION
-- On INFIXL3 reduce production type_var -> QUESTION
-- On INFIXL2 reduce production type_var -> QUESTION
-- On INFIXL1 reduce production type_var -> QUESTION
-- On INFIXL0 reduce production type_var -> QUESTION
-- On INFIX9 reduce production type_var -> QUESTION
-- On INFIX8 reduce production type_var -> QUESTION
-- On INFIX7 reduce production type_var -> QUESTION
-- On INFIX6 reduce production type_var -> QUESTION
-- On INFIX5 reduce production type_var -> QUESTION
-- On INFIX4 reduce production type_var -> QUESTION
-- On INFIX3 reduce production type_var -> QUESTION
-- On INFIX2 reduce production type_var -> QUESTION
-- On INFIX1 reduce production type_var -> QUESTION
-- On INFIX0 reduce production type_var -> QUESTION
-- On FUN reduce production type_var -> QUESTION
-- On FROM reduce production type_var -> QUESTION
-- On EQ reduce production type_var -> QUESTION
-- On END reduce production type_var -> QUESTION
-- On ELSE reduce production type_var -> QUESTION
-- On DOTDOT reduce production type_var -> QUESTION
-- On COMMA reduce production type_var -> QUESTION
-- On COLON reduce production type_var -> QUESTION
-- On CLIENT reduce production type_var -> QUESTION
-- On CASE reduce production type_var -> QUESTION
-- On BASE reduce production type_var -> QUESTION
-- On BARRBRACKET reduce production type_var -> QUESTION
-- On BARRBRACE reduce production type_var -> QUESTION
-- On ANY reduce production type_var -> QUESTION

State 50:
mu_datatype -> MU . VARIABLE DOT mu_datatype [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On VARIABLE shift to state 51

State 51:
mu_datatype -> MU VARIABLE . DOT mu_datatype [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On DOT shift to state 52

State 52:
mu_datatype -> MU VARIABLE DOT . mu_datatype [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 230
-- On mu_datatype shift to state 231
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118

State 53:
parenthesized_datatypes -> LPAREN . RPAREN [ WITH WHERE VBAR VAR VALUES TILDE SQUIGRARROW SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE MINUS LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
parenthesized_datatypes -> LPAREN . datatypes RPAREN [ WITH WHERE VBAR VAR VALUES TILDE SQUIGRARROW SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE MINUS LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
primary_datatype -> LPAREN . rfields RPAREN [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On VBAR shift to state 54
-- On VARIABLE shift to state 211
-- On UNDERSCORE shift to state 45
-- On UINTEGER shift to state 171
-- On TABLEHANDLE shift to state 46
-- On STRING shift to state 172
-- On RPAREN shift to state 212
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 213
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On rfields shift to state 214
-- On rfield shift to state 216
-- On record_label shift to state 222
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On field_label shift to state 224
-- On datatypes shift to state 225
-- On datatype shift to state 227

State 54:
rfields -> VBAR . row_var [ RPAREN ]
rfields -> VBAR . kinded_row_var [ RPAREN ]
-- On VARIABLE shift to state 55
-- On UNDERSCORE shift to state 56
-- On QUESTIONVAR shift to state 57
-- On QUESTION shift to state 58
-- On LPAREN shift to state 59
-- On row_var shift to state 209
-- On nonrec_row_var shift to state 88
-- On kinded_row_var shift to state 210

State 55:
nonrec_row_var -> VARIABLE . [ SQUIGRARROW RPAREN RBRACE RARROW BASE BARRBRACKET ANY ]
-- On SQUIGRARROW reduce production nonrec_row_var -> VARIABLE
-- On RPAREN reduce production nonrec_row_var -> VARIABLE
-- On RBRACE reduce production nonrec_row_var -> VARIABLE
-- On RARROW reduce production nonrec_row_var -> VARIABLE
-- On BASE reduce production nonrec_row_var -> VARIABLE
-- On BARRBRACKET reduce production nonrec_row_var -> VARIABLE
-- On ANY reduce production nonrec_row_var -> VARIABLE

State 56:
nonrec_row_var -> UNDERSCORE . [ SQUIGRARROW RPAREN RBRACE RARROW BASE BARRBRACKET ANY ]
-- On SQUIGRARROW reduce production nonrec_row_var -> UNDERSCORE
-- On RPAREN reduce production nonrec_row_var -> UNDERSCORE
-- On RBRACE reduce production nonrec_row_var -> UNDERSCORE
-- On RARROW reduce production nonrec_row_var -> UNDERSCORE
-- On BASE reduce production nonrec_row_var -> UNDERSCORE
-- On BARRBRACKET reduce production nonrec_row_var -> UNDERSCORE
-- On ANY reduce production nonrec_row_var -> UNDERSCORE

State 57:
nonrec_row_var -> QUESTIONVAR . [ SQUIGRARROW RPAREN RBRACE RARROW BASE BARRBRACKET ANY ]
-- On SQUIGRARROW reduce production nonrec_row_var -> QUESTIONVAR
-- On RPAREN reduce production nonrec_row_var -> QUESTIONVAR
-- On RBRACE reduce production nonrec_row_var -> QUESTIONVAR
-- On RARROW reduce production nonrec_row_var -> QUESTIONVAR
-- On BASE reduce production nonrec_row_var -> QUESTIONVAR
-- On BARRBRACKET reduce production nonrec_row_var -> QUESTIONVAR
-- On ANY reduce production nonrec_row_var -> QUESTIONVAR

State 58:
nonrec_row_var -> QUESTION . [ SQUIGRARROW RPAREN RBRACE RARROW BASE BARRBRACKET ANY ]
-- On SQUIGRARROW reduce production nonrec_row_var -> QUESTION
-- On RPAREN reduce production nonrec_row_var -> QUESTION
-- On RBRACE reduce production nonrec_row_var -> QUESTION
-- On RARROW reduce production nonrec_row_var -> QUESTION
-- On BASE reduce production nonrec_row_var -> QUESTION
-- On BARRBRACKET reduce production nonrec_row_var -> QUESTION
-- On ANY reduce production nonrec_row_var -> QUESTION

State 59:
row_var -> LPAREN . MU VARIABLE DOT vfields RPAREN [ RPAREN RBRACE BASE BARRBRACKET ANY ]
-- On MU shift to state 60

State 60:
row_var -> LPAREN MU . VARIABLE DOT vfields RPAREN [ RPAREN RBRACE BASE BARRBRACKET ANY ]
-- On VARIABLE shift to state 61

State 61:
row_var -> LPAREN MU VARIABLE . DOT vfields RPAREN [ RPAREN RBRACE BASE BARRBRACKET ANY ]
-- On DOT shift to state 62

State 62:
row_var -> LPAREN MU VARIABLE DOT . vfields RPAREN [ RPAREN RBRACE BASE BARRBRACKET ANY ]
-- On VARIABLE shift to state 55
-- On UNDERSCORE shift to state 56
-- On QUESTIONVAR shift to state 57
-- On QUESTION shift to state 58
-- On LPAREN shift to state 59
-- On CONSTRUCTOR shift to state 63
-- On vfields shift to state 207
-- On vfield shift to state 81
-- On row_var shift to state 84
-- On nonrec_row_var shift to state 88
-- On kinded_row_var shift to state 89

State 63:
vfield -> CONSTRUCTOR . [ VBAR RPAREN BARRBRACKET ]
vfield -> CONSTRUCTOR . fieldspec [ VBAR RPAREN BARRBRACKET ]
-- On MINUS shift to state 64
-- On LBRACE shift to state 65
-- On COLON shift to state 150
-- On fieldspec shift to state 206
-- On VBAR reduce production vfield -> CONSTRUCTOR
-- On RPAREN reduce production vfield -> CONSTRUCTOR
-- On BARRBRACKET reduce production vfield -> CONSTRUCTOR

State 64:
fieldspec -> MINUS . [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
-- On VBAR reduce production fieldspec -> MINUS
-- On RPAREN reduce production fieldspec -> MINUS
-- On RBRACE reduce production fieldspec -> MINUS
-- On COMMA reduce production fieldspec -> MINUS
-- On BARRBRACKET reduce production fieldspec -> MINUS

State 65:
fieldspec -> LBRACE . COLON datatype RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
fieldspec -> LBRACE . MINUS RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
fieldspec -> LBRACE . VARIABLE RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
fieldspec -> LBRACE . QUESTIONVAR RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
fieldspec -> LBRACE . UNDERSCORE RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
fieldspec -> LBRACE . QUESTION RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
-- On VARIABLE shift to state 66
-- On UNDERSCORE shift to state 68
-- On QUESTIONVAR shift to state 70
-- On QUESTION shift to state 72
-- On MINUS shift to state 74
-- On COLON shift to state 76

State 66:
fieldspec -> LBRACE VARIABLE . RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
-- On RBRACE shift to state 67

State 67:
fieldspec -> LBRACE VARIABLE RBRACE . [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
-- On VBAR reduce production fieldspec -> LBRACE VARIABLE RBRACE
-- On RPAREN reduce production fieldspec -> LBRACE VARIABLE RBRACE
-- On RBRACE reduce production fieldspec -> LBRACE VARIABLE RBRACE
-- On COMMA reduce production fieldspec -> LBRACE VARIABLE RBRACE
-- On BARRBRACKET reduce production fieldspec -> LBRACE VARIABLE RBRACE

State 68:
fieldspec -> LBRACE UNDERSCORE . RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
-- On RBRACE shift to state 69

State 69:
fieldspec -> LBRACE UNDERSCORE RBRACE . [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
-- On VBAR reduce production fieldspec -> LBRACE UNDERSCORE RBRACE
-- On RPAREN reduce production fieldspec -> LBRACE UNDERSCORE RBRACE
-- On RBRACE reduce production fieldspec -> LBRACE UNDERSCORE RBRACE
-- On COMMA reduce production fieldspec -> LBRACE UNDERSCORE RBRACE
-- On BARRBRACKET reduce production fieldspec -> LBRACE UNDERSCORE RBRACE

State 70:
fieldspec -> LBRACE QUESTIONVAR . RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
-- On RBRACE shift to state 71

State 71:
fieldspec -> LBRACE QUESTIONVAR RBRACE . [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
-- On VBAR reduce production fieldspec -> LBRACE QUESTIONVAR RBRACE
-- On RPAREN reduce production fieldspec -> LBRACE QUESTIONVAR RBRACE
-- On RBRACE reduce production fieldspec -> LBRACE QUESTIONVAR RBRACE
-- On COMMA reduce production fieldspec -> LBRACE QUESTIONVAR RBRACE
-- On BARRBRACKET reduce production fieldspec -> LBRACE QUESTIONVAR RBRACE

State 72:
fieldspec -> LBRACE QUESTION . RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
-- On RBRACE shift to state 73

State 73:
fieldspec -> LBRACE QUESTION RBRACE . [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
-- On VBAR reduce production fieldspec -> LBRACE QUESTION RBRACE
-- On RPAREN reduce production fieldspec -> LBRACE QUESTION RBRACE
-- On RBRACE reduce production fieldspec -> LBRACE QUESTION RBRACE
-- On COMMA reduce production fieldspec -> LBRACE QUESTION RBRACE
-- On BARRBRACKET reduce production fieldspec -> LBRACE QUESTION RBRACE

State 74:
fieldspec -> LBRACE MINUS . RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
-- On RBRACE shift to state 75

State 75:
fieldspec -> LBRACE MINUS RBRACE . [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
-- On VBAR reduce production fieldspec -> LBRACE MINUS RBRACE
-- On RPAREN reduce production fieldspec -> LBRACE MINUS RBRACE
-- On RBRACE reduce production fieldspec -> LBRACE MINUS RBRACE
-- On COMMA reduce production fieldspec -> LBRACE MINUS RBRACE
-- On BARRBRACKET reduce production fieldspec -> LBRACE MINUS RBRACE

State 76:
fieldspec -> LBRACE COLON . datatype RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 204

State 77:
primary_datatype -> LBRACKETBAR . vrow BARRBRACKET [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On VARIABLE shift to state 55
-- On UNDERSCORE shift to state 56
-- On QUESTIONVAR shift to state 57
-- On QUESTION shift to state 58
-- On LPAREN shift to state 59
-- On CONSTRUCTOR shift to state 63
-- On vrow shift to state 78
-- On vfields shift to state 80
-- On vfield shift to state 81
-- On row_var shift to state 84
-- On nonrec_row_var shift to state 88
-- On kinded_row_var shift to state 89
-- On BARRBRACKET reduce production vrow -> 

State 78:
primary_datatype -> LBRACKETBAR vrow . BARRBRACKET [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On BARRBRACKET shift to state 79

State 79:
primary_datatype -> LBRACKETBAR vrow BARRBRACKET . [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On WHERE reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On VBAR reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On VAR reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On VALUES reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On SERVER reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On SEMICOLON reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On RPAREN reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On RETURNING reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On RBRACKET reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On RBRACE reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On RARROW reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On POSTFIXOP reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On OP reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On NATIVE reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On LLARROW reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On LBRACE reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On LARROW reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR9 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR8 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR7 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR6 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR5 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR4 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR3 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR2 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR1 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXR0 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL9 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL8 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL7 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL6 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL5 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL4 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL3 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL2 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL1 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIXL0 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX9 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX8 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX7 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX6 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX5 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX4 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX3 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX2 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX1 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On INFIX0 reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On FUN reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On FROM reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On EQ reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On END reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On ELSE reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On DOTDOT reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On COMMA reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On COLON reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On CLIENT reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On CASE reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On BARRBRACKET reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET
-- On BARRBRACE reduce production primary_datatype -> LBRACKETBAR vrow BARRBRACKET

State 80:
vrow -> vfields . [ BARRBRACKET ]
-- On BARRBRACKET reduce production vrow -> vfields

State 81:
vfields -> vfield . [ RPAREN BARRBRACKET ]
vfields -> vfield . VBAR vfields [ RPAREN BARRBRACKET ]
-- On VBAR shift to state 82
-- On RPAREN reduce production vfields -> vfield
-- On BARRBRACKET reduce production vfields -> vfield

State 82:
vfields -> vfield VBAR . vfields [ RPAREN BARRBRACKET ]
-- On VARIABLE shift to state 55
-- On UNDERSCORE shift to state 56
-- On QUESTIONVAR shift to state 57
-- On QUESTION shift to state 58
-- On LPAREN shift to state 59
-- On CONSTRUCTOR shift to state 63
-- On vfields shift to state 83
-- On vfield shift to state 81
-- On row_var shift to state 84
-- On nonrec_row_var shift to state 88
-- On kinded_row_var shift to state 89

State 83:
vfields -> vfield VBAR vfields . [ RPAREN BARRBRACKET ]
-- On RPAREN reduce production vfields -> vfield VBAR vfields
-- On BARRBRACKET reduce production vfields -> vfield VBAR vfields

State 84:
kinded_row_var -> row_var . subkind [ RPAREN BARRBRACKET ]
vfields -> row_var . [ RPAREN BARRBRACKET ]
-- On BASE shift to state 85
-- On ANY shift to state 86
-- On subkind shift to state 87
-- On RPAREN reduce production vfields -> row_var
-- On BARRBRACKET reduce production vfields -> row_var

State 85:
subkind -> BASE . [ WITH WHERE VBAR VAR VALUES SQUIGRARROW SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production subkind -> BASE
-- On WHERE reduce production subkind -> BASE
-- On VBAR reduce production subkind -> BASE
-- On VAR reduce production subkind -> BASE
-- On VALUES reduce production subkind -> BASE
-- On SQUIGRARROW reduce production subkind -> BASE
-- On SERVER reduce production subkind -> BASE
-- On SEMICOLON reduce production subkind -> BASE
-- On RPAREN reduce production subkind -> BASE
-- On RETURNING reduce production subkind -> BASE
-- On RBRACKET reduce production subkind -> BASE
-- On RBRACE reduce production subkind -> BASE
-- On RARROW reduce production subkind -> BASE
-- On POSTFIXOP reduce production subkind -> BASE
-- On OP reduce production subkind -> BASE
-- On NATIVE reduce production subkind -> BASE
-- On LLARROW reduce production subkind -> BASE
-- On LBRACE reduce production subkind -> BASE
-- On LARROW reduce production subkind -> BASE
-- On INFIXR9 reduce production subkind -> BASE
-- On INFIXR8 reduce production subkind -> BASE
-- On INFIXR7 reduce production subkind -> BASE
-- On INFIXR6 reduce production subkind -> BASE
-- On INFIXR5 reduce production subkind -> BASE
-- On INFIXR4 reduce production subkind -> BASE
-- On INFIXR3 reduce production subkind -> BASE
-- On INFIXR2 reduce production subkind -> BASE
-- On INFIXR1 reduce production subkind -> BASE
-- On INFIXR0 reduce production subkind -> BASE
-- On INFIXL9 reduce production subkind -> BASE
-- On INFIXL8 reduce production subkind -> BASE
-- On INFIXL7 reduce production subkind -> BASE
-- On INFIXL6 reduce production subkind -> BASE
-- On INFIXL5 reduce production subkind -> BASE
-- On INFIXL4 reduce production subkind -> BASE
-- On INFIXL3 reduce production subkind -> BASE
-- On INFIXL2 reduce production subkind -> BASE
-- On INFIXL1 reduce production subkind -> BASE
-- On INFIXL0 reduce production subkind -> BASE
-- On INFIX9 reduce production subkind -> BASE
-- On INFIX8 reduce production subkind -> BASE
-- On INFIX7 reduce production subkind -> BASE
-- On INFIX6 reduce production subkind -> BASE
-- On INFIX5 reduce production subkind -> BASE
-- On INFIX4 reduce production subkind -> BASE
-- On INFIX3 reduce production subkind -> BASE
-- On INFIX2 reduce production subkind -> BASE
-- On INFIX1 reduce production subkind -> BASE
-- On INFIX0 reduce production subkind -> BASE
-- On FUN reduce production subkind -> BASE
-- On FROM reduce production subkind -> BASE
-- On EQ reduce production subkind -> BASE
-- On END reduce production subkind -> BASE
-- On ELSE reduce production subkind -> BASE
-- On DOTDOT reduce production subkind -> BASE
-- On COMMA reduce production subkind -> BASE
-- On COLON reduce production subkind -> BASE
-- On CLIENT reduce production subkind -> BASE
-- On CASE reduce production subkind -> BASE
-- On BARRBRACKET reduce production subkind -> BASE
-- On BARRBRACE reduce production subkind -> BASE

State 86:
subkind -> ANY . [ WITH WHERE VBAR VAR VALUES SQUIGRARROW SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production subkind -> ANY
-- On WHERE reduce production subkind -> ANY
-- On VBAR reduce production subkind -> ANY
-- On VAR reduce production subkind -> ANY
-- On VALUES reduce production subkind -> ANY
-- On SQUIGRARROW reduce production subkind -> ANY
-- On SERVER reduce production subkind -> ANY
-- On SEMICOLON reduce production subkind -> ANY
-- On RPAREN reduce production subkind -> ANY
-- On RETURNING reduce production subkind -> ANY
-- On RBRACKET reduce production subkind -> ANY
-- On RBRACE reduce production subkind -> ANY
-- On RARROW reduce production subkind -> ANY
-- On POSTFIXOP reduce production subkind -> ANY
-- On OP reduce production subkind -> ANY
-- On NATIVE reduce production subkind -> ANY
-- On LLARROW reduce production subkind -> ANY
-- On LBRACE reduce production subkind -> ANY
-- On LARROW reduce production subkind -> ANY
-- On INFIXR9 reduce production subkind -> ANY
-- On INFIXR8 reduce production subkind -> ANY
-- On INFIXR7 reduce production subkind -> ANY
-- On INFIXR6 reduce production subkind -> ANY
-- On INFIXR5 reduce production subkind -> ANY
-- On INFIXR4 reduce production subkind -> ANY
-- On INFIXR3 reduce production subkind -> ANY
-- On INFIXR2 reduce production subkind -> ANY
-- On INFIXR1 reduce production subkind -> ANY
-- On INFIXR0 reduce production subkind -> ANY
-- On INFIXL9 reduce production subkind -> ANY
-- On INFIXL8 reduce production subkind -> ANY
-- On INFIXL7 reduce production subkind -> ANY
-- On INFIXL6 reduce production subkind -> ANY
-- On INFIXL5 reduce production subkind -> ANY
-- On INFIXL4 reduce production subkind -> ANY
-- On INFIXL3 reduce production subkind -> ANY
-- On INFIXL2 reduce production subkind -> ANY
-- On INFIXL1 reduce production subkind -> ANY
-- On INFIXL0 reduce production subkind -> ANY
-- On INFIX9 reduce production subkind -> ANY
-- On INFIX8 reduce production subkind -> ANY
-- On INFIX7 reduce production subkind -> ANY
-- On INFIX6 reduce production subkind -> ANY
-- On INFIX5 reduce production subkind -> ANY
-- On INFIX4 reduce production subkind -> ANY
-- On INFIX3 reduce production subkind -> ANY
-- On INFIX2 reduce production subkind -> ANY
-- On INFIX1 reduce production subkind -> ANY
-- On INFIX0 reduce production subkind -> ANY
-- On FUN reduce production subkind -> ANY
-- On FROM reduce production subkind -> ANY
-- On EQ reduce production subkind -> ANY
-- On END reduce production subkind -> ANY
-- On ELSE reduce production subkind -> ANY
-- On DOTDOT reduce production subkind -> ANY
-- On COMMA reduce production subkind -> ANY
-- On COLON reduce production subkind -> ANY
-- On CLIENT reduce production subkind -> ANY
-- On CASE reduce production subkind -> ANY
-- On BARRBRACKET reduce production subkind -> ANY
-- On BARRBRACE reduce production subkind -> ANY

State 87:
kinded_row_var -> row_var subkind . [ RPAREN RBRACE BARRBRACKET ]
-- On RPAREN reduce production kinded_row_var -> row_var subkind
-- On RBRACE reduce production kinded_row_var -> row_var subkind
-- On BARRBRACKET reduce production kinded_row_var -> row_var subkind

State 88:
row_var -> nonrec_row_var . [ RPAREN RBRACE BASE BARRBRACKET ANY ]
-- On RPAREN reduce production row_var -> nonrec_row_var
-- On RBRACE reduce production row_var -> nonrec_row_var
-- On BASE reduce production row_var -> nonrec_row_var
-- On BARRBRACKET reduce production row_var -> nonrec_row_var
-- On ANY reduce production row_var -> nonrec_row_var

State 89:
vfields -> kinded_row_var . [ RPAREN BARRBRACKET ]
-- On RPAREN reduce production vfields -> kinded_row_var
-- On BARRBRACKET reduce production vfields -> kinded_row_var

State 90:
primary_datatype -> LBRACKET . datatype RBRACKET [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 202

State 91:
forall_datatype -> FORALL . varlist DOT datatype [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On VARIABLE shift to state 92
-- On varlist shift to state 99
-- On typearg shift to state 199

State 92:
typearg -> VARIABLE . [ RPAREN DOT COMMA ]
typearg -> VARIABLE . kind [ RPAREN DOT COMMA ]
-- On TYPE shift to state 93
-- On ROW shift to state 94
-- On PRESENCE shift to state 95
-- On BASETYPE shift to state 96
-- On BASEROW shift to state 97
-- On kind shift to state 98
-- On RPAREN reduce production typearg -> VARIABLE
-- On DOT reduce production typearg -> VARIABLE
-- On COMMA reduce production typearg -> VARIABLE

State 93:
kind -> TYPE . [ RPAREN DOT COMMA ]
-- On RPAREN reduce production kind -> TYPE
-- On DOT reduce production kind -> TYPE
-- On COMMA reduce production kind -> TYPE

State 94:
kind -> ROW . [ RPAREN DOT COMMA ]
-- On RPAREN reduce production kind -> ROW
-- On DOT reduce production kind -> ROW
-- On COMMA reduce production kind -> ROW

State 95:
kind -> PRESENCE . [ RPAREN DOT COMMA ]
-- On RPAREN reduce production kind -> PRESENCE
-- On DOT reduce production kind -> PRESENCE
-- On COMMA reduce production kind -> PRESENCE

State 96:
kind -> BASETYPE . [ RPAREN DOT COMMA ]
-- On RPAREN reduce production kind -> BASETYPE
-- On DOT reduce production kind -> BASETYPE
-- On COMMA reduce production kind -> BASETYPE

State 97:
kind -> BASEROW . [ RPAREN DOT COMMA ]
-- On RPAREN reduce production kind -> BASEROW
-- On DOT reduce production kind -> BASEROW
-- On COMMA reduce production kind -> BASEROW

State 98:
typearg -> VARIABLE kind . [ RPAREN DOT COMMA ]
-- On RPAREN reduce production typearg -> VARIABLE kind
-- On DOT reduce production typearg -> VARIABLE kind
-- On COMMA reduce production typearg -> VARIABLE kind

State 99:
forall_datatype -> FORALL varlist . DOT datatype [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On DOT shift to state 100

State 100:
forall_datatype -> FORALL varlist DOT . datatype [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 198

State 101:
primary_datatype -> CONSTRUCTOR . [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
primary_datatype -> CONSTRUCTOR . LPAREN type_arg_list RPAREN [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On LPAREN shift to state 102
-- On WITH reduce production primary_datatype -> CONSTRUCTOR
-- On WHERE reduce production primary_datatype -> CONSTRUCTOR
-- On VBAR reduce production primary_datatype -> CONSTRUCTOR
-- On VAR reduce production primary_datatype -> CONSTRUCTOR
-- On VALUES reduce production primary_datatype -> CONSTRUCTOR
-- On SERVER reduce production primary_datatype -> CONSTRUCTOR
-- On SEMICOLON reduce production primary_datatype -> CONSTRUCTOR
-- On RPAREN reduce production primary_datatype -> CONSTRUCTOR
-- On RETURNING reduce production primary_datatype -> CONSTRUCTOR
-- On RBRACKET reduce production primary_datatype -> CONSTRUCTOR
-- On RBRACE reduce production primary_datatype -> CONSTRUCTOR
-- On RARROW reduce production primary_datatype -> CONSTRUCTOR
-- On POSTFIXOP reduce production primary_datatype -> CONSTRUCTOR
-- On OP reduce production primary_datatype -> CONSTRUCTOR
-- On NATIVE reduce production primary_datatype -> CONSTRUCTOR
-- On LLARROW reduce production primary_datatype -> CONSTRUCTOR
-- On LBRACE reduce production primary_datatype -> CONSTRUCTOR
-- On LARROW reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR9 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR8 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR7 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR6 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR5 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR4 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR3 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR2 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR1 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXR0 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL9 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL8 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL7 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL6 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL5 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL4 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL3 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL2 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL1 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIXL0 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX9 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX8 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX7 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX6 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX5 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX4 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX3 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX2 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX1 reduce production primary_datatype -> CONSTRUCTOR
-- On INFIX0 reduce production primary_datatype -> CONSTRUCTOR
-- On FUN reduce production primary_datatype -> CONSTRUCTOR
-- On FROM reduce production primary_datatype -> CONSTRUCTOR
-- On EQ reduce production primary_datatype -> CONSTRUCTOR
-- On END reduce production primary_datatype -> CONSTRUCTOR
-- On ELSE reduce production primary_datatype -> CONSTRUCTOR
-- On DOTDOT reduce production primary_datatype -> CONSTRUCTOR
-- On COMMA reduce production primary_datatype -> CONSTRUCTOR
-- On COLON reduce production primary_datatype -> CONSTRUCTOR
-- On CLIENT reduce production primary_datatype -> CONSTRUCTOR
-- On CASE reduce production primary_datatype -> CONSTRUCTOR
-- On BARRBRACKET reduce production primary_datatype -> CONSTRUCTOR
-- On BARRBRACE reduce production primary_datatype -> CONSTRUCTOR

State 102:
primary_datatype -> CONSTRUCTOR LPAREN . type_arg_list RPAREN [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TYPE shift to state 103
-- On TABLEHANDLE shift to state 46
-- On ROW shift to state 165
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On PRESENCE shift to state 185
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On LBRACE shift to state 189
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On type_arg_list shift to state 192
-- On type_arg shift to state 194
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 197

State 103:
type_arg -> TYPE . LPAREN datatype RPAREN [ RPAREN COMMA ]
-- On LPAREN shift to state 104

State 104:
type_arg -> TYPE LPAREN . datatype RPAREN [ RPAREN COMMA ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 163

State 105:
kinded_type_var -> type_var . subkind [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
primary_datatype -> type_var . [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On BASE shift to state 85
-- On ANY shift to state 86
-- On subkind shift to state 106
-- On WITH reduce production primary_datatype -> type_var
-- On WHERE reduce production primary_datatype -> type_var
-- On VBAR reduce production primary_datatype -> type_var
-- On VAR reduce production primary_datatype -> type_var
-- On VALUES reduce production primary_datatype -> type_var
-- On SERVER reduce production primary_datatype -> type_var
-- On SEMICOLON reduce production primary_datatype -> type_var
-- On RPAREN reduce production primary_datatype -> type_var
-- On RETURNING reduce production primary_datatype -> type_var
-- On RBRACKET reduce production primary_datatype -> type_var
-- On RBRACE reduce production primary_datatype -> type_var
-- On RARROW reduce production primary_datatype -> type_var
-- On POSTFIXOP reduce production primary_datatype -> type_var
-- On OP reduce production primary_datatype -> type_var
-- On NATIVE reduce production primary_datatype -> type_var
-- On LLARROW reduce production primary_datatype -> type_var
-- On LBRACE reduce production primary_datatype -> type_var
-- On LARROW reduce production primary_datatype -> type_var
-- On INFIXR9 reduce production primary_datatype -> type_var
-- On INFIXR8 reduce production primary_datatype -> type_var
-- On INFIXR7 reduce production primary_datatype -> type_var
-- On INFIXR6 reduce production primary_datatype -> type_var
-- On INFIXR5 reduce production primary_datatype -> type_var
-- On INFIXR4 reduce production primary_datatype -> type_var
-- On INFIXR3 reduce production primary_datatype -> type_var
-- On INFIXR2 reduce production primary_datatype -> type_var
-- On INFIXR1 reduce production primary_datatype -> type_var
-- On INFIXR0 reduce production primary_datatype -> type_var
-- On INFIXL9 reduce production primary_datatype -> type_var
-- On INFIXL8 reduce production primary_datatype -> type_var
-- On INFIXL7 reduce production primary_datatype -> type_var
-- On INFIXL6 reduce production primary_datatype -> type_var
-- On INFIXL5 reduce production primary_datatype -> type_var
-- On INFIXL4 reduce production primary_datatype -> type_var
-- On INFIXL3 reduce production primary_datatype -> type_var
-- On INFIXL2 reduce production primary_datatype -> type_var
-- On INFIXL1 reduce production primary_datatype -> type_var
-- On INFIXL0 reduce production primary_datatype -> type_var
-- On INFIX9 reduce production primary_datatype -> type_var
-- On INFIX8 reduce production primary_datatype -> type_var
-- On INFIX7 reduce production primary_datatype -> type_var
-- On INFIX6 reduce production primary_datatype -> type_var
-- On INFIX5 reduce production primary_datatype -> type_var
-- On INFIX4 reduce production primary_datatype -> type_var
-- On INFIX3 reduce production primary_datatype -> type_var
-- On INFIX2 reduce production primary_datatype -> type_var
-- On INFIX1 reduce production primary_datatype -> type_var
-- On INFIX0 reduce production primary_datatype -> type_var
-- On FUN reduce production primary_datatype -> type_var
-- On FROM reduce production primary_datatype -> type_var
-- On EQ reduce production primary_datatype -> type_var
-- On END reduce production primary_datatype -> type_var
-- On ELSE reduce production primary_datatype -> type_var
-- On DOTDOT reduce production primary_datatype -> type_var
-- On COMMA reduce production primary_datatype -> type_var
-- On COLON reduce production primary_datatype -> type_var
-- On CLIENT reduce production primary_datatype -> type_var
-- On CASE reduce production primary_datatype -> type_var
-- On BARRBRACKET reduce production primary_datatype -> type_var
-- On BARRBRACE reduce production primary_datatype -> type_var

State 106:
kinded_type_var -> type_var subkind . [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production kinded_type_var -> type_var subkind
-- On WHERE reduce production kinded_type_var -> type_var subkind
-- On VBAR reduce production kinded_type_var -> type_var subkind
-- On VAR reduce production kinded_type_var -> type_var subkind
-- On VALUES reduce production kinded_type_var -> type_var subkind
-- On SERVER reduce production kinded_type_var -> type_var subkind
-- On SEMICOLON reduce production kinded_type_var -> type_var subkind
-- On RPAREN reduce production kinded_type_var -> type_var subkind
-- On RETURNING reduce production kinded_type_var -> type_var subkind
-- On RBRACKET reduce production kinded_type_var -> type_var subkind
-- On RBRACE reduce production kinded_type_var -> type_var subkind
-- On RARROW reduce production kinded_type_var -> type_var subkind
-- On POSTFIXOP reduce production kinded_type_var -> type_var subkind
-- On OP reduce production kinded_type_var -> type_var subkind
-- On NATIVE reduce production kinded_type_var -> type_var subkind
-- On LLARROW reduce production kinded_type_var -> type_var subkind
-- On LBRACE reduce production kinded_type_var -> type_var subkind
-- On LARROW reduce production kinded_type_var -> type_var subkind
-- On INFIXR9 reduce production kinded_type_var -> type_var subkind
-- On INFIXR8 reduce production kinded_type_var -> type_var subkind
-- On INFIXR7 reduce production kinded_type_var -> type_var subkind
-- On INFIXR6 reduce production kinded_type_var -> type_var subkind
-- On INFIXR5 reduce production kinded_type_var -> type_var subkind
-- On INFIXR4 reduce production kinded_type_var -> type_var subkind
-- On INFIXR3 reduce production kinded_type_var -> type_var subkind
-- On INFIXR2 reduce production kinded_type_var -> type_var subkind
-- On INFIXR1 reduce production kinded_type_var -> type_var subkind
-- On INFIXR0 reduce production kinded_type_var -> type_var subkind
-- On INFIXL9 reduce production kinded_type_var -> type_var subkind
-- On INFIXL8 reduce production kinded_type_var -> type_var subkind
-- On INFIXL7 reduce production kinded_type_var -> type_var subkind
-- On INFIXL6 reduce production kinded_type_var -> type_var subkind
-- On INFIXL5 reduce production kinded_type_var -> type_var subkind
-- On INFIXL4 reduce production kinded_type_var -> type_var subkind
-- On INFIXL3 reduce production kinded_type_var -> type_var subkind
-- On INFIXL2 reduce production kinded_type_var -> type_var subkind
-- On INFIXL1 reduce production kinded_type_var -> type_var subkind
-- On INFIXL0 reduce production kinded_type_var -> type_var subkind
-- On INFIX9 reduce production kinded_type_var -> type_var subkind
-- On INFIX8 reduce production kinded_type_var -> type_var subkind
-- On INFIX7 reduce production kinded_type_var -> type_var subkind
-- On INFIX6 reduce production kinded_type_var -> type_var subkind
-- On INFIX5 reduce production kinded_type_var -> type_var subkind
-- On INFIX4 reduce production kinded_type_var -> type_var subkind
-- On INFIX3 reduce production kinded_type_var -> type_var subkind
-- On INFIX2 reduce production kinded_type_var -> type_var subkind
-- On INFIX1 reduce production kinded_type_var -> type_var subkind
-- On INFIX0 reduce production kinded_type_var -> type_var subkind
-- On FUN reduce production kinded_type_var -> type_var subkind
-- On FROM reduce production kinded_type_var -> type_var subkind
-- On EQ reduce production kinded_type_var -> type_var subkind
-- On END reduce production kinded_type_var -> type_var subkind
-- On ELSE reduce production kinded_type_var -> type_var subkind
-- On DOTDOT reduce production kinded_type_var -> type_var subkind
-- On COMMA reduce production kinded_type_var -> type_var subkind
-- On COLON reduce production kinded_type_var -> type_var subkind
-- On CLIENT reduce production kinded_type_var -> type_var subkind
-- On CASE reduce production kinded_type_var -> type_var subkind
-- On BARRBRACKET reduce production kinded_type_var -> type_var subkind
-- On BARRBRACE reduce production kinded_type_var -> type_var subkind

State 107:
datatype -> straight_arrow . [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production datatype -> straight_arrow
-- On WHERE reduce production datatype -> straight_arrow
-- On VBAR reduce production datatype -> straight_arrow
-- On VAR reduce production datatype -> straight_arrow
-- On VALUES reduce production datatype -> straight_arrow
-- On SEMICOLON reduce production datatype -> straight_arrow
-- On RPAREN reduce production datatype -> straight_arrow
-- On RETURNING reduce production datatype -> straight_arrow
-- On RBRACKET reduce production datatype -> straight_arrow
-- On RBRACE reduce production datatype -> straight_arrow
-- On OP reduce production datatype -> straight_arrow
-- On LARROW reduce production datatype -> straight_arrow
-- On FUN reduce production datatype -> straight_arrow
-- On FROM reduce production datatype -> straight_arrow
-- On END reduce production datatype -> straight_arrow
-- On ELSE reduce production datatype -> straight_arrow
-- On DOTDOT reduce production datatype -> straight_arrow
-- On COMMA reduce production datatype -> straight_arrow
-- On COLON reduce production datatype -> straight_arrow
-- On CASE reduce production datatype -> straight_arrow
-- On BARRBRACKET reduce production datatype -> straight_arrow
-- On BARRBRACE reduce production datatype -> straight_arrow

State 108:
datatype -> squiggly_arrow . [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production datatype -> squiggly_arrow
-- On WHERE reduce production datatype -> squiggly_arrow
-- On VBAR reduce production datatype -> squiggly_arrow
-- On VAR reduce production datatype -> squiggly_arrow
-- On VALUES reduce production datatype -> squiggly_arrow
-- On SEMICOLON reduce production datatype -> squiggly_arrow
-- On RPAREN reduce production datatype -> squiggly_arrow
-- On RETURNING reduce production datatype -> squiggly_arrow
-- On RBRACKET reduce production datatype -> squiggly_arrow
-- On RBRACE reduce production datatype -> squiggly_arrow
-- On OP reduce production datatype -> squiggly_arrow
-- On LARROW reduce production datatype -> squiggly_arrow
-- On FUN reduce production datatype -> squiggly_arrow
-- On FROM reduce production datatype -> squiggly_arrow
-- On END reduce production datatype -> squiggly_arrow
-- On ELSE reduce production datatype -> squiggly_arrow
-- On DOTDOT reduce production datatype -> squiggly_arrow
-- On COMMA reduce production datatype -> squiggly_arrow
-- On COLON reduce production datatype -> squiggly_arrow
-- On CASE reduce production datatype -> squiggly_arrow
-- On BARRBRACKET reduce production datatype -> squiggly_arrow
-- On BARRBRACE reduce production datatype -> squiggly_arrow

State 109:
forall_datatype -> primary_datatype . [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production forall_datatype -> primary_datatype
-- On WHERE reduce production forall_datatype -> primary_datatype
-- On VBAR reduce production forall_datatype -> primary_datatype
-- On VAR reduce production forall_datatype -> primary_datatype
-- On VALUES reduce production forall_datatype -> primary_datatype
-- On SEMICOLON reduce production forall_datatype -> primary_datatype
-- On RPAREN reduce production forall_datatype -> primary_datatype
-- On RETURNING reduce production forall_datatype -> primary_datatype
-- On RBRACKET reduce production forall_datatype -> primary_datatype
-- On RBRACE reduce production forall_datatype -> primary_datatype
-- On OP reduce production forall_datatype -> primary_datatype
-- On LARROW reduce production forall_datatype -> primary_datatype
-- On FUN reduce production forall_datatype -> primary_datatype
-- On FROM reduce production forall_datatype -> primary_datatype
-- On END reduce production forall_datatype -> primary_datatype
-- On ELSE reduce production forall_datatype -> primary_datatype
-- On DOTDOT reduce production forall_datatype -> primary_datatype
-- On COMMA reduce production forall_datatype -> primary_datatype
-- On COLON reduce production forall_datatype -> primary_datatype
-- On CASE reduce production forall_datatype -> primary_datatype
-- On BARRBRACKET reduce production forall_datatype -> primary_datatype
-- On BARRBRACE reduce production forall_datatype -> primary_datatype

State 110:
primary_datatype -> parenthesized_datatypes . [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
squiggly_arrow -> parenthesized_datatypes . squig_arrow_prefix SQUIGRARROW datatype [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
squiggly_arrow -> parenthesized_datatypes . SQUIGRARROW datatype [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
straight_arrow -> parenthesized_datatypes . straight_arrow_prefix RARROW datatype [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
straight_arrow -> parenthesized_datatypes . RARROW datatype [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On TILDE shift to state 111
-- On SQUIGRARROW shift to state 115
-- On RARROW shift to state 120
-- On MINUS shift to state 122
-- On LBRACE shift to state 125
-- On straight_arrow_prefix shift to state 155
-- On squig_arrow_prefix shift to state 158
-- On hear_arrow_prefix shift to state 161
-- On arrow_prefix shift to state 162
-- On WITH reduce production primary_datatype -> parenthesized_datatypes
-- On WHERE reduce production primary_datatype -> parenthesized_datatypes
-- On VBAR reduce production primary_datatype -> parenthesized_datatypes
-- On VAR reduce production primary_datatype -> parenthesized_datatypes
-- On VALUES reduce production primary_datatype -> parenthesized_datatypes
-- On SEMICOLON reduce production primary_datatype -> parenthesized_datatypes
-- On RPAREN reduce production primary_datatype -> parenthesized_datatypes
-- On RETURNING reduce production primary_datatype -> parenthesized_datatypes
-- On RBRACKET reduce production primary_datatype -> parenthesized_datatypes
-- On RBRACE reduce production primary_datatype -> parenthesized_datatypes
-- On OP reduce production primary_datatype -> parenthesized_datatypes
-- On LARROW reduce production primary_datatype -> parenthesized_datatypes
-- On FUN reduce production primary_datatype -> parenthesized_datatypes
-- On FROM reduce production primary_datatype -> parenthesized_datatypes
-- On END reduce production primary_datatype -> parenthesized_datatypes
-- On ELSE reduce production primary_datatype -> parenthesized_datatypes
-- On DOTDOT reduce production primary_datatype -> parenthesized_datatypes
-- On COMMA reduce production primary_datatype -> parenthesized_datatypes
-- On COLON reduce production primary_datatype -> parenthesized_datatypes
-- On CASE reduce production primary_datatype -> parenthesized_datatypes
-- On BARRBRACKET reduce production primary_datatype -> parenthesized_datatypes
-- On BARRBRACE reduce production primary_datatype -> parenthesized_datatypes

State 111:
squig_arrow_prefix -> TILDE . nonrec_row_var [ SQUIGRARROW ]
squig_arrow_prefix -> TILDE . kinded_nonrec_row_var [ SQUIGRARROW ]
-- On VARIABLE shift to state 55
-- On UNDERSCORE shift to state 56
-- On QUESTIONVAR shift to state 57
-- On QUESTION shift to state 58
-- On nonrec_row_var shift to state 112
-- On kinded_nonrec_row_var shift to state 114

State 112:
kinded_nonrec_row_var -> nonrec_row_var . subkind [ SQUIGRARROW ]
squig_arrow_prefix -> TILDE nonrec_row_var . [ SQUIGRARROW ]
-- On BASE shift to state 85
-- On ANY shift to state 86
-- On subkind shift to state 113
-- On SQUIGRARROW reduce production squig_arrow_prefix -> TILDE nonrec_row_var

State 113:
kinded_nonrec_row_var -> nonrec_row_var subkind . [ SQUIGRARROW RBRACE RARROW ]
-- On SQUIGRARROW reduce production kinded_nonrec_row_var -> nonrec_row_var subkind
-- On RBRACE reduce production kinded_nonrec_row_var -> nonrec_row_var subkind
-- On RARROW reduce production kinded_nonrec_row_var -> nonrec_row_var subkind

State 114:
squig_arrow_prefix -> TILDE kinded_nonrec_row_var . [ SQUIGRARROW ]
-- On SQUIGRARROW reduce production squig_arrow_prefix -> TILDE kinded_nonrec_row_var

State 115:
squiggly_arrow -> parenthesized_datatypes SQUIGRARROW . datatype [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 119

State 116:
datatype -> mu_datatype . [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production datatype -> mu_datatype
-- On WHERE reduce production datatype -> mu_datatype
-- On VBAR reduce production datatype -> mu_datatype
-- On VAR reduce production datatype -> mu_datatype
-- On VALUES reduce production datatype -> mu_datatype
-- On SEMICOLON reduce production datatype -> mu_datatype
-- On RPAREN reduce production datatype -> mu_datatype
-- On RETURNING reduce production datatype -> mu_datatype
-- On RBRACKET reduce production datatype -> mu_datatype
-- On RBRACE reduce production datatype -> mu_datatype
-- On OP reduce production datatype -> mu_datatype
-- On LARROW reduce production datatype -> mu_datatype
-- On FUN reduce production datatype -> mu_datatype
-- On FROM reduce production datatype -> mu_datatype
-- On END reduce production datatype -> mu_datatype
-- On ELSE reduce production datatype -> mu_datatype
-- On DOTDOT reduce production datatype -> mu_datatype
-- On COMMA reduce production datatype -> mu_datatype
-- On COLON reduce production datatype -> mu_datatype
-- On CASE reduce production datatype -> mu_datatype
-- On BARRBRACKET reduce production datatype -> mu_datatype
-- On BARRBRACE reduce production datatype -> mu_datatype

State 117:
primary_datatype -> kinded_type_var . [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production primary_datatype -> kinded_type_var
-- On WHERE reduce production primary_datatype -> kinded_type_var
-- On VBAR reduce production primary_datatype -> kinded_type_var
-- On VAR reduce production primary_datatype -> kinded_type_var
-- On VALUES reduce production primary_datatype -> kinded_type_var
-- On SERVER reduce production primary_datatype -> kinded_type_var
-- On SEMICOLON reduce production primary_datatype -> kinded_type_var
-- On RPAREN reduce production primary_datatype -> kinded_type_var
-- On RETURNING reduce production primary_datatype -> kinded_type_var
-- On RBRACKET reduce production primary_datatype -> kinded_type_var
-- On RBRACE reduce production primary_datatype -> kinded_type_var
-- On RARROW reduce production primary_datatype -> kinded_type_var
-- On POSTFIXOP reduce production primary_datatype -> kinded_type_var
-- On OP reduce production primary_datatype -> kinded_type_var
-- On NATIVE reduce production primary_datatype -> kinded_type_var
-- On LLARROW reduce production primary_datatype -> kinded_type_var
-- On LBRACE reduce production primary_datatype -> kinded_type_var
-- On LARROW reduce production primary_datatype -> kinded_type_var
-- On INFIXR9 reduce production primary_datatype -> kinded_type_var
-- On INFIXR8 reduce production primary_datatype -> kinded_type_var
-- On INFIXR7 reduce production primary_datatype -> kinded_type_var
-- On INFIXR6 reduce production primary_datatype -> kinded_type_var
-- On INFIXR5 reduce production primary_datatype -> kinded_type_var
-- On INFIXR4 reduce production primary_datatype -> kinded_type_var
-- On INFIXR3 reduce production primary_datatype -> kinded_type_var
-- On INFIXR2 reduce production primary_datatype -> kinded_type_var
-- On INFIXR1 reduce production primary_datatype -> kinded_type_var
-- On INFIXR0 reduce production primary_datatype -> kinded_type_var
-- On INFIXL9 reduce production primary_datatype -> kinded_type_var
-- On INFIXL8 reduce production primary_datatype -> kinded_type_var
-- On INFIXL7 reduce production primary_datatype -> kinded_type_var
-- On INFIXL6 reduce production primary_datatype -> kinded_type_var
-- On INFIXL5 reduce production primary_datatype -> kinded_type_var
-- On INFIXL4 reduce production primary_datatype -> kinded_type_var
-- On INFIXL3 reduce production primary_datatype -> kinded_type_var
-- On INFIXL2 reduce production primary_datatype -> kinded_type_var
-- On INFIXL1 reduce production primary_datatype -> kinded_type_var
-- On INFIXL0 reduce production primary_datatype -> kinded_type_var
-- On INFIX9 reduce production primary_datatype -> kinded_type_var
-- On INFIX8 reduce production primary_datatype -> kinded_type_var
-- On INFIX7 reduce production primary_datatype -> kinded_type_var
-- On INFIX6 reduce production primary_datatype -> kinded_type_var
-- On INFIX5 reduce production primary_datatype -> kinded_type_var
-- On INFIX4 reduce production primary_datatype -> kinded_type_var
-- On INFIX3 reduce production primary_datatype -> kinded_type_var
-- On INFIX2 reduce production primary_datatype -> kinded_type_var
-- On INFIX1 reduce production primary_datatype -> kinded_type_var
-- On INFIX0 reduce production primary_datatype -> kinded_type_var
-- On FUN reduce production primary_datatype -> kinded_type_var
-- On FROM reduce production primary_datatype -> kinded_type_var
-- On EQ reduce production primary_datatype -> kinded_type_var
-- On END reduce production primary_datatype -> kinded_type_var
-- On ELSE reduce production primary_datatype -> kinded_type_var
-- On DOTDOT reduce production primary_datatype -> kinded_type_var
-- On COMMA reduce production primary_datatype -> kinded_type_var
-- On COLON reduce production primary_datatype -> kinded_type_var
-- On CLIENT reduce production primary_datatype -> kinded_type_var
-- On CASE reduce production primary_datatype -> kinded_type_var
-- On BARRBRACKET reduce production primary_datatype -> kinded_type_var
-- On BARRBRACE reduce production primary_datatype -> kinded_type_var

State 118:
mu_datatype -> forall_datatype . [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production mu_datatype -> forall_datatype
-- On WHERE reduce production mu_datatype -> forall_datatype
-- On VBAR reduce production mu_datatype -> forall_datatype
-- On VAR reduce production mu_datatype -> forall_datatype
-- On VALUES reduce production mu_datatype -> forall_datatype
-- On SEMICOLON reduce production mu_datatype -> forall_datatype
-- On RPAREN reduce production mu_datatype -> forall_datatype
-- On RETURNING reduce production mu_datatype -> forall_datatype
-- On RBRACKET reduce production mu_datatype -> forall_datatype
-- On RBRACE reduce production mu_datatype -> forall_datatype
-- On OP reduce production mu_datatype -> forall_datatype
-- On LARROW reduce production mu_datatype -> forall_datatype
-- On FUN reduce production mu_datatype -> forall_datatype
-- On FROM reduce production mu_datatype -> forall_datatype
-- On END reduce production mu_datatype -> forall_datatype
-- On ELSE reduce production mu_datatype -> forall_datatype
-- On DOTDOT reduce production mu_datatype -> forall_datatype
-- On COMMA reduce production mu_datatype -> forall_datatype
-- On COLON reduce production mu_datatype -> forall_datatype
-- On CASE reduce production mu_datatype -> forall_datatype
-- On BARRBRACKET reduce production mu_datatype -> forall_datatype
-- On BARRBRACE reduce production mu_datatype -> forall_datatype

State 119:
squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype . [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On WHERE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On VBAR reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On VAR reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On VALUES reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On SEMICOLON reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On RPAREN reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On RETURNING reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On RBRACKET reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On RBRACE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On OP reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On LARROW reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On FUN reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On FROM reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On END reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On ELSE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On DOTDOT reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On COMMA reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On COLON reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On CASE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On BARRBRACKET reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype
-- On BARRBRACE reduce production squiggly_arrow -> parenthesized_datatypes SQUIGRARROW datatype

State 120:
straight_arrow -> parenthesized_datatypes RARROW . datatype [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 121

State 121:
straight_arrow -> parenthesized_datatypes RARROW datatype . [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On WHERE reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On VBAR reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On VAR reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On VALUES reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On SEMICOLON reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On RPAREN reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On RETURNING reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On RBRACKET reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On RBRACE reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On OP reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On LARROW reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On FUN reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On FROM reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On END reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On ELSE reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On DOTDOT reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On COMMA reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On COLON reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On CASE reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On BARRBRACKET reduce production straight_arrow -> parenthesized_datatypes RARROW datatype
-- On BARRBRACE reduce production straight_arrow -> parenthesized_datatypes RARROW datatype

State 122:
straight_arrow_prefix -> MINUS . nonrec_row_var [ RARROW ]
straight_arrow_prefix -> MINUS . kinded_nonrec_row_var [ RARROW ]
-- On VARIABLE shift to state 55
-- On UNDERSCORE shift to state 56
-- On QUESTIONVAR shift to state 57
-- On QUESTION shift to state 58
-- On nonrec_row_var shift to state 123
-- On kinded_nonrec_row_var shift to state 124

State 123:
kinded_nonrec_row_var -> nonrec_row_var . subkind [ RARROW ]
straight_arrow_prefix -> MINUS nonrec_row_var . [ RARROW ]
-- On BASE shift to state 85
-- On ANY shift to state 86
-- On subkind shift to state 113
-- On RARROW reduce production straight_arrow_prefix -> MINUS nonrec_row_var

State 124:
straight_arrow_prefix -> MINUS kinded_nonrec_row_var . [ RARROW ]
-- On RARROW reduce production straight_arrow_prefix -> MINUS kinded_nonrec_row_var

State 125:
arrow_prefix -> LBRACE . RBRACE [ SQUIGRARROW RARROW ]
arrow_prefix -> LBRACE . efields RBRACE [ SQUIGRARROW RARROW ]
hear_arrow_prefix -> LBRACE . COLON datatype COMMA efields RBRACE [ SQUIGRARROW ]
hear_arrow_prefix -> LBRACE . COLON datatype RBRACE [ SQUIGRARROW ]
hear_arrow_prefix -> LBRACE . COLON datatype VBAR nonrec_row_var RBRACE [ SQUIGRARROW ]
hear_arrow_prefix -> LBRACE . COLON datatype VBAR kinded_nonrec_row_var RBRACE [ SQUIGRARROW ]
-- On VBAR shift to state 126
-- On VARIABLE shift to state 129
-- On RBRACE shift to state 130
-- On CONSTRUCTOR shift to state 131
-- On COLON shift to state 132
-- On efields shift to state 153
-- On efield shift to state 143
-- On effect_label shift to state 149

State 126:
efields -> VBAR . nonrec_row_var [ RBRACE ]
efields -> VBAR . kinded_nonrec_row_var [ RBRACE ]
-- On VARIABLE shift to state 55
-- On UNDERSCORE shift to state 56
-- On QUESTIONVAR shift to state 57
-- On QUESTION shift to state 58
-- On nonrec_row_var shift to state 127
-- On kinded_nonrec_row_var shift to state 128

State 127:
efields -> VBAR nonrec_row_var . [ RBRACE ]
kinded_nonrec_row_var -> nonrec_row_var . subkind [ RBRACE ]
-- On BASE shift to state 85
-- On ANY shift to state 86
-- On subkind shift to state 113
-- On RBRACE reduce production efields -> VBAR nonrec_row_var

State 128:
efields -> VBAR kinded_nonrec_row_var . [ RBRACE ]
-- On RBRACE reduce production efields -> VBAR kinded_nonrec_row_var

State 129:
effect_label -> VARIABLE . [ VBAR RBRACE MINUS LBRACE COMMA COLON ]
-- On VBAR reduce production effect_label -> VARIABLE
-- On RBRACE reduce production effect_label -> VARIABLE
-- On MINUS reduce production effect_label -> VARIABLE
-- On LBRACE reduce production effect_label -> VARIABLE
-- On COMMA reduce production effect_label -> VARIABLE
-- On COLON reduce production effect_label -> VARIABLE

State 130:
arrow_prefix -> LBRACE RBRACE . [ SQUIGRARROW RARROW ]
-- On SQUIGRARROW reduce production arrow_prefix -> LBRACE RBRACE
-- On RARROW reduce production arrow_prefix -> LBRACE RBRACE

State 131:
effect_label -> CONSTRUCTOR . [ VBAR RBRACE MINUS LBRACE COMMA COLON ]
-- On VBAR reduce production effect_label -> CONSTRUCTOR
-- On RBRACE reduce production effect_label -> CONSTRUCTOR
-- On MINUS reduce production effect_label -> CONSTRUCTOR
-- On LBRACE reduce production effect_label -> CONSTRUCTOR
-- On COMMA reduce production effect_label -> CONSTRUCTOR
-- On COLON reduce production effect_label -> CONSTRUCTOR

State 132:
hear_arrow_prefix -> LBRACE COLON . datatype COMMA efields RBRACE [ SQUIGRARROW ]
hear_arrow_prefix -> LBRACE COLON . datatype RBRACE [ SQUIGRARROW ]
hear_arrow_prefix -> LBRACE COLON . datatype VBAR nonrec_row_var RBRACE [ SQUIGRARROW ]
hear_arrow_prefix -> LBRACE COLON . datatype VBAR kinded_nonrec_row_var RBRACE [ SQUIGRARROW ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 133

State 133:
hear_arrow_prefix -> LBRACE COLON datatype . COMMA efields RBRACE [ SQUIGRARROW ]
hear_arrow_prefix -> LBRACE COLON datatype . RBRACE [ SQUIGRARROW ]
hear_arrow_prefix -> LBRACE COLON datatype . VBAR nonrec_row_var RBRACE [ SQUIGRARROW ]
hear_arrow_prefix -> LBRACE COLON datatype . VBAR kinded_nonrec_row_var RBRACE [ SQUIGRARROW ]
-- On VBAR shift to state 134
-- On RBRACE shift to state 139
-- On COMMA shift to state 140

State 134:
hear_arrow_prefix -> LBRACE COLON datatype VBAR . nonrec_row_var RBRACE [ SQUIGRARROW ]
hear_arrow_prefix -> LBRACE COLON datatype VBAR . kinded_nonrec_row_var RBRACE [ SQUIGRARROW ]
-- On VARIABLE shift to state 55
-- On UNDERSCORE shift to state 56
-- On QUESTIONVAR shift to state 57
-- On QUESTION shift to state 58
-- On nonrec_row_var shift to state 135
-- On kinded_nonrec_row_var shift to state 137

State 135:
hear_arrow_prefix -> LBRACE COLON datatype VBAR nonrec_row_var . RBRACE [ SQUIGRARROW ]
kinded_nonrec_row_var -> nonrec_row_var . subkind [ RBRACE ]
-- On RBRACE shift to state 136
-- On BASE shift to state 85
-- On ANY shift to state 86
-- On subkind shift to state 113

State 136:
hear_arrow_prefix -> LBRACE COLON datatype VBAR nonrec_row_var RBRACE . [ SQUIGRARROW ]
-- On SQUIGRARROW reduce production hear_arrow_prefix -> LBRACE COLON datatype VBAR nonrec_row_var RBRACE

State 137:
hear_arrow_prefix -> LBRACE COLON datatype VBAR kinded_nonrec_row_var . RBRACE [ SQUIGRARROW ]
-- On RBRACE shift to state 138

State 138:
hear_arrow_prefix -> LBRACE COLON datatype VBAR kinded_nonrec_row_var RBRACE . [ SQUIGRARROW ]
-- On SQUIGRARROW reduce production hear_arrow_prefix -> LBRACE COLON datatype VBAR kinded_nonrec_row_var RBRACE

State 139:
hear_arrow_prefix -> LBRACE COLON datatype RBRACE . [ SQUIGRARROW ]
-- On SQUIGRARROW reduce production hear_arrow_prefix -> LBRACE COLON datatype RBRACE

State 140:
hear_arrow_prefix -> LBRACE COLON datatype COMMA . efields RBRACE [ SQUIGRARROW ]
-- On VBAR shift to state 126
-- On VARIABLE shift to state 129
-- On CONSTRUCTOR shift to state 131
-- On efields shift to state 141
-- On efield shift to state 143
-- On effect_label shift to state 149

State 141:
hear_arrow_prefix -> LBRACE COLON datatype COMMA efields . RBRACE [ SQUIGRARROW ]
-- On RBRACE shift to state 142

State 142:
hear_arrow_prefix -> LBRACE COLON datatype COMMA efields RBRACE . [ SQUIGRARROW ]
-- On SQUIGRARROW reduce production hear_arrow_prefix -> LBRACE COLON datatype COMMA efields RBRACE

State 143:
efields -> efield . [ RBRACE ]
efields -> efield . VBAR nonrec_row_var [ RBRACE ]
efields -> efield . VBAR kinded_nonrec_row_var [ RBRACE ]
efields -> efield . COMMA efields [ RBRACE ]
-- On VBAR shift to state 144
-- On COMMA shift to state 147
-- On RBRACE reduce production efields -> efield

State 144:
efields -> efield VBAR . nonrec_row_var [ RBRACE ]
efields -> efield VBAR . kinded_nonrec_row_var [ RBRACE ]
-- On VARIABLE shift to state 55
-- On UNDERSCORE shift to state 56
-- On QUESTIONVAR shift to state 57
-- On QUESTION shift to state 58
-- On nonrec_row_var shift to state 145
-- On kinded_nonrec_row_var shift to state 146

State 145:
efields -> efield VBAR nonrec_row_var . [ RBRACE ]
kinded_nonrec_row_var -> nonrec_row_var . subkind [ RBRACE ]
-- On BASE shift to state 85
-- On ANY shift to state 86
-- On subkind shift to state 113
-- On RBRACE reduce production efields -> efield VBAR nonrec_row_var

State 146:
efields -> efield VBAR kinded_nonrec_row_var . [ RBRACE ]
-- On RBRACE reduce production efields -> efield VBAR kinded_nonrec_row_var

State 147:
efields -> efield COMMA . efields [ RBRACE ]
-- On VBAR shift to state 126
-- On VARIABLE shift to state 129
-- On CONSTRUCTOR shift to state 131
-- On efields shift to state 148
-- On efield shift to state 143
-- On effect_label shift to state 149

State 148:
efields -> efield COMMA efields . [ RBRACE ]
-- On RBRACE reduce production efields -> efield COMMA efields

State 149:
efield -> effect_label . [ VBAR RBRACE COMMA ]
efield -> effect_label . fieldspec [ VBAR RBRACE COMMA ]
-- On MINUS shift to state 64
-- On LBRACE shift to state 65
-- On COLON shift to state 150
-- On fieldspec shift to state 152
-- On VBAR reduce production efield -> effect_label
-- On RBRACE reduce production efield -> effect_label
-- On COMMA reduce production efield -> effect_label

State 150:
fieldspec -> COLON . datatype [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 151

State 151:
fieldspec -> COLON datatype . [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
-- On VBAR reduce production fieldspec -> COLON datatype
-- On RPAREN reduce production fieldspec -> COLON datatype
-- On RBRACE reduce production fieldspec -> COLON datatype
-- On COMMA reduce production fieldspec -> COLON datatype
-- On BARRBRACKET reduce production fieldspec -> COLON datatype

State 152:
efield -> effect_label fieldspec . [ VBAR RBRACE COMMA ]
-- On VBAR reduce production efield -> effect_label fieldspec
-- On RBRACE reduce production efield -> effect_label fieldspec
-- On COMMA reduce production efield -> effect_label fieldspec

State 153:
arrow_prefix -> LBRACE efields . RBRACE [ SQUIGRARROW RARROW ]
-- On RBRACE shift to state 154

State 154:
arrow_prefix -> LBRACE efields RBRACE . [ SQUIGRARROW RARROW ]
-- On SQUIGRARROW reduce production arrow_prefix -> LBRACE efields RBRACE
-- On RARROW reduce production arrow_prefix -> LBRACE efields RBRACE

State 155:
straight_arrow -> parenthesized_datatypes straight_arrow_prefix . RARROW datatype [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On RARROW shift to state 156

State 156:
straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW . datatype [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 157

State 157:
straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype . [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On WHERE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On VBAR reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On VAR reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On VALUES reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On SEMICOLON reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On RPAREN reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On RETURNING reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On RBRACKET reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On RBRACE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On OP reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On LARROW reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On FUN reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On FROM reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On END reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On ELSE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On DOTDOT reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On COMMA reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On COLON reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On CASE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On BARRBRACKET reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype
-- On BARRBRACE reduce production straight_arrow -> parenthesized_datatypes straight_arrow_prefix RARROW datatype

State 158:
squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix . SQUIGRARROW datatype [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On SQUIGRARROW shift to state 159

State 159:
squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW . datatype [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 160

State 160:
squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype . [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On WHERE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On VBAR reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On VAR reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On VALUES reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On SEMICOLON reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On RPAREN reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On RETURNING reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On RBRACKET reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On RBRACE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On OP reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On LARROW reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On FUN reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On FROM reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On END reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On ELSE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On DOTDOT reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On COMMA reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On COLON reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On CASE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On BARRBRACKET reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype
-- On BARRBRACE reduce production squiggly_arrow -> parenthesized_datatypes squig_arrow_prefix SQUIGRARROW datatype

State 161:
squig_arrow_prefix -> hear_arrow_prefix . [ SQUIGRARROW ]
-- On SQUIGRARROW reduce production squig_arrow_prefix -> hear_arrow_prefix

State 162:
squig_arrow_prefix -> arrow_prefix . [ SQUIGRARROW ]
straight_arrow_prefix -> arrow_prefix . [ RARROW ]
-- On SQUIGRARROW reduce production squig_arrow_prefix -> arrow_prefix
-- On RARROW reduce production straight_arrow_prefix -> arrow_prefix

State 163:
type_arg -> TYPE LPAREN datatype . RPAREN [ RPAREN COMMA ]
-- On RPAREN shift to state 164

State 164:
type_arg -> TYPE LPAREN datatype RPAREN . [ RPAREN COMMA ]
-- On RPAREN reduce production type_arg -> TYPE LPAREN datatype RPAREN
-- On COMMA reduce production type_arg -> TYPE LPAREN datatype RPAREN

State 165:
type_arg -> ROW . LPAREN row RPAREN [ RPAREN COMMA ]
-- On LPAREN shift to state 166

State 166:
type_arg -> ROW LPAREN . row RPAREN [ RPAREN COMMA ]
-- On VBAR shift to state 167
-- On VARIABLE shift to state 170
-- On UINTEGER shift to state 171
-- On STRING shift to state 172
-- On CONSTRUCTOR shift to state 173
-- On row shift to state 174
-- On fields shift to state 176
-- On field_label shift to state 177
-- On field shift to state 179
-- On RPAREN reduce production row -> 

State 167:
fields -> VBAR . row_var [ RPAREN RBRACE ]
fields -> VBAR . kinded_row_var [ RPAREN RBRACE ]
-- On VARIABLE shift to state 55
-- On UNDERSCORE shift to state 56
-- On QUESTIONVAR shift to state 57
-- On QUESTION shift to state 58
-- On LPAREN shift to state 59
-- On row_var shift to state 168
-- On nonrec_row_var shift to state 88
-- On kinded_row_var shift to state 169

State 168:
fields -> VBAR row_var . [ RPAREN RBRACE ]
kinded_row_var -> row_var . subkind [ RPAREN RBRACE ]
-- On BASE shift to state 85
-- On ANY shift to state 86
-- On subkind shift to state 87
-- On RPAREN reduce production fields -> VBAR row_var
-- On RBRACE reduce production fields -> VBAR row_var

State 169:
fields -> VBAR kinded_row_var . [ RPAREN RBRACE ]
-- On RPAREN reduce production fields -> VBAR kinded_row_var
-- On RBRACE reduce production fields -> VBAR kinded_row_var

State 170:
field_label -> VARIABLE . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING READONLY RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE EQ END ELSE DOTDOT DOT DEFAULT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production field_label -> VARIABLE
-- On VBAR reduce production field_label -> VARIABLE
-- On VALUES reduce production field_label -> VARIABLE
-- On SEMICOLON reduce production field_label -> VARIABLE
-- On RPAREN reduce production field_label -> VARIABLE
-- On RETURNING reduce production field_label -> VARIABLE
-- On READONLY reduce production field_label -> VARIABLE
-- On RBRACKET reduce production field_label -> VARIABLE
-- On RBRACE reduce production field_label -> VARIABLE
-- On RARROW reduce production field_label -> VARIABLE
-- On MINUSDOT reduce production field_label -> VARIABLE
-- On MINUS reduce production field_label -> VARIABLE
-- On LPAREN reduce production field_label -> VARIABLE
-- On LBRACE reduce production field_label -> VARIABLE
-- On INFIXR9 reduce production field_label -> VARIABLE
-- On INFIXR8 reduce production field_label -> VARIABLE
-- On INFIXR7 reduce production field_label -> VARIABLE
-- On INFIXR6 reduce production field_label -> VARIABLE
-- On INFIXR5 reduce production field_label -> VARIABLE
-- On INFIXR4 reduce production field_label -> VARIABLE
-- On INFIXR3 reduce production field_label -> VARIABLE
-- On INFIXR2 reduce production field_label -> VARIABLE
-- On INFIXR1 reduce production field_label -> VARIABLE
-- On INFIXR0 reduce production field_label -> VARIABLE
-- On INFIXL9 reduce production field_label -> VARIABLE
-- On INFIXL8 reduce production field_label -> VARIABLE
-- On INFIXL7 reduce production field_label -> VARIABLE
-- On INFIXL6 reduce production field_label -> VARIABLE
-- On INFIXL5 reduce production field_label -> VARIABLE
-- On INFIXL4 reduce production field_label -> VARIABLE
-- On INFIXL3 reduce production field_label -> VARIABLE
-- On INFIXL2 reduce production field_label -> VARIABLE
-- On INFIXL1 reduce production field_label -> VARIABLE
-- On INFIXL0 reduce production field_label -> VARIABLE
-- On INFIX9 reduce production field_label -> VARIABLE
-- On INFIX8 reduce production field_label -> VARIABLE
-- On INFIX7 reduce production field_label -> VARIABLE
-- On INFIX6 reduce production field_label -> VARIABLE
-- On INFIX5 reduce production field_label -> VARIABLE
-- On INFIX4 reduce production field_label -> VARIABLE
-- On INFIX3 reduce production field_label -> VARIABLE
-- On INFIX2 reduce production field_label -> VARIABLE
-- On INFIX1 reduce production field_label -> VARIABLE
-- On INFIX0 reduce production field_label -> VARIABLE
-- On FATRARROW reduce production field_label -> VARIABLE
-- On EQUALSTILDE reduce production field_label -> VARIABLE
-- On EQ reduce production field_label -> VARIABLE
-- On END reduce production field_label -> VARIABLE
-- On ELSE reduce production field_label -> VARIABLE
-- On DOTDOT reduce production field_label -> VARIABLE
-- On DOT reduce production field_label -> VARIABLE
-- On DEFAULT reduce production field_label -> VARIABLE
-- On COMMA reduce production field_label -> VARIABLE
-- On COLONCOLON reduce production field_label -> VARIABLE
-- On COLON reduce production field_label -> VARIABLE
-- On CASE reduce production field_label -> VARIABLE
-- On BARRBRACE reduce production field_label -> VARIABLE
-- On BARBAR reduce production field_label -> VARIABLE
-- On AMPAMP reduce production field_label -> VARIABLE

State 171:
field_label -> UINTEGER . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING READONLY RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE EQ END ELSE DOTDOT DOT DEFAULT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production field_label -> UINTEGER
-- On VBAR reduce production field_label -> UINTEGER
-- On VALUES reduce production field_label -> UINTEGER
-- On SEMICOLON reduce production field_label -> UINTEGER
-- On RPAREN reduce production field_label -> UINTEGER
-- On RETURNING reduce production field_label -> UINTEGER
-- On READONLY reduce production field_label -> UINTEGER
-- On RBRACKET reduce production field_label -> UINTEGER
-- On RBRACE reduce production field_label -> UINTEGER
-- On RARROW reduce production field_label -> UINTEGER
-- On MINUSDOT reduce production field_label -> UINTEGER
-- On MINUS reduce production field_label -> UINTEGER
-- On LPAREN reduce production field_label -> UINTEGER
-- On LBRACE reduce production field_label -> UINTEGER
-- On INFIXR9 reduce production field_label -> UINTEGER
-- On INFIXR8 reduce production field_label -> UINTEGER
-- On INFIXR7 reduce production field_label -> UINTEGER
-- On INFIXR6 reduce production field_label -> UINTEGER
-- On INFIXR5 reduce production field_label -> UINTEGER
-- On INFIXR4 reduce production field_label -> UINTEGER
-- On INFIXR3 reduce production field_label -> UINTEGER
-- On INFIXR2 reduce production field_label -> UINTEGER
-- On INFIXR1 reduce production field_label -> UINTEGER
-- On INFIXR0 reduce production field_label -> UINTEGER
-- On INFIXL9 reduce production field_label -> UINTEGER
-- On INFIXL8 reduce production field_label -> UINTEGER
-- On INFIXL7 reduce production field_label -> UINTEGER
-- On INFIXL6 reduce production field_label -> UINTEGER
-- On INFIXL5 reduce production field_label -> UINTEGER
-- On INFIXL4 reduce production field_label -> UINTEGER
-- On INFIXL3 reduce production field_label -> UINTEGER
-- On INFIXL2 reduce production field_label -> UINTEGER
-- On INFIXL1 reduce production field_label -> UINTEGER
-- On INFIXL0 reduce production field_label -> UINTEGER
-- On INFIX9 reduce production field_label -> UINTEGER
-- On INFIX8 reduce production field_label -> UINTEGER
-- On INFIX7 reduce production field_label -> UINTEGER
-- On INFIX6 reduce production field_label -> UINTEGER
-- On INFIX5 reduce production field_label -> UINTEGER
-- On INFIX4 reduce production field_label -> UINTEGER
-- On INFIX3 reduce production field_label -> UINTEGER
-- On INFIX2 reduce production field_label -> UINTEGER
-- On INFIX1 reduce production field_label -> UINTEGER
-- On INFIX0 reduce production field_label -> UINTEGER
-- On FATRARROW reduce production field_label -> UINTEGER
-- On EQUALSTILDE reduce production field_label -> UINTEGER
-- On EQ reduce production field_label -> UINTEGER
-- On END reduce production field_label -> UINTEGER
-- On ELSE reduce production field_label -> UINTEGER
-- On DOTDOT reduce production field_label -> UINTEGER
-- On DOT reduce production field_label -> UINTEGER
-- On DEFAULT reduce production field_label -> UINTEGER
-- On COMMA reduce production field_label -> UINTEGER
-- On COLONCOLON reduce production field_label -> UINTEGER
-- On COLON reduce production field_label -> UINTEGER
-- On CASE reduce production field_label -> UINTEGER
-- On BARRBRACE reduce production field_label -> UINTEGER
-- On BARBAR reduce production field_label -> UINTEGER
-- On AMPAMP reduce production field_label -> UINTEGER

State 172:
field_label -> STRING . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING READONLY RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE EQ END ELSE DOTDOT DOT DEFAULT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production field_label -> STRING
-- On VBAR reduce production field_label -> STRING
-- On VALUES reduce production field_label -> STRING
-- On SEMICOLON reduce production field_label -> STRING
-- On RPAREN reduce production field_label -> STRING
-- On RETURNING reduce production field_label -> STRING
-- On READONLY reduce production field_label -> STRING
-- On RBRACKET reduce production field_label -> STRING
-- On RBRACE reduce production field_label -> STRING
-- On RARROW reduce production field_label -> STRING
-- On MINUSDOT reduce production field_label -> STRING
-- On MINUS reduce production field_label -> STRING
-- On LPAREN reduce production field_label -> STRING
-- On LBRACE reduce production field_label -> STRING
-- On INFIXR9 reduce production field_label -> STRING
-- On INFIXR8 reduce production field_label -> STRING
-- On INFIXR7 reduce production field_label -> STRING
-- On INFIXR6 reduce production field_label -> STRING
-- On INFIXR5 reduce production field_label -> STRING
-- On INFIXR4 reduce production field_label -> STRING
-- On INFIXR3 reduce production field_label -> STRING
-- On INFIXR2 reduce production field_label -> STRING
-- On INFIXR1 reduce production field_label -> STRING
-- On INFIXR0 reduce production field_label -> STRING
-- On INFIXL9 reduce production field_label -> STRING
-- On INFIXL8 reduce production field_label -> STRING
-- On INFIXL7 reduce production field_label -> STRING
-- On INFIXL6 reduce production field_label -> STRING
-- On INFIXL5 reduce production field_label -> STRING
-- On INFIXL4 reduce production field_label -> STRING
-- On INFIXL3 reduce production field_label -> STRING
-- On INFIXL2 reduce production field_label -> STRING
-- On INFIXL1 reduce production field_label -> STRING
-- On INFIXL0 reduce production field_label -> STRING
-- On INFIX9 reduce production field_label -> STRING
-- On INFIX8 reduce production field_label -> STRING
-- On INFIX7 reduce production field_label -> STRING
-- On INFIX6 reduce production field_label -> STRING
-- On INFIX5 reduce production field_label -> STRING
-- On INFIX4 reduce production field_label -> STRING
-- On INFIX3 reduce production field_label -> STRING
-- On INFIX2 reduce production field_label -> STRING
-- On INFIX1 reduce production field_label -> STRING
-- On INFIX0 reduce production field_label -> STRING
-- On FATRARROW reduce production field_label -> STRING
-- On EQUALSTILDE reduce production field_label -> STRING
-- On EQ reduce production field_label -> STRING
-- On END reduce production field_label -> STRING
-- On ELSE reduce production field_label -> STRING
-- On DOTDOT reduce production field_label -> STRING
-- On DOT reduce production field_label -> STRING
-- On DEFAULT reduce production field_label -> STRING
-- On COMMA reduce production field_label -> STRING
-- On COLONCOLON reduce production field_label -> STRING
-- On COLON reduce production field_label -> STRING
-- On CASE reduce production field_label -> STRING
-- On BARRBRACE reduce production field_label -> STRING
-- On BARBAR reduce production field_label -> STRING
-- On AMPAMP reduce production field_label -> STRING

State 173:
field_label -> CONSTRUCTOR . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING READONLY RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE EQ END ELSE DOTDOT DOT DEFAULT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production field_label -> CONSTRUCTOR
-- On VBAR reduce production field_label -> CONSTRUCTOR
-- On VALUES reduce production field_label -> CONSTRUCTOR
-- On SEMICOLON reduce production field_label -> CONSTRUCTOR
-- On RPAREN reduce production field_label -> CONSTRUCTOR
-- On RETURNING reduce production field_label -> CONSTRUCTOR
-- On READONLY reduce production field_label -> CONSTRUCTOR
-- On RBRACKET reduce production field_label -> CONSTRUCTOR
-- On RBRACE reduce production field_label -> CONSTRUCTOR
-- On RARROW reduce production field_label -> CONSTRUCTOR
-- On MINUSDOT reduce production field_label -> CONSTRUCTOR
-- On MINUS reduce production field_label -> CONSTRUCTOR
-- On LPAREN reduce production field_label -> CONSTRUCTOR
-- On LBRACE reduce production field_label -> CONSTRUCTOR
-- On INFIXR9 reduce production field_label -> CONSTRUCTOR
-- On INFIXR8 reduce production field_label -> CONSTRUCTOR
-- On INFIXR7 reduce production field_label -> CONSTRUCTOR
-- On INFIXR6 reduce production field_label -> CONSTRUCTOR
-- On INFIXR5 reduce production field_label -> CONSTRUCTOR
-- On INFIXR4 reduce production field_label -> CONSTRUCTOR
-- On INFIXR3 reduce production field_label -> CONSTRUCTOR
-- On INFIXR2 reduce production field_label -> CONSTRUCTOR
-- On INFIXR1 reduce production field_label -> CONSTRUCTOR
-- On INFIXR0 reduce production field_label -> CONSTRUCTOR
-- On INFIXL9 reduce production field_label -> CONSTRUCTOR
-- On INFIXL8 reduce production field_label -> CONSTRUCTOR
-- On INFIXL7 reduce production field_label -> CONSTRUCTOR
-- On INFIXL6 reduce production field_label -> CONSTRUCTOR
-- On INFIXL5 reduce production field_label -> CONSTRUCTOR
-- On INFIXL4 reduce production field_label -> CONSTRUCTOR
-- On INFIXL3 reduce production field_label -> CONSTRUCTOR
-- On INFIXL2 reduce production field_label -> CONSTRUCTOR
-- On INFIXL1 reduce production field_label -> CONSTRUCTOR
-- On INFIXL0 reduce production field_label -> CONSTRUCTOR
-- On INFIX9 reduce production field_label -> CONSTRUCTOR
-- On INFIX8 reduce production field_label -> CONSTRUCTOR
-- On INFIX7 reduce production field_label -> CONSTRUCTOR
-- On INFIX6 reduce production field_label -> CONSTRUCTOR
-- On INFIX5 reduce production field_label -> CONSTRUCTOR
-- On INFIX4 reduce production field_label -> CONSTRUCTOR
-- On INFIX3 reduce production field_label -> CONSTRUCTOR
-- On INFIX2 reduce production field_label -> CONSTRUCTOR
-- On INFIX1 reduce production field_label -> CONSTRUCTOR
-- On INFIX0 reduce production field_label -> CONSTRUCTOR
-- On FATRARROW reduce production field_label -> CONSTRUCTOR
-- On EQUALSTILDE reduce production field_label -> CONSTRUCTOR
-- On EQ reduce production field_label -> CONSTRUCTOR
-- On END reduce production field_label -> CONSTRUCTOR
-- On ELSE reduce production field_label -> CONSTRUCTOR
-- On DOTDOT reduce production field_label -> CONSTRUCTOR
-- On DOT reduce production field_label -> CONSTRUCTOR
-- On DEFAULT reduce production field_label -> CONSTRUCTOR
-- On COMMA reduce production field_label -> CONSTRUCTOR
-- On COLONCOLON reduce production field_label -> CONSTRUCTOR
-- On COLON reduce production field_label -> CONSTRUCTOR
-- On CASE reduce production field_label -> CONSTRUCTOR
-- On BARRBRACE reduce production field_label -> CONSTRUCTOR
-- On BARBAR reduce production field_label -> CONSTRUCTOR
-- On AMPAMP reduce production field_label -> CONSTRUCTOR

State 174:
type_arg -> ROW LPAREN row . RPAREN [ RPAREN COMMA ]
-- On RPAREN shift to state 175

State 175:
type_arg -> ROW LPAREN row RPAREN . [ RPAREN COMMA ]
-- On RPAREN reduce production type_arg -> ROW LPAREN row RPAREN
-- On COMMA reduce production type_arg -> ROW LPAREN row RPAREN

State 176:
row -> fields . [ RPAREN RBRACE ]
-- On RPAREN reduce production row -> fields
-- On RBRACE reduce production row -> fields

State 177:
field -> field_label . [ VBAR RPAREN RBRACE COMMA ]
field -> field_label . fieldspec [ VBAR RPAREN RBRACE COMMA ]
-- On MINUS shift to state 64
-- On LBRACE shift to state 65
-- On COLON shift to state 150
-- On fieldspec shift to state 178
-- On VBAR reduce production field -> field_label
-- On RPAREN reduce production field -> field_label
-- On RBRACE reduce production field -> field_label
-- On COMMA reduce production field -> field_label

State 178:
field -> field_label fieldspec . [ VBAR RPAREN RBRACE COMMA ]
-- On VBAR reduce production field -> field_label fieldspec
-- On RPAREN reduce production field -> field_label fieldspec
-- On RBRACE reduce production field -> field_label fieldspec
-- On COMMA reduce production field -> field_label fieldspec

State 179:
fields -> field . [ RPAREN RBRACE ]
fields -> field . VBAR row_var [ RPAREN RBRACE ]
fields -> field . VBAR kinded_row_var [ RPAREN RBRACE ]
fields -> field . COMMA fields [ RPAREN RBRACE ]
-- On VBAR shift to state 180
-- On COMMA shift to state 183
-- On RPAREN reduce production fields -> field
-- On RBRACE reduce production fields -> field

State 180:
fields -> field VBAR . row_var [ RPAREN RBRACE ]
fields -> field VBAR . kinded_row_var [ RPAREN RBRACE ]
-- On VARIABLE shift to state 55
-- On UNDERSCORE shift to state 56
-- On QUESTIONVAR shift to state 57
-- On QUESTION shift to state 58
-- On LPAREN shift to state 59
-- On row_var shift to state 181
-- On nonrec_row_var shift to state 88
-- On kinded_row_var shift to state 182

State 181:
fields -> field VBAR row_var . [ RPAREN RBRACE ]
kinded_row_var -> row_var . subkind [ RPAREN RBRACE ]
-- On BASE shift to state 85
-- On ANY shift to state 86
-- On subkind shift to state 87
-- On RPAREN reduce production fields -> field VBAR row_var
-- On RBRACE reduce production fields -> field VBAR row_var

State 182:
fields -> field VBAR kinded_row_var . [ RPAREN RBRACE ]
-- On RPAREN reduce production fields -> field VBAR kinded_row_var
-- On RBRACE reduce production fields -> field VBAR kinded_row_var

State 183:
fields -> field COMMA . fields [ RPAREN RBRACE ]
-- On VBAR shift to state 167
-- On VARIABLE shift to state 170
-- On UINTEGER shift to state 171
-- On STRING shift to state 172
-- On CONSTRUCTOR shift to state 173
-- On fields shift to state 184
-- On field_label shift to state 177
-- On field shift to state 179

State 184:
fields -> field COMMA fields . [ RPAREN RBRACE ]
-- On RPAREN reduce production fields -> field COMMA fields
-- On RBRACE reduce production fields -> field COMMA fields

State 185:
type_arg -> PRESENCE . LPAREN fieldspec RPAREN [ RPAREN COMMA ]
-- On LPAREN shift to state 186

State 186:
type_arg -> PRESENCE LPAREN . fieldspec RPAREN [ RPAREN COMMA ]
-- On MINUS shift to state 64
-- On LBRACE shift to state 65
-- On COLON shift to state 150
-- On fieldspec shift to state 187

State 187:
type_arg -> PRESENCE LPAREN fieldspec . RPAREN [ RPAREN COMMA ]
-- On RPAREN shift to state 188

State 188:
type_arg -> PRESENCE LPAREN fieldspec RPAREN . [ RPAREN COMMA ]
-- On RPAREN reduce production type_arg -> PRESENCE LPAREN fieldspec RPAREN
-- On COMMA reduce production type_arg -> PRESENCE LPAREN fieldspec RPAREN

State 189:
type_arg -> LBRACE . row RBRACE [ RPAREN COMMA ]
-- On VBAR shift to state 167
-- On VARIABLE shift to state 170
-- On UINTEGER shift to state 171
-- On STRING shift to state 172
-- On CONSTRUCTOR shift to state 173
-- On row shift to state 190
-- On fields shift to state 176
-- On field_label shift to state 177
-- On field shift to state 179
-- On RBRACE reduce production row -> 

State 190:
type_arg -> LBRACE row . RBRACE [ RPAREN COMMA ]
-- On RBRACE shift to state 191

State 191:
type_arg -> LBRACE row RBRACE . [ RPAREN COMMA ]
-- On RPAREN reduce production type_arg -> LBRACE row RBRACE
-- On COMMA reduce production type_arg -> LBRACE row RBRACE

State 192:
primary_datatype -> CONSTRUCTOR LPAREN type_arg_list . RPAREN [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On RPAREN shift to state 193

State 193:
primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN . [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On WHERE reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On VBAR reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On VAR reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On VALUES reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On SERVER reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On SEMICOLON reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On RPAREN reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On RETURNING reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On RBRACKET reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On RBRACE reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On RARROW reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On POSTFIXOP reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On OP reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On NATIVE reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On LLARROW reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On LBRACE reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On LARROW reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR9 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR8 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR7 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR6 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR5 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR4 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR3 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR2 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR1 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXR0 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL9 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL8 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL7 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL6 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL5 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL4 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL3 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL2 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL1 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIXL0 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX9 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX8 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX7 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX6 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX5 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX4 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX3 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX2 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX1 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On INFIX0 reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On FUN reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On FROM reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On EQ reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On END reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On ELSE reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On DOTDOT reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On COMMA reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On COLON reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On CLIENT reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On CASE reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On BARRBRACKET reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN
-- On BARRBRACE reduce production primary_datatype -> CONSTRUCTOR LPAREN type_arg_list RPAREN

State 194:
type_arg_list -> type_arg . [ RPAREN ]
type_arg_list -> type_arg . COMMA type_arg_list [ RPAREN ]
-- On COMMA shift to state 195
-- On RPAREN reduce production type_arg_list -> type_arg

State 195:
type_arg_list -> type_arg COMMA . type_arg_list [ RPAREN ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TYPE shift to state 103
-- On TABLEHANDLE shift to state 46
-- On ROW shift to state 165
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On PRESENCE shift to state 185
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On LBRACE shift to state 189
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On type_arg_list shift to state 196
-- On type_arg shift to state 194
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 197

State 196:
type_arg_list -> type_arg COMMA type_arg_list . [ RPAREN ]
-- On RPAREN reduce production type_arg_list -> type_arg COMMA type_arg_list

State 197:
type_arg -> datatype . [ RPAREN COMMA ]
-- On RPAREN reduce production type_arg -> datatype
-- On COMMA reduce production type_arg -> datatype

State 198:
forall_datatype -> FORALL varlist DOT datatype . [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production forall_datatype -> FORALL varlist DOT datatype
-- On WHERE reduce production forall_datatype -> FORALL varlist DOT datatype
-- On VBAR reduce production forall_datatype -> FORALL varlist DOT datatype
-- On VAR reduce production forall_datatype -> FORALL varlist DOT datatype
-- On VALUES reduce production forall_datatype -> FORALL varlist DOT datatype
-- On SEMICOLON reduce production forall_datatype -> FORALL varlist DOT datatype
-- On RPAREN reduce production forall_datatype -> FORALL varlist DOT datatype
-- On RETURNING reduce production forall_datatype -> FORALL varlist DOT datatype
-- On RBRACKET reduce production forall_datatype -> FORALL varlist DOT datatype
-- On RBRACE reduce production forall_datatype -> FORALL varlist DOT datatype
-- On OP reduce production forall_datatype -> FORALL varlist DOT datatype
-- On LARROW reduce production forall_datatype -> FORALL varlist DOT datatype
-- On FUN reduce production forall_datatype -> FORALL varlist DOT datatype
-- On FROM reduce production forall_datatype -> FORALL varlist DOT datatype
-- On END reduce production forall_datatype -> FORALL varlist DOT datatype
-- On ELSE reduce production forall_datatype -> FORALL varlist DOT datatype
-- On DOTDOT reduce production forall_datatype -> FORALL varlist DOT datatype
-- On COMMA reduce production forall_datatype -> FORALL varlist DOT datatype
-- On COLON reduce production forall_datatype -> FORALL varlist DOT datatype
-- On CASE reduce production forall_datatype -> FORALL varlist DOT datatype
-- On BARRBRACKET reduce production forall_datatype -> FORALL varlist DOT datatype
-- On BARRBRACE reduce production forall_datatype -> FORALL varlist DOT datatype

State 199:
varlist -> typearg . [ RPAREN DOT ]
varlist -> typearg . COMMA varlist [ RPAREN DOT ]
-- On COMMA shift to state 200
-- On RPAREN reduce production varlist -> typearg
-- On DOT reduce production varlist -> typearg

State 200:
varlist -> typearg COMMA . varlist [ RPAREN DOT ]
-- On VARIABLE shift to state 92
-- On varlist shift to state 201
-- On typearg shift to state 199

State 201:
varlist -> typearg COMMA varlist . [ RPAREN DOT ]
-- On RPAREN reduce production varlist -> typearg COMMA varlist
-- On DOT reduce production varlist -> typearg COMMA varlist

State 202:
primary_datatype -> LBRACKET datatype . RBRACKET [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On RBRACKET shift to state 203

State 203:
primary_datatype -> LBRACKET datatype RBRACKET . [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On WHERE reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On VBAR reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On VAR reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On VALUES reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On SERVER reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On SEMICOLON reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On RPAREN reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On RETURNING reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On RBRACKET reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On RBRACE reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On RARROW reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On POSTFIXOP reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On OP reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On NATIVE reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On LLARROW reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On LBRACE reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On LARROW reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR9 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR8 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR7 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR6 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR5 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR4 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR3 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR2 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR1 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXR0 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL9 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL8 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL7 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL6 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL5 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL4 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL3 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL2 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL1 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIXL0 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX9 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX8 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX7 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX6 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX5 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX4 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX3 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX2 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX1 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On INFIX0 reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On FUN reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On FROM reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On EQ reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On END reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On ELSE reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On DOTDOT reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On COMMA reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On COLON reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On CLIENT reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On CASE reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On BARRBRACKET reduce production primary_datatype -> LBRACKET datatype RBRACKET
-- On BARRBRACE reduce production primary_datatype -> LBRACKET datatype RBRACKET

State 204:
fieldspec -> LBRACE COLON datatype . RBRACE [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
-- On RBRACE shift to state 205

State 205:
fieldspec -> LBRACE COLON datatype RBRACE . [ VBAR RPAREN RBRACE COMMA BARRBRACKET ]
-- On VBAR reduce production fieldspec -> LBRACE COLON datatype RBRACE
-- On RPAREN reduce production fieldspec -> LBRACE COLON datatype RBRACE
-- On RBRACE reduce production fieldspec -> LBRACE COLON datatype RBRACE
-- On COMMA reduce production fieldspec -> LBRACE COLON datatype RBRACE
-- On BARRBRACKET reduce production fieldspec -> LBRACE COLON datatype RBRACE

State 206:
vfield -> CONSTRUCTOR fieldspec . [ VBAR RPAREN BARRBRACKET ]
-- On VBAR reduce production vfield -> CONSTRUCTOR fieldspec
-- On RPAREN reduce production vfield -> CONSTRUCTOR fieldspec
-- On BARRBRACKET reduce production vfield -> CONSTRUCTOR fieldspec

State 207:
row_var -> LPAREN MU VARIABLE DOT vfields . RPAREN [ RPAREN RBRACE BASE BARRBRACKET ANY ]
-- On RPAREN shift to state 208

State 208:
row_var -> LPAREN MU VARIABLE DOT vfields RPAREN . [ RPAREN RBRACE BASE BARRBRACKET ANY ]
-- On RPAREN reduce production row_var -> LPAREN MU VARIABLE DOT vfields RPAREN
-- On RBRACE reduce production row_var -> LPAREN MU VARIABLE DOT vfields RPAREN
-- On BASE reduce production row_var -> LPAREN MU VARIABLE DOT vfields RPAREN
-- On BARRBRACKET reduce production row_var -> LPAREN MU VARIABLE DOT vfields RPAREN
-- On ANY reduce production row_var -> LPAREN MU VARIABLE DOT vfields RPAREN

State 209:
kinded_row_var -> row_var . subkind [ RPAREN ]
rfields -> VBAR row_var . [ RPAREN ]
-- On BASE shift to state 85
-- On ANY shift to state 86
-- On subkind shift to state 87
-- On RPAREN reduce production rfields -> VBAR row_var

State 210:
rfields -> VBAR kinded_row_var . [ RPAREN ]
-- On RPAREN reduce production rfields -> VBAR kinded_row_var

State 211:
field_label -> VARIABLE . [ VBAR RPAREN MINUS LBRACE COMMA COLON ]
type_var -> VARIABLE . [ RPAREN COMMA BASE ANY ]
-- On VBAR reduce production field_label -> VARIABLE
-- On RPAREN reduce production field_label -> VARIABLE
-- On RPAREN reduce production type_var -> VARIABLE
-- On MINUS reduce production field_label -> VARIABLE
-- On LBRACE reduce production field_label -> VARIABLE
-- On COMMA reduce production field_label -> VARIABLE
-- On COMMA reduce production type_var -> VARIABLE
-- On COLON reduce production field_label -> VARIABLE
-- On BASE reduce production type_var -> VARIABLE
-- On ANY reduce production type_var -> VARIABLE
** Conflict on RPAREN COMMA

State 212:
parenthesized_datatypes -> LPAREN RPAREN . [ WITH WHERE VBAR VAR VALUES TILDE SQUIGRARROW SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE MINUS LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On WHERE reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On VBAR reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On VAR reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On VALUES reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On TILDE reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On SQUIGRARROW reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On SERVER reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On SEMICOLON reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On RPAREN reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On RETURNING reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On RBRACKET reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On RBRACE reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On RARROW reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On POSTFIXOP reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On OP reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On NATIVE reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On MINUS reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On LLARROW reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On LBRACE reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On LARROW reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR9 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR8 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR7 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR6 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR5 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR4 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR3 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR2 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR1 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXR0 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL9 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL8 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL7 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL6 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL5 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL4 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL3 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL2 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL1 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIXL0 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX9 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX8 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX7 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX6 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX5 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX4 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX3 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX2 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX1 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On INFIX0 reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On FUN reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On FROM reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On EQ reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On END reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On ELSE reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On DOTDOT reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On COMMA reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On COLON reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On CLIENT reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On CASE reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On BARRBRACKET reduce production parenthesized_datatypes -> LPAREN RPAREN
-- On BARRBRACE reduce production parenthesized_datatypes -> LPAREN RPAREN

State 213:
field_label -> CONSTRUCTOR . [ VBAR RPAREN MINUS LBRACE COMMA COLON ]
primary_datatype -> CONSTRUCTOR . [ RPAREN COMMA ]
primary_datatype -> CONSTRUCTOR . LPAREN type_arg_list RPAREN [ RPAREN COMMA ]
-- On LPAREN shift to state 102
-- On VBAR reduce production field_label -> CONSTRUCTOR
-- On RPAREN reduce production field_label -> CONSTRUCTOR
-- On RPAREN reduce production primary_datatype -> CONSTRUCTOR
-- On MINUS reduce production field_label -> CONSTRUCTOR
-- On LBRACE reduce production field_label -> CONSTRUCTOR
-- On COMMA reduce production field_label -> CONSTRUCTOR
-- On COMMA reduce production primary_datatype -> CONSTRUCTOR
-- On COLON reduce production field_label -> CONSTRUCTOR
** Conflict on RPAREN COMMA

State 214:
primary_datatype -> LPAREN rfields . RPAREN [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On RPAREN shift to state 215

State 215:
primary_datatype -> LPAREN rfields RPAREN . [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production primary_datatype -> LPAREN rfields RPAREN
-- On WHERE reduce production primary_datatype -> LPAREN rfields RPAREN
-- On VBAR reduce production primary_datatype -> LPAREN rfields RPAREN
-- On VAR reduce production primary_datatype -> LPAREN rfields RPAREN
-- On VALUES reduce production primary_datatype -> LPAREN rfields RPAREN
-- On SERVER reduce production primary_datatype -> LPAREN rfields RPAREN
-- On SEMICOLON reduce production primary_datatype -> LPAREN rfields RPAREN
-- On RPAREN reduce production primary_datatype -> LPAREN rfields RPAREN
-- On RETURNING reduce production primary_datatype -> LPAREN rfields RPAREN
-- On RBRACKET reduce production primary_datatype -> LPAREN rfields RPAREN
-- On RBRACE reduce production primary_datatype -> LPAREN rfields RPAREN
-- On RARROW reduce production primary_datatype -> LPAREN rfields RPAREN
-- On POSTFIXOP reduce production primary_datatype -> LPAREN rfields RPAREN
-- On OP reduce production primary_datatype -> LPAREN rfields RPAREN
-- On NATIVE reduce production primary_datatype -> LPAREN rfields RPAREN
-- On LLARROW reduce production primary_datatype -> LPAREN rfields RPAREN
-- On LBRACE reduce production primary_datatype -> LPAREN rfields RPAREN
-- On LARROW reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR9 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR8 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR7 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR6 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR5 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR4 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR3 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR2 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR1 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXR0 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL9 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL8 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL7 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL6 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL5 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL4 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL3 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL2 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL1 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIXL0 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX9 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX8 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX7 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX6 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX5 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX4 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX3 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX2 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX1 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On INFIX0 reduce production primary_datatype -> LPAREN rfields RPAREN
-- On FUN reduce production primary_datatype -> LPAREN rfields RPAREN
-- On FROM reduce production primary_datatype -> LPAREN rfields RPAREN
-- On EQ reduce production primary_datatype -> LPAREN rfields RPAREN
-- On END reduce production primary_datatype -> LPAREN rfields RPAREN
-- On ELSE reduce production primary_datatype -> LPAREN rfields RPAREN
-- On DOTDOT reduce production primary_datatype -> LPAREN rfields RPAREN
-- On COMMA reduce production primary_datatype -> LPAREN rfields RPAREN
-- On COLON reduce production primary_datatype -> LPAREN rfields RPAREN
-- On CLIENT reduce production primary_datatype -> LPAREN rfields RPAREN
-- On CASE reduce production primary_datatype -> LPAREN rfields RPAREN
-- On BARRBRACKET reduce production primary_datatype -> LPAREN rfields RPAREN
-- On BARRBRACE reduce production primary_datatype -> LPAREN rfields RPAREN

State 216:
rfields -> rfield . [ RPAREN ]
rfields -> rfield . VBAR row_var [ RPAREN ]
rfields -> rfield . VBAR kinded_row_var [ RPAREN ]
rfields -> rfield . COMMA rfields [ RPAREN ]
-- On VBAR shift to state 217
-- On COMMA shift to state 220
-- On RPAREN reduce production rfields -> rfield

State 217:
rfields -> rfield VBAR . row_var [ RPAREN ]
rfields -> rfield VBAR . kinded_row_var [ RPAREN ]
-- On VARIABLE shift to state 55
-- On UNDERSCORE shift to state 56
-- On QUESTIONVAR shift to state 57
-- On QUESTION shift to state 58
-- On LPAREN shift to state 59
-- On row_var shift to state 218
-- On nonrec_row_var shift to state 88
-- On kinded_row_var shift to state 219

State 218:
kinded_row_var -> row_var . subkind [ RPAREN ]
rfields -> rfield VBAR row_var . [ RPAREN ]
-- On BASE shift to state 85
-- On ANY shift to state 86
-- On subkind shift to state 87
-- On RPAREN reduce production rfields -> rfield VBAR row_var

State 219:
rfields -> rfield VBAR kinded_row_var . [ RPAREN ]
-- On RPAREN reduce production rfields -> rfield VBAR kinded_row_var

State 220:
rfields -> rfield COMMA . rfields [ RPAREN ]
-- On VBAR shift to state 54
-- On VARIABLE shift to state 170
-- On UINTEGER shift to state 171
-- On STRING shift to state 172
-- On CONSTRUCTOR shift to state 173
-- On rfields shift to state 221
-- On rfield shift to state 216
-- On record_label shift to state 222
-- On field_label shift to state 224

State 221:
rfields -> rfield COMMA rfields . [ RPAREN ]
-- On RPAREN reduce production rfields -> rfield COMMA rfields

State 222:
rfield -> record_label . [ VBAR RPAREN COMMA ]
rfield -> record_label . fieldspec [ VBAR RPAREN COMMA ]
-- On MINUS shift to state 64
-- On LBRACE shift to state 65
-- On COLON shift to state 150
-- On fieldspec shift to state 223
-- On VBAR reduce production rfield -> record_label
-- On RPAREN reduce production rfield -> record_label
-- On COMMA reduce production rfield -> record_label

State 223:
rfield -> record_label fieldspec . [ VBAR RPAREN COMMA ]
-- On VBAR reduce production rfield -> record_label fieldspec
-- On RPAREN reduce production rfield -> record_label fieldspec
-- On COMMA reduce production rfield -> record_label fieldspec

State 224:
record_label -> field_label . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING READONLY RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE EQ END ELSE DOTDOT DOT DEFAULT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production record_label -> field_label
-- On VBAR reduce production record_label -> field_label
-- On VALUES reduce production record_label -> field_label
-- On SEMICOLON reduce production record_label -> field_label
-- On RPAREN reduce production record_label -> field_label
-- On RETURNING reduce production record_label -> field_label
-- On READONLY reduce production record_label -> field_label
-- On RBRACKET reduce production record_label -> field_label
-- On RBRACE reduce production record_label -> field_label
-- On RARROW reduce production record_label -> field_label
-- On MINUSDOT reduce production record_label -> field_label
-- On MINUS reduce production record_label -> field_label
-- On LPAREN reduce production record_label -> field_label
-- On LBRACE reduce production record_label -> field_label
-- On INFIXR9 reduce production record_label -> field_label
-- On INFIXR8 reduce production record_label -> field_label
-- On INFIXR7 reduce production record_label -> field_label
-- On INFIXR6 reduce production record_label -> field_label
-- On INFIXR5 reduce production record_label -> field_label
-- On INFIXR4 reduce production record_label -> field_label
-- On INFIXR3 reduce production record_label -> field_label
-- On INFIXR2 reduce production record_label -> field_label
-- On INFIXR1 reduce production record_label -> field_label
-- On INFIXR0 reduce production record_label -> field_label
-- On INFIXL9 reduce production record_label -> field_label
-- On INFIXL8 reduce production record_label -> field_label
-- On INFIXL7 reduce production record_label -> field_label
-- On INFIXL6 reduce production record_label -> field_label
-- On INFIXL5 reduce production record_label -> field_label
-- On INFIXL4 reduce production record_label -> field_label
-- On INFIXL3 reduce production record_label -> field_label
-- On INFIXL2 reduce production record_label -> field_label
-- On INFIXL1 reduce production record_label -> field_label
-- On INFIXL0 reduce production record_label -> field_label
-- On INFIX9 reduce production record_label -> field_label
-- On INFIX8 reduce production record_label -> field_label
-- On INFIX7 reduce production record_label -> field_label
-- On INFIX6 reduce production record_label -> field_label
-- On INFIX5 reduce production record_label -> field_label
-- On INFIX4 reduce production record_label -> field_label
-- On INFIX3 reduce production record_label -> field_label
-- On INFIX2 reduce production record_label -> field_label
-- On INFIX1 reduce production record_label -> field_label
-- On INFIX0 reduce production record_label -> field_label
-- On FATRARROW reduce production record_label -> field_label
-- On EQUALSTILDE reduce production record_label -> field_label
-- On EQ reduce production record_label -> field_label
-- On END reduce production record_label -> field_label
-- On ELSE reduce production record_label -> field_label
-- On DOTDOT reduce production record_label -> field_label
-- On DOT reduce production record_label -> field_label
-- On DEFAULT reduce production record_label -> field_label
-- On COMMA reduce production record_label -> field_label
-- On COLONCOLON reduce production record_label -> field_label
-- On COLON reduce production record_label -> field_label
-- On CASE reduce production record_label -> field_label
-- On BARRBRACE reduce production record_label -> field_label
-- On BARBAR reduce production record_label -> field_label
-- On AMPAMP reduce production record_label -> field_label

State 225:
parenthesized_datatypes -> LPAREN datatypes . RPAREN [ WITH WHERE VBAR VAR VALUES TILDE SQUIGRARROW SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE MINUS LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On RPAREN shift to state 226

State 226:
parenthesized_datatypes -> LPAREN datatypes RPAREN . [ WITH WHERE VBAR VAR VALUES TILDE SQUIGRARROW SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE MINUS LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On WHERE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On VBAR reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On VAR reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On VALUES reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On TILDE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On SQUIGRARROW reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On SERVER reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On SEMICOLON reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On RPAREN reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On RETURNING reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On RBRACKET reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On RBRACE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On RARROW reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On POSTFIXOP reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On OP reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On NATIVE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On MINUS reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On LLARROW reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On LBRACE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On LARROW reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR9 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR8 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR7 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR6 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR5 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR4 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR3 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR2 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR1 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXR0 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL9 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL8 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL7 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL6 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL5 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL4 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL3 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL2 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL1 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIXL0 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX9 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX8 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX7 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX6 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX5 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX4 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX3 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX2 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX1 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On INFIX0 reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On FUN reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On FROM reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On EQ reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On END reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On ELSE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On DOTDOT reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On COMMA reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On COLON reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On CLIENT reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On CASE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On BARRBRACKET reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN
-- On BARRBRACE reduce production parenthesized_datatypes -> LPAREN datatypes RPAREN

State 227:
datatypes -> datatype . [ RPAREN ]
datatypes -> datatype . COMMA datatypes [ RPAREN ]
-- On COMMA shift to state 228
-- On RPAREN reduce production datatypes -> datatype

State 228:
datatypes -> datatype COMMA . datatypes [ RPAREN ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatypes shift to state 229
-- On datatype shift to state 227

State 229:
datatypes -> datatype COMMA datatypes . [ RPAREN ]
-- On RPAREN reduce production datatypes -> datatype COMMA datatypes

State 230:
primary_datatype -> parenthesized_datatypes . [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production primary_datatype -> parenthesized_datatypes
-- On WHERE reduce production primary_datatype -> parenthesized_datatypes
-- On VBAR reduce production primary_datatype -> parenthesized_datatypes
-- On VAR reduce production primary_datatype -> parenthesized_datatypes
-- On VALUES reduce production primary_datatype -> parenthesized_datatypes
-- On SERVER reduce production primary_datatype -> parenthesized_datatypes
-- On SEMICOLON reduce production primary_datatype -> parenthesized_datatypes
-- On RPAREN reduce production primary_datatype -> parenthesized_datatypes
-- On RETURNING reduce production primary_datatype -> parenthesized_datatypes
-- On RBRACKET reduce production primary_datatype -> parenthesized_datatypes
-- On RBRACE reduce production primary_datatype -> parenthesized_datatypes
-- On RARROW reduce production primary_datatype -> parenthesized_datatypes
-- On POSTFIXOP reduce production primary_datatype -> parenthesized_datatypes
-- On OP reduce production primary_datatype -> parenthesized_datatypes
-- On NATIVE reduce production primary_datatype -> parenthesized_datatypes
-- On LLARROW reduce production primary_datatype -> parenthesized_datatypes
-- On LBRACE reduce production primary_datatype -> parenthesized_datatypes
-- On LARROW reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR9 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR8 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR7 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR6 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR5 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR4 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR3 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR2 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR1 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXR0 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL9 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL8 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL7 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL6 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL5 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL4 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL3 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL2 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL1 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIXL0 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX9 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX8 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX7 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX6 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX5 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX4 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX3 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX2 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX1 reduce production primary_datatype -> parenthesized_datatypes
-- On INFIX0 reduce production primary_datatype -> parenthesized_datatypes
-- On FUN reduce production primary_datatype -> parenthesized_datatypes
-- On FROM reduce production primary_datatype -> parenthesized_datatypes
-- On EQ reduce production primary_datatype -> parenthesized_datatypes
-- On END reduce production primary_datatype -> parenthesized_datatypes
-- On ELSE reduce production primary_datatype -> parenthesized_datatypes
-- On DOTDOT reduce production primary_datatype -> parenthesized_datatypes
-- On COMMA reduce production primary_datatype -> parenthesized_datatypes
-- On COLON reduce production primary_datatype -> parenthesized_datatypes
-- On CLIENT reduce production primary_datatype -> parenthesized_datatypes
-- On CASE reduce production primary_datatype -> parenthesized_datatypes
-- On BARRBRACKET reduce production primary_datatype -> parenthesized_datatypes
-- On BARRBRACE reduce production primary_datatype -> parenthesized_datatypes

State 231:
mu_datatype -> MU VARIABLE DOT mu_datatype . [ WITH WHERE VBAR VAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE OP LARROW FUN FROM END ELSE DOTDOT COMMA COLON CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On WHERE reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On VBAR reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On VAR reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On VALUES reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On SEMICOLON reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On RPAREN reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On RETURNING reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On RBRACKET reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On RBRACE reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On OP reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On LARROW reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On FUN reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On FROM reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On END reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On ELSE reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On DOTDOT reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On COMMA reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On COLON reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On CASE reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On BARRBRACKET reduce production mu_datatype -> MU VARIABLE DOT mu_datatype
-- On BARRBRACE reduce production mu_datatype -> MU VARIABLE DOT mu_datatype

State 232:
primary_datatype -> TABLEHANDLE LPAREN datatype . COMMA datatype COMMA datatype RPAREN [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On COMMA shift to state 233

State 233:
primary_datatype -> TABLEHANDLE LPAREN datatype COMMA . datatype COMMA datatype RPAREN [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 234

State 234:
primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype . COMMA datatype RPAREN [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On COMMA shift to state 235

State 235:
primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA . datatype RPAREN [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 236

State 236:
primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype . RPAREN [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On RPAREN shift to state 237

State 237:
primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN . [ WITH WHERE VBAR VAR VALUES SERVER SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP OP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FUN FROM EQ END ELSE DOTDOT COMMA COLON CLIENT CASE BARRBRACKET BARRBRACE ]
-- On WITH reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On WHERE reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On VBAR reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On VAR reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On VALUES reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On SERVER reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On SEMICOLON reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On RPAREN reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On RETURNING reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On RBRACKET reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On RBRACE reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On RARROW reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On POSTFIXOP reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On OP reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On NATIVE reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On LLARROW reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On LBRACE reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On LARROW reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR9 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR8 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR7 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR6 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR5 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR4 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR3 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR2 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR1 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXR0 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL9 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL8 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL7 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL6 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL5 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL4 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL3 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL2 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL1 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIXL0 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX9 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX8 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX7 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX6 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX5 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX4 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX3 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX2 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX1 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On INFIX0 reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On FUN reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On FROM reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On EQ reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On END reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On ELSE reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On DOTDOT reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On COMMA reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On COLON reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On CLIENT reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On CASE reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On BARRBRACKET reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN
-- On BARRBRACE reduce production primary_datatype -> TABLEHANDLE LPAREN datatype COMMA datatype COMMA datatype RPAREN

State 238:
pattern -> typed_pattern COLON primary_datatype . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA CLIENT ]
-- On VBAR reduce production pattern -> typed_pattern COLON primary_datatype
-- On SERVER reduce production pattern -> typed_pattern COLON primary_datatype
-- On RPAREN reduce production pattern -> typed_pattern COLON primary_datatype
-- On RBRACKET reduce production pattern -> typed_pattern COLON primary_datatype
-- On RBRACE reduce production pattern -> typed_pattern COLON primary_datatype
-- On RARROW reduce production pattern -> typed_pattern COLON primary_datatype
-- On POSTFIXOP reduce production pattern -> typed_pattern COLON primary_datatype
-- On NATIVE reduce production pattern -> typed_pattern COLON primary_datatype
-- On LLARROW reduce production pattern -> typed_pattern COLON primary_datatype
-- On LBRACE reduce production pattern -> typed_pattern COLON primary_datatype
-- On LARROW reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR9 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR8 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR7 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR6 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR5 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR4 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR3 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR2 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR1 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXR0 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL9 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL8 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL7 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL6 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL5 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL4 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL3 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL2 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL1 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIXL0 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX9 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX8 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX7 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX6 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX5 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX4 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX3 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX2 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX1 reduce production pattern -> typed_pattern COLON primary_datatype
-- On INFIX0 reduce production pattern -> typed_pattern COLON primary_datatype
-- On EQ reduce production pattern -> typed_pattern COLON primary_datatype
-- On COMMA reduce production pattern -> typed_pattern COLON primary_datatype
-- On CLIENT reduce production pattern -> typed_pattern COLON primary_datatype

State 239:
negative_pattern -> primary_pattern . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production negative_pattern -> primary_pattern
-- On SERVER reduce production negative_pattern -> primary_pattern
-- On RPAREN reduce production negative_pattern -> primary_pattern
-- On RBRACKET reduce production negative_pattern -> primary_pattern
-- On RBRACE reduce production negative_pattern -> primary_pattern
-- On RARROW reduce production negative_pattern -> primary_pattern
-- On POSTFIXOP reduce production negative_pattern -> primary_pattern
-- On NATIVE reduce production negative_pattern -> primary_pattern
-- On LLARROW reduce production negative_pattern -> primary_pattern
-- On LBRACE reduce production negative_pattern -> primary_pattern
-- On LARROW reduce production negative_pattern -> primary_pattern
-- On INFIXR9 reduce production negative_pattern -> primary_pattern
-- On INFIXR8 reduce production negative_pattern -> primary_pattern
-- On INFIXR7 reduce production negative_pattern -> primary_pattern
-- On INFIXR6 reduce production negative_pattern -> primary_pattern
-- On INFIXR5 reduce production negative_pattern -> primary_pattern
-- On INFIXR4 reduce production negative_pattern -> primary_pattern
-- On INFIXR3 reduce production negative_pattern -> primary_pattern
-- On INFIXR2 reduce production negative_pattern -> primary_pattern
-- On INFIXR1 reduce production negative_pattern -> primary_pattern
-- On INFIXR0 reduce production negative_pattern -> primary_pattern
-- On INFIXL9 reduce production negative_pattern -> primary_pattern
-- On INFIXL8 reduce production negative_pattern -> primary_pattern
-- On INFIXL7 reduce production negative_pattern -> primary_pattern
-- On INFIXL6 reduce production negative_pattern -> primary_pattern
-- On INFIXL5 reduce production negative_pattern -> primary_pattern
-- On INFIXL4 reduce production negative_pattern -> primary_pattern
-- On INFIXL3 reduce production negative_pattern -> primary_pattern
-- On INFIXL2 reduce production negative_pattern -> primary_pattern
-- On INFIXL1 reduce production negative_pattern -> primary_pattern
-- On INFIXL0 reduce production negative_pattern -> primary_pattern
-- On INFIX9 reduce production negative_pattern -> primary_pattern
-- On INFIX8 reduce production negative_pattern -> primary_pattern
-- On INFIX7 reduce production negative_pattern -> primary_pattern
-- On INFIX6 reduce production negative_pattern -> primary_pattern
-- On INFIX5 reduce production negative_pattern -> primary_pattern
-- On INFIX4 reduce production negative_pattern -> primary_pattern
-- On INFIX3 reduce production negative_pattern -> primary_pattern
-- On INFIX2 reduce production negative_pattern -> primary_pattern
-- On INFIX1 reduce production negative_pattern -> primary_pattern
-- On INFIX0 reduce production negative_pattern -> primary_pattern
-- On EQ reduce production negative_pattern -> primary_pattern
-- On COMMA reduce production negative_pattern -> primary_pattern
-- On COLONCOLON reduce production negative_pattern -> primary_pattern
-- On COLON reduce production negative_pattern -> primary_pattern
-- On CLIENT reduce production negative_pattern -> primary_pattern
-- On AS reduce production negative_pattern -> primary_pattern

State 240:
primary_pattern -> LBRACKET patterns . RBRACKET [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On RBRACKET shift to state 241

State 241:
primary_pattern -> LBRACKET patterns RBRACKET . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On SERVER reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On RPAREN reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On RBRACKET reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On RBRACE reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On RARROW reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On POSTFIXOP reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On NATIVE reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On LLARROW reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On LBRACE reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On LARROW reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR9 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR8 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR7 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR6 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR5 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR4 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR3 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR2 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR1 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXR0 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL9 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL8 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL7 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL6 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL5 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL4 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL3 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL2 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL1 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIXL0 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX9 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX8 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX7 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX6 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX5 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX4 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX3 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX2 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX1 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On INFIX0 reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On EQ reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On COMMA reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On COLONCOLON reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On COLON reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On CLIENT reduce production primary_pattern -> LBRACKET patterns RBRACKET
-- On AS reduce production primary_pattern -> LBRACKET patterns RBRACKET

State 242:
patterns -> pattern . [ RPAREN RBRACKET ]
patterns -> pattern . COMMA patterns [ RPAREN RBRACKET ]
-- On COMMA shift to state 243
-- On RPAREN reduce production patterns -> pattern
-- On RBRACKET reduce production patterns -> pattern

State 243:
patterns -> pattern COMMA . patterns [ RPAREN RBRACKET ]
-- On VARIABLE shift to state 17
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 39
-- On CHAR shift to state 41
-- On typed_pattern shift to state 42
-- On primary_pattern shift to state 239
-- On patterns shift to state 244
-- On pattern shift to state 242
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 251

State 244:
patterns -> pattern COMMA patterns . [ RPAREN RBRACKET ]
-- On RPAREN reduce production patterns -> pattern COMMA patterns
-- On RBRACKET reduce production patterns -> pattern COMMA patterns

State 245:
primary_pattern -> parenthesized_pattern . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production primary_pattern -> parenthesized_pattern
-- On SERVER reduce production primary_pattern -> parenthesized_pattern
-- On RPAREN reduce production primary_pattern -> parenthesized_pattern
-- On RBRACKET reduce production primary_pattern -> parenthesized_pattern
-- On RBRACE reduce production primary_pattern -> parenthesized_pattern
-- On RARROW reduce production primary_pattern -> parenthesized_pattern
-- On POSTFIXOP reduce production primary_pattern -> parenthesized_pattern
-- On NATIVE reduce production primary_pattern -> parenthesized_pattern
-- On LLARROW reduce production primary_pattern -> parenthesized_pattern
-- On LBRACE reduce production primary_pattern -> parenthesized_pattern
-- On LARROW reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR9 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR8 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR7 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR6 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR5 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR4 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR3 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR2 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR1 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXR0 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL9 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL8 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL7 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL6 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL5 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL4 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL3 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL2 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL1 reduce production primary_pattern -> parenthesized_pattern
-- On INFIXL0 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX9 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX8 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX7 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX6 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX5 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX4 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX3 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX2 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX1 reduce production primary_pattern -> parenthesized_pattern
-- On INFIX0 reduce production primary_pattern -> parenthesized_pattern
-- On EQ reduce production primary_pattern -> parenthesized_pattern
-- On COMMA reduce production primary_pattern -> parenthesized_pattern
-- On COLONCOLON reduce production primary_pattern -> parenthesized_pattern
-- On COLON reduce production primary_pattern -> parenthesized_pattern
-- On CLIENT reduce production primary_pattern -> parenthesized_pattern
-- On AS reduce production primary_pattern -> parenthesized_pattern

State 246:
constructor_pattern -> negative_pattern . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production constructor_pattern -> negative_pattern
-- On SERVER reduce production constructor_pattern -> negative_pattern
-- On RPAREN reduce production constructor_pattern -> negative_pattern
-- On RBRACKET reduce production constructor_pattern -> negative_pattern
-- On RBRACE reduce production constructor_pattern -> negative_pattern
-- On RARROW reduce production constructor_pattern -> negative_pattern
-- On POSTFIXOP reduce production constructor_pattern -> negative_pattern
-- On NATIVE reduce production constructor_pattern -> negative_pattern
-- On LLARROW reduce production constructor_pattern -> negative_pattern
-- On LBRACE reduce production constructor_pattern -> negative_pattern
-- On LARROW reduce production constructor_pattern -> negative_pattern
-- On INFIXR9 reduce production constructor_pattern -> negative_pattern
-- On INFIXR8 reduce production constructor_pattern -> negative_pattern
-- On INFIXR7 reduce production constructor_pattern -> negative_pattern
-- On INFIXR6 reduce production constructor_pattern -> negative_pattern
-- On INFIXR5 reduce production constructor_pattern -> negative_pattern
-- On INFIXR4 reduce production constructor_pattern -> negative_pattern
-- On INFIXR3 reduce production constructor_pattern -> negative_pattern
-- On INFIXR2 reduce production constructor_pattern -> negative_pattern
-- On INFIXR1 reduce production constructor_pattern -> negative_pattern
-- On INFIXR0 reduce production constructor_pattern -> negative_pattern
-- On INFIXL9 reduce production constructor_pattern -> negative_pattern
-- On INFIXL8 reduce production constructor_pattern -> negative_pattern
-- On INFIXL7 reduce production constructor_pattern -> negative_pattern
-- On INFIXL6 reduce production constructor_pattern -> negative_pattern
-- On INFIXL5 reduce production constructor_pattern -> negative_pattern
-- On INFIXL4 reduce production constructor_pattern -> negative_pattern
-- On INFIXL3 reduce production constructor_pattern -> negative_pattern
-- On INFIXL2 reduce production constructor_pattern -> negative_pattern
-- On INFIXL1 reduce production constructor_pattern -> negative_pattern
-- On INFIXL0 reduce production constructor_pattern -> negative_pattern
-- On INFIX9 reduce production constructor_pattern -> negative_pattern
-- On INFIX8 reduce production constructor_pattern -> negative_pattern
-- On INFIX7 reduce production constructor_pattern -> negative_pattern
-- On INFIX6 reduce production constructor_pattern -> negative_pattern
-- On INFIX5 reduce production constructor_pattern -> negative_pattern
-- On INFIX4 reduce production constructor_pattern -> negative_pattern
-- On INFIX3 reduce production constructor_pattern -> negative_pattern
-- On INFIX2 reduce production constructor_pattern -> negative_pattern
-- On INFIX1 reduce production constructor_pattern -> negative_pattern
-- On INFIX0 reduce production constructor_pattern -> negative_pattern
-- On EQ reduce production constructor_pattern -> negative_pattern
-- On COMMA reduce production constructor_pattern -> negative_pattern
-- On COLONCOLON reduce production constructor_pattern -> negative_pattern
-- On COLON reduce production constructor_pattern -> negative_pattern
-- On CLIENT reduce production constructor_pattern -> negative_pattern
-- On AS reduce production constructor_pattern -> negative_pattern

State 247:
cons_pattern -> constructor_pattern . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLON CLIENT AS ]
cons_pattern -> constructor_pattern . COLONCOLON cons_pattern [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLON CLIENT AS ]
-- On COLONCOLON shift to state 248
-- On VBAR reduce production cons_pattern -> constructor_pattern
-- On SERVER reduce production cons_pattern -> constructor_pattern
-- On RPAREN reduce production cons_pattern -> constructor_pattern
-- On RBRACKET reduce production cons_pattern -> constructor_pattern
-- On RBRACE reduce production cons_pattern -> constructor_pattern
-- On RARROW reduce production cons_pattern -> constructor_pattern
-- On POSTFIXOP reduce production cons_pattern -> constructor_pattern
-- On NATIVE reduce production cons_pattern -> constructor_pattern
-- On LLARROW reduce production cons_pattern -> constructor_pattern
-- On LBRACE reduce production cons_pattern -> constructor_pattern
-- On LARROW reduce production cons_pattern -> constructor_pattern
-- On INFIXR9 reduce production cons_pattern -> constructor_pattern
-- On INFIXR8 reduce production cons_pattern -> constructor_pattern
-- On INFIXR7 reduce production cons_pattern -> constructor_pattern
-- On INFIXR6 reduce production cons_pattern -> constructor_pattern
-- On INFIXR5 reduce production cons_pattern -> constructor_pattern
-- On INFIXR4 reduce production cons_pattern -> constructor_pattern
-- On INFIXR3 reduce production cons_pattern -> constructor_pattern
-- On INFIXR2 reduce production cons_pattern -> constructor_pattern
-- On INFIXR1 reduce production cons_pattern -> constructor_pattern
-- On INFIXR0 reduce production cons_pattern -> constructor_pattern
-- On INFIXL9 reduce production cons_pattern -> constructor_pattern
-- On INFIXL8 reduce production cons_pattern -> constructor_pattern
-- On INFIXL7 reduce production cons_pattern -> constructor_pattern
-- On INFIXL6 reduce production cons_pattern -> constructor_pattern
-- On INFIXL5 reduce production cons_pattern -> constructor_pattern
-- On INFIXL4 reduce production cons_pattern -> constructor_pattern
-- On INFIXL3 reduce production cons_pattern -> constructor_pattern
-- On INFIXL2 reduce production cons_pattern -> constructor_pattern
-- On INFIXL1 reduce production cons_pattern -> constructor_pattern
-- On INFIXL0 reduce production cons_pattern -> constructor_pattern
-- On INFIX9 reduce production cons_pattern -> constructor_pattern
-- On INFIX8 reduce production cons_pattern -> constructor_pattern
-- On INFIX7 reduce production cons_pattern -> constructor_pattern
-- On INFIX6 reduce production cons_pattern -> constructor_pattern
-- On INFIX5 reduce production cons_pattern -> constructor_pattern
-- On INFIX4 reduce production cons_pattern -> constructor_pattern
-- On INFIX3 reduce production cons_pattern -> constructor_pattern
-- On INFIX2 reduce production cons_pattern -> constructor_pattern
-- On INFIX1 reduce production cons_pattern -> constructor_pattern
-- On INFIX0 reduce production cons_pattern -> constructor_pattern
-- On EQ reduce production cons_pattern -> constructor_pattern
-- On COMMA reduce production cons_pattern -> constructor_pattern
-- On COLON reduce production cons_pattern -> constructor_pattern
-- On CLIENT reduce production cons_pattern -> constructor_pattern
-- On AS reduce production cons_pattern -> constructor_pattern

State 248:
cons_pattern -> constructor_pattern COLONCOLON . cons_pattern [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLON CLIENT AS ]
-- On VARIABLE shift to state 17
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 39
-- On CHAR shift to state 41
-- On primary_pattern shift to state 239
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 250

State 249:
primary_pattern -> constant . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production primary_pattern -> constant
-- On SERVER reduce production primary_pattern -> constant
-- On RPAREN reduce production primary_pattern -> constant
-- On RBRACKET reduce production primary_pattern -> constant
-- On RBRACE reduce production primary_pattern -> constant
-- On RARROW reduce production primary_pattern -> constant
-- On POSTFIXOP reduce production primary_pattern -> constant
-- On NATIVE reduce production primary_pattern -> constant
-- On LLARROW reduce production primary_pattern -> constant
-- On LBRACE reduce production primary_pattern -> constant
-- On LARROW reduce production primary_pattern -> constant
-- On INFIXR9 reduce production primary_pattern -> constant
-- On INFIXR8 reduce production primary_pattern -> constant
-- On INFIXR7 reduce production primary_pattern -> constant
-- On INFIXR6 reduce production primary_pattern -> constant
-- On INFIXR5 reduce production primary_pattern -> constant
-- On INFIXR4 reduce production primary_pattern -> constant
-- On INFIXR3 reduce production primary_pattern -> constant
-- On INFIXR2 reduce production primary_pattern -> constant
-- On INFIXR1 reduce production primary_pattern -> constant
-- On INFIXR0 reduce production primary_pattern -> constant
-- On INFIXL9 reduce production primary_pattern -> constant
-- On INFIXL8 reduce production primary_pattern -> constant
-- On INFIXL7 reduce production primary_pattern -> constant
-- On INFIXL6 reduce production primary_pattern -> constant
-- On INFIXL5 reduce production primary_pattern -> constant
-- On INFIXL4 reduce production primary_pattern -> constant
-- On INFIXL3 reduce production primary_pattern -> constant
-- On INFIXL2 reduce production primary_pattern -> constant
-- On INFIXL1 reduce production primary_pattern -> constant
-- On INFIXL0 reduce production primary_pattern -> constant
-- On INFIX9 reduce production primary_pattern -> constant
-- On INFIX8 reduce production primary_pattern -> constant
-- On INFIX7 reduce production primary_pattern -> constant
-- On INFIX6 reduce production primary_pattern -> constant
-- On INFIX5 reduce production primary_pattern -> constant
-- On INFIX4 reduce production primary_pattern -> constant
-- On INFIX3 reduce production primary_pattern -> constant
-- On INFIX2 reduce production primary_pattern -> constant
-- On INFIX1 reduce production primary_pattern -> constant
-- On INFIX0 reduce production primary_pattern -> constant
-- On EQ reduce production primary_pattern -> constant
-- On COMMA reduce production primary_pattern -> constant
-- On COLONCOLON reduce production primary_pattern -> constant
-- On COLON reduce production primary_pattern -> constant
-- On CLIENT reduce production primary_pattern -> constant
-- On AS reduce production primary_pattern -> constant

State 250:
cons_pattern -> constructor_pattern COLONCOLON cons_pattern . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLON CLIENT AS ]
-- On VBAR reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On SERVER reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On RPAREN reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On RBRACKET reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On RBRACE reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On RARROW reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On POSTFIXOP reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On NATIVE reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On LLARROW reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On LBRACE reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On LARROW reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR9 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR8 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR7 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR6 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR5 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR4 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR3 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR2 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR1 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXR0 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL9 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL8 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL7 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL6 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL5 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL4 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL3 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL2 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL1 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIXL0 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX9 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX8 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX7 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX6 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX5 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX4 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX3 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX2 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX1 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On INFIX0 reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On EQ reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On COMMA reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On COLON reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On CLIENT reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern
-- On AS reduce production cons_pattern -> constructor_pattern COLONCOLON cons_pattern

State 251:
typed_pattern -> cons_pattern . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLON CLIENT ]
typed_pattern -> cons_pattern . AS var [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLON CLIENT ]
-- On AS shift to state 252
-- On VBAR reduce production typed_pattern -> cons_pattern
-- On SERVER reduce production typed_pattern -> cons_pattern
-- On RPAREN reduce production typed_pattern -> cons_pattern
-- On RBRACKET reduce production typed_pattern -> cons_pattern
-- On RBRACE reduce production typed_pattern -> cons_pattern
-- On RARROW reduce production typed_pattern -> cons_pattern
-- On POSTFIXOP reduce production typed_pattern -> cons_pattern
-- On NATIVE reduce production typed_pattern -> cons_pattern
-- On LLARROW reduce production typed_pattern -> cons_pattern
-- On LBRACE reduce production typed_pattern -> cons_pattern
-- On LARROW reduce production typed_pattern -> cons_pattern
-- On INFIXR9 reduce production typed_pattern -> cons_pattern
-- On INFIXR8 reduce production typed_pattern -> cons_pattern
-- On INFIXR7 reduce production typed_pattern -> cons_pattern
-- On INFIXR6 reduce production typed_pattern -> cons_pattern
-- On INFIXR5 reduce production typed_pattern -> cons_pattern
-- On INFIXR4 reduce production typed_pattern -> cons_pattern
-- On INFIXR3 reduce production typed_pattern -> cons_pattern
-- On INFIXR2 reduce production typed_pattern -> cons_pattern
-- On INFIXR1 reduce production typed_pattern -> cons_pattern
-- On INFIXR0 reduce production typed_pattern -> cons_pattern
-- On INFIXL9 reduce production typed_pattern -> cons_pattern
-- On INFIXL8 reduce production typed_pattern -> cons_pattern
-- On INFIXL7 reduce production typed_pattern -> cons_pattern
-- On INFIXL6 reduce production typed_pattern -> cons_pattern
-- On INFIXL5 reduce production typed_pattern -> cons_pattern
-- On INFIXL4 reduce production typed_pattern -> cons_pattern
-- On INFIXL3 reduce production typed_pattern -> cons_pattern
-- On INFIXL2 reduce production typed_pattern -> cons_pattern
-- On INFIXL1 reduce production typed_pattern -> cons_pattern
-- On INFIXL0 reduce production typed_pattern -> cons_pattern
-- On INFIX9 reduce production typed_pattern -> cons_pattern
-- On INFIX8 reduce production typed_pattern -> cons_pattern
-- On INFIX7 reduce production typed_pattern -> cons_pattern
-- On INFIX6 reduce production typed_pattern -> cons_pattern
-- On INFIX5 reduce production typed_pattern -> cons_pattern
-- On INFIX4 reduce production typed_pattern -> cons_pattern
-- On INFIX3 reduce production typed_pattern -> cons_pattern
-- On INFIX2 reduce production typed_pattern -> cons_pattern
-- On INFIX1 reduce production typed_pattern -> cons_pattern
-- On INFIX0 reduce production typed_pattern -> cons_pattern
-- On EQ reduce production typed_pattern -> cons_pattern
-- On COMMA reduce production typed_pattern -> cons_pattern
-- On COLON reduce production typed_pattern -> cons_pattern
-- On CLIENT reduce production typed_pattern -> cons_pattern

State 252:
typed_pattern -> cons_pattern AS . var [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLON CLIENT ]
-- On VARIABLE shift to state 8
-- On var shift to state 253

State 253:
typed_pattern -> cons_pattern AS var . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLON CLIENT ]
-- On VBAR reduce production typed_pattern -> cons_pattern AS var
-- On SERVER reduce production typed_pattern -> cons_pattern AS var
-- On RPAREN reduce production typed_pattern -> cons_pattern AS var
-- On RBRACKET reduce production typed_pattern -> cons_pattern AS var
-- On RBRACE reduce production typed_pattern -> cons_pattern AS var
-- On RARROW reduce production typed_pattern -> cons_pattern AS var
-- On POSTFIXOP reduce production typed_pattern -> cons_pattern AS var
-- On NATIVE reduce production typed_pattern -> cons_pattern AS var
-- On LLARROW reduce production typed_pattern -> cons_pattern AS var
-- On LBRACE reduce production typed_pattern -> cons_pattern AS var
-- On LARROW reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR9 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR8 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR7 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR6 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR5 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR4 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR3 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR2 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR1 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXR0 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL9 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL8 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL7 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL6 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL5 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL4 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL3 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL2 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL1 reduce production typed_pattern -> cons_pattern AS var
-- On INFIXL0 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX9 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX8 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX7 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX6 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX5 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX4 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX3 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX2 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX1 reduce production typed_pattern -> cons_pattern AS var
-- On INFIX0 reduce production typed_pattern -> cons_pattern AS var
-- On EQ reduce production typed_pattern -> cons_pattern AS var
-- On COMMA reduce production typed_pattern -> cons_pattern AS var
-- On COLON reduce production typed_pattern -> cons_pattern AS var
-- On CLIENT reduce production typed_pattern -> cons_pattern AS var

State 254:
constructor_pattern -> CONSTRUCTOR . [ RPAREN COMMA COLONCOLON COLON AS ]
constructor_pattern -> CONSTRUCTOR . parenthesized_pattern [ RPAREN COMMA COLONCOLON COLON AS ]
field_label -> CONSTRUCTOR . [ EQ ]
-- On LPAREN shift to state 31
-- On parenthesized_pattern shift to state 40
-- On RPAREN reduce production constructor_pattern -> CONSTRUCTOR
-- On EQ reduce production field_label -> CONSTRUCTOR
-- On COMMA reduce production constructor_pattern -> CONSTRUCTOR
-- On COLONCOLON reduce production constructor_pattern -> CONSTRUCTOR
-- On COLON reduce production constructor_pattern -> CONSTRUCTOR
-- On AS reduce production constructor_pattern -> CONSTRUCTOR

State 255:
labeled_patterns -> record_label . EQ pattern [ VBAR RPAREN ]
labeled_patterns -> record_label . EQ pattern COMMA labeled_patterns [ VBAR RPAREN ]
-- On EQ shift to state 256

State 256:
labeled_patterns -> record_label EQ . pattern [ VBAR RPAREN ]
labeled_patterns -> record_label EQ . pattern COMMA labeled_patterns [ VBAR RPAREN ]
-- On VARIABLE shift to state 17
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 39
-- On CHAR shift to state 41
-- On typed_pattern shift to state 42
-- On primary_pattern shift to state 239
-- On pattern shift to state 257
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 251

State 257:
labeled_patterns -> record_label EQ pattern . [ VBAR RPAREN ]
labeled_patterns -> record_label EQ pattern . COMMA labeled_patterns [ VBAR RPAREN ]
-- On COMMA shift to state 258
-- On VBAR reduce production labeled_patterns -> record_label EQ pattern
-- On RPAREN reduce production labeled_patterns -> record_label EQ pattern

State 258:
labeled_patterns -> record_label EQ pattern COMMA . labeled_patterns [ VBAR RPAREN ]
-- On VARIABLE shift to state 170
-- On UINTEGER shift to state 171
-- On STRING shift to state 172
-- On CONSTRUCTOR shift to state 173
-- On record_label shift to state 255
-- On labeled_patterns shift to state 259
-- On field_label shift to state 224

State 259:
labeled_patterns -> record_label EQ pattern COMMA labeled_patterns . [ VBAR RPAREN ]
-- On VBAR reduce production labeled_patterns -> record_label EQ pattern COMMA labeled_patterns
-- On RPAREN reduce production labeled_patterns -> record_label EQ pattern COMMA labeled_patterns

State 260:
parenthesized_pattern -> LPAREN pattern . RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
parenthesized_pattern -> LPAREN pattern . COMMA patterns RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On RPAREN shift to state 261
-- On COMMA shift to state 262

State 261:
parenthesized_pattern -> LPAREN pattern RPAREN . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On SERVER reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On RPAREN reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On RBRACKET reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On RBRACE reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On RARROW reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On POSTFIXOP reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On NATIVE reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On LLARROW reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On LBRACE reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On LARROW reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR9 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR8 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR7 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR6 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR5 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR4 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR3 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR2 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR1 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXR0 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL9 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL8 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL7 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL6 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL5 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL4 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL3 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL2 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL1 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIXL0 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX9 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX8 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX7 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX6 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX5 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX4 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX3 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX2 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX1 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On INFIX0 reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On EQ reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On COMMA reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On COLONCOLON reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On COLON reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On CLIENT reduce production parenthesized_pattern -> LPAREN pattern RPAREN
-- On AS reduce production parenthesized_pattern -> LPAREN pattern RPAREN

State 262:
parenthesized_pattern -> LPAREN pattern COMMA . patterns RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VARIABLE shift to state 17
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 39
-- On CHAR shift to state 41
-- On typed_pattern shift to state 42
-- On primary_pattern shift to state 239
-- On patterns shift to state 263
-- On pattern shift to state 242
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 251

State 263:
parenthesized_pattern -> LPAREN pattern COMMA patterns . RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On RPAREN shift to state 264

State 264:
parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On SERVER reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On RPAREN reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On RBRACKET reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On RBRACE reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On RARROW reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On POSTFIXOP reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On NATIVE reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On LLARROW reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On LBRACE reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On LARROW reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR9 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR8 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR7 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR6 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR5 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR4 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR3 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR2 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR1 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXR0 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL9 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL8 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL7 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL6 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL5 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL4 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL3 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL2 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL1 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIXL0 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX9 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX8 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX7 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX6 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX5 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX4 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX3 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX2 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX1 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On INFIX0 reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On EQ reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On COMMA reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On COLONCOLON reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On COLON reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On CLIENT reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN
-- On AS reduce production parenthesized_pattern -> LPAREN pattern COMMA patterns RPAREN

State 265:
parenthesized_pattern -> LPAREN labeled_patterns . VBAR pattern RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
parenthesized_pattern -> LPAREN labeled_patterns . RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR shift to state 266
-- On RPAREN shift to state 269

State 266:
parenthesized_pattern -> LPAREN labeled_patterns VBAR . pattern RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VARIABLE shift to state 17
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 39
-- On CHAR shift to state 41
-- On typed_pattern shift to state 42
-- On primary_pattern shift to state 239
-- On pattern shift to state 267
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 251

State 267:
parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern . RPAREN [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On RPAREN shift to state 268

State 268:
parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On SERVER reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On RPAREN reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On RBRACKET reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On RBRACE reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On RARROW reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On POSTFIXOP reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On NATIVE reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On LLARROW reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On LBRACE reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On LARROW reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR9 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR8 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR7 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR6 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR5 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR4 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR3 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR2 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR1 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXR0 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL9 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL8 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL7 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL6 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL5 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL4 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL3 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL2 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL1 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIXL0 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX9 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX8 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX7 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX6 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX5 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX4 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX3 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX2 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX1 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On INFIX0 reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On EQ reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On COMMA reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On COLONCOLON reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On COLON reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On CLIENT reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN
-- On AS reduce production parenthesized_pattern -> LPAREN labeled_patterns VBAR pattern RPAREN

State 269:
parenthesized_pattern -> LPAREN labeled_patterns RPAREN . [ VBAR SERVER RPAREN RBRACKET RBRACE RARROW POSTFIXOP NATIVE LLARROW LBRACE LARROW INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQ COMMA COLONCOLON COLON CLIENT AS ]
-- On VBAR reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On SERVER reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On RPAREN reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On RBRACKET reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On RBRACE reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On RARROW reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On POSTFIXOP reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On NATIVE reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On LLARROW reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On LBRACE reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On LARROW reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR9 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR8 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR7 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR6 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR5 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR4 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR3 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR2 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR1 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXR0 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL9 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL8 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL7 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL6 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL5 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL4 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL3 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL2 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL1 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIXL0 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX9 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX8 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX7 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX6 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX5 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX4 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX3 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX2 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX1 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On INFIX0 reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On EQ reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On COMMA reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On COLONCOLON reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On COLON reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On CLIENT reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN
-- On AS reduce production parenthesized_pattern -> LPAREN labeled_patterns RPAREN

State 270:
db_expression -> UPDATE LPAREN table_generator . RPAREN perhaps_where SET LPAREN labeled_exps RPAREN [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On RPAREN shift to state 271

State 271:
db_expression -> UPDATE LPAREN table_generator RPAREN . perhaps_where SET LPAREN labeled_exps RPAREN [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WHERE shift to state 272
-- On perhaps_where shift to state 728
-- On SET reduce production perhaps_where -> 

State 272:
perhaps_where -> WHERE . LPAREN exp RPAREN [ WITH VBAR VARIABLE VALUES UPDATE UINTEGER UFLOAT TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SET SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE QUERY PREFIXOP PAGE ORDERBY MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE END ELSE DOTDOT DELETE DATABASE CONSTRUCTOR COMMA CHAR CASE BARRBRACE ]
-- On LPAREN shift to state 273

State 273:
perhaps_where -> WHERE LPAREN . exp RPAREN [ WITH VBAR VARIABLE VALUES UPDATE UINTEGER UFLOAT TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SET SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE QUERY PREFIXOP PAGE ORDERBY MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE END ELSE DOTDOT DELETE DATABASE CONSTRUCTOR COMMA CHAR CASE BARRBRACE ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 726
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 274:
table_expression -> TABLE . exp WITH datatype perhaps_table_constraints FROM exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 710
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 275:
case_expression -> SWITCH . LPAREN exp RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On LPAREN shift to state 276

State 276:
case_expression -> SWITCH LPAREN . exp RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 705
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 277:
postfix_expression -> SPAWNWAIT . block [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On LBRACE shift to state 278
-- On block shift to state 704

State 278:
block -> LBRACE . block_contents RBRACE [ WITH VBAR VARIABLE VAR VALUES UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING STAR SPAWNWAIT SPAWN SLASHRXML SLASHFLAGS SLASH SIG SEMICOLON RXML RQUOTE RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW RANGE QUOTEDMETA QUESTION QUERY PREFIXOP PREFIX POSTFIXOP POSTFIX PLUS PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXR INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIXL INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 INFIX IF FUN FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE END ELSE DOTDOT DOT DOLLAR DELETE DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CASE CARET BARRBRACE BARBAR AMPAMP ALTERNATE ALIEN ]
-- On VARIABLE shift to state 6
-- On VAR shift to state 279
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TYPENAME shift to state 289
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On SEMICOLON shift to state 297
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 629
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typedecl shift to state 633
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On perhaps_semi shift to state 635
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 646
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block_contents shift to state 648
-- On block shift to state 374
-- On bindings shift to state 650
-- On binding shift to state 654
-- On atomic_expression shift to state 375
-- On RBRACE reduce production perhaps_semi -> 

State 279:
binding -> VAR . pattern EQ exp SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
-- On VARIABLE shift to state 17
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 39
-- On CHAR shift to state 41
-- On typed_pattern shift to state 42
-- On primary_pattern shift to state 239
-- On pattern shift to state 280
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 251

State 280:
binding -> VAR pattern . EQ exp SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
-- On EQ shift to state 281

State 281:
binding -> VAR pattern EQ . exp SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 702
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 282:
postfix_expression -> SPAWN . block [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On LBRACE shift to state 278
-- On block shift to state 283

State 283:
postfix_expression -> SPAWN block . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production postfix_expression -> SPAWN block
-- On VBAR reduce production postfix_expression -> SPAWN block
-- On VALUES reduce production postfix_expression -> SPAWN block
-- On SEMICOLON reduce production postfix_expression -> SPAWN block
-- On RPAREN reduce production postfix_expression -> SPAWN block
-- On RETURNING reduce production postfix_expression -> SPAWN block
-- On RBRACKET reduce production postfix_expression -> SPAWN block
-- On RBRACE reduce production postfix_expression -> SPAWN block
-- On RARROW reduce production postfix_expression -> SPAWN block
-- On MINUSDOT reduce production postfix_expression -> SPAWN block
-- On MINUS reduce production postfix_expression -> SPAWN block
-- On LPAREN reduce production postfix_expression -> SPAWN block
-- On INFIXR9 reduce production postfix_expression -> SPAWN block
-- On INFIXR8 reduce production postfix_expression -> SPAWN block
-- On INFIXR7 reduce production postfix_expression -> SPAWN block
-- On INFIXR6 reduce production postfix_expression -> SPAWN block
-- On INFIXR5 reduce production postfix_expression -> SPAWN block
-- On INFIXR4 reduce production postfix_expression -> SPAWN block
-- On INFIXR3 reduce production postfix_expression -> SPAWN block
-- On INFIXR2 reduce production postfix_expression -> SPAWN block
-- On INFIXR1 reduce production postfix_expression -> SPAWN block
-- On INFIXR0 reduce production postfix_expression -> SPAWN block
-- On INFIXL9 reduce production postfix_expression -> SPAWN block
-- On INFIXL8 reduce production postfix_expression -> SPAWN block
-- On INFIXL7 reduce production postfix_expression -> SPAWN block
-- On INFIXL6 reduce production postfix_expression -> SPAWN block
-- On INFIXL5 reduce production postfix_expression -> SPAWN block
-- On INFIXL4 reduce production postfix_expression -> SPAWN block
-- On INFIXL3 reduce production postfix_expression -> SPAWN block
-- On INFIXL2 reduce production postfix_expression -> SPAWN block
-- On INFIXL1 reduce production postfix_expression -> SPAWN block
-- On INFIXL0 reduce production postfix_expression -> SPAWN block
-- On INFIX9 reduce production postfix_expression -> SPAWN block
-- On INFIX8 reduce production postfix_expression -> SPAWN block
-- On INFIX7 reduce production postfix_expression -> SPAWN block
-- On INFIX6 reduce production postfix_expression -> SPAWN block
-- On INFIX5 reduce production postfix_expression -> SPAWN block
-- On INFIX4 reduce production postfix_expression -> SPAWN block
-- On INFIX3 reduce production postfix_expression -> SPAWN block
-- On INFIX2 reduce production postfix_expression -> SPAWN block
-- On INFIX1 reduce production postfix_expression -> SPAWN block
-- On INFIX0 reduce production postfix_expression -> SPAWN block
-- On FATRARROW reduce production postfix_expression -> SPAWN block
-- On EQUALSTILDE reduce production postfix_expression -> SPAWN block
-- On END reduce production postfix_expression -> SPAWN block
-- On ELSE reduce production postfix_expression -> SPAWN block
-- On DOTDOT reduce production postfix_expression -> SPAWN block
-- On DOT reduce production postfix_expression -> SPAWN block
-- On COMMA reduce production postfix_expression -> SPAWN block
-- On COLONCOLON reduce production postfix_expression -> SPAWN block
-- On COLON reduce production postfix_expression -> SPAWN block
-- On CASE reduce production postfix_expression -> SPAWN block
-- On BARRBRACE reduce production postfix_expression -> SPAWN block
-- On BARBAR reduce production postfix_expression -> SPAWN block
-- On AMPAMP reduce production postfix_expression -> SPAWN block

State 284:
case_expression -> RECEIVE . LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On LBRACE shift to state 285

State 285:
case_expression -> RECEIVE LBRACE . perhaps_cases RBRACE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On CASE shift to state 286
-- On perhaps_cases shift to state 697
-- On cases shift to state 699
-- On case shift to state 700
-- On RBRACE reduce production perhaps_cases -> 

State 286:
case -> CASE . pattern RARROW block_contents [ RBRACE CASE ]
-- On VARIABLE shift to state 17
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 39
-- On CHAR shift to state 41
-- On typed_pattern shift to state 42
-- On primary_pattern shift to state 239
-- On pattern shift to state 287
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 251

State 287:
case -> CASE pattern . RARROW block_contents [ RBRACE CASE ]
-- On RARROW shift to state 288

State 288:
case -> CASE pattern RARROW . block_contents [ RBRACE CASE ]
-- On VARIABLE shift to state 6
-- On VAR shift to state 279
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TYPENAME shift to state 289
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On SEMICOLON shift to state 297
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 629
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typedecl shift to state 633
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On perhaps_semi shift to state 635
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 646
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block_contents shift to state 696
-- On block shift to state 374
-- On bindings shift to state 650
-- On binding shift to state 654
-- On atomic_expression shift to state 375
-- On RBRACE reduce production perhaps_semi -> 
-- On CASE reduce production perhaps_semi -> 

State 289:
typedecl -> TYPENAME . CONSTRUCTOR typeargs_opt EQ datatype [ SEMICOLON ]
-- On CONSTRUCTOR shift to state 290

State 290:
typedecl -> TYPENAME CONSTRUCTOR . typeargs_opt EQ datatype [ SEMICOLON ]
-- On LPAREN shift to state 291
-- On typeargs_opt shift to state 294
-- On EQ reduce production typeargs_opt -> 

State 291:
typeargs_opt -> LPAREN . varlist RPAREN [ EQ ]
-- On VARIABLE shift to state 92
-- On varlist shift to state 292
-- On typearg shift to state 199

State 292:
typeargs_opt -> LPAREN varlist . RPAREN [ EQ ]
-- On RPAREN shift to state 293

State 293:
typeargs_opt -> LPAREN varlist RPAREN . [ EQ ]
-- On EQ reduce production typeargs_opt -> LPAREN varlist RPAREN

State 294:
typedecl -> TYPENAME CONSTRUCTOR typeargs_opt . EQ datatype [ SEMICOLON ]
-- On EQ shift to state 295

State 295:
typedecl -> TYPENAME CONSTRUCTOR typeargs_opt EQ . datatype [ SEMICOLON ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 296

State 296:
typedecl -> TYPENAME CONSTRUCTOR typeargs_opt EQ datatype . [ SEMICOLON ]
-- On SEMICOLON reduce production typedecl -> TYPENAME CONSTRUCTOR typeargs_opt EQ datatype

State 297:
perhaps_semi -> SEMICOLON . [ RBRACE CASE ]
-- On RBRACE reduce production perhaps_semi -> SEMICOLON
-- On CASE reduce production perhaps_semi -> SEMICOLON

State 298:
postfix_expression -> QUERY . block [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
postfix_expression -> QUERY . LBRACKET exp RBRACKET block [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
postfix_expression -> QUERY . LBRACKET exp COMMA exp RBRACKET block [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On LBRACKET shift to state 299
-- On LBRACE shift to state 278
-- On block shift to state 695

State 299:
postfix_expression -> QUERY LBRACKET . exp RBRACKET block [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
postfix_expression -> QUERY LBRACKET . exp COMMA exp RBRACKET block [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 688
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 300:
unary_expression -> PREFIXOP . unary_expression [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 687
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 301:
unary_expression -> MINUSDOT . unary_expression [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 575
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 302:
unary_expression -> MINUS . unary_expression [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 577
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 303:
xml_tree -> LXML . SLASHRXML [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
xml_tree -> LXML . RXML ENDTAG [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
xml_tree -> LXML . RXML xml_contents_list ENDTAG [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
xml_tree -> LXML . attrs RXML ENDTAG [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
xml_tree -> LXML . attrs SLASHRXML [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
xml_tree -> LXML . attrs RXML xml_contents_list ENDTAG [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 304
-- On SLASHRXML shift to state 305
-- On RXML shift to state 306
-- On LBRACE shift to state 278
-- On xmlid shift to state 666
-- On block shift to state 676
-- On attrs shift to state 677
-- On attr_list shift to state 683
-- On attr shift to state 686

State 304:
xmlid -> VARIABLE . [ EQ ]
-- On EQ reduce production xmlid -> VARIABLE

State 305:
xml_tree -> LXML SLASHRXML . [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
-- On YIELDS reduce production xml_tree -> LXML SLASHRXML
-- On WITH reduce production xml_tree -> LXML SLASHRXML
-- On VBAR reduce production xml_tree -> LXML SLASHRXML
-- On VALUES reduce production xml_tree -> LXML SLASHRXML
-- On SEMICOLON reduce production xml_tree -> LXML SLASHRXML
-- On RPAREN reduce production xml_tree -> LXML SLASHRXML
-- On RETURNING reduce production xml_tree -> LXML SLASHRXML
-- On RBRACKET reduce production xml_tree -> LXML SLASHRXML
-- On RBRACE reduce production xml_tree -> LXML SLASHRXML
-- On RARROW reduce production xml_tree -> LXML SLASHRXML
-- On POSTFIXOP reduce production xml_tree -> LXML SLASHRXML
-- On MINUSDOT reduce production xml_tree -> LXML SLASHRXML
-- On MINUS reduce production xml_tree -> LXML SLASHRXML
-- On LXML reduce production xml_tree -> LXML SLASHRXML
-- On LPAREN reduce production xml_tree -> LXML SLASHRXML
-- On LBRACEBAR reduce production xml_tree -> LXML SLASHRXML
-- On LBRACE reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR9 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR8 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR7 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR6 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR5 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR4 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR3 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR2 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR1 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXR0 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL9 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL8 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL7 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL6 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL5 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL4 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL3 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL2 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL1 reduce production xml_tree -> LXML SLASHRXML
-- On INFIXL0 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX9 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX8 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX7 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX6 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX5 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX4 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX3 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX2 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX1 reduce production xml_tree -> LXML SLASHRXML
-- On INFIX0 reduce production xml_tree -> LXML SLASHRXML
-- On FATRARROW reduce production xml_tree -> LXML SLASHRXML
-- On EQUALSTILDE reduce production xml_tree -> LXML SLASHRXML
-- On ENDTAG reduce production xml_tree -> LXML SLASHRXML
-- On END reduce production xml_tree -> LXML SLASHRXML
-- On ELSE reduce production xml_tree -> LXML SLASHRXML
-- On DOTDOT reduce production xml_tree -> LXML SLASHRXML
-- On DOT reduce production xml_tree -> LXML SLASHRXML
-- On COMMA reduce production xml_tree -> LXML SLASHRXML
-- On COLONCOLON reduce production xml_tree -> LXML SLASHRXML
-- On COLON reduce production xml_tree -> LXML SLASHRXML
-- On CDATA reduce production xml_tree -> LXML SLASHRXML
-- On CASE reduce production xml_tree -> LXML SLASHRXML
-- On BARRBRACE reduce production xml_tree -> LXML SLASHRXML
-- On BARBAR reduce production xml_tree -> LXML SLASHRXML
-- On AMPAMP reduce production xml_tree -> LXML SLASHRXML

State 306:
xml_tree -> LXML RXML . ENDTAG [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
xml_tree -> LXML RXML . xml_contents_list ENDTAG [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
-- On LXML shift to state 303
-- On LBRACEBAR shift to state 307
-- On LBRACE shift to state 628
-- On ENDTAG shift to state 655
-- On CDATA shift to state 656
-- On xml_tree shift to state 657
-- On xml_contents_list shift to state 658
-- On xml_contents shift to state 660
-- On page_placement shift to state 662
-- On formlet_placement shift to state 663
-- On formlet_binding shift to state 664
-- On block shift to state 665

State 307:
page_placement -> LBRACEBAR . exp BARRBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 626
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 308:
formlet_expression -> PAGE . xml [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On LXML shift to state 303
-- On xml_tree shift to state 309
-- On xml shift to state 310

State 309:
xml -> xml_tree . [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On YIELDS reduce production xml -> xml_tree
-- On WITH reduce production xml -> xml_tree
-- On VBAR reduce production xml -> xml_tree
-- On VALUES reduce production xml -> xml_tree
-- On SEMICOLON reduce production xml -> xml_tree
-- On RPAREN reduce production xml -> xml_tree
-- On RETURNING reduce production xml -> xml_tree
-- On RBRACKET reduce production xml -> xml_tree
-- On RBRACE reduce production xml -> xml_tree
-- On RARROW reduce production xml -> xml_tree
-- On POSTFIXOP reduce production xml -> xml_tree
-- On MINUSDOT reduce production xml -> xml_tree
-- On MINUS reduce production xml -> xml_tree
-- On LPAREN reduce production xml -> xml_tree
-- On INFIXR9 reduce production xml -> xml_tree
-- On INFIXR8 reduce production xml -> xml_tree
-- On INFIXR7 reduce production xml -> xml_tree
-- On INFIXR6 reduce production xml -> xml_tree
-- On INFIXR5 reduce production xml -> xml_tree
-- On INFIXR4 reduce production xml -> xml_tree
-- On INFIXR3 reduce production xml -> xml_tree
-- On INFIXR2 reduce production xml -> xml_tree
-- On INFIXR1 reduce production xml -> xml_tree
-- On INFIXR0 reduce production xml -> xml_tree
-- On INFIXL9 reduce production xml -> xml_tree
-- On INFIXL8 reduce production xml -> xml_tree
-- On INFIXL7 reduce production xml -> xml_tree
-- On INFIXL6 reduce production xml -> xml_tree
-- On INFIXL5 reduce production xml -> xml_tree
-- On INFIXL4 reduce production xml -> xml_tree
-- On INFIXL3 reduce production xml -> xml_tree
-- On INFIXL2 reduce production xml -> xml_tree
-- On INFIXL1 reduce production xml -> xml_tree
-- On INFIXL0 reduce production xml -> xml_tree
-- On INFIX9 reduce production xml -> xml_tree
-- On INFIX8 reduce production xml -> xml_tree
-- On INFIX7 reduce production xml -> xml_tree
-- On INFIX6 reduce production xml -> xml_tree
-- On INFIX5 reduce production xml -> xml_tree
-- On INFIX4 reduce production xml -> xml_tree
-- On INFIX3 reduce production xml -> xml_tree
-- On INFIX2 reduce production xml -> xml_tree
-- On INFIX1 reduce production xml -> xml_tree
-- On INFIX0 reduce production xml -> xml_tree
-- On FATRARROW reduce production xml -> xml_tree
-- On EQUALSTILDE reduce production xml -> xml_tree
-- On END reduce production xml -> xml_tree
-- On ELSE reduce production xml -> xml_tree
-- On DOTDOT reduce production xml -> xml_tree
-- On DOT reduce production xml -> xml_tree
-- On COMMA reduce production xml -> xml_tree
-- On COLONCOLON reduce production xml -> xml_tree
-- On COLON reduce production xml -> xml_tree
-- On CASE reduce production xml -> xml_tree
-- On BARRBRACE reduce production xml -> xml_tree
-- On BARBAR reduce production xml -> xml_tree
-- On AMPAMP reduce production xml -> xml_tree

State 310:
formlet_expression -> PAGE xml . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production formlet_expression -> PAGE xml
-- On VBAR reduce production formlet_expression -> PAGE xml
-- On VALUES reduce production formlet_expression -> PAGE xml
-- On SEMICOLON reduce production formlet_expression -> PAGE xml
-- On RPAREN reduce production formlet_expression -> PAGE xml
-- On RBRACKET reduce production formlet_expression -> PAGE xml
-- On RBRACE reduce production formlet_expression -> PAGE xml
-- On END reduce production formlet_expression -> PAGE xml
-- On ELSE reduce production formlet_expression -> PAGE xml
-- On DOTDOT reduce production formlet_expression -> PAGE xml
-- On COMMA reduce production formlet_expression -> PAGE xml
-- On CASE reduce production formlet_expression -> PAGE xml
-- On BARRBRACE reduce production formlet_expression -> PAGE xml

State 311:
parenthesized_thing -> LPAREN . binop RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
parenthesized_thing -> LPAREN . DOT record_label RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
parenthesized_thing -> LPAREN . RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
parenthesized_thing -> LPAREN . labeled_exps VBAR exp RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
parenthesized_thing -> LPAREN . labeled_exps RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
parenthesized_thing -> LPAREN . exps RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
parenthesized_thing -> LPAREN . exp WITH labeled_exps RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 312
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 33
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 34
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RPAREN shift to state 313
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 314
-- On MINUS shift to state 576
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On INFIXR9 shift to state 578
-- On INFIXR8 shift to state 579
-- On INFIXR7 shift to state 580
-- On INFIXR6 shift to state 581
-- On INFIXR5 shift to state 582
-- On INFIXR4 shift to state 583
-- On INFIXR3 shift to state 584
-- On INFIXR2 shift to state 585
-- On INFIXR1 shift to state 586
-- On INFIXR0 shift to state 587
-- On INFIXL9 shift to state 588
-- On INFIXL8 shift to state 589
-- On INFIXL7 shift to state 590
-- On INFIXL6 shift to state 591
-- On INFIXL5 shift to state 592
-- On INFIXL4 shift to state 593
-- On INFIXL3 shift to state 594
-- On INFIXL2 shift to state 595
-- On INFIXL1 shift to state 596
-- On INFIXL0 shift to state 597
-- On INFIX9 shift to state 598
-- On INFIX8 shift to state 599
-- On INFIX7 shift to state 600
-- On INFIX6 shift to state 601
-- On INFIX5 shift to state 602
-- On INFIX4 shift to state 603
-- On INFIX3 shift to state 604
-- On INFIX2 shift to state 605
-- On INFIX1 shift to state 606
-- On INFIX0 shift to state 607
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DOT shift to state 608
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 611
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On record_label shift to state 559
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On op shift to state 612
-- On logical_expression shift to state 384
-- On labeled_exps shift to state 613
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On field_label shift to state 224
-- On exps shift to state 618
-- On exp shift to state 620
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On binop shift to state 624
-- On atomic_expression shift to state 375

State 312:
atomic_expression -> VARIABLE . [ WITH RPAREN POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE DOT COMMA COLONCOLON COLON BARBAR AMPAMP ]
field_label -> VARIABLE . [ EQ ]
-- On WITH reduce production atomic_expression -> VARIABLE
-- On RPAREN reduce production atomic_expression -> VARIABLE
-- On POSTFIXOP reduce production atomic_expression -> VARIABLE
-- On MINUSDOT reduce production atomic_expression -> VARIABLE
-- On MINUS reduce production atomic_expression -> VARIABLE
-- On LPAREN reduce production atomic_expression -> VARIABLE
-- On INFIXR9 reduce production atomic_expression -> VARIABLE
-- On INFIXR8 reduce production atomic_expression -> VARIABLE
-- On INFIXR7 reduce production atomic_expression -> VARIABLE
-- On INFIXR6 reduce production atomic_expression -> VARIABLE
-- On INFIXR5 reduce production atomic_expression -> VARIABLE
-- On INFIXR4 reduce production atomic_expression -> VARIABLE
-- On INFIXR3 reduce production atomic_expression -> VARIABLE
-- On INFIXR2 reduce production atomic_expression -> VARIABLE
-- On INFIXR1 reduce production atomic_expression -> VARIABLE
-- On INFIXR0 reduce production atomic_expression -> VARIABLE
-- On INFIXL9 reduce production atomic_expression -> VARIABLE
-- On INFIXL8 reduce production atomic_expression -> VARIABLE
-- On INFIXL7 reduce production atomic_expression -> VARIABLE
-- On INFIXL6 reduce production atomic_expression -> VARIABLE
-- On INFIXL5 reduce production atomic_expression -> VARIABLE
-- On INFIXL4 reduce production atomic_expression -> VARIABLE
-- On INFIXL3 reduce production atomic_expression -> VARIABLE
-- On INFIXL2 reduce production atomic_expression -> VARIABLE
-- On INFIXL1 reduce production atomic_expression -> VARIABLE
-- On INFIXL0 reduce production atomic_expression -> VARIABLE
-- On INFIX9 reduce production atomic_expression -> VARIABLE
-- On INFIX8 reduce production atomic_expression -> VARIABLE
-- On INFIX7 reduce production atomic_expression -> VARIABLE
-- On INFIX6 reduce production atomic_expression -> VARIABLE
-- On INFIX5 reduce production atomic_expression -> VARIABLE
-- On INFIX4 reduce production atomic_expression -> VARIABLE
-- On INFIX3 reduce production atomic_expression -> VARIABLE
-- On INFIX2 reduce production atomic_expression -> VARIABLE
-- On INFIX1 reduce production atomic_expression -> VARIABLE
-- On INFIX0 reduce production atomic_expression -> VARIABLE
-- On EQUALSTILDE reduce production atomic_expression -> VARIABLE
-- On EQ reduce production field_label -> VARIABLE
-- On DOT reduce production atomic_expression -> VARIABLE
-- On COMMA reduce production atomic_expression -> VARIABLE
-- On COLONCOLON reduce production atomic_expression -> VARIABLE
-- On COLON reduce production atomic_expression -> VARIABLE
-- On BARBAR reduce production atomic_expression -> VARIABLE
-- On AMPAMP reduce production atomic_expression -> VARIABLE

State 313:
parenthesized_thing -> LPAREN RPAREN . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production parenthesized_thing -> LPAREN RPAREN
-- On VBAR reduce production parenthesized_thing -> LPAREN RPAREN
-- On VARIABLE reduce production parenthesized_thing -> LPAREN RPAREN
-- On VALUES reduce production parenthesized_thing -> LPAREN RPAREN
-- On UINTEGER reduce production parenthesized_thing -> LPAREN RPAREN
-- On UFLOAT reduce production parenthesized_thing -> LPAREN RPAREN
-- On TRUE reduce production parenthesized_thing -> LPAREN RPAREN
-- On STRING reduce production parenthesized_thing -> LPAREN RPAREN
-- On SEMICOLON reduce production parenthesized_thing -> LPAREN RPAREN
-- On RPAREN reduce production parenthesized_thing -> LPAREN RPAREN
-- On RETURNING reduce production parenthesized_thing -> LPAREN RPAREN
-- On RBRACKET reduce production parenthesized_thing -> LPAREN RPAREN
-- On RBRACE reduce production parenthesized_thing -> LPAREN RPAREN
-- On RARROW reduce production parenthesized_thing -> LPAREN RPAREN
-- On POSTFIXOP reduce production parenthesized_thing -> LPAREN RPAREN
-- On MINUSDOT reduce production parenthesized_thing -> LPAREN RPAREN
-- On MINUS reduce production parenthesized_thing -> LPAREN RPAREN
-- On LPAREN reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR9 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR8 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR7 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR6 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR5 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR4 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR3 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR2 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR1 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXR0 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL9 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL8 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL7 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL6 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL5 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL4 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL3 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL2 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL1 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIXL0 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX9 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX8 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX7 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX6 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX5 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX4 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX3 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX2 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX1 reduce production parenthesized_thing -> LPAREN RPAREN
-- On INFIX0 reduce production parenthesized_thing -> LPAREN RPAREN
-- On FATRARROW reduce production parenthesized_thing -> LPAREN RPAREN
-- On FALSE reduce production parenthesized_thing -> LPAREN RPAREN
-- On EQUALSTILDE reduce production parenthesized_thing -> LPAREN RPAREN
-- On END reduce production parenthesized_thing -> LPAREN RPAREN
-- On ELSE reduce production parenthesized_thing -> LPAREN RPAREN
-- On DOTDOT reduce production parenthesized_thing -> LPAREN RPAREN
-- On DOT reduce production parenthesized_thing -> LPAREN RPAREN
-- On COMMA reduce production parenthesized_thing -> LPAREN RPAREN
-- On COLONCOLON reduce production parenthesized_thing -> LPAREN RPAREN
-- On COLON reduce production parenthesized_thing -> LPAREN RPAREN
-- On CHAR reduce production parenthesized_thing -> LPAREN RPAREN
-- On CASE reduce production parenthesized_thing -> LPAREN RPAREN
-- On BARRBRACE reduce production parenthesized_thing -> LPAREN RPAREN
-- On BARBAR reduce production parenthesized_thing -> LPAREN RPAREN
-- On AMPAMP reduce production parenthesized_thing -> LPAREN RPAREN

State 314:
binop -> MINUSDOT . [ RPAREN ]
unary_expression -> MINUSDOT . unary_expression [ WITH RPAREN MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE COMMA COLONCOLON COLON BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 575
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375
-- On RPAREN reduce production binop -> MINUSDOT

State 315:
primary_expression -> LBRACKET . RBRACKET [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
primary_expression -> LBRACKET . exps RBRACKET [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
primary_expression -> LBRACKET . exp DOTDOT exp RBRACKET [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On RBRACKET shift to state 316
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exps shift to state 569
-- On exp shift to state 571
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 316:
primary_expression -> LBRACKET RBRACKET . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production primary_expression -> LBRACKET RBRACKET
-- On VBAR reduce production primary_expression -> LBRACKET RBRACKET
-- On VALUES reduce production primary_expression -> LBRACKET RBRACKET
-- On SEMICOLON reduce production primary_expression -> LBRACKET RBRACKET
-- On RPAREN reduce production primary_expression -> LBRACKET RBRACKET
-- On RETURNING reduce production primary_expression -> LBRACKET RBRACKET
-- On RBRACKET reduce production primary_expression -> LBRACKET RBRACKET
-- On RBRACE reduce production primary_expression -> LBRACKET RBRACKET
-- On RARROW reduce production primary_expression -> LBRACKET RBRACKET
-- On POSTFIXOP reduce production primary_expression -> LBRACKET RBRACKET
-- On MINUSDOT reduce production primary_expression -> LBRACKET RBRACKET
-- On MINUS reduce production primary_expression -> LBRACKET RBRACKET
-- On LPAREN reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR9 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR8 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR7 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR6 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR5 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR4 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR3 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR2 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR1 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXR0 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL9 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL8 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL7 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL6 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL5 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL4 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL3 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL2 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL1 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIXL0 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX9 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX8 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX7 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX6 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX5 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX4 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX3 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX2 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX1 reduce production primary_expression -> LBRACKET RBRACKET
-- On INFIX0 reduce production primary_expression -> LBRACKET RBRACKET
-- On FATRARROW reduce production primary_expression -> LBRACKET RBRACKET
-- On EQUALSTILDE reduce production primary_expression -> LBRACKET RBRACKET
-- On END reduce production primary_expression -> LBRACKET RBRACKET
-- On ELSE reduce production primary_expression -> LBRACKET RBRACKET
-- On DOTDOT reduce production primary_expression -> LBRACKET RBRACKET
-- On DOT reduce production primary_expression -> LBRACKET RBRACKET
-- On COMMA reduce production primary_expression -> LBRACKET RBRACKET
-- On COLONCOLON reduce production primary_expression -> LBRACKET RBRACKET
-- On COLON reduce production primary_expression -> LBRACKET RBRACKET
-- On CASE reduce production primary_expression -> LBRACKET RBRACKET
-- On BARRBRACE reduce production primary_expression -> LBRACKET RBRACKET
-- On BARBAR reduce production primary_expression -> LBRACKET RBRACKET
-- On AMPAMP reduce production primary_expression -> LBRACKET RBRACKET

State 317:
database_expression -> INSERT . exp VALUES LPAREN RPAREN exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT . exp VALUES LPAREN record_labels RPAREN exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT . exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT . exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT . exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT . exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT . exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 536
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 318:
conditional_expression -> IF . LPAREN exp RPAREN exp ELSE exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On LPAREN shift to state 319

State 319:
conditional_expression -> IF LPAREN . exp RPAREN exp ELSE exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 531
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 320:
primary_expression -> FUN . arg_lists block [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On LPAREN shift to state 321
-- On multi_args shift to state 325
-- On arg_lists shift to state 327

State 321:
multi_args -> LPAREN . patterns RPAREN [ SERVER NATIVE LPAREN LBRACE CLIENT ]
multi_args -> LPAREN . RPAREN [ SERVER NATIVE LPAREN LBRACE CLIENT ]
-- On VARIABLE shift to state 17
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On RPAREN shift to state 322
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 39
-- On CHAR shift to state 41
-- On typed_pattern shift to state 42
-- On primary_pattern shift to state 239
-- On patterns shift to state 323
-- On pattern shift to state 242
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 251

State 322:
multi_args -> LPAREN RPAREN . [ SERVER NATIVE LPAREN LBRACE CLIENT ]
-- On SERVER reduce production multi_args -> LPAREN RPAREN
-- On NATIVE reduce production multi_args -> LPAREN RPAREN
-- On LPAREN reduce production multi_args -> LPAREN RPAREN
-- On LBRACE reduce production multi_args -> LPAREN RPAREN
-- On CLIENT reduce production multi_args -> LPAREN RPAREN

State 323:
multi_args -> LPAREN patterns . RPAREN [ SERVER NATIVE LPAREN LBRACE CLIENT ]
-- On RPAREN shift to state 324

State 324:
multi_args -> LPAREN patterns RPAREN . [ SERVER NATIVE LPAREN LBRACE CLIENT ]
-- On SERVER reduce production multi_args -> LPAREN patterns RPAREN
-- On NATIVE reduce production multi_args -> LPAREN patterns RPAREN
-- On LPAREN reduce production multi_args -> LPAREN patterns RPAREN
-- On LBRACE reduce production multi_args -> LPAREN patterns RPAREN
-- On CLIENT reduce production multi_args -> LPAREN patterns RPAREN

State 325:
arg_lists -> multi_args . [ SERVER NATIVE LBRACE CLIENT ]
arg_lists -> multi_args . arg_lists [ SERVER NATIVE LBRACE CLIENT ]
-- On LPAREN shift to state 321
-- On multi_args shift to state 325
-- On arg_lists shift to state 326
-- On SERVER reduce production arg_lists -> multi_args
-- On NATIVE reduce production arg_lists -> multi_args
-- On LBRACE reduce production arg_lists -> multi_args
-- On CLIENT reduce production arg_lists -> multi_args

State 326:
arg_lists -> multi_args arg_lists . [ SERVER NATIVE LBRACE CLIENT ]
-- On SERVER reduce production arg_lists -> multi_args arg_lists
-- On NATIVE reduce production arg_lists -> multi_args arg_lists
-- On LBRACE reduce production arg_lists -> multi_args arg_lists
-- On CLIENT reduce production arg_lists -> multi_args arg_lists

State 327:
primary_expression -> FUN arg_lists . block [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On LBRACE shift to state 278
-- On block shift to state 328

State 328:
primary_expression -> FUN arg_lists block . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production primary_expression -> FUN arg_lists block
-- On VBAR reduce production primary_expression -> FUN arg_lists block
-- On VALUES reduce production primary_expression -> FUN arg_lists block
-- On SEMICOLON reduce production primary_expression -> FUN arg_lists block
-- On RPAREN reduce production primary_expression -> FUN arg_lists block
-- On RETURNING reduce production primary_expression -> FUN arg_lists block
-- On RBRACKET reduce production primary_expression -> FUN arg_lists block
-- On RBRACE reduce production primary_expression -> FUN arg_lists block
-- On RARROW reduce production primary_expression -> FUN arg_lists block
-- On POSTFIXOP reduce production primary_expression -> FUN arg_lists block
-- On MINUSDOT reduce production primary_expression -> FUN arg_lists block
-- On MINUS reduce production primary_expression -> FUN arg_lists block
-- On LPAREN reduce production primary_expression -> FUN arg_lists block
-- On INFIXR9 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR8 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR7 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR6 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR5 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR4 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR3 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR2 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR1 reduce production primary_expression -> FUN arg_lists block
-- On INFIXR0 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL9 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL8 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL7 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL6 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL5 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL4 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL3 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL2 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL1 reduce production primary_expression -> FUN arg_lists block
-- On INFIXL0 reduce production primary_expression -> FUN arg_lists block
-- On INFIX9 reduce production primary_expression -> FUN arg_lists block
-- On INFIX8 reduce production primary_expression -> FUN arg_lists block
-- On INFIX7 reduce production primary_expression -> FUN arg_lists block
-- On INFIX6 reduce production primary_expression -> FUN arg_lists block
-- On INFIX5 reduce production primary_expression -> FUN arg_lists block
-- On INFIX4 reduce production primary_expression -> FUN arg_lists block
-- On INFIX3 reduce production primary_expression -> FUN arg_lists block
-- On INFIX2 reduce production primary_expression -> FUN arg_lists block
-- On INFIX1 reduce production primary_expression -> FUN arg_lists block
-- On INFIX0 reduce production primary_expression -> FUN arg_lists block
-- On FATRARROW reduce production primary_expression -> FUN arg_lists block
-- On EQUALSTILDE reduce production primary_expression -> FUN arg_lists block
-- On END reduce production primary_expression -> FUN arg_lists block
-- On ELSE reduce production primary_expression -> FUN arg_lists block
-- On DOTDOT reduce production primary_expression -> FUN arg_lists block
-- On DOT reduce production primary_expression -> FUN arg_lists block
-- On COMMA reduce production primary_expression -> FUN arg_lists block
-- On COLONCOLON reduce production primary_expression -> FUN arg_lists block
-- On COLON reduce production primary_expression -> FUN arg_lists block
-- On CASE reduce production primary_expression -> FUN arg_lists block
-- On BARRBRACE reduce production primary_expression -> FUN arg_lists block
-- On BARBAR reduce production primary_expression -> FUN arg_lists block
-- On AMPAMP reduce production primary_expression -> FUN arg_lists block

State 329:
formlet_expression -> FORMLET . xml YIELDS exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On LXML shift to state 303
-- On xml_tree shift to state 309
-- On xml shift to state 330

State 330:
formlet_expression -> FORMLET xml . YIELDS exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On YIELDS shift to state 331

State 331:
formlet_expression -> FORMLET xml YIELDS . exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 530
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 332:
iteration_expression -> FOR . LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On LPAREN shift to state 333

State 333:
iteration_expression -> FOR LPAREN . perhaps_generators RPAREN perhaps_where perhaps_orderby exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 17
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 39
-- On CHAR shift to state 41
-- On typed_pattern shift to state 42
-- On table_generator shift to state 334
-- On primary_pattern shift to state 239
-- On perhaps_generators shift to state 335
-- On pattern shift to state 522
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On list_generator shift to state 525
-- On generators shift to state 526
-- On generator shift to state 527
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 251
-- On RPAREN reduce production perhaps_generators -> 

State 334:
generator -> table_generator . [ RPAREN COMMA ]
-- On RPAREN reduce production generator -> table_generator
-- On COMMA reduce production generator -> table_generator

State 335:
iteration_expression -> FOR LPAREN perhaps_generators . RPAREN perhaps_where perhaps_orderby exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On RPAREN shift to state 336

State 336:
iteration_expression -> FOR LPAREN perhaps_generators RPAREN . perhaps_where perhaps_orderby exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WHERE shift to state 272
-- On perhaps_where shift to state 337
-- On VARIABLE reduce production perhaps_where -> 
-- On UPDATE reduce production perhaps_where -> 
-- On UINTEGER reduce production perhaps_where -> 
-- On UFLOAT reduce production perhaps_where -> 
-- On TRUE reduce production perhaps_where -> 
-- On TABLE reduce production perhaps_where -> 
-- On SWITCH reduce production perhaps_where -> 
-- On STRING reduce production perhaps_where -> 
-- On SPAWNWAIT reduce production perhaps_where -> 
-- On SPAWN reduce production perhaps_where -> 
-- On RECEIVE reduce production perhaps_where -> 
-- On QUERY reduce production perhaps_where -> 
-- On PREFIXOP reduce production perhaps_where -> 
-- On PAGE reduce production perhaps_where -> 
-- On ORDERBY reduce production perhaps_where -> 
-- On MINUSDOT reduce production perhaps_where -> 
-- On MINUS reduce production perhaps_where -> 
-- On LXML reduce production perhaps_where -> 
-- On LPAREN reduce production perhaps_where -> 
-- On LBRACKET reduce production perhaps_where -> 
-- On LBRACE reduce production perhaps_where -> 
-- On INSERT reduce production perhaps_where -> 
-- On IF reduce production perhaps_where -> 
-- On FUN reduce production perhaps_where -> 
-- On FORMLET reduce production perhaps_where -> 
-- On FOR reduce production perhaps_where -> 
-- On FALSE reduce production perhaps_where -> 
-- On ESCAPE reduce production perhaps_where -> 
-- On DELETE reduce production perhaps_where -> 
-- On DATABASE reduce production perhaps_where -> 
-- On CONSTRUCTOR reduce production perhaps_where -> 
-- On CHAR reduce production perhaps_where -> 

State 337:
iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where . perhaps_orderby exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On ORDERBY shift to state 338
-- On perhaps_orderby shift to state 520
-- On VARIABLE reduce production perhaps_orderby -> 
-- On UPDATE reduce production perhaps_orderby -> 
-- On UINTEGER reduce production perhaps_orderby -> 
-- On UFLOAT reduce production perhaps_orderby -> 
-- On TRUE reduce production perhaps_orderby -> 
-- On TABLE reduce production perhaps_orderby -> 
-- On SWITCH reduce production perhaps_orderby -> 
-- On STRING reduce production perhaps_orderby -> 
-- On SPAWNWAIT reduce production perhaps_orderby -> 
-- On SPAWN reduce production perhaps_orderby -> 
-- On RECEIVE reduce production perhaps_orderby -> 
-- On QUERY reduce production perhaps_orderby -> 
-- On PREFIXOP reduce production perhaps_orderby -> 
-- On PAGE reduce production perhaps_orderby -> 
-- On MINUSDOT reduce production perhaps_orderby -> 
-- On MINUS reduce production perhaps_orderby -> 
-- On LXML reduce production perhaps_orderby -> 
-- On LPAREN reduce production perhaps_orderby -> 
-- On LBRACKET reduce production perhaps_orderby -> 
-- On LBRACE reduce production perhaps_orderby -> 
-- On INSERT reduce production perhaps_orderby -> 
-- On IF reduce production perhaps_orderby -> 
-- On FUN reduce production perhaps_orderby -> 
-- On FORMLET reduce production perhaps_orderby -> 
-- On FOR reduce production perhaps_orderby -> 
-- On FALSE reduce production perhaps_orderby -> 
-- On ESCAPE reduce production perhaps_orderby -> 
-- On DELETE reduce production perhaps_orderby -> 
-- On DATABASE reduce production perhaps_orderby -> 
-- On CONSTRUCTOR reduce production perhaps_orderby -> 
-- On CHAR reduce production perhaps_orderby -> 

State 338:
perhaps_orderby -> ORDERBY . LPAREN exps RPAREN [ VARIABLE UPDATE UINTEGER UFLOAT TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
-- On LPAREN shift to state 339

State 339:
perhaps_orderby -> ORDERBY LPAREN . exps RPAREN [ VARIABLE UPDATE UINTEGER UFLOAT TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exps shift to state 518
-- On exp shift to state 515
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 340:
escape_expression -> ESCAPE . var IN postfix_expression [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 8
-- On var shift to state 341

State 341:
escape_expression -> ESCAPE var . IN postfix_expression [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On IN shift to state 342

State 342:
escape_expression -> ESCAPE var IN . postfix_expression [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 346
-- On parenthesized_thing shift to state 357
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 343:
primary_expression -> xml . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production primary_expression -> xml
-- On VBAR reduce production primary_expression -> xml
-- On VALUES reduce production primary_expression -> xml
-- On SEMICOLON reduce production primary_expression -> xml
-- On RPAREN reduce production primary_expression -> xml
-- On RETURNING reduce production primary_expression -> xml
-- On RBRACKET reduce production primary_expression -> xml
-- On RBRACE reduce production primary_expression -> xml
-- On RARROW reduce production primary_expression -> xml
-- On POSTFIXOP reduce production primary_expression -> xml
-- On MINUSDOT reduce production primary_expression -> xml
-- On MINUS reduce production primary_expression -> xml
-- On LPAREN reduce production primary_expression -> xml
-- On INFIXR9 reduce production primary_expression -> xml
-- On INFIXR8 reduce production primary_expression -> xml
-- On INFIXR7 reduce production primary_expression -> xml
-- On INFIXR6 reduce production primary_expression -> xml
-- On INFIXR5 reduce production primary_expression -> xml
-- On INFIXR4 reduce production primary_expression -> xml
-- On INFIXR3 reduce production primary_expression -> xml
-- On INFIXR2 reduce production primary_expression -> xml
-- On INFIXR1 reduce production primary_expression -> xml
-- On INFIXR0 reduce production primary_expression -> xml
-- On INFIXL9 reduce production primary_expression -> xml
-- On INFIXL8 reduce production primary_expression -> xml
-- On INFIXL7 reduce production primary_expression -> xml
-- On INFIXL6 reduce production primary_expression -> xml
-- On INFIXL5 reduce production primary_expression -> xml
-- On INFIXL4 reduce production primary_expression -> xml
-- On INFIXL3 reduce production primary_expression -> xml
-- On INFIXL2 reduce production primary_expression -> xml
-- On INFIXL1 reduce production primary_expression -> xml
-- On INFIXL0 reduce production primary_expression -> xml
-- On INFIX9 reduce production primary_expression -> xml
-- On INFIX8 reduce production primary_expression -> xml
-- On INFIX7 reduce production primary_expression -> xml
-- On INFIX6 reduce production primary_expression -> xml
-- On INFIX5 reduce production primary_expression -> xml
-- On INFIX4 reduce production primary_expression -> xml
-- On INFIX3 reduce production primary_expression -> xml
-- On INFIX2 reduce production primary_expression -> xml
-- On INFIX1 reduce production primary_expression -> xml
-- On INFIX0 reduce production primary_expression -> xml
-- On FATRARROW reduce production primary_expression -> xml
-- On EQUALSTILDE reduce production primary_expression -> xml
-- On END reduce production primary_expression -> xml
-- On ELSE reduce production primary_expression -> xml
-- On DOTDOT reduce production primary_expression -> xml
-- On DOT reduce production primary_expression -> xml
-- On COMMA reduce production primary_expression -> xml
-- On COLONCOLON reduce production primary_expression -> xml
-- On COLON reduce production primary_expression -> xml
-- On CASE reduce production primary_expression -> xml
-- On BARRBRACE reduce production primary_expression -> xml
-- On BARBAR reduce production primary_expression -> xml
-- On AMPAMP reduce production primary_expression -> xml

State 344:
postfix_expression -> primary_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
postfix_expression -> primary_expression . POSTFIXOP [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On POSTFIXOP shift to state 345
-- On WITH reduce production postfix_expression -> primary_expression
-- On VBAR reduce production postfix_expression -> primary_expression
-- On VALUES reduce production postfix_expression -> primary_expression
-- On SEMICOLON reduce production postfix_expression -> primary_expression
-- On RPAREN reduce production postfix_expression -> primary_expression
-- On RETURNING reduce production postfix_expression -> primary_expression
-- On RBRACKET reduce production postfix_expression -> primary_expression
-- On RBRACE reduce production postfix_expression -> primary_expression
-- On RARROW reduce production postfix_expression -> primary_expression
-- On MINUSDOT reduce production postfix_expression -> primary_expression
-- On MINUS reduce production postfix_expression -> primary_expression
-- On LPAREN reduce production postfix_expression -> primary_expression
-- On INFIXR9 reduce production postfix_expression -> primary_expression
-- On INFIXR8 reduce production postfix_expression -> primary_expression
-- On INFIXR7 reduce production postfix_expression -> primary_expression
-- On INFIXR6 reduce production postfix_expression -> primary_expression
-- On INFIXR5 reduce production postfix_expression -> primary_expression
-- On INFIXR4 reduce production postfix_expression -> primary_expression
-- On INFIXR3 reduce production postfix_expression -> primary_expression
-- On INFIXR2 reduce production postfix_expression -> primary_expression
-- On INFIXR1 reduce production postfix_expression -> primary_expression
-- On INFIXR0 reduce production postfix_expression -> primary_expression
-- On INFIXL9 reduce production postfix_expression -> primary_expression
-- On INFIXL8 reduce production postfix_expression -> primary_expression
-- On INFIXL7 reduce production postfix_expression -> primary_expression
-- On INFIXL6 reduce production postfix_expression -> primary_expression
-- On INFIXL5 reduce production postfix_expression -> primary_expression
-- On INFIXL4 reduce production postfix_expression -> primary_expression
-- On INFIXL3 reduce production postfix_expression -> primary_expression
-- On INFIXL2 reduce production postfix_expression -> primary_expression
-- On INFIXL1 reduce production postfix_expression -> primary_expression
-- On INFIXL0 reduce production postfix_expression -> primary_expression
-- On INFIX9 reduce production postfix_expression -> primary_expression
-- On INFIX8 reduce production postfix_expression -> primary_expression
-- On INFIX7 reduce production postfix_expression -> primary_expression
-- On INFIX6 reduce production postfix_expression -> primary_expression
-- On INFIX5 reduce production postfix_expression -> primary_expression
-- On INFIX4 reduce production postfix_expression -> primary_expression
-- On INFIX3 reduce production postfix_expression -> primary_expression
-- On INFIX2 reduce production postfix_expression -> primary_expression
-- On INFIX1 reduce production postfix_expression -> primary_expression
-- On INFIX0 reduce production postfix_expression -> primary_expression
-- On FATRARROW reduce production postfix_expression -> primary_expression
-- On EQUALSTILDE reduce production postfix_expression -> primary_expression
-- On END reduce production postfix_expression -> primary_expression
-- On ELSE reduce production postfix_expression -> primary_expression
-- On DOTDOT reduce production postfix_expression -> primary_expression
-- On DOT reduce production postfix_expression -> primary_expression
-- On COMMA reduce production postfix_expression -> primary_expression
-- On COLONCOLON reduce production postfix_expression -> primary_expression
-- On COLON reduce production postfix_expression -> primary_expression
-- On CASE reduce production postfix_expression -> primary_expression
-- On BARRBRACE reduce production postfix_expression -> primary_expression
-- On BARBAR reduce production postfix_expression -> primary_expression
-- On AMPAMP reduce production postfix_expression -> primary_expression

State 345:
postfix_expression -> primary_expression POSTFIXOP . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production postfix_expression -> primary_expression POSTFIXOP
-- On VBAR reduce production postfix_expression -> primary_expression POSTFIXOP
-- On VALUES reduce production postfix_expression -> primary_expression POSTFIXOP
-- On SEMICOLON reduce production postfix_expression -> primary_expression POSTFIXOP
-- On RPAREN reduce production postfix_expression -> primary_expression POSTFIXOP
-- On RETURNING reduce production postfix_expression -> primary_expression POSTFIXOP
-- On RBRACKET reduce production postfix_expression -> primary_expression POSTFIXOP
-- On RBRACE reduce production postfix_expression -> primary_expression POSTFIXOP
-- On RARROW reduce production postfix_expression -> primary_expression POSTFIXOP
-- On MINUSDOT reduce production postfix_expression -> primary_expression POSTFIXOP
-- On MINUS reduce production postfix_expression -> primary_expression POSTFIXOP
-- On LPAREN reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR9 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR8 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR7 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR6 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR5 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR4 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR3 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR2 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR1 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXR0 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL9 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL8 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL7 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL6 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL5 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL4 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL3 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL2 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL1 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIXL0 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX9 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX8 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX7 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX6 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX5 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX4 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX3 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX2 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX1 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On INFIX0 reduce production postfix_expression -> primary_expression POSTFIXOP
-- On FATRARROW reduce production postfix_expression -> primary_expression POSTFIXOP
-- On EQUALSTILDE reduce production postfix_expression -> primary_expression POSTFIXOP
-- On END reduce production postfix_expression -> primary_expression POSTFIXOP
-- On ELSE reduce production postfix_expression -> primary_expression POSTFIXOP
-- On DOTDOT reduce production postfix_expression -> primary_expression POSTFIXOP
-- On DOT reduce production postfix_expression -> primary_expression POSTFIXOP
-- On COMMA reduce production postfix_expression -> primary_expression POSTFIXOP
-- On COLONCOLON reduce production postfix_expression -> primary_expression POSTFIXOP
-- On COLON reduce production postfix_expression -> primary_expression POSTFIXOP
-- On CASE reduce production postfix_expression -> primary_expression POSTFIXOP
-- On BARRBRACE reduce production postfix_expression -> primary_expression POSTFIXOP
-- On BARBAR reduce production postfix_expression -> primary_expression POSTFIXOP
-- On AMPAMP reduce production postfix_expression -> primary_expression POSTFIXOP

State 346:
escape_expression -> ESCAPE var IN postfix_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
postfix_expression -> postfix_expression . arg_spec [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE LPAREN END ELSE DOTDOT DOT COMMA CASE BARRBRACE ]
postfix_expression -> postfix_expression . DOT record_label [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE LPAREN END ELSE DOTDOT DOT COMMA CASE BARRBRACE ]
-- On LPAREN shift to state 347
-- On DOT shift to state 369
-- On arg_spec shift to state 371
-- On WITH reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On VBAR reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On VALUES reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On SEMICOLON reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On RPAREN reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On RBRACKET reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On RBRACE reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On END reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On ELSE reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On DOTDOT reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On COMMA reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On CASE reduce production escape_expression -> ESCAPE var IN postfix_expression
-- On BARRBRACE reduce production escape_expression -> ESCAPE var IN postfix_expression

State 347:
arg_spec -> LPAREN . RPAREN [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
arg_spec -> LPAREN . exps RPAREN [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RPAREN shift to state 348
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exps shift to state 513
-- On exp shift to state 515
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 348:
arg_spec -> LPAREN RPAREN . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production arg_spec -> LPAREN RPAREN
-- On VBAR reduce production arg_spec -> LPAREN RPAREN
-- On VALUES reduce production arg_spec -> LPAREN RPAREN
-- On SEMICOLON reduce production arg_spec -> LPAREN RPAREN
-- On RPAREN reduce production arg_spec -> LPAREN RPAREN
-- On RETURNING reduce production arg_spec -> LPAREN RPAREN
-- On RBRACKET reduce production arg_spec -> LPAREN RPAREN
-- On RBRACE reduce production arg_spec -> LPAREN RPAREN
-- On RARROW reduce production arg_spec -> LPAREN RPAREN
-- On MINUSDOT reduce production arg_spec -> LPAREN RPAREN
-- On MINUS reduce production arg_spec -> LPAREN RPAREN
-- On LPAREN reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR9 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR8 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR7 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR6 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR5 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR4 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR3 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR2 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR1 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXR0 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL9 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL8 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL7 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL6 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL5 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL4 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL3 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL2 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL1 reduce production arg_spec -> LPAREN RPAREN
-- On INFIXL0 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX9 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX8 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX7 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX6 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX5 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX4 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX3 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX2 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX1 reduce production arg_spec -> LPAREN RPAREN
-- On INFIX0 reduce production arg_spec -> LPAREN RPAREN
-- On FATRARROW reduce production arg_spec -> LPAREN RPAREN
-- On EQUALSTILDE reduce production arg_spec -> LPAREN RPAREN
-- On END reduce production arg_spec -> LPAREN RPAREN
-- On ELSE reduce production arg_spec -> LPAREN RPAREN
-- On DOTDOT reduce production arg_spec -> LPAREN RPAREN
-- On DOT reduce production arg_spec -> LPAREN RPAREN
-- On COMMA reduce production arg_spec -> LPAREN RPAREN
-- On COLONCOLON reduce production arg_spec -> LPAREN RPAREN
-- On COLON reduce production arg_spec -> LPAREN RPAREN
-- On CASE reduce production arg_spec -> LPAREN RPAREN
-- On BARRBRACE reduce production arg_spec -> LPAREN RPAREN
-- On BARBAR reduce production arg_spec -> LPAREN RPAREN
-- On AMPAMP reduce production arg_spec -> LPAREN RPAREN

State 349:
db_expression -> DELETE . LPAREN table_generator RPAREN perhaps_where [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On LPAREN shift to state 350

State 350:
db_expression -> DELETE LPAREN . table_generator RPAREN perhaps_where [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 17
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 39
-- On CHAR shift to state 41
-- On typed_pattern shift to state 42
-- On table_generator shift to state 351
-- On primary_pattern shift to state 239
-- On pattern shift to state 354
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 251

State 351:
db_expression -> DELETE LPAREN table_generator . RPAREN perhaps_where [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On RPAREN shift to state 352

State 352:
db_expression -> DELETE LPAREN table_generator RPAREN . perhaps_where [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WHERE shift to state 272
-- On perhaps_where shift to state 353
-- On WITH reduce production perhaps_where -> 
-- On VBAR reduce production perhaps_where -> 
-- On VALUES reduce production perhaps_where -> 
-- On SEMICOLON reduce production perhaps_where -> 
-- On RPAREN reduce production perhaps_where -> 
-- On RETURNING reduce production perhaps_where -> 
-- On RBRACKET reduce production perhaps_where -> 
-- On RBRACE reduce production perhaps_where -> 
-- On END reduce production perhaps_where -> 
-- On ELSE reduce production perhaps_where -> 
-- On DOTDOT reduce production perhaps_where -> 
-- On COMMA reduce production perhaps_where -> 
-- On CASE reduce production perhaps_where -> 
-- On BARRBRACE reduce production perhaps_where -> 

State 353:
db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On VBAR reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On VALUES reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On SEMICOLON reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On RPAREN reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On RETURNING reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On RBRACKET reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On RBRACE reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On END reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On ELSE reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On DOTDOT reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On COMMA reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On CASE reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where
-- On BARRBRACE reduce production db_expression -> DELETE LPAREN table_generator RPAREN perhaps_where

State 354:
table_generator -> pattern . LLARROW exp [ RPAREN ]
-- On LLARROW shift to state 355

State 355:
table_generator -> pattern LLARROW . exp [ RPAREN COMMA ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 507
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 356:
database_expression -> DATABASE . atomic_expression perhaps_db_driver [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On LPAREN shift to state 311
-- On FALSE shift to state 38
-- On CHAR shift to state 41
-- On parenthesized_thing shift to state 357
-- On constant shift to state 358
-- On atomic_expression shift to state 359

State 357:
atomic_expression -> parenthesized_thing . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production atomic_expression -> parenthesized_thing
-- On VBAR reduce production atomic_expression -> parenthesized_thing
-- On VARIABLE reduce production atomic_expression -> parenthesized_thing
-- On VALUES reduce production atomic_expression -> parenthesized_thing
-- On UINTEGER reduce production atomic_expression -> parenthesized_thing
-- On UFLOAT reduce production atomic_expression -> parenthesized_thing
-- On TRUE reduce production atomic_expression -> parenthesized_thing
-- On STRING reduce production atomic_expression -> parenthesized_thing
-- On SEMICOLON reduce production atomic_expression -> parenthesized_thing
-- On RPAREN reduce production atomic_expression -> parenthesized_thing
-- On RETURNING reduce production atomic_expression -> parenthesized_thing
-- On RBRACKET reduce production atomic_expression -> parenthesized_thing
-- On RBRACE reduce production atomic_expression -> parenthesized_thing
-- On RARROW reduce production atomic_expression -> parenthesized_thing
-- On POSTFIXOP reduce production atomic_expression -> parenthesized_thing
-- On MINUSDOT reduce production atomic_expression -> parenthesized_thing
-- On MINUS reduce production atomic_expression -> parenthesized_thing
-- On LPAREN reduce production atomic_expression -> parenthesized_thing
-- On INFIXR9 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR8 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR7 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR6 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR5 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR4 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR3 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR2 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR1 reduce production atomic_expression -> parenthesized_thing
-- On INFIXR0 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL9 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL8 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL7 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL6 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL5 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL4 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL3 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL2 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL1 reduce production atomic_expression -> parenthesized_thing
-- On INFIXL0 reduce production atomic_expression -> parenthesized_thing
-- On INFIX9 reduce production atomic_expression -> parenthesized_thing
-- On INFIX8 reduce production atomic_expression -> parenthesized_thing
-- On INFIX7 reduce production atomic_expression -> parenthesized_thing
-- On INFIX6 reduce production atomic_expression -> parenthesized_thing
-- On INFIX5 reduce production atomic_expression -> parenthesized_thing
-- On INFIX4 reduce production atomic_expression -> parenthesized_thing
-- On INFIX3 reduce production atomic_expression -> parenthesized_thing
-- On INFIX2 reduce production atomic_expression -> parenthesized_thing
-- On INFIX1 reduce production atomic_expression -> parenthesized_thing
-- On INFIX0 reduce production atomic_expression -> parenthesized_thing
-- On FATRARROW reduce production atomic_expression -> parenthesized_thing
-- On FALSE reduce production atomic_expression -> parenthesized_thing
-- On EQUALSTILDE reduce production atomic_expression -> parenthesized_thing
-- On END reduce production atomic_expression -> parenthesized_thing
-- On ELSE reduce production atomic_expression -> parenthesized_thing
-- On DOTDOT reduce production atomic_expression -> parenthesized_thing
-- On DOT reduce production atomic_expression -> parenthesized_thing
-- On COMMA reduce production atomic_expression -> parenthesized_thing
-- On COLONCOLON reduce production atomic_expression -> parenthesized_thing
-- On COLON reduce production atomic_expression -> parenthesized_thing
-- On CHAR reduce production atomic_expression -> parenthesized_thing
-- On CASE reduce production atomic_expression -> parenthesized_thing
-- On BARRBRACE reduce production atomic_expression -> parenthesized_thing
-- On BARBAR reduce production atomic_expression -> parenthesized_thing
-- On AMPAMP reduce production atomic_expression -> parenthesized_thing

State 358:
atomic_expression -> constant . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production atomic_expression -> constant
-- On VBAR reduce production atomic_expression -> constant
-- On VARIABLE reduce production atomic_expression -> constant
-- On VALUES reduce production atomic_expression -> constant
-- On UINTEGER reduce production atomic_expression -> constant
-- On UFLOAT reduce production atomic_expression -> constant
-- On TRUE reduce production atomic_expression -> constant
-- On STRING reduce production atomic_expression -> constant
-- On SEMICOLON reduce production atomic_expression -> constant
-- On RPAREN reduce production atomic_expression -> constant
-- On RETURNING reduce production atomic_expression -> constant
-- On RBRACKET reduce production atomic_expression -> constant
-- On RBRACE reduce production atomic_expression -> constant
-- On RARROW reduce production atomic_expression -> constant
-- On POSTFIXOP reduce production atomic_expression -> constant
-- On MINUSDOT reduce production atomic_expression -> constant
-- On MINUS reduce production atomic_expression -> constant
-- On LPAREN reduce production atomic_expression -> constant
-- On INFIXR9 reduce production atomic_expression -> constant
-- On INFIXR8 reduce production atomic_expression -> constant
-- On INFIXR7 reduce production atomic_expression -> constant
-- On INFIXR6 reduce production atomic_expression -> constant
-- On INFIXR5 reduce production atomic_expression -> constant
-- On INFIXR4 reduce production atomic_expression -> constant
-- On INFIXR3 reduce production atomic_expression -> constant
-- On INFIXR2 reduce production atomic_expression -> constant
-- On INFIXR1 reduce production atomic_expression -> constant
-- On INFIXR0 reduce production atomic_expression -> constant
-- On INFIXL9 reduce production atomic_expression -> constant
-- On INFIXL8 reduce production atomic_expression -> constant
-- On INFIXL7 reduce production atomic_expression -> constant
-- On INFIXL6 reduce production atomic_expression -> constant
-- On INFIXL5 reduce production atomic_expression -> constant
-- On INFIXL4 reduce production atomic_expression -> constant
-- On INFIXL3 reduce production atomic_expression -> constant
-- On INFIXL2 reduce production atomic_expression -> constant
-- On INFIXL1 reduce production atomic_expression -> constant
-- On INFIXL0 reduce production atomic_expression -> constant
-- On INFIX9 reduce production atomic_expression -> constant
-- On INFIX8 reduce production atomic_expression -> constant
-- On INFIX7 reduce production atomic_expression -> constant
-- On INFIX6 reduce production atomic_expression -> constant
-- On INFIX5 reduce production atomic_expression -> constant
-- On INFIX4 reduce production atomic_expression -> constant
-- On INFIX3 reduce production atomic_expression -> constant
-- On INFIX2 reduce production atomic_expression -> constant
-- On INFIX1 reduce production atomic_expression -> constant
-- On INFIX0 reduce production atomic_expression -> constant
-- On FATRARROW reduce production atomic_expression -> constant
-- On FALSE reduce production atomic_expression -> constant
-- On EQUALSTILDE reduce production atomic_expression -> constant
-- On END reduce production atomic_expression -> constant
-- On ELSE reduce production atomic_expression -> constant
-- On DOTDOT reduce production atomic_expression -> constant
-- On DOT reduce production atomic_expression -> constant
-- On COMMA reduce production atomic_expression -> constant
-- On COLONCOLON reduce production atomic_expression -> constant
-- On COLON reduce production atomic_expression -> constant
-- On CHAR reduce production atomic_expression -> constant
-- On CASE reduce production atomic_expression -> constant
-- On BARRBRACE reduce production atomic_expression -> constant
-- On BARBAR reduce production atomic_expression -> constant
-- On AMPAMP reduce production atomic_expression -> constant

State 359:
database_expression -> DATABASE atomic_expression . perhaps_db_driver [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On LPAREN shift to state 311
-- On FALSE shift to state 38
-- On CHAR shift to state 41
-- On perhaps_db_driver shift to state 360
-- On parenthesized_thing shift to state 357
-- On constant shift to state 358
-- On atomic_expression shift to state 361
-- On WITH reduce production perhaps_db_driver -> 
-- On VBAR reduce production perhaps_db_driver -> 
-- On VALUES reduce production perhaps_db_driver -> 
-- On SEMICOLON reduce production perhaps_db_driver -> 
-- On RPAREN reduce production perhaps_db_driver -> 
-- On RBRACKET reduce production perhaps_db_driver -> 
-- On RBRACE reduce production perhaps_db_driver -> 
-- On END reduce production perhaps_db_driver -> 
-- On ELSE reduce production perhaps_db_driver -> 
-- On DOTDOT reduce production perhaps_db_driver -> 
-- On COMMA reduce production perhaps_db_driver -> 
-- On CASE reduce production perhaps_db_driver -> 
-- On BARRBRACE reduce production perhaps_db_driver -> 

State 360:
database_expression -> DATABASE atomic_expression perhaps_db_driver . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On VBAR reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On VALUES reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On SEMICOLON reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On RPAREN reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On RBRACKET reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On RBRACE reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On END reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On ELSE reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On DOTDOT reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On COMMA reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On CASE reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver
-- On BARRBRACE reduce production database_expression -> DATABASE atomic_expression perhaps_db_driver

State 361:
perhaps_db_driver -> atomic_expression . perhaps_db_args [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On LPAREN shift to state 311
-- On FALSE shift to state 38
-- On CHAR shift to state 41
-- On perhaps_db_args shift to state 362
-- On parenthesized_thing shift to state 357
-- On constant shift to state 358
-- On atomic_expression shift to state 363
-- On WITH reduce production perhaps_db_args -> 
-- On VBAR reduce production perhaps_db_args -> 
-- On VALUES reduce production perhaps_db_args -> 
-- On SEMICOLON reduce production perhaps_db_args -> 
-- On RPAREN reduce production perhaps_db_args -> 
-- On RBRACKET reduce production perhaps_db_args -> 
-- On RBRACE reduce production perhaps_db_args -> 
-- On END reduce production perhaps_db_args -> 
-- On ELSE reduce production perhaps_db_args -> 
-- On DOTDOT reduce production perhaps_db_args -> 
-- On COMMA reduce production perhaps_db_args -> 
-- On CASE reduce production perhaps_db_args -> 
-- On BARRBRACE reduce production perhaps_db_args -> 

State 362:
perhaps_db_driver -> atomic_expression perhaps_db_args . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On VBAR reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On VALUES reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On SEMICOLON reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On RPAREN reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On RBRACKET reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On RBRACE reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On END reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On ELSE reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On DOTDOT reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On COMMA reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On CASE reduce production perhaps_db_driver -> atomic_expression perhaps_db_args
-- On BARRBRACE reduce production perhaps_db_driver -> atomic_expression perhaps_db_args

State 363:
perhaps_db_args -> atomic_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production perhaps_db_args -> atomic_expression
-- On VBAR reduce production perhaps_db_args -> atomic_expression
-- On VALUES reduce production perhaps_db_args -> atomic_expression
-- On SEMICOLON reduce production perhaps_db_args -> atomic_expression
-- On RPAREN reduce production perhaps_db_args -> atomic_expression
-- On RBRACKET reduce production perhaps_db_args -> atomic_expression
-- On RBRACE reduce production perhaps_db_args -> atomic_expression
-- On END reduce production perhaps_db_args -> atomic_expression
-- On ELSE reduce production perhaps_db_args -> atomic_expression
-- On DOTDOT reduce production perhaps_db_args -> atomic_expression
-- On COMMA reduce production perhaps_db_args -> atomic_expression
-- On CASE reduce production perhaps_db_args -> atomic_expression
-- On BARRBRACE reduce production perhaps_db_args -> atomic_expression

State 364:
constructor_expression -> CONSTRUCTOR . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
constructor_expression -> CONSTRUCTOR . parenthesized_thing [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On LPAREN shift to state 311
-- On parenthesized_thing shift to state 365
-- On WITH reduce production constructor_expression -> CONSTRUCTOR
-- On VBAR reduce production constructor_expression -> CONSTRUCTOR
-- On VALUES reduce production constructor_expression -> CONSTRUCTOR
-- On SEMICOLON reduce production constructor_expression -> CONSTRUCTOR
-- On RPAREN reduce production constructor_expression -> CONSTRUCTOR
-- On RETURNING reduce production constructor_expression -> CONSTRUCTOR
-- On RBRACKET reduce production constructor_expression -> CONSTRUCTOR
-- On RBRACE reduce production constructor_expression -> CONSTRUCTOR
-- On RARROW reduce production constructor_expression -> CONSTRUCTOR
-- On MINUSDOT reduce production constructor_expression -> CONSTRUCTOR
-- On MINUS reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR9 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR8 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR7 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR6 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR5 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR4 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR3 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR2 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR1 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR0 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL9 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL8 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL7 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL6 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL5 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL4 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL3 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL2 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL1 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL0 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX9 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX8 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX7 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX6 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX5 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX4 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX3 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX2 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX1 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX0 reduce production constructor_expression -> CONSTRUCTOR
-- On FATRARROW reduce production constructor_expression -> CONSTRUCTOR
-- On EQUALSTILDE reduce production constructor_expression -> CONSTRUCTOR
-- On END reduce production constructor_expression -> CONSTRUCTOR
-- On ELSE reduce production constructor_expression -> CONSTRUCTOR
-- On DOTDOT reduce production constructor_expression -> CONSTRUCTOR
-- On COMMA reduce production constructor_expression -> CONSTRUCTOR
-- On COLONCOLON reduce production constructor_expression -> CONSTRUCTOR
-- On COLON reduce production constructor_expression -> CONSTRUCTOR
-- On CASE reduce production constructor_expression -> CONSTRUCTOR
-- On BARRBRACE reduce production constructor_expression -> CONSTRUCTOR
-- On BARBAR reduce production constructor_expression -> CONSTRUCTOR
-- On AMPAMP reduce production constructor_expression -> CONSTRUCTOR

State 365:
constructor_expression -> CONSTRUCTOR parenthesized_thing . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On VBAR reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On VALUES reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On SEMICOLON reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On RPAREN reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On RETURNING reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On RBRACKET reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On RBRACE reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On RARROW reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On MINUSDOT reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On MINUS reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR9 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR8 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR7 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR6 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR5 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR4 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR3 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR2 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR1 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXR0 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL9 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL8 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL7 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL6 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL5 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL4 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL3 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL2 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL1 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIXL0 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX9 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX8 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX7 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX6 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX5 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX4 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX3 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX2 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX1 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On INFIX0 reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On FATRARROW reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On EQUALSTILDE reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On END reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On ELSE reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On DOTDOT reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On COMMA reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On COLONCOLON reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On COLON reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On CASE reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On BARRBRACE reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On BARBAR reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing
-- On AMPAMP reduce production constructor_expression -> CONSTRUCTOR parenthesized_thing

State 366:
infixr_9 -> unary_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_9 -> unary_expression . INFIX9 unary_expression [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_9 -> unary_expression . INFIXR9 infixr_9 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXR9 shift to state 367
-- On INFIX9 shift to state 376
-- On WITH reduce production infixr_9 -> unary_expression
-- On VBAR reduce production infixr_9 -> unary_expression
-- On VALUES reduce production infixr_9 -> unary_expression
-- On SEMICOLON reduce production infixr_9 -> unary_expression
-- On RPAREN reduce production infixr_9 -> unary_expression
-- On RETURNING reduce production infixr_9 -> unary_expression
-- On RBRACKET reduce production infixr_9 -> unary_expression
-- On RBRACE reduce production infixr_9 -> unary_expression
-- On RARROW reduce production infixr_9 -> unary_expression
-- On MINUSDOT reduce production infixr_9 -> unary_expression
-- On MINUS reduce production infixr_9 -> unary_expression
-- On INFIXR8 reduce production infixr_9 -> unary_expression
-- On INFIXR7 reduce production infixr_9 -> unary_expression
-- On INFIXR6 reduce production infixr_9 -> unary_expression
-- On INFIXR5 reduce production infixr_9 -> unary_expression
-- On INFIXR4 reduce production infixr_9 -> unary_expression
-- On INFIXR3 reduce production infixr_9 -> unary_expression
-- On INFIXR2 reduce production infixr_9 -> unary_expression
-- On INFIXR1 reduce production infixr_9 -> unary_expression
-- On INFIXR0 reduce production infixr_9 -> unary_expression
-- On INFIXL9 reduce production infixr_9 -> unary_expression
-- On INFIXL8 reduce production infixr_9 -> unary_expression
-- On INFIXL7 reduce production infixr_9 -> unary_expression
-- On INFIXL6 reduce production infixr_9 -> unary_expression
-- On INFIXL5 reduce production infixr_9 -> unary_expression
-- On INFIXL4 reduce production infixr_9 -> unary_expression
-- On INFIXL3 reduce production infixr_9 -> unary_expression
-- On INFIXL2 reduce production infixr_9 -> unary_expression
-- On INFIXL1 reduce production infixr_9 -> unary_expression
-- On INFIXL0 reduce production infixr_9 -> unary_expression
-- On INFIX8 reduce production infixr_9 -> unary_expression
-- On INFIX7 reduce production infixr_9 -> unary_expression
-- On INFIX6 reduce production infixr_9 -> unary_expression
-- On INFIX5 reduce production infixr_9 -> unary_expression
-- On INFIX4 reduce production infixr_9 -> unary_expression
-- On INFIX3 reduce production infixr_9 -> unary_expression
-- On INFIX2 reduce production infixr_9 -> unary_expression
-- On INFIX1 reduce production infixr_9 -> unary_expression
-- On INFIX0 reduce production infixr_9 -> unary_expression
-- On FATRARROW reduce production infixr_9 -> unary_expression
-- On EQUALSTILDE reduce production infixr_9 -> unary_expression
-- On END reduce production infixr_9 -> unary_expression
-- On ELSE reduce production infixr_9 -> unary_expression
-- On DOTDOT reduce production infixr_9 -> unary_expression
-- On COMMA reduce production infixr_9 -> unary_expression
-- On COLONCOLON reduce production infixr_9 -> unary_expression
-- On COLON reduce production infixr_9 -> unary_expression
-- On CASE reduce production infixr_9 -> unary_expression
-- On BARRBRACE reduce production infixr_9 -> unary_expression
-- On BARBAR reduce production infixr_9 -> unary_expression
-- On AMPAMP reduce production infixr_9 -> unary_expression

State 367:
infixr_9 -> unary_expression INFIXR9 . infixr_9 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 372
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 368:
postfix_expression -> postfix_expression . arg_spec [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
postfix_expression -> postfix_expression . DOT record_label [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
unary_expression -> postfix_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On LPAREN shift to state 347
-- On DOT shift to state 369
-- On arg_spec shift to state 371
-- On WITH reduce production unary_expression -> postfix_expression
-- On VBAR reduce production unary_expression -> postfix_expression
-- On VALUES reduce production unary_expression -> postfix_expression
-- On SEMICOLON reduce production unary_expression -> postfix_expression
-- On RPAREN reduce production unary_expression -> postfix_expression
-- On RETURNING reduce production unary_expression -> postfix_expression
-- On RBRACKET reduce production unary_expression -> postfix_expression
-- On RBRACE reduce production unary_expression -> postfix_expression
-- On RARROW reduce production unary_expression -> postfix_expression
-- On MINUSDOT reduce production unary_expression -> postfix_expression
-- On MINUS reduce production unary_expression -> postfix_expression
-- On INFIXR9 reduce production unary_expression -> postfix_expression
-- On INFIXR8 reduce production unary_expression -> postfix_expression
-- On INFIXR7 reduce production unary_expression -> postfix_expression
-- On INFIXR6 reduce production unary_expression -> postfix_expression
-- On INFIXR5 reduce production unary_expression -> postfix_expression
-- On INFIXR4 reduce production unary_expression -> postfix_expression
-- On INFIXR3 reduce production unary_expression -> postfix_expression
-- On INFIXR2 reduce production unary_expression -> postfix_expression
-- On INFIXR1 reduce production unary_expression -> postfix_expression
-- On INFIXR0 reduce production unary_expression -> postfix_expression
-- On INFIXL9 reduce production unary_expression -> postfix_expression
-- On INFIXL8 reduce production unary_expression -> postfix_expression
-- On INFIXL7 reduce production unary_expression -> postfix_expression
-- On INFIXL6 reduce production unary_expression -> postfix_expression
-- On INFIXL5 reduce production unary_expression -> postfix_expression
-- On INFIXL4 reduce production unary_expression -> postfix_expression
-- On INFIXL3 reduce production unary_expression -> postfix_expression
-- On INFIXL2 reduce production unary_expression -> postfix_expression
-- On INFIXL1 reduce production unary_expression -> postfix_expression
-- On INFIXL0 reduce production unary_expression -> postfix_expression
-- On INFIX9 reduce production unary_expression -> postfix_expression
-- On INFIX8 reduce production unary_expression -> postfix_expression
-- On INFIX7 reduce production unary_expression -> postfix_expression
-- On INFIX6 reduce production unary_expression -> postfix_expression
-- On INFIX5 reduce production unary_expression -> postfix_expression
-- On INFIX4 reduce production unary_expression -> postfix_expression
-- On INFIX3 reduce production unary_expression -> postfix_expression
-- On INFIX2 reduce production unary_expression -> postfix_expression
-- On INFIX1 reduce production unary_expression -> postfix_expression
-- On INFIX0 reduce production unary_expression -> postfix_expression
-- On FATRARROW reduce production unary_expression -> postfix_expression
-- On EQUALSTILDE reduce production unary_expression -> postfix_expression
-- On END reduce production unary_expression -> postfix_expression
-- On ELSE reduce production unary_expression -> postfix_expression
-- On DOTDOT reduce production unary_expression -> postfix_expression
-- On COMMA reduce production unary_expression -> postfix_expression
-- On COLONCOLON reduce production unary_expression -> postfix_expression
-- On COLON reduce production unary_expression -> postfix_expression
-- On CASE reduce production unary_expression -> postfix_expression
-- On BARRBRACE reduce production unary_expression -> postfix_expression
-- On BARBAR reduce production unary_expression -> postfix_expression
-- On AMPAMP reduce production unary_expression -> postfix_expression

State 369:
postfix_expression -> postfix_expression DOT . record_label [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 170
-- On UINTEGER shift to state 171
-- On STRING shift to state 172
-- On CONSTRUCTOR shift to state 173
-- On record_label shift to state 370
-- On field_label shift to state 224

State 370:
postfix_expression -> postfix_expression DOT record_label . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production postfix_expression -> postfix_expression DOT record_label
-- On VBAR reduce production postfix_expression -> postfix_expression DOT record_label
-- On VALUES reduce production postfix_expression -> postfix_expression DOT record_label
-- On SEMICOLON reduce production postfix_expression -> postfix_expression DOT record_label
-- On RPAREN reduce production postfix_expression -> postfix_expression DOT record_label
-- On RETURNING reduce production postfix_expression -> postfix_expression DOT record_label
-- On RBRACKET reduce production postfix_expression -> postfix_expression DOT record_label
-- On RBRACE reduce production postfix_expression -> postfix_expression DOT record_label
-- On RARROW reduce production postfix_expression -> postfix_expression DOT record_label
-- On MINUSDOT reduce production postfix_expression -> postfix_expression DOT record_label
-- On MINUS reduce production postfix_expression -> postfix_expression DOT record_label
-- On LPAREN reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR9 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR8 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR7 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR6 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR5 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR4 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR3 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR2 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR1 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXR0 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL9 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL8 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL7 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL6 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL5 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL4 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL3 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL2 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL1 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIXL0 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX9 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX8 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX7 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX6 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX5 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX4 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX3 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX2 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX1 reduce production postfix_expression -> postfix_expression DOT record_label
-- On INFIX0 reduce production postfix_expression -> postfix_expression DOT record_label
-- On FATRARROW reduce production postfix_expression -> postfix_expression DOT record_label
-- On EQUALSTILDE reduce production postfix_expression -> postfix_expression DOT record_label
-- On END reduce production postfix_expression -> postfix_expression DOT record_label
-- On ELSE reduce production postfix_expression -> postfix_expression DOT record_label
-- On DOTDOT reduce production postfix_expression -> postfix_expression DOT record_label
-- On DOT reduce production postfix_expression -> postfix_expression DOT record_label
-- On COMMA reduce production postfix_expression -> postfix_expression DOT record_label
-- On COLONCOLON reduce production postfix_expression -> postfix_expression DOT record_label
-- On COLON reduce production postfix_expression -> postfix_expression DOT record_label
-- On CASE reduce production postfix_expression -> postfix_expression DOT record_label
-- On BARRBRACE reduce production postfix_expression -> postfix_expression DOT record_label
-- On BARBAR reduce production postfix_expression -> postfix_expression DOT record_label
-- On AMPAMP reduce production postfix_expression -> postfix_expression DOT record_label

State 371:
postfix_expression -> postfix_expression arg_spec . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production postfix_expression -> postfix_expression arg_spec
-- On VBAR reduce production postfix_expression -> postfix_expression arg_spec
-- On VALUES reduce production postfix_expression -> postfix_expression arg_spec
-- On SEMICOLON reduce production postfix_expression -> postfix_expression arg_spec
-- On RPAREN reduce production postfix_expression -> postfix_expression arg_spec
-- On RETURNING reduce production postfix_expression -> postfix_expression arg_spec
-- On RBRACKET reduce production postfix_expression -> postfix_expression arg_spec
-- On RBRACE reduce production postfix_expression -> postfix_expression arg_spec
-- On RARROW reduce production postfix_expression -> postfix_expression arg_spec
-- On MINUSDOT reduce production postfix_expression -> postfix_expression arg_spec
-- On MINUS reduce production postfix_expression -> postfix_expression arg_spec
-- On LPAREN reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR9 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR8 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR7 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR6 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR5 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR4 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR3 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR2 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR1 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXR0 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL9 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL8 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL7 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL6 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL5 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL4 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL3 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL2 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL1 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIXL0 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX9 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX8 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX7 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX6 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX5 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX4 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX3 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX2 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX1 reduce production postfix_expression -> postfix_expression arg_spec
-- On INFIX0 reduce production postfix_expression -> postfix_expression arg_spec
-- On FATRARROW reduce production postfix_expression -> postfix_expression arg_spec
-- On EQUALSTILDE reduce production postfix_expression -> postfix_expression arg_spec
-- On END reduce production postfix_expression -> postfix_expression arg_spec
-- On ELSE reduce production postfix_expression -> postfix_expression arg_spec
-- On DOTDOT reduce production postfix_expression -> postfix_expression arg_spec
-- On DOT reduce production postfix_expression -> postfix_expression arg_spec
-- On COMMA reduce production postfix_expression -> postfix_expression arg_spec
-- On COLONCOLON reduce production postfix_expression -> postfix_expression arg_spec
-- On COLON reduce production postfix_expression -> postfix_expression arg_spec
-- On CASE reduce production postfix_expression -> postfix_expression arg_spec
-- On BARRBRACE reduce production postfix_expression -> postfix_expression arg_spec
-- On BARBAR reduce production postfix_expression -> postfix_expression arg_spec
-- On AMPAMP reduce production postfix_expression -> postfix_expression arg_spec

State 372:
infixr_9 -> unary_expression INFIXR9 infixr_9 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On VBAR reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On VALUES reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On SEMICOLON reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On RPAREN reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On RETURNING reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On RBRACKET reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On RBRACE reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On RARROW reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On MINUSDOT reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On MINUS reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR8 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR7 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR6 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR5 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR4 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR3 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR2 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR1 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXR0 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL9 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL8 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL7 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL6 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL5 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL4 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL3 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL2 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL1 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIXL0 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX8 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX7 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX6 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX5 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX4 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX3 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX2 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX1 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On INFIX0 reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On FATRARROW reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On EQUALSTILDE reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On END reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On ELSE reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On DOTDOT reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On COMMA reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On COLONCOLON reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On COLON reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On CASE reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On BARRBRACE reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On BARBAR reduce production infixr_9 -> unary_expression INFIXR9 infixr_9
-- On AMPAMP reduce production infixr_9 -> unary_expression INFIXR9 infixr_9

State 373:
unary_expression -> constructor_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production unary_expression -> constructor_expression
-- On VBAR reduce production unary_expression -> constructor_expression
-- On VALUES reduce production unary_expression -> constructor_expression
-- On SEMICOLON reduce production unary_expression -> constructor_expression
-- On RPAREN reduce production unary_expression -> constructor_expression
-- On RETURNING reduce production unary_expression -> constructor_expression
-- On RBRACKET reduce production unary_expression -> constructor_expression
-- On RBRACE reduce production unary_expression -> constructor_expression
-- On RARROW reduce production unary_expression -> constructor_expression
-- On MINUSDOT reduce production unary_expression -> constructor_expression
-- On MINUS reduce production unary_expression -> constructor_expression
-- On INFIXR9 reduce production unary_expression -> constructor_expression
-- On INFIXR8 reduce production unary_expression -> constructor_expression
-- On INFIXR7 reduce production unary_expression -> constructor_expression
-- On INFIXR6 reduce production unary_expression -> constructor_expression
-- On INFIXR5 reduce production unary_expression -> constructor_expression
-- On INFIXR4 reduce production unary_expression -> constructor_expression
-- On INFIXR3 reduce production unary_expression -> constructor_expression
-- On INFIXR2 reduce production unary_expression -> constructor_expression
-- On INFIXR1 reduce production unary_expression -> constructor_expression
-- On INFIXR0 reduce production unary_expression -> constructor_expression
-- On INFIXL9 reduce production unary_expression -> constructor_expression
-- On INFIXL8 reduce production unary_expression -> constructor_expression
-- On INFIXL7 reduce production unary_expression -> constructor_expression
-- On INFIXL6 reduce production unary_expression -> constructor_expression
-- On INFIXL5 reduce production unary_expression -> constructor_expression
-- On INFIXL4 reduce production unary_expression -> constructor_expression
-- On INFIXL3 reduce production unary_expression -> constructor_expression
-- On INFIXL2 reduce production unary_expression -> constructor_expression
-- On INFIXL1 reduce production unary_expression -> constructor_expression
-- On INFIXL0 reduce production unary_expression -> constructor_expression
-- On INFIX9 reduce production unary_expression -> constructor_expression
-- On INFIX8 reduce production unary_expression -> constructor_expression
-- On INFIX7 reduce production unary_expression -> constructor_expression
-- On INFIX6 reduce production unary_expression -> constructor_expression
-- On INFIX5 reduce production unary_expression -> constructor_expression
-- On INFIX4 reduce production unary_expression -> constructor_expression
-- On INFIX3 reduce production unary_expression -> constructor_expression
-- On INFIX2 reduce production unary_expression -> constructor_expression
-- On INFIX1 reduce production unary_expression -> constructor_expression
-- On INFIX0 reduce production unary_expression -> constructor_expression
-- On FATRARROW reduce production unary_expression -> constructor_expression
-- On EQUALSTILDE reduce production unary_expression -> constructor_expression
-- On END reduce production unary_expression -> constructor_expression
-- On ELSE reduce production unary_expression -> constructor_expression
-- On DOTDOT reduce production unary_expression -> constructor_expression
-- On COMMA reduce production unary_expression -> constructor_expression
-- On COLONCOLON reduce production unary_expression -> constructor_expression
-- On COLON reduce production unary_expression -> constructor_expression
-- On CASE reduce production unary_expression -> constructor_expression
-- On BARRBRACE reduce production unary_expression -> constructor_expression
-- On BARBAR reduce production unary_expression -> constructor_expression
-- On AMPAMP reduce production unary_expression -> constructor_expression

State 374:
postfix_expression -> block . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production postfix_expression -> block
-- On VBAR reduce production postfix_expression -> block
-- On VALUES reduce production postfix_expression -> block
-- On SEMICOLON reduce production postfix_expression -> block
-- On RPAREN reduce production postfix_expression -> block
-- On RETURNING reduce production postfix_expression -> block
-- On RBRACKET reduce production postfix_expression -> block
-- On RBRACE reduce production postfix_expression -> block
-- On RARROW reduce production postfix_expression -> block
-- On MINUSDOT reduce production postfix_expression -> block
-- On MINUS reduce production postfix_expression -> block
-- On LPAREN reduce production postfix_expression -> block
-- On INFIXR9 reduce production postfix_expression -> block
-- On INFIXR8 reduce production postfix_expression -> block
-- On INFIXR7 reduce production postfix_expression -> block
-- On INFIXR6 reduce production postfix_expression -> block
-- On INFIXR5 reduce production postfix_expression -> block
-- On INFIXR4 reduce production postfix_expression -> block
-- On INFIXR3 reduce production postfix_expression -> block
-- On INFIXR2 reduce production postfix_expression -> block
-- On INFIXR1 reduce production postfix_expression -> block
-- On INFIXR0 reduce production postfix_expression -> block
-- On INFIXL9 reduce production postfix_expression -> block
-- On INFIXL8 reduce production postfix_expression -> block
-- On INFIXL7 reduce production postfix_expression -> block
-- On INFIXL6 reduce production postfix_expression -> block
-- On INFIXL5 reduce production postfix_expression -> block
-- On INFIXL4 reduce production postfix_expression -> block
-- On INFIXL3 reduce production postfix_expression -> block
-- On INFIXL2 reduce production postfix_expression -> block
-- On INFIXL1 reduce production postfix_expression -> block
-- On INFIXL0 reduce production postfix_expression -> block
-- On INFIX9 reduce production postfix_expression -> block
-- On INFIX8 reduce production postfix_expression -> block
-- On INFIX7 reduce production postfix_expression -> block
-- On INFIX6 reduce production postfix_expression -> block
-- On INFIX5 reduce production postfix_expression -> block
-- On INFIX4 reduce production postfix_expression -> block
-- On INFIX3 reduce production postfix_expression -> block
-- On INFIX2 reduce production postfix_expression -> block
-- On INFIX1 reduce production postfix_expression -> block
-- On INFIX0 reduce production postfix_expression -> block
-- On FATRARROW reduce production postfix_expression -> block
-- On EQUALSTILDE reduce production postfix_expression -> block
-- On END reduce production postfix_expression -> block
-- On ELSE reduce production postfix_expression -> block
-- On DOTDOT reduce production postfix_expression -> block
-- On DOT reduce production postfix_expression -> block
-- On COMMA reduce production postfix_expression -> block
-- On COLONCOLON reduce production postfix_expression -> block
-- On COLON reduce production postfix_expression -> block
-- On CASE reduce production postfix_expression -> block
-- On BARRBRACE reduce production postfix_expression -> block
-- On BARBAR reduce production postfix_expression -> block
-- On AMPAMP reduce production postfix_expression -> block

State 375:
primary_expression -> atomic_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production primary_expression -> atomic_expression
-- On VBAR reduce production primary_expression -> atomic_expression
-- On VALUES reduce production primary_expression -> atomic_expression
-- On SEMICOLON reduce production primary_expression -> atomic_expression
-- On RPAREN reduce production primary_expression -> atomic_expression
-- On RETURNING reduce production primary_expression -> atomic_expression
-- On RBRACKET reduce production primary_expression -> atomic_expression
-- On RBRACE reduce production primary_expression -> atomic_expression
-- On RARROW reduce production primary_expression -> atomic_expression
-- On POSTFIXOP reduce production primary_expression -> atomic_expression
-- On MINUSDOT reduce production primary_expression -> atomic_expression
-- On MINUS reduce production primary_expression -> atomic_expression
-- On LPAREN reduce production primary_expression -> atomic_expression
-- On INFIXR9 reduce production primary_expression -> atomic_expression
-- On INFIXR8 reduce production primary_expression -> atomic_expression
-- On INFIXR7 reduce production primary_expression -> atomic_expression
-- On INFIXR6 reduce production primary_expression -> atomic_expression
-- On INFIXR5 reduce production primary_expression -> atomic_expression
-- On INFIXR4 reduce production primary_expression -> atomic_expression
-- On INFIXR3 reduce production primary_expression -> atomic_expression
-- On INFIXR2 reduce production primary_expression -> atomic_expression
-- On INFIXR1 reduce production primary_expression -> atomic_expression
-- On INFIXR0 reduce production primary_expression -> atomic_expression
-- On INFIXL9 reduce production primary_expression -> atomic_expression
-- On INFIXL8 reduce production primary_expression -> atomic_expression
-- On INFIXL7 reduce production primary_expression -> atomic_expression
-- On INFIXL6 reduce production primary_expression -> atomic_expression
-- On INFIXL5 reduce production primary_expression -> atomic_expression
-- On INFIXL4 reduce production primary_expression -> atomic_expression
-- On INFIXL3 reduce production primary_expression -> atomic_expression
-- On INFIXL2 reduce production primary_expression -> atomic_expression
-- On INFIXL1 reduce production primary_expression -> atomic_expression
-- On INFIXL0 reduce production primary_expression -> atomic_expression
-- On INFIX9 reduce production primary_expression -> atomic_expression
-- On INFIX8 reduce production primary_expression -> atomic_expression
-- On INFIX7 reduce production primary_expression -> atomic_expression
-- On INFIX6 reduce production primary_expression -> atomic_expression
-- On INFIX5 reduce production primary_expression -> atomic_expression
-- On INFIX4 reduce production primary_expression -> atomic_expression
-- On INFIX3 reduce production primary_expression -> atomic_expression
-- On INFIX2 reduce production primary_expression -> atomic_expression
-- On INFIX1 reduce production primary_expression -> atomic_expression
-- On INFIX0 reduce production primary_expression -> atomic_expression
-- On FATRARROW reduce production primary_expression -> atomic_expression
-- On EQUALSTILDE reduce production primary_expression -> atomic_expression
-- On END reduce production primary_expression -> atomic_expression
-- On ELSE reduce production primary_expression -> atomic_expression
-- On DOTDOT reduce production primary_expression -> atomic_expression
-- On DOT reduce production primary_expression -> atomic_expression
-- On COMMA reduce production primary_expression -> atomic_expression
-- On COLONCOLON reduce production primary_expression -> atomic_expression
-- On COLON reduce production primary_expression -> atomic_expression
-- On CASE reduce production primary_expression -> atomic_expression
-- On BARRBRACE reduce production primary_expression -> atomic_expression
-- On BARBAR reduce production primary_expression -> atomic_expression
-- On AMPAMP reduce production primary_expression -> atomic_expression

State 376:
infixr_9 -> unary_expression INFIX9 . unary_expression [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 377
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 377:
infixr_9 -> unary_expression INFIX9 unary_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On VBAR reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On VALUES reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On SEMICOLON reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On RPAREN reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On RETURNING reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On RBRACKET reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On RBRACE reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On RARROW reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On MINUSDOT reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On MINUS reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR8 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR7 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR6 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR5 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR4 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR3 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR2 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR1 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXR0 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL9 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL8 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL7 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL6 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL5 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL4 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL3 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL2 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL1 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIXL0 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX8 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX7 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX6 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX5 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX4 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX3 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX2 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX1 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On INFIX0 reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On FATRARROW reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On EQUALSTILDE reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On END reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On ELSE reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On DOTDOT reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On COMMA reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On COLONCOLON reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On COLON reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On CASE reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On BARRBRACE reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On BARBAR reduce production infixr_9 -> unary_expression INFIX9 unary_expression
-- On AMPAMP reduce production infixr_9 -> unary_expression INFIX9 unary_expression

State 378:
db_expression -> typed_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
typed_expression -> typed_expression . COLON datatype [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA COLON CASE BARRBRACE ]
typed_expression -> typed_expression . COLON datatype LARROW datatype [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA COLON CASE BARRBRACE ]
-- On COLON shift to state 379
-- On WITH reduce production db_expression -> typed_expression
-- On VBAR reduce production db_expression -> typed_expression
-- On VALUES reduce production db_expression -> typed_expression
-- On SEMICOLON reduce production db_expression -> typed_expression
-- On RPAREN reduce production db_expression -> typed_expression
-- On RETURNING reduce production db_expression -> typed_expression
-- On RBRACKET reduce production db_expression -> typed_expression
-- On RBRACE reduce production db_expression -> typed_expression
-- On END reduce production db_expression -> typed_expression
-- On ELSE reduce production db_expression -> typed_expression
-- On DOTDOT reduce production db_expression -> typed_expression
-- On COMMA reduce production db_expression -> typed_expression
-- On CASE reduce production db_expression -> typed_expression
-- On BARRBRACE reduce production db_expression -> typed_expression

State 379:
typed_expression -> typed_expression COLON . datatype [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA COLON CASE BARRBRACE ]
typed_expression -> typed_expression COLON . datatype LARROW datatype [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA COLON CASE BARRBRACE ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 380

State 380:
typed_expression -> typed_expression COLON datatype . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA COLON CASE BARRBRACE ]
typed_expression -> typed_expression COLON datatype . LARROW datatype [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA COLON CASE BARRBRACE ]
-- On LARROW shift to state 381
-- On WITH reduce production typed_expression -> typed_expression COLON datatype
-- On VBAR reduce production typed_expression -> typed_expression COLON datatype
-- On VALUES reduce production typed_expression -> typed_expression COLON datatype
-- On SEMICOLON reduce production typed_expression -> typed_expression COLON datatype
-- On RPAREN reduce production typed_expression -> typed_expression COLON datatype
-- On RETURNING reduce production typed_expression -> typed_expression COLON datatype
-- On RBRACKET reduce production typed_expression -> typed_expression COLON datatype
-- On RBRACE reduce production typed_expression -> typed_expression COLON datatype
-- On END reduce production typed_expression -> typed_expression COLON datatype
-- On ELSE reduce production typed_expression -> typed_expression COLON datatype
-- On DOTDOT reduce production typed_expression -> typed_expression COLON datatype
-- On COMMA reduce production typed_expression -> typed_expression COLON datatype
-- On COLON reduce production typed_expression -> typed_expression COLON datatype
-- On CASE reduce production typed_expression -> typed_expression COLON datatype
-- On BARRBRACE reduce production typed_expression -> typed_expression COLON datatype

State 381:
typed_expression -> typed_expression COLON datatype LARROW . datatype [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA COLON CASE BARRBRACE ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 382

State 382:
typed_expression -> typed_expression COLON datatype LARROW datatype . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA COLON CASE BARRBRACE ]
-- On WITH reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On VBAR reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On VALUES reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On SEMICOLON reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On RPAREN reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On RETURNING reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On RBRACKET reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On RBRACE reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On END reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On ELSE reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On DOTDOT reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On COMMA reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On COLON reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On CASE reduce production typed_expression -> typed_expression COLON datatype LARROW datatype
-- On BARRBRACE reduce production typed_expression -> typed_expression COLON datatype LARROW datatype

State 383:
database_expression -> table_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production database_expression -> table_expression
-- On VBAR reduce production database_expression -> table_expression
-- On VALUES reduce production database_expression -> table_expression
-- On SEMICOLON reduce production database_expression -> table_expression
-- On RPAREN reduce production database_expression -> table_expression
-- On RBRACKET reduce production database_expression -> table_expression
-- On RBRACE reduce production database_expression -> table_expression
-- On END reduce production database_expression -> table_expression
-- On ELSE reduce production database_expression -> table_expression
-- On DOTDOT reduce production database_expression -> table_expression
-- On COMMA reduce production database_expression -> table_expression
-- On CASE reduce production database_expression -> table_expression
-- On BARRBRACE reduce production database_expression -> table_expression

State 384:
logical_expression -> logical_expression . BARBAR infixl_0 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
logical_expression -> logical_expression . AMPAMP infixl_0 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
typed_expression -> logical_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA COLON CASE BARRBRACE ]
-- On BARBAR shift to state 385
-- On AMPAMP shift to state 502
-- On WITH reduce production typed_expression -> logical_expression
-- On VBAR reduce production typed_expression -> logical_expression
-- On VALUES reduce production typed_expression -> logical_expression
-- On SEMICOLON reduce production typed_expression -> logical_expression
-- On RPAREN reduce production typed_expression -> logical_expression
-- On RETURNING reduce production typed_expression -> logical_expression
-- On RBRACKET reduce production typed_expression -> logical_expression
-- On RBRACE reduce production typed_expression -> logical_expression
-- On END reduce production typed_expression -> logical_expression
-- On ELSE reduce production typed_expression -> logical_expression
-- On DOTDOT reduce production typed_expression -> logical_expression
-- On COMMA reduce production typed_expression -> logical_expression
-- On COLON reduce production typed_expression -> logical_expression
-- On CASE reduce production typed_expression -> logical_expression
-- On BARRBRACE reduce production typed_expression -> logical_expression

State 385:
logical_expression -> logical_expression BARBAR . infixl_0 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 499
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 386:
infixl_9 -> infixr_9 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_9 -> infixr_9
-- On VBAR reduce production infixl_9 -> infixr_9
-- On VALUES reduce production infixl_9 -> infixr_9
-- On SEMICOLON reduce production infixl_9 -> infixr_9
-- On RPAREN reduce production infixl_9 -> infixr_9
-- On RETURNING reduce production infixl_9 -> infixr_9
-- On RBRACKET reduce production infixl_9 -> infixr_9
-- On RBRACE reduce production infixl_9 -> infixr_9
-- On RARROW reduce production infixl_9 -> infixr_9
-- On MINUSDOT reduce production infixl_9 -> infixr_9
-- On MINUS reduce production infixl_9 -> infixr_9
-- On INFIXR8 reduce production infixl_9 -> infixr_9
-- On INFIXR7 reduce production infixl_9 -> infixr_9
-- On INFIXR6 reduce production infixl_9 -> infixr_9
-- On INFIXR5 reduce production infixl_9 -> infixr_9
-- On INFIXR4 reduce production infixl_9 -> infixr_9
-- On INFIXR3 reduce production infixl_9 -> infixr_9
-- On INFIXR2 reduce production infixl_9 -> infixr_9
-- On INFIXR1 reduce production infixl_9 -> infixr_9
-- On INFIXR0 reduce production infixl_9 -> infixr_9
-- On INFIXL9 reduce production infixl_9 -> infixr_9
-- On INFIXL8 reduce production infixl_9 -> infixr_9
-- On INFIXL7 reduce production infixl_9 -> infixr_9
-- On INFIXL6 reduce production infixl_9 -> infixr_9
-- On INFIXL5 reduce production infixl_9 -> infixr_9
-- On INFIXL4 reduce production infixl_9 -> infixr_9
-- On INFIXL3 reduce production infixl_9 -> infixr_9
-- On INFIXL2 reduce production infixl_9 -> infixr_9
-- On INFIXL1 reduce production infixl_9 -> infixr_9
-- On INFIXL0 reduce production infixl_9 -> infixr_9
-- On INFIX8 reduce production infixl_9 -> infixr_9
-- On INFIX7 reduce production infixl_9 -> infixr_9
-- On INFIX6 reduce production infixl_9 -> infixr_9
-- On INFIX5 reduce production infixl_9 -> infixr_9
-- On INFIX4 reduce production infixl_9 -> infixr_9
-- On INFIX3 reduce production infixl_9 -> infixr_9
-- On INFIX2 reduce production infixl_9 -> infixr_9
-- On INFIX1 reduce production infixl_9 -> infixr_9
-- On INFIX0 reduce production infixl_9 -> infixr_9
-- On FATRARROW reduce production infixl_9 -> infixr_9
-- On EQUALSTILDE reduce production infixl_9 -> infixr_9
-- On END reduce production infixl_9 -> infixr_9
-- On ELSE reduce production infixl_9 -> infixr_9
-- On DOTDOT reduce production infixl_9 -> infixr_9
-- On COMMA reduce production infixl_9 -> infixr_9
-- On COLONCOLON reduce production infixl_9 -> infixr_9
-- On COLON reduce production infixl_9 -> infixr_9
-- On CASE reduce production infixl_9 -> infixr_9
-- On BARRBRACE reduce production infixl_9 -> infixr_9
-- On BARBAR reduce production infixl_9 -> infixr_9
-- On AMPAMP reduce production infixl_9 -> infixr_9

State 387:
infixl_8 -> infixr_8 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_8 -> infixr_8
-- On VBAR reduce production infixl_8 -> infixr_8
-- On VALUES reduce production infixl_8 -> infixr_8
-- On SEMICOLON reduce production infixl_8 -> infixr_8
-- On RPAREN reduce production infixl_8 -> infixr_8
-- On RETURNING reduce production infixl_8 -> infixr_8
-- On RBRACKET reduce production infixl_8 -> infixr_8
-- On RBRACE reduce production infixl_8 -> infixr_8
-- On RARROW reduce production infixl_8 -> infixr_8
-- On MINUSDOT reduce production infixl_8 -> infixr_8
-- On MINUS reduce production infixl_8 -> infixr_8
-- On INFIXR7 reduce production infixl_8 -> infixr_8
-- On INFIXR6 reduce production infixl_8 -> infixr_8
-- On INFIXR5 reduce production infixl_8 -> infixr_8
-- On INFIXR4 reduce production infixl_8 -> infixr_8
-- On INFIXR3 reduce production infixl_8 -> infixr_8
-- On INFIXR2 reduce production infixl_8 -> infixr_8
-- On INFIXR1 reduce production infixl_8 -> infixr_8
-- On INFIXR0 reduce production infixl_8 -> infixr_8
-- On INFIXL8 reduce production infixl_8 -> infixr_8
-- On INFIXL7 reduce production infixl_8 -> infixr_8
-- On INFIXL6 reduce production infixl_8 -> infixr_8
-- On INFIXL5 reduce production infixl_8 -> infixr_8
-- On INFIXL4 reduce production infixl_8 -> infixr_8
-- On INFIXL3 reduce production infixl_8 -> infixr_8
-- On INFIXL2 reduce production infixl_8 -> infixr_8
-- On INFIXL1 reduce production infixl_8 -> infixr_8
-- On INFIXL0 reduce production infixl_8 -> infixr_8
-- On INFIX7 reduce production infixl_8 -> infixr_8
-- On INFIX6 reduce production infixl_8 -> infixr_8
-- On INFIX5 reduce production infixl_8 -> infixr_8
-- On INFIX4 reduce production infixl_8 -> infixr_8
-- On INFIX3 reduce production infixl_8 -> infixr_8
-- On INFIX2 reduce production infixl_8 -> infixr_8
-- On INFIX1 reduce production infixl_8 -> infixr_8
-- On INFIX0 reduce production infixl_8 -> infixr_8
-- On FATRARROW reduce production infixl_8 -> infixr_8
-- On EQUALSTILDE reduce production infixl_8 -> infixr_8
-- On END reduce production infixl_8 -> infixr_8
-- On ELSE reduce production infixl_8 -> infixr_8
-- On DOTDOT reduce production infixl_8 -> infixr_8
-- On COMMA reduce production infixl_8 -> infixr_8
-- On COLON reduce production infixl_8 -> infixr_8
-- On CASE reduce production infixl_8 -> infixr_8
-- On BARRBRACE reduce production infixl_8 -> infixr_8
-- On BARBAR reduce production infixl_8 -> infixr_8
-- On AMPAMP reduce production infixl_8 -> infixr_8

State 388:
infixl_7 -> infixr_7 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_7 -> infixr_7
-- On VBAR reduce production infixl_7 -> infixr_7
-- On VALUES reduce production infixl_7 -> infixr_7
-- On SEMICOLON reduce production infixl_7 -> infixr_7
-- On RPAREN reduce production infixl_7 -> infixr_7
-- On RETURNING reduce production infixl_7 -> infixr_7
-- On RBRACKET reduce production infixl_7 -> infixr_7
-- On RBRACE reduce production infixl_7 -> infixr_7
-- On RARROW reduce production infixl_7 -> infixr_7
-- On MINUSDOT reduce production infixl_7 -> infixr_7
-- On MINUS reduce production infixl_7 -> infixr_7
-- On INFIXR6 reduce production infixl_7 -> infixr_7
-- On INFIXR5 reduce production infixl_7 -> infixr_7
-- On INFIXR4 reduce production infixl_7 -> infixr_7
-- On INFIXR3 reduce production infixl_7 -> infixr_7
-- On INFIXR2 reduce production infixl_7 -> infixr_7
-- On INFIXR1 reduce production infixl_7 -> infixr_7
-- On INFIXR0 reduce production infixl_7 -> infixr_7
-- On INFIXL7 reduce production infixl_7 -> infixr_7
-- On INFIXL6 reduce production infixl_7 -> infixr_7
-- On INFIXL5 reduce production infixl_7 -> infixr_7
-- On INFIXL4 reduce production infixl_7 -> infixr_7
-- On INFIXL3 reduce production infixl_7 -> infixr_7
-- On INFIXL2 reduce production infixl_7 -> infixr_7
-- On INFIXL1 reduce production infixl_7 -> infixr_7
-- On INFIXL0 reduce production infixl_7 -> infixr_7
-- On INFIX6 reduce production infixl_7 -> infixr_7
-- On INFIX5 reduce production infixl_7 -> infixr_7
-- On INFIX4 reduce production infixl_7 -> infixr_7
-- On INFIX3 reduce production infixl_7 -> infixr_7
-- On INFIX2 reduce production infixl_7 -> infixr_7
-- On INFIX1 reduce production infixl_7 -> infixr_7
-- On INFIX0 reduce production infixl_7 -> infixr_7
-- On FATRARROW reduce production infixl_7 -> infixr_7
-- On EQUALSTILDE reduce production infixl_7 -> infixr_7
-- On END reduce production infixl_7 -> infixr_7
-- On ELSE reduce production infixl_7 -> infixr_7
-- On DOTDOT reduce production infixl_7 -> infixr_7
-- On COMMA reduce production infixl_7 -> infixr_7
-- On COLON reduce production infixl_7 -> infixr_7
-- On CASE reduce production infixl_7 -> infixr_7
-- On BARRBRACE reduce production infixl_7 -> infixr_7
-- On BARBAR reduce production infixl_7 -> infixr_7
-- On AMPAMP reduce production infixl_7 -> infixr_7

State 389:
infixl_6 -> infixr_6 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_6 -> infixr_6
-- On VBAR reduce production infixl_6 -> infixr_6
-- On VALUES reduce production infixl_6 -> infixr_6
-- On SEMICOLON reduce production infixl_6 -> infixr_6
-- On RPAREN reduce production infixl_6 -> infixr_6
-- On RETURNING reduce production infixl_6 -> infixr_6
-- On RBRACKET reduce production infixl_6 -> infixr_6
-- On RBRACE reduce production infixl_6 -> infixr_6
-- On RARROW reduce production infixl_6 -> infixr_6
-- On MINUSDOT reduce production infixl_6 -> infixr_6
-- On MINUS reduce production infixl_6 -> infixr_6
-- On INFIXR5 reduce production infixl_6 -> infixr_6
-- On INFIXR4 reduce production infixl_6 -> infixr_6
-- On INFIXR3 reduce production infixl_6 -> infixr_6
-- On INFIXR2 reduce production infixl_6 -> infixr_6
-- On INFIXR1 reduce production infixl_6 -> infixr_6
-- On INFIXR0 reduce production infixl_6 -> infixr_6
-- On INFIXL6 reduce production infixl_6 -> infixr_6
-- On INFIXL5 reduce production infixl_6 -> infixr_6
-- On INFIXL4 reduce production infixl_6 -> infixr_6
-- On INFIXL3 reduce production infixl_6 -> infixr_6
-- On INFIXL2 reduce production infixl_6 -> infixr_6
-- On INFIXL1 reduce production infixl_6 -> infixr_6
-- On INFIXL0 reduce production infixl_6 -> infixr_6
-- On INFIX5 reduce production infixl_6 -> infixr_6
-- On INFIX4 reduce production infixl_6 -> infixr_6
-- On INFIX3 reduce production infixl_6 -> infixr_6
-- On INFIX2 reduce production infixl_6 -> infixr_6
-- On INFIX1 reduce production infixl_6 -> infixr_6
-- On INFIX0 reduce production infixl_6 -> infixr_6
-- On FATRARROW reduce production infixl_6 -> infixr_6
-- On EQUALSTILDE reduce production infixl_6 -> infixr_6
-- On END reduce production infixl_6 -> infixr_6
-- On ELSE reduce production infixl_6 -> infixr_6
-- On DOTDOT reduce production infixl_6 -> infixr_6
-- On COMMA reduce production infixl_6 -> infixr_6
-- On COLON reduce production infixl_6 -> infixr_6
-- On CASE reduce production infixl_6 -> infixr_6
-- On BARRBRACE reduce production infixl_6 -> infixr_6
-- On BARBAR reduce production infixl_6 -> infixr_6
-- On AMPAMP reduce production infixl_6 -> infixr_6

State 390:
infixl_5 -> infixr_5 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_4 -> infixr_5 . EQUALSTILDE regex [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On EQUALSTILDE shift to state 391
-- On WITH reduce production infixl_5 -> infixr_5
-- On VBAR reduce production infixl_5 -> infixr_5
-- On VALUES reduce production infixl_5 -> infixr_5
-- On SEMICOLON reduce production infixl_5 -> infixr_5
-- On RPAREN reduce production infixl_5 -> infixr_5
-- On RETURNING reduce production infixl_5 -> infixr_5
-- On RBRACKET reduce production infixl_5 -> infixr_5
-- On RBRACE reduce production infixl_5 -> infixr_5
-- On RARROW reduce production infixl_5 -> infixr_5
-- On INFIXR4 reduce production infixl_5 -> infixr_5
-- On INFIXR3 reduce production infixl_5 -> infixr_5
-- On INFIXR2 reduce production infixl_5 -> infixr_5
-- On INFIXR1 reduce production infixl_5 -> infixr_5
-- On INFIXR0 reduce production infixl_5 -> infixr_5
-- On INFIXL5 reduce production infixl_5 -> infixr_5
-- On INFIXL4 reduce production infixl_5 -> infixr_5
-- On INFIXL3 reduce production infixl_5 -> infixr_5
-- On INFIXL2 reduce production infixl_5 -> infixr_5
-- On INFIXL1 reduce production infixl_5 -> infixr_5
-- On INFIXL0 reduce production infixl_5 -> infixr_5
-- On INFIX4 reduce production infixl_5 -> infixr_5
-- On INFIX3 reduce production infixl_5 -> infixr_5
-- On INFIX2 reduce production infixl_5 -> infixr_5
-- On INFIX1 reduce production infixl_5 -> infixr_5
-- On INFIX0 reduce production infixl_5 -> infixr_5
-- On FATRARROW reduce production infixl_5 -> infixr_5
-- On END reduce production infixl_5 -> infixr_5
-- On ELSE reduce production infixl_5 -> infixr_5
-- On DOTDOT reduce production infixl_5 -> infixr_5
-- On COMMA reduce production infixl_5 -> infixr_5
-- On COLON reduce production infixl_5 -> infixr_5
-- On CASE reduce production infixl_5 -> infixr_5
-- On BARRBRACE reduce production infixl_5 -> infixr_5
-- On BARBAR reduce production infixl_5 -> infixr_5
-- On AMPAMP reduce production infixl_5 -> infixr_5

State 391:
infixr_4 -> infixr_5 EQUALSTILDE . regex [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On SSLASH shift to state 392
-- On SLASH shift to state 419
-- On regex shift to state 423

State 392:
regex -> SSLASH . regex_pattern_alternate SLASH regex_replace regex_flags_opt [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On STRING shift to state 393
-- On RANGE shift to state 394
-- On QUOTEDMETA shift to state 395
-- On LPAREN shift to state 396
-- On LBRACE shift to state 278
-- On DOT shift to state 397
-- On DOLLAR shift to state 398
-- On CARET shift to state 399
-- On regex_pattern_sequence shift to state 400
-- On regex_pattern_alternate shift to state 411
-- On regex_pattern shift to state 403
-- On block shift to state 408

State 393:
regex_pattern -> STRING . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> STRING
-- On STAR reduce production regex_pattern -> STRING
-- On SLASHFLAGS reduce production regex_pattern -> STRING
-- On SLASH reduce production regex_pattern -> STRING
-- On RPAREN reduce production regex_pattern -> STRING
-- On RANGE reduce production regex_pattern -> STRING
-- On QUOTEDMETA reduce production regex_pattern -> STRING
-- On QUESTION reduce production regex_pattern -> STRING
-- On PLUS reduce production regex_pattern -> STRING
-- On LPAREN reduce production regex_pattern -> STRING
-- On LBRACE reduce production regex_pattern -> STRING
-- On DOT reduce production regex_pattern -> STRING
-- On DOLLAR reduce production regex_pattern -> STRING
-- On CARET reduce production regex_pattern -> STRING
-- On ALTERNATE reduce production regex_pattern -> STRING

State 394:
regex_pattern -> RANGE . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> RANGE
-- On STAR reduce production regex_pattern -> RANGE
-- On SLASHFLAGS reduce production regex_pattern -> RANGE
-- On SLASH reduce production regex_pattern -> RANGE
-- On RPAREN reduce production regex_pattern -> RANGE
-- On RANGE reduce production regex_pattern -> RANGE
-- On QUOTEDMETA reduce production regex_pattern -> RANGE
-- On QUESTION reduce production regex_pattern -> RANGE
-- On PLUS reduce production regex_pattern -> RANGE
-- On LPAREN reduce production regex_pattern -> RANGE
-- On LBRACE reduce production regex_pattern -> RANGE
-- On DOT reduce production regex_pattern -> RANGE
-- On DOLLAR reduce production regex_pattern -> RANGE
-- On CARET reduce production regex_pattern -> RANGE
-- On ALTERNATE reduce production regex_pattern -> RANGE

State 395:
regex_pattern -> QUOTEDMETA . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> QUOTEDMETA
-- On STAR reduce production regex_pattern -> QUOTEDMETA
-- On SLASHFLAGS reduce production regex_pattern -> QUOTEDMETA
-- On SLASH reduce production regex_pattern -> QUOTEDMETA
-- On RPAREN reduce production regex_pattern -> QUOTEDMETA
-- On RANGE reduce production regex_pattern -> QUOTEDMETA
-- On QUOTEDMETA reduce production regex_pattern -> QUOTEDMETA
-- On QUESTION reduce production regex_pattern -> QUOTEDMETA
-- On PLUS reduce production regex_pattern -> QUOTEDMETA
-- On LPAREN reduce production regex_pattern -> QUOTEDMETA
-- On LBRACE reduce production regex_pattern -> QUOTEDMETA
-- On DOT reduce production regex_pattern -> QUOTEDMETA
-- On DOLLAR reduce production regex_pattern -> QUOTEDMETA
-- On CARET reduce production regex_pattern -> QUOTEDMETA
-- On ALTERNATE reduce production regex_pattern -> QUOTEDMETA

State 396:
regex_pattern -> LPAREN . regex_pattern_alternate RPAREN [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING shift to state 393
-- On RANGE shift to state 394
-- On QUOTEDMETA shift to state 395
-- On LPAREN shift to state 396
-- On LBRACE shift to state 278
-- On DOT shift to state 397
-- On DOLLAR shift to state 398
-- On CARET shift to state 399
-- On regex_pattern_sequence shift to state 400
-- On regex_pattern_alternate shift to state 409
-- On regex_pattern shift to state 403
-- On block shift to state 408

State 397:
regex_pattern -> DOT . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> DOT
-- On STAR reduce production regex_pattern -> DOT
-- On SLASHFLAGS reduce production regex_pattern -> DOT
-- On SLASH reduce production regex_pattern -> DOT
-- On RPAREN reduce production regex_pattern -> DOT
-- On RANGE reduce production regex_pattern -> DOT
-- On QUOTEDMETA reduce production regex_pattern -> DOT
-- On QUESTION reduce production regex_pattern -> DOT
-- On PLUS reduce production regex_pattern -> DOT
-- On LPAREN reduce production regex_pattern -> DOT
-- On LBRACE reduce production regex_pattern -> DOT
-- On DOT reduce production regex_pattern -> DOT
-- On DOLLAR reduce production regex_pattern -> DOT
-- On CARET reduce production regex_pattern -> DOT
-- On ALTERNATE reduce production regex_pattern -> DOT

State 398:
regex_pattern -> DOLLAR . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> DOLLAR
-- On STAR reduce production regex_pattern -> DOLLAR
-- On SLASHFLAGS reduce production regex_pattern -> DOLLAR
-- On SLASH reduce production regex_pattern -> DOLLAR
-- On RPAREN reduce production regex_pattern -> DOLLAR
-- On RANGE reduce production regex_pattern -> DOLLAR
-- On QUOTEDMETA reduce production regex_pattern -> DOLLAR
-- On QUESTION reduce production regex_pattern -> DOLLAR
-- On PLUS reduce production regex_pattern -> DOLLAR
-- On LPAREN reduce production regex_pattern -> DOLLAR
-- On LBRACE reduce production regex_pattern -> DOLLAR
-- On DOT reduce production regex_pattern -> DOLLAR
-- On DOLLAR reduce production regex_pattern -> DOLLAR
-- On CARET reduce production regex_pattern -> DOLLAR
-- On ALTERNATE reduce production regex_pattern -> DOLLAR

State 399:
regex_pattern -> CARET . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> CARET
-- On STAR reduce production regex_pattern -> CARET
-- On SLASHFLAGS reduce production regex_pattern -> CARET
-- On SLASH reduce production regex_pattern -> CARET
-- On RPAREN reduce production regex_pattern -> CARET
-- On RANGE reduce production regex_pattern -> CARET
-- On QUOTEDMETA reduce production regex_pattern -> CARET
-- On QUESTION reduce production regex_pattern -> CARET
-- On PLUS reduce production regex_pattern -> CARET
-- On LPAREN reduce production regex_pattern -> CARET
-- On LBRACE reduce production regex_pattern -> CARET
-- On DOT reduce production regex_pattern -> CARET
-- On DOLLAR reduce production regex_pattern -> CARET
-- On CARET reduce production regex_pattern -> CARET
-- On ALTERNATE reduce production regex_pattern -> CARET

State 400:
regex_pattern_alternate -> regex_pattern_sequence . [ SLASHFLAGS SLASH RPAREN ]
regex_pattern_alternate -> regex_pattern_sequence . ALTERNATE regex_pattern_alternate [ SLASHFLAGS SLASH RPAREN ]
-- On ALTERNATE shift to state 401
-- On SLASHFLAGS reduce production regex_pattern_alternate -> regex_pattern_sequence
-- On SLASH reduce production regex_pattern_alternate -> regex_pattern_sequence
-- On RPAREN reduce production regex_pattern_alternate -> regex_pattern_sequence

State 401:
regex_pattern_alternate -> regex_pattern_sequence ALTERNATE . regex_pattern_alternate [ SLASHFLAGS SLASH RPAREN ]
-- On STRING shift to state 393
-- On RANGE shift to state 394
-- On QUOTEDMETA shift to state 395
-- On LPAREN shift to state 396
-- On LBRACE shift to state 278
-- On DOT shift to state 397
-- On DOLLAR shift to state 398
-- On CARET shift to state 399
-- On regex_pattern_sequence shift to state 400
-- On regex_pattern_alternate shift to state 402
-- On regex_pattern shift to state 403
-- On block shift to state 408

State 402:
regex_pattern_alternate -> regex_pattern_sequence ALTERNATE regex_pattern_alternate . [ SLASHFLAGS SLASH RPAREN ]
-- On SLASHFLAGS reduce production regex_pattern_alternate -> regex_pattern_sequence ALTERNATE regex_pattern_alternate
-- On SLASH reduce production regex_pattern_alternate -> regex_pattern_sequence ALTERNATE regex_pattern_alternate
-- On RPAREN reduce production regex_pattern_alternate -> regex_pattern_sequence ALTERNATE regex_pattern_alternate

State 403:
regex_pattern -> regex_pattern . STAR [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
regex_pattern -> regex_pattern . PLUS [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
regex_pattern -> regex_pattern . QUESTION [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
regex_pattern_sequence -> regex_pattern . [ SLASHFLAGS SLASH RPAREN ALTERNATE ]
regex_pattern_sequence -> regex_pattern . regex_pattern_sequence [ SLASHFLAGS SLASH RPAREN ALTERNATE ]
-- On STRING shift to state 393
-- On STAR shift to state 404
-- On RANGE shift to state 394
-- On QUOTEDMETA shift to state 395
-- On QUESTION shift to state 405
-- On PLUS shift to state 406
-- On LPAREN shift to state 396
-- On LBRACE shift to state 278
-- On DOT shift to state 397
-- On DOLLAR shift to state 398
-- On CARET shift to state 399
-- On regex_pattern_sequence shift to state 407
-- On regex_pattern shift to state 403
-- On block shift to state 408
-- On SLASHFLAGS reduce production regex_pattern_sequence -> regex_pattern
-- On SLASH reduce production regex_pattern_sequence -> regex_pattern
-- On RPAREN reduce production regex_pattern_sequence -> regex_pattern
-- On ALTERNATE reduce production regex_pattern_sequence -> regex_pattern

State 404:
regex_pattern -> regex_pattern STAR . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> regex_pattern STAR
-- On STAR reduce production regex_pattern -> regex_pattern STAR
-- On SLASHFLAGS reduce production regex_pattern -> regex_pattern STAR
-- On SLASH reduce production regex_pattern -> regex_pattern STAR
-- On RPAREN reduce production regex_pattern -> regex_pattern STAR
-- On RANGE reduce production regex_pattern -> regex_pattern STAR
-- On QUOTEDMETA reduce production regex_pattern -> regex_pattern STAR
-- On QUESTION reduce production regex_pattern -> regex_pattern STAR
-- On PLUS reduce production regex_pattern -> regex_pattern STAR
-- On LPAREN reduce production regex_pattern -> regex_pattern STAR
-- On LBRACE reduce production regex_pattern -> regex_pattern STAR
-- On DOT reduce production regex_pattern -> regex_pattern STAR
-- On DOLLAR reduce production regex_pattern -> regex_pattern STAR
-- On CARET reduce production regex_pattern -> regex_pattern STAR
-- On ALTERNATE reduce production regex_pattern -> regex_pattern STAR

State 405:
regex_pattern -> regex_pattern QUESTION . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> regex_pattern QUESTION
-- On STAR reduce production regex_pattern -> regex_pattern QUESTION
-- On SLASHFLAGS reduce production regex_pattern -> regex_pattern QUESTION
-- On SLASH reduce production regex_pattern -> regex_pattern QUESTION
-- On RPAREN reduce production regex_pattern -> regex_pattern QUESTION
-- On RANGE reduce production regex_pattern -> regex_pattern QUESTION
-- On QUOTEDMETA reduce production regex_pattern -> regex_pattern QUESTION
-- On QUESTION reduce production regex_pattern -> regex_pattern QUESTION
-- On PLUS reduce production regex_pattern -> regex_pattern QUESTION
-- On LPAREN reduce production regex_pattern -> regex_pattern QUESTION
-- On LBRACE reduce production regex_pattern -> regex_pattern QUESTION
-- On DOT reduce production regex_pattern -> regex_pattern QUESTION
-- On DOLLAR reduce production regex_pattern -> regex_pattern QUESTION
-- On CARET reduce production regex_pattern -> regex_pattern QUESTION
-- On ALTERNATE reduce production regex_pattern -> regex_pattern QUESTION

State 406:
regex_pattern -> regex_pattern PLUS . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> regex_pattern PLUS
-- On STAR reduce production regex_pattern -> regex_pattern PLUS
-- On SLASHFLAGS reduce production regex_pattern -> regex_pattern PLUS
-- On SLASH reduce production regex_pattern -> regex_pattern PLUS
-- On RPAREN reduce production regex_pattern -> regex_pattern PLUS
-- On RANGE reduce production regex_pattern -> regex_pattern PLUS
-- On QUOTEDMETA reduce production regex_pattern -> regex_pattern PLUS
-- On QUESTION reduce production regex_pattern -> regex_pattern PLUS
-- On PLUS reduce production regex_pattern -> regex_pattern PLUS
-- On LPAREN reduce production regex_pattern -> regex_pattern PLUS
-- On LBRACE reduce production regex_pattern -> regex_pattern PLUS
-- On DOT reduce production regex_pattern -> regex_pattern PLUS
-- On DOLLAR reduce production regex_pattern -> regex_pattern PLUS
-- On CARET reduce production regex_pattern -> regex_pattern PLUS
-- On ALTERNATE reduce production regex_pattern -> regex_pattern PLUS

State 407:
regex_pattern_sequence -> regex_pattern regex_pattern_sequence . [ SLASHFLAGS SLASH RPAREN ALTERNATE ]
-- On SLASHFLAGS reduce production regex_pattern_sequence -> regex_pattern regex_pattern_sequence
-- On SLASH reduce production regex_pattern_sequence -> regex_pattern regex_pattern_sequence
-- On RPAREN reduce production regex_pattern_sequence -> regex_pattern regex_pattern_sequence
-- On ALTERNATE reduce production regex_pattern_sequence -> regex_pattern regex_pattern_sequence

State 408:
regex_pattern -> block . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> block
-- On STAR reduce production regex_pattern -> block
-- On SLASHFLAGS reduce production regex_pattern -> block
-- On SLASH reduce production regex_pattern -> block
-- On RPAREN reduce production regex_pattern -> block
-- On RANGE reduce production regex_pattern -> block
-- On QUOTEDMETA reduce production regex_pattern -> block
-- On QUESTION reduce production regex_pattern -> block
-- On PLUS reduce production regex_pattern -> block
-- On LPAREN reduce production regex_pattern -> block
-- On LBRACE reduce production regex_pattern -> block
-- On DOT reduce production regex_pattern -> block
-- On DOLLAR reduce production regex_pattern -> block
-- On CARET reduce production regex_pattern -> block
-- On ALTERNATE reduce production regex_pattern -> block

State 409:
regex_pattern -> LPAREN regex_pattern_alternate . RPAREN [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On RPAREN shift to state 410

State 410:
regex_pattern -> LPAREN regex_pattern_alternate RPAREN . [ STRING STAR SLASHFLAGS SLASH RPAREN RANGE QUOTEDMETA QUESTION PLUS LPAREN LBRACE DOT DOLLAR CARET ALTERNATE ]
-- On STRING reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On STAR reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On SLASHFLAGS reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On SLASH reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On RPAREN reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On RANGE reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On QUOTEDMETA reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On QUESTION reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On PLUS reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On LPAREN reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On LBRACE reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On DOT reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On DOLLAR reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On CARET reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN
-- On ALTERNATE reduce production regex_pattern -> LPAREN regex_pattern_alternate RPAREN

State 411:
regex -> SSLASH regex_pattern_alternate . SLASH regex_replace regex_flags_opt [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On SLASH shift to state 412

State 412:
regex -> SSLASH regex_pattern_alternate SLASH . regex_replace regex_flags_opt [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On REGEXREPL shift to state 413
-- On LBRACE shift to state 278
-- On regex_replace shift to state 414
-- On block shift to state 418
-- On SLASHFLAGS reduce production regex_replace -> 
-- On SLASH reduce production regex_replace -> 

State 413:
regex_replace -> REGEXREPL . [ SLASHFLAGS SLASH ]
-- On SLASHFLAGS reduce production regex_replace -> REGEXREPL
-- On SLASH reduce production regex_replace -> REGEXREPL

State 414:
regex -> SSLASH regex_pattern_alternate SLASH regex_replace . regex_flags_opt [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On SLASHFLAGS shift to state 415
-- On SLASH shift to state 416
-- On regex_flags_opt shift to state 417

State 415:
regex_flags_opt -> SLASHFLAGS . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production regex_flags_opt -> SLASHFLAGS
-- On VBAR reduce production regex_flags_opt -> SLASHFLAGS
-- On VALUES reduce production regex_flags_opt -> SLASHFLAGS
-- On SEMICOLON reduce production regex_flags_opt -> SLASHFLAGS
-- On RPAREN reduce production regex_flags_opt -> SLASHFLAGS
-- On RETURNING reduce production regex_flags_opt -> SLASHFLAGS
-- On RBRACKET reduce production regex_flags_opt -> SLASHFLAGS
-- On RBRACE reduce production regex_flags_opt -> SLASHFLAGS
-- On RARROW reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXR3 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXR2 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXR1 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXR0 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXL4 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXL3 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXL2 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXL1 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIXL0 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIX3 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIX2 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIX1 reduce production regex_flags_opt -> SLASHFLAGS
-- On INFIX0 reduce production regex_flags_opt -> SLASHFLAGS
-- On FATRARROW reduce production regex_flags_opt -> SLASHFLAGS
-- On END reduce production regex_flags_opt -> SLASHFLAGS
-- On ELSE reduce production regex_flags_opt -> SLASHFLAGS
-- On DOTDOT reduce production regex_flags_opt -> SLASHFLAGS
-- On COMMA reduce production regex_flags_opt -> SLASHFLAGS
-- On COLON reduce production regex_flags_opt -> SLASHFLAGS
-- On CASE reduce production regex_flags_opt -> SLASHFLAGS
-- On BARRBRACE reduce production regex_flags_opt -> SLASHFLAGS
-- On BARBAR reduce production regex_flags_opt -> SLASHFLAGS
-- On AMPAMP reduce production regex_flags_opt -> SLASHFLAGS

State 416:
regex_flags_opt -> SLASH . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production regex_flags_opt -> SLASH
-- On VBAR reduce production regex_flags_opt -> SLASH
-- On VALUES reduce production regex_flags_opt -> SLASH
-- On SEMICOLON reduce production regex_flags_opt -> SLASH
-- On RPAREN reduce production regex_flags_opt -> SLASH
-- On RETURNING reduce production regex_flags_opt -> SLASH
-- On RBRACKET reduce production regex_flags_opt -> SLASH
-- On RBRACE reduce production regex_flags_opt -> SLASH
-- On RARROW reduce production regex_flags_opt -> SLASH
-- On INFIXR3 reduce production regex_flags_opt -> SLASH
-- On INFIXR2 reduce production regex_flags_opt -> SLASH
-- On INFIXR1 reduce production regex_flags_opt -> SLASH
-- On INFIXR0 reduce production regex_flags_opt -> SLASH
-- On INFIXL4 reduce production regex_flags_opt -> SLASH
-- On INFIXL3 reduce production regex_flags_opt -> SLASH
-- On INFIXL2 reduce production regex_flags_opt -> SLASH
-- On INFIXL1 reduce production regex_flags_opt -> SLASH
-- On INFIXL0 reduce production regex_flags_opt -> SLASH
-- On INFIX3 reduce production regex_flags_opt -> SLASH
-- On INFIX2 reduce production regex_flags_opt -> SLASH
-- On INFIX1 reduce production regex_flags_opt -> SLASH
-- On INFIX0 reduce production regex_flags_opt -> SLASH
-- On FATRARROW reduce production regex_flags_opt -> SLASH
-- On END reduce production regex_flags_opt -> SLASH
-- On ELSE reduce production regex_flags_opt -> SLASH
-- On DOTDOT reduce production regex_flags_opt -> SLASH
-- On COMMA reduce production regex_flags_opt -> SLASH
-- On COLON reduce production regex_flags_opt -> SLASH
-- On CASE reduce production regex_flags_opt -> SLASH
-- On BARRBRACE reduce production regex_flags_opt -> SLASH
-- On BARBAR reduce production regex_flags_opt -> SLASH
-- On AMPAMP reduce production regex_flags_opt -> SLASH

State 417:
regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On VBAR reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On VALUES reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On SEMICOLON reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On RPAREN reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On RETURNING reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On RBRACKET reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On RBRACE reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On RARROW reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXR3 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXR2 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXR1 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXR0 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXL4 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXL3 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXL2 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXL1 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIXL0 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIX3 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIX2 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIX1 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On INFIX0 reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On FATRARROW reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On END reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On ELSE reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On DOTDOT reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On COMMA reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On COLON reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On CASE reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On BARRBRACE reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On BARBAR reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt
-- On AMPAMP reduce production regex -> SSLASH regex_pattern_alternate SLASH regex_replace regex_flags_opt

State 418:
regex_replace -> block . [ SLASHFLAGS SLASH ]
-- On SLASHFLAGS reduce production regex_replace -> block
-- On SLASH reduce production regex_replace -> block

State 419:
regex -> SLASH . regex_pattern_alternate regex_flags_opt [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
regex -> SLASH . regex_flags_opt [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On STRING shift to state 393
-- On SLASHFLAGS shift to state 415
-- On SLASH shift to state 416
-- On RANGE shift to state 394
-- On QUOTEDMETA shift to state 395
-- On LPAREN shift to state 396
-- On LBRACE shift to state 278
-- On DOT shift to state 397
-- On DOLLAR shift to state 398
-- On CARET shift to state 399
-- On regex_pattern_sequence shift to state 400
-- On regex_pattern_alternate shift to state 420
-- On regex_pattern shift to state 403
-- On regex_flags_opt shift to state 422
-- On block shift to state 408

State 420:
regex -> SLASH regex_pattern_alternate . regex_flags_opt [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On SLASHFLAGS shift to state 415
-- On SLASH shift to state 416
-- On regex_flags_opt shift to state 421

State 421:
regex -> SLASH regex_pattern_alternate regex_flags_opt . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On VBAR reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On VALUES reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On SEMICOLON reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On RPAREN reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On RETURNING reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On RBRACKET reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On RBRACE reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On RARROW reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXR3 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXR2 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXR1 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXR0 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXL4 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXL3 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXL2 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXL1 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIXL0 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIX3 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIX2 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIX1 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On INFIX0 reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On FATRARROW reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On END reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On ELSE reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On DOTDOT reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On COMMA reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On COLON reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On CASE reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On BARRBRACE reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On BARBAR reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt
-- On AMPAMP reduce production regex -> SLASH regex_pattern_alternate regex_flags_opt

State 422:
regex -> SLASH regex_flags_opt . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production regex -> SLASH regex_flags_opt
-- On VBAR reduce production regex -> SLASH regex_flags_opt
-- On VALUES reduce production regex -> SLASH regex_flags_opt
-- On SEMICOLON reduce production regex -> SLASH regex_flags_opt
-- On RPAREN reduce production regex -> SLASH regex_flags_opt
-- On RETURNING reduce production regex -> SLASH regex_flags_opt
-- On RBRACKET reduce production regex -> SLASH regex_flags_opt
-- On RBRACE reduce production regex -> SLASH regex_flags_opt
-- On RARROW reduce production regex -> SLASH regex_flags_opt
-- On INFIXR3 reduce production regex -> SLASH regex_flags_opt
-- On INFIXR2 reduce production regex -> SLASH regex_flags_opt
-- On INFIXR1 reduce production regex -> SLASH regex_flags_opt
-- On INFIXR0 reduce production regex -> SLASH regex_flags_opt
-- On INFIXL4 reduce production regex -> SLASH regex_flags_opt
-- On INFIXL3 reduce production regex -> SLASH regex_flags_opt
-- On INFIXL2 reduce production regex -> SLASH regex_flags_opt
-- On INFIXL1 reduce production regex -> SLASH regex_flags_opt
-- On INFIXL0 reduce production regex -> SLASH regex_flags_opt
-- On INFIX3 reduce production regex -> SLASH regex_flags_opt
-- On INFIX2 reduce production regex -> SLASH regex_flags_opt
-- On INFIX1 reduce production regex -> SLASH regex_flags_opt
-- On INFIX0 reduce production regex -> SLASH regex_flags_opt
-- On FATRARROW reduce production regex -> SLASH regex_flags_opt
-- On END reduce production regex -> SLASH regex_flags_opt
-- On ELSE reduce production regex -> SLASH regex_flags_opt
-- On DOTDOT reduce production regex -> SLASH regex_flags_opt
-- On COMMA reduce production regex -> SLASH regex_flags_opt
-- On COLON reduce production regex -> SLASH regex_flags_opt
-- On CASE reduce production regex -> SLASH regex_flags_opt
-- On BARRBRACE reduce production regex -> SLASH regex_flags_opt
-- On BARBAR reduce production regex -> SLASH regex_flags_opt
-- On AMPAMP reduce production regex -> SLASH regex_flags_opt

State 423:
infixr_4 -> infixr_5 EQUALSTILDE regex . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On VBAR reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On VALUES reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On SEMICOLON reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On RPAREN reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On RETURNING reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On RBRACKET reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On RBRACE reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On RARROW reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXR3 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXR2 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXR1 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXR0 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXL4 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXL3 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXL2 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXL1 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIXL0 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIX3 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIX2 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIX1 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On INFIX0 reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On FATRARROW reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On END reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On ELSE reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On DOTDOT reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On COMMA reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On COLON reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On CASE reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On BARRBRACE reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On BARBAR reduce production infixr_4 -> infixr_5 EQUALSTILDE regex
-- On AMPAMP reduce production infixr_4 -> infixr_5 EQUALSTILDE regex

State 424:
infixl_4 -> infixr_4 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_4 -> infixr_4
-- On VBAR reduce production infixl_4 -> infixr_4
-- On VALUES reduce production infixl_4 -> infixr_4
-- On SEMICOLON reduce production infixl_4 -> infixr_4
-- On RPAREN reduce production infixl_4 -> infixr_4
-- On RETURNING reduce production infixl_4 -> infixr_4
-- On RBRACKET reduce production infixl_4 -> infixr_4
-- On RBRACE reduce production infixl_4 -> infixr_4
-- On RARROW reduce production infixl_4 -> infixr_4
-- On INFIXR3 reduce production infixl_4 -> infixr_4
-- On INFIXR2 reduce production infixl_4 -> infixr_4
-- On INFIXR1 reduce production infixl_4 -> infixr_4
-- On INFIXR0 reduce production infixl_4 -> infixr_4
-- On INFIXL4 reduce production infixl_4 -> infixr_4
-- On INFIXL3 reduce production infixl_4 -> infixr_4
-- On INFIXL2 reduce production infixl_4 -> infixr_4
-- On INFIXL1 reduce production infixl_4 -> infixr_4
-- On INFIXL0 reduce production infixl_4 -> infixr_4
-- On INFIX3 reduce production infixl_4 -> infixr_4
-- On INFIX2 reduce production infixl_4 -> infixr_4
-- On INFIX1 reduce production infixl_4 -> infixr_4
-- On INFIX0 reduce production infixl_4 -> infixr_4
-- On FATRARROW reduce production infixl_4 -> infixr_4
-- On END reduce production infixl_4 -> infixr_4
-- On ELSE reduce production infixl_4 -> infixr_4
-- On DOTDOT reduce production infixl_4 -> infixr_4
-- On COMMA reduce production infixl_4 -> infixr_4
-- On COLON reduce production infixl_4 -> infixr_4
-- On CASE reduce production infixl_4 -> infixr_4
-- On BARRBRACE reduce production infixl_4 -> infixr_4
-- On BARBAR reduce production infixl_4 -> infixr_4
-- On AMPAMP reduce production infixl_4 -> infixr_4

State 425:
infixl_3 -> infixr_3 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_3 -> infixr_3
-- On VBAR reduce production infixl_3 -> infixr_3
-- On VALUES reduce production infixl_3 -> infixr_3
-- On SEMICOLON reduce production infixl_3 -> infixr_3
-- On RPAREN reduce production infixl_3 -> infixr_3
-- On RETURNING reduce production infixl_3 -> infixr_3
-- On RBRACKET reduce production infixl_3 -> infixr_3
-- On RBRACE reduce production infixl_3 -> infixr_3
-- On RARROW reduce production infixl_3 -> infixr_3
-- On INFIXR2 reduce production infixl_3 -> infixr_3
-- On INFIXR1 reduce production infixl_3 -> infixr_3
-- On INFIXR0 reduce production infixl_3 -> infixr_3
-- On INFIXL3 reduce production infixl_3 -> infixr_3
-- On INFIXL2 reduce production infixl_3 -> infixr_3
-- On INFIXL1 reduce production infixl_3 -> infixr_3
-- On INFIXL0 reduce production infixl_3 -> infixr_3
-- On INFIX2 reduce production infixl_3 -> infixr_3
-- On INFIX1 reduce production infixl_3 -> infixr_3
-- On INFIX0 reduce production infixl_3 -> infixr_3
-- On FATRARROW reduce production infixl_3 -> infixr_3
-- On END reduce production infixl_3 -> infixr_3
-- On ELSE reduce production infixl_3 -> infixr_3
-- On DOTDOT reduce production infixl_3 -> infixr_3
-- On COMMA reduce production infixl_3 -> infixr_3
-- On COLON reduce production infixl_3 -> infixr_3
-- On CASE reduce production infixl_3 -> infixr_3
-- On BARRBRACE reduce production infixl_3 -> infixr_3
-- On BARBAR reduce production infixl_3 -> infixr_3
-- On AMPAMP reduce production infixl_3 -> infixr_3

State 426:
infixl_2 -> infixr_2 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_2 -> infixr_2
-- On VBAR reduce production infixl_2 -> infixr_2
-- On VALUES reduce production infixl_2 -> infixr_2
-- On SEMICOLON reduce production infixl_2 -> infixr_2
-- On RPAREN reduce production infixl_2 -> infixr_2
-- On RETURNING reduce production infixl_2 -> infixr_2
-- On RBRACKET reduce production infixl_2 -> infixr_2
-- On RBRACE reduce production infixl_2 -> infixr_2
-- On RARROW reduce production infixl_2 -> infixr_2
-- On INFIXR1 reduce production infixl_2 -> infixr_2
-- On INFIXR0 reduce production infixl_2 -> infixr_2
-- On INFIXL2 reduce production infixl_2 -> infixr_2
-- On INFIXL1 reduce production infixl_2 -> infixr_2
-- On INFIXL0 reduce production infixl_2 -> infixr_2
-- On INFIX1 reduce production infixl_2 -> infixr_2
-- On INFIX0 reduce production infixl_2 -> infixr_2
-- On FATRARROW reduce production infixl_2 -> infixr_2
-- On END reduce production infixl_2 -> infixr_2
-- On ELSE reduce production infixl_2 -> infixr_2
-- On DOTDOT reduce production infixl_2 -> infixr_2
-- On COMMA reduce production infixl_2 -> infixr_2
-- On COLON reduce production infixl_2 -> infixr_2
-- On CASE reduce production infixl_2 -> infixr_2
-- On BARRBRACE reduce production infixl_2 -> infixr_2
-- On BARBAR reduce production infixl_2 -> infixr_2
-- On AMPAMP reduce production infixl_2 -> infixr_2

State 427:
infixl_1 -> infixr_1 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR0 INFIXL1 INFIXL0 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_1 -> infixr_1
-- On VBAR reduce production infixl_1 -> infixr_1
-- On VALUES reduce production infixl_1 -> infixr_1
-- On SEMICOLON reduce production infixl_1 -> infixr_1
-- On RPAREN reduce production infixl_1 -> infixr_1
-- On RETURNING reduce production infixl_1 -> infixr_1
-- On RBRACKET reduce production infixl_1 -> infixr_1
-- On RBRACE reduce production infixl_1 -> infixr_1
-- On RARROW reduce production infixl_1 -> infixr_1
-- On INFIXR0 reduce production infixl_1 -> infixr_1
-- On INFIXL1 reduce production infixl_1 -> infixr_1
-- On INFIXL0 reduce production infixl_1 -> infixr_1
-- On INFIX0 reduce production infixl_1 -> infixr_1
-- On FATRARROW reduce production infixl_1 -> infixr_1
-- On END reduce production infixl_1 -> infixr_1
-- On ELSE reduce production infixl_1 -> infixr_1
-- On DOTDOT reduce production infixl_1 -> infixr_1
-- On COMMA reduce production infixl_1 -> infixr_1
-- On COLON reduce production infixl_1 -> infixr_1
-- On CASE reduce production infixl_1 -> infixr_1
-- On BARRBRACE reduce production infixl_1 -> infixr_1
-- On BARBAR reduce production infixl_1 -> infixr_1
-- On AMPAMP reduce production infixl_1 -> infixr_1

State 428:
infixl_0 -> infixr_0 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXL0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_0 -> infixr_0
-- On VBAR reduce production infixl_0 -> infixr_0
-- On VALUES reduce production infixl_0 -> infixr_0
-- On SEMICOLON reduce production infixl_0 -> infixr_0
-- On RPAREN reduce production infixl_0 -> infixr_0
-- On RETURNING reduce production infixl_0 -> infixr_0
-- On RBRACKET reduce production infixl_0 -> infixr_0
-- On RBRACE reduce production infixl_0 -> infixr_0
-- On RARROW reduce production infixl_0 -> infixr_0
-- On INFIXL0 reduce production infixl_0 -> infixr_0
-- On FATRARROW reduce production infixl_0 -> infixr_0
-- On END reduce production infixl_0 -> infixr_0
-- On ELSE reduce production infixl_0 -> infixr_0
-- On DOTDOT reduce production infixl_0 -> infixr_0
-- On COMMA reduce production infixl_0 -> infixr_0
-- On COLON reduce production infixl_0 -> infixr_0
-- On CASE reduce production infixl_0 -> infixr_0
-- On BARRBRACE reduce production infixl_0 -> infixr_0
-- On BARBAR reduce production infixl_0 -> infixr_0
-- On AMPAMP reduce production infixl_0 -> infixr_0

State 429:
infixl_9 -> infixl_9 . INFIXL9 infixr_9 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_8 -> infixl_9 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_8 -> infixl_9 . INFIX8 infixl_9 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_8 -> infixl_9 . INFIXR8 infixr_8 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_8 -> infixl_9 . COLONCOLON infixr_8 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXR8 shift to state 430
-- On INFIXL9 shift to state 432
-- On INFIX8 shift to state 434
-- On COLONCOLON shift to state 436
-- On WITH reduce production infixr_8 -> infixl_9
-- On VBAR reduce production infixr_8 -> infixl_9
-- On VALUES reduce production infixr_8 -> infixl_9
-- On SEMICOLON reduce production infixr_8 -> infixl_9
-- On RPAREN reduce production infixr_8 -> infixl_9
-- On RETURNING reduce production infixr_8 -> infixl_9
-- On RBRACKET reduce production infixr_8 -> infixl_9
-- On RBRACE reduce production infixr_8 -> infixl_9
-- On RARROW reduce production infixr_8 -> infixl_9
-- On MINUSDOT reduce production infixr_8 -> infixl_9
-- On MINUS reduce production infixr_8 -> infixl_9
-- On INFIXR7 reduce production infixr_8 -> infixl_9
-- On INFIXR6 reduce production infixr_8 -> infixl_9
-- On INFIXR5 reduce production infixr_8 -> infixl_9
-- On INFIXR4 reduce production infixr_8 -> infixl_9
-- On INFIXR3 reduce production infixr_8 -> infixl_9
-- On INFIXR2 reduce production infixr_8 -> infixl_9
-- On INFIXR1 reduce production infixr_8 -> infixl_9
-- On INFIXR0 reduce production infixr_8 -> infixl_9
-- On INFIXL8 reduce production infixr_8 -> infixl_9
-- On INFIXL7 reduce production infixr_8 -> infixl_9
-- On INFIXL6 reduce production infixr_8 -> infixl_9
-- On INFIXL5 reduce production infixr_8 -> infixl_9
-- On INFIXL4 reduce production infixr_8 -> infixl_9
-- On INFIXL3 reduce production infixr_8 -> infixl_9
-- On INFIXL2 reduce production infixr_8 -> infixl_9
-- On INFIXL1 reduce production infixr_8 -> infixl_9
-- On INFIXL0 reduce production infixr_8 -> infixl_9
-- On INFIX7 reduce production infixr_8 -> infixl_9
-- On INFIX6 reduce production infixr_8 -> infixl_9
-- On INFIX5 reduce production infixr_8 -> infixl_9
-- On INFIX4 reduce production infixr_8 -> infixl_9
-- On INFIX3 reduce production infixr_8 -> infixl_9
-- On INFIX2 reduce production infixr_8 -> infixl_9
-- On INFIX1 reduce production infixr_8 -> infixl_9
-- On INFIX0 reduce production infixr_8 -> infixl_9
-- On FATRARROW reduce production infixr_8 -> infixl_9
-- On EQUALSTILDE reduce production infixr_8 -> infixl_9
-- On END reduce production infixr_8 -> infixl_9
-- On ELSE reduce production infixr_8 -> infixl_9
-- On DOTDOT reduce production infixr_8 -> infixl_9
-- On COMMA reduce production infixr_8 -> infixl_9
-- On COLON reduce production infixr_8 -> infixl_9
-- On CASE reduce production infixr_8 -> infixl_9
-- On BARRBRACE reduce production infixr_8 -> infixl_9
-- On BARBAR reduce production infixr_8 -> infixl_9
-- On AMPAMP reduce production infixr_8 -> infixl_9

State 430:
infixr_8 -> infixl_9 INFIXR8 . infixr_8 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 431
-- On infixl_9 shift to state 429
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 431:
infixr_8 -> infixl_9 INFIXR8 infixr_8 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On VBAR reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On VALUES reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On SEMICOLON reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On RPAREN reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On RETURNING reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On RBRACKET reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On RBRACE reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On RARROW reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On MINUSDOT reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On MINUS reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXR7 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXR6 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXR5 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXR4 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXR3 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXR2 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXR1 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXR0 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL8 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL7 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL6 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL5 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL4 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL3 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL2 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL1 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIXL0 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIX7 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIX6 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIX5 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIX4 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIX3 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIX2 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIX1 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On INFIX0 reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On FATRARROW reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On EQUALSTILDE reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On END reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On ELSE reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On DOTDOT reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On COMMA reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On COLON reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On CASE reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On BARRBRACE reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On BARBAR reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8
-- On AMPAMP reduce production infixr_8 -> infixl_9 INFIXR8 infixr_8

State 432:
infixl_9 -> infixl_9 INFIXL9 . infixr_9 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 433
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 433:
infixl_9 -> infixl_9 INFIXL9 infixr_9 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On VBAR reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On VALUES reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On SEMICOLON reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On RPAREN reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On RETURNING reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On RBRACKET reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On RBRACE reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On RARROW reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On MINUSDOT reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On MINUS reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR8 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR7 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR6 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR5 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR4 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR3 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR2 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR1 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXR0 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL9 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL8 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL7 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL6 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL5 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL4 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL3 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL2 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL1 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIXL0 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX8 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX7 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX6 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX5 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX4 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX3 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX2 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX1 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On INFIX0 reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On FATRARROW reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On EQUALSTILDE reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On END reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On ELSE reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On DOTDOT reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On COMMA reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On COLONCOLON reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On COLON reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On CASE reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On BARRBRACE reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On BARBAR reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9
-- On AMPAMP reduce production infixl_9 -> infixl_9 INFIXL9 infixr_9

State 434:
infixr_8 -> infixl_9 INFIX8 . infixl_9 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixl_9 shift to state 435
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 435:
infixl_9 -> infixl_9 . INFIXL9 infixr_9 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_8 -> infixl_9 INFIX8 infixl_9 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXL9 shift to state 432
-- On WITH reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On VBAR reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On VALUES reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On SEMICOLON reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On RPAREN reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On RETURNING reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On RBRACKET reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On RBRACE reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On RARROW reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On MINUSDOT reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On MINUS reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXR7 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXR6 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXR5 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXR4 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXR3 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXR2 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXR1 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXR0 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL8 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL7 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL6 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL5 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL4 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL3 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL2 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL1 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIXL0 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIX7 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIX6 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIX5 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIX4 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIX3 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIX2 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIX1 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On INFIX0 reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On FATRARROW reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On EQUALSTILDE reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On END reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On ELSE reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On DOTDOT reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On COMMA reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On COLON reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On CASE reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On BARRBRACE reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On BARBAR reduce production infixr_8 -> infixl_9 INFIX8 infixl_9
-- On AMPAMP reduce production infixr_8 -> infixl_9 INFIX8 infixl_9

State 436:
infixr_8 -> infixl_9 COLONCOLON . infixr_8 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 437
-- On infixl_9 shift to state 429
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 437:
infixr_8 -> infixl_9 COLONCOLON infixr_8 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On VBAR reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On VALUES reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On SEMICOLON reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On RPAREN reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On RETURNING reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On RBRACKET reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On RBRACE reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On RARROW reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On MINUSDOT reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On MINUS reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXR7 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXR6 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXR5 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXR4 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXR3 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXR2 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXR1 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXR0 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL8 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL7 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL6 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL5 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL4 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL3 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL2 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL1 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIXL0 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIX7 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIX6 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIX5 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIX4 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIX3 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIX2 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIX1 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On INFIX0 reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On FATRARROW reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On EQUALSTILDE reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On END reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On ELSE reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On DOTDOT reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On COMMA reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On COLON reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On CASE reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On BARRBRACE reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On BARBAR reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8
-- On AMPAMP reduce production infixr_8 -> infixl_9 COLONCOLON infixr_8

State 438:
infixl_8 -> infixl_8 . INFIXL8 infixr_8 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_7 -> infixl_8 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_7 -> infixl_8 . INFIX7 infixl_8 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_7 -> infixl_8 . INFIXR7 infixr_7 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXR7 shift to state 439
-- On INFIXL8 shift to state 441
-- On INFIX7 shift to state 443
-- On WITH reduce production infixr_7 -> infixl_8
-- On VBAR reduce production infixr_7 -> infixl_8
-- On VALUES reduce production infixr_7 -> infixl_8
-- On SEMICOLON reduce production infixr_7 -> infixl_8
-- On RPAREN reduce production infixr_7 -> infixl_8
-- On RETURNING reduce production infixr_7 -> infixl_8
-- On RBRACKET reduce production infixr_7 -> infixl_8
-- On RBRACE reduce production infixr_7 -> infixl_8
-- On RARROW reduce production infixr_7 -> infixl_8
-- On MINUSDOT reduce production infixr_7 -> infixl_8
-- On MINUS reduce production infixr_7 -> infixl_8
-- On INFIXR6 reduce production infixr_7 -> infixl_8
-- On INFIXR5 reduce production infixr_7 -> infixl_8
-- On INFIXR4 reduce production infixr_7 -> infixl_8
-- On INFIXR3 reduce production infixr_7 -> infixl_8
-- On INFIXR2 reduce production infixr_7 -> infixl_8
-- On INFIXR1 reduce production infixr_7 -> infixl_8
-- On INFIXR0 reduce production infixr_7 -> infixl_8
-- On INFIXL7 reduce production infixr_7 -> infixl_8
-- On INFIXL6 reduce production infixr_7 -> infixl_8
-- On INFIXL5 reduce production infixr_7 -> infixl_8
-- On INFIXL4 reduce production infixr_7 -> infixl_8
-- On INFIXL3 reduce production infixr_7 -> infixl_8
-- On INFIXL2 reduce production infixr_7 -> infixl_8
-- On INFIXL1 reduce production infixr_7 -> infixl_8
-- On INFIXL0 reduce production infixr_7 -> infixl_8
-- On INFIX6 reduce production infixr_7 -> infixl_8
-- On INFIX5 reduce production infixr_7 -> infixl_8
-- On INFIX4 reduce production infixr_7 -> infixl_8
-- On INFIX3 reduce production infixr_7 -> infixl_8
-- On INFIX2 reduce production infixr_7 -> infixl_8
-- On INFIX1 reduce production infixr_7 -> infixl_8
-- On INFIX0 reduce production infixr_7 -> infixl_8
-- On FATRARROW reduce production infixr_7 -> infixl_8
-- On EQUALSTILDE reduce production infixr_7 -> infixl_8
-- On END reduce production infixr_7 -> infixl_8
-- On ELSE reduce production infixr_7 -> infixl_8
-- On DOTDOT reduce production infixr_7 -> infixl_8
-- On COMMA reduce production infixr_7 -> infixl_8
-- On COLON reduce production infixr_7 -> infixl_8
-- On CASE reduce production infixr_7 -> infixl_8
-- On BARRBRACE reduce production infixr_7 -> infixl_8
-- On BARBAR reduce production infixr_7 -> infixl_8
-- On AMPAMP reduce production infixr_7 -> infixl_8

State 439:
infixr_7 -> infixl_8 INFIXR7 . infixr_7 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 440
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 440:
infixr_7 -> infixl_8 INFIXR7 infixr_7 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On VBAR reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On VALUES reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On SEMICOLON reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On RPAREN reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On RETURNING reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On RBRACKET reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On RBRACE reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On RARROW reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On MINUSDOT reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On MINUS reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXR6 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXR5 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXR4 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXR3 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXR2 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXR1 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXR0 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXL7 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXL6 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXL5 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXL4 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXL3 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXL2 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXL1 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIXL0 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIX6 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIX5 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIX4 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIX3 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIX2 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIX1 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On INFIX0 reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On FATRARROW reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On EQUALSTILDE reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On END reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On ELSE reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On DOTDOT reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On COMMA reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On COLON reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On CASE reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On BARRBRACE reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On BARBAR reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7
-- On AMPAMP reduce production infixr_7 -> infixl_8 INFIXR7 infixr_7

State 441:
infixl_8 -> infixl_8 INFIXL8 . infixr_8 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 442
-- On infixl_9 shift to state 429
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 442:
infixl_8 -> infixl_8 INFIXL8 infixr_8 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On VBAR reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On VALUES reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On SEMICOLON reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On RPAREN reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On RETURNING reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On RBRACKET reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On RBRACE reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On RARROW reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On MINUSDOT reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On MINUS reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXR7 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXR6 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXR5 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXR4 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXR3 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXR2 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXR1 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXR0 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL8 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL7 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL6 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL5 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL4 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL3 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL2 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL1 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIXL0 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIX7 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIX6 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIX5 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIX4 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIX3 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIX2 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIX1 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On INFIX0 reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On FATRARROW reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On EQUALSTILDE reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On END reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On ELSE reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On DOTDOT reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On COMMA reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On COLON reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On CASE reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On BARRBRACE reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On BARBAR reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8
-- On AMPAMP reduce production infixl_8 -> infixl_8 INFIXL8 infixr_8

State 443:
infixr_7 -> infixl_8 INFIX7 . infixl_8 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 444
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 444:
infixl_8 -> infixl_8 . INFIXL8 infixr_8 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_7 -> infixl_8 INFIX7 infixl_8 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXL8 shift to state 441
-- On WITH reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On VBAR reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On VALUES reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On SEMICOLON reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On RPAREN reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On RETURNING reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On RBRACKET reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On RBRACE reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On RARROW reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On MINUSDOT reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On MINUS reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXR6 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXR5 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXR4 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXR3 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXR2 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXR1 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXR0 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXL7 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXL6 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXL5 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXL4 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXL3 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXL2 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXL1 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIXL0 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIX6 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIX5 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIX4 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIX3 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIX2 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIX1 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On INFIX0 reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On FATRARROW reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On EQUALSTILDE reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On END reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On ELSE reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On DOTDOT reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On COMMA reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On COLON reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On CASE reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On BARRBRACE reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On BARBAR reduce production infixr_7 -> infixl_8 INFIX7 infixl_8
-- On AMPAMP reduce production infixr_7 -> infixl_8 INFIX7 infixl_8

State 445:
infixl_7 -> infixl_7 . INFIXL7 infixr_7 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_6 -> infixl_7 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_6 -> infixl_7 . INFIX6 infixl_7 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_6 -> infixl_7 . INFIXR6 infixr_6 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXR6 shift to state 446
-- On INFIXL7 shift to state 448
-- On INFIX6 shift to state 450
-- On WITH reduce production infixr_6 -> infixl_7
-- On VBAR reduce production infixr_6 -> infixl_7
-- On VALUES reduce production infixr_6 -> infixl_7
-- On SEMICOLON reduce production infixr_6 -> infixl_7
-- On RPAREN reduce production infixr_6 -> infixl_7
-- On RETURNING reduce production infixr_6 -> infixl_7
-- On RBRACKET reduce production infixr_6 -> infixl_7
-- On RBRACE reduce production infixr_6 -> infixl_7
-- On RARROW reduce production infixr_6 -> infixl_7
-- On MINUSDOT reduce production infixr_6 -> infixl_7
-- On MINUS reduce production infixr_6 -> infixl_7
-- On INFIXR5 reduce production infixr_6 -> infixl_7
-- On INFIXR4 reduce production infixr_6 -> infixl_7
-- On INFIXR3 reduce production infixr_6 -> infixl_7
-- On INFIXR2 reduce production infixr_6 -> infixl_7
-- On INFIXR1 reduce production infixr_6 -> infixl_7
-- On INFIXR0 reduce production infixr_6 -> infixl_7
-- On INFIXL6 reduce production infixr_6 -> infixl_7
-- On INFIXL5 reduce production infixr_6 -> infixl_7
-- On INFIXL4 reduce production infixr_6 -> infixl_7
-- On INFIXL3 reduce production infixr_6 -> infixl_7
-- On INFIXL2 reduce production infixr_6 -> infixl_7
-- On INFIXL1 reduce production infixr_6 -> infixl_7
-- On INFIXL0 reduce production infixr_6 -> infixl_7
-- On INFIX5 reduce production infixr_6 -> infixl_7
-- On INFIX4 reduce production infixr_6 -> infixl_7
-- On INFIX3 reduce production infixr_6 -> infixl_7
-- On INFIX2 reduce production infixr_6 -> infixl_7
-- On INFIX1 reduce production infixr_6 -> infixl_7
-- On INFIX0 reduce production infixr_6 -> infixl_7
-- On FATRARROW reduce production infixr_6 -> infixl_7
-- On EQUALSTILDE reduce production infixr_6 -> infixl_7
-- On END reduce production infixr_6 -> infixl_7
-- On ELSE reduce production infixr_6 -> infixl_7
-- On DOTDOT reduce production infixr_6 -> infixl_7
-- On COMMA reduce production infixr_6 -> infixl_7
-- On COLON reduce production infixr_6 -> infixl_7
-- On CASE reduce production infixr_6 -> infixl_7
-- On BARRBRACE reduce production infixr_6 -> infixl_7
-- On BARBAR reduce production infixr_6 -> infixl_7
-- On AMPAMP reduce production infixr_6 -> infixl_7

State 446:
infixr_6 -> infixl_7 INFIXR6 . infixr_6 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 447
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 447:
infixr_6 -> infixl_7 INFIXR6 infixr_6 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On VBAR reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On VALUES reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On SEMICOLON reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On RPAREN reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On RETURNING reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On RBRACKET reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On RBRACE reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On RARROW reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On MINUSDOT reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On MINUS reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXR5 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXR4 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXR3 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXR2 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXR1 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXR0 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXL6 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXL5 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXL4 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXL3 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXL2 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXL1 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIXL0 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIX5 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIX4 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIX3 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIX2 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIX1 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On INFIX0 reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On FATRARROW reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On EQUALSTILDE reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On END reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On ELSE reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On DOTDOT reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On COMMA reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On COLON reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On CASE reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On BARRBRACE reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On BARBAR reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6
-- On AMPAMP reduce production infixr_6 -> infixl_7 INFIXR6 infixr_6

State 448:
infixl_7 -> infixl_7 INFIXL7 . infixr_7 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 449
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 449:
infixl_7 -> infixl_7 INFIXL7 infixr_7 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On VBAR reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On VALUES reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On SEMICOLON reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On RPAREN reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On RETURNING reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On RBRACKET reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On RBRACE reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On RARROW reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On MINUSDOT reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On MINUS reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXR6 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXR5 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXR4 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXR3 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXR2 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXR1 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXR0 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXL7 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXL6 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXL5 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXL4 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXL3 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXL2 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXL1 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIXL0 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIX6 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIX5 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIX4 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIX3 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIX2 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIX1 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On INFIX0 reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On FATRARROW reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On EQUALSTILDE reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On END reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On ELSE reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On DOTDOT reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On COMMA reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On COLON reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On CASE reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On BARRBRACE reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On BARBAR reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7
-- On AMPAMP reduce production infixl_7 -> infixl_7 INFIXL7 infixr_7

State 450:
infixr_6 -> infixl_7 INFIX6 . infixl_7 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 451
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 451:
infixl_7 -> infixl_7 . INFIXL7 infixr_7 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_6 -> infixl_7 INFIX6 infixl_7 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXL7 shift to state 448
-- On WITH reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On VBAR reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On VALUES reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On SEMICOLON reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On RPAREN reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On RETURNING reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On RBRACKET reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On RBRACE reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On RARROW reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On MINUSDOT reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On MINUS reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXR5 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXR4 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXR3 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXR2 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXR1 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXR0 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXL6 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXL5 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXL4 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXL3 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXL2 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXL1 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIXL0 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIX5 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIX4 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIX3 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIX2 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIX1 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On INFIX0 reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On FATRARROW reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On EQUALSTILDE reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On END reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On ELSE reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On DOTDOT reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On COMMA reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On COLON reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On CASE reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On BARRBRACE reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On BARBAR reduce production infixr_6 -> infixl_7 INFIX6 infixl_7
-- On AMPAMP reduce production infixr_6 -> infixl_7 INFIX6 infixl_7

State 452:
infixl_6 -> infixl_6 . INFIXL6 infixr_6 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixl_6 -> infixl_6 . MINUS infixr_6 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixl_6 -> infixl_6 . MINUSDOT infixr_6 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_5 -> infixl_6 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_5 -> infixl_6 . INFIX5 infixl_6 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_5 -> infixl_6 . INFIXR5 infixr_5 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On MINUSDOT shift to state 453
-- On MINUS shift to state 455
-- On INFIXR5 shift to state 457
-- On INFIXL6 shift to state 459
-- On INFIX5 shift to state 461
-- On WITH reduce production infixr_5 -> infixl_6
-- On VBAR reduce production infixr_5 -> infixl_6
-- On VALUES reduce production infixr_5 -> infixl_6
-- On SEMICOLON reduce production infixr_5 -> infixl_6
-- On RPAREN reduce production infixr_5 -> infixl_6
-- On RETURNING reduce production infixr_5 -> infixl_6
-- On RBRACKET reduce production infixr_5 -> infixl_6
-- On RBRACE reduce production infixr_5 -> infixl_6
-- On RARROW reduce production infixr_5 -> infixl_6
-- On INFIXR4 reduce production infixr_5 -> infixl_6
-- On INFIXR3 reduce production infixr_5 -> infixl_6
-- On INFIXR2 reduce production infixr_5 -> infixl_6
-- On INFIXR1 reduce production infixr_5 -> infixl_6
-- On INFIXR0 reduce production infixr_5 -> infixl_6
-- On INFIXL5 reduce production infixr_5 -> infixl_6
-- On INFIXL4 reduce production infixr_5 -> infixl_6
-- On INFIXL3 reduce production infixr_5 -> infixl_6
-- On INFIXL2 reduce production infixr_5 -> infixl_6
-- On INFIXL1 reduce production infixr_5 -> infixl_6
-- On INFIXL0 reduce production infixr_5 -> infixl_6
-- On INFIX4 reduce production infixr_5 -> infixl_6
-- On INFIX3 reduce production infixr_5 -> infixl_6
-- On INFIX2 reduce production infixr_5 -> infixl_6
-- On INFIX1 reduce production infixr_5 -> infixl_6
-- On INFIX0 reduce production infixr_5 -> infixl_6
-- On FATRARROW reduce production infixr_5 -> infixl_6
-- On EQUALSTILDE reduce production infixr_5 -> infixl_6
-- On END reduce production infixr_5 -> infixl_6
-- On ELSE reduce production infixr_5 -> infixl_6
-- On DOTDOT reduce production infixr_5 -> infixl_6
-- On COMMA reduce production infixr_5 -> infixl_6
-- On COLON reduce production infixr_5 -> infixl_6
-- On CASE reduce production infixr_5 -> infixl_6
-- On BARRBRACE reduce production infixr_5 -> infixl_6
-- On BARBAR reduce production infixr_5 -> infixl_6
-- On AMPAMP reduce production infixr_5 -> infixl_6

State 453:
infixl_6 -> infixl_6 MINUSDOT . infixr_6 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 454
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 454:
infixl_6 -> infixl_6 MINUSDOT infixr_6 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On VBAR reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On VALUES reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On SEMICOLON reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On RPAREN reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On RETURNING reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On RBRACKET reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On RBRACE reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On RARROW reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On MINUSDOT reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On MINUS reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXR5 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXR4 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXR3 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXR2 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXR1 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXR0 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXL6 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXL5 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXL4 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXL3 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXL2 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXL1 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIXL0 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIX5 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIX4 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIX3 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIX2 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIX1 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On INFIX0 reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On FATRARROW reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On EQUALSTILDE reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On END reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On ELSE reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On DOTDOT reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On COMMA reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On COLON reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On CASE reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On BARRBRACE reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On BARBAR reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6
-- On AMPAMP reduce production infixl_6 -> infixl_6 MINUSDOT infixr_6

State 455:
infixl_6 -> infixl_6 MINUS . infixr_6 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 456
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 456:
infixl_6 -> infixl_6 MINUS infixr_6 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On VBAR reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On VALUES reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On SEMICOLON reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On RPAREN reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On RETURNING reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On RBRACKET reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On RBRACE reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On RARROW reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On MINUSDOT reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On MINUS reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXR5 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXR4 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXR3 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXR2 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXR1 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXR0 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXL6 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXL5 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXL4 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXL3 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXL2 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXL1 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIXL0 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIX5 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIX4 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIX3 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIX2 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIX1 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On INFIX0 reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On FATRARROW reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On EQUALSTILDE reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On END reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On ELSE reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On DOTDOT reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On COMMA reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On COLON reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On CASE reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On BARRBRACE reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On BARBAR reduce production infixl_6 -> infixl_6 MINUS infixr_6
-- On AMPAMP reduce production infixl_6 -> infixl_6 MINUS infixr_6

State 457:
infixr_5 -> infixl_6 INFIXR5 . infixr_5 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 458
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 458:
infixr_5 -> infixl_6 INFIXR5 infixr_5 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On VBAR reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On VALUES reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On SEMICOLON reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On RPAREN reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On RETURNING reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On RBRACKET reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On RBRACE reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On RARROW reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXR4 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXR3 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXR2 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXR1 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXR0 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXL5 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXL4 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXL3 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXL2 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXL1 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIXL0 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIX4 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIX3 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIX2 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIX1 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On INFIX0 reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On FATRARROW reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On EQUALSTILDE reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On END reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On ELSE reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On DOTDOT reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On COMMA reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On COLON reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On CASE reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On BARRBRACE reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On BARBAR reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5
-- On AMPAMP reduce production infixr_5 -> infixl_6 INFIXR5 infixr_5

State 459:
infixl_6 -> infixl_6 INFIXL6 . infixr_6 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 460
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 460:
infixl_6 -> infixl_6 INFIXL6 infixr_6 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On VBAR reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On VALUES reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On SEMICOLON reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On RPAREN reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On RETURNING reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On RBRACKET reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On RBRACE reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On RARROW reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On MINUSDOT reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On MINUS reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXR5 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXR4 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXR3 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXR2 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXR1 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXR0 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXL6 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXL5 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXL4 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXL3 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXL2 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXL1 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIXL0 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIX5 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIX4 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIX3 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIX2 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIX1 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On INFIX0 reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On FATRARROW reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On EQUALSTILDE reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On END reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On ELSE reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On DOTDOT reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On COMMA reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On COLON reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On CASE reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On BARRBRACE reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On BARBAR reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6
-- On AMPAMP reduce production infixl_6 -> infixl_6 INFIXL6 infixr_6

State 461:
infixr_5 -> infixl_6 INFIX5 . infixl_6 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 462
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 462:
infixl_6 -> infixl_6 . INFIXL6 infixr_6 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixl_6 -> infixl_6 . MINUS infixr_6 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixl_6 -> infixl_6 . MINUSDOT infixr_6 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_5 -> infixl_6 INFIX5 infixl_6 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On MINUSDOT shift to state 453
-- On MINUS shift to state 455
-- On INFIXL6 shift to state 459
-- On WITH reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On VBAR reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On VALUES reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On SEMICOLON reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On RPAREN reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On RETURNING reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On RBRACKET reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On RBRACE reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On RARROW reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXR4 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXR3 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXR2 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXR1 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXR0 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXL5 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXL4 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXL3 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXL2 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXL1 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIXL0 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIX4 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIX3 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIX2 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIX1 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On INFIX0 reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On FATRARROW reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On EQUALSTILDE reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On END reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On ELSE reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On DOTDOT reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On COMMA reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On COLON reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On CASE reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On BARRBRACE reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On BARBAR reduce production infixr_5 -> infixl_6 INFIX5 infixl_6
-- On AMPAMP reduce production infixr_5 -> infixl_6 INFIX5 infixl_6

State 463:
infixl_5 -> infixl_5 . INFIXL5 infixr_5 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_4 -> infixl_5 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_4 -> infixl_5 . INFIX4 infixl_5 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_4 -> infixl_5 . INFIXR4 infixr_4 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXR4 shift to state 464
-- On INFIXL5 shift to state 466
-- On INFIX4 shift to state 468
-- On WITH reduce production infixr_4 -> infixl_5
-- On VBAR reduce production infixr_4 -> infixl_5
-- On VALUES reduce production infixr_4 -> infixl_5
-- On SEMICOLON reduce production infixr_4 -> infixl_5
-- On RPAREN reduce production infixr_4 -> infixl_5
-- On RETURNING reduce production infixr_4 -> infixl_5
-- On RBRACKET reduce production infixr_4 -> infixl_5
-- On RBRACE reduce production infixr_4 -> infixl_5
-- On RARROW reduce production infixr_4 -> infixl_5
-- On INFIXR3 reduce production infixr_4 -> infixl_5
-- On INFIXR2 reduce production infixr_4 -> infixl_5
-- On INFIXR1 reduce production infixr_4 -> infixl_5
-- On INFIXR0 reduce production infixr_4 -> infixl_5
-- On INFIXL4 reduce production infixr_4 -> infixl_5
-- On INFIXL3 reduce production infixr_4 -> infixl_5
-- On INFIXL2 reduce production infixr_4 -> infixl_5
-- On INFIXL1 reduce production infixr_4 -> infixl_5
-- On INFIXL0 reduce production infixr_4 -> infixl_5
-- On INFIX3 reduce production infixr_4 -> infixl_5
-- On INFIX2 reduce production infixr_4 -> infixl_5
-- On INFIX1 reduce production infixr_4 -> infixl_5
-- On INFIX0 reduce production infixr_4 -> infixl_5
-- On FATRARROW reduce production infixr_4 -> infixl_5
-- On END reduce production infixr_4 -> infixl_5
-- On ELSE reduce production infixr_4 -> infixl_5
-- On DOTDOT reduce production infixr_4 -> infixl_5
-- On COMMA reduce production infixr_4 -> infixl_5
-- On COLON reduce production infixr_4 -> infixl_5
-- On CASE reduce production infixr_4 -> infixl_5
-- On BARRBRACE reduce production infixr_4 -> infixl_5
-- On BARBAR reduce production infixr_4 -> infixl_5
-- On AMPAMP reduce production infixr_4 -> infixl_5

State 464:
infixr_4 -> infixl_5 INFIXR4 . infixr_4 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 465
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 465:
infixr_4 -> infixl_5 INFIXR4 infixr_4 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On VBAR reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On VALUES reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On SEMICOLON reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On RPAREN reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On RETURNING reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On RBRACKET reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On RBRACE reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On RARROW reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXR3 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXR2 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXR1 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXR0 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXL4 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXL3 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXL2 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXL1 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIXL0 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIX3 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIX2 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIX1 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On INFIX0 reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On FATRARROW reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On END reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On ELSE reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On DOTDOT reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On COMMA reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On COLON reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On CASE reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On BARRBRACE reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On BARBAR reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4
-- On AMPAMP reduce production infixr_4 -> infixl_5 INFIXR4 infixr_4

State 466:
infixl_5 -> infixl_5 INFIXL5 . infixr_5 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 467
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 467:
infixl_5 -> infixl_5 INFIXL5 infixr_5 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On VBAR reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On VALUES reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On SEMICOLON reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On RPAREN reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On RETURNING reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On RBRACKET reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On RBRACE reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On RARROW reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXR4 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXR3 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXR2 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXR1 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXR0 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXL5 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXL4 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXL3 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXL2 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXL1 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIXL0 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIX4 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIX3 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIX2 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIX1 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On INFIX0 reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On FATRARROW reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On END reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On ELSE reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On DOTDOT reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On COMMA reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On COLON reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On CASE reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On BARRBRACE reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On BARBAR reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5
-- On AMPAMP reduce production infixl_5 -> infixl_5 INFIXL5 infixr_5

State 468:
infixr_4 -> infixl_5 INFIX4 . infixl_5 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 469
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 470
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 469:
infixl_5 -> infixr_5 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_5 -> infixr_5
-- On VBAR reduce production infixl_5 -> infixr_5
-- On VALUES reduce production infixl_5 -> infixr_5
-- On SEMICOLON reduce production infixl_5 -> infixr_5
-- On RPAREN reduce production infixl_5 -> infixr_5
-- On RETURNING reduce production infixl_5 -> infixr_5
-- On RBRACKET reduce production infixl_5 -> infixr_5
-- On RBRACE reduce production infixl_5 -> infixr_5
-- On RARROW reduce production infixl_5 -> infixr_5
-- On INFIXR3 reduce production infixl_5 -> infixr_5
-- On INFIXR2 reduce production infixl_5 -> infixr_5
-- On INFIXR1 reduce production infixl_5 -> infixr_5
-- On INFIXR0 reduce production infixl_5 -> infixr_5
-- On INFIXL5 reduce production infixl_5 -> infixr_5
-- On INFIXL4 reduce production infixl_5 -> infixr_5
-- On INFIXL3 reduce production infixl_5 -> infixr_5
-- On INFIXL2 reduce production infixl_5 -> infixr_5
-- On INFIXL1 reduce production infixl_5 -> infixr_5
-- On INFIXL0 reduce production infixl_5 -> infixr_5
-- On INFIX3 reduce production infixl_5 -> infixr_5
-- On INFIX2 reduce production infixl_5 -> infixr_5
-- On INFIX1 reduce production infixl_5 -> infixr_5
-- On INFIX0 reduce production infixl_5 -> infixr_5
-- On FATRARROW reduce production infixl_5 -> infixr_5
-- On END reduce production infixl_5 -> infixr_5
-- On ELSE reduce production infixl_5 -> infixr_5
-- On DOTDOT reduce production infixl_5 -> infixr_5
-- On COMMA reduce production infixl_5 -> infixr_5
-- On COLON reduce production infixl_5 -> infixr_5
-- On CASE reduce production infixl_5 -> infixr_5
-- On BARRBRACE reduce production infixl_5 -> infixr_5
-- On BARBAR reduce production infixl_5 -> infixr_5
-- On AMPAMP reduce production infixl_5 -> infixr_5

State 470:
infixl_5 -> infixl_5 . INFIXL5 infixr_5 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_4 -> infixl_5 INFIX4 infixl_5 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXL5 shift to state 466
-- On WITH reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On VBAR reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On VALUES reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On SEMICOLON reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On RPAREN reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On RETURNING reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On RBRACKET reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On RBRACE reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On RARROW reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXR3 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXR2 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXR1 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXR0 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXL4 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXL3 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXL2 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXL1 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIXL0 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIX3 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIX2 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIX1 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On INFIX0 reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On FATRARROW reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On END reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On ELSE reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On DOTDOT reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On COMMA reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On COLON reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On CASE reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On BARRBRACE reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On BARBAR reduce production infixr_4 -> infixl_5 INFIX4 infixl_5
-- On AMPAMP reduce production infixr_4 -> infixl_5 INFIX4 infixl_5

State 471:
infixl_4 -> infixl_4 . INFIXL4 infixr_4 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_3 -> infixl_4 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_3 -> infixl_4 . INFIX3 infixl_4 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_3 -> infixl_4 . INFIXR3 infixr_3 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXR3 shift to state 472
-- On INFIXL4 shift to state 474
-- On INFIX3 shift to state 476
-- On WITH reduce production infixr_3 -> infixl_4
-- On VBAR reduce production infixr_3 -> infixl_4
-- On VALUES reduce production infixr_3 -> infixl_4
-- On SEMICOLON reduce production infixr_3 -> infixl_4
-- On RPAREN reduce production infixr_3 -> infixl_4
-- On RETURNING reduce production infixr_3 -> infixl_4
-- On RBRACKET reduce production infixr_3 -> infixl_4
-- On RBRACE reduce production infixr_3 -> infixl_4
-- On RARROW reduce production infixr_3 -> infixl_4
-- On INFIXR2 reduce production infixr_3 -> infixl_4
-- On INFIXR1 reduce production infixr_3 -> infixl_4
-- On INFIXR0 reduce production infixr_3 -> infixl_4
-- On INFIXL3 reduce production infixr_3 -> infixl_4
-- On INFIXL2 reduce production infixr_3 -> infixl_4
-- On INFIXL1 reduce production infixr_3 -> infixl_4
-- On INFIXL0 reduce production infixr_3 -> infixl_4
-- On INFIX2 reduce production infixr_3 -> infixl_4
-- On INFIX1 reduce production infixr_3 -> infixl_4
-- On INFIX0 reduce production infixr_3 -> infixl_4
-- On FATRARROW reduce production infixr_3 -> infixl_4
-- On END reduce production infixr_3 -> infixl_4
-- On ELSE reduce production infixr_3 -> infixl_4
-- On DOTDOT reduce production infixr_3 -> infixl_4
-- On COMMA reduce production infixr_3 -> infixl_4
-- On COLON reduce production infixr_3 -> infixl_4
-- On CASE reduce production infixr_3 -> infixl_4
-- On BARRBRACE reduce production infixr_3 -> infixl_4
-- On BARBAR reduce production infixr_3 -> infixl_4
-- On AMPAMP reduce production infixr_3 -> infixl_4

State 472:
infixr_3 -> infixl_4 INFIXR3 . infixr_3 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 473
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 473:
infixr_3 -> infixl_4 INFIXR3 infixr_3 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On VBAR reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On VALUES reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On SEMICOLON reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On RPAREN reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On RETURNING reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On RBRACKET reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On RBRACE reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On RARROW reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIXR2 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIXR1 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIXR0 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIXL3 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIXL2 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIXL1 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIXL0 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIX2 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIX1 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On INFIX0 reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On FATRARROW reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On END reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On ELSE reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On DOTDOT reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On COMMA reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On COLON reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On CASE reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On BARRBRACE reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On BARBAR reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3
-- On AMPAMP reduce production infixr_3 -> infixl_4 INFIXR3 infixr_3

State 474:
infixl_4 -> infixl_4 INFIXL4 . infixr_4 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 475
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 475:
infixl_4 -> infixl_4 INFIXL4 infixr_4 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On VBAR reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On VALUES reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On SEMICOLON reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On RPAREN reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On RETURNING reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On RBRACKET reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On RBRACE reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On RARROW reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXR3 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXR2 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXR1 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXR0 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXL4 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXL3 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXL2 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXL1 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIXL0 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIX3 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIX2 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIX1 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On INFIX0 reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On FATRARROW reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On END reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On ELSE reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On DOTDOT reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On COMMA reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On COLON reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On CASE reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On BARRBRACE reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On BARBAR reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4
-- On AMPAMP reduce production infixl_4 -> infixl_4 INFIXL4 infixr_4

State 476:
infixr_3 -> infixl_4 INFIX3 . infixl_4 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 477
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 477:
infixl_4 -> infixl_4 . INFIXL4 infixr_4 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR2 INFIXR1 INFIXR0 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_3 -> infixl_4 INFIX3 infixl_4 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXL4 shift to state 474
-- On WITH reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On VBAR reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On VALUES reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On SEMICOLON reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On RPAREN reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On RETURNING reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On RBRACKET reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On RBRACE reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On RARROW reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIXR2 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIXR1 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIXR0 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIXL3 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIXL2 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIXL1 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIXL0 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIX2 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIX1 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On INFIX0 reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On FATRARROW reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On END reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On ELSE reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On DOTDOT reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On COMMA reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On COLON reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On CASE reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On BARRBRACE reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On BARBAR reduce production infixr_3 -> infixl_4 INFIX3 infixl_4
-- On AMPAMP reduce production infixr_3 -> infixl_4 INFIX3 infixl_4

State 478:
infixl_3 -> infixl_3 . INFIXL3 infixr_3 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_2 -> infixl_3 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_2 -> infixl_3 . INFIX2 infixl_3 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_2 -> infixl_3 . INFIXR2 infixr_2 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXR2 shift to state 479
-- On INFIXL3 shift to state 481
-- On INFIX2 shift to state 483
-- On WITH reduce production infixr_2 -> infixl_3
-- On VBAR reduce production infixr_2 -> infixl_3
-- On VALUES reduce production infixr_2 -> infixl_3
-- On SEMICOLON reduce production infixr_2 -> infixl_3
-- On RPAREN reduce production infixr_2 -> infixl_3
-- On RETURNING reduce production infixr_2 -> infixl_3
-- On RBRACKET reduce production infixr_2 -> infixl_3
-- On RBRACE reduce production infixr_2 -> infixl_3
-- On RARROW reduce production infixr_2 -> infixl_3
-- On INFIXR1 reduce production infixr_2 -> infixl_3
-- On INFIXR0 reduce production infixr_2 -> infixl_3
-- On INFIXL2 reduce production infixr_2 -> infixl_3
-- On INFIXL1 reduce production infixr_2 -> infixl_3
-- On INFIXL0 reduce production infixr_2 -> infixl_3
-- On INFIX1 reduce production infixr_2 -> infixl_3
-- On INFIX0 reduce production infixr_2 -> infixl_3
-- On FATRARROW reduce production infixr_2 -> infixl_3
-- On END reduce production infixr_2 -> infixl_3
-- On ELSE reduce production infixr_2 -> infixl_3
-- On DOTDOT reduce production infixr_2 -> infixl_3
-- On COMMA reduce production infixr_2 -> infixl_3
-- On COLON reduce production infixr_2 -> infixl_3
-- On CASE reduce production infixr_2 -> infixl_3
-- On BARRBRACE reduce production infixr_2 -> infixl_3
-- On BARBAR reduce production infixr_2 -> infixl_3
-- On AMPAMP reduce production infixr_2 -> infixl_3

State 479:
infixr_2 -> infixl_3 INFIXR2 . infixr_2 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 480
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 480:
infixr_2 -> infixl_3 INFIXR2 infixr_2 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On VBAR reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On VALUES reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On SEMICOLON reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On RPAREN reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On RETURNING reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On RBRACKET reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On RBRACE reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On RARROW reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On INFIXR1 reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On INFIXR0 reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On INFIXL2 reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On INFIXL1 reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On INFIXL0 reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On INFIX1 reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On INFIX0 reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On FATRARROW reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On END reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On ELSE reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On DOTDOT reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On COMMA reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On COLON reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On CASE reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On BARRBRACE reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On BARBAR reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2
-- On AMPAMP reduce production infixr_2 -> infixl_3 INFIXR2 infixr_2

State 481:
infixl_3 -> infixl_3 INFIXL3 . infixr_3 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 482
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 482:
infixl_3 -> infixl_3 INFIXL3 infixr_3 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR2 INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX2 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On VBAR reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On VALUES reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On SEMICOLON reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On RPAREN reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On RETURNING reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On RBRACKET reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On RBRACE reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On RARROW reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIXR2 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIXR1 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIXR0 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIXL3 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIXL2 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIXL1 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIXL0 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIX2 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIX1 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On INFIX0 reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On FATRARROW reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On END reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On ELSE reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On DOTDOT reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On COMMA reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On COLON reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On CASE reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On BARRBRACE reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On BARBAR reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3
-- On AMPAMP reduce production infixl_3 -> infixl_3 INFIXL3 infixr_3

State 483:
infixr_2 -> infixl_3 INFIX2 . infixl_3 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 484
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 484:
infixl_3 -> infixl_3 . INFIXL3 infixr_3 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR1 INFIXR0 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_2 -> infixl_3 INFIX2 infixl_3 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXL3 shift to state 481
-- On WITH reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On VBAR reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On VALUES reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On SEMICOLON reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On RPAREN reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On RETURNING reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On RBRACKET reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On RBRACE reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On RARROW reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On INFIXR1 reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On INFIXR0 reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On INFIXL2 reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On INFIXL1 reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On INFIXL0 reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On INFIX1 reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On INFIX0 reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On FATRARROW reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On END reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On ELSE reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On DOTDOT reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On COMMA reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On COLON reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On CASE reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On BARRBRACE reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On BARBAR reduce production infixr_2 -> infixl_3 INFIX2 infixl_3
-- On AMPAMP reduce production infixr_2 -> infixl_3 INFIX2 infixl_3

State 485:
infixl_2 -> infixl_2 . INFIXL2 infixr_2 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_1 -> infixl_2 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR0 INFIXL1 INFIXL0 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_1 -> infixl_2 . INFIX1 infixl_2 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR0 INFIXL1 INFIXL0 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_1 -> infixl_2 . INFIXR1 infixr_1 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR0 INFIXL1 INFIXL0 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXR1 shift to state 486
-- On INFIXL2 shift to state 488
-- On INFIX1 shift to state 490
-- On WITH reduce production infixr_1 -> infixl_2
-- On VBAR reduce production infixr_1 -> infixl_2
-- On VALUES reduce production infixr_1 -> infixl_2
-- On SEMICOLON reduce production infixr_1 -> infixl_2
-- On RPAREN reduce production infixr_1 -> infixl_2
-- On RETURNING reduce production infixr_1 -> infixl_2
-- On RBRACKET reduce production infixr_1 -> infixl_2
-- On RBRACE reduce production infixr_1 -> infixl_2
-- On RARROW reduce production infixr_1 -> infixl_2
-- On INFIXR0 reduce production infixr_1 -> infixl_2
-- On INFIXL1 reduce production infixr_1 -> infixl_2
-- On INFIXL0 reduce production infixr_1 -> infixl_2
-- On INFIX0 reduce production infixr_1 -> infixl_2
-- On FATRARROW reduce production infixr_1 -> infixl_2
-- On END reduce production infixr_1 -> infixl_2
-- On ELSE reduce production infixr_1 -> infixl_2
-- On DOTDOT reduce production infixr_1 -> infixl_2
-- On COMMA reduce production infixr_1 -> infixl_2
-- On COLON reduce production infixr_1 -> infixl_2
-- On CASE reduce production infixr_1 -> infixl_2
-- On BARRBRACE reduce production infixr_1 -> infixl_2
-- On BARBAR reduce production infixr_1 -> infixl_2
-- On AMPAMP reduce production infixr_1 -> infixl_2

State 486:
infixr_1 -> infixl_2 INFIXR1 . infixr_1 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR0 INFIXL1 INFIXL0 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 487
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 487:
infixr_1 -> infixl_2 INFIXR1 infixr_1 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR0 INFIXL1 INFIXL0 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On VBAR reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On VALUES reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On SEMICOLON reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On RPAREN reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On RETURNING reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On RBRACKET reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On RBRACE reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On RARROW reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On INFIXR0 reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On INFIXL1 reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On INFIXL0 reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On INFIX0 reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On FATRARROW reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On END reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On ELSE reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On DOTDOT reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On COMMA reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On COLON reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On CASE reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On BARRBRACE reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On BARBAR reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1
-- On AMPAMP reduce production infixr_1 -> infixl_2 INFIXR1 infixr_1

State 488:
infixl_2 -> infixl_2 INFIXL2 . infixr_2 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 489
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 489:
infixl_2 -> infixl_2 INFIXL2 infixr_2 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR1 INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX1 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On VBAR reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On VALUES reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On SEMICOLON reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On RPAREN reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On RETURNING reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On RBRACKET reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On RBRACE reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On RARROW reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On INFIXR1 reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On INFIXR0 reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On INFIXL2 reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On INFIXL1 reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On INFIXL0 reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On INFIX1 reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On INFIX0 reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On FATRARROW reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On END reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On ELSE reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On DOTDOT reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On COMMA reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On COLON reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On CASE reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On BARRBRACE reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On BARBAR reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2
-- On AMPAMP reduce production infixl_2 -> infixl_2 INFIXL2 infixr_2

State 490:
infixr_1 -> infixl_2 INFIX1 . infixl_2 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR0 INFIXL1 INFIXL0 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 491
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 491:
infixl_2 -> infixl_2 . INFIXL2 infixr_2 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR0 INFIXL2 INFIXL1 INFIXL0 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_1 -> infixl_2 INFIX1 infixl_2 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR0 INFIXL1 INFIXL0 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXL2 shift to state 488
-- On WITH reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On VBAR reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On VALUES reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On SEMICOLON reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On RPAREN reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On RETURNING reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On RBRACKET reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On RBRACE reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On RARROW reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On INFIXR0 reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On INFIXL1 reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On INFIXL0 reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On INFIX0 reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On FATRARROW reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On END reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On ELSE reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On DOTDOT reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On COMMA reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On COLON reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On CASE reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On BARRBRACE reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On BARBAR reduce production infixr_1 -> infixl_2 INFIX1 infixl_2
-- On AMPAMP reduce production infixr_1 -> infixl_2 INFIX1 infixl_2

State 492:
infixl_1 -> infixl_1 . INFIXL1 infixr_1 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR0 INFIXL1 INFIXL0 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_0 -> infixl_1 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXL0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_0 -> infixl_1 . INFIX0 infixl_1 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXL0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_0 -> infixl_1 . INFIXR0 infixr_0 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXL0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXR0 shift to state 493
-- On INFIXL1 shift to state 495
-- On INFIX0 shift to state 497
-- On WITH reduce production infixr_0 -> infixl_1
-- On VBAR reduce production infixr_0 -> infixl_1
-- On VALUES reduce production infixr_0 -> infixl_1
-- On SEMICOLON reduce production infixr_0 -> infixl_1
-- On RPAREN reduce production infixr_0 -> infixl_1
-- On RETURNING reduce production infixr_0 -> infixl_1
-- On RBRACKET reduce production infixr_0 -> infixl_1
-- On RBRACE reduce production infixr_0 -> infixl_1
-- On RARROW reduce production infixr_0 -> infixl_1
-- On INFIXL0 reduce production infixr_0 -> infixl_1
-- On FATRARROW reduce production infixr_0 -> infixl_1
-- On END reduce production infixr_0 -> infixl_1
-- On ELSE reduce production infixr_0 -> infixl_1
-- On DOTDOT reduce production infixr_0 -> infixl_1
-- On COMMA reduce production infixr_0 -> infixl_1
-- On COLON reduce production infixr_0 -> infixl_1
-- On CASE reduce production infixr_0 -> infixl_1
-- On BARRBRACE reduce production infixr_0 -> infixl_1
-- On BARBAR reduce production infixr_0 -> infixl_1
-- On AMPAMP reduce production infixr_0 -> infixl_1

State 493:
infixr_0 -> infixl_1 INFIXR0 . infixr_0 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXL0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 494
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 494:
infixr_0 -> infixl_1 INFIXR0 infixr_0 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXL0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On VBAR reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On VALUES reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On SEMICOLON reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On RPAREN reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On RETURNING reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On RBRACKET reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On RBRACE reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On RARROW reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On INFIXL0 reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On FATRARROW reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On END reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On ELSE reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On DOTDOT reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On COMMA reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On COLON reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On CASE reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On BARRBRACE reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On BARBAR reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0
-- On AMPAMP reduce production infixr_0 -> infixl_1 INFIXR0 infixr_0

State 495:
infixl_1 -> infixl_1 INFIXL1 . infixr_1 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR0 INFIXL1 INFIXL0 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 496
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 496:
infixl_1 -> infixl_1 INFIXL1 infixr_1 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXR0 INFIXL1 INFIXL0 INFIX0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On VBAR reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On VALUES reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On SEMICOLON reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On RPAREN reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On RETURNING reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On RBRACKET reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On RBRACE reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On RARROW reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On INFIXR0 reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On INFIXL1 reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On INFIXL0 reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On INFIX0 reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On FATRARROW reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On END reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On ELSE reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On DOTDOT reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On COMMA reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On COLON reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On CASE reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On BARRBRACE reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On BARBAR reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1
-- On AMPAMP reduce production infixl_1 -> infixl_1 INFIXL1 infixr_1

State 497:
infixr_0 -> infixl_1 INFIX0 . infixl_1 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXL0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 498
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 498:
infixl_1 -> infixl_1 . INFIXL1 infixr_1 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXL1 INFIXL0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
infixr_0 -> infixl_1 INFIX0 infixl_1 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXL0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXL1 shift to state 495
-- On WITH reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On VBAR reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On VALUES reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On SEMICOLON reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On RPAREN reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On RETURNING reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On RBRACKET reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On RBRACE reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On RARROW reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On INFIXL0 reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On FATRARROW reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On END reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On ELSE reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On DOTDOT reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On COMMA reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On COLON reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On CASE reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On BARRBRACE reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On BARBAR reduce production infixr_0 -> infixl_1 INFIX0 infixl_1
-- On AMPAMP reduce production infixr_0 -> infixl_1 INFIX0 infixl_1

State 499:
infixl_0 -> infixl_0 . INFIXL0 infixr_0 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXL0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
logical_expression -> logical_expression BARBAR infixl_0 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXL0 shift to state 500
-- On WITH reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On VBAR reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On VALUES reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On SEMICOLON reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On RPAREN reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On RETURNING reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On RBRACKET reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On RBRACE reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On RARROW reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On FATRARROW reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On END reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On ELSE reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On DOTDOT reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On COMMA reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On COLON reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On CASE reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On BARRBRACE reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On BARBAR reduce production logical_expression -> logical_expression BARBAR infixl_0
-- On AMPAMP reduce production logical_expression -> logical_expression BARBAR infixl_0

State 500:
infixl_0 -> infixl_0 INFIXL0 . infixr_0 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXL0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 501
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 501:
infixl_0 -> infixl_0 INFIXL0 infixr_0 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXL0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On VBAR reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On VALUES reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On SEMICOLON reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On RPAREN reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On RETURNING reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On RBRACKET reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On RBRACE reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On RARROW reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On INFIXL0 reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On FATRARROW reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On END reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On ELSE reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On DOTDOT reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On COMMA reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On COLON reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On CASE reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On BARRBRACE reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On BARBAR reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0
-- On AMPAMP reduce production infixl_0 -> infixl_0 INFIXL0 infixr_0

State 502:
logical_expression -> logical_expression AMPAMP . infixl_0 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 503
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 503:
infixl_0 -> infixl_0 . INFIXL0 infixr_0 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXL0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
logical_expression -> logical_expression AMPAMP infixl_0 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXL0 shift to state 500
-- On WITH reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On VBAR reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On VALUES reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On SEMICOLON reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On RPAREN reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On RETURNING reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On RBRACKET reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On RBRACE reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On RARROW reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On FATRARROW reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On END reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On ELSE reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On DOTDOT reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On COMMA reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On COLON reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On CASE reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On BARRBRACE reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On BARBAR reduce production logical_expression -> logical_expression AMPAMP infixl_0
-- On AMPAMP reduce production logical_expression -> logical_expression AMPAMP infixl_0

State 504:
escape_expression -> iteration_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production escape_expression -> iteration_expression
-- On VBAR reduce production escape_expression -> iteration_expression
-- On VALUES reduce production escape_expression -> iteration_expression
-- On SEMICOLON reduce production escape_expression -> iteration_expression
-- On RPAREN reduce production escape_expression -> iteration_expression
-- On RBRACKET reduce production escape_expression -> iteration_expression
-- On RBRACE reduce production escape_expression -> iteration_expression
-- On END reduce production escape_expression -> iteration_expression
-- On ELSE reduce production escape_expression -> iteration_expression
-- On DOTDOT reduce production escape_expression -> iteration_expression
-- On COMMA reduce production escape_expression -> iteration_expression
-- On CASE reduce production escape_expression -> iteration_expression
-- On BARRBRACE reduce production escape_expression -> iteration_expression

State 505:
infixl_0 -> infixl_0 . INFIXL0 infixr_0 [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW INFIXL0 FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
logical_expression -> infixl_0 . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW FATRARROW END ELSE DOTDOT COMMA COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On INFIXL0 shift to state 500
-- On WITH reduce production logical_expression -> infixl_0
-- On VBAR reduce production logical_expression -> infixl_0
-- On VALUES reduce production logical_expression -> infixl_0
-- On SEMICOLON reduce production logical_expression -> infixl_0
-- On RPAREN reduce production logical_expression -> infixl_0
-- On RETURNING reduce production logical_expression -> infixl_0
-- On RBRACKET reduce production logical_expression -> infixl_0
-- On RBRACE reduce production logical_expression -> infixl_0
-- On RARROW reduce production logical_expression -> infixl_0
-- On FATRARROW reduce production logical_expression -> infixl_0
-- On END reduce production logical_expression -> infixl_0
-- On ELSE reduce production logical_expression -> infixl_0
-- On DOTDOT reduce production logical_expression -> infixl_0
-- On COMMA reduce production logical_expression -> infixl_0
-- On COLON reduce production logical_expression -> infixl_0
-- On CASE reduce production logical_expression -> infixl_0
-- On BARRBRACE reduce production logical_expression -> infixl_0
-- On BARBAR reduce production logical_expression -> infixl_0
-- On AMPAMP reduce production logical_expression -> infixl_0

State 506:
table_expression -> formlet_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production table_expression -> formlet_expression
-- On VBAR reduce production table_expression -> formlet_expression
-- On VALUES reduce production table_expression -> formlet_expression
-- On SEMICOLON reduce production table_expression -> formlet_expression
-- On RPAREN reduce production table_expression -> formlet_expression
-- On RBRACKET reduce production table_expression -> formlet_expression
-- On RBRACE reduce production table_expression -> formlet_expression
-- On END reduce production table_expression -> formlet_expression
-- On ELSE reduce production table_expression -> formlet_expression
-- On DOTDOT reduce production table_expression -> formlet_expression
-- On COMMA reduce production table_expression -> formlet_expression
-- On CASE reduce production table_expression -> formlet_expression
-- On BARRBRACE reduce production table_expression -> formlet_expression

State 507:
table_generator -> pattern LLARROW exp . [ RPAREN COMMA ]
-- On RPAREN reduce production table_generator -> pattern LLARROW exp
-- On COMMA reduce production table_generator -> pattern LLARROW exp

State 508:
formlet_expression -> escape_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production formlet_expression -> escape_expression
-- On VBAR reduce production formlet_expression -> escape_expression
-- On VALUES reduce production formlet_expression -> escape_expression
-- On SEMICOLON reduce production formlet_expression -> escape_expression
-- On RPAREN reduce production formlet_expression -> escape_expression
-- On RBRACKET reduce production formlet_expression -> escape_expression
-- On RBRACE reduce production formlet_expression -> escape_expression
-- On END reduce production formlet_expression -> escape_expression
-- On ELSE reduce production formlet_expression -> escape_expression
-- On DOTDOT reduce production formlet_expression -> escape_expression
-- On COMMA reduce production formlet_expression -> escape_expression
-- On CASE reduce production formlet_expression -> escape_expression
-- On BARRBRACE reduce production formlet_expression -> escape_expression

State 509:
conditional_expression -> db_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production conditional_expression -> db_expression
-- On VBAR reduce production conditional_expression -> db_expression
-- On VALUES reduce production conditional_expression -> db_expression
-- On SEMICOLON reduce production conditional_expression -> db_expression
-- On RPAREN reduce production conditional_expression -> db_expression
-- On RBRACKET reduce production conditional_expression -> db_expression
-- On RBRACE reduce production conditional_expression -> db_expression
-- On END reduce production conditional_expression -> db_expression
-- On ELSE reduce production conditional_expression -> db_expression
-- On DOTDOT reduce production conditional_expression -> db_expression
-- On COMMA reduce production conditional_expression -> db_expression
-- On CASE reduce production conditional_expression -> db_expression
-- On BARRBRACE reduce production conditional_expression -> db_expression

State 510:
exp -> database_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production exp -> database_expression
-- On VBAR reduce production exp -> database_expression
-- On VALUES reduce production exp -> database_expression
-- On SEMICOLON reduce production exp -> database_expression
-- On RPAREN reduce production exp -> database_expression
-- On RBRACKET reduce production exp -> database_expression
-- On RBRACE reduce production exp -> database_expression
-- On END reduce production exp -> database_expression
-- On ELSE reduce production exp -> database_expression
-- On DOTDOT reduce production exp -> database_expression
-- On COMMA reduce production exp -> database_expression
-- On CASE reduce production exp -> database_expression
-- On BARRBRACE reduce production exp -> database_expression

State 511:
case_expression -> conditional_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production case_expression -> conditional_expression
-- On VBAR reduce production case_expression -> conditional_expression
-- On VALUES reduce production case_expression -> conditional_expression
-- On SEMICOLON reduce production case_expression -> conditional_expression
-- On RPAREN reduce production case_expression -> conditional_expression
-- On RBRACKET reduce production case_expression -> conditional_expression
-- On RBRACE reduce production case_expression -> conditional_expression
-- On END reduce production case_expression -> conditional_expression
-- On ELSE reduce production case_expression -> conditional_expression
-- On DOTDOT reduce production case_expression -> conditional_expression
-- On COMMA reduce production case_expression -> conditional_expression
-- On CASE reduce production case_expression -> conditional_expression
-- On BARRBRACE reduce production case_expression -> conditional_expression

State 512:
iteration_expression -> case_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production iteration_expression -> case_expression
-- On VBAR reduce production iteration_expression -> case_expression
-- On VALUES reduce production iteration_expression -> case_expression
-- On SEMICOLON reduce production iteration_expression -> case_expression
-- On RPAREN reduce production iteration_expression -> case_expression
-- On RBRACKET reduce production iteration_expression -> case_expression
-- On RBRACE reduce production iteration_expression -> case_expression
-- On END reduce production iteration_expression -> case_expression
-- On ELSE reduce production iteration_expression -> case_expression
-- On DOTDOT reduce production iteration_expression -> case_expression
-- On COMMA reduce production iteration_expression -> case_expression
-- On CASE reduce production iteration_expression -> case_expression
-- On BARRBRACE reduce production iteration_expression -> case_expression

State 513:
arg_spec -> LPAREN exps . RPAREN [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On RPAREN shift to state 514

State 514:
arg_spec -> LPAREN exps RPAREN . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production arg_spec -> LPAREN exps RPAREN
-- On VBAR reduce production arg_spec -> LPAREN exps RPAREN
-- On VALUES reduce production arg_spec -> LPAREN exps RPAREN
-- On SEMICOLON reduce production arg_spec -> LPAREN exps RPAREN
-- On RPAREN reduce production arg_spec -> LPAREN exps RPAREN
-- On RETURNING reduce production arg_spec -> LPAREN exps RPAREN
-- On RBRACKET reduce production arg_spec -> LPAREN exps RPAREN
-- On RBRACE reduce production arg_spec -> LPAREN exps RPAREN
-- On RARROW reduce production arg_spec -> LPAREN exps RPAREN
-- On MINUSDOT reduce production arg_spec -> LPAREN exps RPAREN
-- On MINUS reduce production arg_spec -> LPAREN exps RPAREN
-- On LPAREN reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR9 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR8 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR7 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR6 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR5 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR4 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR3 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR2 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR1 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXR0 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL9 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL8 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL7 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL6 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL5 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL4 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL3 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL2 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL1 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIXL0 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX9 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX8 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX7 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX6 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX5 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX4 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX3 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX2 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX1 reduce production arg_spec -> LPAREN exps RPAREN
-- On INFIX0 reduce production arg_spec -> LPAREN exps RPAREN
-- On FATRARROW reduce production arg_spec -> LPAREN exps RPAREN
-- On EQUALSTILDE reduce production arg_spec -> LPAREN exps RPAREN
-- On END reduce production arg_spec -> LPAREN exps RPAREN
-- On ELSE reduce production arg_spec -> LPAREN exps RPAREN
-- On DOTDOT reduce production arg_spec -> LPAREN exps RPAREN
-- On DOT reduce production arg_spec -> LPAREN exps RPAREN
-- On COMMA reduce production arg_spec -> LPAREN exps RPAREN
-- On COLONCOLON reduce production arg_spec -> LPAREN exps RPAREN
-- On COLON reduce production arg_spec -> LPAREN exps RPAREN
-- On CASE reduce production arg_spec -> LPAREN exps RPAREN
-- On BARRBRACE reduce production arg_spec -> LPAREN exps RPAREN
-- On BARBAR reduce production arg_spec -> LPAREN exps RPAREN
-- On AMPAMP reduce production arg_spec -> LPAREN exps RPAREN

State 515:
exps -> exp . COMMA exps [ RPAREN RBRACKET ]
exps -> exp . [ RPAREN RBRACKET ]
-- On COMMA shift to state 516
-- On RPAREN reduce production exps -> exp
-- On RBRACKET reduce production exps -> exp

State 516:
exps -> exp COMMA . exps [ RPAREN RBRACKET ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exps shift to state 517
-- On exp shift to state 515
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 517:
exps -> exp COMMA exps . [ RPAREN RBRACKET ]
-- On RPAREN reduce production exps -> exp COMMA exps
-- On RBRACKET reduce production exps -> exp COMMA exps

State 518:
perhaps_orderby -> ORDERBY LPAREN exps . RPAREN [ VARIABLE UPDATE UINTEGER UFLOAT TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
-- On RPAREN shift to state 519

State 519:
perhaps_orderby -> ORDERBY LPAREN exps RPAREN . [ VARIABLE UPDATE UINTEGER UFLOAT TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
-- On VARIABLE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On UPDATE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On UINTEGER reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On UFLOAT reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On TRUE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On TABLE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On SWITCH reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On STRING reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On SPAWNWAIT reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On SPAWN reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On RECEIVE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On QUERY reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On PREFIXOP reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On PAGE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On MINUSDOT reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On MINUS reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On LXML reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On LPAREN reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On LBRACKET reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On LBRACE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On INSERT reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On IF reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On FUN reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On FORMLET reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On FOR reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On FALSE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On ESCAPE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On DELETE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On DATABASE reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On CONSTRUCTOR reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN
-- On CHAR reduce production perhaps_orderby -> ORDERBY LPAREN exps RPAREN

State 520:
iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby . exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 521
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 521:
iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On VBAR reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On VALUES reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On SEMICOLON reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On RPAREN reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On RBRACKET reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On RBRACE reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On END reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On ELSE reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On DOTDOT reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On COMMA reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On CASE reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp
-- On BARRBRACE reduce production iteration_expression -> FOR LPAREN perhaps_generators RPAREN perhaps_where perhaps_orderby exp

State 522:
list_generator -> pattern . LARROW exp [ RPAREN COMMA ]
table_generator -> pattern . LLARROW exp [ RPAREN COMMA ]
-- On LLARROW shift to state 355
-- On LARROW shift to state 523

State 523:
list_generator -> pattern LARROW . exp [ RPAREN COMMA ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 524
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 524:
list_generator -> pattern LARROW exp . [ RPAREN COMMA ]
-- On RPAREN reduce production list_generator -> pattern LARROW exp
-- On COMMA reduce production list_generator -> pattern LARROW exp

State 525:
generator -> list_generator . [ RPAREN COMMA ]
-- On RPAREN reduce production generator -> list_generator
-- On COMMA reduce production generator -> list_generator

State 526:
perhaps_generators -> generators . [ RPAREN ]
-- On RPAREN reduce production perhaps_generators -> generators

State 527:
generators -> generator . [ RPAREN ]
generators -> generator . COMMA generators [ RPAREN ]
-- On COMMA shift to state 528
-- On RPAREN reduce production generators -> generator

State 528:
generators -> generator COMMA . generators [ RPAREN ]
-- On VARIABLE shift to state 17
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 39
-- On CHAR shift to state 41
-- On typed_pattern shift to state 42
-- On table_generator shift to state 334
-- On primary_pattern shift to state 239
-- On pattern shift to state 522
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On list_generator shift to state 525
-- On generators shift to state 529
-- On generator shift to state 527
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 251

State 529:
generators -> generator COMMA generators . [ RPAREN ]
-- On RPAREN reduce production generators -> generator COMMA generators

State 530:
formlet_expression -> FORMLET xml YIELDS exp . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On VBAR reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On VALUES reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On SEMICOLON reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On RPAREN reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On RBRACKET reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On RBRACE reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On END reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On ELSE reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On DOTDOT reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On COMMA reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On CASE reduce production formlet_expression -> FORMLET xml YIELDS exp
-- On BARRBRACE reduce production formlet_expression -> FORMLET xml YIELDS exp

State 531:
conditional_expression -> IF LPAREN exp . RPAREN exp ELSE exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On RPAREN shift to state 532

State 532:
conditional_expression -> IF LPAREN exp RPAREN . exp ELSE exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 533
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 533:
conditional_expression -> IF LPAREN exp RPAREN exp . ELSE exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On ELSE shift to state 534

State 534:
conditional_expression -> IF LPAREN exp RPAREN exp ELSE . exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 535
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 535:
conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On VBAR reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On VALUES reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On SEMICOLON reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On RPAREN reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On RBRACKET reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On RBRACE reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On END reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On ELSE reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On DOTDOT reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On COMMA reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On CASE reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp
-- On BARRBRACE reduce production conditional_expression -> IF LPAREN exp RPAREN exp ELSE exp

State 536:
database_expression -> INSERT exp . VALUES LPAREN RPAREN exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp . VALUES LPAREN record_labels RPAREN exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp . VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp . VALUES LPAREN RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp . VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp . VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp . VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VALUES shift to state 537

State 537:
database_expression -> INSERT exp VALUES . LPAREN RPAREN exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES . LPAREN record_labels RPAREN exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES . LBRACKET LPAREN labeled_exps RPAREN RBRACKET [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES . LPAREN RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES . LPAREN record_labels RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES . LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES . LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On LPAREN shift to state 538
-- On LBRACKET shift to state 553

State 538:
database_expression -> INSERT exp VALUES LPAREN . RPAREN exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES LPAREN . record_labels RPAREN exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES LPAREN . RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES LPAREN . record_labels RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 170
-- On UINTEGER shift to state 171
-- On STRING shift to state 172
-- On RPAREN shift to state 539
-- On CONSTRUCTOR shift to state 173
-- On record_labels shift to state 544
-- On record_label shift to state 550
-- On field_label shift to state 224

State 539:
database_expression -> INSERT exp VALUES LPAREN RPAREN . exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES LPAREN RPAREN . db_expression RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 540
-- On escape_expression shift to state 508
-- On db_expression shift to state 541
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 540:
database_expression -> INSERT exp VALUES LPAREN RPAREN exp . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On VBAR reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On VALUES reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On SEMICOLON reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On RPAREN reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On RBRACKET reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On RBRACE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On END reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On ELSE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On DOTDOT reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On COMMA reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On CASE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp
-- On BARRBRACE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN exp

State 541:
conditional_expression -> db_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression . RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On RETURNING shift to state 542
-- On WITH reduce production conditional_expression -> db_expression
-- On VBAR reduce production conditional_expression -> db_expression
-- On VALUES reduce production conditional_expression -> db_expression
-- On SEMICOLON reduce production conditional_expression -> db_expression
-- On RPAREN reduce production conditional_expression -> db_expression
-- On RBRACKET reduce production conditional_expression -> db_expression
-- On RBRACE reduce production conditional_expression -> db_expression
-- On END reduce production conditional_expression -> db_expression
-- On ELSE reduce production conditional_expression -> db_expression
-- On DOTDOT reduce production conditional_expression -> db_expression
-- On COMMA reduce production conditional_expression -> db_expression
-- On CASE reduce production conditional_expression -> db_expression
-- On BARRBRACE reduce production conditional_expression -> db_expression

State 542:
database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING . VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 543

State 543:
database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On VBAR reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On VALUES reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On SEMICOLON reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On RPAREN reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On RBRACKET reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On RBRACE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On END reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On ELSE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On DOTDOT reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On COMMA reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On CASE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE
-- On BARRBRACE reduce production database_expression -> INSERT exp VALUES LPAREN RPAREN db_expression RETURNING VARIABLE

State 544:
database_expression -> INSERT exp VALUES LPAREN record_labels . RPAREN exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES LPAREN record_labels . RPAREN db_expression RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On RPAREN shift to state 545

State 545:
database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN . exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN . db_expression RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 546
-- On escape_expression shift to state 508
-- On db_expression shift to state 547
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 546:
database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On VBAR reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On VALUES reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On SEMICOLON reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On RPAREN reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On RBRACKET reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On RBRACE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On END reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On ELSE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On DOTDOT reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On COMMA reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On CASE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp
-- On BARRBRACE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN exp

State 547:
conditional_expression -> db_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression . RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On RETURNING shift to state 548
-- On WITH reduce production conditional_expression -> db_expression
-- On VBAR reduce production conditional_expression -> db_expression
-- On VALUES reduce production conditional_expression -> db_expression
-- On SEMICOLON reduce production conditional_expression -> db_expression
-- On RPAREN reduce production conditional_expression -> db_expression
-- On RBRACKET reduce production conditional_expression -> db_expression
-- On RBRACE reduce production conditional_expression -> db_expression
-- On END reduce production conditional_expression -> db_expression
-- On ELSE reduce production conditional_expression -> db_expression
-- On DOTDOT reduce production conditional_expression -> db_expression
-- On COMMA reduce production conditional_expression -> db_expression
-- On CASE reduce production conditional_expression -> db_expression
-- On BARRBRACE reduce production conditional_expression -> db_expression

State 548:
database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING . VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 549

State 549:
database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On VBAR reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On VALUES reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On SEMICOLON reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On RPAREN reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On RBRACKET reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On RBRACE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On END reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On ELSE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On DOTDOT reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On COMMA reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On CASE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE
-- On BARRBRACE reduce production database_expression -> INSERT exp VALUES LPAREN record_labels RPAREN db_expression RETURNING VARIABLE

State 550:
record_labels -> record_label . COMMA record_labels [ RPAREN ]
record_labels -> record_label . [ RPAREN ]
-- On COMMA shift to state 551
-- On RPAREN reduce production record_labels -> record_label

State 551:
record_labels -> record_label COMMA . record_labels [ RPAREN ]
-- On VARIABLE shift to state 170
-- On UINTEGER shift to state 171
-- On STRING shift to state 172
-- On CONSTRUCTOR shift to state 173
-- On record_labels shift to state 552
-- On record_label shift to state 550
-- On field_label shift to state 224

State 552:
record_labels -> record_label COMMA record_labels . [ RPAREN ]
-- On RPAREN reduce production record_labels -> record_label COMMA record_labels

State 553:
database_expression -> INSERT exp VALUES LBRACKET . LPAREN labeled_exps RPAREN RBRACKET [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES LBRACKET . LPAREN RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES LBRACKET . LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On LPAREN shift to state 554

State 554:
database_expression -> INSERT exp VALUES LBRACKET LPAREN . labeled_exps RPAREN RBRACKET [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES LBRACKET LPAREN . RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES LBRACKET LPAREN . labeled_exps RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 170
-- On UINTEGER shift to state 171
-- On STRING shift to state 172
-- On RPAREN shift to state 555
-- On CONSTRUCTOR shift to state 173
-- On record_label shift to state 559
-- On labeled_exps shift to state 564
-- On field_label shift to state 224

State 555:
database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN . RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On RBRACKET shift to state 556

State 556:
database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET . RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On RETURNING shift to state 557

State 557:
database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING . VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 558

State 558:
database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On VBAR reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On VALUES reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On SEMICOLON reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On RPAREN reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On RBRACKET reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On RBRACE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On END reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On ELSE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On DOTDOT reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On COMMA reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On CASE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE
-- On BARRBRACE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN RPAREN RBRACKET RETURNING VARIABLE

State 559:
labeled_exps -> record_label . EQ exp [ VBAR RPAREN ]
labeled_exps -> record_label . EQ exp COMMA labeled_exps [ VBAR RPAREN ]
-- On EQ shift to state 560

State 560:
labeled_exps -> record_label EQ . exp [ VBAR RPAREN ]
labeled_exps -> record_label EQ . exp COMMA labeled_exps [ VBAR RPAREN ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 561
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 561:
labeled_exps -> record_label EQ exp . [ VBAR RPAREN ]
labeled_exps -> record_label EQ exp . COMMA labeled_exps [ VBAR RPAREN ]
-- On COMMA shift to state 562
-- On VBAR reduce production labeled_exps -> record_label EQ exp
-- On RPAREN reduce production labeled_exps -> record_label EQ exp

State 562:
labeled_exps -> record_label EQ exp COMMA . labeled_exps [ VBAR RPAREN ]
-- On VARIABLE shift to state 170
-- On UINTEGER shift to state 171
-- On STRING shift to state 172
-- On CONSTRUCTOR shift to state 173
-- On record_label shift to state 559
-- On labeled_exps shift to state 563
-- On field_label shift to state 224

State 563:
labeled_exps -> record_label EQ exp COMMA labeled_exps . [ VBAR RPAREN ]
-- On VBAR reduce production labeled_exps -> record_label EQ exp COMMA labeled_exps
-- On RPAREN reduce production labeled_exps -> record_label EQ exp COMMA labeled_exps

State 564:
database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps . RPAREN RBRACKET [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps . RPAREN RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On RPAREN shift to state 565

State 565:
database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN . RBRACKET [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN . RBRACKET RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On RBRACKET shift to state 566

State 566:
database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET . RETURNING VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On RETURNING shift to state 567
-- On WITH reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On VBAR reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On VALUES reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On SEMICOLON reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On RPAREN reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On RBRACKET reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On RBRACE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On END reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On ELSE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On DOTDOT reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On COMMA reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On CASE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET
-- On BARRBRACE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET

State 567:
database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING . VARIABLE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 568

State 568:
database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On VBAR reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On VALUES reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On SEMICOLON reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On RPAREN reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On RBRACKET reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On RBRACE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On END reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On ELSE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On DOTDOT reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On COMMA reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On CASE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE
-- On BARRBRACE reduce production database_expression -> INSERT exp VALUES LBRACKET LPAREN labeled_exps RPAREN RBRACKET RETURNING VARIABLE

State 569:
primary_expression -> LBRACKET exps . RBRACKET [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On RBRACKET shift to state 570

State 570:
primary_expression -> LBRACKET exps RBRACKET . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production primary_expression -> LBRACKET exps RBRACKET
-- On VBAR reduce production primary_expression -> LBRACKET exps RBRACKET
-- On VALUES reduce production primary_expression -> LBRACKET exps RBRACKET
-- On SEMICOLON reduce production primary_expression -> LBRACKET exps RBRACKET
-- On RPAREN reduce production primary_expression -> LBRACKET exps RBRACKET
-- On RETURNING reduce production primary_expression -> LBRACKET exps RBRACKET
-- On RBRACKET reduce production primary_expression -> LBRACKET exps RBRACKET
-- On RBRACE reduce production primary_expression -> LBRACKET exps RBRACKET
-- On RARROW reduce production primary_expression -> LBRACKET exps RBRACKET
-- On POSTFIXOP reduce production primary_expression -> LBRACKET exps RBRACKET
-- On MINUSDOT reduce production primary_expression -> LBRACKET exps RBRACKET
-- On MINUS reduce production primary_expression -> LBRACKET exps RBRACKET
-- On LPAREN reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR9 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR8 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR7 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR6 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR5 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR4 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR3 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR2 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR1 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXR0 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL9 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL8 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL7 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL6 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL5 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL4 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL3 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL2 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL1 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIXL0 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX9 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX8 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX7 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX6 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX5 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX4 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX3 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX2 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX1 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On INFIX0 reduce production primary_expression -> LBRACKET exps RBRACKET
-- On FATRARROW reduce production primary_expression -> LBRACKET exps RBRACKET
-- On EQUALSTILDE reduce production primary_expression -> LBRACKET exps RBRACKET
-- On END reduce production primary_expression -> LBRACKET exps RBRACKET
-- On ELSE reduce production primary_expression -> LBRACKET exps RBRACKET
-- On DOTDOT reduce production primary_expression -> LBRACKET exps RBRACKET
-- On DOT reduce production primary_expression -> LBRACKET exps RBRACKET
-- On COMMA reduce production primary_expression -> LBRACKET exps RBRACKET
-- On COLONCOLON reduce production primary_expression -> LBRACKET exps RBRACKET
-- On COLON reduce production primary_expression -> LBRACKET exps RBRACKET
-- On CASE reduce production primary_expression -> LBRACKET exps RBRACKET
-- On BARRBRACE reduce production primary_expression -> LBRACKET exps RBRACKET
-- On BARBAR reduce production primary_expression -> LBRACKET exps RBRACKET
-- On AMPAMP reduce production primary_expression -> LBRACKET exps RBRACKET

State 571:
exps -> exp . COMMA exps [ RBRACKET ]
exps -> exp . [ RBRACKET ]
primary_expression -> LBRACKET exp . DOTDOT exp RBRACKET [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On DOTDOT shift to state 572
-- On COMMA shift to state 516
-- On RBRACKET reduce production exps -> exp

State 572:
primary_expression -> LBRACKET exp DOTDOT . exp RBRACKET [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 573
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 573:
primary_expression -> LBRACKET exp DOTDOT exp . RBRACKET [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On RBRACKET shift to state 574

State 574:
primary_expression -> LBRACKET exp DOTDOT exp RBRACKET . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On VBAR reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On VALUES reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On SEMICOLON reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On RPAREN reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On RETURNING reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On RBRACKET reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On RBRACE reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On RARROW reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On POSTFIXOP reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On MINUSDOT reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On MINUS reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On LPAREN reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR9 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR8 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR7 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR6 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR5 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR4 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR3 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR2 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR1 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXR0 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL9 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL8 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL7 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL6 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL5 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL4 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL3 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL2 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL1 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIXL0 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX9 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX8 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX7 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX6 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX5 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX4 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX3 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX2 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX1 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On INFIX0 reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On FATRARROW reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On EQUALSTILDE reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On END reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On ELSE reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On DOTDOT reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On DOT reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On COMMA reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On COLONCOLON reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On COLON reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On CASE reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On BARRBRACE reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On BARBAR reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET
-- On AMPAMP reduce production primary_expression -> LBRACKET exp DOTDOT exp RBRACKET

State 575:
unary_expression -> MINUSDOT unary_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production unary_expression -> MINUSDOT unary_expression
-- On VBAR reduce production unary_expression -> MINUSDOT unary_expression
-- On VALUES reduce production unary_expression -> MINUSDOT unary_expression
-- On SEMICOLON reduce production unary_expression -> MINUSDOT unary_expression
-- On RPAREN reduce production unary_expression -> MINUSDOT unary_expression
-- On RETURNING reduce production unary_expression -> MINUSDOT unary_expression
-- On RBRACKET reduce production unary_expression -> MINUSDOT unary_expression
-- On RBRACE reduce production unary_expression -> MINUSDOT unary_expression
-- On RARROW reduce production unary_expression -> MINUSDOT unary_expression
-- On MINUSDOT reduce production unary_expression -> MINUSDOT unary_expression
-- On MINUS reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR9 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR8 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR7 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR6 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR5 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR4 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR3 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR2 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR1 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXR0 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL9 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL8 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL7 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL6 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL5 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL4 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL3 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL2 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL1 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIXL0 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX9 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX8 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX7 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX6 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX5 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX4 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX3 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX2 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX1 reduce production unary_expression -> MINUSDOT unary_expression
-- On INFIX0 reduce production unary_expression -> MINUSDOT unary_expression
-- On FATRARROW reduce production unary_expression -> MINUSDOT unary_expression
-- On EQUALSTILDE reduce production unary_expression -> MINUSDOT unary_expression
-- On END reduce production unary_expression -> MINUSDOT unary_expression
-- On ELSE reduce production unary_expression -> MINUSDOT unary_expression
-- On DOTDOT reduce production unary_expression -> MINUSDOT unary_expression
-- On COMMA reduce production unary_expression -> MINUSDOT unary_expression
-- On COLONCOLON reduce production unary_expression -> MINUSDOT unary_expression
-- On COLON reduce production unary_expression -> MINUSDOT unary_expression
-- On CASE reduce production unary_expression -> MINUSDOT unary_expression
-- On BARRBRACE reduce production unary_expression -> MINUSDOT unary_expression
-- On BARBAR reduce production unary_expression -> MINUSDOT unary_expression
-- On AMPAMP reduce production unary_expression -> MINUSDOT unary_expression

State 576:
binop -> MINUS . [ RPAREN ]
unary_expression -> MINUS . unary_expression [ WITH RPAREN MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE COMMA COLONCOLON COLON BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 577
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375
-- On RPAREN reduce production binop -> MINUS

State 577:
unary_expression -> MINUS unary_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production unary_expression -> MINUS unary_expression
-- On VBAR reduce production unary_expression -> MINUS unary_expression
-- On VALUES reduce production unary_expression -> MINUS unary_expression
-- On SEMICOLON reduce production unary_expression -> MINUS unary_expression
-- On RPAREN reduce production unary_expression -> MINUS unary_expression
-- On RETURNING reduce production unary_expression -> MINUS unary_expression
-- On RBRACKET reduce production unary_expression -> MINUS unary_expression
-- On RBRACE reduce production unary_expression -> MINUS unary_expression
-- On RARROW reduce production unary_expression -> MINUS unary_expression
-- On MINUSDOT reduce production unary_expression -> MINUS unary_expression
-- On MINUS reduce production unary_expression -> MINUS unary_expression
-- On INFIXR9 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR8 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR7 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR6 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR5 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR4 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR3 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR2 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR1 reduce production unary_expression -> MINUS unary_expression
-- On INFIXR0 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL9 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL8 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL7 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL6 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL5 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL4 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL3 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL2 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL1 reduce production unary_expression -> MINUS unary_expression
-- On INFIXL0 reduce production unary_expression -> MINUS unary_expression
-- On INFIX9 reduce production unary_expression -> MINUS unary_expression
-- On INFIX8 reduce production unary_expression -> MINUS unary_expression
-- On INFIX7 reduce production unary_expression -> MINUS unary_expression
-- On INFIX6 reduce production unary_expression -> MINUS unary_expression
-- On INFIX5 reduce production unary_expression -> MINUS unary_expression
-- On INFIX4 reduce production unary_expression -> MINUS unary_expression
-- On INFIX3 reduce production unary_expression -> MINUS unary_expression
-- On INFIX2 reduce production unary_expression -> MINUS unary_expression
-- On INFIX1 reduce production unary_expression -> MINUS unary_expression
-- On INFIX0 reduce production unary_expression -> MINUS unary_expression
-- On FATRARROW reduce production unary_expression -> MINUS unary_expression
-- On EQUALSTILDE reduce production unary_expression -> MINUS unary_expression
-- On END reduce production unary_expression -> MINUS unary_expression
-- On ELSE reduce production unary_expression -> MINUS unary_expression
-- On DOTDOT reduce production unary_expression -> MINUS unary_expression
-- On COMMA reduce production unary_expression -> MINUS unary_expression
-- On COLONCOLON reduce production unary_expression -> MINUS unary_expression
-- On COLON reduce production unary_expression -> MINUS unary_expression
-- On CASE reduce production unary_expression -> MINUS unary_expression
-- On BARRBRACE reduce production unary_expression -> MINUS unary_expression
-- On BARBAR reduce production unary_expression -> MINUS unary_expression
-- On AMPAMP reduce production unary_expression -> MINUS unary_expression

State 578:
op -> INFIXR9 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR9
-- On UNDERSCORE reduce production op -> INFIXR9
-- On UINTEGER reduce production op -> INFIXR9
-- On UFLOAT reduce production op -> INFIXR9
-- On TRUE reduce production op -> INFIXR9
-- On STRING reduce production op -> INFIXR9
-- On SEMICOLON reduce production op -> INFIXR9
-- On RPAREN reduce production op -> INFIXR9
-- On MINUS reduce production op -> INFIXR9
-- On LPAREN reduce production op -> INFIXR9
-- On LBRACKET reduce production op -> INFIXR9
-- On FALSE reduce production op -> INFIXR9
-- On CONSTRUCTOR reduce production op -> INFIXR9
-- On COLON reduce production op -> INFIXR9
-- On CHAR reduce production op -> INFIXR9

State 579:
op -> INFIXR8 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR8
-- On UNDERSCORE reduce production op -> INFIXR8
-- On UINTEGER reduce production op -> INFIXR8
-- On UFLOAT reduce production op -> INFIXR8
-- On TRUE reduce production op -> INFIXR8
-- On STRING reduce production op -> INFIXR8
-- On SEMICOLON reduce production op -> INFIXR8
-- On RPAREN reduce production op -> INFIXR8
-- On MINUS reduce production op -> INFIXR8
-- On LPAREN reduce production op -> INFIXR8
-- On LBRACKET reduce production op -> INFIXR8
-- On FALSE reduce production op -> INFIXR8
-- On CONSTRUCTOR reduce production op -> INFIXR8
-- On COLON reduce production op -> INFIXR8
-- On CHAR reduce production op -> INFIXR8

State 580:
op -> INFIXR7 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR7
-- On UNDERSCORE reduce production op -> INFIXR7
-- On UINTEGER reduce production op -> INFIXR7
-- On UFLOAT reduce production op -> INFIXR7
-- On TRUE reduce production op -> INFIXR7
-- On STRING reduce production op -> INFIXR7
-- On SEMICOLON reduce production op -> INFIXR7
-- On RPAREN reduce production op -> INFIXR7
-- On MINUS reduce production op -> INFIXR7
-- On LPAREN reduce production op -> INFIXR7
-- On LBRACKET reduce production op -> INFIXR7
-- On FALSE reduce production op -> INFIXR7
-- On CONSTRUCTOR reduce production op -> INFIXR7
-- On COLON reduce production op -> INFIXR7
-- On CHAR reduce production op -> INFIXR7

State 581:
op -> INFIXR6 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR6
-- On UNDERSCORE reduce production op -> INFIXR6
-- On UINTEGER reduce production op -> INFIXR6
-- On UFLOAT reduce production op -> INFIXR6
-- On TRUE reduce production op -> INFIXR6
-- On STRING reduce production op -> INFIXR6
-- On SEMICOLON reduce production op -> INFIXR6
-- On RPAREN reduce production op -> INFIXR6
-- On MINUS reduce production op -> INFIXR6
-- On LPAREN reduce production op -> INFIXR6
-- On LBRACKET reduce production op -> INFIXR6
-- On FALSE reduce production op -> INFIXR6
-- On CONSTRUCTOR reduce production op -> INFIXR6
-- On COLON reduce production op -> INFIXR6
-- On CHAR reduce production op -> INFIXR6

State 582:
op -> INFIXR5 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR5
-- On UNDERSCORE reduce production op -> INFIXR5
-- On UINTEGER reduce production op -> INFIXR5
-- On UFLOAT reduce production op -> INFIXR5
-- On TRUE reduce production op -> INFIXR5
-- On STRING reduce production op -> INFIXR5
-- On SEMICOLON reduce production op -> INFIXR5
-- On RPAREN reduce production op -> INFIXR5
-- On MINUS reduce production op -> INFIXR5
-- On LPAREN reduce production op -> INFIXR5
-- On LBRACKET reduce production op -> INFIXR5
-- On FALSE reduce production op -> INFIXR5
-- On CONSTRUCTOR reduce production op -> INFIXR5
-- On COLON reduce production op -> INFIXR5
-- On CHAR reduce production op -> INFIXR5

State 583:
op -> INFIXR4 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR4
-- On UNDERSCORE reduce production op -> INFIXR4
-- On UINTEGER reduce production op -> INFIXR4
-- On UFLOAT reduce production op -> INFIXR4
-- On TRUE reduce production op -> INFIXR4
-- On STRING reduce production op -> INFIXR4
-- On SEMICOLON reduce production op -> INFIXR4
-- On RPAREN reduce production op -> INFIXR4
-- On MINUS reduce production op -> INFIXR4
-- On LPAREN reduce production op -> INFIXR4
-- On LBRACKET reduce production op -> INFIXR4
-- On FALSE reduce production op -> INFIXR4
-- On CONSTRUCTOR reduce production op -> INFIXR4
-- On COLON reduce production op -> INFIXR4
-- On CHAR reduce production op -> INFIXR4

State 584:
op -> INFIXR3 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR3
-- On UNDERSCORE reduce production op -> INFIXR3
-- On UINTEGER reduce production op -> INFIXR3
-- On UFLOAT reduce production op -> INFIXR3
-- On TRUE reduce production op -> INFIXR3
-- On STRING reduce production op -> INFIXR3
-- On SEMICOLON reduce production op -> INFIXR3
-- On RPAREN reduce production op -> INFIXR3
-- On MINUS reduce production op -> INFIXR3
-- On LPAREN reduce production op -> INFIXR3
-- On LBRACKET reduce production op -> INFIXR3
-- On FALSE reduce production op -> INFIXR3
-- On CONSTRUCTOR reduce production op -> INFIXR3
-- On COLON reduce production op -> INFIXR3
-- On CHAR reduce production op -> INFIXR3

State 585:
op -> INFIXR2 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR2
-- On UNDERSCORE reduce production op -> INFIXR2
-- On UINTEGER reduce production op -> INFIXR2
-- On UFLOAT reduce production op -> INFIXR2
-- On TRUE reduce production op -> INFIXR2
-- On STRING reduce production op -> INFIXR2
-- On SEMICOLON reduce production op -> INFIXR2
-- On RPAREN reduce production op -> INFIXR2
-- On MINUS reduce production op -> INFIXR2
-- On LPAREN reduce production op -> INFIXR2
-- On LBRACKET reduce production op -> INFIXR2
-- On FALSE reduce production op -> INFIXR2
-- On CONSTRUCTOR reduce production op -> INFIXR2
-- On COLON reduce production op -> INFIXR2
-- On CHAR reduce production op -> INFIXR2

State 586:
op -> INFIXR1 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR1
-- On UNDERSCORE reduce production op -> INFIXR1
-- On UINTEGER reduce production op -> INFIXR1
-- On UFLOAT reduce production op -> INFIXR1
-- On TRUE reduce production op -> INFIXR1
-- On STRING reduce production op -> INFIXR1
-- On SEMICOLON reduce production op -> INFIXR1
-- On RPAREN reduce production op -> INFIXR1
-- On MINUS reduce production op -> INFIXR1
-- On LPAREN reduce production op -> INFIXR1
-- On LBRACKET reduce production op -> INFIXR1
-- On FALSE reduce production op -> INFIXR1
-- On CONSTRUCTOR reduce production op -> INFIXR1
-- On COLON reduce production op -> INFIXR1
-- On CHAR reduce production op -> INFIXR1

State 587:
op -> INFIXR0 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXR0
-- On UNDERSCORE reduce production op -> INFIXR0
-- On UINTEGER reduce production op -> INFIXR0
-- On UFLOAT reduce production op -> INFIXR0
-- On TRUE reduce production op -> INFIXR0
-- On STRING reduce production op -> INFIXR0
-- On SEMICOLON reduce production op -> INFIXR0
-- On RPAREN reduce production op -> INFIXR0
-- On MINUS reduce production op -> INFIXR0
-- On LPAREN reduce production op -> INFIXR0
-- On LBRACKET reduce production op -> INFIXR0
-- On FALSE reduce production op -> INFIXR0
-- On CONSTRUCTOR reduce production op -> INFIXR0
-- On COLON reduce production op -> INFIXR0
-- On CHAR reduce production op -> INFIXR0

State 588:
op -> INFIXL9 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL9
-- On UNDERSCORE reduce production op -> INFIXL9
-- On UINTEGER reduce production op -> INFIXL9
-- On UFLOAT reduce production op -> INFIXL9
-- On TRUE reduce production op -> INFIXL9
-- On STRING reduce production op -> INFIXL9
-- On SEMICOLON reduce production op -> INFIXL9
-- On RPAREN reduce production op -> INFIXL9
-- On MINUS reduce production op -> INFIXL9
-- On LPAREN reduce production op -> INFIXL9
-- On LBRACKET reduce production op -> INFIXL9
-- On FALSE reduce production op -> INFIXL9
-- On CONSTRUCTOR reduce production op -> INFIXL9
-- On COLON reduce production op -> INFIXL9
-- On CHAR reduce production op -> INFIXL9

State 589:
op -> INFIXL8 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL8
-- On UNDERSCORE reduce production op -> INFIXL8
-- On UINTEGER reduce production op -> INFIXL8
-- On UFLOAT reduce production op -> INFIXL8
-- On TRUE reduce production op -> INFIXL8
-- On STRING reduce production op -> INFIXL8
-- On SEMICOLON reduce production op -> INFIXL8
-- On RPAREN reduce production op -> INFIXL8
-- On MINUS reduce production op -> INFIXL8
-- On LPAREN reduce production op -> INFIXL8
-- On LBRACKET reduce production op -> INFIXL8
-- On FALSE reduce production op -> INFIXL8
-- On CONSTRUCTOR reduce production op -> INFIXL8
-- On COLON reduce production op -> INFIXL8
-- On CHAR reduce production op -> INFIXL8

State 590:
op -> INFIXL7 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL7
-- On UNDERSCORE reduce production op -> INFIXL7
-- On UINTEGER reduce production op -> INFIXL7
-- On UFLOAT reduce production op -> INFIXL7
-- On TRUE reduce production op -> INFIXL7
-- On STRING reduce production op -> INFIXL7
-- On SEMICOLON reduce production op -> INFIXL7
-- On RPAREN reduce production op -> INFIXL7
-- On MINUS reduce production op -> INFIXL7
-- On LPAREN reduce production op -> INFIXL7
-- On LBRACKET reduce production op -> INFIXL7
-- On FALSE reduce production op -> INFIXL7
-- On CONSTRUCTOR reduce production op -> INFIXL7
-- On COLON reduce production op -> INFIXL7
-- On CHAR reduce production op -> INFIXL7

State 591:
op -> INFIXL6 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL6
-- On UNDERSCORE reduce production op -> INFIXL6
-- On UINTEGER reduce production op -> INFIXL6
-- On UFLOAT reduce production op -> INFIXL6
-- On TRUE reduce production op -> INFIXL6
-- On STRING reduce production op -> INFIXL6
-- On SEMICOLON reduce production op -> INFIXL6
-- On RPAREN reduce production op -> INFIXL6
-- On MINUS reduce production op -> INFIXL6
-- On LPAREN reduce production op -> INFIXL6
-- On LBRACKET reduce production op -> INFIXL6
-- On FALSE reduce production op -> INFIXL6
-- On CONSTRUCTOR reduce production op -> INFIXL6
-- On COLON reduce production op -> INFIXL6
-- On CHAR reduce production op -> INFIXL6

State 592:
op -> INFIXL5 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL5
-- On UNDERSCORE reduce production op -> INFIXL5
-- On UINTEGER reduce production op -> INFIXL5
-- On UFLOAT reduce production op -> INFIXL5
-- On TRUE reduce production op -> INFIXL5
-- On STRING reduce production op -> INFIXL5
-- On SEMICOLON reduce production op -> INFIXL5
-- On RPAREN reduce production op -> INFIXL5
-- On MINUS reduce production op -> INFIXL5
-- On LPAREN reduce production op -> INFIXL5
-- On LBRACKET reduce production op -> INFIXL5
-- On FALSE reduce production op -> INFIXL5
-- On CONSTRUCTOR reduce production op -> INFIXL5
-- On COLON reduce production op -> INFIXL5
-- On CHAR reduce production op -> INFIXL5

State 593:
op -> INFIXL4 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL4
-- On UNDERSCORE reduce production op -> INFIXL4
-- On UINTEGER reduce production op -> INFIXL4
-- On UFLOAT reduce production op -> INFIXL4
-- On TRUE reduce production op -> INFIXL4
-- On STRING reduce production op -> INFIXL4
-- On SEMICOLON reduce production op -> INFIXL4
-- On RPAREN reduce production op -> INFIXL4
-- On MINUS reduce production op -> INFIXL4
-- On LPAREN reduce production op -> INFIXL4
-- On LBRACKET reduce production op -> INFIXL4
-- On FALSE reduce production op -> INFIXL4
-- On CONSTRUCTOR reduce production op -> INFIXL4
-- On COLON reduce production op -> INFIXL4
-- On CHAR reduce production op -> INFIXL4

State 594:
op -> INFIXL3 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL3
-- On UNDERSCORE reduce production op -> INFIXL3
-- On UINTEGER reduce production op -> INFIXL3
-- On UFLOAT reduce production op -> INFIXL3
-- On TRUE reduce production op -> INFIXL3
-- On STRING reduce production op -> INFIXL3
-- On SEMICOLON reduce production op -> INFIXL3
-- On RPAREN reduce production op -> INFIXL3
-- On MINUS reduce production op -> INFIXL3
-- On LPAREN reduce production op -> INFIXL3
-- On LBRACKET reduce production op -> INFIXL3
-- On FALSE reduce production op -> INFIXL3
-- On CONSTRUCTOR reduce production op -> INFIXL3
-- On COLON reduce production op -> INFIXL3
-- On CHAR reduce production op -> INFIXL3

State 595:
op -> INFIXL2 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL2
-- On UNDERSCORE reduce production op -> INFIXL2
-- On UINTEGER reduce production op -> INFIXL2
-- On UFLOAT reduce production op -> INFIXL2
-- On TRUE reduce production op -> INFIXL2
-- On STRING reduce production op -> INFIXL2
-- On SEMICOLON reduce production op -> INFIXL2
-- On RPAREN reduce production op -> INFIXL2
-- On MINUS reduce production op -> INFIXL2
-- On LPAREN reduce production op -> INFIXL2
-- On LBRACKET reduce production op -> INFIXL2
-- On FALSE reduce production op -> INFIXL2
-- On CONSTRUCTOR reduce production op -> INFIXL2
-- On COLON reduce production op -> INFIXL2
-- On CHAR reduce production op -> INFIXL2

State 596:
op -> INFIXL1 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL1
-- On UNDERSCORE reduce production op -> INFIXL1
-- On UINTEGER reduce production op -> INFIXL1
-- On UFLOAT reduce production op -> INFIXL1
-- On TRUE reduce production op -> INFIXL1
-- On STRING reduce production op -> INFIXL1
-- On SEMICOLON reduce production op -> INFIXL1
-- On RPAREN reduce production op -> INFIXL1
-- On MINUS reduce production op -> INFIXL1
-- On LPAREN reduce production op -> INFIXL1
-- On LBRACKET reduce production op -> INFIXL1
-- On FALSE reduce production op -> INFIXL1
-- On CONSTRUCTOR reduce production op -> INFIXL1
-- On COLON reduce production op -> INFIXL1
-- On CHAR reduce production op -> INFIXL1

State 597:
op -> INFIXL0 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIXL0
-- On UNDERSCORE reduce production op -> INFIXL0
-- On UINTEGER reduce production op -> INFIXL0
-- On UFLOAT reduce production op -> INFIXL0
-- On TRUE reduce production op -> INFIXL0
-- On STRING reduce production op -> INFIXL0
-- On SEMICOLON reduce production op -> INFIXL0
-- On RPAREN reduce production op -> INFIXL0
-- On MINUS reduce production op -> INFIXL0
-- On LPAREN reduce production op -> INFIXL0
-- On LBRACKET reduce production op -> INFIXL0
-- On FALSE reduce production op -> INFIXL0
-- On CONSTRUCTOR reduce production op -> INFIXL0
-- On COLON reduce production op -> INFIXL0
-- On CHAR reduce production op -> INFIXL0

State 598:
op -> INFIX9 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX9
-- On UNDERSCORE reduce production op -> INFIX9
-- On UINTEGER reduce production op -> INFIX9
-- On UFLOAT reduce production op -> INFIX9
-- On TRUE reduce production op -> INFIX9
-- On STRING reduce production op -> INFIX9
-- On SEMICOLON reduce production op -> INFIX9
-- On RPAREN reduce production op -> INFIX9
-- On MINUS reduce production op -> INFIX9
-- On LPAREN reduce production op -> INFIX9
-- On LBRACKET reduce production op -> INFIX9
-- On FALSE reduce production op -> INFIX9
-- On CONSTRUCTOR reduce production op -> INFIX9
-- On COLON reduce production op -> INFIX9
-- On CHAR reduce production op -> INFIX9

State 599:
op -> INFIX8 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX8
-- On UNDERSCORE reduce production op -> INFIX8
-- On UINTEGER reduce production op -> INFIX8
-- On UFLOAT reduce production op -> INFIX8
-- On TRUE reduce production op -> INFIX8
-- On STRING reduce production op -> INFIX8
-- On SEMICOLON reduce production op -> INFIX8
-- On RPAREN reduce production op -> INFIX8
-- On MINUS reduce production op -> INFIX8
-- On LPAREN reduce production op -> INFIX8
-- On LBRACKET reduce production op -> INFIX8
-- On FALSE reduce production op -> INFIX8
-- On CONSTRUCTOR reduce production op -> INFIX8
-- On COLON reduce production op -> INFIX8
-- On CHAR reduce production op -> INFIX8

State 600:
op -> INFIX7 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX7
-- On UNDERSCORE reduce production op -> INFIX7
-- On UINTEGER reduce production op -> INFIX7
-- On UFLOAT reduce production op -> INFIX7
-- On TRUE reduce production op -> INFIX7
-- On STRING reduce production op -> INFIX7
-- On SEMICOLON reduce production op -> INFIX7
-- On RPAREN reduce production op -> INFIX7
-- On MINUS reduce production op -> INFIX7
-- On LPAREN reduce production op -> INFIX7
-- On LBRACKET reduce production op -> INFIX7
-- On FALSE reduce production op -> INFIX7
-- On CONSTRUCTOR reduce production op -> INFIX7
-- On COLON reduce production op -> INFIX7
-- On CHAR reduce production op -> INFIX7

State 601:
op -> INFIX6 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX6
-- On UNDERSCORE reduce production op -> INFIX6
-- On UINTEGER reduce production op -> INFIX6
-- On UFLOAT reduce production op -> INFIX6
-- On TRUE reduce production op -> INFIX6
-- On STRING reduce production op -> INFIX6
-- On SEMICOLON reduce production op -> INFIX6
-- On RPAREN reduce production op -> INFIX6
-- On MINUS reduce production op -> INFIX6
-- On LPAREN reduce production op -> INFIX6
-- On LBRACKET reduce production op -> INFIX6
-- On FALSE reduce production op -> INFIX6
-- On CONSTRUCTOR reduce production op -> INFIX6
-- On COLON reduce production op -> INFIX6
-- On CHAR reduce production op -> INFIX6

State 602:
op -> INFIX5 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX5
-- On UNDERSCORE reduce production op -> INFIX5
-- On UINTEGER reduce production op -> INFIX5
-- On UFLOAT reduce production op -> INFIX5
-- On TRUE reduce production op -> INFIX5
-- On STRING reduce production op -> INFIX5
-- On SEMICOLON reduce production op -> INFIX5
-- On RPAREN reduce production op -> INFIX5
-- On MINUS reduce production op -> INFIX5
-- On LPAREN reduce production op -> INFIX5
-- On LBRACKET reduce production op -> INFIX5
-- On FALSE reduce production op -> INFIX5
-- On CONSTRUCTOR reduce production op -> INFIX5
-- On COLON reduce production op -> INFIX5
-- On CHAR reduce production op -> INFIX5

State 603:
op -> INFIX4 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX4
-- On UNDERSCORE reduce production op -> INFIX4
-- On UINTEGER reduce production op -> INFIX4
-- On UFLOAT reduce production op -> INFIX4
-- On TRUE reduce production op -> INFIX4
-- On STRING reduce production op -> INFIX4
-- On SEMICOLON reduce production op -> INFIX4
-- On RPAREN reduce production op -> INFIX4
-- On MINUS reduce production op -> INFIX4
-- On LPAREN reduce production op -> INFIX4
-- On LBRACKET reduce production op -> INFIX4
-- On FALSE reduce production op -> INFIX4
-- On CONSTRUCTOR reduce production op -> INFIX4
-- On COLON reduce production op -> INFIX4
-- On CHAR reduce production op -> INFIX4

State 604:
op -> INFIX3 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX3
-- On UNDERSCORE reduce production op -> INFIX3
-- On UINTEGER reduce production op -> INFIX3
-- On UFLOAT reduce production op -> INFIX3
-- On TRUE reduce production op -> INFIX3
-- On STRING reduce production op -> INFIX3
-- On SEMICOLON reduce production op -> INFIX3
-- On RPAREN reduce production op -> INFIX3
-- On MINUS reduce production op -> INFIX3
-- On LPAREN reduce production op -> INFIX3
-- On LBRACKET reduce production op -> INFIX3
-- On FALSE reduce production op -> INFIX3
-- On CONSTRUCTOR reduce production op -> INFIX3
-- On COLON reduce production op -> INFIX3
-- On CHAR reduce production op -> INFIX3

State 605:
op -> INFIX2 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX2
-- On UNDERSCORE reduce production op -> INFIX2
-- On UINTEGER reduce production op -> INFIX2
-- On UFLOAT reduce production op -> INFIX2
-- On TRUE reduce production op -> INFIX2
-- On STRING reduce production op -> INFIX2
-- On SEMICOLON reduce production op -> INFIX2
-- On RPAREN reduce production op -> INFIX2
-- On MINUS reduce production op -> INFIX2
-- On LPAREN reduce production op -> INFIX2
-- On LBRACKET reduce production op -> INFIX2
-- On FALSE reduce production op -> INFIX2
-- On CONSTRUCTOR reduce production op -> INFIX2
-- On COLON reduce production op -> INFIX2
-- On CHAR reduce production op -> INFIX2

State 606:
op -> INFIX1 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX1
-- On UNDERSCORE reduce production op -> INFIX1
-- On UINTEGER reduce production op -> INFIX1
-- On UFLOAT reduce production op -> INFIX1
-- On TRUE reduce production op -> INFIX1
-- On STRING reduce production op -> INFIX1
-- On SEMICOLON reduce production op -> INFIX1
-- On RPAREN reduce production op -> INFIX1
-- On MINUS reduce production op -> INFIX1
-- On LPAREN reduce production op -> INFIX1
-- On LBRACKET reduce production op -> INFIX1
-- On FALSE reduce production op -> INFIX1
-- On CONSTRUCTOR reduce production op -> INFIX1
-- On COLON reduce production op -> INFIX1
-- On CHAR reduce production op -> INFIX1

State 607:
op -> INFIX0 . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN MINUS LPAREN LBRACKET FALSE CONSTRUCTOR COLON CHAR ]
-- On VARIABLE reduce production op -> INFIX0
-- On UNDERSCORE reduce production op -> INFIX0
-- On UINTEGER reduce production op -> INFIX0
-- On UFLOAT reduce production op -> INFIX0
-- On TRUE reduce production op -> INFIX0
-- On STRING reduce production op -> INFIX0
-- On SEMICOLON reduce production op -> INFIX0
-- On RPAREN reduce production op -> INFIX0
-- On MINUS reduce production op -> INFIX0
-- On LPAREN reduce production op -> INFIX0
-- On LBRACKET reduce production op -> INFIX0
-- On FALSE reduce production op -> INFIX0
-- On CONSTRUCTOR reduce production op -> INFIX0
-- On COLON reduce production op -> INFIX0
-- On CHAR reduce production op -> INFIX0

State 608:
parenthesized_thing -> LPAREN DOT . record_label RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 170
-- On UINTEGER shift to state 171
-- On STRING shift to state 172
-- On CONSTRUCTOR shift to state 173
-- On record_label shift to state 609
-- On field_label shift to state 224

State 609:
parenthesized_thing -> LPAREN DOT record_label . RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On RPAREN shift to state 610

State 610:
parenthesized_thing -> LPAREN DOT record_label RPAREN . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On VBAR reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On VARIABLE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On VALUES reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On UINTEGER reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On UFLOAT reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On TRUE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On STRING reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On SEMICOLON reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On RPAREN reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On RETURNING reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On RBRACKET reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On RBRACE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On RARROW reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On POSTFIXOP reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On MINUSDOT reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On MINUS reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On LPAREN reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR9 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR8 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR7 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR6 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR5 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR4 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR3 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR2 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR1 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXR0 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL9 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL8 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL7 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL6 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL5 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL4 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL3 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL2 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL1 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIXL0 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX9 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX8 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX7 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX6 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX5 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX4 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX3 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX2 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX1 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On INFIX0 reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On FATRARROW reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On FALSE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On EQUALSTILDE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On END reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On ELSE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On DOTDOT reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On DOT reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On COMMA reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On COLONCOLON reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On COLON reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On CHAR reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On CASE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On BARRBRACE reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On BARBAR reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN
-- On AMPAMP reduce production parenthesized_thing -> LPAREN DOT record_label RPAREN

State 611:
constructor_expression -> CONSTRUCTOR . [ WITH RPAREN MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE COMMA COLONCOLON COLON BARBAR AMPAMP ]
constructor_expression -> CONSTRUCTOR . parenthesized_thing [ WITH RPAREN MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE COMMA COLONCOLON COLON BARBAR AMPAMP ]
field_label -> CONSTRUCTOR . [ EQ ]
-- On LPAREN shift to state 311
-- On parenthesized_thing shift to state 365
-- On WITH reduce production constructor_expression -> CONSTRUCTOR
-- On RPAREN reduce production constructor_expression -> CONSTRUCTOR
-- On MINUSDOT reduce production constructor_expression -> CONSTRUCTOR
-- On MINUS reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR9 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR8 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR7 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR6 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR5 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR4 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR3 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR2 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR1 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXR0 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL9 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL8 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL7 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL6 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL5 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL4 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL3 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL2 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL1 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIXL0 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX9 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX8 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX7 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX6 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX5 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX4 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX3 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX2 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX1 reduce production constructor_expression -> CONSTRUCTOR
-- On INFIX0 reduce production constructor_expression -> CONSTRUCTOR
-- On EQUALSTILDE reduce production constructor_expression -> CONSTRUCTOR
-- On EQ reduce production field_label -> CONSTRUCTOR
-- On COMMA reduce production constructor_expression -> CONSTRUCTOR
-- On COLONCOLON reduce production constructor_expression -> CONSTRUCTOR
-- On COLON reduce production constructor_expression -> CONSTRUCTOR
-- On BARBAR reduce production constructor_expression -> CONSTRUCTOR
-- On AMPAMP reduce production constructor_expression -> CONSTRUCTOR

State 612:
binop -> op . [ RPAREN ]
-- On RPAREN reduce production binop -> op

State 613:
parenthesized_thing -> LPAREN labeled_exps . VBAR exp RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
parenthesized_thing -> LPAREN labeled_exps . RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On VBAR shift to state 614
-- On RPAREN shift to state 617

State 614:
parenthesized_thing -> LPAREN labeled_exps VBAR . exp RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 615
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 615:
parenthesized_thing -> LPAREN labeled_exps VBAR exp . RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On RPAREN shift to state 616

State 616:
parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On VBAR reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On VARIABLE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On VALUES reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On UINTEGER reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On UFLOAT reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On TRUE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On STRING reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On SEMICOLON reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On RPAREN reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On RETURNING reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On RBRACKET reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On RBRACE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On RARROW reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On POSTFIXOP reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On MINUSDOT reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On MINUS reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On LPAREN reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR9 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR8 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR7 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR6 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR5 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR4 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR3 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR2 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR1 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXR0 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL9 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL8 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL7 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL6 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL5 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL4 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL3 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL2 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL1 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIXL0 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX9 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX8 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX7 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX6 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX5 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX4 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX3 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX2 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX1 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On INFIX0 reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On FATRARROW reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On FALSE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On EQUALSTILDE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On END reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On ELSE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On DOTDOT reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On DOT reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On COMMA reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On COLONCOLON reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On COLON reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On CHAR reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On CASE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On BARRBRACE reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On BARBAR reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN
-- On AMPAMP reduce production parenthesized_thing -> LPAREN labeled_exps VBAR exp RPAREN

State 617:
parenthesized_thing -> LPAREN labeled_exps RPAREN . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On VBAR reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On VARIABLE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On VALUES reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On UINTEGER reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On UFLOAT reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On TRUE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On STRING reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On SEMICOLON reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On RPAREN reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On RETURNING reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On RBRACKET reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On RBRACE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On RARROW reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On POSTFIXOP reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On MINUSDOT reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On MINUS reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On LPAREN reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR9 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR8 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR7 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR6 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR5 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR4 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR3 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR2 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR1 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXR0 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL9 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL8 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL7 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL6 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL5 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL4 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL3 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL2 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL1 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIXL0 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX9 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX8 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX7 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX6 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX5 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX4 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX3 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX2 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX1 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On INFIX0 reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On FATRARROW reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On FALSE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On EQUALSTILDE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On END reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On ELSE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On DOTDOT reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On DOT reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On COMMA reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On COLONCOLON reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On COLON reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On CHAR reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On CASE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On BARRBRACE reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On BARBAR reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN
-- On AMPAMP reduce production parenthesized_thing -> LPAREN labeled_exps RPAREN

State 618:
parenthesized_thing -> LPAREN exps . RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On RPAREN shift to state 619

State 619:
parenthesized_thing -> LPAREN exps RPAREN . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On VBAR reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On VARIABLE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On VALUES reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On UINTEGER reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On UFLOAT reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On TRUE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On STRING reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On SEMICOLON reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On RPAREN reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On RETURNING reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On RBRACKET reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On RBRACE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On RARROW reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On POSTFIXOP reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On MINUSDOT reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On MINUS reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On LPAREN reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR9 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR8 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR7 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR6 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR5 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR4 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR3 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR2 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR1 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXR0 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL9 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL8 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL7 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL6 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL5 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL4 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL3 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL2 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL1 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIXL0 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX9 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX8 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX7 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX6 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX5 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX4 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX3 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX2 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX1 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On INFIX0 reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On FATRARROW reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On FALSE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On EQUALSTILDE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On END reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On ELSE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On DOTDOT reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On DOT reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On COMMA reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On COLONCOLON reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On COLON reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On CHAR reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On CASE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On BARRBRACE reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On BARBAR reduce production parenthesized_thing -> LPAREN exps RPAREN
-- On AMPAMP reduce production parenthesized_thing -> LPAREN exps RPAREN

State 620:
exps -> exp . COMMA exps [ RPAREN ]
exps -> exp . [ RPAREN ]
parenthesized_thing -> LPAREN exp . WITH labeled_exps RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH shift to state 621
-- On COMMA shift to state 516
-- On RPAREN reduce production exps -> exp

State 621:
parenthesized_thing -> LPAREN exp WITH . labeled_exps RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 170
-- On UINTEGER shift to state 171
-- On STRING shift to state 172
-- On CONSTRUCTOR shift to state 173
-- On record_label shift to state 559
-- On labeled_exps shift to state 622
-- On field_label shift to state 224

State 622:
parenthesized_thing -> LPAREN exp WITH labeled_exps . RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On RPAREN shift to state 623

State 623:
parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On VBAR reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On VARIABLE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On VALUES reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On UINTEGER reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On UFLOAT reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On TRUE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On STRING reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On SEMICOLON reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On RPAREN reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On RETURNING reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On RBRACKET reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On RBRACE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On RARROW reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On POSTFIXOP reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On MINUSDOT reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On MINUS reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On LPAREN reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR9 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR8 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR7 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR6 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR5 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR4 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR3 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR2 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR1 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXR0 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL9 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL8 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL7 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL6 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL5 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL4 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL3 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL2 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL1 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIXL0 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX9 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX8 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX7 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX6 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX5 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX4 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX3 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX2 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX1 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On INFIX0 reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On FATRARROW reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On FALSE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On EQUALSTILDE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On END reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On ELSE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On DOTDOT reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On DOT reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On COMMA reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On COLONCOLON reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On COLON reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On CHAR reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On CASE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On BARRBRACE reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On BARBAR reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN
-- On AMPAMP reduce production parenthesized_thing -> LPAREN exp WITH labeled_exps RPAREN

State 624:
parenthesized_thing -> LPAREN binop . RPAREN [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On RPAREN shift to state 625

State 625:
parenthesized_thing -> LPAREN binop RPAREN . [ WITH VBAR VARIABLE VALUES UINTEGER UFLOAT TRUE STRING SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW FALSE EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CHAR CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On VBAR reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On VARIABLE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On VALUES reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On UINTEGER reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On UFLOAT reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On TRUE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On STRING reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On SEMICOLON reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On RPAREN reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On RETURNING reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On RBRACKET reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On RBRACE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On RARROW reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On POSTFIXOP reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On MINUSDOT reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On MINUS reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On LPAREN reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR9 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR8 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR7 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR6 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR5 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR4 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR3 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR2 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR1 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXR0 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL9 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL8 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL7 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL6 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL5 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL4 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL3 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL2 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL1 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIXL0 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX9 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX8 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX7 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX6 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX5 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX4 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX3 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX2 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX1 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On INFIX0 reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On FATRARROW reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On FALSE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On EQUALSTILDE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On END reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On ELSE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On DOTDOT reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On DOT reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On COMMA reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On COLONCOLON reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On COLON reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On CHAR reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On CASE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On BARRBRACE reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On BARBAR reduce production parenthesized_thing -> LPAREN binop RPAREN
-- On AMPAMP reduce production parenthesized_thing -> LPAREN binop RPAREN

State 626:
page_placement -> LBRACEBAR exp . BARRBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On BARRBRACE shift to state 627

State 627:
page_placement -> LBRACEBAR exp BARRBRACE . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production page_placement -> LBRACEBAR exp BARRBRACE
-- On LBRACEBAR reduce production page_placement -> LBRACEBAR exp BARRBRACE
-- On LBRACE reduce production page_placement -> LBRACEBAR exp BARRBRACE
-- On ENDTAG reduce production page_placement -> LBRACEBAR exp BARRBRACE
-- On CDATA reduce production page_placement -> LBRACEBAR exp BARRBRACE

State 628:
block -> LBRACE . block_contents RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
formlet_binding -> LBRACE . logical_expression RARROW pattern RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
formlet_placement -> LBRACE . logical_expression FATRARROW logical_expression RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
formlet_placement -> LBRACE . logical_expression FATRARROW logical_expression WITH logical_expression RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On VARIABLE shift to state 6
-- On VAR shift to state 279
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TYPENAME shift to state 289
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On SEMICOLON shift to state 297
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 629
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typedecl shift to state 633
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On perhaps_semi shift to state 635
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 636
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 646
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block_contents shift to state 648
-- On block shift to state 374
-- On bindings shift to state 650
-- On binding shift to state 654
-- On atomic_expression shift to state 375
-- On RBRACE reduce production perhaps_semi -> 

State 629:
binding -> FUN . var arg_lists block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
primary_expression -> FUN . arg_lists block [ SEMICOLON RBRACE RARROW POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE DOT COLONCOLON COLON CASE BARBAR AMPAMP ]
-- On VARIABLE shift to state 8
-- On LPAREN shift to state 321
-- On var shift to state 630
-- On multi_args shift to state 325
-- On arg_lists shift to state 327

State 630:
binding -> FUN var . arg_lists block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
-- On LPAREN shift to state 321
-- On multi_args shift to state 325
-- On arg_lists shift to state 631

State 631:
binding -> FUN var arg_lists . block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
-- On LBRACE shift to state 278
-- On block shift to state 632

State 632:
binding -> FUN var arg_lists block . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
-- On VARIABLE reduce production binding -> FUN var arg_lists block
-- On VAR reduce production binding -> FUN var arg_lists block
-- On UPDATE reduce production binding -> FUN var arg_lists block
-- On UINTEGER reduce production binding -> FUN var arg_lists block
-- On UFLOAT reduce production binding -> FUN var arg_lists block
-- On TYPENAME reduce production binding -> FUN var arg_lists block
-- On TRUE reduce production binding -> FUN var arg_lists block
-- On TABLE reduce production binding -> FUN var arg_lists block
-- On SWITCH reduce production binding -> FUN var arg_lists block
-- On STRING reduce production binding -> FUN var arg_lists block
-- On SPAWNWAIT reduce production binding -> FUN var arg_lists block
-- On SPAWN reduce production binding -> FUN var arg_lists block
-- On RECEIVE reduce production binding -> FUN var arg_lists block
-- On QUERY reduce production binding -> FUN var arg_lists block
-- On PREFIXOP reduce production binding -> FUN var arg_lists block
-- On PAGE reduce production binding -> FUN var arg_lists block
-- On MINUSDOT reduce production binding -> FUN var arg_lists block
-- On MINUS reduce production binding -> FUN var arg_lists block
-- On LXML reduce production binding -> FUN var arg_lists block
-- On LPAREN reduce production binding -> FUN var arg_lists block
-- On LBRACKET reduce production binding -> FUN var arg_lists block
-- On LBRACE reduce production binding -> FUN var arg_lists block
-- On INSERT reduce production binding -> FUN var arg_lists block
-- On IF reduce production binding -> FUN var arg_lists block
-- On FUN reduce production binding -> FUN var arg_lists block
-- On FORMLET reduce production binding -> FUN var arg_lists block
-- On FOR reduce production binding -> FUN var arg_lists block
-- On FALSE reduce production binding -> FUN var arg_lists block
-- On ESCAPE reduce production binding -> FUN var arg_lists block
-- On DELETE reduce production binding -> FUN var arg_lists block
-- On DATABASE reduce production binding -> FUN var arg_lists block
-- On CONSTRUCTOR reduce production binding -> FUN var arg_lists block
-- On CHAR reduce production binding -> FUN var arg_lists block

State 633:
binding -> typedecl . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
-- On SEMICOLON shift to state 634

State 634:
binding -> typedecl SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
-- On VARIABLE reduce production binding -> typedecl SEMICOLON
-- On VAR reduce production binding -> typedecl SEMICOLON
-- On UPDATE reduce production binding -> typedecl SEMICOLON
-- On UINTEGER reduce production binding -> typedecl SEMICOLON
-- On UFLOAT reduce production binding -> typedecl SEMICOLON
-- On TYPENAME reduce production binding -> typedecl SEMICOLON
-- On TRUE reduce production binding -> typedecl SEMICOLON
-- On TABLE reduce production binding -> typedecl SEMICOLON
-- On SWITCH reduce production binding -> typedecl SEMICOLON
-- On STRING reduce production binding -> typedecl SEMICOLON
-- On SPAWNWAIT reduce production binding -> typedecl SEMICOLON
-- On SPAWN reduce production binding -> typedecl SEMICOLON
-- On RECEIVE reduce production binding -> typedecl SEMICOLON
-- On QUERY reduce production binding -> typedecl SEMICOLON
-- On PREFIXOP reduce production binding -> typedecl SEMICOLON
-- On PAGE reduce production binding -> typedecl SEMICOLON
-- On MINUSDOT reduce production binding -> typedecl SEMICOLON
-- On MINUS reduce production binding -> typedecl SEMICOLON
-- On LXML reduce production binding -> typedecl SEMICOLON
-- On LPAREN reduce production binding -> typedecl SEMICOLON
-- On LBRACKET reduce production binding -> typedecl SEMICOLON
-- On LBRACE reduce production binding -> typedecl SEMICOLON
-- On INSERT reduce production binding -> typedecl SEMICOLON
-- On IF reduce production binding -> typedecl SEMICOLON
-- On FUN reduce production binding -> typedecl SEMICOLON
-- On FORMLET reduce production binding -> typedecl SEMICOLON
-- On FOR reduce production binding -> typedecl SEMICOLON
-- On FALSE reduce production binding -> typedecl SEMICOLON
-- On ESCAPE reduce production binding -> typedecl SEMICOLON
-- On DELETE reduce production binding -> typedecl SEMICOLON
-- On DATABASE reduce production binding -> typedecl SEMICOLON
-- On CONSTRUCTOR reduce production binding -> typedecl SEMICOLON
-- On CHAR reduce production binding -> typedecl SEMICOLON

State 635:
block_contents -> perhaps_semi . [ RBRACE CASE ]
-- On RBRACE reduce production block_contents -> perhaps_semi
-- On CASE reduce production block_contents -> perhaps_semi

State 636:
formlet_binding -> LBRACE logical_expression . RARROW pattern RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
formlet_placement -> LBRACE logical_expression . FATRARROW logical_expression RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
formlet_placement -> LBRACE logical_expression . FATRARROW logical_expression WITH logical_expression RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
logical_expression -> logical_expression . BARBAR infixl_0 [ SEMICOLON RBRACE RARROW FATRARROW COLON BARBAR AMPAMP ]
logical_expression -> logical_expression . AMPAMP infixl_0 [ SEMICOLON RBRACE RARROW FATRARROW COLON BARBAR AMPAMP ]
typed_expression -> logical_expression . [ SEMICOLON RBRACE COLON ]
-- On RARROW shift to state 637
-- On FATRARROW shift to state 640
-- On BARBAR shift to state 385
-- On AMPAMP shift to state 502
-- On SEMICOLON reduce production typed_expression -> logical_expression
-- On RBRACE reduce production typed_expression -> logical_expression
-- On COLON reduce production typed_expression -> logical_expression

State 637:
formlet_binding -> LBRACE logical_expression RARROW . pattern RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On VARIABLE shift to state 17
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 39
-- On CHAR shift to state 41
-- On typed_pattern shift to state 42
-- On primary_pattern shift to state 239
-- On pattern shift to state 638
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 251

State 638:
formlet_binding -> LBRACE logical_expression RARROW pattern . RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On RBRACE shift to state 639

State 639:
formlet_binding -> LBRACE logical_expression RARROW pattern RBRACE . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production formlet_binding -> LBRACE logical_expression RARROW pattern RBRACE
-- On LBRACEBAR reduce production formlet_binding -> LBRACE logical_expression RARROW pattern RBRACE
-- On LBRACE reduce production formlet_binding -> LBRACE logical_expression RARROW pattern RBRACE
-- On ENDTAG reduce production formlet_binding -> LBRACE logical_expression RARROW pattern RBRACE
-- On CDATA reduce production formlet_binding -> LBRACE logical_expression RARROW pattern RBRACE

State 640:
formlet_placement -> LBRACE logical_expression FATRARROW . logical_expression RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
formlet_placement -> LBRACE logical_expression FATRARROW . logical_expression WITH logical_expression RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 641
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 641:
formlet_placement -> LBRACE logical_expression FATRARROW logical_expression . RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
formlet_placement -> LBRACE logical_expression FATRARROW logical_expression . WITH logical_expression RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
logical_expression -> logical_expression . BARBAR infixl_0 [ WITH RBRACE BARBAR AMPAMP ]
logical_expression -> logical_expression . AMPAMP infixl_0 [ WITH RBRACE BARBAR AMPAMP ]
-- On WITH shift to state 642
-- On RBRACE shift to state 645
-- On BARBAR shift to state 385
-- On AMPAMP shift to state 502

State 642:
formlet_placement -> LBRACE logical_expression FATRARROW logical_expression WITH . logical_expression RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On VARIABLE shift to state 6
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On FUN shift to state 320
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 643
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 643:
formlet_placement -> LBRACE logical_expression FATRARROW logical_expression WITH logical_expression . RBRACE [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
logical_expression -> logical_expression . BARBAR infixl_0 [ RBRACE BARBAR AMPAMP ]
logical_expression -> logical_expression . AMPAMP infixl_0 [ RBRACE BARBAR AMPAMP ]
-- On RBRACE shift to state 644
-- On BARBAR shift to state 385
-- On AMPAMP shift to state 502

State 644:
formlet_placement -> LBRACE logical_expression FATRARROW logical_expression WITH logical_expression RBRACE . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression WITH logical_expression RBRACE
-- On LBRACEBAR reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression WITH logical_expression RBRACE
-- On LBRACE reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression WITH logical_expression RBRACE
-- On ENDTAG reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression WITH logical_expression RBRACE
-- On CDATA reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression WITH logical_expression RBRACE

State 645:
formlet_placement -> LBRACE logical_expression FATRARROW logical_expression RBRACE . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression RBRACE
-- On LBRACEBAR reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression RBRACE
-- On LBRACE reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression RBRACE
-- On ENDTAG reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression RBRACE
-- On CDATA reduce production formlet_placement -> LBRACE logical_expression FATRARROW logical_expression RBRACE

State 646:
binding -> exp . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
block_contents -> exp . SEMICOLON [ RBRACE CASE ]
block_contents -> exp . [ RBRACE CASE ]
-- On SEMICOLON shift to state 647
-- On RBRACE reduce production block_contents -> exp
-- On CASE reduce production block_contents -> exp

State 647:
binding -> exp SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
block_contents -> exp SEMICOLON . [ RBRACE CASE ]
-- On VARIABLE reduce production binding -> exp SEMICOLON
-- On VAR reduce production binding -> exp SEMICOLON
-- On UPDATE reduce production binding -> exp SEMICOLON
-- On UINTEGER reduce production binding -> exp SEMICOLON
-- On UFLOAT reduce production binding -> exp SEMICOLON
-- On TYPENAME reduce production binding -> exp SEMICOLON
-- On TRUE reduce production binding -> exp SEMICOLON
-- On TABLE reduce production binding -> exp SEMICOLON
-- On SWITCH reduce production binding -> exp SEMICOLON
-- On STRING reduce production binding -> exp SEMICOLON
-- On SPAWNWAIT reduce production binding -> exp SEMICOLON
-- On SPAWN reduce production binding -> exp SEMICOLON
-- On RECEIVE reduce production binding -> exp SEMICOLON
-- On RBRACE reduce production block_contents -> exp SEMICOLON
-- On QUERY reduce production binding -> exp SEMICOLON
-- On PREFIXOP reduce production binding -> exp SEMICOLON
-- On PAGE reduce production binding -> exp SEMICOLON
-- On MINUSDOT reduce production binding -> exp SEMICOLON
-- On MINUS reduce production binding -> exp SEMICOLON
-- On LXML reduce production binding -> exp SEMICOLON
-- On LPAREN reduce production binding -> exp SEMICOLON
-- On LBRACKET reduce production binding -> exp SEMICOLON
-- On LBRACE reduce production binding -> exp SEMICOLON
-- On INSERT reduce production binding -> exp SEMICOLON
-- On IF reduce production binding -> exp SEMICOLON
-- On FUN reduce production binding -> exp SEMICOLON
-- On FORMLET reduce production binding -> exp SEMICOLON
-- On FOR reduce production binding -> exp SEMICOLON
-- On FALSE reduce production binding -> exp SEMICOLON
-- On ESCAPE reduce production binding -> exp SEMICOLON
-- On DELETE reduce production binding -> exp SEMICOLON
-- On DATABASE reduce production binding -> exp SEMICOLON
-- On CONSTRUCTOR reduce production binding -> exp SEMICOLON
-- On CHAR reduce production binding -> exp SEMICOLON
-- On CASE reduce production block_contents -> exp SEMICOLON

State 648:
block -> LBRACE block_contents . RBRACE [ WITH VBAR VARIABLE VAR VALUES UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING STAR SPAWNWAIT SPAWN SLASHRXML SLASHFLAGS SLASH SIG SEMICOLON RXML RQUOTE RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW RANGE QUOTEDMETA QUESTION QUERY PREFIXOP PREFIX POSTFIXOP POSTFIX PLUS PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACEBAR LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXR INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIXL INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 INFIX IF FUN FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DOLLAR DELETE DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CDATA CASE CARET BARRBRACE BARBAR AMPAMP ALTERNATE ALIEN ]
-- On RBRACE shift to state 649

State 649:
block -> LBRACE block_contents RBRACE . [ WITH VBAR VARIABLE VAR VALUES UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING STAR SPAWNWAIT SPAWN SLASHRXML SLASHFLAGS SLASH SIG SEMICOLON RXML RQUOTE RPAREN RETURNING RECEIVE RBRACKET RBRACE RARROW RANGE QUOTEDMETA QUESTION QUERY PREFIXOP PREFIX POSTFIXOP POSTFIX PLUS PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACEBAR LBRACE INSERT INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXR INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIXL INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 INFIX IF FUN FORMLET FOR FATRARROW FALSE ESCAPE EQUALSTILDE ENDTAG END ELSE DOTDOT DOT DOLLAR DELETE DATABASE CONSTRUCTOR COMMA COLONCOLON COLON CHAR CDATA CASE CARET BARRBRACE BARBAR AMPAMP ALTERNATE ALIEN ]
-- On WITH reduce production block -> LBRACE block_contents RBRACE
-- On VBAR reduce production block -> LBRACE block_contents RBRACE
-- On VARIABLE reduce production block -> LBRACE block_contents RBRACE
-- On VAR reduce production block -> LBRACE block_contents RBRACE
-- On VALUES reduce production block -> LBRACE block_contents RBRACE
-- On UPDATE reduce production block -> LBRACE block_contents RBRACE
-- On UINTEGER reduce production block -> LBRACE block_contents RBRACE
-- On UFLOAT reduce production block -> LBRACE block_contents RBRACE
-- On TYPENAME reduce production block -> LBRACE block_contents RBRACE
-- On TRUE reduce production block -> LBRACE block_contents RBRACE
-- On TABLE reduce production block -> LBRACE block_contents RBRACE
-- On SWITCH reduce production block -> LBRACE block_contents RBRACE
-- On STRING reduce production block -> LBRACE block_contents RBRACE
-- On STAR reduce production block -> LBRACE block_contents RBRACE
-- On SPAWNWAIT reduce production block -> LBRACE block_contents RBRACE
-- On SPAWN reduce production block -> LBRACE block_contents RBRACE
-- On SLASHRXML reduce production block -> LBRACE block_contents RBRACE
-- On SLASHFLAGS reduce production block -> LBRACE block_contents RBRACE
-- On SLASH reduce production block -> LBRACE block_contents RBRACE
-- On SIG reduce production block -> LBRACE block_contents RBRACE
-- On SEMICOLON reduce production block -> LBRACE block_contents RBRACE
-- On RXML reduce production block -> LBRACE block_contents RBRACE
-- On RQUOTE reduce production block -> LBRACE block_contents RBRACE
-- On RPAREN reduce production block -> LBRACE block_contents RBRACE
-- On RETURNING reduce production block -> LBRACE block_contents RBRACE
-- On RECEIVE reduce production block -> LBRACE block_contents RBRACE
-- On RBRACKET reduce production block -> LBRACE block_contents RBRACE
-- On RBRACE reduce production block -> LBRACE block_contents RBRACE
-- On RARROW reduce production block -> LBRACE block_contents RBRACE
-- On RANGE reduce production block -> LBRACE block_contents RBRACE
-- On QUOTEDMETA reduce production block -> LBRACE block_contents RBRACE
-- On QUESTION reduce production block -> LBRACE block_contents RBRACE
-- On QUERY reduce production block -> LBRACE block_contents RBRACE
-- On PREFIXOP reduce production block -> LBRACE block_contents RBRACE
-- On PREFIX reduce production block -> LBRACE block_contents RBRACE
-- On POSTFIXOP reduce production block -> LBRACE block_contents RBRACE
-- On POSTFIX reduce production block -> LBRACE block_contents RBRACE
-- On PLUS reduce production block -> LBRACE block_contents RBRACE
-- On PAGE reduce production block -> LBRACE block_contents RBRACE
-- On OP reduce production block -> LBRACE block_contents RBRACE
-- On MINUSDOT reduce production block -> LBRACE block_contents RBRACE
-- On MINUS reduce production block -> LBRACE block_contents RBRACE
-- On LXML reduce production block -> LBRACE block_contents RBRACE
-- On LPAREN reduce production block -> LBRACE block_contents RBRACE
-- On LBRACKET reduce production block -> LBRACE block_contents RBRACE
-- On LBRACEBAR reduce production block -> LBRACE block_contents RBRACE
-- On LBRACE reduce production block -> LBRACE block_contents RBRACE
-- On INSERT reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR9 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR8 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR7 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR6 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR5 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR4 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR3 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR2 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR1 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR0 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXR reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL9 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL8 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL7 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL6 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL5 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL4 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL3 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL2 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL1 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL0 reduce production block -> LBRACE block_contents RBRACE
-- On INFIXL reduce production block -> LBRACE block_contents RBRACE
-- On INFIX9 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX8 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX7 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX6 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX5 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX4 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX3 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX2 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX1 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX0 reduce production block -> LBRACE block_contents RBRACE
-- On INFIX reduce production block -> LBRACE block_contents RBRACE
-- On IF reduce production block -> LBRACE block_contents RBRACE
-- On FUN reduce production block -> LBRACE block_contents RBRACE
-- On FORMLET reduce production block -> LBRACE block_contents RBRACE
-- On FOR reduce production block -> LBRACE block_contents RBRACE
-- On FATRARROW reduce production block -> LBRACE block_contents RBRACE
-- On FALSE reduce production block -> LBRACE block_contents RBRACE
-- On ESCAPE reduce production block -> LBRACE block_contents RBRACE
-- On EQUALSTILDE reduce production block -> LBRACE block_contents RBRACE
-- On ENDTAG reduce production block -> LBRACE block_contents RBRACE
-- On END reduce production block -> LBRACE block_contents RBRACE
-- On ELSE reduce production block -> LBRACE block_contents RBRACE
-- On DOTDOT reduce production block -> LBRACE block_contents RBRACE
-- On DOT reduce production block -> LBRACE block_contents RBRACE
-- On DOLLAR reduce production block -> LBRACE block_contents RBRACE
-- On DELETE reduce production block -> LBRACE block_contents RBRACE
-- On DATABASE reduce production block -> LBRACE block_contents RBRACE
-- On CONSTRUCTOR reduce production block -> LBRACE block_contents RBRACE
-- On COMMA reduce production block -> LBRACE block_contents RBRACE
-- On COLONCOLON reduce production block -> LBRACE block_contents RBRACE
-- On COLON reduce production block -> LBRACE block_contents RBRACE
-- On CHAR reduce production block -> LBRACE block_contents RBRACE
-- On CDATA reduce production block -> LBRACE block_contents RBRACE
-- On CASE reduce production block -> LBRACE block_contents RBRACE
-- On CARET reduce production block -> LBRACE block_contents RBRACE
-- On BARRBRACE reduce production block -> LBRACE block_contents RBRACE
-- On BARBAR reduce production block -> LBRACE block_contents RBRACE
-- On AMPAMP reduce production block -> LBRACE block_contents RBRACE
-- On ALTERNATE reduce production block -> LBRACE block_contents RBRACE
-- On ALIEN reduce production block -> LBRACE block_contents RBRACE

State 650:
bindings -> bindings . binding [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
block_contents -> bindings . exp SEMICOLON [ RBRACE CASE ]
block_contents -> bindings . exp [ RBRACE CASE ]
-- On VARIABLE shift to state 6
-- On VAR shift to state 279
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TYPENAME shift to state 289
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 629
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typedecl shift to state 633
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 651
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On binding shift to state 653
-- On atomic_expression shift to state 375

State 651:
binding -> exp . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
block_contents -> bindings exp . SEMICOLON [ RBRACE CASE ]
block_contents -> bindings exp . [ RBRACE CASE ]
-- On SEMICOLON shift to state 652
-- On RBRACE reduce production block_contents -> bindings exp
-- On CASE reduce production block_contents -> bindings exp

State 652:
binding -> exp SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
block_contents -> bindings exp SEMICOLON . [ RBRACE CASE ]
-- On VARIABLE reduce production binding -> exp SEMICOLON
-- On VAR reduce production binding -> exp SEMICOLON
-- On UPDATE reduce production binding -> exp SEMICOLON
-- On UINTEGER reduce production binding -> exp SEMICOLON
-- On UFLOAT reduce production binding -> exp SEMICOLON
-- On TYPENAME reduce production binding -> exp SEMICOLON
-- On TRUE reduce production binding -> exp SEMICOLON
-- On TABLE reduce production binding -> exp SEMICOLON
-- On SWITCH reduce production binding -> exp SEMICOLON
-- On STRING reduce production binding -> exp SEMICOLON
-- On SPAWNWAIT reduce production binding -> exp SEMICOLON
-- On SPAWN reduce production binding -> exp SEMICOLON
-- On RECEIVE reduce production binding -> exp SEMICOLON
-- On RBRACE reduce production block_contents -> bindings exp SEMICOLON
-- On QUERY reduce production binding -> exp SEMICOLON
-- On PREFIXOP reduce production binding -> exp SEMICOLON
-- On PAGE reduce production binding -> exp SEMICOLON
-- On MINUSDOT reduce production binding -> exp SEMICOLON
-- On MINUS reduce production binding -> exp SEMICOLON
-- On LXML reduce production binding -> exp SEMICOLON
-- On LPAREN reduce production binding -> exp SEMICOLON
-- On LBRACKET reduce production binding -> exp SEMICOLON
-- On LBRACE reduce production binding -> exp SEMICOLON
-- On INSERT reduce production binding -> exp SEMICOLON
-- On IF reduce production binding -> exp SEMICOLON
-- On FUN reduce production binding -> exp SEMICOLON
-- On FORMLET reduce production binding -> exp SEMICOLON
-- On FOR reduce production binding -> exp SEMICOLON
-- On FALSE reduce production binding -> exp SEMICOLON
-- On ESCAPE reduce production binding -> exp SEMICOLON
-- On DELETE reduce production binding -> exp SEMICOLON
-- On DATABASE reduce production binding -> exp SEMICOLON
-- On CONSTRUCTOR reduce production binding -> exp SEMICOLON
-- On CHAR reduce production binding -> exp SEMICOLON
-- On CASE reduce production block_contents -> bindings exp SEMICOLON

State 653:
bindings -> bindings binding . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
-- On VARIABLE reduce production bindings -> bindings binding
-- On VAR reduce production bindings -> bindings binding
-- On UPDATE reduce production bindings -> bindings binding
-- On UINTEGER reduce production bindings -> bindings binding
-- On UFLOAT reduce production bindings -> bindings binding
-- On TYPENAME reduce production bindings -> bindings binding
-- On TRUE reduce production bindings -> bindings binding
-- On TABLE reduce production bindings -> bindings binding
-- On SWITCH reduce production bindings -> bindings binding
-- On STRING reduce production bindings -> bindings binding
-- On SPAWNWAIT reduce production bindings -> bindings binding
-- On SPAWN reduce production bindings -> bindings binding
-- On RECEIVE reduce production bindings -> bindings binding
-- On QUERY reduce production bindings -> bindings binding
-- On PREFIXOP reduce production bindings -> bindings binding
-- On PAGE reduce production bindings -> bindings binding
-- On MINUSDOT reduce production bindings -> bindings binding
-- On MINUS reduce production bindings -> bindings binding
-- On LXML reduce production bindings -> bindings binding
-- On LPAREN reduce production bindings -> bindings binding
-- On LBRACKET reduce production bindings -> bindings binding
-- On LBRACE reduce production bindings -> bindings binding
-- On INSERT reduce production bindings -> bindings binding
-- On IF reduce production bindings -> bindings binding
-- On FUN reduce production bindings -> bindings binding
-- On FORMLET reduce production bindings -> bindings binding
-- On FOR reduce production bindings -> bindings binding
-- On FALSE reduce production bindings -> bindings binding
-- On ESCAPE reduce production bindings -> bindings binding
-- On DELETE reduce production bindings -> bindings binding
-- On DATABASE reduce production bindings -> bindings binding
-- On CONSTRUCTOR reduce production bindings -> bindings binding
-- On CHAR reduce production bindings -> bindings binding

State 654:
bindings -> binding . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
-- On VARIABLE reduce production bindings -> binding
-- On VAR reduce production bindings -> binding
-- On UPDATE reduce production bindings -> binding
-- On UINTEGER reduce production bindings -> binding
-- On UFLOAT reduce production bindings -> binding
-- On TYPENAME reduce production bindings -> binding
-- On TRUE reduce production bindings -> binding
-- On TABLE reduce production bindings -> binding
-- On SWITCH reduce production bindings -> binding
-- On STRING reduce production bindings -> binding
-- On SPAWNWAIT reduce production bindings -> binding
-- On SPAWN reduce production bindings -> binding
-- On RECEIVE reduce production bindings -> binding
-- On QUERY reduce production bindings -> binding
-- On PREFIXOP reduce production bindings -> binding
-- On PAGE reduce production bindings -> binding
-- On MINUSDOT reduce production bindings -> binding
-- On MINUS reduce production bindings -> binding
-- On LXML reduce production bindings -> binding
-- On LPAREN reduce production bindings -> binding
-- On LBRACKET reduce production bindings -> binding
-- On LBRACE reduce production bindings -> binding
-- On INSERT reduce production bindings -> binding
-- On IF reduce production bindings -> binding
-- On FUN reduce production bindings -> binding
-- On FORMLET reduce production bindings -> binding
-- On FOR reduce production bindings -> binding
-- On FALSE reduce production bindings -> binding
-- On ESCAPE reduce production bindings -> binding
-- On DELETE reduce production bindings -> binding
-- On DATABASE reduce production bindings -> binding
-- On CONSTRUCTOR reduce production bindings -> binding
-- On CHAR reduce production bindings -> binding

State 655:
xml_tree -> LXML RXML ENDTAG . [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
-- On YIELDS reduce production xml_tree -> LXML RXML ENDTAG
-- On WITH reduce production xml_tree -> LXML RXML ENDTAG
-- On VBAR reduce production xml_tree -> LXML RXML ENDTAG
-- On VALUES reduce production xml_tree -> LXML RXML ENDTAG
-- On SEMICOLON reduce production xml_tree -> LXML RXML ENDTAG
-- On RPAREN reduce production xml_tree -> LXML RXML ENDTAG
-- On RETURNING reduce production xml_tree -> LXML RXML ENDTAG
-- On RBRACKET reduce production xml_tree -> LXML RXML ENDTAG
-- On RBRACE reduce production xml_tree -> LXML RXML ENDTAG
-- On RARROW reduce production xml_tree -> LXML RXML ENDTAG
-- On POSTFIXOP reduce production xml_tree -> LXML RXML ENDTAG
-- On MINUSDOT reduce production xml_tree -> LXML RXML ENDTAG
-- On MINUS reduce production xml_tree -> LXML RXML ENDTAG
-- On LXML reduce production xml_tree -> LXML RXML ENDTAG
-- On LPAREN reduce production xml_tree -> LXML RXML ENDTAG
-- On LBRACEBAR reduce production xml_tree -> LXML RXML ENDTAG
-- On LBRACE reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR9 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR8 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR7 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR6 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR5 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR4 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR3 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR2 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR1 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXR0 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL9 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL8 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL7 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL6 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL5 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL4 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL3 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL2 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL1 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIXL0 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX9 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX8 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX7 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX6 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX5 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX4 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX3 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX2 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX1 reduce production xml_tree -> LXML RXML ENDTAG
-- On INFIX0 reduce production xml_tree -> LXML RXML ENDTAG
-- On FATRARROW reduce production xml_tree -> LXML RXML ENDTAG
-- On EQUALSTILDE reduce production xml_tree -> LXML RXML ENDTAG
-- On ENDTAG reduce production xml_tree -> LXML RXML ENDTAG
-- On END reduce production xml_tree -> LXML RXML ENDTAG
-- On ELSE reduce production xml_tree -> LXML RXML ENDTAG
-- On DOTDOT reduce production xml_tree -> LXML RXML ENDTAG
-- On DOT reduce production xml_tree -> LXML RXML ENDTAG
-- On COMMA reduce production xml_tree -> LXML RXML ENDTAG
-- On COLONCOLON reduce production xml_tree -> LXML RXML ENDTAG
-- On COLON reduce production xml_tree -> LXML RXML ENDTAG
-- On CDATA reduce production xml_tree -> LXML RXML ENDTAG
-- On CASE reduce production xml_tree -> LXML RXML ENDTAG
-- On BARRBRACE reduce production xml_tree -> LXML RXML ENDTAG
-- On BARBAR reduce production xml_tree -> LXML RXML ENDTAG
-- On AMPAMP reduce production xml_tree -> LXML RXML ENDTAG

State 656:
xml_contents -> CDATA . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production xml_contents -> CDATA
-- On LBRACEBAR reduce production xml_contents -> CDATA
-- On LBRACE reduce production xml_contents -> CDATA
-- On ENDTAG reduce production xml_contents -> CDATA
-- On CDATA reduce production xml_contents -> CDATA

State 657:
xml_contents -> xml_tree . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production xml_contents -> xml_tree
-- On LBRACEBAR reduce production xml_contents -> xml_tree
-- On LBRACE reduce production xml_contents -> xml_tree
-- On ENDTAG reduce production xml_contents -> xml_tree
-- On CDATA reduce production xml_contents -> xml_tree

State 658:
xml_tree -> LXML RXML xml_contents_list . ENDTAG [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
-- On ENDTAG shift to state 659

State 659:
xml_tree -> LXML RXML xml_contents_list ENDTAG . [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
-- On YIELDS reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On WITH reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On VBAR reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On VALUES reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On SEMICOLON reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On RPAREN reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On RETURNING reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On RBRACKET reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On RBRACE reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On RARROW reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On POSTFIXOP reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On MINUSDOT reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On MINUS reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On LXML reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On LPAREN reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On LBRACEBAR reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On LBRACE reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR9 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR8 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR7 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR6 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR5 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR4 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR3 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR2 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR1 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXR0 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL9 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL8 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL7 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL6 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL5 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL4 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL3 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL2 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL1 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIXL0 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX9 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX8 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX7 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX6 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX5 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX4 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX3 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX2 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX1 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On INFIX0 reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On FATRARROW reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On EQUALSTILDE reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On ENDTAG reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On END reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On ELSE reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On DOTDOT reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On DOT reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On COMMA reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On COLONCOLON reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On COLON reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On CDATA reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On CASE reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On BARRBRACE reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On BARBAR reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG
-- On AMPAMP reduce production xml_tree -> LXML RXML xml_contents_list ENDTAG

State 660:
xml_contents_list -> xml_contents . [ ENDTAG ]
xml_contents_list -> xml_contents . xml_contents_list [ ENDTAG ]
-- On LXML shift to state 303
-- On LBRACEBAR shift to state 307
-- On LBRACE shift to state 628
-- On CDATA shift to state 656
-- On xml_tree shift to state 657
-- On xml_contents_list shift to state 661
-- On xml_contents shift to state 660
-- On page_placement shift to state 662
-- On formlet_placement shift to state 663
-- On formlet_binding shift to state 664
-- On block shift to state 665
-- On ENDTAG reduce production xml_contents_list -> xml_contents

State 661:
xml_contents_list -> xml_contents xml_contents_list . [ ENDTAG ]
-- On ENDTAG reduce production xml_contents_list -> xml_contents xml_contents_list

State 662:
xml_contents -> page_placement . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production xml_contents -> page_placement
-- On LBRACEBAR reduce production xml_contents -> page_placement
-- On LBRACE reduce production xml_contents -> page_placement
-- On ENDTAG reduce production xml_contents -> page_placement
-- On CDATA reduce production xml_contents -> page_placement

State 663:
xml_contents -> formlet_placement . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production xml_contents -> formlet_placement
-- On LBRACEBAR reduce production xml_contents -> formlet_placement
-- On LBRACE reduce production xml_contents -> formlet_placement
-- On ENDTAG reduce production xml_contents -> formlet_placement
-- On CDATA reduce production xml_contents -> formlet_placement

State 664:
xml_contents -> formlet_binding . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production xml_contents -> formlet_binding
-- On LBRACEBAR reduce production xml_contents -> formlet_binding
-- On LBRACE reduce production xml_contents -> formlet_binding
-- On ENDTAG reduce production xml_contents -> formlet_binding
-- On CDATA reduce production xml_contents -> formlet_binding

State 665:
xml_contents -> block . [ LXML LBRACEBAR LBRACE ENDTAG CDATA ]
-- On LXML reduce production xml_contents -> block
-- On LBRACEBAR reduce production xml_contents -> block
-- On LBRACE reduce production xml_contents -> block
-- On ENDTAG reduce production xml_contents -> block
-- On CDATA reduce production xml_contents -> block

State 666:
attr -> xmlid . EQ LQUOTE attr_val RQUOTE [ VARIABLE SLASHRXML RXML LBRACE ]
attr -> xmlid . EQ LQUOTE RQUOTE [ VARIABLE SLASHRXML RXML LBRACE ]
-- On EQ shift to state 667

State 667:
attr -> xmlid EQ . LQUOTE attr_val RQUOTE [ VARIABLE SLASHRXML RXML LBRACE ]
attr -> xmlid EQ . LQUOTE RQUOTE [ VARIABLE SLASHRXML RXML LBRACE ]
-- On LQUOTE shift to state 668

State 668:
attr -> xmlid EQ LQUOTE . attr_val RQUOTE [ VARIABLE SLASHRXML RXML LBRACE ]
attr -> xmlid EQ LQUOTE . RQUOTE [ VARIABLE SLASHRXML RXML LBRACE ]
-- On STRING shift to state 669
-- On RQUOTE shift to state 673
-- On LBRACE shift to state 278
-- On block shift to state 670
-- On attr_val shift to state 674

State 669:
attr_val -> STRING . [ RQUOTE ]
attr_val -> STRING . attr_val [ RQUOTE ]
-- On STRING shift to state 669
-- On LBRACE shift to state 278
-- On block shift to state 670
-- On attr_val shift to state 672
-- On RQUOTE reduce production attr_val -> STRING

State 670:
attr_val -> block . [ RQUOTE ]
attr_val -> block . attr_val [ RQUOTE ]
-- On STRING shift to state 669
-- On LBRACE shift to state 278
-- On block shift to state 670
-- On attr_val shift to state 671
-- On RQUOTE reduce production attr_val -> block

State 671:
attr_val -> block attr_val . [ RQUOTE ]
-- On RQUOTE reduce production attr_val -> block attr_val

State 672:
attr_val -> STRING attr_val . [ RQUOTE ]
-- On RQUOTE reduce production attr_val -> STRING attr_val

State 673:
attr -> xmlid EQ LQUOTE RQUOTE . [ VARIABLE SLASHRXML RXML LBRACE ]
-- On VARIABLE reduce production attr -> xmlid EQ LQUOTE RQUOTE
-- On SLASHRXML reduce production attr -> xmlid EQ LQUOTE RQUOTE
-- On RXML reduce production attr -> xmlid EQ LQUOTE RQUOTE
-- On LBRACE reduce production attr -> xmlid EQ LQUOTE RQUOTE

State 674:
attr -> xmlid EQ LQUOTE attr_val . RQUOTE [ VARIABLE SLASHRXML RXML LBRACE ]
-- On RQUOTE shift to state 675

State 675:
attr -> xmlid EQ LQUOTE attr_val RQUOTE . [ VARIABLE SLASHRXML RXML LBRACE ]
-- On VARIABLE reduce production attr -> xmlid EQ LQUOTE attr_val RQUOTE
-- On SLASHRXML reduce production attr -> xmlid EQ LQUOTE attr_val RQUOTE
-- On RXML reduce production attr -> xmlid EQ LQUOTE attr_val RQUOTE
-- On LBRACE reduce production attr -> xmlid EQ LQUOTE attr_val RQUOTE

State 676:
attrs -> block . [ SLASHRXML RXML ]
-- On SLASHRXML reduce production attrs -> block
-- On RXML reduce production attrs -> block

State 677:
xml_tree -> LXML attrs . RXML ENDTAG [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
xml_tree -> LXML attrs . SLASHRXML [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
xml_tree -> LXML attrs . RXML xml_contents_list ENDTAG [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
-- On SLASHRXML shift to state 678
-- On RXML shift to state 679

State 678:
xml_tree -> LXML attrs SLASHRXML . [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
-- On YIELDS reduce production xml_tree -> LXML attrs SLASHRXML
-- On WITH reduce production xml_tree -> LXML attrs SLASHRXML
-- On VBAR reduce production xml_tree -> LXML attrs SLASHRXML
-- On VALUES reduce production xml_tree -> LXML attrs SLASHRXML
-- On SEMICOLON reduce production xml_tree -> LXML attrs SLASHRXML
-- On RPAREN reduce production xml_tree -> LXML attrs SLASHRXML
-- On RETURNING reduce production xml_tree -> LXML attrs SLASHRXML
-- On RBRACKET reduce production xml_tree -> LXML attrs SLASHRXML
-- On RBRACE reduce production xml_tree -> LXML attrs SLASHRXML
-- On RARROW reduce production xml_tree -> LXML attrs SLASHRXML
-- On POSTFIXOP reduce production xml_tree -> LXML attrs SLASHRXML
-- On MINUSDOT reduce production xml_tree -> LXML attrs SLASHRXML
-- On MINUS reduce production xml_tree -> LXML attrs SLASHRXML
-- On LXML reduce production xml_tree -> LXML attrs SLASHRXML
-- On LPAREN reduce production xml_tree -> LXML attrs SLASHRXML
-- On LBRACEBAR reduce production xml_tree -> LXML attrs SLASHRXML
-- On LBRACE reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR9 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR8 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR7 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR6 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR5 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR4 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR3 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR2 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR1 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXR0 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL9 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL8 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL7 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL6 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL5 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL4 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL3 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL2 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL1 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIXL0 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX9 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX8 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX7 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX6 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX5 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX4 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX3 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX2 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX1 reduce production xml_tree -> LXML attrs SLASHRXML
-- On INFIX0 reduce production xml_tree -> LXML attrs SLASHRXML
-- On FATRARROW reduce production xml_tree -> LXML attrs SLASHRXML
-- On EQUALSTILDE reduce production xml_tree -> LXML attrs SLASHRXML
-- On ENDTAG reduce production xml_tree -> LXML attrs SLASHRXML
-- On END reduce production xml_tree -> LXML attrs SLASHRXML
-- On ELSE reduce production xml_tree -> LXML attrs SLASHRXML
-- On DOTDOT reduce production xml_tree -> LXML attrs SLASHRXML
-- On DOT reduce production xml_tree -> LXML attrs SLASHRXML
-- On COMMA reduce production xml_tree -> LXML attrs SLASHRXML
-- On COLONCOLON reduce production xml_tree -> LXML attrs SLASHRXML
-- On COLON reduce production xml_tree -> LXML attrs SLASHRXML
-- On CDATA reduce production xml_tree -> LXML attrs SLASHRXML
-- On CASE reduce production xml_tree -> LXML attrs SLASHRXML
-- On BARRBRACE reduce production xml_tree -> LXML attrs SLASHRXML
-- On BARBAR reduce production xml_tree -> LXML attrs SLASHRXML
-- On AMPAMP reduce production xml_tree -> LXML attrs SLASHRXML

State 679:
xml_tree -> LXML attrs RXML . ENDTAG [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
xml_tree -> LXML attrs RXML . xml_contents_list ENDTAG [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
-- On LXML shift to state 303
-- On LBRACEBAR shift to state 307
-- On LBRACE shift to state 628
-- On ENDTAG shift to state 680
-- On CDATA shift to state 656
-- On xml_tree shift to state 657
-- On xml_contents_list shift to state 681
-- On xml_contents shift to state 660
-- On page_placement shift to state 662
-- On formlet_placement shift to state 663
-- On formlet_binding shift to state 664
-- On block shift to state 665

State 680:
xml_tree -> LXML attrs RXML ENDTAG . [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
-- On YIELDS reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On WITH reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On VBAR reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On VALUES reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On SEMICOLON reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On RPAREN reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On RETURNING reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On RBRACKET reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On RBRACE reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On RARROW reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On POSTFIXOP reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On MINUSDOT reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On MINUS reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On LXML reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On LPAREN reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On LBRACEBAR reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On LBRACE reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR9 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR8 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR7 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR6 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR5 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR4 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR3 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR2 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR1 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXR0 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL9 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL8 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL7 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL6 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL5 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL4 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL3 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL2 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL1 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIXL0 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX9 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX8 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX7 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX6 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX5 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX4 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX3 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX2 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX1 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On INFIX0 reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On FATRARROW reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On EQUALSTILDE reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On ENDTAG reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On END reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On ELSE reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On DOTDOT reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On DOT reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On COMMA reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On COLONCOLON reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On COLON reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On CDATA reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On CASE reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On BARRBRACE reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On BARBAR reduce production xml_tree -> LXML attrs RXML ENDTAG
-- On AMPAMP reduce production xml_tree -> LXML attrs RXML ENDTAG

State 681:
xml_tree -> LXML attrs RXML xml_contents_list . ENDTAG [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
-- On ENDTAG shift to state 682

State 682:
xml_tree -> LXML attrs RXML xml_contents_list ENDTAG . [ YIELDS WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW POSTFIXOP MINUSDOT MINUS LXML LPAREN LBRACEBAR LBRACE INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE ENDTAG END ELSE DOTDOT DOT COMMA COLONCOLON COLON CDATA CASE BARRBRACE BARBAR AMPAMP ]
-- On YIELDS reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On WITH reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On VBAR reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On VALUES reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On SEMICOLON reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On RPAREN reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On RETURNING reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On RBRACKET reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On RBRACE reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On RARROW reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On POSTFIXOP reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On MINUSDOT reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On MINUS reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On LXML reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On LPAREN reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On LBRACEBAR reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On LBRACE reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR9 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR8 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR7 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR6 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR5 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR4 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR3 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR2 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR1 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXR0 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL9 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL8 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL7 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL6 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL5 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL4 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL3 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL2 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL1 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIXL0 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX9 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX8 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX7 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX6 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX5 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX4 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX3 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX2 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX1 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On INFIX0 reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On FATRARROW reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On EQUALSTILDE reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On ENDTAG reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On END reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On ELSE reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On DOTDOT reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On DOT reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On COMMA reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On COLONCOLON reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On COLON reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On CDATA reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On CASE reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On BARRBRACE reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On BARBAR reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG
-- On AMPAMP reduce production xml_tree -> LXML attrs RXML xml_contents_list ENDTAG

State 683:
attr_list -> attr_list . attr [ VARIABLE SLASHRXML RXML LBRACE ]
attrs -> attr_list . [ SLASHRXML RXML ]
attrs -> attr_list . block [ SLASHRXML RXML ]
-- On VARIABLE shift to state 304
-- On LBRACE shift to state 278
-- On xmlid shift to state 666
-- On block shift to state 684
-- On attr shift to state 685
-- On SLASHRXML reduce production attrs -> attr_list
-- On RXML reduce production attrs -> attr_list

State 684:
attrs -> attr_list block . [ SLASHRXML RXML ]
-- On SLASHRXML reduce production attrs -> attr_list block
-- On RXML reduce production attrs -> attr_list block

State 685:
attr_list -> attr_list attr . [ VARIABLE SLASHRXML RXML LBRACE ]
-- On VARIABLE reduce production attr_list -> attr_list attr
-- On SLASHRXML reduce production attr_list -> attr_list attr
-- On RXML reduce production attr_list -> attr_list attr
-- On LBRACE reduce production attr_list -> attr_list attr

State 686:
attr_list -> attr . [ VARIABLE SLASHRXML RXML LBRACE ]
-- On VARIABLE reduce production attr_list -> attr
-- On SLASHRXML reduce production attr_list -> attr
-- On RXML reduce production attr_list -> attr
-- On LBRACE reduce production attr_list -> attr

State 687:
unary_expression -> PREFIXOP unary_expression . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production unary_expression -> PREFIXOP unary_expression
-- On VBAR reduce production unary_expression -> PREFIXOP unary_expression
-- On VALUES reduce production unary_expression -> PREFIXOP unary_expression
-- On SEMICOLON reduce production unary_expression -> PREFIXOP unary_expression
-- On RPAREN reduce production unary_expression -> PREFIXOP unary_expression
-- On RETURNING reduce production unary_expression -> PREFIXOP unary_expression
-- On RBRACKET reduce production unary_expression -> PREFIXOP unary_expression
-- On RBRACE reduce production unary_expression -> PREFIXOP unary_expression
-- On RARROW reduce production unary_expression -> PREFIXOP unary_expression
-- On MINUSDOT reduce production unary_expression -> PREFIXOP unary_expression
-- On MINUS reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR9 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR8 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR7 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR6 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR5 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR4 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR3 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR2 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR1 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXR0 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL9 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL8 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL7 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL6 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL5 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL4 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL3 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL2 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL1 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIXL0 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX9 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX8 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX7 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX6 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX5 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX4 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX3 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX2 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX1 reduce production unary_expression -> PREFIXOP unary_expression
-- On INFIX0 reduce production unary_expression -> PREFIXOP unary_expression
-- On FATRARROW reduce production unary_expression -> PREFIXOP unary_expression
-- On EQUALSTILDE reduce production unary_expression -> PREFIXOP unary_expression
-- On END reduce production unary_expression -> PREFIXOP unary_expression
-- On ELSE reduce production unary_expression -> PREFIXOP unary_expression
-- On DOTDOT reduce production unary_expression -> PREFIXOP unary_expression
-- On COMMA reduce production unary_expression -> PREFIXOP unary_expression
-- On COLONCOLON reduce production unary_expression -> PREFIXOP unary_expression
-- On COLON reduce production unary_expression -> PREFIXOP unary_expression
-- On CASE reduce production unary_expression -> PREFIXOP unary_expression
-- On BARRBRACE reduce production unary_expression -> PREFIXOP unary_expression
-- On BARBAR reduce production unary_expression -> PREFIXOP unary_expression
-- On AMPAMP reduce production unary_expression -> PREFIXOP unary_expression

State 688:
postfix_expression -> QUERY LBRACKET exp . RBRACKET block [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
postfix_expression -> QUERY LBRACKET exp . COMMA exp RBRACKET block [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On RBRACKET shift to state 689
-- On COMMA shift to state 691

State 689:
postfix_expression -> QUERY LBRACKET exp RBRACKET . block [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On LBRACE shift to state 278
-- On block shift to state 690

State 690:
postfix_expression -> QUERY LBRACKET exp RBRACKET block . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On VBAR reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On VALUES reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On SEMICOLON reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On RPAREN reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On RETURNING reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On RBRACKET reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On RBRACE reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On RARROW reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On MINUSDOT reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On MINUS reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On LPAREN reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR9 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR8 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR7 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR6 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR5 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR4 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR3 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR2 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR1 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXR0 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL9 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL8 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL7 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL6 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL5 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL4 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL3 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL2 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL1 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIXL0 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX9 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX8 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX7 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX6 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX5 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX4 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX3 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX2 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX1 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On INFIX0 reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On FATRARROW reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On EQUALSTILDE reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On END reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On ELSE reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On DOTDOT reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On DOT reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On COMMA reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On COLONCOLON reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On COLON reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On CASE reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On BARRBRACE reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On BARBAR reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block
-- On AMPAMP reduce production postfix_expression -> QUERY LBRACKET exp RBRACKET block

State 691:
postfix_expression -> QUERY LBRACKET exp COMMA . exp RBRACKET block [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 692
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 692:
postfix_expression -> QUERY LBRACKET exp COMMA exp . RBRACKET block [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On RBRACKET shift to state 693

State 693:
postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET . block [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On LBRACE shift to state 278
-- On block shift to state 694

State 694:
postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On VBAR reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On VALUES reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On SEMICOLON reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On RPAREN reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On RETURNING reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On RBRACKET reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On RBRACE reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On RARROW reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On MINUSDOT reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On MINUS reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On LPAREN reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR9 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR8 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR7 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR6 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR5 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR4 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR3 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR2 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR1 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXR0 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL9 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL8 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL7 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL6 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL5 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL4 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL3 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL2 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL1 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIXL0 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX9 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX8 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX7 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX6 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX5 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX4 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX3 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX2 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX1 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On INFIX0 reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On FATRARROW reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On EQUALSTILDE reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On END reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On ELSE reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On DOTDOT reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On DOT reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On COMMA reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On COLONCOLON reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On COLON reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On CASE reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On BARRBRACE reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On BARBAR reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block
-- On AMPAMP reduce production postfix_expression -> QUERY LBRACKET exp COMMA exp RBRACKET block

State 695:
postfix_expression -> QUERY block . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production postfix_expression -> QUERY block
-- On VBAR reduce production postfix_expression -> QUERY block
-- On VALUES reduce production postfix_expression -> QUERY block
-- On SEMICOLON reduce production postfix_expression -> QUERY block
-- On RPAREN reduce production postfix_expression -> QUERY block
-- On RETURNING reduce production postfix_expression -> QUERY block
-- On RBRACKET reduce production postfix_expression -> QUERY block
-- On RBRACE reduce production postfix_expression -> QUERY block
-- On RARROW reduce production postfix_expression -> QUERY block
-- On MINUSDOT reduce production postfix_expression -> QUERY block
-- On MINUS reduce production postfix_expression -> QUERY block
-- On LPAREN reduce production postfix_expression -> QUERY block
-- On INFIXR9 reduce production postfix_expression -> QUERY block
-- On INFIXR8 reduce production postfix_expression -> QUERY block
-- On INFIXR7 reduce production postfix_expression -> QUERY block
-- On INFIXR6 reduce production postfix_expression -> QUERY block
-- On INFIXR5 reduce production postfix_expression -> QUERY block
-- On INFIXR4 reduce production postfix_expression -> QUERY block
-- On INFIXR3 reduce production postfix_expression -> QUERY block
-- On INFIXR2 reduce production postfix_expression -> QUERY block
-- On INFIXR1 reduce production postfix_expression -> QUERY block
-- On INFIXR0 reduce production postfix_expression -> QUERY block
-- On INFIXL9 reduce production postfix_expression -> QUERY block
-- On INFIXL8 reduce production postfix_expression -> QUERY block
-- On INFIXL7 reduce production postfix_expression -> QUERY block
-- On INFIXL6 reduce production postfix_expression -> QUERY block
-- On INFIXL5 reduce production postfix_expression -> QUERY block
-- On INFIXL4 reduce production postfix_expression -> QUERY block
-- On INFIXL3 reduce production postfix_expression -> QUERY block
-- On INFIXL2 reduce production postfix_expression -> QUERY block
-- On INFIXL1 reduce production postfix_expression -> QUERY block
-- On INFIXL0 reduce production postfix_expression -> QUERY block
-- On INFIX9 reduce production postfix_expression -> QUERY block
-- On INFIX8 reduce production postfix_expression -> QUERY block
-- On INFIX7 reduce production postfix_expression -> QUERY block
-- On INFIX6 reduce production postfix_expression -> QUERY block
-- On INFIX5 reduce production postfix_expression -> QUERY block
-- On INFIX4 reduce production postfix_expression -> QUERY block
-- On INFIX3 reduce production postfix_expression -> QUERY block
-- On INFIX2 reduce production postfix_expression -> QUERY block
-- On INFIX1 reduce production postfix_expression -> QUERY block
-- On INFIX0 reduce production postfix_expression -> QUERY block
-- On FATRARROW reduce production postfix_expression -> QUERY block
-- On EQUALSTILDE reduce production postfix_expression -> QUERY block
-- On END reduce production postfix_expression -> QUERY block
-- On ELSE reduce production postfix_expression -> QUERY block
-- On DOTDOT reduce production postfix_expression -> QUERY block
-- On DOT reduce production postfix_expression -> QUERY block
-- On COMMA reduce production postfix_expression -> QUERY block
-- On COLONCOLON reduce production postfix_expression -> QUERY block
-- On COLON reduce production postfix_expression -> QUERY block
-- On CASE reduce production postfix_expression -> QUERY block
-- On BARRBRACE reduce production postfix_expression -> QUERY block
-- On BARBAR reduce production postfix_expression -> QUERY block
-- On AMPAMP reduce production postfix_expression -> QUERY block

State 696:
case -> CASE pattern RARROW block_contents . [ RBRACE CASE ]
-- On RBRACE reduce production case -> CASE pattern RARROW block_contents
-- On CASE reduce production case -> CASE pattern RARROW block_contents

State 697:
case_expression -> RECEIVE LBRACE perhaps_cases . RBRACE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On RBRACE shift to state 698

State 698:
case_expression -> RECEIVE LBRACE perhaps_cases RBRACE . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On VBAR reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On VALUES reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On SEMICOLON reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On RPAREN reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On RBRACKET reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On RBRACE reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On END reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On ELSE reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On DOTDOT reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On COMMA reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On CASE reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE
-- On BARRBRACE reduce production case_expression -> RECEIVE LBRACE perhaps_cases RBRACE

State 699:
perhaps_cases -> cases . [ RBRACE ]
-- On RBRACE reduce production perhaps_cases -> cases

State 700:
cases -> case . [ RBRACE ]
cases -> case . cases [ RBRACE ]
-- On CASE shift to state 286
-- On cases shift to state 701
-- On case shift to state 700
-- On RBRACE reduce production cases -> case

State 701:
cases -> case cases . [ RBRACE ]
-- On RBRACE reduce production cases -> case cases

State 702:
binding -> VAR pattern EQ exp . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
-- On SEMICOLON shift to state 703

State 703:
binding -> VAR pattern EQ exp SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN RECEIVE QUERY PREFIXOP PAGE MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE DELETE DATABASE CONSTRUCTOR CHAR ]
-- On VARIABLE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On VAR reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On UPDATE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On UINTEGER reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On UFLOAT reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On TYPENAME reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On TRUE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On TABLE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On SWITCH reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On STRING reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On SPAWNWAIT reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On SPAWN reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On RECEIVE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On QUERY reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On PREFIXOP reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On PAGE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On MINUSDOT reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On MINUS reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On LXML reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On LPAREN reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On LBRACKET reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On LBRACE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On INSERT reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On IF reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On FUN reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On FORMLET reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On FOR reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On FALSE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On ESCAPE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On DELETE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On DATABASE reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On CONSTRUCTOR reduce production binding -> VAR pattern EQ exp SEMICOLON
-- On CHAR reduce production binding -> VAR pattern EQ exp SEMICOLON

State 704:
postfix_expression -> SPAWNWAIT block . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE RARROW MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 FATRARROW EQUALSTILDE END ELSE DOTDOT DOT COMMA COLONCOLON COLON CASE BARRBRACE BARBAR AMPAMP ]
-- On WITH reduce production postfix_expression -> SPAWNWAIT block
-- On VBAR reduce production postfix_expression -> SPAWNWAIT block
-- On VALUES reduce production postfix_expression -> SPAWNWAIT block
-- On SEMICOLON reduce production postfix_expression -> SPAWNWAIT block
-- On RPAREN reduce production postfix_expression -> SPAWNWAIT block
-- On RETURNING reduce production postfix_expression -> SPAWNWAIT block
-- On RBRACKET reduce production postfix_expression -> SPAWNWAIT block
-- On RBRACE reduce production postfix_expression -> SPAWNWAIT block
-- On RARROW reduce production postfix_expression -> SPAWNWAIT block
-- On MINUSDOT reduce production postfix_expression -> SPAWNWAIT block
-- On MINUS reduce production postfix_expression -> SPAWNWAIT block
-- On LPAREN reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXR9 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXR8 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXR7 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXR6 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXR5 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXR4 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXR3 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXR2 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXR1 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXR0 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXL9 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXL8 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXL7 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXL6 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXL5 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXL4 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXL3 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXL2 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXL1 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIXL0 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIX9 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIX8 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIX7 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIX6 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIX5 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIX4 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIX3 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIX2 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIX1 reduce production postfix_expression -> SPAWNWAIT block
-- On INFIX0 reduce production postfix_expression -> SPAWNWAIT block
-- On FATRARROW reduce production postfix_expression -> SPAWNWAIT block
-- On EQUALSTILDE reduce production postfix_expression -> SPAWNWAIT block
-- On END reduce production postfix_expression -> SPAWNWAIT block
-- On ELSE reduce production postfix_expression -> SPAWNWAIT block
-- On DOTDOT reduce production postfix_expression -> SPAWNWAIT block
-- On DOT reduce production postfix_expression -> SPAWNWAIT block
-- On COMMA reduce production postfix_expression -> SPAWNWAIT block
-- On COLONCOLON reduce production postfix_expression -> SPAWNWAIT block
-- On COLON reduce production postfix_expression -> SPAWNWAIT block
-- On CASE reduce production postfix_expression -> SPAWNWAIT block
-- On BARRBRACE reduce production postfix_expression -> SPAWNWAIT block
-- On BARBAR reduce production postfix_expression -> SPAWNWAIT block
-- On AMPAMP reduce production postfix_expression -> SPAWNWAIT block

State 705:
case_expression -> SWITCH LPAREN exp . RPAREN LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On RPAREN shift to state 706

State 706:
case_expression -> SWITCH LPAREN exp RPAREN . LBRACE perhaps_cases RBRACE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On LBRACE shift to state 707

State 707:
case_expression -> SWITCH LPAREN exp RPAREN LBRACE . perhaps_cases RBRACE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On CASE shift to state 286
-- On perhaps_cases shift to state 708
-- On cases shift to state 699
-- On case shift to state 700
-- On RBRACE reduce production perhaps_cases -> 

State 708:
case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases . RBRACE [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On RBRACE shift to state 709

State 709:
case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On VBAR reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On VALUES reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On SEMICOLON reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On RPAREN reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On RBRACKET reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On RBRACE reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On END reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On ELSE reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On DOTDOT reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On COMMA reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On CASE reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE
-- On BARRBRACE reduce production case_expression -> SWITCH LPAREN exp RPAREN LBRACE perhaps_cases RBRACE

State 710:
table_expression -> TABLE exp . WITH datatype perhaps_table_constraints FROM exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH shift to state 711

State 711:
table_expression -> TABLE exp WITH . datatype perhaps_table_constraints FROM exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 712

State 712:
table_expression -> TABLE exp WITH datatype . perhaps_table_constraints FROM exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WHERE shift to state 713
-- On perhaps_table_constraints shift to state 723
-- On FROM reduce production perhaps_table_constraints -> 

State 713:
perhaps_table_constraints -> WHERE . table_constraints [ FROM ]
-- On VARIABLE shift to state 170
-- On UINTEGER shift to state 171
-- On STRING shift to state 172
-- On CONSTRUCTOR shift to state 173
-- On table_constraints shift to state 714
-- On record_label shift to state 715
-- On field_label shift to state 224

State 714:
perhaps_table_constraints -> WHERE table_constraints . [ FROM ]
-- On FROM reduce production perhaps_table_constraints -> WHERE table_constraints

State 715:
table_constraints -> record_label . field_constraints [ FROM ]
table_constraints -> record_label . field_constraints COMMA table_constraints [ FROM ]
-- On READONLY shift to state 716
-- On DEFAULT shift to state 717
-- On field_constraints shift to state 718
-- On field_constraint shift to state 721

State 716:
field_constraint -> READONLY . [ READONLY FROM DEFAULT COMMA ]
-- On READONLY reduce production field_constraint -> READONLY
-- On FROM reduce production field_constraint -> READONLY
-- On DEFAULT reduce production field_constraint -> READONLY
-- On COMMA reduce production field_constraint -> READONLY

State 717:
field_constraint -> DEFAULT . [ READONLY FROM DEFAULT COMMA ]
-- On READONLY reduce production field_constraint -> DEFAULT
-- On FROM reduce production field_constraint -> DEFAULT
-- On DEFAULT reduce production field_constraint -> DEFAULT
-- On COMMA reduce production field_constraint -> DEFAULT

State 718:
table_constraints -> record_label field_constraints . [ FROM ]
table_constraints -> record_label field_constraints . COMMA table_constraints [ FROM ]
-- On COMMA shift to state 719
-- On FROM reduce production table_constraints -> record_label field_constraints

State 719:
table_constraints -> record_label field_constraints COMMA . table_constraints [ FROM ]
-- On VARIABLE shift to state 170
-- On UINTEGER shift to state 171
-- On STRING shift to state 172
-- On CONSTRUCTOR shift to state 173
-- On table_constraints shift to state 720
-- On record_label shift to state 715
-- On field_label shift to state 224

State 720:
table_constraints -> record_label field_constraints COMMA table_constraints . [ FROM ]
-- On FROM reduce production table_constraints -> record_label field_constraints COMMA table_constraints

State 721:
field_constraints -> field_constraint . [ FROM COMMA ]
field_constraints -> field_constraint . field_constraints [ FROM COMMA ]
-- On READONLY shift to state 716
-- On DEFAULT shift to state 717
-- On field_constraints shift to state 722
-- On field_constraint shift to state 721
-- On FROM reduce production field_constraints -> field_constraint
-- On COMMA reduce production field_constraints -> field_constraint

State 722:
field_constraints -> field_constraint field_constraints . [ FROM COMMA ]
-- On FROM reduce production field_constraints -> field_constraint field_constraints
-- On COMMA reduce production field_constraints -> field_constraint field_constraints

State 723:
table_expression -> TABLE exp WITH datatype perhaps_table_constraints . FROM exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On FROM shift to state 724

State 724:
table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM . exp [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 6
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PAGE shift to state 308
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On IF shift to state 318
-- On FUN shift to state 320
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typed_expression shift to state 378
-- On table_expression shift to state 383
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On formlet_expression shift to state 506
-- On exp shift to state 725
-- On escape_expression shift to state 508
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 725:
table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp . [ WITH VBAR VALUES SEMICOLON RPAREN RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On VBAR reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On VALUES reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On SEMICOLON reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On RPAREN reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On RBRACKET reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On RBRACE reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On END reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On ELSE reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On DOTDOT reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On COMMA reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On CASE reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp
-- On BARRBRACE reduce production table_expression -> TABLE exp WITH datatype perhaps_table_constraints FROM exp

State 726:
perhaps_where -> WHERE LPAREN exp . RPAREN [ WITH VBAR VARIABLE VALUES UPDATE UINTEGER UFLOAT TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SET SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE QUERY PREFIXOP PAGE ORDERBY MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE END ELSE DOTDOT DELETE DATABASE CONSTRUCTOR COMMA CHAR CASE BARRBRACE ]
-- On RPAREN shift to state 727

State 727:
perhaps_where -> WHERE LPAREN exp RPAREN . [ WITH VBAR VARIABLE VALUES UPDATE UINTEGER UFLOAT TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SET SEMICOLON RPAREN RETURNING RECEIVE RBRACKET RBRACE QUERY PREFIXOP PAGE ORDERBY MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT IF FUN FORMLET FOR FALSE ESCAPE END ELSE DOTDOT DELETE DATABASE CONSTRUCTOR COMMA CHAR CASE BARRBRACE ]
-- On WITH reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On VBAR reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On VARIABLE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On VALUES reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On UPDATE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On UINTEGER reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On UFLOAT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On TRUE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On TABLE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On SWITCH reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On STRING reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On SPAWNWAIT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On SPAWN reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On SET reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On SEMICOLON reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On RPAREN reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On RETURNING reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On RECEIVE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On RBRACKET reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On RBRACE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On QUERY reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On PREFIXOP reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On PAGE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On ORDERBY reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On MINUSDOT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On MINUS reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On LXML reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On LPAREN reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On LBRACKET reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On LBRACE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On INSERT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On IF reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On FUN reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On FORMLET reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On FOR reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On FALSE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On ESCAPE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On END reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On ELSE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On DOTDOT reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On DELETE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On DATABASE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On CONSTRUCTOR reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On COMMA reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On CHAR reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On CASE reduce production perhaps_where -> WHERE LPAREN exp RPAREN
-- On BARRBRACE reduce production perhaps_where -> WHERE LPAREN exp RPAREN

State 728:
db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where . SET LPAREN labeled_exps RPAREN [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On SET shift to state 729

State 729:
db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET . LPAREN labeled_exps RPAREN [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On LPAREN shift to state 730

State 730:
db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN . labeled_exps RPAREN [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On VARIABLE shift to state 170
-- On UINTEGER shift to state 171
-- On STRING shift to state 172
-- On CONSTRUCTOR shift to state 173
-- On record_label shift to state 559
-- On labeled_exps shift to state 731
-- On field_label shift to state 224

State 731:
db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps . RPAREN [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On RPAREN shift to state 732

State 732:
db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN . [ WITH VBAR VALUES SEMICOLON RPAREN RETURNING RBRACKET RBRACE END ELSE DOTDOT COMMA CASE BARRBRACE ]
-- On WITH reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On VBAR reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On VALUES reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On SEMICOLON reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On RPAREN reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On RETURNING reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On RBRACKET reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On RBRACE reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On END reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On ELSE reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On DOTDOT reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On COMMA reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On CASE reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN
-- On BARRBRACE reduce production db_expression -> UPDATE LPAREN table_generator RPAREN perhaps_where SET LPAREN labeled_exps RPAREN

State 733:
tlvarbinding -> VAR var perhaps_location EQ exp . [ SEMICOLON ]
-- On SEMICOLON reduce production tlvarbinding -> VAR var perhaps_location EQ exp

State 734:
signature -> SIG . var COLON datatype [ VAR OP FUN ]
signature -> SIG . op COLON datatype [ VAR OP FUN ]
-- On VARIABLE shift to state 8
-- On INFIXR9 shift to state 578
-- On INFIXR8 shift to state 579
-- On INFIXR7 shift to state 580
-- On INFIXR6 shift to state 581
-- On INFIXR5 shift to state 582
-- On INFIXR4 shift to state 583
-- On INFIXR3 shift to state 584
-- On INFIXR2 shift to state 585
-- On INFIXR1 shift to state 586
-- On INFIXR0 shift to state 587
-- On INFIXL9 shift to state 588
-- On INFIXL8 shift to state 589
-- On INFIXL7 shift to state 590
-- On INFIXL6 shift to state 591
-- On INFIXL5 shift to state 592
-- On INFIXL4 shift to state 593
-- On INFIXL3 shift to state 594
-- On INFIXL2 shift to state 595
-- On INFIXL1 shift to state 596
-- On INFIXL0 shift to state 597
-- On INFIX9 shift to state 598
-- On INFIX8 shift to state 599
-- On INFIX7 shift to state 600
-- On INFIX6 shift to state 601
-- On INFIX5 shift to state 602
-- On INFIX4 shift to state 603
-- On INFIX3 shift to state 604
-- On INFIX2 shift to state 605
-- On INFIX1 shift to state 606
-- On INFIX0 shift to state 607
-- On var shift to state 735
-- On op shift to state 738

State 735:
signature -> SIG var . COLON datatype [ VAR OP FUN ]
-- On COLON shift to state 736

State 736:
signature -> SIG var COLON . datatype [ VAR OP FUN ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 737

State 737:
signature -> SIG var COLON datatype . [ VAR OP FUN ]
-- On VAR reduce production signature -> SIG var COLON datatype
-- On OP reduce production signature -> SIG var COLON datatype
-- On FUN reduce production signature -> SIG var COLON datatype

State 738:
signature -> SIG op . COLON datatype [ VAR OP FUN ]
-- On COLON shift to state 739

State 739:
signature -> SIG op COLON . datatype [ VAR OP FUN ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 740

State 740:
signature -> SIG op COLON datatype . [ VAR OP FUN ]
-- On VAR reduce production signature -> SIG op COLON datatype
-- On OP reduce production signature -> SIG op COLON datatype
-- On FUN reduce production signature -> SIG op COLON datatype

State 741:
fixity -> PREFIX . [ UINTEGER INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 ]
-- On UINTEGER reduce production fixity -> PREFIX
-- On INFIXR9 reduce production fixity -> PREFIX
-- On INFIXR8 reduce production fixity -> PREFIX
-- On INFIXR7 reduce production fixity -> PREFIX
-- On INFIXR6 reduce production fixity -> PREFIX
-- On INFIXR5 reduce production fixity -> PREFIX
-- On INFIXR4 reduce production fixity -> PREFIX
-- On INFIXR3 reduce production fixity -> PREFIX
-- On INFIXR2 reduce production fixity -> PREFIX
-- On INFIXR1 reduce production fixity -> PREFIX
-- On INFIXR0 reduce production fixity -> PREFIX
-- On INFIXL9 reduce production fixity -> PREFIX
-- On INFIXL8 reduce production fixity -> PREFIX
-- On INFIXL7 reduce production fixity -> PREFIX
-- On INFIXL6 reduce production fixity -> PREFIX
-- On INFIXL5 reduce production fixity -> PREFIX
-- On INFIXL4 reduce production fixity -> PREFIX
-- On INFIXL3 reduce production fixity -> PREFIX
-- On INFIXL2 reduce production fixity -> PREFIX
-- On INFIXL1 reduce production fixity -> PREFIX
-- On INFIXL0 reduce production fixity -> PREFIX
-- On INFIX9 reduce production fixity -> PREFIX
-- On INFIX8 reduce production fixity -> PREFIX
-- On INFIX7 reduce production fixity -> PREFIX
-- On INFIX6 reduce production fixity -> PREFIX
-- On INFIX5 reduce production fixity -> PREFIX
-- On INFIX4 reduce production fixity -> PREFIX
-- On INFIX3 reduce production fixity -> PREFIX
-- On INFIX2 reduce production fixity -> PREFIX
-- On INFIX1 reduce production fixity -> PREFIX
-- On INFIX0 reduce production fixity -> PREFIX

State 742:
fixity -> POSTFIX . [ UINTEGER INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 ]
-- On UINTEGER reduce production fixity -> POSTFIX
-- On INFIXR9 reduce production fixity -> POSTFIX
-- On INFIXR8 reduce production fixity -> POSTFIX
-- On INFIXR7 reduce production fixity -> POSTFIX
-- On INFIXR6 reduce production fixity -> POSTFIX
-- On INFIXR5 reduce production fixity -> POSTFIX
-- On INFIXR4 reduce production fixity -> POSTFIX
-- On INFIXR3 reduce production fixity -> POSTFIX
-- On INFIXR2 reduce production fixity -> POSTFIX
-- On INFIXR1 reduce production fixity -> POSTFIX
-- On INFIXR0 reduce production fixity -> POSTFIX
-- On INFIXL9 reduce production fixity -> POSTFIX
-- On INFIXL8 reduce production fixity -> POSTFIX
-- On INFIXL7 reduce production fixity -> POSTFIX
-- On INFIXL6 reduce production fixity -> POSTFIX
-- On INFIXL5 reduce production fixity -> POSTFIX
-- On INFIXL4 reduce production fixity -> POSTFIX
-- On INFIXL3 reduce production fixity -> POSTFIX
-- On INFIXL2 reduce production fixity -> POSTFIX
-- On INFIXL1 reduce production fixity -> POSTFIX
-- On INFIXL0 reduce production fixity -> POSTFIX
-- On INFIX9 reduce production fixity -> POSTFIX
-- On INFIX8 reduce production fixity -> POSTFIX
-- On INFIX7 reduce production fixity -> POSTFIX
-- On INFIX6 reduce production fixity -> POSTFIX
-- On INFIX5 reduce production fixity -> POSTFIX
-- On INFIX4 reduce production fixity -> POSTFIX
-- On INFIX3 reduce production fixity -> POSTFIX
-- On INFIX2 reduce production fixity -> POSTFIX
-- On INFIX1 reduce production fixity -> POSTFIX
-- On INFIX0 reduce production fixity -> POSTFIX

State 743:
tlfunbinding -> OP . pattern op pattern perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
tlfunbinding -> OP . prefixop pattern perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
tlfunbinding -> OP . pattern postfixop perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 17
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On PREFIXOP shift to state 744
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 39
-- On CHAR shift to state 41
-- On typed_pattern shift to state 42
-- On primary_pattern shift to state 239
-- On prefixop shift to state 745
-- On pattern shift to state 749
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 251

State 744:
prefixop -> PREFIXOP . [ VARIABLE UNDERSCORE UINTEGER UFLOAT TRUE STRING MINUS LPAREN LBRACKET FALSE CONSTRUCTOR CHAR ]
-- On VARIABLE reduce production prefixop -> PREFIXOP
-- On UNDERSCORE reduce production prefixop -> PREFIXOP
-- On UINTEGER reduce production prefixop -> PREFIXOP
-- On UFLOAT reduce production prefixop -> PREFIXOP
-- On TRUE reduce production prefixop -> PREFIXOP
-- On STRING reduce production prefixop -> PREFIXOP
-- On MINUS reduce production prefixop -> PREFIXOP
-- On LPAREN reduce production prefixop -> PREFIXOP
-- On LBRACKET reduce production prefixop -> PREFIXOP
-- On FALSE reduce production prefixop -> PREFIXOP
-- On CONSTRUCTOR reduce production prefixop -> PREFIXOP
-- On CHAR reduce production prefixop -> PREFIXOP

State 745:
tlfunbinding -> OP prefixop . pattern perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 17
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 39
-- On CHAR shift to state 41
-- On typed_pattern shift to state 42
-- On primary_pattern shift to state 239
-- On pattern shift to state 746
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 251

State 746:
tlfunbinding -> OP prefixop pattern . perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SERVER shift to state 10
-- On NATIVE shift to state 11
-- On CLIENT shift to state 12
-- On perhaps_location shift to state 747
-- On LBRACE reduce production perhaps_location -> 

State 747:
tlfunbinding -> OP prefixop pattern perhaps_location . block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LBRACE shift to state 278
-- On block shift to state 748

State 748:
tlfunbinding -> OP prefixop pattern perhaps_location block . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On VAR reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On UPDATE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On UINTEGER reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On UFLOAT reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On TYPENAME reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On TRUE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On TABLE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On SWITCH reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On STRING reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On SPAWNWAIT reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On SPAWN reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On SIG reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On SEMICOLON reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On RECEIVE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On QUERY reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On PREFIXOP reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On PREFIX reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On POSTFIX reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On PAGE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On OP reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On MINUSDOT reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On MINUS reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On LXML reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On LPAREN reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On LBRACKET reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On LBRACE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On INSERT reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On INFIXR reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On INFIXL reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On INFIX reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On IF reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On FUN reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On FORMLET reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On FOR reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On FALSE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On ESCAPE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On END reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On DELETE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On DATABASE reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On CONSTRUCTOR reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On CHAR reduce production tlfunbinding -> OP prefixop pattern perhaps_location block
-- On ALIEN reduce production tlfunbinding -> OP prefixop pattern perhaps_location block

State 749:
tlfunbinding -> OP pattern . op pattern perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
tlfunbinding -> OP pattern . postfixop perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On POSTFIXOP shift to state 750
-- On INFIXR9 shift to state 578
-- On INFIXR8 shift to state 579
-- On INFIXR7 shift to state 580
-- On INFIXR6 shift to state 581
-- On INFIXR5 shift to state 582
-- On INFIXR4 shift to state 583
-- On INFIXR3 shift to state 584
-- On INFIXR2 shift to state 585
-- On INFIXR1 shift to state 586
-- On INFIXR0 shift to state 587
-- On INFIXL9 shift to state 588
-- On INFIXL8 shift to state 589
-- On INFIXL7 shift to state 590
-- On INFIXL6 shift to state 591
-- On INFIXL5 shift to state 592
-- On INFIXL4 shift to state 593
-- On INFIXL3 shift to state 594
-- On INFIXL2 shift to state 595
-- On INFIXL1 shift to state 596
-- On INFIXL0 shift to state 597
-- On INFIX9 shift to state 598
-- On INFIX8 shift to state 599
-- On INFIX7 shift to state 600
-- On INFIX6 shift to state 601
-- On INFIX5 shift to state 602
-- On INFIX4 shift to state 603
-- On INFIX3 shift to state 604
-- On INFIX2 shift to state 605
-- On INFIX1 shift to state 606
-- On INFIX0 shift to state 607
-- On postfixop shift to state 751
-- On op shift to state 754

State 750:
postfixop -> POSTFIXOP . [ SERVER NATIVE LBRACE CLIENT ]
-- On SERVER reduce production postfixop -> POSTFIXOP
-- On NATIVE reduce production postfixop -> POSTFIXOP
-- On LBRACE reduce production postfixop -> POSTFIXOP
-- On CLIENT reduce production postfixop -> POSTFIXOP

State 751:
tlfunbinding -> OP pattern postfixop . perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SERVER shift to state 10
-- On NATIVE shift to state 11
-- On CLIENT shift to state 12
-- On perhaps_location shift to state 752
-- On LBRACE reduce production perhaps_location -> 

State 752:
tlfunbinding -> OP pattern postfixop perhaps_location . block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LBRACE shift to state 278
-- On block shift to state 753

State 753:
tlfunbinding -> OP pattern postfixop perhaps_location block . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On VAR reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On UPDATE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On UINTEGER reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On UFLOAT reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On TYPENAME reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On TRUE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On TABLE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On SWITCH reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On STRING reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On SPAWNWAIT reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On SPAWN reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On SIG reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On SEMICOLON reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On RECEIVE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On QUERY reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On PREFIXOP reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On PREFIX reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On POSTFIX reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On PAGE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On OP reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On MINUSDOT reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On MINUS reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On LXML reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On LPAREN reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On LBRACKET reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On LBRACE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On INSERT reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On INFIXR reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On INFIXL reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On INFIX reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On IF reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On FUN reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On FORMLET reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On FOR reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On FALSE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On ESCAPE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On END reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On DELETE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On DATABASE reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On CONSTRUCTOR reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On CHAR reduce production tlfunbinding -> OP pattern postfixop perhaps_location block
-- On ALIEN reduce production tlfunbinding -> OP pattern postfixop perhaps_location block

State 754:
tlfunbinding -> OP pattern op . pattern perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 17
-- On UNDERSCORE shift to state 18
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TRUE shift to state 21
-- On STRING shift to state 22
-- On MINUS shift to state 23
-- On LPAREN shift to state 31
-- On LBRACKET shift to state 36
-- On FALSE shift to state 38
-- On CONSTRUCTOR shift to state 39
-- On CHAR shift to state 41
-- On typed_pattern shift to state 42
-- On primary_pattern shift to state 239
-- On pattern shift to state 755
-- On parenthesized_pattern shift to state 245
-- On negative_pattern shift to state 246
-- On constructor_pattern shift to state 247
-- On constant shift to state 249
-- On cons_pattern shift to state 251

State 755:
tlfunbinding -> OP pattern op pattern . perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SERVER shift to state 10
-- On NATIVE shift to state 11
-- On CLIENT shift to state 12
-- On perhaps_location shift to state 756
-- On LBRACE reduce production perhaps_location -> 

State 756:
tlfunbinding -> OP pattern op pattern perhaps_location . block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LBRACE shift to state 278
-- On block shift to state 757

State 757:
tlfunbinding -> OP pattern op pattern perhaps_location block . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On VAR reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On UPDATE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On UINTEGER reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On UFLOAT reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On TYPENAME reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On TRUE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On TABLE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On SWITCH reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On STRING reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On SPAWNWAIT reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On SPAWN reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On SIG reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On SEMICOLON reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On RECEIVE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On QUERY reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On PREFIXOP reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On PREFIX reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On POSTFIX reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On PAGE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On OP reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On MINUSDOT reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On MINUS reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On LXML reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On LPAREN reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On LBRACKET reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On LBRACE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On INSERT reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On INFIXR reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On INFIXL reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On INFIX reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On IF reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On FUN reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On FORMLET reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On FOR reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On FALSE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On ESCAPE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On END reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On DELETE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On DATABASE reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On CONSTRUCTOR reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On CHAR reduce production tlfunbinding -> OP pattern op pattern perhaps_location block
-- On ALIEN reduce production tlfunbinding -> OP pattern op pattern perhaps_location block

State 758:
fixity -> INFIXR . [ UINTEGER INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 ]
-- On UINTEGER reduce production fixity -> INFIXR
-- On INFIXR9 reduce production fixity -> INFIXR
-- On INFIXR8 reduce production fixity -> INFIXR
-- On INFIXR7 reduce production fixity -> INFIXR
-- On INFIXR6 reduce production fixity -> INFIXR
-- On INFIXR5 reduce production fixity -> INFIXR
-- On INFIXR4 reduce production fixity -> INFIXR
-- On INFIXR3 reduce production fixity -> INFIXR
-- On INFIXR2 reduce production fixity -> INFIXR
-- On INFIXR1 reduce production fixity -> INFIXR
-- On INFIXR0 reduce production fixity -> INFIXR
-- On INFIXL9 reduce production fixity -> INFIXR
-- On INFIXL8 reduce production fixity -> INFIXR
-- On INFIXL7 reduce production fixity -> INFIXR
-- On INFIXL6 reduce production fixity -> INFIXR
-- On INFIXL5 reduce production fixity -> INFIXR
-- On INFIXL4 reduce production fixity -> INFIXR
-- On INFIXL3 reduce production fixity -> INFIXR
-- On INFIXL2 reduce production fixity -> INFIXR
-- On INFIXL1 reduce production fixity -> INFIXR
-- On INFIXL0 reduce production fixity -> INFIXR
-- On INFIX9 reduce production fixity -> INFIXR
-- On INFIX8 reduce production fixity -> INFIXR
-- On INFIX7 reduce production fixity -> INFIXR
-- On INFIX6 reduce production fixity -> INFIXR
-- On INFIX5 reduce production fixity -> INFIXR
-- On INFIX4 reduce production fixity -> INFIXR
-- On INFIX3 reduce production fixity -> INFIXR
-- On INFIX2 reduce production fixity -> INFIXR
-- On INFIX1 reduce production fixity -> INFIXR
-- On INFIX0 reduce production fixity -> INFIXR

State 759:
fixity -> INFIXL . [ UINTEGER INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 ]
-- On UINTEGER reduce production fixity -> INFIXL
-- On INFIXR9 reduce production fixity -> INFIXL
-- On INFIXR8 reduce production fixity -> INFIXL
-- On INFIXR7 reduce production fixity -> INFIXL
-- On INFIXR6 reduce production fixity -> INFIXL
-- On INFIXR5 reduce production fixity -> INFIXL
-- On INFIXR4 reduce production fixity -> INFIXL
-- On INFIXR3 reduce production fixity -> INFIXL
-- On INFIXR2 reduce production fixity -> INFIXL
-- On INFIXR1 reduce production fixity -> INFIXL
-- On INFIXR0 reduce production fixity -> INFIXL
-- On INFIXL9 reduce production fixity -> INFIXL
-- On INFIXL8 reduce production fixity -> INFIXL
-- On INFIXL7 reduce production fixity -> INFIXL
-- On INFIXL6 reduce production fixity -> INFIXL
-- On INFIXL5 reduce production fixity -> INFIXL
-- On INFIXL4 reduce production fixity -> INFIXL
-- On INFIXL3 reduce production fixity -> INFIXL
-- On INFIXL2 reduce production fixity -> INFIXL
-- On INFIXL1 reduce production fixity -> INFIXL
-- On INFIXL0 reduce production fixity -> INFIXL
-- On INFIX9 reduce production fixity -> INFIXL
-- On INFIX8 reduce production fixity -> INFIXL
-- On INFIX7 reduce production fixity -> INFIXL
-- On INFIX6 reduce production fixity -> INFIXL
-- On INFIX5 reduce production fixity -> INFIXL
-- On INFIX4 reduce production fixity -> INFIXL
-- On INFIX3 reduce production fixity -> INFIXL
-- On INFIX2 reduce production fixity -> INFIXL
-- On INFIX1 reduce production fixity -> INFIXL
-- On INFIX0 reduce production fixity -> INFIXL

State 760:
fixity -> INFIX . [ UINTEGER INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 ]
-- On UINTEGER reduce production fixity -> INFIX
-- On INFIXR9 reduce production fixity -> INFIX
-- On INFIXR8 reduce production fixity -> INFIX
-- On INFIXR7 reduce production fixity -> INFIX
-- On INFIXR6 reduce production fixity -> INFIX
-- On INFIXR5 reduce production fixity -> INFIX
-- On INFIXR4 reduce production fixity -> INFIX
-- On INFIXR3 reduce production fixity -> INFIX
-- On INFIXR2 reduce production fixity -> INFIX
-- On INFIXR1 reduce production fixity -> INFIX
-- On INFIXR0 reduce production fixity -> INFIX
-- On INFIXL9 reduce production fixity -> INFIX
-- On INFIXL8 reduce production fixity -> INFIX
-- On INFIXL7 reduce production fixity -> INFIX
-- On INFIXL6 reduce production fixity -> INFIX
-- On INFIXL5 reduce production fixity -> INFIX
-- On INFIXL4 reduce production fixity -> INFIX
-- On INFIXL3 reduce production fixity -> INFIX
-- On INFIXL2 reduce production fixity -> INFIX
-- On INFIXL1 reduce production fixity -> INFIX
-- On INFIXL0 reduce production fixity -> INFIX
-- On INFIX9 reduce production fixity -> INFIX
-- On INFIX8 reduce production fixity -> INFIX
-- On INFIX7 reduce production fixity -> INFIX
-- On INFIX6 reduce production fixity -> INFIX
-- On INFIX5 reduce production fixity -> INFIX
-- On INFIX4 reduce production fixity -> INFIX
-- On INFIX3 reduce production fixity -> INFIX
-- On INFIX2 reduce production fixity -> INFIX
-- On INFIX1 reduce production fixity -> INFIX
-- On INFIX0 reduce production fixity -> INFIX

State 761:
primary_expression -> FUN . arg_lists block [ SEMICOLON POSTFIXOP MINUSDOT MINUS LPAREN INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 EQUALSTILDE END DOT COLONCOLON COLON BARBAR AMPAMP ]
tlfunbinding -> FUN . var arg_lists perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 8
-- On LPAREN shift to state 321
-- On var shift to state 762
-- On multi_args shift to state 325
-- On arg_lists shift to state 327

State 762:
tlfunbinding -> FUN var . arg_lists perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LPAREN shift to state 321
-- On multi_args shift to state 325
-- On arg_lists shift to state 763

State 763:
tlfunbinding -> FUN var arg_lists . perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SERVER shift to state 10
-- On NATIVE shift to state 11
-- On CLIENT shift to state 12
-- On perhaps_location shift to state 764
-- On LBRACE reduce production perhaps_location -> 

State 764:
tlfunbinding -> FUN var arg_lists perhaps_location . block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On LBRACE shift to state 278
-- On block shift to state 765

State 765:
tlfunbinding -> FUN var arg_lists perhaps_location block . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On VAR reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On UPDATE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On UINTEGER reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On UFLOAT reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On TYPENAME reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On TRUE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On TABLE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On SWITCH reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On STRING reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On SPAWNWAIT reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On SPAWN reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On SIG reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On SEMICOLON reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On RECEIVE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On QUERY reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On PREFIXOP reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On PREFIX reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On POSTFIX reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On PAGE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On OP reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On MINUSDOT reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On MINUS reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On LXML reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On LPAREN reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On LBRACKET reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On LBRACE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On INSERT reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On INFIXR reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On INFIXL reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On INFIX reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On IF reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On FUN reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On FORMLET reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On FOR reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On FALSE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On ESCAPE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On END reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On DELETE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On DATABASE reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On CONSTRUCTOR reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On CHAR reduce production tlfunbinding -> FUN var arg_lists perhaps_location block
-- On ALIEN reduce production tlfunbinding -> FUN var arg_lists perhaps_location block

State 766:
nofun_declaration -> ALIEN . VARIABLE var COLON datatype SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 767

State 767:
nofun_declaration -> ALIEN VARIABLE . var COLON datatype SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 8
-- On var shift to state 768

State 768:
nofun_declaration -> ALIEN VARIABLE var . COLON datatype SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On COLON shift to state 769

State 769:
nofun_declaration -> ALIEN VARIABLE var COLON . datatype SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 770

State 770:
nofun_declaration -> ALIEN VARIABLE var COLON datatype . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SEMICOLON shift to state 771

State 771:
nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On VAR reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On UPDATE reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On UINTEGER reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On UFLOAT reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On TYPENAME reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On TRUE reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On TABLE reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On SWITCH reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On STRING reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On SPAWNWAIT reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On SPAWN reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On SIG reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On RECEIVE reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On QUERY reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On PREFIXOP reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On PREFIX reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On POSTFIX reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On PAGE reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On OP reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On MINUSDOT reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On MINUS reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On LXML reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On LPAREN reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On LBRACKET reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On LBRACE reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On INSERT reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On INFIXR reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On INFIXL reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On INFIX reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On IF reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On FUN reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On FORMLET reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On FOR reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On FALSE reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On ESCAPE reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On END reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On DELETE reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On DATABASE reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On CONSTRUCTOR reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On CHAR reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON
-- On ALIEN reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON

State 772:
nofun_declaration -> typedecl . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SEMICOLON shift to state 773

State 773:
nofun_declaration -> typedecl SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production nofun_declaration -> typedecl SEMICOLON
-- On VAR reduce production nofun_declaration -> typedecl SEMICOLON
-- On UPDATE reduce production nofun_declaration -> typedecl SEMICOLON
-- On UINTEGER reduce production nofun_declaration -> typedecl SEMICOLON
-- On UFLOAT reduce production nofun_declaration -> typedecl SEMICOLON
-- On TYPENAME reduce production nofun_declaration -> typedecl SEMICOLON
-- On TRUE reduce production nofun_declaration -> typedecl SEMICOLON
-- On TABLE reduce production nofun_declaration -> typedecl SEMICOLON
-- On SWITCH reduce production nofun_declaration -> typedecl SEMICOLON
-- On STRING reduce production nofun_declaration -> typedecl SEMICOLON
-- On SPAWNWAIT reduce production nofun_declaration -> typedecl SEMICOLON
-- On SPAWN reduce production nofun_declaration -> typedecl SEMICOLON
-- On SIG reduce production nofun_declaration -> typedecl SEMICOLON
-- On RECEIVE reduce production nofun_declaration -> typedecl SEMICOLON
-- On QUERY reduce production nofun_declaration -> typedecl SEMICOLON
-- On PREFIXOP reduce production nofun_declaration -> typedecl SEMICOLON
-- On PREFIX reduce production nofun_declaration -> typedecl SEMICOLON
-- On POSTFIX reduce production nofun_declaration -> typedecl SEMICOLON
-- On PAGE reduce production nofun_declaration -> typedecl SEMICOLON
-- On OP reduce production nofun_declaration -> typedecl SEMICOLON
-- On MINUSDOT reduce production nofun_declaration -> typedecl SEMICOLON
-- On MINUS reduce production nofun_declaration -> typedecl SEMICOLON
-- On LXML reduce production nofun_declaration -> typedecl SEMICOLON
-- On LPAREN reduce production nofun_declaration -> typedecl SEMICOLON
-- On LBRACKET reduce production nofun_declaration -> typedecl SEMICOLON
-- On LBRACE reduce production nofun_declaration -> typedecl SEMICOLON
-- On INSERT reduce production nofun_declaration -> typedecl SEMICOLON
-- On INFIXR reduce production nofun_declaration -> typedecl SEMICOLON
-- On INFIXL reduce production nofun_declaration -> typedecl SEMICOLON
-- On INFIX reduce production nofun_declaration -> typedecl SEMICOLON
-- On IF reduce production nofun_declaration -> typedecl SEMICOLON
-- On FUN reduce production nofun_declaration -> typedecl SEMICOLON
-- On FORMLET reduce production nofun_declaration -> typedecl SEMICOLON
-- On FOR reduce production nofun_declaration -> typedecl SEMICOLON
-- On FALSE reduce production nofun_declaration -> typedecl SEMICOLON
-- On ESCAPE reduce production nofun_declaration -> typedecl SEMICOLON
-- On END reduce production nofun_declaration -> typedecl SEMICOLON
-- On DELETE reduce production nofun_declaration -> typedecl SEMICOLON
-- On DATABASE reduce production nofun_declaration -> typedecl SEMICOLON
-- On CONSTRUCTOR reduce production nofun_declaration -> typedecl SEMICOLON
-- On CHAR reduce production nofun_declaration -> typedecl SEMICOLON
-- On ALIEN reduce production nofun_declaration -> typedecl SEMICOLON

State 774:
nofun_declaration -> tlvarbinding . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SEMICOLON shift to state 775

State 775:
nofun_declaration -> tlvarbinding SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On VAR reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On UPDATE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On UINTEGER reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On UFLOAT reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On TYPENAME reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On TRUE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On TABLE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On SWITCH reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On STRING reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On SPAWNWAIT reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On SPAWN reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On SIG reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On RECEIVE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On QUERY reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On PREFIXOP reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On PREFIX reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On POSTFIX reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On PAGE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On OP reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On MINUSDOT reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On MINUS reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On LXML reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On LPAREN reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On LBRACKET reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On LBRACE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On INSERT reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On INFIXR reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On INFIXL reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On INFIX reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On IF reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On FUN reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On FORMLET reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On FOR reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On FALSE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On ESCAPE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On END reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On DELETE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On DATABASE reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On CONSTRUCTOR reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On CHAR reduce production nofun_declaration -> tlvarbinding SEMICOLON
-- On ALIEN reduce production nofun_declaration -> tlvarbinding SEMICOLON

State 776:
fun_declaration -> tlfunbinding . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production fun_declaration -> tlfunbinding
-- On VAR reduce production fun_declaration -> tlfunbinding
-- On UPDATE reduce production fun_declaration -> tlfunbinding
-- On UINTEGER reduce production fun_declaration -> tlfunbinding
-- On UFLOAT reduce production fun_declaration -> tlfunbinding
-- On TYPENAME reduce production fun_declaration -> tlfunbinding
-- On TRUE reduce production fun_declaration -> tlfunbinding
-- On TABLE reduce production fun_declaration -> tlfunbinding
-- On SWITCH reduce production fun_declaration -> tlfunbinding
-- On STRING reduce production fun_declaration -> tlfunbinding
-- On SPAWNWAIT reduce production fun_declaration -> tlfunbinding
-- On SPAWN reduce production fun_declaration -> tlfunbinding
-- On SIG reduce production fun_declaration -> tlfunbinding
-- On SEMICOLON reduce production fun_declaration -> tlfunbinding
-- On RECEIVE reduce production fun_declaration -> tlfunbinding
-- On QUERY reduce production fun_declaration -> tlfunbinding
-- On PREFIXOP reduce production fun_declaration -> tlfunbinding
-- On PREFIX reduce production fun_declaration -> tlfunbinding
-- On POSTFIX reduce production fun_declaration -> tlfunbinding
-- On PAGE reduce production fun_declaration -> tlfunbinding
-- On OP reduce production fun_declaration -> tlfunbinding
-- On MINUSDOT reduce production fun_declaration -> tlfunbinding
-- On MINUS reduce production fun_declaration -> tlfunbinding
-- On LXML reduce production fun_declaration -> tlfunbinding
-- On LPAREN reduce production fun_declaration -> tlfunbinding
-- On LBRACKET reduce production fun_declaration -> tlfunbinding
-- On LBRACE reduce production fun_declaration -> tlfunbinding
-- On INSERT reduce production fun_declaration -> tlfunbinding
-- On INFIXR reduce production fun_declaration -> tlfunbinding
-- On INFIXL reduce production fun_declaration -> tlfunbinding
-- On INFIX reduce production fun_declaration -> tlfunbinding
-- On IF reduce production fun_declaration -> tlfunbinding
-- On FUN reduce production fun_declaration -> tlfunbinding
-- On FORMLET reduce production fun_declaration -> tlfunbinding
-- On FOR reduce production fun_declaration -> tlfunbinding
-- On FALSE reduce production fun_declaration -> tlfunbinding
-- On ESCAPE reduce production fun_declaration -> tlfunbinding
-- On END reduce production fun_declaration -> tlfunbinding
-- On DELETE reduce production fun_declaration -> tlfunbinding
-- On DATABASE reduce production fun_declaration -> tlfunbinding
-- On CONSTRUCTOR reduce production fun_declaration -> tlfunbinding
-- On CHAR reduce production fun_declaration -> tlfunbinding
-- On ALIEN reduce production fun_declaration -> tlfunbinding

State 777:
fun_declaration -> signature . tlfunbinding [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
nofun_declaration -> signature . tlvarbinding SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VAR shift to state 7
-- On OP shift to state 743
-- On FUN shift to state 778
-- On tlvarbinding shift to state 779
-- On tlfunbinding shift to state 781

State 778:
tlfunbinding -> FUN . var arg_lists perhaps_location block [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE shift to state 8
-- On var shift to state 762

State 779:
nofun_declaration -> signature tlvarbinding . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SEMICOLON shift to state 780

State 780:
nofun_declaration -> signature tlvarbinding SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On VAR reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On UPDATE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On UINTEGER reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On UFLOAT reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On TYPENAME reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On TRUE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On TABLE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On SWITCH reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On STRING reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On SPAWNWAIT reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On SPAWN reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On SIG reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On RECEIVE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On QUERY reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On PREFIXOP reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On PREFIX reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On POSTFIX reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On PAGE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On OP reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On MINUSDOT reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On MINUS reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On LXML reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On LPAREN reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On LBRACKET reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On LBRACE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On INSERT reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On INFIXR reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On INFIXL reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On INFIX reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On IF reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On FUN reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On FORMLET reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On FOR reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On FALSE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On ESCAPE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On END reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On DELETE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On DATABASE reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On CONSTRUCTOR reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On CHAR reduce production nofun_declaration -> signature tlvarbinding SEMICOLON
-- On ALIEN reduce production nofun_declaration -> signature tlvarbinding SEMICOLON

State 781:
fun_declaration -> signature tlfunbinding . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG SEMICOLON RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production fun_declaration -> signature tlfunbinding
-- On VAR reduce production fun_declaration -> signature tlfunbinding
-- On UPDATE reduce production fun_declaration -> signature tlfunbinding
-- On UINTEGER reduce production fun_declaration -> signature tlfunbinding
-- On UFLOAT reduce production fun_declaration -> signature tlfunbinding
-- On TYPENAME reduce production fun_declaration -> signature tlfunbinding
-- On TRUE reduce production fun_declaration -> signature tlfunbinding
-- On TABLE reduce production fun_declaration -> signature tlfunbinding
-- On SWITCH reduce production fun_declaration -> signature tlfunbinding
-- On STRING reduce production fun_declaration -> signature tlfunbinding
-- On SPAWNWAIT reduce production fun_declaration -> signature tlfunbinding
-- On SPAWN reduce production fun_declaration -> signature tlfunbinding
-- On SIG reduce production fun_declaration -> signature tlfunbinding
-- On SEMICOLON reduce production fun_declaration -> signature tlfunbinding
-- On RECEIVE reduce production fun_declaration -> signature tlfunbinding
-- On QUERY reduce production fun_declaration -> signature tlfunbinding
-- On PREFIXOP reduce production fun_declaration -> signature tlfunbinding
-- On PREFIX reduce production fun_declaration -> signature tlfunbinding
-- On POSTFIX reduce production fun_declaration -> signature tlfunbinding
-- On PAGE reduce production fun_declaration -> signature tlfunbinding
-- On OP reduce production fun_declaration -> signature tlfunbinding
-- On MINUSDOT reduce production fun_declaration -> signature tlfunbinding
-- On MINUS reduce production fun_declaration -> signature tlfunbinding
-- On LXML reduce production fun_declaration -> signature tlfunbinding
-- On LPAREN reduce production fun_declaration -> signature tlfunbinding
-- On LBRACKET reduce production fun_declaration -> signature tlfunbinding
-- On LBRACE reduce production fun_declaration -> signature tlfunbinding
-- On INSERT reduce production fun_declaration -> signature tlfunbinding
-- On INFIXR reduce production fun_declaration -> signature tlfunbinding
-- On INFIXL reduce production fun_declaration -> signature tlfunbinding
-- On INFIX reduce production fun_declaration -> signature tlfunbinding
-- On IF reduce production fun_declaration -> signature tlfunbinding
-- On FUN reduce production fun_declaration -> signature tlfunbinding
-- On FORMLET reduce production fun_declaration -> signature tlfunbinding
-- On FOR reduce production fun_declaration -> signature tlfunbinding
-- On FALSE reduce production fun_declaration -> signature tlfunbinding
-- On ESCAPE reduce production fun_declaration -> signature tlfunbinding
-- On END reduce production fun_declaration -> signature tlfunbinding
-- On DELETE reduce production fun_declaration -> signature tlfunbinding
-- On DATABASE reduce production fun_declaration -> signature tlfunbinding
-- On CONSTRUCTOR reduce production fun_declaration -> signature tlfunbinding
-- On CHAR reduce production fun_declaration -> signature tlfunbinding
-- On ALIEN reduce production fun_declaration -> signature tlfunbinding

State 782:
declaration -> nofun_declaration . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production declaration -> nofun_declaration
-- On VAR reduce production declaration -> nofun_declaration
-- On UPDATE reduce production declaration -> nofun_declaration
-- On UINTEGER reduce production declaration -> nofun_declaration
-- On UFLOAT reduce production declaration -> nofun_declaration
-- On TYPENAME reduce production declaration -> nofun_declaration
-- On TRUE reduce production declaration -> nofun_declaration
-- On TABLE reduce production declaration -> nofun_declaration
-- On SWITCH reduce production declaration -> nofun_declaration
-- On STRING reduce production declaration -> nofun_declaration
-- On SPAWNWAIT reduce production declaration -> nofun_declaration
-- On SPAWN reduce production declaration -> nofun_declaration
-- On SIG reduce production declaration -> nofun_declaration
-- On RECEIVE reduce production declaration -> nofun_declaration
-- On QUERY reduce production declaration -> nofun_declaration
-- On PREFIXOP reduce production declaration -> nofun_declaration
-- On PREFIX reduce production declaration -> nofun_declaration
-- On POSTFIX reduce production declaration -> nofun_declaration
-- On PAGE reduce production declaration -> nofun_declaration
-- On OP reduce production declaration -> nofun_declaration
-- On MINUSDOT reduce production declaration -> nofun_declaration
-- On MINUS reduce production declaration -> nofun_declaration
-- On LXML reduce production declaration -> nofun_declaration
-- On LPAREN reduce production declaration -> nofun_declaration
-- On LBRACKET reduce production declaration -> nofun_declaration
-- On LBRACE reduce production declaration -> nofun_declaration
-- On INSERT reduce production declaration -> nofun_declaration
-- On INFIXR reduce production declaration -> nofun_declaration
-- On INFIXL reduce production declaration -> nofun_declaration
-- On INFIX reduce production declaration -> nofun_declaration
-- On IF reduce production declaration -> nofun_declaration
-- On FUN reduce production declaration -> nofun_declaration
-- On FORMLET reduce production declaration -> nofun_declaration
-- On FOR reduce production declaration -> nofun_declaration
-- On FALSE reduce production declaration -> nofun_declaration
-- On ESCAPE reduce production declaration -> nofun_declaration
-- On END reduce production declaration -> nofun_declaration
-- On DELETE reduce production declaration -> nofun_declaration
-- On DATABASE reduce production declaration -> nofun_declaration
-- On CONSTRUCTOR reduce production declaration -> nofun_declaration
-- On CHAR reduce production declaration -> nofun_declaration
-- On ALIEN reduce production declaration -> nofun_declaration

State 783:
declaration -> fun_declaration . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production declaration -> fun_declaration
-- On VAR reduce production declaration -> fun_declaration
-- On UPDATE reduce production declaration -> fun_declaration
-- On UINTEGER reduce production declaration -> fun_declaration
-- On UFLOAT reduce production declaration -> fun_declaration
-- On TYPENAME reduce production declaration -> fun_declaration
-- On TRUE reduce production declaration -> fun_declaration
-- On TABLE reduce production declaration -> fun_declaration
-- On SWITCH reduce production declaration -> fun_declaration
-- On STRING reduce production declaration -> fun_declaration
-- On SPAWNWAIT reduce production declaration -> fun_declaration
-- On SPAWN reduce production declaration -> fun_declaration
-- On SIG reduce production declaration -> fun_declaration
-- On RECEIVE reduce production declaration -> fun_declaration
-- On QUERY reduce production declaration -> fun_declaration
-- On PREFIXOP reduce production declaration -> fun_declaration
-- On PREFIX reduce production declaration -> fun_declaration
-- On POSTFIX reduce production declaration -> fun_declaration
-- On PAGE reduce production declaration -> fun_declaration
-- On OP reduce production declaration -> fun_declaration
-- On MINUSDOT reduce production declaration -> fun_declaration
-- On MINUS reduce production declaration -> fun_declaration
-- On LXML reduce production declaration -> fun_declaration
-- On LPAREN reduce production declaration -> fun_declaration
-- On LBRACKET reduce production declaration -> fun_declaration
-- On LBRACE reduce production declaration -> fun_declaration
-- On INSERT reduce production declaration -> fun_declaration
-- On INFIXR reduce production declaration -> fun_declaration
-- On INFIXL reduce production declaration -> fun_declaration
-- On INFIX reduce production declaration -> fun_declaration
-- On IF reduce production declaration -> fun_declaration
-- On FUN reduce production declaration -> fun_declaration
-- On FORMLET reduce production declaration -> fun_declaration
-- On FOR reduce production declaration -> fun_declaration
-- On FALSE reduce production declaration -> fun_declaration
-- On ESCAPE reduce production declaration -> fun_declaration
-- On END reduce production declaration -> fun_declaration
-- On DELETE reduce production declaration -> fun_declaration
-- On DATABASE reduce production declaration -> fun_declaration
-- On CONSTRUCTOR reduce production declaration -> fun_declaration
-- On CHAR reduce production declaration -> fun_declaration
-- On ALIEN reduce production declaration -> fun_declaration

State 784:
nofun_declaration -> fixity . perhaps_uinteger op SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On UINTEGER shift to state 785
-- On perhaps_uinteger shift to state 786
-- On INFIXR9 reduce production perhaps_uinteger -> 
-- On INFIXR8 reduce production perhaps_uinteger -> 
-- On INFIXR7 reduce production perhaps_uinteger -> 
-- On INFIXR6 reduce production perhaps_uinteger -> 
-- On INFIXR5 reduce production perhaps_uinteger -> 
-- On INFIXR4 reduce production perhaps_uinteger -> 
-- On INFIXR3 reduce production perhaps_uinteger -> 
-- On INFIXR2 reduce production perhaps_uinteger -> 
-- On INFIXR1 reduce production perhaps_uinteger -> 
-- On INFIXR0 reduce production perhaps_uinteger -> 
-- On INFIXL9 reduce production perhaps_uinteger -> 
-- On INFIXL8 reduce production perhaps_uinteger -> 
-- On INFIXL7 reduce production perhaps_uinteger -> 
-- On INFIXL6 reduce production perhaps_uinteger -> 
-- On INFIXL5 reduce production perhaps_uinteger -> 
-- On INFIXL4 reduce production perhaps_uinteger -> 
-- On INFIXL3 reduce production perhaps_uinteger -> 
-- On INFIXL2 reduce production perhaps_uinteger -> 
-- On INFIXL1 reduce production perhaps_uinteger -> 
-- On INFIXL0 reduce production perhaps_uinteger -> 
-- On INFIX9 reduce production perhaps_uinteger -> 
-- On INFIX8 reduce production perhaps_uinteger -> 
-- On INFIX7 reduce production perhaps_uinteger -> 
-- On INFIX6 reduce production perhaps_uinteger -> 
-- On INFIX5 reduce production perhaps_uinteger -> 
-- On INFIX4 reduce production perhaps_uinteger -> 
-- On INFIX3 reduce production perhaps_uinteger -> 
-- On INFIX2 reduce production perhaps_uinteger -> 
-- On INFIX1 reduce production perhaps_uinteger -> 
-- On INFIX0 reduce production perhaps_uinteger -> 

State 785:
perhaps_uinteger -> UINTEGER . [ INFIXR9 INFIXR8 INFIXR7 INFIXR6 INFIXR5 INFIXR4 INFIXR3 INFIXR2 INFIXR1 INFIXR0 INFIXL9 INFIXL8 INFIXL7 INFIXL6 INFIXL5 INFIXL4 INFIXL3 INFIXL2 INFIXL1 INFIXL0 INFIX9 INFIX8 INFIX7 INFIX6 INFIX5 INFIX4 INFIX3 INFIX2 INFIX1 INFIX0 ]
-- On INFIXR9 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR8 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR7 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR6 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR5 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR4 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR3 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR2 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR1 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXR0 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL9 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL8 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL7 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL6 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL5 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL4 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL3 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL2 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL1 reduce production perhaps_uinteger -> UINTEGER
-- On INFIXL0 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX9 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX8 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX7 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX6 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX5 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX4 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX3 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX2 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX1 reduce production perhaps_uinteger -> UINTEGER
-- On INFIX0 reduce production perhaps_uinteger -> UINTEGER

State 786:
nofun_declaration -> fixity perhaps_uinteger . op SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On INFIXR9 shift to state 578
-- On INFIXR8 shift to state 579
-- On INFIXR7 shift to state 580
-- On INFIXR6 shift to state 581
-- On INFIXR5 shift to state 582
-- On INFIXR4 shift to state 583
-- On INFIXR3 shift to state 584
-- On INFIXR2 shift to state 585
-- On INFIXR1 shift to state 586
-- On INFIXR0 shift to state 587
-- On INFIXL9 shift to state 588
-- On INFIXL8 shift to state 589
-- On INFIXL7 shift to state 590
-- On INFIXL6 shift to state 591
-- On INFIXL5 shift to state 592
-- On INFIXL4 shift to state 593
-- On INFIXL3 shift to state 594
-- On INFIXL2 shift to state 595
-- On INFIXL1 shift to state 596
-- On INFIXL0 shift to state 597
-- On INFIX9 shift to state 598
-- On INFIX8 shift to state 599
-- On INFIX7 shift to state 600
-- On INFIX6 shift to state 601
-- On INFIX5 shift to state 602
-- On INFIX4 shift to state 603
-- On INFIX3 shift to state 604
-- On INFIX2 shift to state 605
-- On INFIX1 shift to state 606
-- On INFIX0 shift to state 607
-- On op shift to state 787

State 787:
nofun_declaration -> fixity perhaps_uinteger op . SEMICOLON [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On SEMICOLON shift to state 788

State 788:
nofun_declaration -> fixity perhaps_uinteger op SEMICOLON . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On VAR reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On UPDATE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On UINTEGER reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On UFLOAT reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On TYPENAME reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On TRUE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On TABLE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On SWITCH reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On STRING reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On SPAWNWAIT reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On SPAWN reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On SIG reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On RECEIVE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On QUERY reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On PREFIXOP reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On PREFIX reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On POSTFIX reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On PAGE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On OP reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On MINUSDOT reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On MINUS reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On LXML reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On LPAREN reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On LBRACKET reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On LBRACE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On INSERT reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On INFIXR reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On INFIXL reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On INFIX reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On IF reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On FUN reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On FORMLET reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On FOR reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On FALSE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On ESCAPE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On END reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On DELETE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On DATABASE reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On CONSTRUCTOR reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On CHAR reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON
-- On ALIEN reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON

State 789:
file -> preamble exp . END [ # ]
-- On END shift to state 790

State 790:
file -> preamble exp END . [ # ]
-- On # reduce production file -> preamble exp END

State 791:
declarations -> declarations . declaration [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
file -> preamble declarations . exp END [ # ]
file -> preamble declarations . END [ # ]
-- On VARIABLE shift to state 6
-- On VAR shift to state 7
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TYPENAME shift to state 289
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On SIG shift to state 734
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PREFIX shift to state 741
-- On POSTFIX shift to state 742
-- On PAGE shift to state 308
-- On OP shift to state 743
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On INSERT shift to state 317
-- On INFIXR shift to state 758
-- On INFIXL shift to state 759
-- On INFIX shift to state 760
-- On IF shift to state 318
-- On FUN shift to state 761
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On END shift to state 792
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On ALIEN shift to state 766
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typedecl shift to state 772
-- On typed_expression shift to state 378
-- On tlvarbinding shift to state 774
-- On tlfunbinding shift to state 776
-- On table_expression shift to state 383
-- On signature shift to state 777
-- On primary_expression shift to state 344
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On nofun_declaration shift to state 782
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On fun_declaration shift to state 783
-- On formlet_expression shift to state 506
-- On fixity shift to state 784
-- On exp shift to state 793
-- On escape_expression shift to state 508
-- On declaration shift to state 795
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 792:
file -> preamble declarations END . [ # ]
-- On # reduce production file -> preamble declarations END

State 793:
file -> preamble declarations exp . END [ # ]
-- On END shift to state 794

State 794:
file -> preamble declarations exp END . [ # ]
-- On # reduce production file -> preamble declarations exp END

State 795:
declarations -> declarations declaration . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production declarations -> declarations declaration
-- On VAR reduce production declarations -> declarations declaration
-- On UPDATE reduce production declarations -> declarations declaration
-- On UINTEGER reduce production declarations -> declarations declaration
-- On UFLOAT reduce production declarations -> declarations declaration
-- On TYPENAME reduce production declarations -> declarations declaration
-- On TRUE reduce production declarations -> declarations declaration
-- On TABLE reduce production declarations -> declarations declaration
-- On SWITCH reduce production declarations -> declarations declaration
-- On STRING reduce production declarations -> declarations declaration
-- On SPAWNWAIT reduce production declarations -> declarations declaration
-- On SPAWN reduce production declarations -> declarations declaration
-- On SIG reduce production declarations -> declarations declaration
-- On RECEIVE reduce production declarations -> declarations declaration
-- On QUERY reduce production declarations -> declarations declaration
-- On PREFIXOP reduce production declarations -> declarations declaration
-- On PREFIX reduce production declarations -> declarations declaration
-- On POSTFIX reduce production declarations -> declarations declaration
-- On PAGE reduce production declarations -> declarations declaration
-- On OP reduce production declarations -> declarations declaration
-- On MINUSDOT reduce production declarations -> declarations declaration
-- On MINUS reduce production declarations -> declarations declaration
-- On LXML reduce production declarations -> declarations declaration
-- On LPAREN reduce production declarations -> declarations declaration
-- On LBRACKET reduce production declarations -> declarations declaration
-- On LBRACE reduce production declarations -> declarations declaration
-- On INSERT reduce production declarations -> declarations declaration
-- On INFIXR reduce production declarations -> declarations declaration
-- On INFIXL reduce production declarations -> declarations declaration
-- On INFIX reduce production declarations -> declarations declaration
-- On IF reduce production declarations -> declarations declaration
-- On FUN reduce production declarations -> declarations declaration
-- On FORMLET reduce production declarations -> declarations declaration
-- On FOR reduce production declarations -> declarations declaration
-- On FALSE reduce production declarations -> declarations declaration
-- On ESCAPE reduce production declarations -> declarations declaration
-- On END reduce production declarations -> declarations declaration
-- On DELETE reduce production declarations -> declarations declaration
-- On DATABASE reduce production declarations -> declarations declaration
-- On CONSTRUCTOR reduce production declarations -> declarations declaration
-- On CHAR reduce production declarations -> declarations declaration
-- On ALIEN reduce production declarations -> declarations declaration

State 796:
declarations -> declaration . [ VARIABLE VAR UPDATE UINTEGER UFLOAT TYPENAME TRUE TABLE SWITCH STRING SPAWNWAIT SPAWN SIG RECEIVE QUERY PREFIXOP PREFIX POSTFIX PAGE OP MINUSDOT MINUS LXML LPAREN LBRACKET LBRACE INSERT INFIXR INFIXL INFIX IF FUN FORMLET FOR FALSE ESCAPE END DELETE DATABASE CONSTRUCTOR CHAR ALIEN ]
-- On VARIABLE reduce production declarations -> declaration
-- On VAR reduce production declarations -> declaration
-- On UPDATE reduce production declarations -> declaration
-- On UINTEGER reduce production declarations -> declaration
-- On UFLOAT reduce production declarations -> declaration
-- On TYPENAME reduce production declarations -> declaration
-- On TRUE reduce production declarations -> declaration
-- On TABLE reduce production declarations -> declaration
-- On SWITCH reduce production declarations -> declaration
-- On STRING reduce production declarations -> declaration
-- On SPAWNWAIT reduce production declarations -> declaration
-- On SPAWN reduce production declarations -> declaration
-- On SIG reduce production declarations -> declaration
-- On RECEIVE reduce production declarations -> declaration
-- On QUERY reduce production declarations -> declaration
-- On PREFIXOP reduce production declarations -> declaration
-- On PREFIX reduce production declarations -> declaration
-- On POSTFIX reduce production declarations -> declaration
-- On PAGE reduce production declarations -> declaration
-- On OP reduce production declarations -> declaration
-- On MINUSDOT reduce production declarations -> declaration
-- On MINUS reduce production declarations -> declaration
-- On LXML reduce production declarations -> declaration
-- On LPAREN reduce production declarations -> declaration
-- On LBRACKET reduce production declarations -> declaration
-- On LBRACE reduce production declarations -> declaration
-- On INSERT reduce production declarations -> declaration
-- On INFIXR reduce production declarations -> declaration
-- On INFIXL reduce production declarations -> declaration
-- On INFIX reduce production declarations -> declaration
-- On IF reduce production declarations -> declaration
-- On FUN reduce production declarations -> declaration
-- On FORMLET reduce production declarations -> declaration
-- On FOR reduce production declarations -> declaration
-- On FALSE reduce production declarations -> declaration
-- On ESCAPE reduce production declarations -> declaration
-- On END reduce production declarations -> declaration
-- On DELETE reduce production declarations -> declaration
-- On DATABASE reduce production declarations -> declaration
-- On CONSTRUCTOR reduce production declarations -> declaration
-- On CHAR reduce production declarations -> declaration
-- On ALIEN reduce production declarations -> declaration

State 797:
file' -> file . [ # ]
-- On # accept file

State 798:
interactive' -> . interactive [ # ]
-- On VARIABLE shift to state 6
-- On VAR shift to state 7
-- On UPDATE shift to state 15
-- On UINTEGER shift to state 19
-- On UFLOAT shift to state 20
-- On TYPENAME shift to state 289
-- On TRUE shift to state 21
-- On TABLE shift to state 274
-- On SWITCH shift to state 275
-- On STRING shift to state 22
-- On SPAWNWAIT shift to state 277
-- On SPAWN shift to state 282
-- On SIG shift to state 734
-- On SEMICOLON shift to state 799
-- On RECEIVE shift to state 284
-- On QUERY shift to state 298
-- On PREFIXOP shift to state 300
-- On PREFIX shift to state 741
-- On POSTFIX shift to state 742
-- On PAGE shift to state 308
-- On OP shift to state 743
-- On MINUSDOT shift to state 301
-- On MINUS shift to state 302
-- On LXML shift to state 303
-- On LPAREN shift to state 311
-- On LBRACKET shift to state 315
-- On LBRACE shift to state 278
-- On KEYWORD shift to state 800
-- On INSERT shift to state 317
-- On INFIXR shift to state 758
-- On INFIXL shift to state 759
-- On INFIX shift to state 760
-- On INCLUDE shift to state 812
-- On IF shift to state 318
-- On FUN shift to state 761
-- On FORMLET shift to state 329
-- On FOR shift to state 332
-- On FALSE shift to state 38
-- On ESCAPE shift to state 340
-- On END shift to state 814
-- On DELETE shift to state 349
-- On DATABASE shift to state 356
-- On CONSTRUCTOR shift to state 364
-- On CHAR shift to state 41
-- On ALIEN shift to state 815
-- On xml_tree shift to state 309
-- On xml shift to state 343
-- On unary_expression shift to state 366
-- On typedecl shift to state 821
-- On typed_expression shift to state 378
-- On tlvarbinding shift to state 823
-- On tlfunbinding shift to state 776
-- On table_expression shift to state 383
-- On signature shift to state 825
-- On primary_expression shift to state 344
-- On preamble_declaration shift to state 828
-- On postfix_expression shift to state 368
-- On parenthesized_thing shift to state 357
-- On nofun_declaration shift to state 829
-- On logical_expression shift to state 384
-- On iteration_expression shift to state 504
-- On interactive shift to state 830
-- On infixr_9 shift to state 386
-- On infixr_8 shift to state 387
-- On infixr_7 shift to state 388
-- On infixr_6 shift to state 389
-- On infixr_5 shift to state 390
-- On infixr_4 shift to state 424
-- On infixr_3 shift to state 425
-- On infixr_2 shift to state 426
-- On infixr_1 shift to state 427
-- On infixr_0 shift to state 428
-- On infixl_9 shift to state 429
-- On infixl_8 shift to state 438
-- On infixl_7 shift to state 445
-- On infixl_6 shift to state 452
-- On infixl_5 shift to state 463
-- On infixl_4 shift to state 471
-- On infixl_3 shift to state 478
-- On infixl_2 shift to state 485
-- On infixl_1 shift to state 492
-- On infixl_0 shift to state 505
-- On fun_declarations shift to state 831
-- On fun_declaration shift to state 835
-- On formlet_expression shift to state 506
-- On fixity shift to state 836
-- On exp shift to state 840
-- On escape_expression shift to state 508
-- On directive shift to state 842
-- On db_expression shift to state 509
-- On database_expression shift to state 510
-- On constructor_expression shift to state 373
-- On constant shift to state 358
-- On conditional_expression shift to state 511
-- On case_expression shift to state 512
-- On block shift to state 374
-- On atomic_expression shift to state 375

State 799:
interactive -> SEMICOLON . [ # ]
-- On # reduce production interactive -> SEMICOLON

State 800:
directive -> KEYWORD . args SEMICOLON [ # ]
-- On VARIABLE shift to state 801
-- On UINTEGER shift to state 802
-- On UFLOAT shift to state 803
-- On TRUE shift to state 804
-- On STRING shift to state 805
-- On FALSE shift to state 806
-- On CONSTRUCTOR shift to state 807
-- On args shift to state 808
-- On arg shift to state 810
-- On SEMICOLON reduce production args -> 

State 801:
arg -> VARIABLE . [ VARIABLE UINTEGER UFLOAT TRUE STRING SEMICOLON FALSE CONSTRUCTOR ]
-- On VARIABLE reduce production arg -> VARIABLE
-- On UINTEGER reduce production arg -> VARIABLE
-- On UFLOAT reduce production arg -> VARIABLE
-- On TRUE reduce production arg -> VARIABLE
-- On STRING reduce production arg -> VARIABLE
-- On SEMICOLON reduce production arg -> VARIABLE
-- On FALSE reduce production arg -> VARIABLE
-- On CONSTRUCTOR reduce production arg -> VARIABLE

State 802:
arg -> UINTEGER . [ VARIABLE UINTEGER UFLOAT TRUE STRING SEMICOLON FALSE CONSTRUCTOR ]
-- On VARIABLE reduce production arg -> UINTEGER
-- On UINTEGER reduce production arg -> UINTEGER
-- On UFLOAT reduce production arg -> UINTEGER
-- On TRUE reduce production arg -> UINTEGER
-- On STRING reduce production arg -> UINTEGER
-- On SEMICOLON reduce production arg -> UINTEGER
-- On FALSE reduce production arg -> UINTEGER
-- On CONSTRUCTOR reduce production arg -> UINTEGER

State 803:
arg -> UFLOAT . [ VARIABLE UINTEGER UFLOAT TRUE STRING SEMICOLON FALSE CONSTRUCTOR ]
-- On VARIABLE reduce production arg -> UFLOAT
-- On UINTEGER reduce production arg -> UFLOAT
-- On UFLOAT reduce production arg -> UFLOAT
-- On TRUE reduce production arg -> UFLOAT
-- On STRING reduce production arg -> UFLOAT
-- On SEMICOLON reduce production arg -> UFLOAT
-- On FALSE reduce production arg -> UFLOAT
-- On CONSTRUCTOR reduce production arg -> UFLOAT

State 804:
arg -> TRUE . [ VARIABLE UINTEGER UFLOAT TRUE STRING SEMICOLON FALSE CONSTRUCTOR ]
-- On VARIABLE reduce production arg -> TRUE
-- On UINTEGER reduce production arg -> TRUE
-- On UFLOAT reduce production arg -> TRUE
-- On TRUE reduce production arg -> TRUE
-- On STRING reduce production arg -> TRUE
-- On SEMICOLON reduce production arg -> TRUE
-- On FALSE reduce production arg -> TRUE
-- On CONSTRUCTOR reduce production arg -> TRUE

State 805:
arg -> STRING . [ VARIABLE UINTEGER UFLOAT TRUE STRING SEMICOLON FALSE CONSTRUCTOR ]
-- On VARIABLE reduce production arg -> STRING
-- On UINTEGER reduce production arg -> STRING
-- On UFLOAT reduce production arg -> STRING
-- On TRUE reduce production arg -> STRING
-- On STRING reduce production arg -> STRING
-- On SEMICOLON reduce production arg -> STRING
-- On FALSE reduce production arg -> STRING
-- On CONSTRUCTOR reduce production arg -> STRING

State 806:
arg -> FALSE . [ VARIABLE UINTEGER UFLOAT TRUE STRING SEMICOLON FALSE CONSTRUCTOR ]
-- On VARIABLE reduce production arg -> FALSE
-- On UINTEGER reduce production arg -> FALSE
-- On UFLOAT reduce production arg -> FALSE
-- On TRUE reduce production arg -> FALSE
-- On STRING reduce production arg -> FALSE
-- On SEMICOLON reduce production arg -> FALSE
-- On FALSE reduce production arg -> FALSE
-- On CONSTRUCTOR reduce production arg -> FALSE

State 807:
arg -> CONSTRUCTOR . [ VARIABLE UINTEGER UFLOAT TRUE STRING SEMICOLON FALSE CONSTRUCTOR ]
-- On VARIABLE reduce production arg -> CONSTRUCTOR
-- On UINTEGER reduce production arg -> CONSTRUCTOR
-- On UFLOAT reduce production arg -> CONSTRUCTOR
-- On TRUE reduce production arg -> CONSTRUCTOR
-- On STRING reduce production arg -> CONSTRUCTOR
-- On SEMICOLON reduce production arg -> CONSTRUCTOR
-- On FALSE reduce production arg -> CONSTRUCTOR
-- On CONSTRUCTOR reduce production arg -> CONSTRUCTOR

State 808:
directive -> KEYWORD args . SEMICOLON [ # ]
-- On SEMICOLON shift to state 809

State 809:
directive -> KEYWORD args SEMICOLON . [ # ]
-- On # reduce production directive -> KEYWORD args SEMICOLON

State 810:
args -> arg . args [ SEMICOLON ]
-- On VARIABLE shift to state 801
-- On UINTEGER shift to state 802
-- On UFLOAT shift to state 803
-- On TRUE shift to state 804
-- On STRING shift to state 805
-- On FALSE shift to state 806
-- On CONSTRUCTOR shift to state 807
-- On args shift to state 811
-- On arg shift to state 810
-- On SEMICOLON reduce production args -> 

State 811:
args -> arg args . [ SEMICOLON ]
-- On SEMICOLON reduce production args -> arg args

State 812:
preamble_declaration -> INCLUDE . STRING [ # ]
-- On STRING shift to state 813

State 813:
preamble_declaration -> INCLUDE STRING . [ # ]
-- On # reduce production preamble_declaration -> INCLUDE STRING

State 814:
interactive -> END . [ # ]
-- On # reduce production interactive -> END

State 815:
nofun_declaration -> ALIEN . VARIABLE var COLON datatype SEMICOLON [ # ]
-- On VARIABLE shift to state 816

State 816:
nofun_declaration -> ALIEN VARIABLE . var COLON datatype SEMICOLON [ # ]
-- On VARIABLE shift to state 8
-- On var shift to state 817

State 817:
nofun_declaration -> ALIEN VARIABLE var . COLON datatype SEMICOLON [ # ]
-- On COLON shift to state 818

State 818:
nofun_declaration -> ALIEN VARIABLE var COLON . datatype SEMICOLON [ # ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On forall_datatype shift to state 118
-- On datatype shift to state 819

State 819:
nofun_declaration -> ALIEN VARIABLE var COLON datatype . SEMICOLON [ # ]
-- On SEMICOLON shift to state 820

State 820:
nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON . [ # ]
-- On # reduce production nofun_declaration -> ALIEN VARIABLE var COLON datatype SEMICOLON

State 821:
nofun_declaration -> typedecl . SEMICOLON [ # ]
-- On SEMICOLON shift to state 822

State 822:
nofun_declaration -> typedecl SEMICOLON . [ # ]
-- On # reduce production nofun_declaration -> typedecl SEMICOLON

State 823:
nofun_declaration -> tlvarbinding . SEMICOLON [ # ]
-- On SEMICOLON shift to state 824

State 824:
nofun_declaration -> tlvarbinding SEMICOLON . [ # ]
-- On # reduce production nofun_declaration -> tlvarbinding SEMICOLON

State 825:
fun_declaration -> signature . tlfunbinding [ SIG SEMICOLON OP FUN ]
nofun_declaration -> signature . tlvarbinding SEMICOLON [ # ]
-- On VAR shift to state 7
-- On OP shift to state 743
-- On FUN shift to state 778
-- On tlvarbinding shift to state 826
-- On tlfunbinding shift to state 781

State 826:
nofun_declaration -> signature tlvarbinding . SEMICOLON [ # ]
-- On SEMICOLON shift to state 827

State 827:
nofun_declaration -> signature tlvarbinding SEMICOLON . [ # ]
-- On # reduce production nofun_declaration -> signature tlvarbinding SEMICOLON

State 828:
interactive -> preamble_declaration . [ # ]
-- On # reduce production interactive -> preamble_declaration

State 829:
interactive -> nofun_declaration . [ # ]
-- On # reduce production interactive -> nofun_declaration

State 830:
interactive' -> interactive . [ # ]
-- On # accept interactive

State 831:
fun_declarations -> fun_declarations . fun_declaration [ SIG SEMICOLON OP FUN ]
interactive -> fun_declarations . SEMICOLON [ # ]
-- On SIG shift to state 734
-- On SEMICOLON shift to state 832
-- On OP shift to state 743
-- On FUN shift to state 778
-- On tlfunbinding shift to state 776
-- On signature shift to state 833
-- On fun_declaration shift to state 834

State 832:
interactive -> fun_declarations SEMICOLON . [ # ]
-- On # reduce production interactive -> fun_declarations SEMICOLON

State 833:
fun_declaration -> signature . tlfunbinding [ SIG SEMICOLON OP FUN ]
-- On OP shift to state 743
-- On FUN shift to state 778
-- On tlfunbinding shift to state 781

State 834:
fun_declarations -> fun_declarations fun_declaration . [ SIG SEMICOLON OP FUN ]
-- On SIG reduce production fun_declarations -> fun_declarations fun_declaration
-- On SEMICOLON reduce production fun_declarations -> fun_declarations fun_declaration
-- On OP reduce production fun_declarations -> fun_declarations fun_declaration
-- On FUN reduce production fun_declarations -> fun_declarations fun_declaration

State 835:
fun_declarations -> fun_declaration . [ SIG SEMICOLON OP FUN ]
-- On SIG reduce production fun_declarations -> fun_declaration
-- On SEMICOLON reduce production fun_declarations -> fun_declaration
-- On OP reduce production fun_declarations -> fun_declaration
-- On FUN reduce production fun_declarations -> fun_declaration

State 836:
nofun_declaration -> fixity . perhaps_uinteger op SEMICOLON [ # ]
-- On UINTEGER shift to state 785
-- On perhaps_uinteger shift to state 837
-- On INFIXR9 reduce production perhaps_uinteger -> 
-- On INFIXR8 reduce production perhaps_uinteger -> 
-- On INFIXR7 reduce production perhaps_uinteger -> 
-- On INFIXR6 reduce production perhaps_uinteger -> 
-- On INFIXR5 reduce production perhaps_uinteger -> 
-- On INFIXR4 reduce production perhaps_uinteger -> 
-- On INFIXR3 reduce production perhaps_uinteger -> 
-- On INFIXR2 reduce production perhaps_uinteger -> 
-- On INFIXR1 reduce production perhaps_uinteger -> 
-- On INFIXR0 reduce production perhaps_uinteger -> 
-- On INFIXL9 reduce production perhaps_uinteger -> 
-- On INFIXL8 reduce production perhaps_uinteger -> 
-- On INFIXL7 reduce production perhaps_uinteger -> 
-- On INFIXL6 reduce production perhaps_uinteger -> 
-- On INFIXL5 reduce production perhaps_uinteger -> 
-- On INFIXL4 reduce production perhaps_uinteger -> 
-- On INFIXL3 reduce production perhaps_uinteger -> 
-- On INFIXL2 reduce production perhaps_uinteger -> 
-- On INFIXL1 reduce production perhaps_uinteger -> 
-- On INFIXL0 reduce production perhaps_uinteger -> 
-- On INFIX9 reduce production perhaps_uinteger -> 
-- On INFIX8 reduce production perhaps_uinteger -> 
-- On INFIX7 reduce production perhaps_uinteger -> 
-- On INFIX6 reduce production perhaps_uinteger -> 
-- On INFIX5 reduce production perhaps_uinteger -> 
-- On INFIX4 reduce production perhaps_uinteger -> 
-- On INFIX3 reduce production perhaps_uinteger -> 
-- On INFIX2 reduce production perhaps_uinteger -> 
-- On INFIX1 reduce production perhaps_uinteger -> 
-- On INFIX0 reduce production perhaps_uinteger -> 

State 837:
nofun_declaration -> fixity perhaps_uinteger . op SEMICOLON [ # ]
-- On INFIXR9 shift to state 578
-- On INFIXR8 shift to state 579
-- On INFIXR7 shift to state 580
-- On INFIXR6 shift to state 581
-- On INFIXR5 shift to state 582
-- On INFIXR4 shift to state 583
-- On INFIXR3 shift to state 584
-- On INFIXR2 shift to state 585
-- On INFIXR1 shift to state 586
-- On INFIXR0 shift to state 587
-- On INFIXL9 shift to state 588
-- On INFIXL8 shift to state 589
-- On INFIXL7 shift to state 590
-- On INFIXL6 shift to state 591
-- On INFIXL5 shift to state 592
-- On INFIXL4 shift to state 593
-- On INFIXL3 shift to state 594
-- On INFIXL2 shift to state 595
-- On INFIXL1 shift to state 596
-- On INFIXL0 shift to state 597
-- On INFIX9 shift to state 598
-- On INFIX8 shift to state 599
-- On INFIX7 shift to state 600
-- On INFIX6 shift to state 601
-- On INFIX5 shift to state 602
-- On INFIX4 shift to state 603
-- On INFIX3 shift to state 604
-- On INFIX2 shift to state 605
-- On INFIX1 shift to state 606
-- On INFIX0 shift to state 607
-- On op shift to state 838

State 838:
nofun_declaration -> fixity perhaps_uinteger op . SEMICOLON [ # ]
-- On SEMICOLON shift to state 839

State 839:
nofun_declaration -> fixity perhaps_uinteger op SEMICOLON . [ # ]
-- On # reduce production nofun_declaration -> fixity perhaps_uinteger op SEMICOLON

State 840:
interactive -> exp . SEMICOLON [ # ]
-- On SEMICOLON shift to state 841

State 841:
interactive -> exp SEMICOLON . [ # ]
-- On # reduce production interactive -> exp SEMICOLON

State 842:
interactive -> directive . [ # ]
-- On # reduce production interactive -> directive

State 843:
just_datatype' -> . just_datatype [ # ]
-- On VARIABLE shift to state 44
-- On UNDERSCORE shift to state 45
-- On TABLEHANDLE shift to state 46
-- On QUESTIONVAR shift to state 48
-- On QUESTION shift to state 49
-- On MU shift to state 50
-- On LPAREN shift to state 53
-- On LBRACKETBAR shift to state 77
-- On LBRACKET shift to state 90
-- On FORALL shift to state 91
-- On CONSTRUCTOR shift to state 101
-- On type_var shift to state 105
-- On straight_arrow shift to state 107
-- On squiggly_arrow shift to state 108
-- On primary_datatype shift to state 109
-- On parenthesized_datatypes shift to state 110
-- On mu_datatype shift to state 116
-- On kinded_type_var shift to state 117
-- On just_datatype shift to state 844
-- On forall_datatype shift to state 118
-- On datatype shift to state 845

State 844:
just_datatype' -> just_datatype . [ # ]
-- On # accept just_datatype

State 845:
just_datatype -> datatype . END [ # ]
-- On END shift to state 846

State 846:
just_datatype -> datatype END . [ # ]
-- On # reduce production just_datatype -> datatype END

