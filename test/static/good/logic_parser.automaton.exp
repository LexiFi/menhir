State 0:
## Known stack suffix:
##
## LR(1) items:
annot' -> . annot [ # ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 2
-- On VOID shift to state 4
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPE shift to state 560
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 617
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 623
-- On MODEL shift to state 648
-- On LOOP shift to state 656
-- On LONG shift to state 28
-- On LOGIC shift to state 704
-- On LEMMA shift to state 719
-- On LABEL shift to state 31
-- On INVARIANT shift to state 724
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 727
-- On IMPACT shift to state 739
-- On IF shift to state 38
-- On GLOBAL shift to state 745
-- On FREES shift to state 42
-- On FOR shift to state 751
-- On FLOAT shift to state 44
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 889
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 907
-- On AXIOM shift to state 937
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 942
-- On ALLOCATES shift to state 71
-- On type_annot shift to state 945
-- On slice_pragma shift to state 946
-- On post_cond shift to state 72
-- On model_annot shift to state 947
-- On loop_variant shift to state 778
-- On loop_pragma shift to state 779
-- On loop_invariant shift to state 780
-- On loop_grammar_extension shift to state 781
-- On loop_effects shift to state 782
-- On loop_annotations shift to state 948
-- On loop_annot_stack shift to state 949
-- On loop_allocation shift to state 785
-- On logic_def shift to state 950
-- On is_spec shift to state 951
-- On is_acsl_spec shift to state 1043
-- On is_acsl_other shift to state 692
-- On impact_pragma shift to state 1044
-- On grammar_extension_name shift to state 1045
-- On full_identifier_or_typename shift to state 1046
-- On enter_kw_c_mode shift to state 698
-- On deprecated_logic_decl shift to state 1047
-- On decl_list shift to state 1048
-- On decl shift to state 1050
-- On code_annotation shift to state 1052
-- On c_keyword shift to state 701
-- On annotation shift to state 1059
-- On annot shift to state 1061
## Reductions:
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 1:
## Known stack suffix:
## WRITES
## LR(1) items:
is_acsl_other -> WRITES . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_other -> WRITES
-- On WITH reduce production is_acsl_other -> WRITES
-- On VOLATILE reduce production is_acsl_other -> WRITES
-- On VOID reduce production is_acsl_other -> WRITES
-- On VARIANT reduce production is_acsl_other -> WRITES
-- On VALID_READ reduce production is_acsl_other -> WRITES
-- On VALID_RANGE reduce production is_acsl_other -> WRITES
-- On VALID_INDEX reduce production is_acsl_other -> WRITES
-- On VALID reduce production is_acsl_other -> WRITES
-- On UNSIGNED reduce production is_acsl_other -> WRITES
-- On UNION reduce production is_acsl_other -> WRITES
-- On UNALLOCATED reduce production is_acsl_other -> WRITES
-- On TYPEOF reduce production is_acsl_other -> WRITES
-- On TYPENAME reduce production is_acsl_other -> WRITES
-- On TYPE reduce production is_acsl_other -> WRITES
-- On TRUE reduce production is_acsl_other -> WRITES
-- On TILDE reduce production is_acsl_other -> WRITES
-- On TERMINATES reduce production is_acsl_other -> WRITES
-- On STRUCT reduce production is_acsl_other -> WRITES
-- On STRING_LITERAL reduce production is_acsl_other -> WRITES
-- On STATIC reduce production is_acsl_other -> WRITES
-- On STAR reduce production is_acsl_other -> WRITES
-- On SLICE reduce production is_acsl_other -> WRITES
-- On SLASH reduce production is_acsl_other -> WRITES
-- On SIZEOF reduce production is_acsl_other -> WRITES
-- On SIGNED reduce production is_acsl_other -> WRITES
-- On SHORT reduce production is_acsl_other -> WRITES
-- On SEPARATED reduce production is_acsl_other -> WRITES
-- On SEMICOLON reduce production is_acsl_other -> WRITES
-- On RSQUARE reduce production is_acsl_other -> WRITES
-- On RPAR reduce production is_acsl_other -> WRITES
-- On RETURNS reduce production is_acsl_other -> WRITES
-- On RESULT reduce production is_acsl_other -> WRITES
-- On REQUIRES reduce production is_acsl_other -> WRITES
-- On REGISTER reduce production is_acsl_other -> WRITES
-- On REAL reduce production is_acsl_other -> WRITES
-- On READS reduce production is_acsl_other -> WRITES
-- On RBRACE reduce production is_acsl_other -> WRITES
-- On QUESTION reduce production is_acsl_other -> WRITES
-- On PREDICATE reduce production is_acsl_other -> WRITES
-- On PRAGMA reduce production is_acsl_other -> WRITES
-- On PLUS reduce production is_acsl_other -> WRITES
-- On PIPE reduce production is_acsl_other -> WRITES
-- On PERCENT reduce production is_acsl_other -> WRITES
-- On OR reduce production is_acsl_other -> WRITES
-- On OLD reduce production is_acsl_other -> WRITES
-- On OFFSET reduce production is_acsl_other -> WRITES
-- On NULL reduce production is_acsl_other -> WRITES
-- On NOTHING reduce production is_acsl_other -> WRITES
-- On NOT reduce production is_acsl_other -> WRITES
-- On NE reduce production is_acsl_other -> WRITES
-- On MODULE reduce production is_acsl_other -> WRITES
-- On MODEL reduce production is_acsl_other -> WRITES
-- On MINUS reduce production is_acsl_other -> WRITES
-- On LTLT reduce production is_acsl_other -> WRITES
-- On LTCOLON reduce production is_acsl_other -> WRITES
-- On LT reduce production is_acsl_other -> WRITES
-- On LSQUARE reduce production is_acsl_other -> WRITES
-- On LPAR reduce production is_acsl_other -> WRITES
-- On LOOP reduce production is_acsl_other -> WRITES
-- On LONG reduce production is_acsl_other -> WRITES
-- On LOGIC reduce production is_acsl_other -> WRITES
-- On LET reduce production is_acsl_other -> WRITES
-- On LEMMA reduce production is_acsl_other -> WRITES
-- On LE reduce production is_acsl_other -> WRITES
-- On LBRACE reduce production is_acsl_other -> WRITES
-- On LAMBDA reduce production is_acsl_other -> WRITES
-- On LABEL reduce production is_acsl_other -> WRITES
-- On INVARIANT reduce production is_acsl_other -> WRITES
-- On INTER reduce production is_acsl_other -> WRITES
-- On INTEGER reduce production is_acsl_other -> WRITES
-- On INT reduce production is_acsl_other -> WRITES
-- On INITIALIZED reduce production is_acsl_other -> WRITES
-- On INDUCTIVE reduce production is_acsl_other -> WRITES
-- On INCLUDE reduce production is_acsl_other -> WRITES
-- On IMPLIES reduce production is_acsl_other -> WRITES
-- On IMPACT reduce production is_acsl_other -> WRITES
-- On IFF reduce production is_acsl_other -> WRITES
-- On IF reduce production is_acsl_other -> WRITES
-- On IDENTIFIER reduce production is_acsl_other -> WRITES
-- On HATHAT reduce production is_acsl_other -> WRITES
-- On HAT reduce production is_acsl_other -> WRITES
-- On GTGT reduce production is_acsl_other -> WRITES
-- On GT reduce production is_acsl_other -> WRITES
-- On GLOBAL reduce production is_acsl_other -> WRITES
-- On GHOST reduce production is_acsl_other -> WRITES
-- On GE reduce production is_acsl_other -> WRITES
-- On FUNCTION reduce production is_acsl_other -> WRITES
-- On FROM reduce production is_acsl_other -> WRITES
-- On FRESH reduce production is_acsl_other -> WRITES
-- On FREES reduce production is_acsl_other -> WRITES
-- On FREEABLE reduce production is_acsl_other -> WRITES
-- On FORALL reduce production is_acsl_other -> WRITES
-- On FOR reduce production is_acsl_other -> WRITES
-- On FLOAT reduce production is_acsl_other -> WRITES
-- On FALSE reduce production is_acsl_other -> WRITES
-- On EXT_LET reduce production is_acsl_other -> WRITES
-- On EXT_AT reduce production is_acsl_other -> WRITES
-- On EXITS reduce production is_acsl_other -> WRITES
-- On EXISTS reduce production is_acsl_other -> WRITES
-- On EQUAL reduce production is_acsl_other -> WRITES
-- On EQ reduce production is_acsl_other -> WRITES
-- On EOF reduce production is_acsl_other -> WRITES
-- On ENUM reduce production is_acsl_other -> WRITES
-- On ENSURES reduce production is_acsl_other -> WRITES
-- On EMPTY reduce production is_acsl_other -> WRITES
-- On ELSE reduce production is_acsl_other -> WRITES
-- On DYNAMIC reduce production is_acsl_other -> WRITES
-- On DOUBLE reduce production is_acsl_other -> WRITES
-- On DOTDOTDOT reduce production is_acsl_other -> WRITES
-- On DOTDOT reduce production is_acsl_other -> WRITES
-- On DOT reduce production is_acsl_other -> WRITES
-- On DOLLAR reduce production is_acsl_other -> WRITES
-- On DISJOINT reduce production is_acsl_other -> WRITES
-- On DECREASES reduce production is_acsl_other -> WRITES
-- On DANGLING reduce production is_acsl_other -> WRITES
-- On CUSTOM reduce production is_acsl_other -> WRITES
-- On CONTRACT reduce production is_acsl_other -> WRITES
-- On CONTINUES reduce production is_acsl_other -> WRITES
-- On CONSTANT10 reduce production is_acsl_other -> WRITES
-- On CONSTANT reduce production is_acsl_other -> WRITES
-- On CONST reduce production is_acsl_other -> WRITES
-- On COMPLETE reduce production is_acsl_other -> WRITES
-- On COMMA reduce production is_acsl_other -> WRITES
-- On COLONGT reduce production is_acsl_other -> WRITES
-- On COLONCOLON reduce production is_acsl_other -> WRITES
-- On COLON2 reduce production is_acsl_other -> WRITES
-- On COLON reduce production is_acsl_other -> WRITES
-- On CHAR reduce production is_acsl_other -> WRITES
-- On CASE reduce production is_acsl_other -> WRITES
-- On BSUNION reduce production is_acsl_other -> WRITES
-- On BSTYPE reduce production is_acsl_other -> WRITES
-- On BREAKS reduce production is_acsl_other -> WRITES
-- On BOOLEAN reduce production is_acsl_other -> WRITES
-- On BOOL reduce production is_acsl_other -> WRITES
-- On BLOCK_LENGTH reduce production is_acsl_other -> WRITES
-- On BIMPLIES reduce production is_acsl_other -> WRITES
-- On BIFF reduce production is_acsl_other -> WRITES
-- On BEHAVIORS reduce production is_acsl_other -> WRITES
-- On BEHAVIOR reduce production is_acsl_other -> WRITES
-- On BASE_ADDR reduce production is_acsl_other -> WRITES
-- On AXIOMATIC reduce production is_acsl_other -> WRITES
-- On AXIOM reduce production is_acsl_other -> WRITES
-- On AUTOMATIC reduce production is_acsl_other -> WRITES
-- On AT reduce production is_acsl_other -> WRITES
-- On ASSUMES reduce production is_acsl_other -> WRITES
-- On ASSIGNS reduce production is_acsl_other -> WRITES
-- On ASSERT reduce production is_acsl_other -> WRITES
-- On ARROW reduce production is_acsl_other -> WRITES
-- On AND reduce production is_acsl_other -> WRITES
-- On AMP reduce production is_acsl_other -> WRITES
-- On ALLOCATION reduce production is_acsl_other -> WRITES
-- On ALLOCATES reduce production is_acsl_other -> WRITES
-- On ALLOCABLE reduce production is_acsl_other -> WRITES

State 2:
## Known stack suffix:
## VOLATILE
## LR(1) items:
decl -> VOLATILE . ne_zones volatile_opt SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_zones shift to state 550
-- On ne_lexpr_list shift to state 559
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 329
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 3:
## Known stack suffix:
## VOLATILE
## LR(1) items:
acsl_c_keyword -> VOLATILE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production acsl_c_keyword -> VOLATILE
-- On WITH reduce production acsl_c_keyword -> VOLATILE
-- On VOLATILE reduce production acsl_c_keyword -> VOLATILE
-- On VOID reduce production acsl_c_keyword -> VOLATILE
-- On VARIANT reduce production acsl_c_keyword -> VOLATILE
-- On VALID_READ reduce production acsl_c_keyword -> VOLATILE
-- On VALID_RANGE reduce production acsl_c_keyword -> VOLATILE
-- On VALID_INDEX reduce production acsl_c_keyword -> VOLATILE
-- On VALID reduce production acsl_c_keyword -> VOLATILE
-- On UNSIGNED reduce production acsl_c_keyword -> VOLATILE
-- On UNION reduce production acsl_c_keyword -> VOLATILE
-- On UNALLOCATED reduce production acsl_c_keyword -> VOLATILE
-- On TYPEOF reduce production acsl_c_keyword -> VOLATILE
-- On TYPENAME reduce production acsl_c_keyword -> VOLATILE
-- On TYPE reduce production acsl_c_keyword -> VOLATILE
-- On TRUE reduce production acsl_c_keyword -> VOLATILE
-- On TILDE reduce production acsl_c_keyword -> VOLATILE
-- On TERMINATES reduce production acsl_c_keyword -> VOLATILE
-- On STRUCT reduce production acsl_c_keyword -> VOLATILE
-- On STRING_LITERAL reduce production acsl_c_keyword -> VOLATILE
-- On STATIC reduce production acsl_c_keyword -> VOLATILE
-- On STAR reduce production acsl_c_keyword -> VOLATILE
-- On SLICE reduce production acsl_c_keyword -> VOLATILE
-- On SLASH reduce production acsl_c_keyword -> VOLATILE
-- On SIZEOF reduce production acsl_c_keyword -> VOLATILE
-- On SIGNED reduce production acsl_c_keyword -> VOLATILE
-- On SHORT reduce production acsl_c_keyword -> VOLATILE
-- On SEPARATED reduce production acsl_c_keyword -> VOLATILE
-- On SEMICOLON reduce production acsl_c_keyword -> VOLATILE
-- On RSQUARE reduce production acsl_c_keyword -> VOLATILE
-- On RPAR reduce production acsl_c_keyword -> VOLATILE
-- On RETURNS reduce production acsl_c_keyword -> VOLATILE
-- On RESULT reduce production acsl_c_keyword -> VOLATILE
-- On REQUIRES reduce production acsl_c_keyword -> VOLATILE
-- On REGISTER reduce production acsl_c_keyword -> VOLATILE
-- On REAL reduce production acsl_c_keyword -> VOLATILE
-- On READS reduce production acsl_c_keyword -> VOLATILE
-- On RBRACE reduce production acsl_c_keyword -> VOLATILE
-- On QUESTION reduce production acsl_c_keyword -> VOLATILE
-- On PREDICATE reduce production acsl_c_keyword -> VOLATILE
-- On PRAGMA reduce production acsl_c_keyword -> VOLATILE
-- On PLUS reduce production acsl_c_keyword -> VOLATILE
-- On PIPE reduce production acsl_c_keyword -> VOLATILE
-- On PERCENT reduce production acsl_c_keyword -> VOLATILE
-- On OR reduce production acsl_c_keyword -> VOLATILE
-- On OLD reduce production acsl_c_keyword -> VOLATILE
-- On OFFSET reduce production acsl_c_keyword -> VOLATILE
-- On NULL reduce production acsl_c_keyword -> VOLATILE
-- On NOTHING reduce production acsl_c_keyword -> VOLATILE
-- On NOT reduce production acsl_c_keyword -> VOLATILE
-- On NE reduce production acsl_c_keyword -> VOLATILE
-- On MODULE reduce production acsl_c_keyword -> VOLATILE
-- On MODEL reduce production acsl_c_keyword -> VOLATILE
-- On MINUS reduce production acsl_c_keyword -> VOLATILE
-- On LTLT reduce production acsl_c_keyword -> VOLATILE
-- On LTCOLON reduce production acsl_c_keyword -> VOLATILE
-- On LT reduce production acsl_c_keyword -> VOLATILE
-- On LSQUARE reduce production acsl_c_keyword -> VOLATILE
-- On LPAR reduce production acsl_c_keyword -> VOLATILE
-- On LOOP reduce production acsl_c_keyword -> VOLATILE
-- On LONG reduce production acsl_c_keyword -> VOLATILE
-- On LOGIC reduce production acsl_c_keyword -> VOLATILE
-- On LET reduce production acsl_c_keyword -> VOLATILE
-- On LEMMA reduce production acsl_c_keyword -> VOLATILE
-- On LE reduce production acsl_c_keyword -> VOLATILE
-- On LBRACE reduce production acsl_c_keyword -> VOLATILE
-- On LAMBDA reduce production acsl_c_keyword -> VOLATILE
-- On LABEL reduce production acsl_c_keyword -> VOLATILE
-- On INVARIANT reduce production acsl_c_keyword -> VOLATILE
-- On INTER reduce production acsl_c_keyword -> VOLATILE
-- On INTEGER reduce production acsl_c_keyword -> VOLATILE
-- On INT reduce production acsl_c_keyword -> VOLATILE
-- On INITIALIZED reduce production acsl_c_keyword -> VOLATILE
-- On INDUCTIVE reduce production acsl_c_keyword -> VOLATILE
-- On INCLUDE reduce production acsl_c_keyword -> VOLATILE
-- On IMPLIES reduce production acsl_c_keyword -> VOLATILE
-- On IMPACT reduce production acsl_c_keyword -> VOLATILE
-- On IFF reduce production acsl_c_keyword -> VOLATILE
-- On IF reduce production acsl_c_keyword -> VOLATILE
-- On IDENTIFIER reduce production acsl_c_keyword -> VOLATILE
-- On HATHAT reduce production acsl_c_keyword -> VOLATILE
-- On HAT reduce production acsl_c_keyword -> VOLATILE
-- On GTGT reduce production acsl_c_keyword -> VOLATILE
-- On GT reduce production acsl_c_keyword -> VOLATILE
-- On GLOBAL reduce production acsl_c_keyword -> VOLATILE
-- On GHOST reduce production acsl_c_keyword -> VOLATILE
-- On GE reduce production acsl_c_keyword -> VOLATILE
-- On FUNCTION reduce production acsl_c_keyword -> VOLATILE
-- On FROM reduce production acsl_c_keyword -> VOLATILE
-- On FRESH reduce production acsl_c_keyword -> VOLATILE
-- On FREES reduce production acsl_c_keyword -> VOLATILE
-- On FREEABLE reduce production acsl_c_keyword -> VOLATILE
-- On FORALL reduce production acsl_c_keyword -> VOLATILE
-- On FOR reduce production acsl_c_keyword -> VOLATILE
-- On FLOAT reduce production acsl_c_keyword -> VOLATILE
-- On FALSE reduce production acsl_c_keyword -> VOLATILE
-- On EXT_LET reduce production acsl_c_keyword -> VOLATILE
-- On EXT_AT reduce production acsl_c_keyword -> VOLATILE
-- On EXITS reduce production acsl_c_keyword -> VOLATILE
-- On EXISTS reduce production acsl_c_keyword -> VOLATILE
-- On EQUAL reduce production acsl_c_keyword -> VOLATILE
-- On EQ reduce production acsl_c_keyword -> VOLATILE
-- On EOF reduce production acsl_c_keyword -> VOLATILE
-- On ENUM reduce production acsl_c_keyword -> VOLATILE
-- On ENSURES reduce production acsl_c_keyword -> VOLATILE
-- On EMPTY reduce production acsl_c_keyword -> VOLATILE
-- On ELSE reduce production acsl_c_keyword -> VOLATILE
-- On DYNAMIC reduce production acsl_c_keyword -> VOLATILE
-- On DOUBLE reduce production acsl_c_keyword -> VOLATILE
-- On DOTDOTDOT reduce production acsl_c_keyword -> VOLATILE
-- On DOTDOT reduce production acsl_c_keyword -> VOLATILE
-- On DOT reduce production acsl_c_keyword -> VOLATILE
-- On DOLLAR reduce production acsl_c_keyword -> VOLATILE
-- On DISJOINT reduce production acsl_c_keyword -> VOLATILE
-- On DECREASES reduce production acsl_c_keyword -> VOLATILE
-- On DANGLING reduce production acsl_c_keyword -> VOLATILE
-- On CUSTOM reduce production acsl_c_keyword -> VOLATILE
-- On CONTRACT reduce production acsl_c_keyword -> VOLATILE
-- On CONTINUES reduce production acsl_c_keyword -> VOLATILE
-- On CONSTANT10 reduce production acsl_c_keyword -> VOLATILE
-- On CONSTANT reduce production acsl_c_keyword -> VOLATILE
-- On CONST reduce production acsl_c_keyword -> VOLATILE
-- On COMPLETE reduce production acsl_c_keyword -> VOLATILE
-- On COMMA reduce production acsl_c_keyword -> VOLATILE
-- On COLONGT reduce production acsl_c_keyword -> VOLATILE
-- On COLONCOLON reduce production acsl_c_keyword -> VOLATILE
-- On COLON2 reduce production acsl_c_keyword -> VOLATILE
-- On COLON reduce production acsl_c_keyword -> VOLATILE
-- On CHAR reduce production acsl_c_keyword -> VOLATILE
-- On CASE reduce production acsl_c_keyword -> VOLATILE
-- On BSUNION reduce production acsl_c_keyword -> VOLATILE
-- On BSTYPE reduce production acsl_c_keyword -> VOLATILE
-- On BREAKS reduce production acsl_c_keyword -> VOLATILE
-- On BOOLEAN reduce production acsl_c_keyword -> VOLATILE
-- On BOOL reduce production acsl_c_keyword -> VOLATILE
-- On BLOCK_LENGTH reduce production acsl_c_keyword -> VOLATILE
-- On BIMPLIES reduce production acsl_c_keyword -> VOLATILE
-- On BIFF reduce production acsl_c_keyword -> VOLATILE
-- On BEHAVIORS reduce production acsl_c_keyword -> VOLATILE
-- On BEHAVIOR reduce production acsl_c_keyword -> VOLATILE
-- On BASE_ADDR reduce production acsl_c_keyword -> VOLATILE
-- On AXIOMATIC reduce production acsl_c_keyword -> VOLATILE
-- On AXIOM reduce production acsl_c_keyword -> VOLATILE
-- On AUTOMATIC reduce production acsl_c_keyword -> VOLATILE
-- On AT reduce production acsl_c_keyword -> VOLATILE
-- On ASSUMES reduce production acsl_c_keyword -> VOLATILE
-- On ASSIGNS reduce production acsl_c_keyword -> VOLATILE
-- On ASSERT reduce production acsl_c_keyword -> VOLATILE
-- On ARROW reduce production acsl_c_keyword -> VOLATILE
-- On AND reduce production acsl_c_keyword -> VOLATILE
-- On AMP reduce production acsl_c_keyword -> VOLATILE
-- On ALLOCATION reduce production acsl_c_keyword -> VOLATILE
-- On ALLOCATES reduce production acsl_c_keyword -> VOLATILE
-- On ALLOCABLE reduce production acsl_c_keyword -> VOLATILE

State 4:
## Known stack suffix:
## VOID
## LR(1) items:
c_keyword -> VOID . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> VOID
-- On WITH reduce production c_keyword -> VOID
-- On VOLATILE reduce production c_keyword -> VOID
-- On VOID reduce production c_keyword -> VOID
-- On VARIANT reduce production c_keyword -> VOID
-- On VALID_READ reduce production c_keyword -> VOID
-- On VALID_RANGE reduce production c_keyword -> VOID
-- On VALID_INDEX reduce production c_keyword -> VOID
-- On VALID reduce production c_keyword -> VOID
-- On UNSIGNED reduce production c_keyword -> VOID
-- On UNION reduce production c_keyword -> VOID
-- On UNALLOCATED reduce production c_keyword -> VOID
-- On TYPEOF reduce production c_keyword -> VOID
-- On TYPENAME reduce production c_keyword -> VOID
-- On TYPE reduce production c_keyword -> VOID
-- On TRUE reduce production c_keyword -> VOID
-- On TILDE reduce production c_keyword -> VOID
-- On TERMINATES reduce production c_keyword -> VOID
-- On STRUCT reduce production c_keyword -> VOID
-- On STRING_LITERAL reduce production c_keyword -> VOID
-- On STATIC reduce production c_keyword -> VOID
-- On STAR reduce production c_keyword -> VOID
-- On SLICE reduce production c_keyword -> VOID
-- On SLASH reduce production c_keyword -> VOID
-- On SIZEOF reduce production c_keyword -> VOID
-- On SIGNED reduce production c_keyword -> VOID
-- On SHORT reduce production c_keyword -> VOID
-- On SEPARATED reduce production c_keyword -> VOID
-- On SEMICOLON reduce production c_keyword -> VOID
-- On RSQUARE reduce production c_keyword -> VOID
-- On RPAR reduce production c_keyword -> VOID
-- On RETURNS reduce production c_keyword -> VOID
-- On RESULT reduce production c_keyword -> VOID
-- On REQUIRES reduce production c_keyword -> VOID
-- On REGISTER reduce production c_keyword -> VOID
-- On REAL reduce production c_keyword -> VOID
-- On READS reduce production c_keyword -> VOID
-- On RBRACE reduce production c_keyword -> VOID
-- On QUESTION reduce production c_keyword -> VOID
-- On PREDICATE reduce production c_keyword -> VOID
-- On PRAGMA reduce production c_keyword -> VOID
-- On PLUS reduce production c_keyword -> VOID
-- On PIPE reduce production c_keyword -> VOID
-- On PERCENT reduce production c_keyword -> VOID
-- On OR reduce production c_keyword -> VOID
-- On OLD reduce production c_keyword -> VOID
-- On OFFSET reduce production c_keyword -> VOID
-- On NULL reduce production c_keyword -> VOID
-- On NOTHING reduce production c_keyword -> VOID
-- On NOT reduce production c_keyword -> VOID
-- On NE reduce production c_keyword -> VOID
-- On MODULE reduce production c_keyword -> VOID
-- On MODEL reduce production c_keyword -> VOID
-- On MINUS reduce production c_keyword -> VOID
-- On LTLT reduce production c_keyword -> VOID
-- On LTCOLON reduce production c_keyword -> VOID
-- On LT reduce production c_keyword -> VOID
-- On LSQUARE reduce production c_keyword -> VOID
-- On LPAR reduce production c_keyword -> VOID
-- On LOOP reduce production c_keyword -> VOID
-- On LONG reduce production c_keyword -> VOID
-- On LOGIC reduce production c_keyword -> VOID
-- On LET reduce production c_keyword -> VOID
-- On LEMMA reduce production c_keyword -> VOID
-- On LE reduce production c_keyword -> VOID
-- On LBRACE reduce production c_keyword -> VOID
-- On LAMBDA reduce production c_keyword -> VOID
-- On LABEL reduce production c_keyword -> VOID
-- On INVARIANT reduce production c_keyword -> VOID
-- On INTER reduce production c_keyword -> VOID
-- On INTEGER reduce production c_keyword -> VOID
-- On INT reduce production c_keyword -> VOID
-- On INITIALIZED reduce production c_keyword -> VOID
-- On INDUCTIVE reduce production c_keyword -> VOID
-- On INCLUDE reduce production c_keyword -> VOID
-- On IMPLIES reduce production c_keyword -> VOID
-- On IMPACT reduce production c_keyword -> VOID
-- On IFF reduce production c_keyword -> VOID
-- On IF reduce production c_keyword -> VOID
-- On IDENTIFIER reduce production c_keyword -> VOID
-- On HATHAT reduce production c_keyword -> VOID
-- On HAT reduce production c_keyword -> VOID
-- On GTGT reduce production c_keyword -> VOID
-- On GT reduce production c_keyword -> VOID
-- On GLOBAL reduce production c_keyword -> VOID
-- On GHOST reduce production c_keyword -> VOID
-- On GE reduce production c_keyword -> VOID
-- On FUNCTION reduce production c_keyword -> VOID
-- On FROM reduce production c_keyword -> VOID
-- On FRESH reduce production c_keyword -> VOID
-- On FREES reduce production c_keyword -> VOID
-- On FREEABLE reduce production c_keyword -> VOID
-- On FORALL reduce production c_keyword -> VOID
-- On FOR reduce production c_keyword -> VOID
-- On FLOAT reduce production c_keyword -> VOID
-- On FALSE reduce production c_keyword -> VOID
-- On EXT_LET reduce production c_keyword -> VOID
-- On EXT_AT reduce production c_keyword -> VOID
-- On EXITS reduce production c_keyword -> VOID
-- On EXISTS reduce production c_keyword -> VOID
-- On EQUAL reduce production c_keyword -> VOID
-- On EQ reduce production c_keyword -> VOID
-- On EOF reduce production c_keyword -> VOID
-- On ENUM reduce production c_keyword -> VOID
-- On ENSURES reduce production c_keyword -> VOID
-- On EMPTY reduce production c_keyword -> VOID
-- On ELSE reduce production c_keyword -> VOID
-- On DYNAMIC reduce production c_keyword -> VOID
-- On DOUBLE reduce production c_keyword -> VOID
-- On DOTDOTDOT reduce production c_keyword -> VOID
-- On DOTDOT reduce production c_keyword -> VOID
-- On DOT reduce production c_keyword -> VOID
-- On DOLLAR reduce production c_keyword -> VOID
-- On DISJOINT reduce production c_keyword -> VOID
-- On DECREASES reduce production c_keyword -> VOID
-- On DANGLING reduce production c_keyword -> VOID
-- On CUSTOM reduce production c_keyword -> VOID
-- On CONTRACT reduce production c_keyword -> VOID
-- On CONTINUES reduce production c_keyword -> VOID
-- On CONSTANT10 reduce production c_keyword -> VOID
-- On CONSTANT reduce production c_keyword -> VOID
-- On CONST reduce production c_keyword -> VOID
-- On COMPLETE reduce production c_keyword -> VOID
-- On COMMA reduce production c_keyword -> VOID
-- On COLONGT reduce production c_keyword -> VOID
-- On COLONCOLON reduce production c_keyword -> VOID
-- On COLON2 reduce production c_keyword -> VOID
-- On COLON reduce production c_keyword -> VOID
-- On CHAR reduce production c_keyword -> VOID
-- On CASE reduce production c_keyword -> VOID
-- On BSUNION reduce production c_keyword -> VOID
-- On BSTYPE reduce production c_keyword -> VOID
-- On BREAKS reduce production c_keyword -> VOID
-- On BOOLEAN reduce production c_keyword -> VOID
-- On BOOL reduce production c_keyword -> VOID
-- On BLOCK_LENGTH reduce production c_keyword -> VOID
-- On BIMPLIES reduce production c_keyword -> VOID
-- On BIFF reduce production c_keyword -> VOID
-- On BEHAVIORS reduce production c_keyword -> VOID
-- On BEHAVIOR reduce production c_keyword -> VOID
-- On BASE_ADDR reduce production c_keyword -> VOID
-- On AXIOMATIC reduce production c_keyword -> VOID
-- On AXIOM reduce production c_keyword -> VOID
-- On AUTOMATIC reduce production c_keyword -> VOID
-- On AT reduce production c_keyword -> VOID
-- On ASSUMES reduce production c_keyword -> VOID
-- On ASSIGNS reduce production c_keyword -> VOID
-- On ASSERT reduce production c_keyword -> VOID
-- On ARROW reduce production c_keyword -> VOID
-- On AND reduce production c_keyword -> VOID
-- On AMP reduce production c_keyword -> VOID
-- On ALLOCATION reduce production c_keyword -> VOID
-- On ALLOCATES reduce production c_keyword -> VOID
-- On ALLOCABLE reduce production c_keyword -> VOID

State 5:
## Known stack suffix:
## VARIANT
## LR(1) items:
is_acsl_decl_or_code_annot -> VARIANT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On WITH reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On VOLATILE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On VOID reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On VARIANT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On VALID_READ reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On VALID_RANGE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On VALID_INDEX reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On VALID reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On UNSIGNED reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On UNION reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On UNALLOCATED reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On TYPEOF reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On TYPENAME reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On TYPE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On TRUE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On TILDE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On TERMINATES reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On STRUCT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On STRING_LITERAL reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On STATIC reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On STAR reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On SLICE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On SLASH reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On SIZEOF reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On SIGNED reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On SHORT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On SEPARATED reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On SEMICOLON reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On RSQUARE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On RPAR reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On RETURNS reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On RESULT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On REQUIRES reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On REGISTER reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On REAL reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On READS reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On RBRACE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On QUESTION reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On PREDICATE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On PRAGMA reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On PLUS reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On PIPE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On PERCENT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On OR reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On OLD reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On OFFSET reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On NULL reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On NOTHING reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On NOT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On NE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On MODULE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On MODEL reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On MINUS reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On LTLT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On LTCOLON reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On LT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On LSQUARE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On LPAR reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On LOOP reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On LONG reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On LOGIC reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On LET reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On LEMMA reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On LE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On LBRACE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On LAMBDA reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On LABEL reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On INVARIANT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On INTER reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On INTEGER reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On INT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On INITIALIZED reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On INDUCTIVE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On INCLUDE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On IMPLIES reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On IMPACT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On IFF reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On IF reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On IDENTIFIER reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On HATHAT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On HAT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On GTGT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On GT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On GLOBAL reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On GHOST reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On GE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On FUNCTION reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On FROM reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On FRESH reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On FREES reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On FREEABLE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On FORALL reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On FOR reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On FLOAT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On FALSE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On EXT_LET reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On EXT_AT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On EXITS reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On EXISTS reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On EQUAL reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On EQ reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On EOF reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On ENUM reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On ENSURES reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On EMPTY reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On ELSE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On DYNAMIC reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On DOUBLE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On DOTDOTDOT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On DOTDOT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On DOT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On DOLLAR reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On DISJOINT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On DECREASES reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On DANGLING reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On CUSTOM reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On CONTRACT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On CONTINUES reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On CONSTANT10 reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On CONSTANT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On CONST reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On COMPLETE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On COMMA reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On COLONGT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On COLONCOLON reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On COLON2 reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On COLON reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On CHAR reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On CASE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On BSUNION reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On BSTYPE reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On BREAKS reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On BOOLEAN reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On BOOL reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On BLOCK_LENGTH reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On BIMPLIES reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On BIFF reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On BEHAVIORS reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On BEHAVIOR reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On BASE_ADDR reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On AXIOMATIC reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On AXIOM reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On AUTOMATIC reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On AT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On ASSUMES reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On ASSIGNS reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On ASSERT reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On ARROW reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On AND reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On AMP reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On ALLOCATION reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On ALLOCATES reduce production is_acsl_decl_or_code_annot -> VARIANT
-- On ALLOCABLE reduce production is_acsl_decl_or_code_annot -> VARIANT

State 6:
## Known stack suffix:
## VALID_READ
## LR(1) items:
lexpr_inner -> VALID_READ . opt_label_1 LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LBRACE shift to state 7
-- On opt_label_list shift to state 88
-- On opt_label_1 shift to state 89
## Reductions:
-- On LPAR reduce production opt_label_list ->

State 7:
## Known stack suffix:
## LBRACE
## LR(1) items:
opt_label_list -> LBRACE . ne_label_list RBRACE [ LPAR ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_label_list shift to state 74
-- On label_name shift to state 76
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On any_identifier shift to state 86
-- On acsl_c_keyword shift to state 87
## Reductions:

State 8:
## Known stack suffix:
## UNSIGNED
## LR(1) items:
c_keyword -> UNSIGNED . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> UNSIGNED
-- On WITH reduce production c_keyword -> UNSIGNED
-- On VOLATILE reduce production c_keyword -> UNSIGNED
-- On VOID reduce production c_keyword -> UNSIGNED
-- On VARIANT reduce production c_keyword -> UNSIGNED
-- On VALID_READ reduce production c_keyword -> UNSIGNED
-- On VALID_RANGE reduce production c_keyword -> UNSIGNED
-- On VALID_INDEX reduce production c_keyword -> UNSIGNED
-- On VALID reduce production c_keyword -> UNSIGNED
-- On UNSIGNED reduce production c_keyword -> UNSIGNED
-- On UNION reduce production c_keyword -> UNSIGNED
-- On UNALLOCATED reduce production c_keyword -> UNSIGNED
-- On TYPEOF reduce production c_keyword -> UNSIGNED
-- On TYPENAME reduce production c_keyword -> UNSIGNED
-- On TYPE reduce production c_keyword -> UNSIGNED
-- On TRUE reduce production c_keyword -> UNSIGNED
-- On TILDE reduce production c_keyword -> UNSIGNED
-- On TERMINATES reduce production c_keyword -> UNSIGNED
-- On STRUCT reduce production c_keyword -> UNSIGNED
-- On STRING_LITERAL reduce production c_keyword -> UNSIGNED
-- On STATIC reduce production c_keyword -> UNSIGNED
-- On STAR reduce production c_keyword -> UNSIGNED
-- On SLICE reduce production c_keyword -> UNSIGNED
-- On SLASH reduce production c_keyword -> UNSIGNED
-- On SIZEOF reduce production c_keyword -> UNSIGNED
-- On SIGNED reduce production c_keyword -> UNSIGNED
-- On SHORT reduce production c_keyword -> UNSIGNED
-- On SEPARATED reduce production c_keyword -> UNSIGNED
-- On SEMICOLON reduce production c_keyword -> UNSIGNED
-- On RSQUARE reduce production c_keyword -> UNSIGNED
-- On RPAR reduce production c_keyword -> UNSIGNED
-- On RETURNS reduce production c_keyword -> UNSIGNED
-- On RESULT reduce production c_keyword -> UNSIGNED
-- On REQUIRES reduce production c_keyword -> UNSIGNED
-- On REGISTER reduce production c_keyword -> UNSIGNED
-- On REAL reduce production c_keyword -> UNSIGNED
-- On READS reduce production c_keyword -> UNSIGNED
-- On RBRACE reduce production c_keyword -> UNSIGNED
-- On QUESTION reduce production c_keyword -> UNSIGNED
-- On PREDICATE reduce production c_keyword -> UNSIGNED
-- On PRAGMA reduce production c_keyword -> UNSIGNED
-- On PLUS reduce production c_keyword -> UNSIGNED
-- On PIPE reduce production c_keyword -> UNSIGNED
-- On PERCENT reduce production c_keyword -> UNSIGNED
-- On OR reduce production c_keyword -> UNSIGNED
-- On OLD reduce production c_keyword -> UNSIGNED
-- On OFFSET reduce production c_keyword -> UNSIGNED
-- On NULL reduce production c_keyword -> UNSIGNED
-- On NOTHING reduce production c_keyword -> UNSIGNED
-- On NOT reduce production c_keyword -> UNSIGNED
-- On NE reduce production c_keyword -> UNSIGNED
-- On MODULE reduce production c_keyword -> UNSIGNED
-- On MODEL reduce production c_keyword -> UNSIGNED
-- On MINUS reduce production c_keyword -> UNSIGNED
-- On LTLT reduce production c_keyword -> UNSIGNED
-- On LTCOLON reduce production c_keyword -> UNSIGNED
-- On LT reduce production c_keyword -> UNSIGNED
-- On LSQUARE reduce production c_keyword -> UNSIGNED
-- On LPAR reduce production c_keyword -> UNSIGNED
-- On LOOP reduce production c_keyword -> UNSIGNED
-- On LONG reduce production c_keyword -> UNSIGNED
-- On LOGIC reduce production c_keyword -> UNSIGNED
-- On LET reduce production c_keyword -> UNSIGNED
-- On LEMMA reduce production c_keyword -> UNSIGNED
-- On LE reduce production c_keyword -> UNSIGNED
-- On LBRACE reduce production c_keyword -> UNSIGNED
-- On LAMBDA reduce production c_keyword -> UNSIGNED
-- On LABEL reduce production c_keyword -> UNSIGNED
-- On INVARIANT reduce production c_keyword -> UNSIGNED
-- On INTER reduce production c_keyword -> UNSIGNED
-- On INTEGER reduce production c_keyword -> UNSIGNED
-- On INT reduce production c_keyword -> UNSIGNED
-- On INITIALIZED reduce production c_keyword -> UNSIGNED
-- On INDUCTIVE reduce production c_keyword -> UNSIGNED
-- On INCLUDE reduce production c_keyword -> UNSIGNED
-- On IMPLIES reduce production c_keyword -> UNSIGNED
-- On IMPACT reduce production c_keyword -> UNSIGNED
-- On IFF reduce production c_keyword -> UNSIGNED
-- On IF reduce production c_keyword -> UNSIGNED
-- On IDENTIFIER reduce production c_keyword -> UNSIGNED
-- On HATHAT reduce production c_keyword -> UNSIGNED
-- On HAT reduce production c_keyword -> UNSIGNED
-- On GTGT reduce production c_keyword -> UNSIGNED
-- On GT reduce production c_keyword -> UNSIGNED
-- On GLOBAL reduce production c_keyword -> UNSIGNED
-- On GHOST reduce production c_keyword -> UNSIGNED
-- On GE reduce production c_keyword -> UNSIGNED
-- On FUNCTION reduce production c_keyword -> UNSIGNED
-- On FROM reduce production c_keyword -> UNSIGNED
-- On FRESH reduce production c_keyword -> UNSIGNED
-- On FREES reduce production c_keyword -> UNSIGNED
-- On FREEABLE reduce production c_keyword -> UNSIGNED
-- On FORALL reduce production c_keyword -> UNSIGNED
-- On FOR reduce production c_keyword -> UNSIGNED
-- On FLOAT reduce production c_keyword -> UNSIGNED
-- On FALSE reduce production c_keyword -> UNSIGNED
-- On EXT_LET reduce production c_keyword -> UNSIGNED
-- On EXT_AT reduce production c_keyword -> UNSIGNED
-- On EXITS reduce production c_keyword -> UNSIGNED
-- On EXISTS reduce production c_keyword -> UNSIGNED
-- On EQUAL reduce production c_keyword -> UNSIGNED
-- On EQ reduce production c_keyword -> UNSIGNED
-- On EOF reduce production c_keyword -> UNSIGNED
-- On ENUM reduce production c_keyword -> UNSIGNED
-- On ENSURES reduce production c_keyword -> UNSIGNED
-- On EMPTY reduce production c_keyword -> UNSIGNED
-- On ELSE reduce production c_keyword -> UNSIGNED
-- On DYNAMIC reduce production c_keyword -> UNSIGNED
-- On DOUBLE reduce production c_keyword -> UNSIGNED
-- On DOTDOTDOT reduce production c_keyword -> UNSIGNED
-- On DOTDOT reduce production c_keyword -> UNSIGNED
-- On DOT reduce production c_keyword -> UNSIGNED
-- On DOLLAR reduce production c_keyword -> UNSIGNED
-- On DISJOINT reduce production c_keyword -> UNSIGNED
-- On DECREASES reduce production c_keyword -> UNSIGNED
-- On DANGLING reduce production c_keyword -> UNSIGNED
-- On CUSTOM reduce production c_keyword -> UNSIGNED
-- On CONTRACT reduce production c_keyword -> UNSIGNED
-- On CONTINUES reduce production c_keyword -> UNSIGNED
-- On CONSTANT10 reduce production c_keyword -> UNSIGNED
-- On CONSTANT reduce production c_keyword -> UNSIGNED
-- On CONST reduce production c_keyword -> UNSIGNED
-- On COMPLETE reduce production c_keyword -> UNSIGNED
-- On COMMA reduce production c_keyword -> UNSIGNED
-- On COLONGT reduce production c_keyword -> UNSIGNED
-- On COLONCOLON reduce production c_keyword -> UNSIGNED
-- On COLON2 reduce production c_keyword -> UNSIGNED
-- On COLON reduce production c_keyword -> UNSIGNED
-- On CHAR reduce production c_keyword -> UNSIGNED
-- On CASE reduce production c_keyword -> UNSIGNED
-- On BSUNION reduce production c_keyword -> UNSIGNED
-- On BSTYPE reduce production c_keyword -> UNSIGNED
-- On BREAKS reduce production c_keyword -> UNSIGNED
-- On BOOLEAN reduce production c_keyword -> UNSIGNED
-- On BOOL reduce production c_keyword -> UNSIGNED
-- On BLOCK_LENGTH reduce production c_keyword -> UNSIGNED
-- On BIMPLIES reduce production c_keyword -> UNSIGNED
-- On BIFF reduce production c_keyword -> UNSIGNED
-- On BEHAVIORS reduce production c_keyword -> UNSIGNED
-- On BEHAVIOR reduce production c_keyword -> UNSIGNED
-- On BASE_ADDR reduce production c_keyword -> UNSIGNED
-- On AXIOMATIC reduce production c_keyword -> UNSIGNED
-- On AXIOM reduce production c_keyword -> UNSIGNED
-- On AUTOMATIC reduce production c_keyword -> UNSIGNED
-- On AT reduce production c_keyword -> UNSIGNED
-- On ASSUMES reduce production c_keyword -> UNSIGNED
-- On ASSIGNS reduce production c_keyword -> UNSIGNED
-- On ASSERT reduce production c_keyword -> UNSIGNED
-- On ARROW reduce production c_keyword -> UNSIGNED
-- On AND reduce production c_keyword -> UNSIGNED
-- On AMP reduce production c_keyword -> UNSIGNED
-- On ALLOCATION reduce production c_keyword -> UNSIGNED
-- On ALLOCATES reduce production c_keyword -> UNSIGNED
-- On ALLOCABLE reduce production c_keyword -> UNSIGNED

State 9:
## Known stack suffix:
## UNION
## LR(1) items:
c_keyword -> UNION . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> UNION
-- On WITH reduce production c_keyword -> UNION
-- On VOLATILE reduce production c_keyword -> UNION
-- On VOID reduce production c_keyword -> UNION
-- On VARIANT reduce production c_keyword -> UNION
-- On VALID_READ reduce production c_keyword -> UNION
-- On VALID_RANGE reduce production c_keyword -> UNION
-- On VALID_INDEX reduce production c_keyword -> UNION
-- On VALID reduce production c_keyword -> UNION
-- On UNSIGNED reduce production c_keyword -> UNION
-- On UNION reduce production c_keyword -> UNION
-- On UNALLOCATED reduce production c_keyword -> UNION
-- On TYPEOF reduce production c_keyword -> UNION
-- On TYPENAME reduce production c_keyword -> UNION
-- On TYPE reduce production c_keyword -> UNION
-- On TRUE reduce production c_keyword -> UNION
-- On TILDE reduce production c_keyword -> UNION
-- On TERMINATES reduce production c_keyword -> UNION
-- On STRUCT reduce production c_keyword -> UNION
-- On STRING_LITERAL reduce production c_keyword -> UNION
-- On STATIC reduce production c_keyword -> UNION
-- On STAR reduce production c_keyword -> UNION
-- On SLICE reduce production c_keyword -> UNION
-- On SLASH reduce production c_keyword -> UNION
-- On SIZEOF reduce production c_keyword -> UNION
-- On SIGNED reduce production c_keyword -> UNION
-- On SHORT reduce production c_keyword -> UNION
-- On SEPARATED reduce production c_keyword -> UNION
-- On SEMICOLON reduce production c_keyword -> UNION
-- On RSQUARE reduce production c_keyword -> UNION
-- On RPAR reduce production c_keyword -> UNION
-- On RETURNS reduce production c_keyword -> UNION
-- On RESULT reduce production c_keyword -> UNION
-- On REQUIRES reduce production c_keyword -> UNION
-- On REGISTER reduce production c_keyword -> UNION
-- On REAL reduce production c_keyword -> UNION
-- On READS reduce production c_keyword -> UNION
-- On RBRACE reduce production c_keyword -> UNION
-- On QUESTION reduce production c_keyword -> UNION
-- On PREDICATE reduce production c_keyword -> UNION
-- On PRAGMA reduce production c_keyword -> UNION
-- On PLUS reduce production c_keyword -> UNION
-- On PIPE reduce production c_keyword -> UNION
-- On PERCENT reduce production c_keyword -> UNION
-- On OR reduce production c_keyword -> UNION
-- On OLD reduce production c_keyword -> UNION
-- On OFFSET reduce production c_keyword -> UNION
-- On NULL reduce production c_keyword -> UNION
-- On NOTHING reduce production c_keyword -> UNION
-- On NOT reduce production c_keyword -> UNION
-- On NE reduce production c_keyword -> UNION
-- On MODULE reduce production c_keyword -> UNION
-- On MODEL reduce production c_keyword -> UNION
-- On MINUS reduce production c_keyword -> UNION
-- On LTLT reduce production c_keyword -> UNION
-- On LTCOLON reduce production c_keyword -> UNION
-- On LT reduce production c_keyword -> UNION
-- On LSQUARE reduce production c_keyword -> UNION
-- On LPAR reduce production c_keyword -> UNION
-- On LOOP reduce production c_keyword -> UNION
-- On LONG reduce production c_keyword -> UNION
-- On LOGIC reduce production c_keyword -> UNION
-- On LET reduce production c_keyword -> UNION
-- On LEMMA reduce production c_keyword -> UNION
-- On LE reduce production c_keyword -> UNION
-- On LBRACE reduce production c_keyword -> UNION
-- On LAMBDA reduce production c_keyword -> UNION
-- On LABEL reduce production c_keyword -> UNION
-- On INVARIANT reduce production c_keyword -> UNION
-- On INTER reduce production c_keyword -> UNION
-- On INTEGER reduce production c_keyword -> UNION
-- On INT reduce production c_keyword -> UNION
-- On INITIALIZED reduce production c_keyword -> UNION
-- On INDUCTIVE reduce production c_keyword -> UNION
-- On INCLUDE reduce production c_keyword -> UNION
-- On IMPLIES reduce production c_keyword -> UNION
-- On IMPACT reduce production c_keyword -> UNION
-- On IFF reduce production c_keyword -> UNION
-- On IF reduce production c_keyword -> UNION
-- On IDENTIFIER reduce production c_keyword -> UNION
-- On HATHAT reduce production c_keyword -> UNION
-- On HAT reduce production c_keyword -> UNION
-- On GTGT reduce production c_keyword -> UNION
-- On GT reduce production c_keyword -> UNION
-- On GLOBAL reduce production c_keyword -> UNION
-- On GHOST reduce production c_keyword -> UNION
-- On GE reduce production c_keyword -> UNION
-- On FUNCTION reduce production c_keyword -> UNION
-- On FROM reduce production c_keyword -> UNION
-- On FRESH reduce production c_keyword -> UNION
-- On FREES reduce production c_keyword -> UNION
-- On FREEABLE reduce production c_keyword -> UNION
-- On FORALL reduce production c_keyword -> UNION
-- On FOR reduce production c_keyword -> UNION
-- On FLOAT reduce production c_keyword -> UNION
-- On FALSE reduce production c_keyword -> UNION
-- On EXT_LET reduce production c_keyword -> UNION
-- On EXT_AT reduce production c_keyword -> UNION
-- On EXITS reduce production c_keyword -> UNION
-- On EXISTS reduce production c_keyword -> UNION
-- On EQUAL reduce production c_keyword -> UNION
-- On EQ reduce production c_keyword -> UNION
-- On EOF reduce production c_keyword -> UNION
-- On ENUM reduce production c_keyword -> UNION
-- On ENSURES reduce production c_keyword -> UNION
-- On EMPTY reduce production c_keyword -> UNION
-- On ELSE reduce production c_keyword -> UNION
-- On DYNAMIC reduce production c_keyword -> UNION
-- On DOUBLE reduce production c_keyword -> UNION
-- On DOTDOTDOT reduce production c_keyword -> UNION
-- On DOTDOT reduce production c_keyword -> UNION
-- On DOT reduce production c_keyword -> UNION
-- On DOLLAR reduce production c_keyword -> UNION
-- On DISJOINT reduce production c_keyword -> UNION
-- On DECREASES reduce production c_keyword -> UNION
-- On DANGLING reduce production c_keyword -> UNION
-- On CUSTOM reduce production c_keyword -> UNION
-- On CONTRACT reduce production c_keyword -> UNION
-- On CONTINUES reduce production c_keyword -> UNION
-- On CONSTANT10 reduce production c_keyword -> UNION
-- On CONSTANT reduce production c_keyword -> UNION
-- On CONST reduce production c_keyword -> UNION
-- On COMPLETE reduce production c_keyword -> UNION
-- On COMMA reduce production c_keyword -> UNION
-- On COLONGT reduce production c_keyword -> UNION
-- On COLONCOLON reduce production c_keyword -> UNION
-- On COLON2 reduce production c_keyword -> UNION
-- On COLON reduce production c_keyword -> UNION
-- On CHAR reduce production c_keyword -> UNION
-- On CASE reduce production c_keyword -> UNION
-- On BSUNION reduce production c_keyword -> UNION
-- On BSTYPE reduce production c_keyword -> UNION
-- On BREAKS reduce production c_keyword -> UNION
-- On BOOLEAN reduce production c_keyword -> UNION
-- On BOOL reduce production c_keyword -> UNION
-- On BLOCK_LENGTH reduce production c_keyword -> UNION
-- On BIMPLIES reduce production c_keyword -> UNION
-- On BIFF reduce production c_keyword -> UNION
-- On BEHAVIORS reduce production c_keyword -> UNION
-- On BEHAVIOR reduce production c_keyword -> UNION
-- On BASE_ADDR reduce production c_keyword -> UNION
-- On AXIOMATIC reduce production c_keyword -> UNION
-- On AXIOM reduce production c_keyword -> UNION
-- On AUTOMATIC reduce production c_keyword -> UNION
-- On AT reduce production c_keyword -> UNION
-- On ASSUMES reduce production c_keyword -> UNION
-- On ASSIGNS reduce production c_keyword -> UNION
-- On ASSERT reduce production c_keyword -> UNION
-- On ARROW reduce production c_keyword -> UNION
-- On AND reduce production c_keyword -> UNION
-- On AMP reduce production c_keyword -> UNION
-- On ALLOCATION reduce production c_keyword -> UNION
-- On ALLOCATES reduce production c_keyword -> UNION
-- On ALLOCABLE reduce production c_keyword -> UNION

State 10:
## Known stack suffix:
## TYPENAME
## LR(1) items:
identifier_or_typename -> TYPENAME . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production identifier_or_typename -> TYPENAME
-- On WITH reduce production identifier_or_typename -> TYPENAME
-- On VOLATILE reduce production identifier_or_typename -> TYPENAME
-- On VOID reduce production identifier_or_typename -> TYPENAME
-- On VARIANT reduce production identifier_or_typename -> TYPENAME
-- On VALID_READ reduce production identifier_or_typename -> TYPENAME
-- On VALID_RANGE reduce production identifier_or_typename -> TYPENAME
-- On VALID_INDEX reduce production identifier_or_typename -> TYPENAME
-- On VALID reduce production identifier_or_typename -> TYPENAME
-- On UNSIGNED reduce production identifier_or_typename -> TYPENAME
-- On UNION reduce production identifier_or_typename -> TYPENAME
-- On UNALLOCATED reduce production identifier_or_typename -> TYPENAME
-- On TYPEOF reduce production identifier_or_typename -> TYPENAME
-- On TYPENAME reduce production identifier_or_typename -> TYPENAME
-- On TYPE reduce production identifier_or_typename -> TYPENAME
-- On TRUE reduce production identifier_or_typename -> TYPENAME
-- On TILDE reduce production identifier_or_typename -> TYPENAME
-- On TERMINATES reduce production identifier_or_typename -> TYPENAME
-- On STRUCT reduce production identifier_or_typename -> TYPENAME
-- On STRING_LITERAL reduce production identifier_or_typename -> TYPENAME
-- On STATIC reduce production identifier_or_typename -> TYPENAME
-- On STAR reduce production identifier_or_typename -> TYPENAME
-- On SLICE reduce production identifier_or_typename -> TYPENAME
-- On SLASH reduce production identifier_or_typename -> TYPENAME
-- On SIZEOF reduce production identifier_or_typename -> TYPENAME
-- On SIGNED reduce production identifier_or_typename -> TYPENAME
-- On SHORT reduce production identifier_or_typename -> TYPENAME
-- On SEPARATED reduce production identifier_or_typename -> TYPENAME
-- On SEMICOLON reduce production identifier_or_typename -> TYPENAME
-- On RSQUARE reduce production identifier_or_typename -> TYPENAME
-- On RPAR reduce production identifier_or_typename -> TYPENAME
-- On RETURNS reduce production identifier_or_typename -> TYPENAME
-- On RESULT reduce production identifier_or_typename -> TYPENAME
-- On REQUIRES reduce production identifier_or_typename -> TYPENAME
-- On REGISTER reduce production identifier_or_typename -> TYPENAME
-- On REAL reduce production identifier_or_typename -> TYPENAME
-- On READS reduce production identifier_or_typename -> TYPENAME
-- On RBRACE reduce production identifier_or_typename -> TYPENAME
-- On QUESTION reduce production identifier_or_typename -> TYPENAME
-- On PREDICATE reduce production identifier_or_typename -> TYPENAME
-- On PRAGMA reduce production identifier_or_typename -> TYPENAME
-- On PLUS reduce production identifier_or_typename -> TYPENAME
-- On PIPE reduce production identifier_or_typename -> TYPENAME
-- On PERCENT reduce production identifier_or_typename -> TYPENAME
-- On OR reduce production identifier_or_typename -> TYPENAME
-- On OLD reduce production identifier_or_typename -> TYPENAME
-- On OFFSET reduce production identifier_or_typename -> TYPENAME
-- On NULL reduce production identifier_or_typename -> TYPENAME
-- On NOTHING reduce production identifier_or_typename -> TYPENAME
-- On NOT reduce production identifier_or_typename -> TYPENAME
-- On NE reduce production identifier_or_typename -> TYPENAME
-- On MODULE reduce production identifier_or_typename -> TYPENAME
-- On MODEL reduce production identifier_or_typename -> TYPENAME
-- On MINUS reduce production identifier_or_typename -> TYPENAME
-- On LTLT reduce production identifier_or_typename -> TYPENAME
-- On LTCOLON reduce production identifier_or_typename -> TYPENAME
-- On LT reduce production identifier_or_typename -> TYPENAME
-- On LSQUARE reduce production identifier_or_typename -> TYPENAME
-- On LPAR reduce production identifier_or_typename -> TYPENAME
-- On LOOP reduce production identifier_or_typename -> TYPENAME
-- On LONG reduce production identifier_or_typename -> TYPENAME
-- On LOGIC reduce production identifier_or_typename -> TYPENAME
-- On LET reduce production identifier_or_typename -> TYPENAME
-- On LEMMA reduce production identifier_or_typename -> TYPENAME
-- On LE reduce production identifier_or_typename -> TYPENAME
-- On LBRACE reduce production identifier_or_typename -> TYPENAME
-- On LAMBDA reduce production identifier_or_typename -> TYPENAME
-- On LABEL reduce production identifier_or_typename -> TYPENAME
-- On INVARIANT reduce production identifier_or_typename -> TYPENAME
-- On INTER reduce production identifier_or_typename -> TYPENAME
-- On INTEGER reduce production identifier_or_typename -> TYPENAME
-- On INT reduce production identifier_or_typename -> TYPENAME
-- On INITIALIZED reduce production identifier_or_typename -> TYPENAME
-- On INDUCTIVE reduce production identifier_or_typename -> TYPENAME
-- On INCLUDE reduce production identifier_or_typename -> TYPENAME
-- On IMPLIES reduce production identifier_or_typename -> TYPENAME
-- On IMPACT reduce production identifier_or_typename -> TYPENAME
-- On IFF reduce production identifier_or_typename -> TYPENAME
-- On IF reduce production identifier_or_typename -> TYPENAME
-- On IDENTIFIER reduce production identifier_or_typename -> TYPENAME
-- On HATHAT reduce production identifier_or_typename -> TYPENAME
-- On HAT reduce production identifier_or_typename -> TYPENAME
-- On GTGT reduce production identifier_or_typename -> TYPENAME
-- On GT reduce production identifier_or_typename -> TYPENAME
-- On GLOBAL reduce production identifier_or_typename -> TYPENAME
-- On GHOST reduce production identifier_or_typename -> TYPENAME
-- On GE reduce production identifier_or_typename -> TYPENAME
-- On FUNCTION reduce production identifier_or_typename -> TYPENAME
-- On FROM reduce production identifier_or_typename -> TYPENAME
-- On FRESH reduce production identifier_or_typename -> TYPENAME
-- On FREES reduce production identifier_or_typename -> TYPENAME
-- On FREEABLE reduce production identifier_or_typename -> TYPENAME
-- On FORALL reduce production identifier_or_typename -> TYPENAME
-- On FOR reduce production identifier_or_typename -> TYPENAME
-- On FLOAT reduce production identifier_or_typename -> TYPENAME
-- On FALSE reduce production identifier_or_typename -> TYPENAME
-- On EXT_LET reduce production identifier_or_typename -> TYPENAME
-- On EXT_AT reduce production identifier_or_typename -> TYPENAME
-- On EXITS reduce production identifier_or_typename -> TYPENAME
-- On EXISTS reduce production identifier_or_typename -> TYPENAME
-- On EQUAL reduce production identifier_or_typename -> TYPENAME
-- On EQ reduce production identifier_or_typename -> TYPENAME
-- On EOF reduce production identifier_or_typename -> TYPENAME
-- On ENUM reduce production identifier_or_typename -> TYPENAME
-- On ENSURES reduce production identifier_or_typename -> TYPENAME
-- On EMPTY reduce production identifier_or_typename -> TYPENAME
-- On ELSE reduce production identifier_or_typename -> TYPENAME
-- On DYNAMIC reduce production identifier_or_typename -> TYPENAME
-- On DOUBLE reduce production identifier_or_typename -> TYPENAME
-- On DOTDOTDOT reduce production identifier_or_typename -> TYPENAME
-- On DOTDOT reduce production identifier_or_typename -> TYPENAME
-- On DOT reduce production identifier_or_typename -> TYPENAME
-- On DOLLAR reduce production identifier_or_typename -> TYPENAME
-- On DISJOINT reduce production identifier_or_typename -> TYPENAME
-- On DECREASES reduce production identifier_or_typename -> TYPENAME
-- On DANGLING reduce production identifier_or_typename -> TYPENAME
-- On CUSTOM reduce production identifier_or_typename -> TYPENAME
-- On CONTRACT reduce production identifier_or_typename -> TYPENAME
-- On CONTINUES reduce production identifier_or_typename -> TYPENAME
-- On CONSTANT10 reduce production identifier_or_typename -> TYPENAME
-- On CONSTANT reduce production identifier_or_typename -> TYPENAME
-- On CONST reduce production identifier_or_typename -> TYPENAME
-- On COMPLETE reduce production identifier_or_typename -> TYPENAME
-- On COMMA reduce production identifier_or_typename -> TYPENAME
-- On COLONGT reduce production identifier_or_typename -> TYPENAME
-- On COLONCOLON reduce production identifier_or_typename -> TYPENAME
-- On COLON2 reduce production identifier_or_typename -> TYPENAME
-- On COLON reduce production identifier_or_typename -> TYPENAME
-- On CHAR reduce production identifier_or_typename -> TYPENAME
-- On CASE reduce production identifier_or_typename -> TYPENAME
-- On BSUNION reduce production identifier_or_typename -> TYPENAME
-- On BSTYPE reduce production identifier_or_typename -> TYPENAME
-- On BREAKS reduce production identifier_or_typename -> TYPENAME
-- On BOOLEAN reduce production identifier_or_typename -> TYPENAME
-- On BOOL reduce production identifier_or_typename -> TYPENAME
-- On BLOCK_LENGTH reduce production identifier_or_typename -> TYPENAME
-- On BIMPLIES reduce production identifier_or_typename -> TYPENAME
-- On BIFF reduce production identifier_or_typename -> TYPENAME
-- On BEHAVIORS reduce production identifier_or_typename -> TYPENAME
-- On BEHAVIOR reduce production identifier_or_typename -> TYPENAME
-- On BASE_ADDR reduce production identifier_or_typename -> TYPENAME
-- On AXIOMATIC reduce production identifier_or_typename -> TYPENAME
-- On AXIOM reduce production identifier_or_typename -> TYPENAME
-- On AUTOMATIC reduce production identifier_or_typename -> TYPENAME
-- On AT reduce production identifier_or_typename -> TYPENAME
-- On ASSUMES reduce production identifier_or_typename -> TYPENAME
-- On ASSIGNS reduce production identifier_or_typename -> TYPENAME
-- On ASSERT reduce production identifier_or_typename -> TYPENAME
-- On ARROW reduce production identifier_or_typename -> TYPENAME
-- On AND reduce production identifier_or_typename -> TYPENAME
-- On AMP reduce production identifier_or_typename -> TYPENAME
-- On ALLOCATION reduce production identifier_or_typename -> TYPENAME
-- On ALLOCATES reduce production identifier_or_typename -> TYPENAME
-- On ALLOCABLE reduce production identifier_or_typename -> TYPENAME

State 11:
## Known stack suffix:
## TYPE
## LR(1) items:
is_acsl_decl_or_code_annot -> TYPE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_decl_or_code_annot -> TYPE
-- On WITH reduce production is_acsl_decl_or_code_annot -> TYPE
-- On VOLATILE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On VOID reduce production is_acsl_decl_or_code_annot -> TYPE
-- On VARIANT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On VALID_READ reduce production is_acsl_decl_or_code_annot -> TYPE
-- On VALID_RANGE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On VALID_INDEX reduce production is_acsl_decl_or_code_annot -> TYPE
-- On VALID reduce production is_acsl_decl_or_code_annot -> TYPE
-- On UNSIGNED reduce production is_acsl_decl_or_code_annot -> TYPE
-- On UNION reduce production is_acsl_decl_or_code_annot -> TYPE
-- On UNALLOCATED reduce production is_acsl_decl_or_code_annot -> TYPE
-- On TYPEOF reduce production is_acsl_decl_or_code_annot -> TYPE
-- On TYPENAME reduce production is_acsl_decl_or_code_annot -> TYPE
-- On TYPE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On TRUE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On TILDE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On TERMINATES reduce production is_acsl_decl_or_code_annot -> TYPE
-- On STRUCT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On STRING_LITERAL reduce production is_acsl_decl_or_code_annot -> TYPE
-- On STATIC reduce production is_acsl_decl_or_code_annot -> TYPE
-- On STAR reduce production is_acsl_decl_or_code_annot -> TYPE
-- On SLICE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On SLASH reduce production is_acsl_decl_or_code_annot -> TYPE
-- On SIZEOF reduce production is_acsl_decl_or_code_annot -> TYPE
-- On SIGNED reduce production is_acsl_decl_or_code_annot -> TYPE
-- On SHORT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On SEPARATED reduce production is_acsl_decl_or_code_annot -> TYPE
-- On SEMICOLON reduce production is_acsl_decl_or_code_annot -> TYPE
-- On RSQUARE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On RPAR reduce production is_acsl_decl_or_code_annot -> TYPE
-- On RETURNS reduce production is_acsl_decl_or_code_annot -> TYPE
-- On RESULT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On REQUIRES reduce production is_acsl_decl_or_code_annot -> TYPE
-- On REGISTER reduce production is_acsl_decl_or_code_annot -> TYPE
-- On REAL reduce production is_acsl_decl_or_code_annot -> TYPE
-- On READS reduce production is_acsl_decl_or_code_annot -> TYPE
-- On RBRACE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On QUESTION reduce production is_acsl_decl_or_code_annot -> TYPE
-- On PREDICATE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On PRAGMA reduce production is_acsl_decl_or_code_annot -> TYPE
-- On PLUS reduce production is_acsl_decl_or_code_annot -> TYPE
-- On PIPE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On PERCENT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On OR reduce production is_acsl_decl_or_code_annot -> TYPE
-- On OLD reduce production is_acsl_decl_or_code_annot -> TYPE
-- On OFFSET reduce production is_acsl_decl_or_code_annot -> TYPE
-- On NULL reduce production is_acsl_decl_or_code_annot -> TYPE
-- On NOTHING reduce production is_acsl_decl_or_code_annot -> TYPE
-- On NOT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On NE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On MODULE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On MODEL reduce production is_acsl_decl_or_code_annot -> TYPE
-- On MINUS reduce production is_acsl_decl_or_code_annot -> TYPE
-- On LTLT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On LTCOLON reduce production is_acsl_decl_or_code_annot -> TYPE
-- On LT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On LSQUARE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On LPAR reduce production is_acsl_decl_or_code_annot -> TYPE
-- On LOOP reduce production is_acsl_decl_or_code_annot -> TYPE
-- On LONG reduce production is_acsl_decl_or_code_annot -> TYPE
-- On LOGIC reduce production is_acsl_decl_or_code_annot -> TYPE
-- On LET reduce production is_acsl_decl_or_code_annot -> TYPE
-- On LEMMA reduce production is_acsl_decl_or_code_annot -> TYPE
-- On LE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On LBRACE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On LAMBDA reduce production is_acsl_decl_or_code_annot -> TYPE
-- On LABEL reduce production is_acsl_decl_or_code_annot -> TYPE
-- On INVARIANT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On INTER reduce production is_acsl_decl_or_code_annot -> TYPE
-- On INTEGER reduce production is_acsl_decl_or_code_annot -> TYPE
-- On INT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On INITIALIZED reduce production is_acsl_decl_or_code_annot -> TYPE
-- On INDUCTIVE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On INCLUDE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On IMPLIES reduce production is_acsl_decl_or_code_annot -> TYPE
-- On IMPACT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On IFF reduce production is_acsl_decl_or_code_annot -> TYPE
-- On IF reduce production is_acsl_decl_or_code_annot -> TYPE
-- On IDENTIFIER reduce production is_acsl_decl_or_code_annot -> TYPE
-- On HATHAT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On HAT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On GTGT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On GT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On GLOBAL reduce production is_acsl_decl_or_code_annot -> TYPE
-- On GHOST reduce production is_acsl_decl_or_code_annot -> TYPE
-- On GE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On FUNCTION reduce production is_acsl_decl_or_code_annot -> TYPE
-- On FROM reduce production is_acsl_decl_or_code_annot -> TYPE
-- On FRESH reduce production is_acsl_decl_or_code_annot -> TYPE
-- On FREES reduce production is_acsl_decl_or_code_annot -> TYPE
-- On FREEABLE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On FORALL reduce production is_acsl_decl_or_code_annot -> TYPE
-- On FOR reduce production is_acsl_decl_or_code_annot -> TYPE
-- On FLOAT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On FALSE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On EXT_LET reduce production is_acsl_decl_or_code_annot -> TYPE
-- On EXT_AT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On EXITS reduce production is_acsl_decl_or_code_annot -> TYPE
-- On EXISTS reduce production is_acsl_decl_or_code_annot -> TYPE
-- On EQUAL reduce production is_acsl_decl_or_code_annot -> TYPE
-- On EQ reduce production is_acsl_decl_or_code_annot -> TYPE
-- On EOF reduce production is_acsl_decl_or_code_annot -> TYPE
-- On ENUM reduce production is_acsl_decl_or_code_annot -> TYPE
-- On ENSURES reduce production is_acsl_decl_or_code_annot -> TYPE
-- On EMPTY reduce production is_acsl_decl_or_code_annot -> TYPE
-- On ELSE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On DYNAMIC reduce production is_acsl_decl_or_code_annot -> TYPE
-- On DOUBLE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On DOTDOTDOT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On DOTDOT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On DOT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On DOLLAR reduce production is_acsl_decl_or_code_annot -> TYPE
-- On DISJOINT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On DECREASES reduce production is_acsl_decl_or_code_annot -> TYPE
-- On DANGLING reduce production is_acsl_decl_or_code_annot -> TYPE
-- On CUSTOM reduce production is_acsl_decl_or_code_annot -> TYPE
-- On CONTRACT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On CONTINUES reduce production is_acsl_decl_or_code_annot -> TYPE
-- On CONSTANT10 reduce production is_acsl_decl_or_code_annot -> TYPE
-- On CONSTANT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On CONST reduce production is_acsl_decl_or_code_annot -> TYPE
-- On COMPLETE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On COMMA reduce production is_acsl_decl_or_code_annot -> TYPE
-- On COLONGT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On COLONCOLON reduce production is_acsl_decl_or_code_annot -> TYPE
-- On COLON2 reduce production is_acsl_decl_or_code_annot -> TYPE
-- On COLON reduce production is_acsl_decl_or_code_annot -> TYPE
-- On CHAR reduce production is_acsl_decl_or_code_annot -> TYPE
-- On CASE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On BSUNION reduce production is_acsl_decl_or_code_annot -> TYPE
-- On BSTYPE reduce production is_acsl_decl_or_code_annot -> TYPE
-- On BREAKS reduce production is_acsl_decl_or_code_annot -> TYPE
-- On BOOLEAN reduce production is_acsl_decl_or_code_annot -> TYPE
-- On BOOL reduce production is_acsl_decl_or_code_annot -> TYPE
-- On BLOCK_LENGTH reduce production is_acsl_decl_or_code_annot -> TYPE
-- On BIMPLIES reduce production is_acsl_decl_or_code_annot -> TYPE
-- On BIFF reduce production is_acsl_decl_or_code_annot -> TYPE
-- On BEHAVIORS reduce production is_acsl_decl_or_code_annot -> TYPE
-- On BEHAVIOR reduce production is_acsl_decl_or_code_annot -> TYPE
-- On BASE_ADDR reduce production is_acsl_decl_or_code_annot -> TYPE
-- On AXIOMATIC reduce production is_acsl_decl_or_code_annot -> TYPE
-- On AXIOM reduce production is_acsl_decl_or_code_annot -> TYPE
-- On AUTOMATIC reduce production is_acsl_decl_or_code_annot -> TYPE
-- On AT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On ASSUMES reduce production is_acsl_decl_or_code_annot -> TYPE
-- On ASSIGNS reduce production is_acsl_decl_or_code_annot -> TYPE
-- On ASSERT reduce production is_acsl_decl_or_code_annot -> TYPE
-- On ARROW reduce production is_acsl_decl_or_code_annot -> TYPE
-- On AND reduce production is_acsl_decl_or_code_annot -> TYPE
-- On AMP reduce production is_acsl_decl_or_code_annot -> TYPE
-- On ALLOCATION reduce production is_acsl_decl_or_code_annot -> TYPE
-- On ALLOCATES reduce production is_acsl_decl_or_code_annot -> TYPE
-- On ALLOCABLE reduce production is_acsl_decl_or_code_annot -> TYPE

State 12:
## Known stack suffix:
## TERMINATES
## LR(1) items:
is_acsl_spec -> TERMINATES . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_spec -> TERMINATES
-- On WITH reduce production is_acsl_spec -> TERMINATES
-- On VOLATILE reduce production is_acsl_spec -> TERMINATES
-- On VOID reduce production is_acsl_spec -> TERMINATES
-- On VARIANT reduce production is_acsl_spec -> TERMINATES
-- On VALID_READ reduce production is_acsl_spec -> TERMINATES
-- On VALID_RANGE reduce production is_acsl_spec -> TERMINATES
-- On VALID_INDEX reduce production is_acsl_spec -> TERMINATES
-- On VALID reduce production is_acsl_spec -> TERMINATES
-- On UNSIGNED reduce production is_acsl_spec -> TERMINATES
-- On UNION reduce production is_acsl_spec -> TERMINATES
-- On UNALLOCATED reduce production is_acsl_spec -> TERMINATES
-- On TYPEOF reduce production is_acsl_spec -> TERMINATES
-- On TYPENAME reduce production is_acsl_spec -> TERMINATES
-- On TYPE reduce production is_acsl_spec -> TERMINATES
-- On TRUE reduce production is_acsl_spec -> TERMINATES
-- On TILDE reduce production is_acsl_spec -> TERMINATES
-- On TERMINATES reduce production is_acsl_spec -> TERMINATES
-- On STRUCT reduce production is_acsl_spec -> TERMINATES
-- On STRING_LITERAL reduce production is_acsl_spec -> TERMINATES
-- On STATIC reduce production is_acsl_spec -> TERMINATES
-- On STAR reduce production is_acsl_spec -> TERMINATES
-- On SLICE reduce production is_acsl_spec -> TERMINATES
-- On SLASH reduce production is_acsl_spec -> TERMINATES
-- On SIZEOF reduce production is_acsl_spec -> TERMINATES
-- On SIGNED reduce production is_acsl_spec -> TERMINATES
-- On SHORT reduce production is_acsl_spec -> TERMINATES
-- On SEPARATED reduce production is_acsl_spec -> TERMINATES
-- On SEMICOLON reduce production is_acsl_spec -> TERMINATES
-- On RSQUARE reduce production is_acsl_spec -> TERMINATES
-- On RPAR reduce production is_acsl_spec -> TERMINATES
-- On RETURNS reduce production is_acsl_spec -> TERMINATES
-- On RESULT reduce production is_acsl_spec -> TERMINATES
-- On REQUIRES reduce production is_acsl_spec -> TERMINATES
-- On REGISTER reduce production is_acsl_spec -> TERMINATES
-- On REAL reduce production is_acsl_spec -> TERMINATES
-- On READS reduce production is_acsl_spec -> TERMINATES
-- On RBRACE reduce production is_acsl_spec -> TERMINATES
-- On QUESTION reduce production is_acsl_spec -> TERMINATES
-- On PREDICATE reduce production is_acsl_spec -> TERMINATES
-- On PRAGMA reduce production is_acsl_spec -> TERMINATES
-- On PLUS reduce production is_acsl_spec -> TERMINATES
-- On PIPE reduce production is_acsl_spec -> TERMINATES
-- On PERCENT reduce production is_acsl_spec -> TERMINATES
-- On OR reduce production is_acsl_spec -> TERMINATES
-- On OLD reduce production is_acsl_spec -> TERMINATES
-- On OFFSET reduce production is_acsl_spec -> TERMINATES
-- On NULL reduce production is_acsl_spec -> TERMINATES
-- On NOTHING reduce production is_acsl_spec -> TERMINATES
-- On NOT reduce production is_acsl_spec -> TERMINATES
-- On NE reduce production is_acsl_spec -> TERMINATES
-- On MODULE reduce production is_acsl_spec -> TERMINATES
-- On MODEL reduce production is_acsl_spec -> TERMINATES
-- On MINUS reduce production is_acsl_spec -> TERMINATES
-- On LTLT reduce production is_acsl_spec -> TERMINATES
-- On LTCOLON reduce production is_acsl_spec -> TERMINATES
-- On LT reduce production is_acsl_spec -> TERMINATES
-- On LSQUARE reduce production is_acsl_spec -> TERMINATES
-- On LPAR reduce production is_acsl_spec -> TERMINATES
-- On LOOP reduce production is_acsl_spec -> TERMINATES
-- On LONG reduce production is_acsl_spec -> TERMINATES
-- On LOGIC reduce production is_acsl_spec -> TERMINATES
-- On LET reduce production is_acsl_spec -> TERMINATES
-- On LEMMA reduce production is_acsl_spec -> TERMINATES
-- On LE reduce production is_acsl_spec -> TERMINATES
-- On LBRACE reduce production is_acsl_spec -> TERMINATES
-- On LAMBDA reduce production is_acsl_spec -> TERMINATES
-- On LABEL reduce production is_acsl_spec -> TERMINATES
-- On INVARIANT reduce production is_acsl_spec -> TERMINATES
-- On INTER reduce production is_acsl_spec -> TERMINATES
-- On INTEGER reduce production is_acsl_spec -> TERMINATES
-- On INT reduce production is_acsl_spec -> TERMINATES
-- On INITIALIZED reduce production is_acsl_spec -> TERMINATES
-- On INDUCTIVE reduce production is_acsl_spec -> TERMINATES
-- On INCLUDE reduce production is_acsl_spec -> TERMINATES
-- On IMPLIES reduce production is_acsl_spec -> TERMINATES
-- On IMPACT reduce production is_acsl_spec -> TERMINATES
-- On IFF reduce production is_acsl_spec -> TERMINATES
-- On IF reduce production is_acsl_spec -> TERMINATES
-- On IDENTIFIER reduce production is_acsl_spec -> TERMINATES
-- On HATHAT reduce production is_acsl_spec -> TERMINATES
-- On HAT reduce production is_acsl_spec -> TERMINATES
-- On GTGT reduce production is_acsl_spec -> TERMINATES
-- On GT reduce production is_acsl_spec -> TERMINATES
-- On GLOBAL reduce production is_acsl_spec -> TERMINATES
-- On GHOST reduce production is_acsl_spec -> TERMINATES
-- On GE reduce production is_acsl_spec -> TERMINATES
-- On FUNCTION reduce production is_acsl_spec -> TERMINATES
-- On FROM reduce production is_acsl_spec -> TERMINATES
-- On FRESH reduce production is_acsl_spec -> TERMINATES
-- On FREES reduce production is_acsl_spec -> TERMINATES
-- On FREEABLE reduce production is_acsl_spec -> TERMINATES
-- On FORALL reduce production is_acsl_spec -> TERMINATES
-- On FOR reduce production is_acsl_spec -> TERMINATES
-- On FLOAT reduce production is_acsl_spec -> TERMINATES
-- On FALSE reduce production is_acsl_spec -> TERMINATES
-- On EXT_LET reduce production is_acsl_spec -> TERMINATES
-- On EXT_AT reduce production is_acsl_spec -> TERMINATES
-- On EXITS reduce production is_acsl_spec -> TERMINATES
-- On EXISTS reduce production is_acsl_spec -> TERMINATES
-- On EQUAL reduce production is_acsl_spec -> TERMINATES
-- On EQ reduce production is_acsl_spec -> TERMINATES
-- On EOF reduce production is_acsl_spec -> TERMINATES
-- On ENUM reduce production is_acsl_spec -> TERMINATES
-- On ENSURES reduce production is_acsl_spec -> TERMINATES
-- On EMPTY reduce production is_acsl_spec -> TERMINATES
-- On ELSE reduce production is_acsl_spec -> TERMINATES
-- On DYNAMIC reduce production is_acsl_spec -> TERMINATES
-- On DOUBLE reduce production is_acsl_spec -> TERMINATES
-- On DOTDOTDOT reduce production is_acsl_spec -> TERMINATES
-- On DOTDOT reduce production is_acsl_spec -> TERMINATES
-- On DOT reduce production is_acsl_spec -> TERMINATES
-- On DOLLAR reduce production is_acsl_spec -> TERMINATES
-- On DISJOINT reduce production is_acsl_spec -> TERMINATES
-- On DECREASES reduce production is_acsl_spec -> TERMINATES
-- On DANGLING reduce production is_acsl_spec -> TERMINATES
-- On CUSTOM reduce production is_acsl_spec -> TERMINATES
-- On CONTRACT reduce production is_acsl_spec -> TERMINATES
-- On CONTINUES reduce production is_acsl_spec -> TERMINATES
-- On CONSTANT10 reduce production is_acsl_spec -> TERMINATES
-- On CONSTANT reduce production is_acsl_spec -> TERMINATES
-- On CONST reduce production is_acsl_spec -> TERMINATES
-- On COMPLETE reduce production is_acsl_spec -> TERMINATES
-- On COMMA reduce production is_acsl_spec -> TERMINATES
-- On COLONGT reduce production is_acsl_spec -> TERMINATES
-- On COLONCOLON reduce production is_acsl_spec -> TERMINATES
-- On COLON2 reduce production is_acsl_spec -> TERMINATES
-- On COLON reduce production is_acsl_spec -> TERMINATES
-- On CHAR reduce production is_acsl_spec -> TERMINATES
-- On CASE reduce production is_acsl_spec -> TERMINATES
-- On BSUNION reduce production is_acsl_spec -> TERMINATES
-- On BSTYPE reduce production is_acsl_spec -> TERMINATES
-- On BREAKS reduce production is_acsl_spec -> TERMINATES
-- On BOOLEAN reduce production is_acsl_spec -> TERMINATES
-- On BOOL reduce production is_acsl_spec -> TERMINATES
-- On BLOCK_LENGTH reduce production is_acsl_spec -> TERMINATES
-- On BIMPLIES reduce production is_acsl_spec -> TERMINATES
-- On BIFF reduce production is_acsl_spec -> TERMINATES
-- On BEHAVIORS reduce production is_acsl_spec -> TERMINATES
-- On BEHAVIOR reduce production is_acsl_spec -> TERMINATES
-- On BASE_ADDR reduce production is_acsl_spec -> TERMINATES
-- On AXIOMATIC reduce production is_acsl_spec -> TERMINATES
-- On AXIOM reduce production is_acsl_spec -> TERMINATES
-- On AUTOMATIC reduce production is_acsl_spec -> TERMINATES
-- On AT reduce production is_acsl_spec -> TERMINATES
-- On ASSUMES reduce production is_acsl_spec -> TERMINATES
-- On ASSIGNS reduce production is_acsl_spec -> TERMINATES
-- On ASSERT reduce production is_acsl_spec -> TERMINATES
-- On ARROW reduce production is_acsl_spec -> TERMINATES
-- On AND reduce production is_acsl_spec -> TERMINATES
-- On AMP reduce production is_acsl_spec -> TERMINATES
-- On ALLOCATION reduce production is_acsl_spec -> TERMINATES
-- On ALLOCATES reduce production is_acsl_spec -> TERMINATES
-- On ALLOCABLE reduce production is_acsl_spec -> TERMINATES

State 13:
## Known stack suffix:
## STRUCT
## LR(1) items:
c_keyword -> STRUCT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> STRUCT
-- On WITH reduce production c_keyword -> STRUCT
-- On VOLATILE reduce production c_keyword -> STRUCT
-- On VOID reduce production c_keyword -> STRUCT
-- On VARIANT reduce production c_keyword -> STRUCT
-- On VALID_READ reduce production c_keyword -> STRUCT
-- On VALID_RANGE reduce production c_keyword -> STRUCT
-- On VALID_INDEX reduce production c_keyword -> STRUCT
-- On VALID reduce production c_keyword -> STRUCT
-- On UNSIGNED reduce production c_keyword -> STRUCT
-- On UNION reduce production c_keyword -> STRUCT
-- On UNALLOCATED reduce production c_keyword -> STRUCT
-- On TYPEOF reduce production c_keyword -> STRUCT
-- On TYPENAME reduce production c_keyword -> STRUCT
-- On TYPE reduce production c_keyword -> STRUCT
-- On TRUE reduce production c_keyword -> STRUCT
-- On TILDE reduce production c_keyword -> STRUCT
-- On TERMINATES reduce production c_keyword -> STRUCT
-- On STRUCT reduce production c_keyword -> STRUCT
-- On STRING_LITERAL reduce production c_keyword -> STRUCT
-- On STATIC reduce production c_keyword -> STRUCT
-- On STAR reduce production c_keyword -> STRUCT
-- On SLICE reduce production c_keyword -> STRUCT
-- On SLASH reduce production c_keyword -> STRUCT
-- On SIZEOF reduce production c_keyword -> STRUCT
-- On SIGNED reduce production c_keyword -> STRUCT
-- On SHORT reduce production c_keyword -> STRUCT
-- On SEPARATED reduce production c_keyword -> STRUCT
-- On SEMICOLON reduce production c_keyword -> STRUCT
-- On RSQUARE reduce production c_keyword -> STRUCT
-- On RPAR reduce production c_keyword -> STRUCT
-- On RETURNS reduce production c_keyword -> STRUCT
-- On RESULT reduce production c_keyword -> STRUCT
-- On REQUIRES reduce production c_keyword -> STRUCT
-- On REGISTER reduce production c_keyword -> STRUCT
-- On REAL reduce production c_keyword -> STRUCT
-- On READS reduce production c_keyword -> STRUCT
-- On RBRACE reduce production c_keyword -> STRUCT
-- On QUESTION reduce production c_keyword -> STRUCT
-- On PREDICATE reduce production c_keyword -> STRUCT
-- On PRAGMA reduce production c_keyword -> STRUCT
-- On PLUS reduce production c_keyword -> STRUCT
-- On PIPE reduce production c_keyword -> STRUCT
-- On PERCENT reduce production c_keyword -> STRUCT
-- On OR reduce production c_keyword -> STRUCT
-- On OLD reduce production c_keyword -> STRUCT
-- On OFFSET reduce production c_keyword -> STRUCT
-- On NULL reduce production c_keyword -> STRUCT
-- On NOTHING reduce production c_keyword -> STRUCT
-- On NOT reduce production c_keyword -> STRUCT
-- On NE reduce production c_keyword -> STRUCT
-- On MODULE reduce production c_keyword -> STRUCT
-- On MODEL reduce production c_keyword -> STRUCT
-- On MINUS reduce production c_keyword -> STRUCT
-- On LTLT reduce production c_keyword -> STRUCT
-- On LTCOLON reduce production c_keyword -> STRUCT
-- On LT reduce production c_keyword -> STRUCT
-- On LSQUARE reduce production c_keyword -> STRUCT
-- On LPAR reduce production c_keyword -> STRUCT
-- On LOOP reduce production c_keyword -> STRUCT
-- On LONG reduce production c_keyword -> STRUCT
-- On LOGIC reduce production c_keyword -> STRUCT
-- On LET reduce production c_keyword -> STRUCT
-- On LEMMA reduce production c_keyword -> STRUCT
-- On LE reduce production c_keyword -> STRUCT
-- On LBRACE reduce production c_keyword -> STRUCT
-- On LAMBDA reduce production c_keyword -> STRUCT
-- On LABEL reduce production c_keyword -> STRUCT
-- On INVARIANT reduce production c_keyword -> STRUCT
-- On INTER reduce production c_keyword -> STRUCT
-- On INTEGER reduce production c_keyword -> STRUCT
-- On INT reduce production c_keyword -> STRUCT
-- On INITIALIZED reduce production c_keyword -> STRUCT
-- On INDUCTIVE reduce production c_keyword -> STRUCT
-- On INCLUDE reduce production c_keyword -> STRUCT
-- On IMPLIES reduce production c_keyword -> STRUCT
-- On IMPACT reduce production c_keyword -> STRUCT
-- On IFF reduce production c_keyword -> STRUCT
-- On IF reduce production c_keyword -> STRUCT
-- On IDENTIFIER reduce production c_keyword -> STRUCT
-- On HATHAT reduce production c_keyword -> STRUCT
-- On HAT reduce production c_keyword -> STRUCT
-- On GTGT reduce production c_keyword -> STRUCT
-- On GT reduce production c_keyword -> STRUCT
-- On GLOBAL reduce production c_keyword -> STRUCT
-- On GHOST reduce production c_keyword -> STRUCT
-- On GE reduce production c_keyword -> STRUCT
-- On FUNCTION reduce production c_keyword -> STRUCT
-- On FROM reduce production c_keyword -> STRUCT
-- On FRESH reduce production c_keyword -> STRUCT
-- On FREES reduce production c_keyword -> STRUCT
-- On FREEABLE reduce production c_keyword -> STRUCT
-- On FORALL reduce production c_keyword -> STRUCT
-- On FOR reduce production c_keyword -> STRUCT
-- On FLOAT reduce production c_keyword -> STRUCT
-- On FALSE reduce production c_keyword -> STRUCT
-- On EXT_LET reduce production c_keyword -> STRUCT
-- On EXT_AT reduce production c_keyword -> STRUCT
-- On EXITS reduce production c_keyword -> STRUCT
-- On EXISTS reduce production c_keyword -> STRUCT
-- On EQUAL reduce production c_keyword -> STRUCT
-- On EQ reduce production c_keyword -> STRUCT
-- On EOF reduce production c_keyword -> STRUCT
-- On ENUM reduce production c_keyword -> STRUCT
-- On ENSURES reduce production c_keyword -> STRUCT
-- On EMPTY reduce production c_keyword -> STRUCT
-- On ELSE reduce production c_keyword -> STRUCT
-- On DYNAMIC reduce production c_keyword -> STRUCT
-- On DOUBLE reduce production c_keyword -> STRUCT
-- On DOTDOTDOT reduce production c_keyword -> STRUCT
-- On DOTDOT reduce production c_keyword -> STRUCT
-- On DOT reduce production c_keyword -> STRUCT
-- On DOLLAR reduce production c_keyword -> STRUCT
-- On DISJOINT reduce production c_keyword -> STRUCT
-- On DECREASES reduce production c_keyword -> STRUCT
-- On DANGLING reduce production c_keyword -> STRUCT
-- On CUSTOM reduce production c_keyword -> STRUCT
-- On CONTRACT reduce production c_keyword -> STRUCT
-- On CONTINUES reduce production c_keyword -> STRUCT
-- On CONSTANT10 reduce production c_keyword -> STRUCT
-- On CONSTANT reduce production c_keyword -> STRUCT
-- On CONST reduce production c_keyword -> STRUCT
-- On COMPLETE reduce production c_keyword -> STRUCT
-- On COMMA reduce production c_keyword -> STRUCT
-- On COLONGT reduce production c_keyword -> STRUCT
-- On COLONCOLON reduce production c_keyword -> STRUCT
-- On COLON2 reduce production c_keyword -> STRUCT
-- On COLON reduce production c_keyword -> STRUCT
-- On CHAR reduce production c_keyword -> STRUCT
-- On CASE reduce production c_keyword -> STRUCT
-- On BSUNION reduce production c_keyword -> STRUCT
-- On BSTYPE reduce production c_keyword -> STRUCT
-- On BREAKS reduce production c_keyword -> STRUCT
-- On BOOLEAN reduce production c_keyword -> STRUCT
-- On BOOL reduce production c_keyword -> STRUCT
-- On BLOCK_LENGTH reduce production c_keyword -> STRUCT
-- On BIMPLIES reduce production c_keyword -> STRUCT
-- On BIFF reduce production c_keyword -> STRUCT
-- On BEHAVIORS reduce production c_keyword -> STRUCT
-- On BEHAVIOR reduce production c_keyword -> STRUCT
-- On BASE_ADDR reduce production c_keyword -> STRUCT
-- On AXIOMATIC reduce production c_keyword -> STRUCT
-- On AXIOM reduce production c_keyword -> STRUCT
-- On AUTOMATIC reduce production c_keyword -> STRUCT
-- On AT reduce production c_keyword -> STRUCT
-- On ASSUMES reduce production c_keyword -> STRUCT
-- On ASSIGNS reduce production c_keyword -> STRUCT
-- On ASSERT reduce production c_keyword -> STRUCT
-- On ARROW reduce production c_keyword -> STRUCT
-- On AND reduce production c_keyword -> STRUCT
-- On AMP reduce production c_keyword -> STRUCT
-- On ALLOCATION reduce production c_keyword -> STRUCT
-- On ALLOCATES reduce production c_keyword -> STRUCT
-- On ALLOCABLE reduce production c_keyword -> STRUCT

State 14:
## Known stack suffix:
## STATIC
## LR(1) items:
c_keyword -> STATIC . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> STATIC
-- On WITH reduce production c_keyword -> STATIC
-- On VOLATILE reduce production c_keyword -> STATIC
-- On VOID reduce production c_keyword -> STATIC
-- On VARIANT reduce production c_keyword -> STATIC
-- On VALID_READ reduce production c_keyword -> STATIC
-- On VALID_RANGE reduce production c_keyword -> STATIC
-- On VALID_INDEX reduce production c_keyword -> STATIC
-- On VALID reduce production c_keyword -> STATIC
-- On UNSIGNED reduce production c_keyword -> STATIC
-- On UNION reduce production c_keyword -> STATIC
-- On UNALLOCATED reduce production c_keyword -> STATIC
-- On TYPEOF reduce production c_keyword -> STATIC
-- On TYPENAME reduce production c_keyword -> STATIC
-- On TYPE reduce production c_keyword -> STATIC
-- On TRUE reduce production c_keyword -> STATIC
-- On TILDE reduce production c_keyword -> STATIC
-- On TERMINATES reduce production c_keyword -> STATIC
-- On STRUCT reduce production c_keyword -> STATIC
-- On STRING_LITERAL reduce production c_keyword -> STATIC
-- On STATIC reduce production c_keyword -> STATIC
-- On STAR reduce production c_keyword -> STATIC
-- On SLICE reduce production c_keyword -> STATIC
-- On SLASH reduce production c_keyword -> STATIC
-- On SIZEOF reduce production c_keyword -> STATIC
-- On SIGNED reduce production c_keyword -> STATIC
-- On SHORT reduce production c_keyword -> STATIC
-- On SEPARATED reduce production c_keyword -> STATIC
-- On SEMICOLON reduce production c_keyword -> STATIC
-- On RSQUARE reduce production c_keyword -> STATIC
-- On RPAR reduce production c_keyword -> STATIC
-- On RETURNS reduce production c_keyword -> STATIC
-- On RESULT reduce production c_keyword -> STATIC
-- On REQUIRES reduce production c_keyword -> STATIC
-- On REGISTER reduce production c_keyword -> STATIC
-- On REAL reduce production c_keyword -> STATIC
-- On READS reduce production c_keyword -> STATIC
-- On RBRACE reduce production c_keyword -> STATIC
-- On QUESTION reduce production c_keyword -> STATIC
-- On PREDICATE reduce production c_keyword -> STATIC
-- On PRAGMA reduce production c_keyword -> STATIC
-- On PLUS reduce production c_keyword -> STATIC
-- On PIPE reduce production c_keyword -> STATIC
-- On PERCENT reduce production c_keyword -> STATIC
-- On OR reduce production c_keyword -> STATIC
-- On OLD reduce production c_keyword -> STATIC
-- On OFFSET reduce production c_keyword -> STATIC
-- On NULL reduce production c_keyword -> STATIC
-- On NOTHING reduce production c_keyword -> STATIC
-- On NOT reduce production c_keyword -> STATIC
-- On NE reduce production c_keyword -> STATIC
-- On MODULE reduce production c_keyword -> STATIC
-- On MODEL reduce production c_keyword -> STATIC
-- On MINUS reduce production c_keyword -> STATIC
-- On LTLT reduce production c_keyword -> STATIC
-- On LTCOLON reduce production c_keyword -> STATIC
-- On LT reduce production c_keyword -> STATIC
-- On LSQUARE reduce production c_keyword -> STATIC
-- On LPAR reduce production c_keyword -> STATIC
-- On LOOP reduce production c_keyword -> STATIC
-- On LONG reduce production c_keyword -> STATIC
-- On LOGIC reduce production c_keyword -> STATIC
-- On LET reduce production c_keyword -> STATIC
-- On LEMMA reduce production c_keyword -> STATIC
-- On LE reduce production c_keyword -> STATIC
-- On LBRACE reduce production c_keyword -> STATIC
-- On LAMBDA reduce production c_keyword -> STATIC
-- On LABEL reduce production c_keyword -> STATIC
-- On INVARIANT reduce production c_keyword -> STATIC
-- On INTER reduce production c_keyword -> STATIC
-- On INTEGER reduce production c_keyword -> STATIC
-- On INT reduce production c_keyword -> STATIC
-- On INITIALIZED reduce production c_keyword -> STATIC
-- On INDUCTIVE reduce production c_keyword -> STATIC
-- On INCLUDE reduce production c_keyword -> STATIC
-- On IMPLIES reduce production c_keyword -> STATIC
-- On IMPACT reduce production c_keyword -> STATIC
-- On IFF reduce production c_keyword -> STATIC
-- On IF reduce production c_keyword -> STATIC
-- On IDENTIFIER reduce production c_keyword -> STATIC
-- On HATHAT reduce production c_keyword -> STATIC
-- On HAT reduce production c_keyword -> STATIC
-- On GTGT reduce production c_keyword -> STATIC
-- On GT reduce production c_keyword -> STATIC
-- On GLOBAL reduce production c_keyword -> STATIC
-- On GHOST reduce production c_keyword -> STATIC
-- On GE reduce production c_keyword -> STATIC
-- On FUNCTION reduce production c_keyword -> STATIC
-- On FROM reduce production c_keyword -> STATIC
-- On FRESH reduce production c_keyword -> STATIC
-- On FREES reduce production c_keyword -> STATIC
-- On FREEABLE reduce production c_keyword -> STATIC
-- On FORALL reduce production c_keyword -> STATIC
-- On FOR reduce production c_keyword -> STATIC
-- On FLOAT reduce production c_keyword -> STATIC
-- On FALSE reduce production c_keyword -> STATIC
-- On EXT_LET reduce production c_keyword -> STATIC
-- On EXT_AT reduce production c_keyword -> STATIC
-- On EXITS reduce production c_keyword -> STATIC
-- On EXISTS reduce production c_keyword -> STATIC
-- On EQUAL reduce production c_keyword -> STATIC
-- On EQ reduce production c_keyword -> STATIC
-- On EOF reduce production c_keyword -> STATIC
-- On ENUM reduce production c_keyword -> STATIC
-- On ENSURES reduce production c_keyword -> STATIC
-- On EMPTY reduce production c_keyword -> STATIC
-- On ELSE reduce production c_keyword -> STATIC
-- On DYNAMIC reduce production c_keyword -> STATIC
-- On DOUBLE reduce production c_keyword -> STATIC
-- On DOTDOTDOT reduce production c_keyword -> STATIC
-- On DOTDOT reduce production c_keyword -> STATIC
-- On DOT reduce production c_keyword -> STATIC
-- On DOLLAR reduce production c_keyword -> STATIC
-- On DISJOINT reduce production c_keyword -> STATIC
-- On DECREASES reduce production c_keyword -> STATIC
-- On DANGLING reduce production c_keyword -> STATIC
-- On CUSTOM reduce production c_keyword -> STATIC
-- On CONTRACT reduce production c_keyword -> STATIC
-- On CONTINUES reduce production c_keyword -> STATIC
-- On CONSTANT10 reduce production c_keyword -> STATIC
-- On CONSTANT reduce production c_keyword -> STATIC
-- On CONST reduce production c_keyword -> STATIC
-- On COMPLETE reduce production c_keyword -> STATIC
-- On COMMA reduce production c_keyword -> STATIC
-- On COLONGT reduce production c_keyword -> STATIC
-- On COLONCOLON reduce production c_keyword -> STATIC
-- On COLON2 reduce production c_keyword -> STATIC
-- On COLON reduce production c_keyword -> STATIC
-- On CHAR reduce production c_keyword -> STATIC
-- On CASE reduce production c_keyword -> STATIC
-- On BSUNION reduce production c_keyword -> STATIC
-- On BSTYPE reduce production c_keyword -> STATIC
-- On BREAKS reduce production c_keyword -> STATIC
-- On BOOLEAN reduce production c_keyword -> STATIC
-- On BOOL reduce production c_keyword -> STATIC
-- On BLOCK_LENGTH reduce production c_keyword -> STATIC
-- On BIMPLIES reduce production c_keyword -> STATIC
-- On BIFF reduce production c_keyword -> STATIC
-- On BEHAVIORS reduce production c_keyword -> STATIC
-- On BEHAVIOR reduce production c_keyword -> STATIC
-- On BASE_ADDR reduce production c_keyword -> STATIC
-- On AXIOMATIC reduce production c_keyword -> STATIC
-- On AXIOM reduce production c_keyword -> STATIC
-- On AUTOMATIC reduce production c_keyword -> STATIC
-- On AT reduce production c_keyword -> STATIC
-- On ASSUMES reduce production c_keyword -> STATIC
-- On ASSIGNS reduce production c_keyword -> STATIC
-- On ASSERT reduce production c_keyword -> STATIC
-- On ARROW reduce production c_keyword -> STATIC
-- On AND reduce production c_keyword -> STATIC
-- On AMP reduce production c_keyword -> STATIC
-- On ALLOCATION reduce production c_keyword -> STATIC
-- On ALLOCATES reduce production c_keyword -> STATIC
-- On ALLOCABLE reduce production c_keyword -> STATIC

State 15:
## Known stack suffix:
## SLICE
## LR(1) items:
is_acsl_decl_or_code_annot -> SLICE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_decl_or_code_annot -> SLICE
-- On WITH reduce production is_acsl_decl_or_code_annot -> SLICE
-- On VOLATILE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On VOID reduce production is_acsl_decl_or_code_annot -> SLICE
-- On VARIANT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On VALID_READ reduce production is_acsl_decl_or_code_annot -> SLICE
-- On VALID_RANGE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On VALID_INDEX reduce production is_acsl_decl_or_code_annot -> SLICE
-- On VALID reduce production is_acsl_decl_or_code_annot -> SLICE
-- On UNSIGNED reduce production is_acsl_decl_or_code_annot -> SLICE
-- On UNION reduce production is_acsl_decl_or_code_annot -> SLICE
-- On UNALLOCATED reduce production is_acsl_decl_or_code_annot -> SLICE
-- On TYPEOF reduce production is_acsl_decl_or_code_annot -> SLICE
-- On TYPENAME reduce production is_acsl_decl_or_code_annot -> SLICE
-- On TYPE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On TRUE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On TILDE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On TERMINATES reduce production is_acsl_decl_or_code_annot -> SLICE
-- On STRUCT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On STRING_LITERAL reduce production is_acsl_decl_or_code_annot -> SLICE
-- On STATIC reduce production is_acsl_decl_or_code_annot -> SLICE
-- On STAR reduce production is_acsl_decl_or_code_annot -> SLICE
-- On SLICE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On SLASH reduce production is_acsl_decl_or_code_annot -> SLICE
-- On SIZEOF reduce production is_acsl_decl_or_code_annot -> SLICE
-- On SIGNED reduce production is_acsl_decl_or_code_annot -> SLICE
-- On SHORT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On SEPARATED reduce production is_acsl_decl_or_code_annot -> SLICE
-- On SEMICOLON reduce production is_acsl_decl_or_code_annot -> SLICE
-- On RSQUARE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On RPAR reduce production is_acsl_decl_or_code_annot -> SLICE
-- On RETURNS reduce production is_acsl_decl_or_code_annot -> SLICE
-- On RESULT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On REQUIRES reduce production is_acsl_decl_or_code_annot -> SLICE
-- On REGISTER reduce production is_acsl_decl_or_code_annot -> SLICE
-- On REAL reduce production is_acsl_decl_or_code_annot -> SLICE
-- On READS reduce production is_acsl_decl_or_code_annot -> SLICE
-- On RBRACE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On QUESTION reduce production is_acsl_decl_or_code_annot -> SLICE
-- On PREDICATE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On PRAGMA reduce production is_acsl_decl_or_code_annot -> SLICE
-- On PLUS reduce production is_acsl_decl_or_code_annot -> SLICE
-- On PIPE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On PERCENT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On OR reduce production is_acsl_decl_or_code_annot -> SLICE
-- On OLD reduce production is_acsl_decl_or_code_annot -> SLICE
-- On OFFSET reduce production is_acsl_decl_or_code_annot -> SLICE
-- On NULL reduce production is_acsl_decl_or_code_annot -> SLICE
-- On NOTHING reduce production is_acsl_decl_or_code_annot -> SLICE
-- On NOT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On NE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On MODULE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On MODEL reduce production is_acsl_decl_or_code_annot -> SLICE
-- On MINUS reduce production is_acsl_decl_or_code_annot -> SLICE
-- On LTLT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On LTCOLON reduce production is_acsl_decl_or_code_annot -> SLICE
-- On LT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On LSQUARE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On LPAR reduce production is_acsl_decl_or_code_annot -> SLICE
-- On LOOP reduce production is_acsl_decl_or_code_annot -> SLICE
-- On LONG reduce production is_acsl_decl_or_code_annot -> SLICE
-- On LOGIC reduce production is_acsl_decl_or_code_annot -> SLICE
-- On LET reduce production is_acsl_decl_or_code_annot -> SLICE
-- On LEMMA reduce production is_acsl_decl_or_code_annot -> SLICE
-- On LE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On LBRACE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On LAMBDA reduce production is_acsl_decl_or_code_annot -> SLICE
-- On LABEL reduce production is_acsl_decl_or_code_annot -> SLICE
-- On INVARIANT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On INTER reduce production is_acsl_decl_or_code_annot -> SLICE
-- On INTEGER reduce production is_acsl_decl_or_code_annot -> SLICE
-- On INT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On INITIALIZED reduce production is_acsl_decl_or_code_annot -> SLICE
-- On INDUCTIVE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On INCLUDE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On IMPLIES reduce production is_acsl_decl_or_code_annot -> SLICE
-- On IMPACT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On IFF reduce production is_acsl_decl_or_code_annot -> SLICE
-- On IF reduce production is_acsl_decl_or_code_annot -> SLICE
-- On IDENTIFIER reduce production is_acsl_decl_or_code_annot -> SLICE
-- On HATHAT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On HAT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On GTGT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On GT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On GLOBAL reduce production is_acsl_decl_or_code_annot -> SLICE
-- On GHOST reduce production is_acsl_decl_or_code_annot -> SLICE
-- On GE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On FUNCTION reduce production is_acsl_decl_or_code_annot -> SLICE
-- On FROM reduce production is_acsl_decl_or_code_annot -> SLICE
-- On FRESH reduce production is_acsl_decl_or_code_annot -> SLICE
-- On FREES reduce production is_acsl_decl_or_code_annot -> SLICE
-- On FREEABLE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On FORALL reduce production is_acsl_decl_or_code_annot -> SLICE
-- On FOR reduce production is_acsl_decl_or_code_annot -> SLICE
-- On FLOAT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On FALSE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On EXT_LET reduce production is_acsl_decl_or_code_annot -> SLICE
-- On EXT_AT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On EXITS reduce production is_acsl_decl_or_code_annot -> SLICE
-- On EXISTS reduce production is_acsl_decl_or_code_annot -> SLICE
-- On EQUAL reduce production is_acsl_decl_or_code_annot -> SLICE
-- On EQ reduce production is_acsl_decl_or_code_annot -> SLICE
-- On EOF reduce production is_acsl_decl_or_code_annot -> SLICE
-- On ENUM reduce production is_acsl_decl_or_code_annot -> SLICE
-- On ENSURES reduce production is_acsl_decl_or_code_annot -> SLICE
-- On EMPTY reduce production is_acsl_decl_or_code_annot -> SLICE
-- On ELSE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On DYNAMIC reduce production is_acsl_decl_or_code_annot -> SLICE
-- On DOUBLE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On DOTDOTDOT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On DOTDOT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On DOT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On DOLLAR reduce production is_acsl_decl_or_code_annot -> SLICE
-- On DISJOINT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On DECREASES reduce production is_acsl_decl_or_code_annot -> SLICE
-- On DANGLING reduce production is_acsl_decl_or_code_annot -> SLICE
-- On CUSTOM reduce production is_acsl_decl_or_code_annot -> SLICE
-- On CONTRACT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On CONTINUES reduce production is_acsl_decl_or_code_annot -> SLICE
-- On CONSTANT10 reduce production is_acsl_decl_or_code_annot -> SLICE
-- On CONSTANT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On CONST reduce production is_acsl_decl_or_code_annot -> SLICE
-- On COMPLETE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On COMMA reduce production is_acsl_decl_or_code_annot -> SLICE
-- On COLONGT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On COLONCOLON reduce production is_acsl_decl_or_code_annot -> SLICE
-- On COLON2 reduce production is_acsl_decl_or_code_annot -> SLICE
-- On COLON reduce production is_acsl_decl_or_code_annot -> SLICE
-- On CHAR reduce production is_acsl_decl_or_code_annot -> SLICE
-- On CASE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On BSUNION reduce production is_acsl_decl_or_code_annot -> SLICE
-- On BSTYPE reduce production is_acsl_decl_or_code_annot -> SLICE
-- On BREAKS reduce production is_acsl_decl_or_code_annot -> SLICE
-- On BOOLEAN reduce production is_acsl_decl_or_code_annot -> SLICE
-- On BOOL reduce production is_acsl_decl_or_code_annot -> SLICE
-- On BLOCK_LENGTH reduce production is_acsl_decl_or_code_annot -> SLICE
-- On BIMPLIES reduce production is_acsl_decl_or_code_annot -> SLICE
-- On BIFF reduce production is_acsl_decl_or_code_annot -> SLICE
-- On BEHAVIORS reduce production is_acsl_decl_or_code_annot -> SLICE
-- On BEHAVIOR reduce production is_acsl_decl_or_code_annot -> SLICE
-- On BASE_ADDR reduce production is_acsl_decl_or_code_annot -> SLICE
-- On AXIOMATIC reduce production is_acsl_decl_or_code_annot -> SLICE
-- On AXIOM reduce production is_acsl_decl_or_code_annot -> SLICE
-- On AUTOMATIC reduce production is_acsl_decl_or_code_annot -> SLICE
-- On AT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On ASSUMES reduce production is_acsl_decl_or_code_annot -> SLICE
-- On ASSIGNS reduce production is_acsl_decl_or_code_annot -> SLICE
-- On ASSERT reduce production is_acsl_decl_or_code_annot -> SLICE
-- On ARROW reduce production is_acsl_decl_or_code_annot -> SLICE
-- On AND reduce production is_acsl_decl_or_code_annot -> SLICE
-- On AMP reduce production is_acsl_decl_or_code_annot -> SLICE
-- On ALLOCATION reduce production is_acsl_decl_or_code_annot -> SLICE
-- On ALLOCATES reduce production is_acsl_decl_or_code_annot -> SLICE
-- On ALLOCABLE reduce production is_acsl_decl_or_code_annot -> SLICE

State 16:
## Known stack suffix:
## SIZEOF
## LR(1) items:
c_keyword -> SIZEOF . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> SIZEOF
-- On WITH reduce production c_keyword -> SIZEOF
-- On VOLATILE reduce production c_keyword -> SIZEOF
-- On VOID reduce production c_keyword -> SIZEOF
-- On VARIANT reduce production c_keyword -> SIZEOF
-- On VALID_READ reduce production c_keyword -> SIZEOF
-- On VALID_RANGE reduce production c_keyword -> SIZEOF
-- On VALID_INDEX reduce production c_keyword -> SIZEOF
-- On VALID reduce production c_keyword -> SIZEOF
-- On UNSIGNED reduce production c_keyword -> SIZEOF
-- On UNION reduce production c_keyword -> SIZEOF
-- On UNALLOCATED reduce production c_keyword -> SIZEOF
-- On TYPEOF reduce production c_keyword -> SIZEOF
-- On TYPENAME reduce production c_keyword -> SIZEOF
-- On TYPE reduce production c_keyword -> SIZEOF
-- On TRUE reduce production c_keyword -> SIZEOF
-- On TILDE reduce production c_keyword -> SIZEOF
-- On TERMINATES reduce production c_keyword -> SIZEOF
-- On STRUCT reduce production c_keyword -> SIZEOF
-- On STRING_LITERAL reduce production c_keyword -> SIZEOF
-- On STATIC reduce production c_keyword -> SIZEOF
-- On STAR reduce production c_keyword -> SIZEOF
-- On SLICE reduce production c_keyword -> SIZEOF
-- On SLASH reduce production c_keyword -> SIZEOF
-- On SIZEOF reduce production c_keyword -> SIZEOF
-- On SIGNED reduce production c_keyword -> SIZEOF
-- On SHORT reduce production c_keyword -> SIZEOF
-- On SEPARATED reduce production c_keyword -> SIZEOF
-- On SEMICOLON reduce production c_keyword -> SIZEOF
-- On RSQUARE reduce production c_keyword -> SIZEOF
-- On RPAR reduce production c_keyword -> SIZEOF
-- On RETURNS reduce production c_keyword -> SIZEOF
-- On RESULT reduce production c_keyword -> SIZEOF
-- On REQUIRES reduce production c_keyword -> SIZEOF
-- On REGISTER reduce production c_keyword -> SIZEOF
-- On REAL reduce production c_keyword -> SIZEOF
-- On READS reduce production c_keyword -> SIZEOF
-- On RBRACE reduce production c_keyword -> SIZEOF
-- On QUESTION reduce production c_keyword -> SIZEOF
-- On PREDICATE reduce production c_keyword -> SIZEOF
-- On PRAGMA reduce production c_keyword -> SIZEOF
-- On PLUS reduce production c_keyword -> SIZEOF
-- On PIPE reduce production c_keyword -> SIZEOF
-- On PERCENT reduce production c_keyword -> SIZEOF
-- On OR reduce production c_keyword -> SIZEOF
-- On OLD reduce production c_keyword -> SIZEOF
-- On OFFSET reduce production c_keyword -> SIZEOF
-- On NULL reduce production c_keyword -> SIZEOF
-- On NOTHING reduce production c_keyword -> SIZEOF
-- On NOT reduce production c_keyword -> SIZEOF
-- On NE reduce production c_keyword -> SIZEOF
-- On MODULE reduce production c_keyword -> SIZEOF
-- On MODEL reduce production c_keyword -> SIZEOF
-- On MINUS reduce production c_keyword -> SIZEOF
-- On LTLT reduce production c_keyword -> SIZEOF
-- On LTCOLON reduce production c_keyword -> SIZEOF
-- On LT reduce production c_keyword -> SIZEOF
-- On LSQUARE reduce production c_keyword -> SIZEOF
-- On LPAR reduce production c_keyword -> SIZEOF
-- On LOOP reduce production c_keyword -> SIZEOF
-- On LONG reduce production c_keyword -> SIZEOF
-- On LOGIC reduce production c_keyword -> SIZEOF
-- On LET reduce production c_keyword -> SIZEOF
-- On LEMMA reduce production c_keyword -> SIZEOF
-- On LE reduce production c_keyword -> SIZEOF
-- On LBRACE reduce production c_keyword -> SIZEOF
-- On LAMBDA reduce production c_keyword -> SIZEOF
-- On LABEL reduce production c_keyword -> SIZEOF
-- On INVARIANT reduce production c_keyword -> SIZEOF
-- On INTER reduce production c_keyword -> SIZEOF
-- On INTEGER reduce production c_keyword -> SIZEOF
-- On INT reduce production c_keyword -> SIZEOF
-- On INITIALIZED reduce production c_keyword -> SIZEOF
-- On INDUCTIVE reduce production c_keyword -> SIZEOF
-- On INCLUDE reduce production c_keyword -> SIZEOF
-- On IMPLIES reduce production c_keyword -> SIZEOF
-- On IMPACT reduce production c_keyword -> SIZEOF
-- On IFF reduce production c_keyword -> SIZEOF
-- On IF reduce production c_keyword -> SIZEOF
-- On IDENTIFIER reduce production c_keyword -> SIZEOF
-- On HATHAT reduce production c_keyword -> SIZEOF
-- On HAT reduce production c_keyword -> SIZEOF
-- On GTGT reduce production c_keyword -> SIZEOF
-- On GT reduce production c_keyword -> SIZEOF
-- On GLOBAL reduce production c_keyword -> SIZEOF
-- On GHOST reduce production c_keyword -> SIZEOF
-- On GE reduce production c_keyword -> SIZEOF
-- On FUNCTION reduce production c_keyword -> SIZEOF
-- On FROM reduce production c_keyword -> SIZEOF
-- On FRESH reduce production c_keyword -> SIZEOF
-- On FREES reduce production c_keyword -> SIZEOF
-- On FREEABLE reduce production c_keyword -> SIZEOF
-- On FORALL reduce production c_keyword -> SIZEOF
-- On FOR reduce production c_keyword -> SIZEOF
-- On FLOAT reduce production c_keyword -> SIZEOF
-- On FALSE reduce production c_keyword -> SIZEOF
-- On EXT_LET reduce production c_keyword -> SIZEOF
-- On EXT_AT reduce production c_keyword -> SIZEOF
-- On EXITS reduce production c_keyword -> SIZEOF
-- On EXISTS reduce production c_keyword -> SIZEOF
-- On EQUAL reduce production c_keyword -> SIZEOF
-- On EQ reduce production c_keyword -> SIZEOF
-- On EOF reduce production c_keyword -> SIZEOF
-- On ENUM reduce production c_keyword -> SIZEOF
-- On ENSURES reduce production c_keyword -> SIZEOF
-- On EMPTY reduce production c_keyword -> SIZEOF
-- On ELSE reduce production c_keyword -> SIZEOF
-- On DYNAMIC reduce production c_keyword -> SIZEOF
-- On DOUBLE reduce production c_keyword -> SIZEOF
-- On DOTDOTDOT reduce production c_keyword -> SIZEOF
-- On DOTDOT reduce production c_keyword -> SIZEOF
-- On DOT reduce production c_keyword -> SIZEOF
-- On DOLLAR reduce production c_keyword -> SIZEOF
-- On DISJOINT reduce production c_keyword -> SIZEOF
-- On DECREASES reduce production c_keyword -> SIZEOF
-- On DANGLING reduce production c_keyword -> SIZEOF
-- On CUSTOM reduce production c_keyword -> SIZEOF
-- On CONTRACT reduce production c_keyword -> SIZEOF
-- On CONTINUES reduce production c_keyword -> SIZEOF
-- On CONSTANT10 reduce production c_keyword -> SIZEOF
-- On CONSTANT reduce production c_keyword -> SIZEOF
-- On CONST reduce production c_keyword -> SIZEOF
-- On COMPLETE reduce production c_keyword -> SIZEOF
-- On COMMA reduce production c_keyword -> SIZEOF
-- On COLONGT reduce production c_keyword -> SIZEOF
-- On COLONCOLON reduce production c_keyword -> SIZEOF
-- On COLON2 reduce production c_keyword -> SIZEOF
-- On COLON reduce production c_keyword -> SIZEOF
-- On CHAR reduce production c_keyword -> SIZEOF
-- On CASE reduce production c_keyword -> SIZEOF
-- On BSUNION reduce production c_keyword -> SIZEOF
-- On BSTYPE reduce production c_keyword -> SIZEOF
-- On BREAKS reduce production c_keyword -> SIZEOF
-- On BOOLEAN reduce production c_keyword -> SIZEOF
-- On BOOL reduce production c_keyword -> SIZEOF
-- On BLOCK_LENGTH reduce production c_keyword -> SIZEOF
-- On BIMPLIES reduce production c_keyword -> SIZEOF
-- On BIFF reduce production c_keyword -> SIZEOF
-- On BEHAVIORS reduce production c_keyword -> SIZEOF
-- On BEHAVIOR reduce production c_keyword -> SIZEOF
-- On BASE_ADDR reduce production c_keyword -> SIZEOF
-- On AXIOMATIC reduce production c_keyword -> SIZEOF
-- On AXIOM reduce production c_keyword -> SIZEOF
-- On AUTOMATIC reduce production c_keyword -> SIZEOF
-- On AT reduce production c_keyword -> SIZEOF
-- On ASSUMES reduce production c_keyword -> SIZEOF
-- On ASSIGNS reduce production c_keyword -> SIZEOF
-- On ASSERT reduce production c_keyword -> SIZEOF
-- On ARROW reduce production c_keyword -> SIZEOF
-- On AND reduce production c_keyword -> SIZEOF
-- On AMP reduce production c_keyword -> SIZEOF
-- On ALLOCATION reduce production c_keyword -> SIZEOF
-- On ALLOCATES reduce production c_keyword -> SIZEOF
-- On ALLOCABLE reduce production c_keyword -> SIZEOF

State 17:
## Known stack suffix:
## SIGNED
## LR(1) items:
c_keyword -> SIGNED . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> SIGNED
-- On WITH reduce production c_keyword -> SIGNED
-- On VOLATILE reduce production c_keyword -> SIGNED
-- On VOID reduce production c_keyword -> SIGNED
-- On VARIANT reduce production c_keyword -> SIGNED
-- On VALID_READ reduce production c_keyword -> SIGNED
-- On VALID_RANGE reduce production c_keyword -> SIGNED
-- On VALID_INDEX reduce production c_keyword -> SIGNED
-- On VALID reduce production c_keyword -> SIGNED
-- On UNSIGNED reduce production c_keyword -> SIGNED
-- On UNION reduce production c_keyword -> SIGNED
-- On UNALLOCATED reduce production c_keyword -> SIGNED
-- On TYPEOF reduce production c_keyword -> SIGNED
-- On TYPENAME reduce production c_keyword -> SIGNED
-- On TYPE reduce production c_keyword -> SIGNED
-- On TRUE reduce production c_keyword -> SIGNED
-- On TILDE reduce production c_keyword -> SIGNED
-- On TERMINATES reduce production c_keyword -> SIGNED
-- On STRUCT reduce production c_keyword -> SIGNED
-- On STRING_LITERAL reduce production c_keyword -> SIGNED
-- On STATIC reduce production c_keyword -> SIGNED
-- On STAR reduce production c_keyword -> SIGNED
-- On SLICE reduce production c_keyword -> SIGNED
-- On SLASH reduce production c_keyword -> SIGNED
-- On SIZEOF reduce production c_keyword -> SIGNED
-- On SIGNED reduce production c_keyword -> SIGNED
-- On SHORT reduce production c_keyword -> SIGNED
-- On SEPARATED reduce production c_keyword -> SIGNED
-- On SEMICOLON reduce production c_keyword -> SIGNED
-- On RSQUARE reduce production c_keyword -> SIGNED
-- On RPAR reduce production c_keyword -> SIGNED
-- On RETURNS reduce production c_keyword -> SIGNED
-- On RESULT reduce production c_keyword -> SIGNED
-- On REQUIRES reduce production c_keyword -> SIGNED
-- On REGISTER reduce production c_keyword -> SIGNED
-- On REAL reduce production c_keyword -> SIGNED
-- On READS reduce production c_keyword -> SIGNED
-- On RBRACE reduce production c_keyword -> SIGNED
-- On QUESTION reduce production c_keyword -> SIGNED
-- On PREDICATE reduce production c_keyword -> SIGNED
-- On PRAGMA reduce production c_keyword -> SIGNED
-- On PLUS reduce production c_keyword -> SIGNED
-- On PIPE reduce production c_keyword -> SIGNED
-- On PERCENT reduce production c_keyword -> SIGNED
-- On OR reduce production c_keyword -> SIGNED
-- On OLD reduce production c_keyword -> SIGNED
-- On OFFSET reduce production c_keyword -> SIGNED
-- On NULL reduce production c_keyword -> SIGNED
-- On NOTHING reduce production c_keyword -> SIGNED
-- On NOT reduce production c_keyword -> SIGNED
-- On NE reduce production c_keyword -> SIGNED
-- On MODULE reduce production c_keyword -> SIGNED
-- On MODEL reduce production c_keyword -> SIGNED
-- On MINUS reduce production c_keyword -> SIGNED
-- On LTLT reduce production c_keyword -> SIGNED
-- On LTCOLON reduce production c_keyword -> SIGNED
-- On LT reduce production c_keyword -> SIGNED
-- On LSQUARE reduce production c_keyword -> SIGNED
-- On LPAR reduce production c_keyword -> SIGNED
-- On LOOP reduce production c_keyword -> SIGNED
-- On LONG reduce production c_keyword -> SIGNED
-- On LOGIC reduce production c_keyword -> SIGNED
-- On LET reduce production c_keyword -> SIGNED
-- On LEMMA reduce production c_keyword -> SIGNED
-- On LE reduce production c_keyword -> SIGNED
-- On LBRACE reduce production c_keyword -> SIGNED
-- On LAMBDA reduce production c_keyword -> SIGNED
-- On LABEL reduce production c_keyword -> SIGNED
-- On INVARIANT reduce production c_keyword -> SIGNED
-- On INTER reduce production c_keyword -> SIGNED
-- On INTEGER reduce production c_keyword -> SIGNED
-- On INT reduce production c_keyword -> SIGNED
-- On INITIALIZED reduce production c_keyword -> SIGNED
-- On INDUCTIVE reduce production c_keyword -> SIGNED
-- On INCLUDE reduce production c_keyword -> SIGNED
-- On IMPLIES reduce production c_keyword -> SIGNED
-- On IMPACT reduce production c_keyword -> SIGNED
-- On IFF reduce production c_keyword -> SIGNED
-- On IF reduce production c_keyword -> SIGNED
-- On IDENTIFIER reduce production c_keyword -> SIGNED
-- On HATHAT reduce production c_keyword -> SIGNED
-- On HAT reduce production c_keyword -> SIGNED
-- On GTGT reduce production c_keyword -> SIGNED
-- On GT reduce production c_keyword -> SIGNED
-- On GLOBAL reduce production c_keyword -> SIGNED
-- On GHOST reduce production c_keyword -> SIGNED
-- On GE reduce production c_keyword -> SIGNED
-- On FUNCTION reduce production c_keyword -> SIGNED
-- On FROM reduce production c_keyword -> SIGNED
-- On FRESH reduce production c_keyword -> SIGNED
-- On FREES reduce production c_keyword -> SIGNED
-- On FREEABLE reduce production c_keyword -> SIGNED
-- On FORALL reduce production c_keyword -> SIGNED
-- On FOR reduce production c_keyword -> SIGNED
-- On FLOAT reduce production c_keyword -> SIGNED
-- On FALSE reduce production c_keyword -> SIGNED
-- On EXT_LET reduce production c_keyword -> SIGNED
-- On EXT_AT reduce production c_keyword -> SIGNED
-- On EXITS reduce production c_keyword -> SIGNED
-- On EXISTS reduce production c_keyword -> SIGNED
-- On EQUAL reduce production c_keyword -> SIGNED
-- On EQ reduce production c_keyword -> SIGNED
-- On EOF reduce production c_keyword -> SIGNED
-- On ENUM reduce production c_keyword -> SIGNED
-- On ENSURES reduce production c_keyword -> SIGNED
-- On EMPTY reduce production c_keyword -> SIGNED
-- On ELSE reduce production c_keyword -> SIGNED
-- On DYNAMIC reduce production c_keyword -> SIGNED
-- On DOUBLE reduce production c_keyword -> SIGNED
-- On DOTDOTDOT reduce production c_keyword -> SIGNED
-- On DOTDOT reduce production c_keyword -> SIGNED
-- On DOT reduce production c_keyword -> SIGNED
-- On DOLLAR reduce production c_keyword -> SIGNED
-- On DISJOINT reduce production c_keyword -> SIGNED
-- On DECREASES reduce production c_keyword -> SIGNED
-- On DANGLING reduce production c_keyword -> SIGNED
-- On CUSTOM reduce production c_keyword -> SIGNED
-- On CONTRACT reduce production c_keyword -> SIGNED
-- On CONTINUES reduce production c_keyword -> SIGNED
-- On CONSTANT10 reduce production c_keyword -> SIGNED
-- On CONSTANT reduce production c_keyword -> SIGNED
-- On CONST reduce production c_keyword -> SIGNED
-- On COMPLETE reduce production c_keyword -> SIGNED
-- On COMMA reduce production c_keyword -> SIGNED
-- On COLONGT reduce production c_keyword -> SIGNED
-- On COLONCOLON reduce production c_keyword -> SIGNED
-- On COLON2 reduce production c_keyword -> SIGNED
-- On COLON reduce production c_keyword -> SIGNED
-- On CHAR reduce production c_keyword -> SIGNED
-- On CASE reduce production c_keyword -> SIGNED
-- On BSUNION reduce production c_keyword -> SIGNED
-- On BSTYPE reduce production c_keyword -> SIGNED
-- On BREAKS reduce production c_keyword -> SIGNED
-- On BOOLEAN reduce production c_keyword -> SIGNED
-- On BOOL reduce production c_keyword -> SIGNED
-- On BLOCK_LENGTH reduce production c_keyword -> SIGNED
-- On BIMPLIES reduce production c_keyword -> SIGNED
-- On BIFF reduce production c_keyword -> SIGNED
-- On BEHAVIORS reduce production c_keyword -> SIGNED
-- On BEHAVIOR reduce production c_keyword -> SIGNED
-- On BASE_ADDR reduce production c_keyword -> SIGNED
-- On AXIOMATIC reduce production c_keyword -> SIGNED
-- On AXIOM reduce production c_keyword -> SIGNED
-- On AUTOMATIC reduce production c_keyword -> SIGNED
-- On AT reduce production c_keyword -> SIGNED
-- On ASSUMES reduce production c_keyword -> SIGNED
-- On ASSIGNS reduce production c_keyword -> SIGNED
-- On ASSERT reduce production c_keyword -> SIGNED
-- On ARROW reduce production c_keyword -> SIGNED
-- On AND reduce production c_keyword -> SIGNED
-- On AMP reduce production c_keyword -> SIGNED
-- On ALLOCATION reduce production c_keyword -> SIGNED
-- On ALLOCATES reduce production c_keyword -> SIGNED
-- On ALLOCABLE reduce production c_keyword -> SIGNED

State 18:
## Known stack suffix:
## SHORT
## LR(1) items:
c_keyword -> SHORT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> SHORT
-- On WITH reduce production c_keyword -> SHORT
-- On VOLATILE reduce production c_keyword -> SHORT
-- On VOID reduce production c_keyword -> SHORT
-- On VARIANT reduce production c_keyword -> SHORT
-- On VALID_READ reduce production c_keyword -> SHORT
-- On VALID_RANGE reduce production c_keyword -> SHORT
-- On VALID_INDEX reduce production c_keyword -> SHORT
-- On VALID reduce production c_keyword -> SHORT
-- On UNSIGNED reduce production c_keyword -> SHORT
-- On UNION reduce production c_keyword -> SHORT
-- On UNALLOCATED reduce production c_keyword -> SHORT
-- On TYPEOF reduce production c_keyword -> SHORT
-- On TYPENAME reduce production c_keyword -> SHORT
-- On TYPE reduce production c_keyword -> SHORT
-- On TRUE reduce production c_keyword -> SHORT
-- On TILDE reduce production c_keyword -> SHORT
-- On TERMINATES reduce production c_keyword -> SHORT
-- On STRUCT reduce production c_keyword -> SHORT
-- On STRING_LITERAL reduce production c_keyword -> SHORT
-- On STATIC reduce production c_keyword -> SHORT
-- On STAR reduce production c_keyword -> SHORT
-- On SLICE reduce production c_keyword -> SHORT
-- On SLASH reduce production c_keyword -> SHORT
-- On SIZEOF reduce production c_keyword -> SHORT
-- On SIGNED reduce production c_keyword -> SHORT
-- On SHORT reduce production c_keyword -> SHORT
-- On SEPARATED reduce production c_keyword -> SHORT
-- On SEMICOLON reduce production c_keyword -> SHORT
-- On RSQUARE reduce production c_keyword -> SHORT
-- On RPAR reduce production c_keyword -> SHORT
-- On RETURNS reduce production c_keyword -> SHORT
-- On RESULT reduce production c_keyword -> SHORT
-- On REQUIRES reduce production c_keyword -> SHORT
-- On REGISTER reduce production c_keyword -> SHORT
-- On REAL reduce production c_keyword -> SHORT
-- On READS reduce production c_keyword -> SHORT
-- On RBRACE reduce production c_keyword -> SHORT
-- On QUESTION reduce production c_keyword -> SHORT
-- On PREDICATE reduce production c_keyword -> SHORT
-- On PRAGMA reduce production c_keyword -> SHORT
-- On PLUS reduce production c_keyword -> SHORT
-- On PIPE reduce production c_keyword -> SHORT
-- On PERCENT reduce production c_keyword -> SHORT
-- On OR reduce production c_keyword -> SHORT
-- On OLD reduce production c_keyword -> SHORT
-- On OFFSET reduce production c_keyword -> SHORT
-- On NULL reduce production c_keyword -> SHORT
-- On NOTHING reduce production c_keyword -> SHORT
-- On NOT reduce production c_keyword -> SHORT
-- On NE reduce production c_keyword -> SHORT
-- On MODULE reduce production c_keyword -> SHORT
-- On MODEL reduce production c_keyword -> SHORT
-- On MINUS reduce production c_keyword -> SHORT
-- On LTLT reduce production c_keyword -> SHORT
-- On LTCOLON reduce production c_keyword -> SHORT
-- On LT reduce production c_keyword -> SHORT
-- On LSQUARE reduce production c_keyword -> SHORT
-- On LPAR reduce production c_keyword -> SHORT
-- On LOOP reduce production c_keyword -> SHORT
-- On LONG reduce production c_keyword -> SHORT
-- On LOGIC reduce production c_keyword -> SHORT
-- On LET reduce production c_keyword -> SHORT
-- On LEMMA reduce production c_keyword -> SHORT
-- On LE reduce production c_keyword -> SHORT
-- On LBRACE reduce production c_keyword -> SHORT
-- On LAMBDA reduce production c_keyword -> SHORT
-- On LABEL reduce production c_keyword -> SHORT
-- On INVARIANT reduce production c_keyword -> SHORT
-- On INTER reduce production c_keyword -> SHORT
-- On INTEGER reduce production c_keyword -> SHORT
-- On INT reduce production c_keyword -> SHORT
-- On INITIALIZED reduce production c_keyword -> SHORT
-- On INDUCTIVE reduce production c_keyword -> SHORT
-- On INCLUDE reduce production c_keyword -> SHORT
-- On IMPLIES reduce production c_keyword -> SHORT
-- On IMPACT reduce production c_keyword -> SHORT
-- On IFF reduce production c_keyword -> SHORT
-- On IF reduce production c_keyword -> SHORT
-- On IDENTIFIER reduce production c_keyword -> SHORT
-- On HATHAT reduce production c_keyword -> SHORT
-- On HAT reduce production c_keyword -> SHORT
-- On GTGT reduce production c_keyword -> SHORT
-- On GT reduce production c_keyword -> SHORT
-- On GLOBAL reduce production c_keyword -> SHORT
-- On GHOST reduce production c_keyword -> SHORT
-- On GE reduce production c_keyword -> SHORT
-- On FUNCTION reduce production c_keyword -> SHORT
-- On FROM reduce production c_keyword -> SHORT
-- On FRESH reduce production c_keyword -> SHORT
-- On FREES reduce production c_keyword -> SHORT
-- On FREEABLE reduce production c_keyword -> SHORT
-- On FORALL reduce production c_keyword -> SHORT
-- On FOR reduce production c_keyword -> SHORT
-- On FLOAT reduce production c_keyword -> SHORT
-- On FALSE reduce production c_keyword -> SHORT
-- On EXT_LET reduce production c_keyword -> SHORT
-- On EXT_AT reduce production c_keyword -> SHORT
-- On EXITS reduce production c_keyword -> SHORT
-- On EXISTS reduce production c_keyword -> SHORT
-- On EQUAL reduce production c_keyword -> SHORT
-- On EQ reduce production c_keyword -> SHORT
-- On EOF reduce production c_keyword -> SHORT
-- On ENUM reduce production c_keyword -> SHORT
-- On ENSURES reduce production c_keyword -> SHORT
-- On EMPTY reduce production c_keyword -> SHORT
-- On ELSE reduce production c_keyword -> SHORT
-- On DYNAMIC reduce production c_keyword -> SHORT
-- On DOUBLE reduce production c_keyword -> SHORT
-- On DOTDOTDOT reduce production c_keyword -> SHORT
-- On DOTDOT reduce production c_keyword -> SHORT
-- On DOT reduce production c_keyword -> SHORT
-- On DOLLAR reduce production c_keyword -> SHORT
-- On DISJOINT reduce production c_keyword -> SHORT
-- On DECREASES reduce production c_keyword -> SHORT
-- On DANGLING reduce production c_keyword -> SHORT
-- On CUSTOM reduce production c_keyword -> SHORT
-- On CONTRACT reduce production c_keyword -> SHORT
-- On CONTINUES reduce production c_keyword -> SHORT
-- On CONSTANT10 reduce production c_keyword -> SHORT
-- On CONSTANT reduce production c_keyword -> SHORT
-- On CONST reduce production c_keyword -> SHORT
-- On COMPLETE reduce production c_keyword -> SHORT
-- On COMMA reduce production c_keyword -> SHORT
-- On COLONGT reduce production c_keyword -> SHORT
-- On COLONCOLON reduce production c_keyword -> SHORT
-- On COLON2 reduce production c_keyword -> SHORT
-- On COLON reduce production c_keyword -> SHORT
-- On CHAR reduce production c_keyword -> SHORT
-- On CASE reduce production c_keyword -> SHORT
-- On BSUNION reduce production c_keyword -> SHORT
-- On BSTYPE reduce production c_keyword -> SHORT
-- On BREAKS reduce production c_keyword -> SHORT
-- On BOOLEAN reduce production c_keyword -> SHORT
-- On BOOL reduce production c_keyword -> SHORT
-- On BLOCK_LENGTH reduce production c_keyword -> SHORT
-- On BIMPLIES reduce production c_keyword -> SHORT
-- On BIFF reduce production c_keyword -> SHORT
-- On BEHAVIORS reduce production c_keyword -> SHORT
-- On BEHAVIOR reduce production c_keyword -> SHORT
-- On BASE_ADDR reduce production c_keyword -> SHORT
-- On AXIOMATIC reduce production c_keyword -> SHORT
-- On AXIOM reduce production c_keyword -> SHORT
-- On AUTOMATIC reduce production c_keyword -> SHORT
-- On AT reduce production c_keyword -> SHORT
-- On ASSUMES reduce production c_keyword -> SHORT
-- On ASSIGNS reduce production c_keyword -> SHORT
-- On ASSERT reduce production c_keyword -> SHORT
-- On ARROW reduce production c_keyword -> SHORT
-- On AND reduce production c_keyword -> SHORT
-- On AMP reduce production c_keyword -> SHORT
-- On ALLOCATION reduce production c_keyword -> SHORT
-- On ALLOCATES reduce production c_keyword -> SHORT
-- On ALLOCABLE reduce production c_keyword -> SHORT

State 19:
## Known stack suffix:
## RETURNS
## LR(1) items:
post_cond -> RETURNS . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production post_cond -> RETURNS
-- On WITH reduce production post_cond -> RETURNS
-- On VOLATILE reduce production post_cond -> RETURNS
-- On VOID reduce production post_cond -> RETURNS
-- On VARIANT reduce production post_cond -> RETURNS
-- On VALID_READ reduce production post_cond -> RETURNS
-- On VALID_RANGE reduce production post_cond -> RETURNS
-- On VALID_INDEX reduce production post_cond -> RETURNS
-- On VALID reduce production post_cond -> RETURNS
-- On UNSIGNED reduce production post_cond -> RETURNS
-- On UNION reduce production post_cond -> RETURNS
-- On UNALLOCATED reduce production post_cond -> RETURNS
-- On TYPEOF reduce production post_cond -> RETURNS
-- On TYPENAME reduce production post_cond -> RETURNS
-- On TYPE reduce production post_cond -> RETURNS
-- On TRUE reduce production post_cond -> RETURNS
-- On TILDE reduce production post_cond -> RETURNS
-- On TERMINATES reduce production post_cond -> RETURNS
-- On STRUCT reduce production post_cond -> RETURNS
-- On STRING_LITERAL reduce production post_cond -> RETURNS
-- On STATIC reduce production post_cond -> RETURNS
-- On STAR reduce production post_cond -> RETURNS
-- On SLICE reduce production post_cond -> RETURNS
-- On SLASH reduce production post_cond -> RETURNS
-- On SIZEOF reduce production post_cond -> RETURNS
-- On SIGNED reduce production post_cond -> RETURNS
-- On SHORT reduce production post_cond -> RETURNS
-- On SEPARATED reduce production post_cond -> RETURNS
-- On SEMICOLON reduce production post_cond -> RETURNS
-- On RSQUARE reduce production post_cond -> RETURNS
-- On RPAR reduce production post_cond -> RETURNS
-- On RETURNS reduce production post_cond -> RETURNS
-- On RESULT reduce production post_cond -> RETURNS
-- On REQUIRES reduce production post_cond -> RETURNS
-- On REGISTER reduce production post_cond -> RETURNS
-- On REAL reduce production post_cond -> RETURNS
-- On READS reduce production post_cond -> RETURNS
-- On RBRACE reduce production post_cond -> RETURNS
-- On QUESTION reduce production post_cond -> RETURNS
-- On PREDICATE reduce production post_cond -> RETURNS
-- On PRAGMA reduce production post_cond -> RETURNS
-- On PLUS reduce production post_cond -> RETURNS
-- On PIPE reduce production post_cond -> RETURNS
-- On PERCENT reduce production post_cond -> RETURNS
-- On OR reduce production post_cond -> RETURNS
-- On OLD reduce production post_cond -> RETURNS
-- On OFFSET reduce production post_cond -> RETURNS
-- On NULL reduce production post_cond -> RETURNS
-- On NOTHING reduce production post_cond -> RETURNS
-- On NOT reduce production post_cond -> RETURNS
-- On NE reduce production post_cond -> RETURNS
-- On MODULE reduce production post_cond -> RETURNS
-- On MODEL reduce production post_cond -> RETURNS
-- On MINUS reduce production post_cond -> RETURNS
-- On LTLT reduce production post_cond -> RETURNS
-- On LTCOLON reduce production post_cond -> RETURNS
-- On LT reduce production post_cond -> RETURNS
-- On LSQUARE reduce production post_cond -> RETURNS
-- On LPAR reduce production post_cond -> RETURNS
-- On LOOP reduce production post_cond -> RETURNS
-- On LONG reduce production post_cond -> RETURNS
-- On LOGIC reduce production post_cond -> RETURNS
-- On LET reduce production post_cond -> RETURNS
-- On LEMMA reduce production post_cond -> RETURNS
-- On LE reduce production post_cond -> RETURNS
-- On LBRACE reduce production post_cond -> RETURNS
-- On LAMBDA reduce production post_cond -> RETURNS
-- On LABEL reduce production post_cond -> RETURNS
-- On INVARIANT reduce production post_cond -> RETURNS
-- On INTER reduce production post_cond -> RETURNS
-- On INTEGER reduce production post_cond -> RETURNS
-- On INT reduce production post_cond -> RETURNS
-- On INITIALIZED reduce production post_cond -> RETURNS
-- On INDUCTIVE reduce production post_cond -> RETURNS
-- On INCLUDE reduce production post_cond -> RETURNS
-- On IMPLIES reduce production post_cond -> RETURNS
-- On IMPACT reduce production post_cond -> RETURNS
-- On IFF reduce production post_cond -> RETURNS
-- On IF reduce production post_cond -> RETURNS
-- On IDENTIFIER reduce production post_cond -> RETURNS
-- On HATHAT reduce production post_cond -> RETURNS
-- On HAT reduce production post_cond -> RETURNS
-- On GTGT reduce production post_cond -> RETURNS
-- On GT reduce production post_cond -> RETURNS
-- On GLOBAL reduce production post_cond -> RETURNS
-- On GHOST reduce production post_cond -> RETURNS
-- On GE reduce production post_cond -> RETURNS
-- On FUNCTION reduce production post_cond -> RETURNS
-- On FROM reduce production post_cond -> RETURNS
-- On FRESH reduce production post_cond -> RETURNS
-- On FREES reduce production post_cond -> RETURNS
-- On FREEABLE reduce production post_cond -> RETURNS
-- On FORALL reduce production post_cond -> RETURNS
-- On FOR reduce production post_cond -> RETURNS
-- On FLOAT reduce production post_cond -> RETURNS
-- On FALSE reduce production post_cond -> RETURNS
-- On EXT_LET reduce production post_cond -> RETURNS
-- On EXT_AT reduce production post_cond -> RETURNS
-- On EXITS reduce production post_cond -> RETURNS
-- On EXISTS reduce production post_cond -> RETURNS
-- On EQUAL reduce production post_cond -> RETURNS
-- On EQ reduce production post_cond -> RETURNS
-- On EOF reduce production post_cond -> RETURNS
-- On ENUM reduce production post_cond -> RETURNS
-- On ENSURES reduce production post_cond -> RETURNS
-- On EMPTY reduce production post_cond -> RETURNS
-- On ELSE reduce production post_cond -> RETURNS
-- On DYNAMIC reduce production post_cond -> RETURNS
-- On DOUBLE reduce production post_cond -> RETURNS
-- On DOTDOTDOT reduce production post_cond -> RETURNS
-- On DOTDOT reduce production post_cond -> RETURNS
-- On DOT reduce production post_cond -> RETURNS
-- On DOLLAR reduce production post_cond -> RETURNS
-- On DISJOINT reduce production post_cond -> RETURNS
-- On DECREASES reduce production post_cond -> RETURNS
-- On DANGLING reduce production post_cond -> RETURNS
-- On CUSTOM reduce production post_cond -> RETURNS
-- On CONTRACT reduce production post_cond -> RETURNS
-- On CONTINUES reduce production post_cond -> RETURNS
-- On CONSTANT10 reduce production post_cond -> RETURNS
-- On CONSTANT reduce production post_cond -> RETURNS
-- On CONST reduce production post_cond -> RETURNS
-- On COMPLETE reduce production post_cond -> RETURNS
-- On COMMA reduce production post_cond -> RETURNS
-- On COLONGT reduce production post_cond -> RETURNS
-- On COLONCOLON reduce production post_cond -> RETURNS
-- On COLON2 reduce production post_cond -> RETURNS
-- On COLON reduce production post_cond -> RETURNS
-- On CHAR reduce production post_cond -> RETURNS
-- On CASE reduce production post_cond -> RETURNS
-- On BSUNION reduce production post_cond -> RETURNS
-- On BSTYPE reduce production post_cond -> RETURNS
-- On BREAKS reduce production post_cond -> RETURNS
-- On BOOLEAN reduce production post_cond -> RETURNS
-- On BOOL reduce production post_cond -> RETURNS
-- On BLOCK_LENGTH reduce production post_cond -> RETURNS
-- On BIMPLIES reduce production post_cond -> RETURNS
-- On BIFF reduce production post_cond -> RETURNS
-- On BEHAVIORS reduce production post_cond -> RETURNS
-- On BEHAVIOR reduce production post_cond -> RETURNS
-- On BASE_ADDR reduce production post_cond -> RETURNS
-- On AXIOMATIC reduce production post_cond -> RETURNS
-- On AXIOM reduce production post_cond -> RETURNS
-- On AUTOMATIC reduce production post_cond -> RETURNS
-- On AT reduce production post_cond -> RETURNS
-- On ASSUMES reduce production post_cond -> RETURNS
-- On ASSIGNS reduce production post_cond -> RETURNS
-- On ASSERT reduce production post_cond -> RETURNS
-- On ARROW reduce production post_cond -> RETURNS
-- On AND reduce production post_cond -> RETURNS
-- On AMP reduce production post_cond -> RETURNS
-- On ALLOCATION reduce production post_cond -> RETURNS
-- On ALLOCATES reduce production post_cond -> RETURNS
-- On ALLOCABLE reduce production post_cond -> RETURNS

State 20:
## Known stack suffix:
## REQUIRES
## LR(1) items:
is_acsl_spec -> REQUIRES . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_spec -> REQUIRES
-- On WITH reduce production is_acsl_spec -> REQUIRES
-- On VOLATILE reduce production is_acsl_spec -> REQUIRES
-- On VOID reduce production is_acsl_spec -> REQUIRES
-- On VARIANT reduce production is_acsl_spec -> REQUIRES
-- On VALID_READ reduce production is_acsl_spec -> REQUIRES
-- On VALID_RANGE reduce production is_acsl_spec -> REQUIRES
-- On VALID_INDEX reduce production is_acsl_spec -> REQUIRES
-- On VALID reduce production is_acsl_spec -> REQUIRES
-- On UNSIGNED reduce production is_acsl_spec -> REQUIRES
-- On UNION reduce production is_acsl_spec -> REQUIRES
-- On UNALLOCATED reduce production is_acsl_spec -> REQUIRES
-- On TYPEOF reduce production is_acsl_spec -> REQUIRES
-- On TYPENAME reduce production is_acsl_spec -> REQUIRES
-- On TYPE reduce production is_acsl_spec -> REQUIRES
-- On TRUE reduce production is_acsl_spec -> REQUIRES
-- On TILDE reduce production is_acsl_spec -> REQUIRES
-- On TERMINATES reduce production is_acsl_spec -> REQUIRES
-- On STRUCT reduce production is_acsl_spec -> REQUIRES
-- On STRING_LITERAL reduce production is_acsl_spec -> REQUIRES
-- On STATIC reduce production is_acsl_spec -> REQUIRES
-- On STAR reduce production is_acsl_spec -> REQUIRES
-- On SLICE reduce production is_acsl_spec -> REQUIRES
-- On SLASH reduce production is_acsl_spec -> REQUIRES
-- On SIZEOF reduce production is_acsl_spec -> REQUIRES
-- On SIGNED reduce production is_acsl_spec -> REQUIRES
-- On SHORT reduce production is_acsl_spec -> REQUIRES
-- On SEPARATED reduce production is_acsl_spec -> REQUIRES
-- On SEMICOLON reduce production is_acsl_spec -> REQUIRES
-- On RSQUARE reduce production is_acsl_spec -> REQUIRES
-- On RPAR reduce production is_acsl_spec -> REQUIRES
-- On RETURNS reduce production is_acsl_spec -> REQUIRES
-- On RESULT reduce production is_acsl_spec -> REQUIRES
-- On REQUIRES reduce production is_acsl_spec -> REQUIRES
-- On REGISTER reduce production is_acsl_spec -> REQUIRES
-- On REAL reduce production is_acsl_spec -> REQUIRES
-- On READS reduce production is_acsl_spec -> REQUIRES
-- On RBRACE reduce production is_acsl_spec -> REQUIRES
-- On QUESTION reduce production is_acsl_spec -> REQUIRES
-- On PREDICATE reduce production is_acsl_spec -> REQUIRES
-- On PRAGMA reduce production is_acsl_spec -> REQUIRES
-- On PLUS reduce production is_acsl_spec -> REQUIRES
-- On PIPE reduce production is_acsl_spec -> REQUIRES
-- On PERCENT reduce production is_acsl_spec -> REQUIRES
-- On OR reduce production is_acsl_spec -> REQUIRES
-- On OLD reduce production is_acsl_spec -> REQUIRES
-- On OFFSET reduce production is_acsl_spec -> REQUIRES
-- On NULL reduce production is_acsl_spec -> REQUIRES
-- On NOTHING reduce production is_acsl_spec -> REQUIRES
-- On NOT reduce production is_acsl_spec -> REQUIRES
-- On NE reduce production is_acsl_spec -> REQUIRES
-- On MODULE reduce production is_acsl_spec -> REQUIRES
-- On MODEL reduce production is_acsl_spec -> REQUIRES
-- On MINUS reduce production is_acsl_spec -> REQUIRES
-- On LTLT reduce production is_acsl_spec -> REQUIRES
-- On LTCOLON reduce production is_acsl_spec -> REQUIRES
-- On LT reduce production is_acsl_spec -> REQUIRES
-- On LSQUARE reduce production is_acsl_spec -> REQUIRES
-- On LPAR reduce production is_acsl_spec -> REQUIRES
-- On LOOP reduce production is_acsl_spec -> REQUIRES
-- On LONG reduce production is_acsl_spec -> REQUIRES
-- On LOGIC reduce production is_acsl_spec -> REQUIRES
-- On LET reduce production is_acsl_spec -> REQUIRES
-- On LEMMA reduce production is_acsl_spec -> REQUIRES
-- On LE reduce production is_acsl_spec -> REQUIRES
-- On LBRACE reduce production is_acsl_spec -> REQUIRES
-- On LAMBDA reduce production is_acsl_spec -> REQUIRES
-- On LABEL reduce production is_acsl_spec -> REQUIRES
-- On INVARIANT reduce production is_acsl_spec -> REQUIRES
-- On INTER reduce production is_acsl_spec -> REQUIRES
-- On INTEGER reduce production is_acsl_spec -> REQUIRES
-- On INT reduce production is_acsl_spec -> REQUIRES
-- On INITIALIZED reduce production is_acsl_spec -> REQUIRES
-- On INDUCTIVE reduce production is_acsl_spec -> REQUIRES
-- On INCLUDE reduce production is_acsl_spec -> REQUIRES
-- On IMPLIES reduce production is_acsl_spec -> REQUIRES
-- On IMPACT reduce production is_acsl_spec -> REQUIRES
-- On IFF reduce production is_acsl_spec -> REQUIRES
-- On IF reduce production is_acsl_spec -> REQUIRES
-- On IDENTIFIER reduce production is_acsl_spec -> REQUIRES
-- On HATHAT reduce production is_acsl_spec -> REQUIRES
-- On HAT reduce production is_acsl_spec -> REQUIRES
-- On GTGT reduce production is_acsl_spec -> REQUIRES
-- On GT reduce production is_acsl_spec -> REQUIRES
-- On GLOBAL reduce production is_acsl_spec -> REQUIRES
-- On GHOST reduce production is_acsl_spec -> REQUIRES
-- On GE reduce production is_acsl_spec -> REQUIRES
-- On FUNCTION reduce production is_acsl_spec -> REQUIRES
-- On FROM reduce production is_acsl_spec -> REQUIRES
-- On FRESH reduce production is_acsl_spec -> REQUIRES
-- On FREES reduce production is_acsl_spec -> REQUIRES
-- On FREEABLE reduce production is_acsl_spec -> REQUIRES
-- On FORALL reduce production is_acsl_spec -> REQUIRES
-- On FOR reduce production is_acsl_spec -> REQUIRES
-- On FLOAT reduce production is_acsl_spec -> REQUIRES
-- On FALSE reduce production is_acsl_spec -> REQUIRES
-- On EXT_LET reduce production is_acsl_spec -> REQUIRES
-- On EXT_AT reduce production is_acsl_spec -> REQUIRES
-- On EXITS reduce production is_acsl_spec -> REQUIRES
-- On EXISTS reduce production is_acsl_spec -> REQUIRES
-- On EQUAL reduce production is_acsl_spec -> REQUIRES
-- On EQ reduce production is_acsl_spec -> REQUIRES
-- On EOF reduce production is_acsl_spec -> REQUIRES
-- On ENUM reduce production is_acsl_spec -> REQUIRES
-- On ENSURES reduce production is_acsl_spec -> REQUIRES
-- On EMPTY reduce production is_acsl_spec -> REQUIRES
-- On ELSE reduce production is_acsl_spec -> REQUIRES
-- On DYNAMIC reduce production is_acsl_spec -> REQUIRES
-- On DOUBLE reduce production is_acsl_spec -> REQUIRES
-- On DOTDOTDOT reduce production is_acsl_spec -> REQUIRES
-- On DOTDOT reduce production is_acsl_spec -> REQUIRES
-- On DOT reduce production is_acsl_spec -> REQUIRES
-- On DOLLAR reduce production is_acsl_spec -> REQUIRES
-- On DISJOINT reduce production is_acsl_spec -> REQUIRES
-- On DECREASES reduce production is_acsl_spec -> REQUIRES
-- On DANGLING reduce production is_acsl_spec -> REQUIRES
-- On CUSTOM reduce production is_acsl_spec -> REQUIRES
-- On CONTRACT reduce production is_acsl_spec -> REQUIRES
-- On CONTINUES reduce production is_acsl_spec -> REQUIRES
-- On CONSTANT10 reduce production is_acsl_spec -> REQUIRES
-- On CONSTANT reduce production is_acsl_spec -> REQUIRES
-- On CONST reduce production is_acsl_spec -> REQUIRES
-- On COMPLETE reduce production is_acsl_spec -> REQUIRES
-- On COMMA reduce production is_acsl_spec -> REQUIRES
-- On COLONGT reduce production is_acsl_spec -> REQUIRES
-- On COLONCOLON reduce production is_acsl_spec -> REQUIRES
-- On COLON2 reduce production is_acsl_spec -> REQUIRES
-- On COLON reduce production is_acsl_spec -> REQUIRES
-- On CHAR reduce production is_acsl_spec -> REQUIRES
-- On CASE reduce production is_acsl_spec -> REQUIRES
-- On BSUNION reduce production is_acsl_spec -> REQUIRES
-- On BSTYPE reduce production is_acsl_spec -> REQUIRES
-- On BREAKS reduce production is_acsl_spec -> REQUIRES
-- On BOOLEAN reduce production is_acsl_spec -> REQUIRES
-- On BOOL reduce production is_acsl_spec -> REQUIRES
-- On BLOCK_LENGTH reduce production is_acsl_spec -> REQUIRES
-- On BIMPLIES reduce production is_acsl_spec -> REQUIRES
-- On BIFF reduce production is_acsl_spec -> REQUIRES
-- On BEHAVIORS reduce production is_acsl_spec -> REQUIRES
-- On BEHAVIOR reduce production is_acsl_spec -> REQUIRES
-- On BASE_ADDR reduce production is_acsl_spec -> REQUIRES
-- On AXIOMATIC reduce production is_acsl_spec -> REQUIRES
-- On AXIOM reduce production is_acsl_spec -> REQUIRES
-- On AUTOMATIC reduce production is_acsl_spec -> REQUIRES
-- On AT reduce production is_acsl_spec -> REQUIRES
-- On ASSUMES reduce production is_acsl_spec -> REQUIRES
-- On ASSIGNS reduce production is_acsl_spec -> REQUIRES
-- On ASSERT reduce production is_acsl_spec -> REQUIRES
-- On ARROW reduce production is_acsl_spec -> REQUIRES
-- On AND reduce production is_acsl_spec -> REQUIRES
-- On AMP reduce production is_acsl_spec -> REQUIRES
-- On ALLOCATION reduce production is_acsl_spec -> REQUIRES
-- On ALLOCATES reduce production is_acsl_spec -> REQUIRES
-- On ALLOCABLE reduce production is_acsl_spec -> REQUIRES

State 21:
## Known stack suffix:
## REAL
## LR(1) items:
is_acsl_other -> REAL . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_other -> REAL
-- On WITH reduce production is_acsl_other -> REAL
-- On VOLATILE reduce production is_acsl_other -> REAL
-- On VOID reduce production is_acsl_other -> REAL
-- On VARIANT reduce production is_acsl_other -> REAL
-- On VALID_READ reduce production is_acsl_other -> REAL
-- On VALID_RANGE reduce production is_acsl_other -> REAL
-- On VALID_INDEX reduce production is_acsl_other -> REAL
-- On VALID reduce production is_acsl_other -> REAL
-- On UNSIGNED reduce production is_acsl_other -> REAL
-- On UNION reduce production is_acsl_other -> REAL
-- On UNALLOCATED reduce production is_acsl_other -> REAL
-- On TYPEOF reduce production is_acsl_other -> REAL
-- On TYPENAME reduce production is_acsl_other -> REAL
-- On TYPE reduce production is_acsl_other -> REAL
-- On TRUE reduce production is_acsl_other -> REAL
-- On TILDE reduce production is_acsl_other -> REAL
-- On TERMINATES reduce production is_acsl_other -> REAL
-- On STRUCT reduce production is_acsl_other -> REAL
-- On STRING_LITERAL reduce production is_acsl_other -> REAL
-- On STATIC reduce production is_acsl_other -> REAL
-- On STAR reduce production is_acsl_other -> REAL
-- On SLICE reduce production is_acsl_other -> REAL
-- On SLASH reduce production is_acsl_other -> REAL
-- On SIZEOF reduce production is_acsl_other -> REAL
-- On SIGNED reduce production is_acsl_other -> REAL
-- On SHORT reduce production is_acsl_other -> REAL
-- On SEPARATED reduce production is_acsl_other -> REAL
-- On SEMICOLON reduce production is_acsl_other -> REAL
-- On RSQUARE reduce production is_acsl_other -> REAL
-- On RPAR reduce production is_acsl_other -> REAL
-- On RETURNS reduce production is_acsl_other -> REAL
-- On RESULT reduce production is_acsl_other -> REAL
-- On REQUIRES reduce production is_acsl_other -> REAL
-- On REGISTER reduce production is_acsl_other -> REAL
-- On REAL reduce production is_acsl_other -> REAL
-- On READS reduce production is_acsl_other -> REAL
-- On RBRACE reduce production is_acsl_other -> REAL
-- On QUESTION reduce production is_acsl_other -> REAL
-- On PREDICATE reduce production is_acsl_other -> REAL
-- On PRAGMA reduce production is_acsl_other -> REAL
-- On PLUS reduce production is_acsl_other -> REAL
-- On PIPE reduce production is_acsl_other -> REAL
-- On PERCENT reduce production is_acsl_other -> REAL
-- On OR reduce production is_acsl_other -> REAL
-- On OLD reduce production is_acsl_other -> REAL
-- On OFFSET reduce production is_acsl_other -> REAL
-- On NULL reduce production is_acsl_other -> REAL
-- On NOTHING reduce production is_acsl_other -> REAL
-- On NOT reduce production is_acsl_other -> REAL
-- On NE reduce production is_acsl_other -> REAL
-- On MODULE reduce production is_acsl_other -> REAL
-- On MODEL reduce production is_acsl_other -> REAL
-- On MINUS reduce production is_acsl_other -> REAL
-- On LTLT reduce production is_acsl_other -> REAL
-- On LTCOLON reduce production is_acsl_other -> REAL
-- On LT reduce production is_acsl_other -> REAL
-- On LSQUARE reduce production is_acsl_other -> REAL
-- On LPAR reduce production is_acsl_other -> REAL
-- On LOOP reduce production is_acsl_other -> REAL
-- On LONG reduce production is_acsl_other -> REAL
-- On LOGIC reduce production is_acsl_other -> REAL
-- On LET reduce production is_acsl_other -> REAL
-- On LEMMA reduce production is_acsl_other -> REAL
-- On LE reduce production is_acsl_other -> REAL
-- On LBRACE reduce production is_acsl_other -> REAL
-- On LAMBDA reduce production is_acsl_other -> REAL
-- On LABEL reduce production is_acsl_other -> REAL
-- On INVARIANT reduce production is_acsl_other -> REAL
-- On INTER reduce production is_acsl_other -> REAL
-- On INTEGER reduce production is_acsl_other -> REAL
-- On INT reduce production is_acsl_other -> REAL
-- On INITIALIZED reduce production is_acsl_other -> REAL
-- On INDUCTIVE reduce production is_acsl_other -> REAL
-- On INCLUDE reduce production is_acsl_other -> REAL
-- On IMPLIES reduce production is_acsl_other -> REAL
-- On IMPACT reduce production is_acsl_other -> REAL
-- On IFF reduce production is_acsl_other -> REAL
-- On IF reduce production is_acsl_other -> REAL
-- On IDENTIFIER reduce production is_acsl_other -> REAL
-- On HATHAT reduce production is_acsl_other -> REAL
-- On HAT reduce production is_acsl_other -> REAL
-- On GTGT reduce production is_acsl_other -> REAL
-- On GT reduce production is_acsl_other -> REAL
-- On GLOBAL reduce production is_acsl_other -> REAL
-- On GHOST reduce production is_acsl_other -> REAL
-- On GE reduce production is_acsl_other -> REAL
-- On FUNCTION reduce production is_acsl_other -> REAL
-- On FROM reduce production is_acsl_other -> REAL
-- On FRESH reduce production is_acsl_other -> REAL
-- On FREES reduce production is_acsl_other -> REAL
-- On FREEABLE reduce production is_acsl_other -> REAL
-- On FORALL reduce production is_acsl_other -> REAL
-- On FOR reduce production is_acsl_other -> REAL
-- On FLOAT reduce production is_acsl_other -> REAL
-- On FALSE reduce production is_acsl_other -> REAL
-- On EXT_LET reduce production is_acsl_other -> REAL
-- On EXT_AT reduce production is_acsl_other -> REAL
-- On EXITS reduce production is_acsl_other -> REAL
-- On EXISTS reduce production is_acsl_other -> REAL
-- On EQUAL reduce production is_acsl_other -> REAL
-- On EQ reduce production is_acsl_other -> REAL
-- On EOF reduce production is_acsl_other -> REAL
-- On ENUM reduce production is_acsl_other -> REAL
-- On ENSURES reduce production is_acsl_other -> REAL
-- On EMPTY reduce production is_acsl_other -> REAL
-- On ELSE reduce production is_acsl_other -> REAL
-- On DYNAMIC reduce production is_acsl_other -> REAL
-- On DOUBLE reduce production is_acsl_other -> REAL
-- On DOTDOTDOT reduce production is_acsl_other -> REAL
-- On DOTDOT reduce production is_acsl_other -> REAL
-- On DOT reduce production is_acsl_other -> REAL
-- On DOLLAR reduce production is_acsl_other -> REAL
-- On DISJOINT reduce production is_acsl_other -> REAL
-- On DECREASES reduce production is_acsl_other -> REAL
-- On DANGLING reduce production is_acsl_other -> REAL
-- On CUSTOM reduce production is_acsl_other -> REAL
-- On CONTRACT reduce production is_acsl_other -> REAL
-- On CONTINUES reduce production is_acsl_other -> REAL
-- On CONSTANT10 reduce production is_acsl_other -> REAL
-- On CONSTANT reduce production is_acsl_other -> REAL
-- On CONST reduce production is_acsl_other -> REAL
-- On COMPLETE reduce production is_acsl_other -> REAL
-- On COMMA reduce production is_acsl_other -> REAL
-- On COLONGT reduce production is_acsl_other -> REAL
-- On COLONCOLON reduce production is_acsl_other -> REAL
-- On COLON2 reduce production is_acsl_other -> REAL
-- On COLON reduce production is_acsl_other -> REAL
-- On CHAR reduce production is_acsl_other -> REAL
-- On CASE reduce production is_acsl_other -> REAL
-- On BSUNION reduce production is_acsl_other -> REAL
-- On BSTYPE reduce production is_acsl_other -> REAL
-- On BREAKS reduce production is_acsl_other -> REAL
-- On BOOLEAN reduce production is_acsl_other -> REAL
-- On BOOL reduce production is_acsl_other -> REAL
-- On BLOCK_LENGTH reduce production is_acsl_other -> REAL
-- On BIMPLIES reduce production is_acsl_other -> REAL
-- On BIFF reduce production is_acsl_other -> REAL
-- On BEHAVIORS reduce production is_acsl_other -> REAL
-- On BEHAVIOR reduce production is_acsl_other -> REAL
-- On BASE_ADDR reduce production is_acsl_other -> REAL
-- On AXIOMATIC reduce production is_acsl_other -> REAL
-- On AXIOM reduce production is_acsl_other -> REAL
-- On AUTOMATIC reduce production is_acsl_other -> REAL
-- On AT reduce production is_acsl_other -> REAL
-- On ASSUMES reduce production is_acsl_other -> REAL
-- On ASSIGNS reduce production is_acsl_other -> REAL
-- On ASSERT reduce production is_acsl_other -> REAL
-- On ARROW reduce production is_acsl_other -> REAL
-- On AND reduce production is_acsl_other -> REAL
-- On AMP reduce production is_acsl_other -> REAL
-- On ALLOCATION reduce production is_acsl_other -> REAL
-- On ALLOCATES reduce production is_acsl_other -> REAL
-- On ALLOCABLE reduce production is_acsl_other -> REAL

State 22:
## Known stack suffix:
## READS
## LR(1) items:
is_acsl_other -> READS . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_other -> READS
-- On WITH reduce production is_acsl_other -> READS
-- On VOLATILE reduce production is_acsl_other -> READS
-- On VOID reduce production is_acsl_other -> READS
-- On VARIANT reduce production is_acsl_other -> READS
-- On VALID_READ reduce production is_acsl_other -> READS
-- On VALID_RANGE reduce production is_acsl_other -> READS
-- On VALID_INDEX reduce production is_acsl_other -> READS
-- On VALID reduce production is_acsl_other -> READS
-- On UNSIGNED reduce production is_acsl_other -> READS
-- On UNION reduce production is_acsl_other -> READS
-- On UNALLOCATED reduce production is_acsl_other -> READS
-- On TYPEOF reduce production is_acsl_other -> READS
-- On TYPENAME reduce production is_acsl_other -> READS
-- On TYPE reduce production is_acsl_other -> READS
-- On TRUE reduce production is_acsl_other -> READS
-- On TILDE reduce production is_acsl_other -> READS
-- On TERMINATES reduce production is_acsl_other -> READS
-- On STRUCT reduce production is_acsl_other -> READS
-- On STRING_LITERAL reduce production is_acsl_other -> READS
-- On STATIC reduce production is_acsl_other -> READS
-- On STAR reduce production is_acsl_other -> READS
-- On SLICE reduce production is_acsl_other -> READS
-- On SLASH reduce production is_acsl_other -> READS
-- On SIZEOF reduce production is_acsl_other -> READS
-- On SIGNED reduce production is_acsl_other -> READS
-- On SHORT reduce production is_acsl_other -> READS
-- On SEPARATED reduce production is_acsl_other -> READS
-- On SEMICOLON reduce production is_acsl_other -> READS
-- On RSQUARE reduce production is_acsl_other -> READS
-- On RPAR reduce production is_acsl_other -> READS
-- On RETURNS reduce production is_acsl_other -> READS
-- On RESULT reduce production is_acsl_other -> READS
-- On REQUIRES reduce production is_acsl_other -> READS
-- On REGISTER reduce production is_acsl_other -> READS
-- On REAL reduce production is_acsl_other -> READS
-- On READS reduce production is_acsl_other -> READS
-- On RBRACE reduce production is_acsl_other -> READS
-- On QUESTION reduce production is_acsl_other -> READS
-- On PREDICATE reduce production is_acsl_other -> READS
-- On PRAGMA reduce production is_acsl_other -> READS
-- On PLUS reduce production is_acsl_other -> READS
-- On PIPE reduce production is_acsl_other -> READS
-- On PERCENT reduce production is_acsl_other -> READS
-- On OR reduce production is_acsl_other -> READS
-- On OLD reduce production is_acsl_other -> READS
-- On OFFSET reduce production is_acsl_other -> READS
-- On NULL reduce production is_acsl_other -> READS
-- On NOTHING reduce production is_acsl_other -> READS
-- On NOT reduce production is_acsl_other -> READS
-- On NE reduce production is_acsl_other -> READS
-- On MODULE reduce production is_acsl_other -> READS
-- On MODEL reduce production is_acsl_other -> READS
-- On MINUS reduce production is_acsl_other -> READS
-- On LTLT reduce production is_acsl_other -> READS
-- On LTCOLON reduce production is_acsl_other -> READS
-- On LT reduce production is_acsl_other -> READS
-- On LSQUARE reduce production is_acsl_other -> READS
-- On LPAR reduce production is_acsl_other -> READS
-- On LOOP reduce production is_acsl_other -> READS
-- On LONG reduce production is_acsl_other -> READS
-- On LOGIC reduce production is_acsl_other -> READS
-- On LET reduce production is_acsl_other -> READS
-- On LEMMA reduce production is_acsl_other -> READS
-- On LE reduce production is_acsl_other -> READS
-- On LBRACE reduce production is_acsl_other -> READS
-- On LAMBDA reduce production is_acsl_other -> READS
-- On LABEL reduce production is_acsl_other -> READS
-- On INVARIANT reduce production is_acsl_other -> READS
-- On INTER reduce production is_acsl_other -> READS
-- On INTEGER reduce production is_acsl_other -> READS
-- On INT reduce production is_acsl_other -> READS
-- On INITIALIZED reduce production is_acsl_other -> READS
-- On INDUCTIVE reduce production is_acsl_other -> READS
-- On INCLUDE reduce production is_acsl_other -> READS
-- On IMPLIES reduce production is_acsl_other -> READS
-- On IMPACT reduce production is_acsl_other -> READS
-- On IFF reduce production is_acsl_other -> READS
-- On IF reduce production is_acsl_other -> READS
-- On IDENTIFIER reduce production is_acsl_other -> READS
-- On HATHAT reduce production is_acsl_other -> READS
-- On HAT reduce production is_acsl_other -> READS
-- On GTGT reduce production is_acsl_other -> READS
-- On GT reduce production is_acsl_other -> READS
-- On GLOBAL reduce production is_acsl_other -> READS
-- On GHOST reduce production is_acsl_other -> READS
-- On GE reduce production is_acsl_other -> READS
-- On FUNCTION reduce production is_acsl_other -> READS
-- On FROM reduce production is_acsl_other -> READS
-- On FRESH reduce production is_acsl_other -> READS
-- On FREES reduce production is_acsl_other -> READS
-- On FREEABLE reduce production is_acsl_other -> READS
-- On FORALL reduce production is_acsl_other -> READS
-- On FOR reduce production is_acsl_other -> READS
-- On FLOAT reduce production is_acsl_other -> READS
-- On FALSE reduce production is_acsl_other -> READS
-- On EXT_LET reduce production is_acsl_other -> READS
-- On EXT_AT reduce production is_acsl_other -> READS
-- On EXITS reduce production is_acsl_other -> READS
-- On EXISTS reduce production is_acsl_other -> READS
-- On EQUAL reduce production is_acsl_other -> READS
-- On EQ reduce production is_acsl_other -> READS
-- On EOF reduce production is_acsl_other -> READS
-- On ENUM reduce production is_acsl_other -> READS
-- On ENSURES reduce production is_acsl_other -> READS
-- On EMPTY reduce production is_acsl_other -> READS
-- On ELSE reduce production is_acsl_other -> READS
-- On DYNAMIC reduce production is_acsl_other -> READS
-- On DOUBLE reduce production is_acsl_other -> READS
-- On DOTDOTDOT reduce production is_acsl_other -> READS
-- On DOTDOT reduce production is_acsl_other -> READS
-- On DOT reduce production is_acsl_other -> READS
-- On DOLLAR reduce production is_acsl_other -> READS
-- On DISJOINT reduce production is_acsl_other -> READS
-- On DECREASES reduce production is_acsl_other -> READS
-- On DANGLING reduce production is_acsl_other -> READS
-- On CUSTOM reduce production is_acsl_other -> READS
-- On CONTRACT reduce production is_acsl_other -> READS
-- On CONTINUES reduce production is_acsl_other -> READS
-- On CONSTANT10 reduce production is_acsl_other -> READS
-- On CONSTANT reduce production is_acsl_other -> READS
-- On CONST reduce production is_acsl_other -> READS
-- On COMPLETE reduce production is_acsl_other -> READS
-- On COMMA reduce production is_acsl_other -> READS
-- On COLONGT reduce production is_acsl_other -> READS
-- On COLONCOLON reduce production is_acsl_other -> READS
-- On COLON2 reduce production is_acsl_other -> READS
-- On COLON reduce production is_acsl_other -> READS
-- On CHAR reduce production is_acsl_other -> READS
-- On CASE reduce production is_acsl_other -> READS
-- On BSUNION reduce production is_acsl_other -> READS
-- On BSTYPE reduce production is_acsl_other -> READS
-- On BREAKS reduce production is_acsl_other -> READS
-- On BOOLEAN reduce production is_acsl_other -> READS
-- On BOOL reduce production is_acsl_other -> READS
-- On BLOCK_LENGTH reduce production is_acsl_other -> READS
-- On BIMPLIES reduce production is_acsl_other -> READS
-- On BIFF reduce production is_acsl_other -> READS
-- On BEHAVIORS reduce production is_acsl_other -> READS
-- On BEHAVIOR reduce production is_acsl_other -> READS
-- On BASE_ADDR reduce production is_acsl_other -> READS
-- On AXIOMATIC reduce production is_acsl_other -> READS
-- On AXIOM reduce production is_acsl_other -> READS
-- On AUTOMATIC reduce production is_acsl_other -> READS
-- On AT reduce production is_acsl_other -> READS
-- On ASSUMES reduce production is_acsl_other -> READS
-- On ASSIGNS reduce production is_acsl_other -> READS
-- On ASSERT reduce production is_acsl_other -> READS
-- On ARROW reduce production is_acsl_other -> READS
-- On AND reduce production is_acsl_other -> READS
-- On AMP reduce production is_acsl_other -> READS
-- On ALLOCATION reduce production is_acsl_other -> READS
-- On ALLOCATES reduce production is_acsl_other -> READS
-- On ALLOCABLE reduce production is_acsl_other -> READS

State 23:
## Known stack suffix:
## PREDICATE
## LR(1) items:
is_acsl_decl_or_code_annot -> PREDICATE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On WITH reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On VOLATILE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On VOID reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On VARIANT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On VALID_READ reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On VALID_RANGE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On VALID_INDEX reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On VALID reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On UNSIGNED reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On UNION reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On UNALLOCATED reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On TYPEOF reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On TYPENAME reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On TYPE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On TRUE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On TILDE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On TERMINATES reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On STRUCT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On STRING_LITERAL reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On STATIC reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On STAR reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On SLICE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On SLASH reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On SIZEOF reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On SIGNED reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On SHORT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On SEPARATED reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On SEMICOLON reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On RSQUARE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On RPAR reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On RETURNS reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On RESULT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On REQUIRES reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On REGISTER reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On REAL reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On READS reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On RBRACE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On QUESTION reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On PREDICATE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On PRAGMA reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On PLUS reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On PIPE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On PERCENT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On OR reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On OLD reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On OFFSET reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On NULL reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On NOTHING reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On NOT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On NE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On MODULE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On MODEL reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On MINUS reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On LTLT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On LTCOLON reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On LT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On LSQUARE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On LPAR reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On LOOP reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On LONG reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On LOGIC reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On LET reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On LEMMA reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On LE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On LBRACE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On LAMBDA reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On LABEL reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On INVARIANT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On INTER reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On INTEGER reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On INT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On INITIALIZED reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On INDUCTIVE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On INCLUDE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On IMPLIES reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On IMPACT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On IFF reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On IF reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On IDENTIFIER reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On HATHAT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On HAT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On GTGT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On GT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On GLOBAL reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On GHOST reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On GE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On FUNCTION reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On FROM reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On FRESH reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On FREES reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On FREEABLE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On FORALL reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On FOR reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On FLOAT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On FALSE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On EXT_LET reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On EXT_AT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On EXITS reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On EXISTS reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On EQUAL reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On EQ reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On EOF reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On ENUM reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On ENSURES reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On EMPTY reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On ELSE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On DYNAMIC reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On DOUBLE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On DOTDOTDOT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On DOTDOT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On DOT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On DOLLAR reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On DISJOINT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On DECREASES reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On DANGLING reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On CUSTOM reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On CONTRACT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On CONTINUES reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On CONSTANT10 reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On CONSTANT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On CONST reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On COMPLETE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On COMMA reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On COLONGT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On COLONCOLON reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On COLON2 reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On COLON reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On CHAR reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On CASE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On BSUNION reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On BSTYPE reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On BREAKS reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On BOOLEAN reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On BOOL reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On BLOCK_LENGTH reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On BIMPLIES reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On BIFF reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On BEHAVIORS reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On BEHAVIOR reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On BASE_ADDR reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On AXIOMATIC reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On AXIOM reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On AUTOMATIC reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On AT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On ASSUMES reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On ASSIGNS reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On ASSERT reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On ARROW reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On AND reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On AMP reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On ALLOCATION reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On ALLOCATES reduce production is_acsl_decl_or_code_annot -> PREDICATE
-- On ALLOCABLE reduce production is_acsl_decl_or_code_annot -> PREDICATE

State 24:
## Known stack suffix:
## PRAGMA
## LR(1) items:
is_acsl_decl_or_code_annot -> PRAGMA . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On WITH reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On VOLATILE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On VOID reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On VARIANT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On VALID_READ reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On VALID_RANGE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On VALID_INDEX reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On VALID reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On UNSIGNED reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On UNION reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On UNALLOCATED reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On TYPEOF reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On TYPENAME reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On TYPE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On TRUE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On TILDE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On TERMINATES reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On STRUCT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On STRING_LITERAL reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On STATIC reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On STAR reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On SLICE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On SLASH reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On SIZEOF reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On SIGNED reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On SHORT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On SEPARATED reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On SEMICOLON reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On RSQUARE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On RPAR reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On RETURNS reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On RESULT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On REQUIRES reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On REGISTER reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On REAL reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On READS reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On RBRACE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On QUESTION reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On PREDICATE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On PRAGMA reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On PLUS reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On PIPE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On PERCENT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On OR reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On OLD reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On OFFSET reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On NULL reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On NOTHING reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On NOT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On NE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On MODULE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On MODEL reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On MINUS reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On LTLT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On LTCOLON reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On LT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On LSQUARE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On LPAR reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On LOOP reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On LONG reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On LOGIC reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On LET reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On LEMMA reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On LE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On LBRACE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On LAMBDA reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On LABEL reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On INVARIANT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On INTER reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On INTEGER reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On INT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On INITIALIZED reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On INDUCTIVE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On INCLUDE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On IMPLIES reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On IMPACT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On IFF reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On IF reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On IDENTIFIER reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On HATHAT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On HAT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On GTGT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On GT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On GLOBAL reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On GHOST reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On GE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On FUNCTION reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On FROM reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On FRESH reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On FREES reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On FREEABLE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On FORALL reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On FOR reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On FLOAT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On FALSE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On EXT_LET reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On EXT_AT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On EXITS reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On EXISTS reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On EQUAL reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On EQ reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On EOF reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On ENUM reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On ENSURES reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On EMPTY reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On ELSE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On DYNAMIC reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On DOUBLE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On DOTDOTDOT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On DOTDOT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On DOT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On DOLLAR reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On DISJOINT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On DECREASES reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On DANGLING reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On CUSTOM reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On CONTRACT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On CONTINUES reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On CONSTANT10 reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On CONSTANT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On CONST reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On COMPLETE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On COMMA reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On COLONGT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On COLONCOLON reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On COLON2 reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On COLON reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On CHAR reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On CASE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On BSUNION reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On BSTYPE reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On BREAKS reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On BOOLEAN reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On BOOL reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On BLOCK_LENGTH reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On BIMPLIES reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On BIFF reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On BEHAVIORS reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On BEHAVIOR reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On BASE_ADDR reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On AXIOMATIC reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On AXIOM reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On AUTOMATIC reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On AT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On ASSUMES reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On ASSIGNS reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On ASSERT reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On ARROW reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On AND reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On AMP reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On ALLOCATION reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On ALLOCATES reduce production is_acsl_decl_or_code_annot -> PRAGMA
-- On ALLOCABLE reduce production is_acsl_decl_or_code_annot -> PRAGMA

State 25:
## Known stack suffix:
## MODULE
## LR(1) items:
is_ext_spec -> MODULE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_ext_spec -> MODULE
-- On WITH reduce production is_ext_spec -> MODULE
-- On VOLATILE reduce production is_ext_spec -> MODULE
-- On VOID reduce production is_ext_spec -> MODULE
-- On VARIANT reduce production is_ext_spec -> MODULE
-- On VALID_READ reduce production is_ext_spec -> MODULE
-- On VALID_RANGE reduce production is_ext_spec -> MODULE
-- On VALID_INDEX reduce production is_ext_spec -> MODULE
-- On VALID reduce production is_ext_spec -> MODULE
-- On UNSIGNED reduce production is_ext_spec -> MODULE
-- On UNION reduce production is_ext_spec -> MODULE
-- On UNALLOCATED reduce production is_ext_spec -> MODULE
-- On TYPEOF reduce production is_ext_spec -> MODULE
-- On TYPENAME reduce production is_ext_spec -> MODULE
-- On TYPE reduce production is_ext_spec -> MODULE
-- On TRUE reduce production is_ext_spec -> MODULE
-- On TILDE reduce production is_ext_spec -> MODULE
-- On TERMINATES reduce production is_ext_spec -> MODULE
-- On STRUCT reduce production is_ext_spec -> MODULE
-- On STRING_LITERAL reduce production is_ext_spec -> MODULE
-- On STATIC reduce production is_ext_spec -> MODULE
-- On STAR reduce production is_ext_spec -> MODULE
-- On SLICE reduce production is_ext_spec -> MODULE
-- On SLASH reduce production is_ext_spec -> MODULE
-- On SIZEOF reduce production is_ext_spec -> MODULE
-- On SIGNED reduce production is_ext_spec -> MODULE
-- On SHORT reduce production is_ext_spec -> MODULE
-- On SEPARATED reduce production is_ext_spec -> MODULE
-- On SEMICOLON reduce production is_ext_spec -> MODULE
-- On RSQUARE reduce production is_ext_spec -> MODULE
-- On RPAR reduce production is_ext_spec -> MODULE
-- On RETURNS reduce production is_ext_spec -> MODULE
-- On RESULT reduce production is_ext_spec -> MODULE
-- On REQUIRES reduce production is_ext_spec -> MODULE
-- On REGISTER reduce production is_ext_spec -> MODULE
-- On REAL reduce production is_ext_spec -> MODULE
-- On READS reduce production is_ext_spec -> MODULE
-- On RBRACE reduce production is_ext_spec -> MODULE
-- On QUESTION reduce production is_ext_spec -> MODULE
-- On PREDICATE reduce production is_ext_spec -> MODULE
-- On PRAGMA reduce production is_ext_spec -> MODULE
-- On PLUS reduce production is_ext_spec -> MODULE
-- On PIPE reduce production is_ext_spec -> MODULE
-- On PERCENT reduce production is_ext_spec -> MODULE
-- On OR reduce production is_ext_spec -> MODULE
-- On OLD reduce production is_ext_spec -> MODULE
-- On OFFSET reduce production is_ext_spec -> MODULE
-- On NULL reduce production is_ext_spec -> MODULE
-- On NOTHING reduce production is_ext_spec -> MODULE
-- On NOT reduce production is_ext_spec -> MODULE
-- On NE reduce production is_ext_spec -> MODULE
-- On MODULE reduce production is_ext_spec -> MODULE
-- On MODEL reduce production is_ext_spec -> MODULE
-- On MINUS reduce production is_ext_spec -> MODULE
-- On LTLT reduce production is_ext_spec -> MODULE
-- On LTCOLON reduce production is_ext_spec -> MODULE
-- On LT reduce production is_ext_spec -> MODULE
-- On LSQUARE reduce production is_ext_spec -> MODULE
-- On LPAR reduce production is_ext_spec -> MODULE
-- On LOOP reduce production is_ext_spec -> MODULE
-- On LONG reduce production is_ext_spec -> MODULE
-- On LOGIC reduce production is_ext_spec -> MODULE
-- On LET reduce production is_ext_spec -> MODULE
-- On LEMMA reduce production is_ext_spec -> MODULE
-- On LE reduce production is_ext_spec -> MODULE
-- On LBRACE reduce production is_ext_spec -> MODULE
-- On LAMBDA reduce production is_ext_spec -> MODULE
-- On LABEL reduce production is_ext_spec -> MODULE
-- On INVARIANT reduce production is_ext_spec -> MODULE
-- On INTER reduce production is_ext_spec -> MODULE
-- On INTEGER reduce production is_ext_spec -> MODULE
-- On INT reduce production is_ext_spec -> MODULE
-- On INITIALIZED reduce production is_ext_spec -> MODULE
-- On INDUCTIVE reduce production is_ext_spec -> MODULE
-- On INCLUDE reduce production is_ext_spec -> MODULE
-- On IMPLIES reduce production is_ext_spec -> MODULE
-- On IMPACT reduce production is_ext_spec -> MODULE
-- On IFF reduce production is_ext_spec -> MODULE
-- On IF reduce production is_ext_spec -> MODULE
-- On IDENTIFIER reduce production is_ext_spec -> MODULE
-- On HATHAT reduce production is_ext_spec -> MODULE
-- On HAT reduce production is_ext_spec -> MODULE
-- On GTGT reduce production is_ext_spec -> MODULE
-- On GT reduce production is_ext_spec -> MODULE
-- On GLOBAL reduce production is_ext_spec -> MODULE
-- On GHOST reduce production is_ext_spec -> MODULE
-- On GE reduce production is_ext_spec -> MODULE
-- On FUNCTION reduce production is_ext_spec -> MODULE
-- On FROM reduce production is_ext_spec -> MODULE
-- On FRESH reduce production is_ext_spec -> MODULE
-- On FREES reduce production is_ext_spec -> MODULE
-- On FREEABLE reduce production is_ext_spec -> MODULE
-- On FORALL reduce production is_ext_spec -> MODULE
-- On FOR reduce production is_ext_spec -> MODULE
-- On FLOAT reduce production is_ext_spec -> MODULE
-- On FALSE reduce production is_ext_spec -> MODULE
-- On EXT_LET reduce production is_ext_spec -> MODULE
-- On EXT_AT reduce production is_ext_spec -> MODULE
-- On EXITS reduce production is_ext_spec -> MODULE
-- On EXISTS reduce production is_ext_spec -> MODULE
-- On EQUAL reduce production is_ext_spec -> MODULE
-- On EQ reduce production is_ext_spec -> MODULE
-- On EOF reduce production is_ext_spec -> MODULE
-- On ENUM reduce production is_ext_spec -> MODULE
-- On ENSURES reduce production is_ext_spec -> MODULE
-- On EMPTY reduce production is_ext_spec -> MODULE
-- On ELSE reduce production is_ext_spec -> MODULE
-- On DYNAMIC reduce production is_ext_spec -> MODULE
-- On DOUBLE reduce production is_ext_spec -> MODULE
-- On DOTDOTDOT reduce production is_ext_spec -> MODULE
-- On DOTDOT reduce production is_ext_spec -> MODULE
-- On DOT reduce production is_ext_spec -> MODULE
-- On DOLLAR reduce production is_ext_spec -> MODULE
-- On DISJOINT reduce production is_ext_spec -> MODULE
-- On DECREASES reduce production is_ext_spec -> MODULE
-- On DANGLING reduce production is_ext_spec -> MODULE
-- On CUSTOM reduce production is_ext_spec -> MODULE
-- On CONTRACT reduce production is_ext_spec -> MODULE
-- On CONTINUES reduce production is_ext_spec -> MODULE
-- On CONSTANT10 reduce production is_ext_spec -> MODULE
-- On CONSTANT reduce production is_ext_spec -> MODULE
-- On CONST reduce production is_ext_spec -> MODULE
-- On COMPLETE reduce production is_ext_spec -> MODULE
-- On COMMA reduce production is_ext_spec -> MODULE
-- On COLONGT reduce production is_ext_spec -> MODULE
-- On COLONCOLON reduce production is_ext_spec -> MODULE
-- On COLON2 reduce production is_ext_spec -> MODULE
-- On COLON reduce production is_ext_spec -> MODULE
-- On CHAR reduce production is_ext_spec -> MODULE
-- On CASE reduce production is_ext_spec -> MODULE
-- On BSUNION reduce production is_ext_spec -> MODULE
-- On BSTYPE reduce production is_ext_spec -> MODULE
-- On BREAKS reduce production is_ext_spec -> MODULE
-- On BOOLEAN reduce production is_ext_spec -> MODULE
-- On BOOL reduce production is_ext_spec -> MODULE
-- On BLOCK_LENGTH reduce production is_ext_spec -> MODULE
-- On BIMPLIES reduce production is_ext_spec -> MODULE
-- On BIFF reduce production is_ext_spec -> MODULE
-- On BEHAVIORS reduce production is_ext_spec -> MODULE
-- On BEHAVIOR reduce production is_ext_spec -> MODULE
-- On BASE_ADDR reduce production is_ext_spec -> MODULE
-- On AXIOMATIC reduce production is_ext_spec -> MODULE
-- On AXIOM reduce production is_ext_spec -> MODULE
-- On AUTOMATIC reduce production is_ext_spec -> MODULE
-- On AT reduce production is_ext_spec -> MODULE
-- On ASSUMES reduce production is_ext_spec -> MODULE
-- On ASSIGNS reduce production is_ext_spec -> MODULE
-- On ASSERT reduce production is_ext_spec -> MODULE
-- On ARROW reduce production is_ext_spec -> MODULE
-- On AND reduce production is_ext_spec -> MODULE
-- On AMP reduce production is_ext_spec -> MODULE
-- On ALLOCATION reduce production is_ext_spec -> MODULE
-- On ALLOCATES reduce production is_ext_spec -> MODULE
-- On ALLOCABLE reduce production is_ext_spec -> MODULE

State 26:
## Known stack suffix:
## MODEL
## LR(1) items:
is_acsl_decl_or_code_annot -> MODEL . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_decl_or_code_annot -> MODEL
-- On WITH reduce production is_acsl_decl_or_code_annot -> MODEL
-- On VOLATILE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On VOID reduce production is_acsl_decl_or_code_annot -> MODEL
-- On VARIANT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On VALID_READ reduce production is_acsl_decl_or_code_annot -> MODEL
-- On VALID_RANGE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On VALID_INDEX reduce production is_acsl_decl_or_code_annot -> MODEL
-- On VALID reduce production is_acsl_decl_or_code_annot -> MODEL
-- On UNSIGNED reduce production is_acsl_decl_or_code_annot -> MODEL
-- On UNION reduce production is_acsl_decl_or_code_annot -> MODEL
-- On UNALLOCATED reduce production is_acsl_decl_or_code_annot -> MODEL
-- On TYPEOF reduce production is_acsl_decl_or_code_annot -> MODEL
-- On TYPENAME reduce production is_acsl_decl_or_code_annot -> MODEL
-- On TYPE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On TRUE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On TILDE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On TERMINATES reduce production is_acsl_decl_or_code_annot -> MODEL
-- On STRUCT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On STRING_LITERAL reduce production is_acsl_decl_or_code_annot -> MODEL
-- On STATIC reduce production is_acsl_decl_or_code_annot -> MODEL
-- On STAR reduce production is_acsl_decl_or_code_annot -> MODEL
-- On SLICE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On SLASH reduce production is_acsl_decl_or_code_annot -> MODEL
-- On SIZEOF reduce production is_acsl_decl_or_code_annot -> MODEL
-- On SIGNED reduce production is_acsl_decl_or_code_annot -> MODEL
-- On SHORT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On SEPARATED reduce production is_acsl_decl_or_code_annot -> MODEL
-- On SEMICOLON reduce production is_acsl_decl_or_code_annot -> MODEL
-- On RSQUARE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On RPAR reduce production is_acsl_decl_or_code_annot -> MODEL
-- On RETURNS reduce production is_acsl_decl_or_code_annot -> MODEL
-- On RESULT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On REQUIRES reduce production is_acsl_decl_or_code_annot -> MODEL
-- On REGISTER reduce production is_acsl_decl_or_code_annot -> MODEL
-- On REAL reduce production is_acsl_decl_or_code_annot -> MODEL
-- On READS reduce production is_acsl_decl_or_code_annot -> MODEL
-- On RBRACE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On QUESTION reduce production is_acsl_decl_or_code_annot -> MODEL
-- On PREDICATE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On PRAGMA reduce production is_acsl_decl_or_code_annot -> MODEL
-- On PLUS reduce production is_acsl_decl_or_code_annot -> MODEL
-- On PIPE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On PERCENT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On OR reduce production is_acsl_decl_or_code_annot -> MODEL
-- On OLD reduce production is_acsl_decl_or_code_annot -> MODEL
-- On OFFSET reduce production is_acsl_decl_or_code_annot -> MODEL
-- On NULL reduce production is_acsl_decl_or_code_annot -> MODEL
-- On NOTHING reduce production is_acsl_decl_or_code_annot -> MODEL
-- On NOT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On NE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On MODULE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On MODEL reduce production is_acsl_decl_or_code_annot -> MODEL
-- On MINUS reduce production is_acsl_decl_or_code_annot -> MODEL
-- On LTLT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On LTCOLON reduce production is_acsl_decl_or_code_annot -> MODEL
-- On LT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On LSQUARE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On LPAR reduce production is_acsl_decl_or_code_annot -> MODEL
-- On LOOP reduce production is_acsl_decl_or_code_annot -> MODEL
-- On LONG reduce production is_acsl_decl_or_code_annot -> MODEL
-- On LOGIC reduce production is_acsl_decl_or_code_annot -> MODEL
-- On LET reduce production is_acsl_decl_or_code_annot -> MODEL
-- On LEMMA reduce production is_acsl_decl_or_code_annot -> MODEL
-- On LE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On LBRACE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On LAMBDA reduce production is_acsl_decl_or_code_annot -> MODEL
-- On LABEL reduce production is_acsl_decl_or_code_annot -> MODEL
-- On INVARIANT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On INTER reduce production is_acsl_decl_or_code_annot -> MODEL
-- On INTEGER reduce production is_acsl_decl_or_code_annot -> MODEL
-- On INT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On INITIALIZED reduce production is_acsl_decl_or_code_annot -> MODEL
-- On INDUCTIVE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On INCLUDE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On IMPLIES reduce production is_acsl_decl_or_code_annot -> MODEL
-- On IMPACT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On IFF reduce production is_acsl_decl_or_code_annot -> MODEL
-- On IF reduce production is_acsl_decl_or_code_annot -> MODEL
-- On IDENTIFIER reduce production is_acsl_decl_or_code_annot -> MODEL
-- On HATHAT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On HAT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On GTGT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On GT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On GLOBAL reduce production is_acsl_decl_or_code_annot -> MODEL
-- On GHOST reduce production is_acsl_decl_or_code_annot -> MODEL
-- On GE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On FUNCTION reduce production is_acsl_decl_or_code_annot -> MODEL
-- On FROM reduce production is_acsl_decl_or_code_annot -> MODEL
-- On FRESH reduce production is_acsl_decl_or_code_annot -> MODEL
-- On FREES reduce production is_acsl_decl_or_code_annot -> MODEL
-- On FREEABLE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On FORALL reduce production is_acsl_decl_or_code_annot -> MODEL
-- On FOR reduce production is_acsl_decl_or_code_annot -> MODEL
-- On FLOAT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On FALSE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On EXT_LET reduce production is_acsl_decl_or_code_annot -> MODEL
-- On EXT_AT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On EXITS reduce production is_acsl_decl_or_code_annot -> MODEL
-- On EXISTS reduce production is_acsl_decl_or_code_annot -> MODEL
-- On EQUAL reduce production is_acsl_decl_or_code_annot -> MODEL
-- On EQ reduce production is_acsl_decl_or_code_annot -> MODEL
-- On EOF reduce production is_acsl_decl_or_code_annot -> MODEL
-- On ENUM reduce production is_acsl_decl_or_code_annot -> MODEL
-- On ENSURES reduce production is_acsl_decl_or_code_annot -> MODEL
-- On EMPTY reduce production is_acsl_decl_or_code_annot -> MODEL
-- On ELSE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On DYNAMIC reduce production is_acsl_decl_or_code_annot -> MODEL
-- On DOUBLE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On DOTDOTDOT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On DOTDOT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On DOT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On DOLLAR reduce production is_acsl_decl_or_code_annot -> MODEL
-- On DISJOINT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On DECREASES reduce production is_acsl_decl_or_code_annot -> MODEL
-- On DANGLING reduce production is_acsl_decl_or_code_annot -> MODEL
-- On CUSTOM reduce production is_acsl_decl_or_code_annot -> MODEL
-- On CONTRACT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On CONTINUES reduce production is_acsl_decl_or_code_annot -> MODEL
-- On CONSTANT10 reduce production is_acsl_decl_or_code_annot -> MODEL
-- On CONSTANT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On CONST reduce production is_acsl_decl_or_code_annot -> MODEL
-- On COMPLETE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On COMMA reduce production is_acsl_decl_or_code_annot -> MODEL
-- On COLONGT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On COLONCOLON reduce production is_acsl_decl_or_code_annot -> MODEL
-- On COLON2 reduce production is_acsl_decl_or_code_annot -> MODEL
-- On COLON reduce production is_acsl_decl_or_code_annot -> MODEL
-- On CHAR reduce production is_acsl_decl_or_code_annot -> MODEL
-- On CASE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On BSUNION reduce production is_acsl_decl_or_code_annot -> MODEL
-- On BSTYPE reduce production is_acsl_decl_or_code_annot -> MODEL
-- On BREAKS reduce production is_acsl_decl_or_code_annot -> MODEL
-- On BOOLEAN reduce production is_acsl_decl_or_code_annot -> MODEL
-- On BOOL reduce production is_acsl_decl_or_code_annot -> MODEL
-- On BLOCK_LENGTH reduce production is_acsl_decl_or_code_annot -> MODEL
-- On BIMPLIES reduce production is_acsl_decl_or_code_annot -> MODEL
-- On BIFF reduce production is_acsl_decl_or_code_annot -> MODEL
-- On BEHAVIORS reduce production is_acsl_decl_or_code_annot -> MODEL
-- On BEHAVIOR reduce production is_acsl_decl_or_code_annot -> MODEL
-- On BASE_ADDR reduce production is_acsl_decl_or_code_annot -> MODEL
-- On AXIOMATIC reduce production is_acsl_decl_or_code_annot -> MODEL
-- On AXIOM reduce production is_acsl_decl_or_code_annot -> MODEL
-- On AUTOMATIC reduce production is_acsl_decl_or_code_annot -> MODEL
-- On AT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On ASSUMES reduce production is_acsl_decl_or_code_annot -> MODEL
-- On ASSIGNS reduce production is_acsl_decl_or_code_annot -> MODEL
-- On ASSERT reduce production is_acsl_decl_or_code_annot -> MODEL
-- On ARROW reduce production is_acsl_decl_or_code_annot -> MODEL
-- On AND reduce production is_acsl_decl_or_code_annot -> MODEL
-- On AMP reduce production is_acsl_decl_or_code_annot -> MODEL
-- On ALLOCATION reduce production is_acsl_decl_or_code_annot -> MODEL
-- On ALLOCATES reduce production is_acsl_decl_or_code_annot -> MODEL
-- On ALLOCABLE reduce production is_acsl_decl_or_code_annot -> MODEL

State 27:
## Known stack suffix:
## LOOP
## LR(1) items:
is_acsl_decl_or_code_annot -> LOOP . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_decl_or_code_annot -> LOOP
-- On WITH reduce production is_acsl_decl_or_code_annot -> LOOP
-- On VOLATILE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On VOID reduce production is_acsl_decl_or_code_annot -> LOOP
-- On VARIANT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On VALID_READ reduce production is_acsl_decl_or_code_annot -> LOOP
-- On VALID_RANGE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On VALID_INDEX reduce production is_acsl_decl_or_code_annot -> LOOP
-- On VALID reduce production is_acsl_decl_or_code_annot -> LOOP
-- On UNSIGNED reduce production is_acsl_decl_or_code_annot -> LOOP
-- On UNION reduce production is_acsl_decl_or_code_annot -> LOOP
-- On UNALLOCATED reduce production is_acsl_decl_or_code_annot -> LOOP
-- On TYPEOF reduce production is_acsl_decl_or_code_annot -> LOOP
-- On TYPENAME reduce production is_acsl_decl_or_code_annot -> LOOP
-- On TYPE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On TRUE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On TILDE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On TERMINATES reduce production is_acsl_decl_or_code_annot -> LOOP
-- On STRUCT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On STRING_LITERAL reduce production is_acsl_decl_or_code_annot -> LOOP
-- On STATIC reduce production is_acsl_decl_or_code_annot -> LOOP
-- On STAR reduce production is_acsl_decl_or_code_annot -> LOOP
-- On SLICE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On SLASH reduce production is_acsl_decl_or_code_annot -> LOOP
-- On SIZEOF reduce production is_acsl_decl_or_code_annot -> LOOP
-- On SIGNED reduce production is_acsl_decl_or_code_annot -> LOOP
-- On SHORT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On SEPARATED reduce production is_acsl_decl_or_code_annot -> LOOP
-- On SEMICOLON reduce production is_acsl_decl_or_code_annot -> LOOP
-- On RSQUARE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On RPAR reduce production is_acsl_decl_or_code_annot -> LOOP
-- On RETURNS reduce production is_acsl_decl_or_code_annot -> LOOP
-- On RESULT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On REQUIRES reduce production is_acsl_decl_or_code_annot -> LOOP
-- On REGISTER reduce production is_acsl_decl_or_code_annot -> LOOP
-- On REAL reduce production is_acsl_decl_or_code_annot -> LOOP
-- On READS reduce production is_acsl_decl_or_code_annot -> LOOP
-- On RBRACE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On QUESTION reduce production is_acsl_decl_or_code_annot -> LOOP
-- On PREDICATE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On PRAGMA reduce production is_acsl_decl_or_code_annot -> LOOP
-- On PLUS reduce production is_acsl_decl_or_code_annot -> LOOP
-- On PIPE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On PERCENT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On OR reduce production is_acsl_decl_or_code_annot -> LOOP
-- On OLD reduce production is_acsl_decl_or_code_annot -> LOOP
-- On OFFSET reduce production is_acsl_decl_or_code_annot -> LOOP
-- On NULL reduce production is_acsl_decl_or_code_annot -> LOOP
-- On NOTHING reduce production is_acsl_decl_or_code_annot -> LOOP
-- On NOT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On NE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On MODULE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On MODEL reduce production is_acsl_decl_or_code_annot -> LOOP
-- On MINUS reduce production is_acsl_decl_or_code_annot -> LOOP
-- On LTLT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On LTCOLON reduce production is_acsl_decl_or_code_annot -> LOOP
-- On LT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On LSQUARE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On LPAR reduce production is_acsl_decl_or_code_annot -> LOOP
-- On LOOP reduce production is_acsl_decl_or_code_annot -> LOOP
-- On LONG reduce production is_acsl_decl_or_code_annot -> LOOP
-- On LOGIC reduce production is_acsl_decl_or_code_annot -> LOOP
-- On LET reduce production is_acsl_decl_or_code_annot -> LOOP
-- On LEMMA reduce production is_acsl_decl_or_code_annot -> LOOP
-- On LE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On LBRACE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On LAMBDA reduce production is_acsl_decl_or_code_annot -> LOOP
-- On LABEL reduce production is_acsl_decl_or_code_annot -> LOOP
-- On INVARIANT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On INTER reduce production is_acsl_decl_or_code_annot -> LOOP
-- On INTEGER reduce production is_acsl_decl_or_code_annot -> LOOP
-- On INT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On INITIALIZED reduce production is_acsl_decl_or_code_annot -> LOOP
-- On INDUCTIVE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On INCLUDE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On IMPLIES reduce production is_acsl_decl_or_code_annot -> LOOP
-- On IMPACT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On IFF reduce production is_acsl_decl_or_code_annot -> LOOP
-- On IF reduce production is_acsl_decl_or_code_annot -> LOOP
-- On IDENTIFIER reduce production is_acsl_decl_or_code_annot -> LOOP
-- On HATHAT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On HAT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On GTGT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On GT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On GLOBAL reduce production is_acsl_decl_or_code_annot -> LOOP
-- On GHOST reduce production is_acsl_decl_or_code_annot -> LOOP
-- On GE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On FUNCTION reduce production is_acsl_decl_or_code_annot -> LOOP
-- On FROM reduce production is_acsl_decl_or_code_annot -> LOOP
-- On FRESH reduce production is_acsl_decl_or_code_annot -> LOOP
-- On FREES reduce production is_acsl_decl_or_code_annot -> LOOP
-- On FREEABLE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On FORALL reduce production is_acsl_decl_or_code_annot -> LOOP
-- On FOR reduce production is_acsl_decl_or_code_annot -> LOOP
-- On FLOAT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On FALSE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On EXT_LET reduce production is_acsl_decl_or_code_annot -> LOOP
-- On EXT_AT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On EXITS reduce production is_acsl_decl_or_code_annot -> LOOP
-- On EXISTS reduce production is_acsl_decl_or_code_annot -> LOOP
-- On EQUAL reduce production is_acsl_decl_or_code_annot -> LOOP
-- On EQ reduce production is_acsl_decl_or_code_annot -> LOOP
-- On EOF reduce production is_acsl_decl_or_code_annot -> LOOP
-- On ENUM reduce production is_acsl_decl_or_code_annot -> LOOP
-- On ENSURES reduce production is_acsl_decl_or_code_annot -> LOOP
-- On EMPTY reduce production is_acsl_decl_or_code_annot -> LOOP
-- On ELSE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On DYNAMIC reduce production is_acsl_decl_or_code_annot -> LOOP
-- On DOUBLE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On DOTDOTDOT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On DOTDOT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On DOT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On DOLLAR reduce production is_acsl_decl_or_code_annot -> LOOP
-- On DISJOINT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On DECREASES reduce production is_acsl_decl_or_code_annot -> LOOP
-- On DANGLING reduce production is_acsl_decl_or_code_annot -> LOOP
-- On CUSTOM reduce production is_acsl_decl_or_code_annot -> LOOP
-- On CONTRACT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On CONTINUES reduce production is_acsl_decl_or_code_annot -> LOOP
-- On CONSTANT10 reduce production is_acsl_decl_or_code_annot -> LOOP
-- On CONSTANT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On CONST reduce production is_acsl_decl_or_code_annot -> LOOP
-- On COMPLETE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On COMMA reduce production is_acsl_decl_or_code_annot -> LOOP
-- On COLONGT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On COLONCOLON reduce production is_acsl_decl_or_code_annot -> LOOP
-- On COLON2 reduce production is_acsl_decl_or_code_annot -> LOOP
-- On COLON reduce production is_acsl_decl_or_code_annot -> LOOP
-- On CHAR reduce production is_acsl_decl_or_code_annot -> LOOP
-- On CASE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On BSUNION reduce production is_acsl_decl_or_code_annot -> LOOP
-- On BSTYPE reduce production is_acsl_decl_or_code_annot -> LOOP
-- On BREAKS reduce production is_acsl_decl_or_code_annot -> LOOP
-- On BOOLEAN reduce production is_acsl_decl_or_code_annot -> LOOP
-- On BOOL reduce production is_acsl_decl_or_code_annot -> LOOP
-- On BLOCK_LENGTH reduce production is_acsl_decl_or_code_annot -> LOOP
-- On BIMPLIES reduce production is_acsl_decl_or_code_annot -> LOOP
-- On BIFF reduce production is_acsl_decl_or_code_annot -> LOOP
-- On BEHAVIORS reduce production is_acsl_decl_or_code_annot -> LOOP
-- On BEHAVIOR reduce production is_acsl_decl_or_code_annot -> LOOP
-- On BASE_ADDR reduce production is_acsl_decl_or_code_annot -> LOOP
-- On AXIOMATIC reduce production is_acsl_decl_or_code_annot -> LOOP
-- On AXIOM reduce production is_acsl_decl_or_code_annot -> LOOP
-- On AUTOMATIC reduce production is_acsl_decl_or_code_annot -> LOOP
-- On AT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On ASSUMES reduce production is_acsl_decl_or_code_annot -> LOOP
-- On ASSIGNS reduce production is_acsl_decl_or_code_annot -> LOOP
-- On ASSERT reduce production is_acsl_decl_or_code_annot -> LOOP
-- On ARROW reduce production is_acsl_decl_or_code_annot -> LOOP
-- On AND reduce production is_acsl_decl_or_code_annot -> LOOP
-- On AMP reduce production is_acsl_decl_or_code_annot -> LOOP
-- On ALLOCATION reduce production is_acsl_decl_or_code_annot -> LOOP
-- On ALLOCATES reduce production is_acsl_decl_or_code_annot -> LOOP
-- On ALLOCABLE reduce production is_acsl_decl_or_code_annot -> LOOP

State 28:
## Known stack suffix:
## LONG
## LR(1) items:
c_keyword -> LONG . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> LONG
-- On WITH reduce production c_keyword -> LONG
-- On VOLATILE reduce production c_keyword -> LONG
-- On VOID reduce production c_keyword -> LONG
-- On VARIANT reduce production c_keyword -> LONG
-- On VALID_READ reduce production c_keyword -> LONG
-- On VALID_RANGE reduce production c_keyword -> LONG
-- On VALID_INDEX reduce production c_keyword -> LONG
-- On VALID reduce production c_keyword -> LONG
-- On UNSIGNED reduce production c_keyword -> LONG
-- On UNION reduce production c_keyword -> LONG
-- On UNALLOCATED reduce production c_keyword -> LONG
-- On TYPEOF reduce production c_keyword -> LONG
-- On TYPENAME reduce production c_keyword -> LONG
-- On TYPE reduce production c_keyword -> LONG
-- On TRUE reduce production c_keyword -> LONG
-- On TILDE reduce production c_keyword -> LONG
-- On TERMINATES reduce production c_keyword -> LONG
-- On STRUCT reduce production c_keyword -> LONG
-- On STRING_LITERAL reduce production c_keyword -> LONG
-- On STATIC reduce production c_keyword -> LONG
-- On STAR reduce production c_keyword -> LONG
-- On SLICE reduce production c_keyword -> LONG
-- On SLASH reduce production c_keyword -> LONG
-- On SIZEOF reduce production c_keyword -> LONG
-- On SIGNED reduce production c_keyword -> LONG
-- On SHORT reduce production c_keyword -> LONG
-- On SEPARATED reduce production c_keyword -> LONG
-- On SEMICOLON reduce production c_keyword -> LONG
-- On RSQUARE reduce production c_keyword -> LONG
-- On RPAR reduce production c_keyword -> LONG
-- On RETURNS reduce production c_keyword -> LONG
-- On RESULT reduce production c_keyword -> LONG
-- On REQUIRES reduce production c_keyword -> LONG
-- On REGISTER reduce production c_keyword -> LONG
-- On REAL reduce production c_keyword -> LONG
-- On READS reduce production c_keyword -> LONG
-- On RBRACE reduce production c_keyword -> LONG
-- On QUESTION reduce production c_keyword -> LONG
-- On PREDICATE reduce production c_keyword -> LONG
-- On PRAGMA reduce production c_keyword -> LONG
-- On PLUS reduce production c_keyword -> LONG
-- On PIPE reduce production c_keyword -> LONG
-- On PERCENT reduce production c_keyword -> LONG
-- On OR reduce production c_keyword -> LONG
-- On OLD reduce production c_keyword -> LONG
-- On OFFSET reduce production c_keyword -> LONG
-- On NULL reduce production c_keyword -> LONG
-- On NOTHING reduce production c_keyword -> LONG
-- On NOT reduce production c_keyword -> LONG
-- On NE reduce production c_keyword -> LONG
-- On MODULE reduce production c_keyword -> LONG
-- On MODEL reduce production c_keyword -> LONG
-- On MINUS reduce production c_keyword -> LONG
-- On LTLT reduce production c_keyword -> LONG
-- On LTCOLON reduce production c_keyword -> LONG
-- On LT reduce production c_keyword -> LONG
-- On LSQUARE reduce production c_keyword -> LONG
-- On LPAR reduce production c_keyword -> LONG
-- On LOOP reduce production c_keyword -> LONG
-- On LONG reduce production c_keyword -> LONG
-- On LOGIC reduce production c_keyword -> LONG
-- On LET reduce production c_keyword -> LONG
-- On LEMMA reduce production c_keyword -> LONG
-- On LE reduce production c_keyword -> LONG
-- On LBRACE reduce production c_keyword -> LONG
-- On LAMBDA reduce production c_keyword -> LONG
-- On LABEL reduce production c_keyword -> LONG
-- On INVARIANT reduce production c_keyword -> LONG
-- On INTER reduce production c_keyword -> LONG
-- On INTEGER reduce production c_keyword -> LONG
-- On INT reduce production c_keyword -> LONG
-- On INITIALIZED reduce production c_keyword -> LONG
-- On INDUCTIVE reduce production c_keyword -> LONG
-- On INCLUDE reduce production c_keyword -> LONG
-- On IMPLIES reduce production c_keyword -> LONG
-- On IMPACT reduce production c_keyword -> LONG
-- On IFF reduce production c_keyword -> LONG
-- On IF reduce production c_keyword -> LONG
-- On IDENTIFIER reduce production c_keyword -> LONG
-- On HATHAT reduce production c_keyword -> LONG
-- On HAT reduce production c_keyword -> LONG
-- On GTGT reduce production c_keyword -> LONG
-- On GT reduce production c_keyword -> LONG
-- On GLOBAL reduce production c_keyword -> LONG
-- On GHOST reduce production c_keyword -> LONG
-- On GE reduce production c_keyword -> LONG
-- On FUNCTION reduce production c_keyword -> LONG
-- On FROM reduce production c_keyword -> LONG
-- On FRESH reduce production c_keyword -> LONG
-- On FREES reduce production c_keyword -> LONG
-- On FREEABLE reduce production c_keyword -> LONG
-- On FORALL reduce production c_keyword -> LONG
-- On FOR reduce production c_keyword -> LONG
-- On FLOAT reduce production c_keyword -> LONG
-- On FALSE reduce production c_keyword -> LONG
-- On EXT_LET reduce production c_keyword -> LONG
-- On EXT_AT reduce production c_keyword -> LONG
-- On EXITS reduce production c_keyword -> LONG
-- On EXISTS reduce production c_keyword -> LONG
-- On EQUAL reduce production c_keyword -> LONG
-- On EQ reduce production c_keyword -> LONG
-- On EOF reduce production c_keyword -> LONG
-- On ENUM reduce production c_keyword -> LONG
-- On ENSURES reduce production c_keyword -> LONG
-- On EMPTY reduce production c_keyword -> LONG
-- On ELSE reduce production c_keyword -> LONG
-- On DYNAMIC reduce production c_keyword -> LONG
-- On DOUBLE reduce production c_keyword -> LONG
-- On DOTDOTDOT reduce production c_keyword -> LONG
-- On DOTDOT reduce production c_keyword -> LONG
-- On DOT reduce production c_keyword -> LONG
-- On DOLLAR reduce production c_keyword -> LONG
-- On DISJOINT reduce production c_keyword -> LONG
-- On DECREASES reduce production c_keyword -> LONG
-- On DANGLING reduce production c_keyword -> LONG
-- On CUSTOM reduce production c_keyword -> LONG
-- On CONTRACT reduce production c_keyword -> LONG
-- On CONTINUES reduce production c_keyword -> LONG
-- On CONSTANT10 reduce production c_keyword -> LONG
-- On CONSTANT reduce production c_keyword -> LONG
-- On CONST reduce production c_keyword -> LONG
-- On COMPLETE reduce production c_keyword -> LONG
-- On COMMA reduce production c_keyword -> LONG
-- On COLONGT reduce production c_keyword -> LONG
-- On COLONCOLON reduce production c_keyword -> LONG
-- On COLON2 reduce production c_keyword -> LONG
-- On COLON reduce production c_keyword -> LONG
-- On CHAR reduce production c_keyword -> LONG
-- On CASE reduce production c_keyword -> LONG
-- On BSUNION reduce production c_keyword -> LONG
-- On BSTYPE reduce production c_keyword -> LONG
-- On BREAKS reduce production c_keyword -> LONG
-- On BOOLEAN reduce production c_keyword -> LONG
-- On BOOL reduce production c_keyword -> LONG
-- On BLOCK_LENGTH reduce production c_keyword -> LONG
-- On BIMPLIES reduce production c_keyword -> LONG
-- On BIFF reduce production c_keyword -> LONG
-- On BEHAVIORS reduce production c_keyword -> LONG
-- On BEHAVIOR reduce production c_keyword -> LONG
-- On BASE_ADDR reduce production c_keyword -> LONG
-- On AXIOMATIC reduce production c_keyword -> LONG
-- On AXIOM reduce production c_keyword -> LONG
-- On AUTOMATIC reduce production c_keyword -> LONG
-- On AT reduce production c_keyword -> LONG
-- On ASSUMES reduce production c_keyword -> LONG
-- On ASSIGNS reduce production c_keyword -> LONG
-- On ASSERT reduce production c_keyword -> LONG
-- On ARROW reduce production c_keyword -> LONG
-- On AND reduce production c_keyword -> LONG
-- On AMP reduce production c_keyword -> LONG
-- On ALLOCATION reduce production c_keyword -> LONG
-- On ALLOCATES reduce production c_keyword -> LONG
-- On ALLOCABLE reduce production c_keyword -> LONG

State 29:
## Known stack suffix:
## LOGIC
## LR(1) items:
keyword -> LOGIC . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production keyword -> LOGIC
-- On WITH reduce production keyword -> LOGIC
-- On VOLATILE reduce production keyword -> LOGIC
-- On VOID reduce production keyword -> LOGIC
-- On VARIANT reduce production keyword -> LOGIC
-- On VALID_READ reduce production keyword -> LOGIC
-- On VALID_RANGE reduce production keyword -> LOGIC
-- On VALID_INDEX reduce production keyword -> LOGIC
-- On VALID reduce production keyword -> LOGIC
-- On UNSIGNED reduce production keyword -> LOGIC
-- On UNION reduce production keyword -> LOGIC
-- On UNALLOCATED reduce production keyword -> LOGIC
-- On TYPEOF reduce production keyword -> LOGIC
-- On TYPENAME reduce production keyword -> LOGIC
-- On TYPE reduce production keyword -> LOGIC
-- On TRUE reduce production keyword -> LOGIC
-- On TILDE reduce production keyword -> LOGIC
-- On TERMINATES reduce production keyword -> LOGIC
-- On STRUCT reduce production keyword -> LOGIC
-- On STRING_LITERAL reduce production keyword -> LOGIC
-- On STATIC reduce production keyword -> LOGIC
-- On STAR reduce production keyword -> LOGIC
-- On SLICE reduce production keyword -> LOGIC
-- On SLASH reduce production keyword -> LOGIC
-- On SIZEOF reduce production keyword -> LOGIC
-- On SIGNED reduce production keyword -> LOGIC
-- On SHORT reduce production keyword -> LOGIC
-- On SEPARATED reduce production keyword -> LOGIC
-- On SEMICOLON reduce production keyword -> LOGIC
-- On RSQUARE reduce production keyword -> LOGIC
-- On RPAR reduce production keyword -> LOGIC
-- On RETURNS reduce production keyword -> LOGIC
-- On RESULT reduce production keyword -> LOGIC
-- On REQUIRES reduce production keyword -> LOGIC
-- On REGISTER reduce production keyword -> LOGIC
-- On REAL reduce production keyword -> LOGIC
-- On READS reduce production keyword -> LOGIC
-- On RBRACE reduce production keyword -> LOGIC
-- On QUESTION reduce production keyword -> LOGIC
-- On PREDICATE reduce production keyword -> LOGIC
-- On PRAGMA reduce production keyword -> LOGIC
-- On PLUS reduce production keyword -> LOGIC
-- On PIPE reduce production keyword -> LOGIC
-- On PERCENT reduce production keyword -> LOGIC
-- On OR reduce production keyword -> LOGIC
-- On OLD reduce production keyword -> LOGIC
-- On OFFSET reduce production keyword -> LOGIC
-- On NULL reduce production keyword -> LOGIC
-- On NOTHING reduce production keyword -> LOGIC
-- On NOT reduce production keyword -> LOGIC
-- On NE reduce production keyword -> LOGIC
-- On MODULE reduce production keyword -> LOGIC
-- On MODEL reduce production keyword -> LOGIC
-- On MINUS reduce production keyword -> LOGIC
-- On LTLT reduce production keyword -> LOGIC
-- On LTCOLON reduce production keyword -> LOGIC
-- On LT reduce production keyword -> LOGIC
-- On LSQUARE reduce production keyword -> LOGIC
-- On LPAR reduce production keyword -> LOGIC
-- On LOOP reduce production keyword -> LOGIC
-- On LONG reduce production keyword -> LOGIC
-- On LOGIC reduce production keyword -> LOGIC
-- On LET reduce production keyword -> LOGIC
-- On LEMMA reduce production keyword -> LOGIC
-- On LE reduce production keyword -> LOGIC
-- On LBRACE reduce production keyword -> LOGIC
-- On LAMBDA reduce production keyword -> LOGIC
-- On LABEL reduce production keyword -> LOGIC
-- On INVARIANT reduce production keyword -> LOGIC
-- On INTER reduce production keyword -> LOGIC
-- On INTEGER reduce production keyword -> LOGIC
-- On INT reduce production keyword -> LOGIC
-- On INITIALIZED reduce production keyword -> LOGIC
-- On INDUCTIVE reduce production keyword -> LOGIC
-- On INCLUDE reduce production keyword -> LOGIC
-- On IMPLIES reduce production keyword -> LOGIC
-- On IMPACT reduce production keyword -> LOGIC
-- On IFF reduce production keyword -> LOGIC
-- On IF reduce production keyword -> LOGIC
-- On IDENTIFIER reduce production keyword -> LOGIC
-- On HATHAT reduce production keyword -> LOGIC
-- On HAT reduce production keyword -> LOGIC
-- On GTGT reduce production keyword -> LOGIC
-- On GT reduce production keyword -> LOGIC
-- On GLOBAL reduce production keyword -> LOGIC
-- On GHOST reduce production keyword -> LOGIC
-- On GE reduce production keyword -> LOGIC
-- On FUNCTION reduce production keyword -> LOGIC
-- On FROM reduce production keyword -> LOGIC
-- On FRESH reduce production keyword -> LOGIC
-- On FREES reduce production keyword -> LOGIC
-- On FREEABLE reduce production keyword -> LOGIC
-- On FORALL reduce production keyword -> LOGIC
-- On FOR reduce production keyword -> LOGIC
-- On FLOAT reduce production keyword -> LOGIC
-- On FALSE reduce production keyword -> LOGIC
-- On EXT_LET reduce production keyword -> LOGIC
-- On EXT_AT reduce production keyword -> LOGIC
-- On EXITS reduce production keyword -> LOGIC
-- On EXISTS reduce production keyword -> LOGIC
-- On EQUAL reduce production keyword -> LOGIC
-- On EQ reduce production keyword -> LOGIC
-- On EOF reduce production keyword -> LOGIC
-- On ENUM reduce production keyword -> LOGIC
-- On ENSURES reduce production keyword -> LOGIC
-- On EMPTY reduce production keyword -> LOGIC
-- On ELSE reduce production keyword -> LOGIC
-- On DYNAMIC reduce production keyword -> LOGIC
-- On DOUBLE reduce production keyword -> LOGIC
-- On DOTDOTDOT reduce production keyword -> LOGIC
-- On DOTDOT reduce production keyword -> LOGIC
-- On DOT reduce production keyword -> LOGIC
-- On DOLLAR reduce production keyword -> LOGIC
-- On DISJOINT reduce production keyword -> LOGIC
-- On DECREASES reduce production keyword -> LOGIC
-- On DANGLING reduce production keyword -> LOGIC
-- On CUSTOM reduce production keyword -> LOGIC
-- On CONTRACT reduce production keyword -> LOGIC
-- On CONTINUES reduce production keyword -> LOGIC
-- On CONSTANT10 reduce production keyword -> LOGIC
-- On CONSTANT reduce production keyword -> LOGIC
-- On CONST reduce production keyword -> LOGIC
-- On COMPLETE reduce production keyword -> LOGIC
-- On COMMA reduce production keyword -> LOGIC
-- On COLONGT reduce production keyword -> LOGIC
-- On COLONCOLON reduce production keyword -> LOGIC
-- On COLON2 reduce production keyword -> LOGIC
-- On COLON reduce production keyword -> LOGIC
-- On CHAR reduce production keyword -> LOGIC
-- On CASE reduce production keyword -> LOGIC
-- On BSUNION reduce production keyword -> LOGIC
-- On BSTYPE reduce production keyword -> LOGIC
-- On BREAKS reduce production keyword -> LOGIC
-- On BOOLEAN reduce production keyword -> LOGIC
-- On BOOL reduce production keyword -> LOGIC
-- On BLOCK_LENGTH reduce production keyword -> LOGIC
-- On BIMPLIES reduce production keyword -> LOGIC
-- On BIFF reduce production keyword -> LOGIC
-- On BEHAVIORS reduce production keyword -> LOGIC
-- On BEHAVIOR reduce production keyword -> LOGIC
-- On BASE_ADDR reduce production keyword -> LOGIC
-- On AXIOMATIC reduce production keyword -> LOGIC
-- On AXIOM reduce production keyword -> LOGIC
-- On AUTOMATIC reduce production keyword -> LOGIC
-- On AT reduce production keyword -> LOGIC
-- On ASSUMES reduce production keyword -> LOGIC
-- On ASSIGNS reduce production keyword -> LOGIC
-- On ASSERT reduce production keyword -> LOGIC
-- On ARROW reduce production keyword -> LOGIC
-- On AND reduce production keyword -> LOGIC
-- On AMP reduce production keyword -> LOGIC
-- On ALLOCATION reduce production keyword -> LOGIC
-- On ALLOCATES reduce production keyword -> LOGIC
-- On ALLOCABLE reduce production keyword -> LOGIC

State 30:
## Known stack suffix:
## LEMMA
## LR(1) items:
is_acsl_decl_or_code_annot -> LEMMA . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On WITH reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On VOLATILE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On VOID reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On VARIANT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On VALID_READ reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On VALID_RANGE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On VALID_INDEX reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On VALID reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On UNSIGNED reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On UNION reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On UNALLOCATED reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On TYPEOF reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On TYPENAME reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On TYPE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On TRUE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On TILDE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On TERMINATES reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On STRUCT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On STRING_LITERAL reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On STATIC reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On STAR reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On SLICE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On SLASH reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On SIZEOF reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On SIGNED reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On SHORT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On SEPARATED reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On SEMICOLON reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On RSQUARE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On RPAR reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On RETURNS reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On RESULT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On REQUIRES reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On REGISTER reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On REAL reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On READS reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On RBRACE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On QUESTION reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On PREDICATE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On PRAGMA reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On PLUS reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On PIPE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On PERCENT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On OR reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On OLD reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On OFFSET reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On NULL reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On NOTHING reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On NOT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On NE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On MODULE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On MODEL reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On MINUS reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On LTLT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On LTCOLON reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On LT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On LSQUARE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On LPAR reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On LOOP reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On LONG reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On LOGIC reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On LET reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On LEMMA reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On LE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On LBRACE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On LAMBDA reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On LABEL reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On INVARIANT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On INTER reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On INTEGER reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On INT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On INITIALIZED reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On INDUCTIVE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On INCLUDE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On IMPLIES reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On IMPACT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On IFF reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On IF reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On IDENTIFIER reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On HATHAT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On HAT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On GTGT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On GT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On GLOBAL reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On GHOST reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On GE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On FUNCTION reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On FROM reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On FRESH reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On FREES reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On FREEABLE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On FORALL reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On FOR reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On FLOAT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On FALSE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On EXT_LET reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On EXT_AT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On EXITS reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On EXISTS reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On EQUAL reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On EQ reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On EOF reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On ENUM reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On ENSURES reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On EMPTY reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On ELSE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On DYNAMIC reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On DOUBLE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On DOTDOTDOT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On DOTDOT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On DOT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On DOLLAR reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On DISJOINT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On DECREASES reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On DANGLING reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On CUSTOM reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On CONTRACT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On CONTINUES reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On CONSTANT10 reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On CONSTANT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On CONST reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On COMPLETE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On COMMA reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On COLONGT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On COLONCOLON reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On COLON2 reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On COLON reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On CHAR reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On CASE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On BSUNION reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On BSTYPE reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On BREAKS reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On BOOLEAN reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On BOOL reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On BLOCK_LENGTH reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On BIMPLIES reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On BIFF reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On BEHAVIORS reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On BEHAVIOR reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On BASE_ADDR reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On AXIOMATIC reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On AXIOM reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On AUTOMATIC reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On AT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On ASSUMES reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On ASSIGNS reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On ASSERT reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On ARROW reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On AND reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On AMP reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On ALLOCATION reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On ALLOCATES reduce production is_acsl_decl_or_code_annot -> LEMMA
-- On ALLOCABLE reduce production is_acsl_decl_or_code_annot -> LEMMA

State 31:
## Known stack suffix:
## LABEL
## LR(1) items:
is_acsl_other -> LABEL . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_other -> LABEL
-- On WITH reduce production is_acsl_other -> LABEL
-- On VOLATILE reduce production is_acsl_other -> LABEL
-- On VOID reduce production is_acsl_other -> LABEL
-- On VARIANT reduce production is_acsl_other -> LABEL
-- On VALID_READ reduce production is_acsl_other -> LABEL
-- On VALID_RANGE reduce production is_acsl_other -> LABEL
-- On VALID_INDEX reduce production is_acsl_other -> LABEL
-- On VALID reduce production is_acsl_other -> LABEL
-- On UNSIGNED reduce production is_acsl_other -> LABEL
-- On UNION reduce production is_acsl_other -> LABEL
-- On UNALLOCATED reduce production is_acsl_other -> LABEL
-- On TYPEOF reduce production is_acsl_other -> LABEL
-- On TYPENAME reduce production is_acsl_other -> LABEL
-- On TYPE reduce production is_acsl_other -> LABEL
-- On TRUE reduce production is_acsl_other -> LABEL
-- On TILDE reduce production is_acsl_other -> LABEL
-- On TERMINATES reduce production is_acsl_other -> LABEL
-- On STRUCT reduce production is_acsl_other -> LABEL
-- On STRING_LITERAL reduce production is_acsl_other -> LABEL
-- On STATIC reduce production is_acsl_other -> LABEL
-- On STAR reduce production is_acsl_other -> LABEL
-- On SLICE reduce production is_acsl_other -> LABEL
-- On SLASH reduce production is_acsl_other -> LABEL
-- On SIZEOF reduce production is_acsl_other -> LABEL
-- On SIGNED reduce production is_acsl_other -> LABEL
-- On SHORT reduce production is_acsl_other -> LABEL
-- On SEPARATED reduce production is_acsl_other -> LABEL
-- On SEMICOLON reduce production is_acsl_other -> LABEL
-- On RSQUARE reduce production is_acsl_other -> LABEL
-- On RPAR reduce production is_acsl_other -> LABEL
-- On RETURNS reduce production is_acsl_other -> LABEL
-- On RESULT reduce production is_acsl_other -> LABEL
-- On REQUIRES reduce production is_acsl_other -> LABEL
-- On REGISTER reduce production is_acsl_other -> LABEL
-- On REAL reduce production is_acsl_other -> LABEL
-- On READS reduce production is_acsl_other -> LABEL
-- On RBRACE reduce production is_acsl_other -> LABEL
-- On QUESTION reduce production is_acsl_other -> LABEL
-- On PREDICATE reduce production is_acsl_other -> LABEL
-- On PRAGMA reduce production is_acsl_other -> LABEL
-- On PLUS reduce production is_acsl_other -> LABEL
-- On PIPE reduce production is_acsl_other -> LABEL
-- On PERCENT reduce production is_acsl_other -> LABEL
-- On OR reduce production is_acsl_other -> LABEL
-- On OLD reduce production is_acsl_other -> LABEL
-- On OFFSET reduce production is_acsl_other -> LABEL
-- On NULL reduce production is_acsl_other -> LABEL
-- On NOTHING reduce production is_acsl_other -> LABEL
-- On NOT reduce production is_acsl_other -> LABEL
-- On NE reduce production is_acsl_other -> LABEL
-- On MODULE reduce production is_acsl_other -> LABEL
-- On MODEL reduce production is_acsl_other -> LABEL
-- On MINUS reduce production is_acsl_other -> LABEL
-- On LTLT reduce production is_acsl_other -> LABEL
-- On LTCOLON reduce production is_acsl_other -> LABEL
-- On LT reduce production is_acsl_other -> LABEL
-- On LSQUARE reduce production is_acsl_other -> LABEL
-- On LPAR reduce production is_acsl_other -> LABEL
-- On LOOP reduce production is_acsl_other -> LABEL
-- On LONG reduce production is_acsl_other -> LABEL
-- On LOGIC reduce production is_acsl_other -> LABEL
-- On LET reduce production is_acsl_other -> LABEL
-- On LEMMA reduce production is_acsl_other -> LABEL
-- On LE reduce production is_acsl_other -> LABEL
-- On LBRACE reduce production is_acsl_other -> LABEL
-- On LAMBDA reduce production is_acsl_other -> LABEL
-- On LABEL reduce production is_acsl_other -> LABEL
-- On INVARIANT reduce production is_acsl_other -> LABEL
-- On INTER reduce production is_acsl_other -> LABEL
-- On INTEGER reduce production is_acsl_other -> LABEL
-- On INT reduce production is_acsl_other -> LABEL
-- On INITIALIZED reduce production is_acsl_other -> LABEL
-- On INDUCTIVE reduce production is_acsl_other -> LABEL
-- On INCLUDE reduce production is_acsl_other -> LABEL
-- On IMPLIES reduce production is_acsl_other -> LABEL
-- On IMPACT reduce production is_acsl_other -> LABEL
-- On IFF reduce production is_acsl_other -> LABEL
-- On IF reduce production is_acsl_other -> LABEL
-- On IDENTIFIER reduce production is_acsl_other -> LABEL
-- On HATHAT reduce production is_acsl_other -> LABEL
-- On HAT reduce production is_acsl_other -> LABEL
-- On GTGT reduce production is_acsl_other -> LABEL
-- On GT reduce production is_acsl_other -> LABEL
-- On GLOBAL reduce production is_acsl_other -> LABEL
-- On GHOST reduce production is_acsl_other -> LABEL
-- On GE reduce production is_acsl_other -> LABEL
-- On FUNCTION reduce production is_acsl_other -> LABEL
-- On FROM reduce production is_acsl_other -> LABEL
-- On FRESH reduce production is_acsl_other -> LABEL
-- On FREES reduce production is_acsl_other -> LABEL
-- On FREEABLE reduce production is_acsl_other -> LABEL
-- On FORALL reduce production is_acsl_other -> LABEL
-- On FOR reduce production is_acsl_other -> LABEL
-- On FLOAT reduce production is_acsl_other -> LABEL
-- On FALSE reduce production is_acsl_other -> LABEL
-- On EXT_LET reduce production is_acsl_other -> LABEL
-- On EXT_AT reduce production is_acsl_other -> LABEL
-- On EXITS reduce production is_acsl_other -> LABEL
-- On EXISTS reduce production is_acsl_other -> LABEL
-- On EQUAL reduce production is_acsl_other -> LABEL
-- On EQ reduce production is_acsl_other -> LABEL
-- On EOF reduce production is_acsl_other -> LABEL
-- On ENUM reduce production is_acsl_other -> LABEL
-- On ENSURES reduce production is_acsl_other -> LABEL
-- On EMPTY reduce production is_acsl_other -> LABEL
-- On ELSE reduce production is_acsl_other -> LABEL
-- On DYNAMIC reduce production is_acsl_other -> LABEL
-- On DOUBLE reduce production is_acsl_other -> LABEL
-- On DOTDOTDOT reduce production is_acsl_other -> LABEL
-- On DOTDOT reduce production is_acsl_other -> LABEL
-- On DOT reduce production is_acsl_other -> LABEL
-- On DOLLAR reduce production is_acsl_other -> LABEL
-- On DISJOINT reduce production is_acsl_other -> LABEL
-- On DECREASES reduce production is_acsl_other -> LABEL
-- On DANGLING reduce production is_acsl_other -> LABEL
-- On CUSTOM reduce production is_acsl_other -> LABEL
-- On CONTRACT reduce production is_acsl_other -> LABEL
-- On CONTINUES reduce production is_acsl_other -> LABEL
-- On CONSTANT10 reduce production is_acsl_other -> LABEL
-- On CONSTANT reduce production is_acsl_other -> LABEL
-- On CONST reduce production is_acsl_other -> LABEL
-- On COMPLETE reduce production is_acsl_other -> LABEL
-- On COMMA reduce production is_acsl_other -> LABEL
-- On COLONGT reduce production is_acsl_other -> LABEL
-- On COLONCOLON reduce production is_acsl_other -> LABEL
-- On COLON2 reduce production is_acsl_other -> LABEL
-- On COLON reduce production is_acsl_other -> LABEL
-- On CHAR reduce production is_acsl_other -> LABEL
-- On CASE reduce production is_acsl_other -> LABEL
-- On BSUNION reduce production is_acsl_other -> LABEL
-- On BSTYPE reduce production is_acsl_other -> LABEL
-- On BREAKS reduce production is_acsl_other -> LABEL
-- On BOOLEAN reduce production is_acsl_other -> LABEL
-- On BOOL reduce production is_acsl_other -> LABEL
-- On BLOCK_LENGTH reduce production is_acsl_other -> LABEL
-- On BIMPLIES reduce production is_acsl_other -> LABEL
-- On BIFF reduce production is_acsl_other -> LABEL
-- On BEHAVIORS reduce production is_acsl_other -> LABEL
-- On BEHAVIOR reduce production is_acsl_other -> LABEL
-- On BASE_ADDR reduce production is_acsl_other -> LABEL
-- On AXIOMATIC reduce production is_acsl_other -> LABEL
-- On AXIOM reduce production is_acsl_other -> LABEL
-- On AUTOMATIC reduce production is_acsl_other -> LABEL
-- On AT reduce production is_acsl_other -> LABEL
-- On ASSUMES reduce production is_acsl_other -> LABEL
-- On ASSIGNS reduce production is_acsl_other -> LABEL
-- On ASSERT reduce production is_acsl_other -> LABEL
-- On ARROW reduce production is_acsl_other -> LABEL
-- On AND reduce production is_acsl_other -> LABEL
-- On AMP reduce production is_acsl_other -> LABEL
-- On ALLOCATION reduce production is_acsl_other -> LABEL
-- On ALLOCATES reduce production is_acsl_other -> LABEL
-- On ALLOCABLE reduce production is_acsl_other -> LABEL

State 32:
## Known stack suffix:
## INVARIANT
## LR(1) items:
is_acsl_decl_or_code_annot -> INVARIANT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On WITH reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On VOLATILE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On VOID reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On VARIANT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On VALID_READ reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On VALID_RANGE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On VALID_INDEX reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On VALID reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On UNSIGNED reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On UNION reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On UNALLOCATED reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On TYPEOF reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On TYPENAME reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On TYPE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On TRUE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On TILDE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On TERMINATES reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On STRUCT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On STRING_LITERAL reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On STATIC reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On STAR reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On SLICE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On SLASH reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On SIZEOF reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On SIGNED reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On SHORT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On SEPARATED reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On SEMICOLON reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On RSQUARE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On RPAR reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On RETURNS reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On RESULT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On REQUIRES reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On REGISTER reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On REAL reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On READS reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On RBRACE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On QUESTION reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On PREDICATE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On PRAGMA reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On PLUS reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On PIPE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On PERCENT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On OR reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On OLD reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On OFFSET reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On NULL reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On NOTHING reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On NOT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On NE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On MODULE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On MODEL reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On MINUS reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On LTLT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On LTCOLON reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On LT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On LSQUARE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On LPAR reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On LOOP reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On LONG reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On LOGIC reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On LET reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On LEMMA reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On LE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On LBRACE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On LAMBDA reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On LABEL reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On INVARIANT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On INTER reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On INTEGER reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On INT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On INITIALIZED reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On INDUCTIVE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On INCLUDE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On IMPLIES reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On IMPACT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On IFF reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On IF reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On IDENTIFIER reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On HATHAT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On HAT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On GTGT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On GT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On GLOBAL reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On GHOST reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On GE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On FUNCTION reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On FROM reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On FRESH reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On FREES reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On FREEABLE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On FORALL reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On FOR reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On FLOAT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On FALSE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On EXT_LET reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On EXT_AT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On EXITS reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On EXISTS reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On EQUAL reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On EQ reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On EOF reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On ENUM reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On ENSURES reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On EMPTY reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On ELSE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On DYNAMIC reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On DOUBLE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On DOTDOTDOT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On DOTDOT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On DOT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On DOLLAR reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On DISJOINT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On DECREASES reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On DANGLING reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On CUSTOM reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On CONTRACT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On CONTINUES reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On CONSTANT10 reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On CONSTANT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On CONST reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On COMPLETE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On COMMA reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On COLONGT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On COLONCOLON reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On COLON2 reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On COLON reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On CHAR reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On CASE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On BSUNION reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On BSTYPE reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On BREAKS reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On BOOLEAN reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On BOOL reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On BLOCK_LENGTH reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On BIMPLIES reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On BIFF reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On BEHAVIORS reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On BEHAVIOR reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On BASE_ADDR reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On AXIOMATIC reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On AXIOM reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On AUTOMATIC reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On AT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On ASSUMES reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On ASSIGNS reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On ASSERT reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On ARROW reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On AND reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On AMP reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On ALLOCATION reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On ALLOCATES reduce production is_acsl_decl_or_code_annot -> INVARIANT
-- On ALLOCABLE reduce production is_acsl_decl_or_code_annot -> INVARIANT

State 33:
## Known stack suffix:
## INTEGER
## LR(1) items:
is_acsl_other -> INTEGER . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_other -> INTEGER
-- On WITH reduce production is_acsl_other -> INTEGER
-- On VOLATILE reduce production is_acsl_other -> INTEGER
-- On VOID reduce production is_acsl_other -> INTEGER
-- On VARIANT reduce production is_acsl_other -> INTEGER
-- On VALID_READ reduce production is_acsl_other -> INTEGER
-- On VALID_RANGE reduce production is_acsl_other -> INTEGER
-- On VALID_INDEX reduce production is_acsl_other -> INTEGER
-- On VALID reduce production is_acsl_other -> INTEGER
-- On UNSIGNED reduce production is_acsl_other -> INTEGER
-- On UNION reduce production is_acsl_other -> INTEGER
-- On UNALLOCATED reduce production is_acsl_other -> INTEGER
-- On TYPEOF reduce production is_acsl_other -> INTEGER
-- On TYPENAME reduce production is_acsl_other -> INTEGER
-- On TYPE reduce production is_acsl_other -> INTEGER
-- On TRUE reduce production is_acsl_other -> INTEGER
-- On TILDE reduce production is_acsl_other -> INTEGER
-- On TERMINATES reduce production is_acsl_other -> INTEGER
-- On STRUCT reduce production is_acsl_other -> INTEGER
-- On STRING_LITERAL reduce production is_acsl_other -> INTEGER
-- On STATIC reduce production is_acsl_other -> INTEGER
-- On STAR reduce production is_acsl_other -> INTEGER
-- On SLICE reduce production is_acsl_other -> INTEGER
-- On SLASH reduce production is_acsl_other -> INTEGER
-- On SIZEOF reduce production is_acsl_other -> INTEGER
-- On SIGNED reduce production is_acsl_other -> INTEGER
-- On SHORT reduce production is_acsl_other -> INTEGER
-- On SEPARATED reduce production is_acsl_other -> INTEGER
-- On SEMICOLON reduce production is_acsl_other -> INTEGER
-- On RSQUARE reduce production is_acsl_other -> INTEGER
-- On RPAR reduce production is_acsl_other -> INTEGER
-- On RETURNS reduce production is_acsl_other -> INTEGER
-- On RESULT reduce production is_acsl_other -> INTEGER
-- On REQUIRES reduce production is_acsl_other -> INTEGER
-- On REGISTER reduce production is_acsl_other -> INTEGER
-- On REAL reduce production is_acsl_other -> INTEGER
-- On READS reduce production is_acsl_other -> INTEGER
-- On RBRACE reduce production is_acsl_other -> INTEGER
-- On QUESTION reduce production is_acsl_other -> INTEGER
-- On PREDICATE reduce production is_acsl_other -> INTEGER
-- On PRAGMA reduce production is_acsl_other -> INTEGER
-- On PLUS reduce production is_acsl_other -> INTEGER
-- On PIPE reduce production is_acsl_other -> INTEGER
-- On PERCENT reduce production is_acsl_other -> INTEGER
-- On OR reduce production is_acsl_other -> INTEGER
-- On OLD reduce production is_acsl_other -> INTEGER
-- On OFFSET reduce production is_acsl_other -> INTEGER
-- On NULL reduce production is_acsl_other -> INTEGER
-- On NOTHING reduce production is_acsl_other -> INTEGER
-- On NOT reduce production is_acsl_other -> INTEGER
-- On NE reduce production is_acsl_other -> INTEGER
-- On MODULE reduce production is_acsl_other -> INTEGER
-- On MODEL reduce production is_acsl_other -> INTEGER
-- On MINUS reduce production is_acsl_other -> INTEGER
-- On LTLT reduce production is_acsl_other -> INTEGER
-- On LTCOLON reduce production is_acsl_other -> INTEGER
-- On LT reduce production is_acsl_other -> INTEGER
-- On LSQUARE reduce production is_acsl_other -> INTEGER
-- On LPAR reduce production is_acsl_other -> INTEGER
-- On LOOP reduce production is_acsl_other -> INTEGER
-- On LONG reduce production is_acsl_other -> INTEGER
-- On LOGIC reduce production is_acsl_other -> INTEGER
-- On LET reduce production is_acsl_other -> INTEGER
-- On LEMMA reduce production is_acsl_other -> INTEGER
-- On LE reduce production is_acsl_other -> INTEGER
-- On LBRACE reduce production is_acsl_other -> INTEGER
-- On LAMBDA reduce production is_acsl_other -> INTEGER
-- On LABEL reduce production is_acsl_other -> INTEGER
-- On INVARIANT reduce production is_acsl_other -> INTEGER
-- On INTER reduce production is_acsl_other -> INTEGER
-- On INTEGER reduce production is_acsl_other -> INTEGER
-- On INT reduce production is_acsl_other -> INTEGER
-- On INITIALIZED reduce production is_acsl_other -> INTEGER
-- On INDUCTIVE reduce production is_acsl_other -> INTEGER
-- On INCLUDE reduce production is_acsl_other -> INTEGER
-- On IMPLIES reduce production is_acsl_other -> INTEGER
-- On IMPACT reduce production is_acsl_other -> INTEGER
-- On IFF reduce production is_acsl_other -> INTEGER
-- On IF reduce production is_acsl_other -> INTEGER
-- On IDENTIFIER reduce production is_acsl_other -> INTEGER
-- On HATHAT reduce production is_acsl_other -> INTEGER
-- On HAT reduce production is_acsl_other -> INTEGER
-- On GTGT reduce production is_acsl_other -> INTEGER
-- On GT reduce production is_acsl_other -> INTEGER
-- On GLOBAL reduce production is_acsl_other -> INTEGER
-- On GHOST reduce production is_acsl_other -> INTEGER
-- On GE reduce production is_acsl_other -> INTEGER
-- On FUNCTION reduce production is_acsl_other -> INTEGER
-- On FROM reduce production is_acsl_other -> INTEGER
-- On FRESH reduce production is_acsl_other -> INTEGER
-- On FREES reduce production is_acsl_other -> INTEGER
-- On FREEABLE reduce production is_acsl_other -> INTEGER
-- On FORALL reduce production is_acsl_other -> INTEGER
-- On FOR reduce production is_acsl_other -> INTEGER
-- On FLOAT reduce production is_acsl_other -> INTEGER
-- On FALSE reduce production is_acsl_other -> INTEGER
-- On EXT_LET reduce production is_acsl_other -> INTEGER
-- On EXT_AT reduce production is_acsl_other -> INTEGER
-- On EXITS reduce production is_acsl_other -> INTEGER
-- On EXISTS reduce production is_acsl_other -> INTEGER
-- On EQUAL reduce production is_acsl_other -> INTEGER
-- On EQ reduce production is_acsl_other -> INTEGER
-- On EOF reduce production is_acsl_other -> INTEGER
-- On ENUM reduce production is_acsl_other -> INTEGER
-- On ENSURES reduce production is_acsl_other -> INTEGER
-- On EMPTY reduce production is_acsl_other -> INTEGER
-- On ELSE reduce production is_acsl_other -> INTEGER
-- On DYNAMIC reduce production is_acsl_other -> INTEGER
-- On DOUBLE reduce production is_acsl_other -> INTEGER
-- On DOTDOTDOT reduce production is_acsl_other -> INTEGER
-- On DOTDOT reduce production is_acsl_other -> INTEGER
-- On DOT reduce production is_acsl_other -> INTEGER
-- On DOLLAR reduce production is_acsl_other -> INTEGER
-- On DISJOINT reduce production is_acsl_other -> INTEGER
-- On DECREASES reduce production is_acsl_other -> INTEGER
-- On DANGLING reduce production is_acsl_other -> INTEGER
-- On CUSTOM reduce production is_acsl_other -> INTEGER
-- On CONTRACT reduce production is_acsl_other -> INTEGER
-- On CONTINUES reduce production is_acsl_other -> INTEGER
-- On CONSTANT10 reduce production is_acsl_other -> INTEGER
-- On CONSTANT reduce production is_acsl_other -> INTEGER
-- On CONST reduce production is_acsl_other -> INTEGER
-- On COMPLETE reduce production is_acsl_other -> INTEGER
-- On COMMA reduce production is_acsl_other -> INTEGER
-- On COLONGT reduce production is_acsl_other -> INTEGER
-- On COLONCOLON reduce production is_acsl_other -> INTEGER
-- On COLON2 reduce production is_acsl_other -> INTEGER
-- On COLON reduce production is_acsl_other -> INTEGER
-- On CHAR reduce production is_acsl_other -> INTEGER
-- On CASE reduce production is_acsl_other -> INTEGER
-- On BSUNION reduce production is_acsl_other -> INTEGER
-- On BSTYPE reduce production is_acsl_other -> INTEGER
-- On BREAKS reduce production is_acsl_other -> INTEGER
-- On BOOLEAN reduce production is_acsl_other -> INTEGER
-- On BOOL reduce production is_acsl_other -> INTEGER
-- On BLOCK_LENGTH reduce production is_acsl_other -> INTEGER
-- On BIMPLIES reduce production is_acsl_other -> INTEGER
-- On BIFF reduce production is_acsl_other -> INTEGER
-- On BEHAVIORS reduce production is_acsl_other -> INTEGER
-- On BEHAVIOR reduce production is_acsl_other -> INTEGER
-- On BASE_ADDR reduce production is_acsl_other -> INTEGER
-- On AXIOMATIC reduce production is_acsl_other -> INTEGER
-- On AXIOM reduce production is_acsl_other -> INTEGER
-- On AUTOMATIC reduce production is_acsl_other -> INTEGER
-- On AT reduce production is_acsl_other -> INTEGER
-- On ASSUMES reduce production is_acsl_other -> INTEGER
-- On ASSIGNS reduce production is_acsl_other -> INTEGER
-- On ASSERT reduce production is_acsl_other -> INTEGER
-- On ARROW reduce production is_acsl_other -> INTEGER
-- On AND reduce production is_acsl_other -> INTEGER
-- On AMP reduce production is_acsl_other -> INTEGER
-- On ALLOCATION reduce production is_acsl_other -> INTEGER
-- On ALLOCATES reduce production is_acsl_other -> INTEGER
-- On ALLOCABLE reduce production is_acsl_other -> INTEGER

State 34:
## Known stack suffix:
## INT
## LR(1) items:
c_keyword -> INT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> INT
-- On WITH reduce production c_keyword -> INT
-- On VOLATILE reduce production c_keyword -> INT
-- On VOID reduce production c_keyword -> INT
-- On VARIANT reduce production c_keyword -> INT
-- On VALID_READ reduce production c_keyword -> INT
-- On VALID_RANGE reduce production c_keyword -> INT
-- On VALID_INDEX reduce production c_keyword -> INT
-- On VALID reduce production c_keyword -> INT
-- On UNSIGNED reduce production c_keyword -> INT
-- On UNION reduce production c_keyword -> INT
-- On UNALLOCATED reduce production c_keyword -> INT
-- On TYPEOF reduce production c_keyword -> INT
-- On TYPENAME reduce production c_keyword -> INT
-- On TYPE reduce production c_keyword -> INT
-- On TRUE reduce production c_keyword -> INT
-- On TILDE reduce production c_keyword -> INT
-- On TERMINATES reduce production c_keyword -> INT
-- On STRUCT reduce production c_keyword -> INT
-- On STRING_LITERAL reduce production c_keyword -> INT
-- On STATIC reduce production c_keyword -> INT
-- On STAR reduce production c_keyword -> INT
-- On SLICE reduce production c_keyword -> INT
-- On SLASH reduce production c_keyword -> INT
-- On SIZEOF reduce production c_keyword -> INT
-- On SIGNED reduce production c_keyword -> INT
-- On SHORT reduce production c_keyword -> INT
-- On SEPARATED reduce production c_keyword -> INT
-- On SEMICOLON reduce production c_keyword -> INT
-- On RSQUARE reduce production c_keyword -> INT
-- On RPAR reduce production c_keyword -> INT
-- On RETURNS reduce production c_keyword -> INT
-- On RESULT reduce production c_keyword -> INT
-- On REQUIRES reduce production c_keyword -> INT
-- On REGISTER reduce production c_keyword -> INT
-- On REAL reduce production c_keyword -> INT
-- On READS reduce production c_keyword -> INT
-- On RBRACE reduce production c_keyword -> INT
-- On QUESTION reduce production c_keyword -> INT
-- On PREDICATE reduce production c_keyword -> INT
-- On PRAGMA reduce production c_keyword -> INT
-- On PLUS reduce production c_keyword -> INT
-- On PIPE reduce production c_keyword -> INT
-- On PERCENT reduce production c_keyword -> INT
-- On OR reduce production c_keyword -> INT
-- On OLD reduce production c_keyword -> INT
-- On OFFSET reduce production c_keyword -> INT
-- On NULL reduce production c_keyword -> INT
-- On NOTHING reduce production c_keyword -> INT
-- On NOT reduce production c_keyword -> INT
-- On NE reduce production c_keyword -> INT
-- On MODULE reduce production c_keyword -> INT
-- On MODEL reduce production c_keyword -> INT
-- On MINUS reduce production c_keyword -> INT
-- On LTLT reduce production c_keyword -> INT
-- On LTCOLON reduce production c_keyword -> INT
-- On LT reduce production c_keyword -> INT
-- On LSQUARE reduce production c_keyword -> INT
-- On LPAR reduce production c_keyword -> INT
-- On LOOP reduce production c_keyword -> INT
-- On LONG reduce production c_keyword -> INT
-- On LOGIC reduce production c_keyword -> INT
-- On LET reduce production c_keyword -> INT
-- On LEMMA reduce production c_keyword -> INT
-- On LE reduce production c_keyword -> INT
-- On LBRACE reduce production c_keyword -> INT
-- On LAMBDA reduce production c_keyword -> INT
-- On LABEL reduce production c_keyword -> INT
-- On INVARIANT reduce production c_keyword -> INT
-- On INTER reduce production c_keyword -> INT
-- On INTEGER reduce production c_keyword -> INT
-- On INT reduce production c_keyword -> INT
-- On INITIALIZED reduce production c_keyword -> INT
-- On INDUCTIVE reduce production c_keyword -> INT
-- On INCLUDE reduce production c_keyword -> INT
-- On IMPLIES reduce production c_keyword -> INT
-- On IMPACT reduce production c_keyword -> INT
-- On IFF reduce production c_keyword -> INT
-- On IF reduce production c_keyword -> INT
-- On IDENTIFIER reduce production c_keyword -> INT
-- On HATHAT reduce production c_keyword -> INT
-- On HAT reduce production c_keyword -> INT
-- On GTGT reduce production c_keyword -> INT
-- On GT reduce production c_keyword -> INT
-- On GLOBAL reduce production c_keyword -> INT
-- On GHOST reduce production c_keyword -> INT
-- On GE reduce production c_keyword -> INT
-- On FUNCTION reduce production c_keyword -> INT
-- On FROM reduce production c_keyword -> INT
-- On FRESH reduce production c_keyword -> INT
-- On FREES reduce production c_keyword -> INT
-- On FREEABLE reduce production c_keyword -> INT
-- On FORALL reduce production c_keyword -> INT
-- On FOR reduce production c_keyword -> INT
-- On FLOAT reduce production c_keyword -> INT
-- On FALSE reduce production c_keyword -> INT
-- On EXT_LET reduce production c_keyword -> INT
-- On EXT_AT reduce production c_keyword -> INT
-- On EXITS reduce production c_keyword -> INT
-- On EXISTS reduce production c_keyword -> INT
-- On EQUAL reduce production c_keyword -> INT
-- On EQ reduce production c_keyword -> INT
-- On EOF reduce production c_keyword -> INT
-- On ENUM reduce production c_keyword -> INT
-- On ENSURES reduce production c_keyword -> INT
-- On EMPTY reduce production c_keyword -> INT
-- On ELSE reduce production c_keyword -> INT
-- On DYNAMIC reduce production c_keyword -> INT
-- On DOUBLE reduce production c_keyword -> INT
-- On DOTDOTDOT reduce production c_keyword -> INT
-- On DOTDOT reduce production c_keyword -> INT
-- On DOT reduce production c_keyword -> INT
-- On DOLLAR reduce production c_keyword -> INT
-- On DISJOINT reduce production c_keyword -> INT
-- On DECREASES reduce production c_keyword -> INT
-- On DANGLING reduce production c_keyword -> INT
-- On CUSTOM reduce production c_keyword -> INT
-- On CONTRACT reduce production c_keyword -> INT
-- On CONTINUES reduce production c_keyword -> INT
-- On CONSTANT10 reduce production c_keyword -> INT
-- On CONSTANT reduce production c_keyword -> INT
-- On CONST reduce production c_keyword -> INT
-- On COMPLETE reduce production c_keyword -> INT
-- On COMMA reduce production c_keyword -> INT
-- On COLONGT reduce production c_keyword -> INT
-- On COLONCOLON reduce production c_keyword -> INT
-- On COLON2 reduce production c_keyword -> INT
-- On COLON reduce production c_keyword -> INT
-- On CHAR reduce production c_keyword -> INT
-- On CASE reduce production c_keyword -> INT
-- On BSUNION reduce production c_keyword -> INT
-- On BSTYPE reduce production c_keyword -> INT
-- On BREAKS reduce production c_keyword -> INT
-- On BOOLEAN reduce production c_keyword -> INT
-- On BOOL reduce production c_keyword -> INT
-- On BLOCK_LENGTH reduce production c_keyword -> INT
-- On BIMPLIES reduce production c_keyword -> INT
-- On BIFF reduce production c_keyword -> INT
-- On BEHAVIORS reduce production c_keyword -> INT
-- On BEHAVIOR reduce production c_keyword -> INT
-- On BASE_ADDR reduce production c_keyword -> INT
-- On AXIOMATIC reduce production c_keyword -> INT
-- On AXIOM reduce production c_keyword -> INT
-- On AUTOMATIC reduce production c_keyword -> INT
-- On AT reduce production c_keyword -> INT
-- On ASSUMES reduce production c_keyword -> INT
-- On ASSIGNS reduce production c_keyword -> INT
-- On ASSERT reduce production c_keyword -> INT
-- On ARROW reduce production c_keyword -> INT
-- On AND reduce production c_keyword -> INT
-- On AMP reduce production c_keyword -> INT
-- On ALLOCATION reduce production c_keyword -> INT
-- On ALLOCATES reduce production c_keyword -> INT
-- On ALLOCABLE reduce production c_keyword -> INT

State 35:
## Known stack suffix:
## INDUCTIVE
## LR(1) items:
is_acsl_decl_or_code_annot -> INDUCTIVE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On WITH reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On VOLATILE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On VOID reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On VARIANT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On VALID_READ reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On VALID_RANGE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On VALID_INDEX reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On VALID reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On UNSIGNED reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On UNION reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On UNALLOCATED reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On TYPEOF reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On TYPENAME reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On TYPE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On TRUE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On TILDE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On TERMINATES reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On STRUCT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On STRING_LITERAL reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On STATIC reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On STAR reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On SLICE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On SLASH reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On SIZEOF reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On SIGNED reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On SHORT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On SEPARATED reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On SEMICOLON reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On RSQUARE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On RPAR reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On RETURNS reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On RESULT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On REQUIRES reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On REGISTER reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On REAL reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On READS reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On RBRACE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On QUESTION reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On PREDICATE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On PRAGMA reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On PLUS reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On PIPE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On PERCENT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On OR reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On OLD reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On OFFSET reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On NULL reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On NOTHING reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On NOT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On NE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On MODULE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On MODEL reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On MINUS reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On LTLT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On LTCOLON reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On LT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On LSQUARE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On LPAR reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On LOOP reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On LONG reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On LOGIC reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On LET reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On LEMMA reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On LE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On LBRACE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On LAMBDA reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On LABEL reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On INVARIANT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On INTER reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On INTEGER reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On INT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On INITIALIZED reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On INDUCTIVE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On INCLUDE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On IMPLIES reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On IMPACT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On IFF reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On IF reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On IDENTIFIER reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On HATHAT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On HAT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On GTGT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On GT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On GLOBAL reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On GHOST reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On GE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On FUNCTION reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On FROM reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On FRESH reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On FREES reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On FREEABLE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On FORALL reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On FOR reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On FLOAT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On FALSE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On EXT_LET reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On EXT_AT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On EXITS reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On EXISTS reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On EQUAL reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On EQ reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On EOF reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On ENUM reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On ENSURES reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On EMPTY reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On ELSE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On DYNAMIC reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On DOUBLE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On DOTDOTDOT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On DOTDOT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On DOT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On DOLLAR reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On DISJOINT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On DECREASES reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On DANGLING reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On CUSTOM reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On CONTRACT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On CONTINUES reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On CONSTANT10 reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On CONSTANT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On CONST reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On COMPLETE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On COMMA reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On COLONGT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On COLONCOLON reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On COLON2 reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On COLON reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On CHAR reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On CASE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On BSUNION reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On BSTYPE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On BREAKS reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On BOOLEAN reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On BOOL reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On BLOCK_LENGTH reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On BIMPLIES reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On BIFF reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On BEHAVIORS reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On BEHAVIOR reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On BASE_ADDR reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On AXIOMATIC reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On AXIOM reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On AUTOMATIC reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On AT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On ASSUMES reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On ASSIGNS reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On ASSERT reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On ARROW reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On AND reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On AMP reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On ALLOCATION reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On ALLOCATES reduce production is_acsl_decl_or_code_annot -> INDUCTIVE
-- On ALLOCABLE reduce production is_acsl_decl_or_code_annot -> INDUCTIVE

State 36:
## Known stack suffix:
## INCLUDE
## LR(1) items:
is_ext_spec -> INCLUDE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_ext_spec -> INCLUDE
-- On WITH reduce production is_ext_spec -> INCLUDE
-- On VOLATILE reduce production is_ext_spec -> INCLUDE
-- On VOID reduce production is_ext_spec -> INCLUDE
-- On VARIANT reduce production is_ext_spec -> INCLUDE
-- On VALID_READ reduce production is_ext_spec -> INCLUDE
-- On VALID_RANGE reduce production is_ext_spec -> INCLUDE
-- On VALID_INDEX reduce production is_ext_spec -> INCLUDE
-- On VALID reduce production is_ext_spec -> INCLUDE
-- On UNSIGNED reduce production is_ext_spec -> INCLUDE
-- On UNION reduce production is_ext_spec -> INCLUDE
-- On UNALLOCATED reduce production is_ext_spec -> INCLUDE
-- On TYPEOF reduce production is_ext_spec -> INCLUDE
-- On TYPENAME reduce production is_ext_spec -> INCLUDE
-- On TYPE reduce production is_ext_spec -> INCLUDE
-- On TRUE reduce production is_ext_spec -> INCLUDE
-- On TILDE reduce production is_ext_spec -> INCLUDE
-- On TERMINATES reduce production is_ext_spec -> INCLUDE
-- On STRUCT reduce production is_ext_spec -> INCLUDE
-- On STRING_LITERAL reduce production is_ext_spec -> INCLUDE
-- On STATIC reduce production is_ext_spec -> INCLUDE
-- On STAR reduce production is_ext_spec -> INCLUDE
-- On SLICE reduce production is_ext_spec -> INCLUDE
-- On SLASH reduce production is_ext_spec -> INCLUDE
-- On SIZEOF reduce production is_ext_spec -> INCLUDE
-- On SIGNED reduce production is_ext_spec -> INCLUDE
-- On SHORT reduce production is_ext_spec -> INCLUDE
-- On SEPARATED reduce production is_ext_spec -> INCLUDE
-- On SEMICOLON reduce production is_ext_spec -> INCLUDE
-- On RSQUARE reduce production is_ext_spec -> INCLUDE
-- On RPAR reduce production is_ext_spec -> INCLUDE
-- On RETURNS reduce production is_ext_spec -> INCLUDE
-- On RESULT reduce production is_ext_spec -> INCLUDE
-- On REQUIRES reduce production is_ext_spec -> INCLUDE
-- On REGISTER reduce production is_ext_spec -> INCLUDE
-- On REAL reduce production is_ext_spec -> INCLUDE
-- On READS reduce production is_ext_spec -> INCLUDE
-- On RBRACE reduce production is_ext_spec -> INCLUDE
-- On QUESTION reduce production is_ext_spec -> INCLUDE
-- On PREDICATE reduce production is_ext_spec -> INCLUDE
-- On PRAGMA reduce production is_ext_spec -> INCLUDE
-- On PLUS reduce production is_ext_spec -> INCLUDE
-- On PIPE reduce production is_ext_spec -> INCLUDE
-- On PERCENT reduce production is_ext_spec -> INCLUDE
-- On OR reduce production is_ext_spec -> INCLUDE
-- On OLD reduce production is_ext_spec -> INCLUDE
-- On OFFSET reduce production is_ext_spec -> INCLUDE
-- On NULL reduce production is_ext_spec -> INCLUDE
-- On NOTHING reduce production is_ext_spec -> INCLUDE
-- On NOT reduce production is_ext_spec -> INCLUDE
-- On NE reduce production is_ext_spec -> INCLUDE
-- On MODULE reduce production is_ext_spec -> INCLUDE
-- On MODEL reduce production is_ext_spec -> INCLUDE
-- On MINUS reduce production is_ext_spec -> INCLUDE
-- On LTLT reduce production is_ext_spec -> INCLUDE
-- On LTCOLON reduce production is_ext_spec -> INCLUDE
-- On LT reduce production is_ext_spec -> INCLUDE
-- On LSQUARE reduce production is_ext_spec -> INCLUDE
-- On LPAR reduce production is_ext_spec -> INCLUDE
-- On LOOP reduce production is_ext_spec -> INCLUDE
-- On LONG reduce production is_ext_spec -> INCLUDE
-- On LOGIC reduce production is_ext_spec -> INCLUDE
-- On LET reduce production is_ext_spec -> INCLUDE
-- On LEMMA reduce production is_ext_spec -> INCLUDE
-- On LE reduce production is_ext_spec -> INCLUDE
-- On LBRACE reduce production is_ext_spec -> INCLUDE
-- On LAMBDA reduce production is_ext_spec -> INCLUDE
-- On LABEL reduce production is_ext_spec -> INCLUDE
-- On INVARIANT reduce production is_ext_spec -> INCLUDE
-- On INTER reduce production is_ext_spec -> INCLUDE
-- On INTEGER reduce production is_ext_spec -> INCLUDE
-- On INT reduce production is_ext_spec -> INCLUDE
-- On INITIALIZED reduce production is_ext_spec -> INCLUDE
-- On INDUCTIVE reduce production is_ext_spec -> INCLUDE
-- On INCLUDE reduce production is_ext_spec -> INCLUDE
-- On IMPLIES reduce production is_ext_spec -> INCLUDE
-- On IMPACT reduce production is_ext_spec -> INCLUDE
-- On IFF reduce production is_ext_spec -> INCLUDE
-- On IF reduce production is_ext_spec -> INCLUDE
-- On IDENTIFIER reduce production is_ext_spec -> INCLUDE
-- On HATHAT reduce production is_ext_spec -> INCLUDE
-- On HAT reduce production is_ext_spec -> INCLUDE
-- On GTGT reduce production is_ext_spec -> INCLUDE
-- On GT reduce production is_ext_spec -> INCLUDE
-- On GLOBAL reduce production is_ext_spec -> INCLUDE
-- On GHOST reduce production is_ext_spec -> INCLUDE
-- On GE reduce production is_ext_spec -> INCLUDE
-- On FUNCTION reduce production is_ext_spec -> INCLUDE
-- On FROM reduce production is_ext_spec -> INCLUDE
-- On FRESH reduce production is_ext_spec -> INCLUDE
-- On FREES reduce production is_ext_spec -> INCLUDE
-- On FREEABLE reduce production is_ext_spec -> INCLUDE
-- On FORALL reduce production is_ext_spec -> INCLUDE
-- On FOR reduce production is_ext_spec -> INCLUDE
-- On FLOAT reduce production is_ext_spec -> INCLUDE
-- On FALSE reduce production is_ext_spec -> INCLUDE
-- On EXT_LET reduce production is_ext_spec -> INCLUDE
-- On EXT_AT reduce production is_ext_spec -> INCLUDE
-- On EXITS reduce production is_ext_spec -> INCLUDE
-- On EXISTS reduce production is_ext_spec -> INCLUDE
-- On EQUAL reduce production is_ext_spec -> INCLUDE
-- On EQ reduce production is_ext_spec -> INCLUDE
-- On EOF reduce production is_ext_spec -> INCLUDE
-- On ENUM reduce production is_ext_spec -> INCLUDE
-- On ENSURES reduce production is_ext_spec -> INCLUDE
-- On EMPTY reduce production is_ext_spec -> INCLUDE
-- On ELSE reduce production is_ext_spec -> INCLUDE
-- On DYNAMIC reduce production is_ext_spec -> INCLUDE
-- On DOUBLE reduce production is_ext_spec -> INCLUDE
-- On DOTDOTDOT reduce production is_ext_spec -> INCLUDE
-- On DOTDOT reduce production is_ext_spec -> INCLUDE
-- On DOT reduce production is_ext_spec -> INCLUDE
-- On DOLLAR reduce production is_ext_spec -> INCLUDE
-- On DISJOINT reduce production is_ext_spec -> INCLUDE
-- On DECREASES reduce production is_ext_spec -> INCLUDE
-- On DANGLING reduce production is_ext_spec -> INCLUDE
-- On CUSTOM reduce production is_ext_spec -> INCLUDE
-- On CONTRACT reduce production is_ext_spec -> INCLUDE
-- On CONTINUES reduce production is_ext_spec -> INCLUDE
-- On CONSTANT10 reduce production is_ext_spec -> INCLUDE
-- On CONSTANT reduce production is_ext_spec -> INCLUDE
-- On CONST reduce production is_ext_spec -> INCLUDE
-- On COMPLETE reduce production is_ext_spec -> INCLUDE
-- On COMMA reduce production is_ext_spec -> INCLUDE
-- On COLONGT reduce production is_ext_spec -> INCLUDE
-- On COLONCOLON reduce production is_ext_spec -> INCLUDE
-- On COLON2 reduce production is_ext_spec -> INCLUDE
-- On COLON reduce production is_ext_spec -> INCLUDE
-- On CHAR reduce production is_ext_spec -> INCLUDE
-- On CASE reduce production is_ext_spec -> INCLUDE
-- On BSUNION reduce production is_ext_spec -> INCLUDE
-- On BSTYPE reduce production is_ext_spec -> INCLUDE
-- On BREAKS reduce production is_ext_spec -> INCLUDE
-- On BOOLEAN reduce production is_ext_spec -> INCLUDE
-- On BOOL reduce production is_ext_spec -> INCLUDE
-- On BLOCK_LENGTH reduce production is_ext_spec -> INCLUDE
-- On BIMPLIES reduce production is_ext_spec -> INCLUDE
-- On BIFF reduce production is_ext_spec -> INCLUDE
-- On BEHAVIORS reduce production is_ext_spec -> INCLUDE
-- On BEHAVIOR reduce production is_ext_spec -> INCLUDE
-- On BASE_ADDR reduce production is_ext_spec -> INCLUDE
-- On AXIOMATIC reduce production is_ext_spec -> INCLUDE
-- On AXIOM reduce production is_ext_spec -> INCLUDE
-- On AUTOMATIC reduce production is_ext_spec -> INCLUDE
-- On AT reduce production is_ext_spec -> INCLUDE
-- On ASSUMES reduce production is_ext_spec -> INCLUDE
-- On ASSIGNS reduce production is_ext_spec -> INCLUDE
-- On ASSERT reduce production is_ext_spec -> INCLUDE
-- On ARROW reduce production is_ext_spec -> INCLUDE
-- On AND reduce production is_ext_spec -> INCLUDE
-- On AMP reduce production is_ext_spec -> INCLUDE
-- On ALLOCATION reduce production is_ext_spec -> INCLUDE
-- On ALLOCATES reduce production is_ext_spec -> INCLUDE
-- On ALLOCABLE reduce production is_ext_spec -> INCLUDE

State 37:
## Known stack suffix:
## IMPACT
## LR(1) items:
is_acsl_decl_or_code_annot -> IMPACT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On WITH reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On VOLATILE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On VOID reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On VARIANT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On VALID_READ reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On VALID_RANGE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On VALID_INDEX reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On VALID reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On UNSIGNED reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On UNION reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On UNALLOCATED reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On TYPEOF reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On TYPENAME reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On TYPE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On TRUE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On TILDE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On TERMINATES reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On STRUCT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On STRING_LITERAL reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On STATIC reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On STAR reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On SLICE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On SLASH reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On SIZEOF reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On SIGNED reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On SHORT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On SEPARATED reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On SEMICOLON reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On RSQUARE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On RPAR reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On RETURNS reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On RESULT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On REQUIRES reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On REGISTER reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On REAL reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On READS reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On RBRACE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On QUESTION reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On PREDICATE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On PRAGMA reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On PLUS reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On PIPE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On PERCENT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On OR reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On OLD reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On OFFSET reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On NULL reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On NOTHING reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On NOT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On NE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On MODULE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On MODEL reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On MINUS reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On LTLT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On LTCOLON reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On LT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On LSQUARE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On LPAR reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On LOOP reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On LONG reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On LOGIC reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On LET reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On LEMMA reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On LE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On LBRACE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On LAMBDA reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On LABEL reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On INVARIANT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On INTER reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On INTEGER reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On INT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On INITIALIZED reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On INDUCTIVE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On INCLUDE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On IMPLIES reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On IMPACT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On IFF reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On IF reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On IDENTIFIER reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On HATHAT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On HAT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On GTGT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On GT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On GLOBAL reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On GHOST reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On GE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On FUNCTION reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On FROM reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On FRESH reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On FREES reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On FREEABLE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On FORALL reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On FOR reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On FLOAT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On FALSE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On EXT_LET reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On EXT_AT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On EXITS reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On EXISTS reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On EQUAL reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On EQ reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On EOF reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On ENUM reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On ENSURES reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On EMPTY reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On ELSE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On DYNAMIC reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On DOUBLE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On DOTDOTDOT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On DOTDOT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On DOT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On DOLLAR reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On DISJOINT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On DECREASES reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On DANGLING reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On CUSTOM reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On CONTRACT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On CONTINUES reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On CONSTANT10 reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On CONSTANT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On CONST reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On COMPLETE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On COMMA reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On COLONGT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On COLONCOLON reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On COLON2 reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On COLON reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On CHAR reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On CASE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On BSUNION reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On BSTYPE reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On BREAKS reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On BOOLEAN reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On BOOL reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On BLOCK_LENGTH reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On BIMPLIES reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On BIFF reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On BEHAVIORS reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On BEHAVIOR reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On BASE_ADDR reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On AXIOMATIC reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On AXIOM reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On AUTOMATIC reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On AT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On ASSUMES reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On ASSIGNS reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On ASSERT reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On ARROW reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On AND reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On AMP reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On ALLOCATION reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On ALLOCATES reduce production is_acsl_decl_or_code_annot -> IMPACT
-- On ALLOCABLE reduce production is_acsl_decl_or_code_annot -> IMPACT

State 38:
## Known stack suffix:
## IF
## LR(1) items:
c_keyword -> IF . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> IF
-- On WITH reduce production c_keyword -> IF
-- On VOLATILE reduce production c_keyword -> IF
-- On VOID reduce production c_keyword -> IF
-- On VARIANT reduce production c_keyword -> IF
-- On VALID_READ reduce production c_keyword -> IF
-- On VALID_RANGE reduce production c_keyword -> IF
-- On VALID_INDEX reduce production c_keyword -> IF
-- On VALID reduce production c_keyword -> IF
-- On UNSIGNED reduce production c_keyword -> IF
-- On UNION reduce production c_keyword -> IF
-- On UNALLOCATED reduce production c_keyword -> IF
-- On TYPEOF reduce production c_keyword -> IF
-- On TYPENAME reduce production c_keyword -> IF
-- On TYPE reduce production c_keyword -> IF
-- On TRUE reduce production c_keyword -> IF
-- On TILDE reduce production c_keyword -> IF
-- On TERMINATES reduce production c_keyword -> IF
-- On STRUCT reduce production c_keyword -> IF
-- On STRING_LITERAL reduce production c_keyword -> IF
-- On STATIC reduce production c_keyword -> IF
-- On STAR reduce production c_keyword -> IF
-- On SLICE reduce production c_keyword -> IF
-- On SLASH reduce production c_keyword -> IF
-- On SIZEOF reduce production c_keyword -> IF
-- On SIGNED reduce production c_keyword -> IF
-- On SHORT reduce production c_keyword -> IF
-- On SEPARATED reduce production c_keyword -> IF
-- On SEMICOLON reduce production c_keyword -> IF
-- On RSQUARE reduce production c_keyword -> IF
-- On RPAR reduce production c_keyword -> IF
-- On RETURNS reduce production c_keyword -> IF
-- On RESULT reduce production c_keyword -> IF
-- On REQUIRES reduce production c_keyword -> IF
-- On REGISTER reduce production c_keyword -> IF
-- On REAL reduce production c_keyword -> IF
-- On READS reduce production c_keyword -> IF
-- On RBRACE reduce production c_keyword -> IF
-- On QUESTION reduce production c_keyword -> IF
-- On PREDICATE reduce production c_keyword -> IF
-- On PRAGMA reduce production c_keyword -> IF
-- On PLUS reduce production c_keyword -> IF
-- On PIPE reduce production c_keyword -> IF
-- On PERCENT reduce production c_keyword -> IF
-- On OR reduce production c_keyword -> IF
-- On OLD reduce production c_keyword -> IF
-- On OFFSET reduce production c_keyword -> IF
-- On NULL reduce production c_keyword -> IF
-- On NOTHING reduce production c_keyword -> IF
-- On NOT reduce production c_keyword -> IF
-- On NE reduce production c_keyword -> IF
-- On MODULE reduce production c_keyword -> IF
-- On MODEL reduce production c_keyword -> IF
-- On MINUS reduce production c_keyword -> IF
-- On LTLT reduce production c_keyword -> IF
-- On LTCOLON reduce production c_keyword -> IF
-- On LT reduce production c_keyword -> IF
-- On LSQUARE reduce production c_keyword -> IF
-- On LPAR reduce production c_keyword -> IF
-- On LOOP reduce production c_keyword -> IF
-- On LONG reduce production c_keyword -> IF
-- On LOGIC reduce production c_keyword -> IF
-- On LET reduce production c_keyword -> IF
-- On LEMMA reduce production c_keyword -> IF
-- On LE reduce production c_keyword -> IF
-- On LBRACE reduce production c_keyword -> IF
-- On LAMBDA reduce production c_keyword -> IF
-- On LABEL reduce production c_keyword -> IF
-- On INVARIANT reduce production c_keyword -> IF
-- On INTER reduce production c_keyword -> IF
-- On INTEGER reduce production c_keyword -> IF
-- On INT reduce production c_keyword -> IF
-- On INITIALIZED reduce production c_keyword -> IF
-- On INDUCTIVE reduce production c_keyword -> IF
-- On INCLUDE reduce production c_keyword -> IF
-- On IMPLIES reduce production c_keyword -> IF
-- On IMPACT reduce production c_keyword -> IF
-- On IFF reduce production c_keyword -> IF
-- On IF reduce production c_keyword -> IF
-- On IDENTIFIER reduce production c_keyword -> IF
-- On HATHAT reduce production c_keyword -> IF
-- On HAT reduce production c_keyword -> IF
-- On GTGT reduce production c_keyword -> IF
-- On GT reduce production c_keyword -> IF
-- On GLOBAL reduce production c_keyword -> IF
-- On GHOST reduce production c_keyword -> IF
-- On GE reduce production c_keyword -> IF
-- On FUNCTION reduce production c_keyword -> IF
-- On FROM reduce production c_keyword -> IF
-- On FRESH reduce production c_keyword -> IF
-- On FREES reduce production c_keyword -> IF
-- On FREEABLE reduce production c_keyword -> IF
-- On FORALL reduce production c_keyword -> IF
-- On FOR reduce production c_keyword -> IF
-- On FLOAT reduce production c_keyword -> IF
-- On FALSE reduce production c_keyword -> IF
-- On EXT_LET reduce production c_keyword -> IF
-- On EXT_AT reduce production c_keyword -> IF
-- On EXITS reduce production c_keyword -> IF
-- On EXISTS reduce production c_keyword -> IF
-- On EQUAL reduce production c_keyword -> IF
-- On EQ reduce production c_keyword -> IF
-- On EOF reduce production c_keyword -> IF
-- On ENUM reduce production c_keyword -> IF
-- On ENSURES reduce production c_keyword -> IF
-- On EMPTY reduce production c_keyword -> IF
-- On ELSE reduce production c_keyword -> IF
-- On DYNAMIC reduce production c_keyword -> IF
-- On DOUBLE reduce production c_keyword -> IF
-- On DOTDOTDOT reduce production c_keyword -> IF
-- On DOTDOT reduce production c_keyword -> IF
-- On DOT reduce production c_keyword -> IF
-- On DOLLAR reduce production c_keyword -> IF
-- On DISJOINT reduce production c_keyword -> IF
-- On DECREASES reduce production c_keyword -> IF
-- On DANGLING reduce production c_keyword -> IF
-- On CUSTOM reduce production c_keyword -> IF
-- On CONTRACT reduce production c_keyword -> IF
-- On CONTINUES reduce production c_keyword -> IF
-- On CONSTANT10 reduce production c_keyword -> IF
-- On CONSTANT reduce production c_keyword -> IF
-- On CONST reduce production c_keyword -> IF
-- On COMPLETE reduce production c_keyword -> IF
-- On COMMA reduce production c_keyword -> IF
-- On COLONGT reduce production c_keyword -> IF
-- On COLONCOLON reduce production c_keyword -> IF
-- On COLON2 reduce production c_keyword -> IF
-- On COLON reduce production c_keyword -> IF
-- On CHAR reduce production c_keyword -> IF
-- On CASE reduce production c_keyword -> IF
-- On BSUNION reduce production c_keyword -> IF
-- On BSTYPE reduce production c_keyword -> IF
-- On BREAKS reduce production c_keyword -> IF
-- On BOOLEAN reduce production c_keyword -> IF
-- On BOOL reduce production c_keyword -> IF
-- On BLOCK_LENGTH reduce production c_keyword -> IF
-- On BIMPLIES reduce production c_keyword -> IF
-- On BIFF reduce production c_keyword -> IF
-- On BEHAVIORS reduce production c_keyword -> IF
-- On BEHAVIOR reduce production c_keyword -> IF
-- On BASE_ADDR reduce production c_keyword -> IF
-- On AXIOMATIC reduce production c_keyword -> IF
-- On AXIOM reduce production c_keyword -> IF
-- On AUTOMATIC reduce production c_keyword -> IF
-- On AT reduce production c_keyword -> IF
-- On ASSUMES reduce production c_keyword -> IF
-- On ASSIGNS reduce production c_keyword -> IF
-- On ASSERT reduce production c_keyword -> IF
-- On ARROW reduce production c_keyword -> IF
-- On AND reduce production c_keyword -> IF
-- On AMP reduce production c_keyword -> IF
-- On ALLOCATION reduce production c_keyword -> IF
-- On ALLOCATES reduce production c_keyword -> IF
-- On ALLOCABLE reduce production c_keyword -> IF

State 39:
## Known stack suffix:
## IDENTIFIER
## LR(1) items:
identifier_or_typename -> IDENTIFIER . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production identifier_or_typename -> IDENTIFIER
-- On WITH reduce production identifier_or_typename -> IDENTIFIER
-- On VOLATILE reduce production identifier_or_typename -> IDENTIFIER
-- On VOID reduce production identifier_or_typename -> IDENTIFIER
-- On VARIANT reduce production identifier_or_typename -> IDENTIFIER
-- On VALID_READ reduce production identifier_or_typename -> IDENTIFIER
-- On VALID_RANGE reduce production identifier_or_typename -> IDENTIFIER
-- On VALID_INDEX reduce production identifier_or_typename -> IDENTIFIER
-- On VALID reduce production identifier_or_typename -> IDENTIFIER
-- On UNSIGNED reduce production identifier_or_typename -> IDENTIFIER
-- On UNION reduce production identifier_or_typename -> IDENTIFIER
-- On UNALLOCATED reduce production identifier_or_typename -> IDENTIFIER
-- On TYPEOF reduce production identifier_or_typename -> IDENTIFIER
-- On TYPENAME reduce production identifier_or_typename -> IDENTIFIER
-- On TYPE reduce production identifier_or_typename -> IDENTIFIER
-- On TRUE reduce production identifier_or_typename -> IDENTIFIER
-- On TILDE reduce production identifier_or_typename -> IDENTIFIER
-- On TERMINATES reduce production identifier_or_typename -> IDENTIFIER
-- On STRUCT reduce production identifier_or_typename -> IDENTIFIER
-- On STRING_LITERAL reduce production identifier_or_typename -> IDENTIFIER
-- On STATIC reduce production identifier_or_typename -> IDENTIFIER
-- On STAR reduce production identifier_or_typename -> IDENTIFIER
-- On SLICE reduce production identifier_or_typename -> IDENTIFIER
-- On SLASH reduce production identifier_or_typename -> IDENTIFIER
-- On SIZEOF reduce production identifier_or_typename -> IDENTIFIER
-- On SIGNED reduce production identifier_or_typename -> IDENTIFIER
-- On SHORT reduce production identifier_or_typename -> IDENTIFIER
-- On SEPARATED reduce production identifier_or_typename -> IDENTIFIER
-- On SEMICOLON reduce production identifier_or_typename -> IDENTIFIER
-- On RSQUARE reduce production identifier_or_typename -> IDENTIFIER
-- On RPAR reduce production identifier_or_typename -> IDENTIFIER
-- On RETURNS reduce production identifier_or_typename -> IDENTIFIER
-- On RESULT reduce production identifier_or_typename -> IDENTIFIER
-- On REQUIRES reduce production identifier_or_typename -> IDENTIFIER
-- On REGISTER reduce production identifier_or_typename -> IDENTIFIER
-- On REAL reduce production identifier_or_typename -> IDENTIFIER
-- On READS reduce production identifier_or_typename -> IDENTIFIER
-- On RBRACE reduce production identifier_or_typename -> IDENTIFIER
-- On QUESTION reduce production identifier_or_typename -> IDENTIFIER
-- On PREDICATE reduce production identifier_or_typename -> IDENTIFIER
-- On PRAGMA reduce production identifier_or_typename -> IDENTIFIER
-- On PLUS reduce production identifier_or_typename -> IDENTIFIER
-- On PIPE reduce production identifier_or_typename -> IDENTIFIER
-- On PERCENT reduce production identifier_or_typename -> IDENTIFIER
-- On OR reduce production identifier_or_typename -> IDENTIFIER
-- On OLD reduce production identifier_or_typename -> IDENTIFIER
-- On OFFSET reduce production identifier_or_typename -> IDENTIFIER
-- On NULL reduce production identifier_or_typename -> IDENTIFIER
-- On NOTHING reduce production identifier_or_typename -> IDENTIFIER
-- On NOT reduce production identifier_or_typename -> IDENTIFIER
-- On NE reduce production identifier_or_typename -> IDENTIFIER
-- On MODULE reduce production identifier_or_typename -> IDENTIFIER
-- On MODEL reduce production identifier_or_typename -> IDENTIFIER
-- On MINUS reduce production identifier_or_typename -> IDENTIFIER
-- On LTLT reduce production identifier_or_typename -> IDENTIFIER
-- On LTCOLON reduce production identifier_or_typename -> IDENTIFIER
-- On LT reduce production identifier_or_typename -> IDENTIFIER
-- On LSQUARE reduce production identifier_or_typename -> IDENTIFIER
-- On LPAR reduce production identifier_or_typename -> IDENTIFIER
-- On LOOP reduce production identifier_or_typename -> IDENTIFIER
-- On LONG reduce production identifier_or_typename -> IDENTIFIER
-- On LOGIC reduce production identifier_or_typename -> IDENTIFIER
-- On LET reduce production identifier_or_typename -> IDENTIFIER
-- On LEMMA reduce production identifier_or_typename -> IDENTIFIER
-- On LE reduce production identifier_or_typename -> IDENTIFIER
-- On LBRACE reduce production identifier_or_typename -> IDENTIFIER
-- On LAMBDA reduce production identifier_or_typename -> IDENTIFIER
-- On LABEL reduce production identifier_or_typename -> IDENTIFIER
-- On INVARIANT reduce production identifier_or_typename -> IDENTIFIER
-- On INTER reduce production identifier_or_typename -> IDENTIFIER
-- On INTEGER reduce production identifier_or_typename -> IDENTIFIER
-- On INT reduce production identifier_or_typename -> IDENTIFIER
-- On INITIALIZED reduce production identifier_or_typename -> IDENTIFIER
-- On INDUCTIVE reduce production identifier_or_typename -> IDENTIFIER
-- On INCLUDE reduce production identifier_or_typename -> IDENTIFIER
-- On IMPLIES reduce production identifier_or_typename -> IDENTIFIER
-- On IMPACT reduce production identifier_or_typename -> IDENTIFIER
-- On IFF reduce production identifier_or_typename -> IDENTIFIER
-- On IF reduce production identifier_or_typename -> IDENTIFIER
-- On IDENTIFIER reduce production identifier_or_typename -> IDENTIFIER
-- On HATHAT reduce production identifier_or_typename -> IDENTIFIER
-- On HAT reduce production identifier_or_typename -> IDENTIFIER
-- On GTGT reduce production identifier_or_typename -> IDENTIFIER
-- On GT reduce production identifier_or_typename -> IDENTIFIER
-- On GLOBAL reduce production identifier_or_typename -> IDENTIFIER
-- On GHOST reduce production identifier_or_typename -> IDENTIFIER
-- On GE reduce production identifier_or_typename -> IDENTIFIER
-- On FUNCTION reduce production identifier_or_typename -> IDENTIFIER
-- On FROM reduce production identifier_or_typename -> IDENTIFIER
-- On FRESH reduce production identifier_or_typename -> IDENTIFIER
-- On FREES reduce production identifier_or_typename -> IDENTIFIER
-- On FREEABLE reduce production identifier_or_typename -> IDENTIFIER
-- On FORALL reduce production identifier_or_typename -> IDENTIFIER
-- On FOR reduce production identifier_or_typename -> IDENTIFIER
-- On FLOAT reduce production identifier_or_typename -> IDENTIFIER
-- On FALSE reduce production identifier_or_typename -> IDENTIFIER
-- On EXT_LET reduce production identifier_or_typename -> IDENTIFIER
-- On EXT_AT reduce production identifier_or_typename -> IDENTIFIER
-- On EXITS reduce production identifier_or_typename -> IDENTIFIER
-- On EXISTS reduce production identifier_or_typename -> IDENTIFIER
-- On EQUAL reduce production identifier_or_typename -> IDENTIFIER
-- On EQ reduce production identifier_or_typename -> IDENTIFIER
-- On EOF reduce production identifier_or_typename -> IDENTIFIER
-- On ENUM reduce production identifier_or_typename -> IDENTIFIER
-- On ENSURES reduce production identifier_or_typename -> IDENTIFIER
-- On EMPTY reduce production identifier_or_typename -> IDENTIFIER
-- On ELSE reduce production identifier_or_typename -> IDENTIFIER
-- On DYNAMIC reduce production identifier_or_typename -> IDENTIFIER
-- On DOUBLE reduce production identifier_or_typename -> IDENTIFIER
-- On DOTDOTDOT reduce production identifier_or_typename -> IDENTIFIER
-- On DOTDOT reduce production identifier_or_typename -> IDENTIFIER
-- On DOT reduce production identifier_or_typename -> IDENTIFIER
-- On DOLLAR reduce production identifier_or_typename -> IDENTIFIER
-- On DISJOINT reduce production identifier_or_typename -> IDENTIFIER
-- On DECREASES reduce production identifier_or_typename -> IDENTIFIER
-- On DANGLING reduce production identifier_or_typename -> IDENTIFIER
-- On CUSTOM reduce production identifier_or_typename -> IDENTIFIER
-- On CONTRACT reduce production identifier_or_typename -> IDENTIFIER
-- On CONTINUES reduce production identifier_or_typename -> IDENTIFIER
-- On CONSTANT10 reduce production identifier_or_typename -> IDENTIFIER
-- On CONSTANT reduce production identifier_or_typename -> IDENTIFIER
-- On CONST reduce production identifier_or_typename -> IDENTIFIER
-- On COMPLETE reduce production identifier_or_typename -> IDENTIFIER
-- On COMMA reduce production identifier_or_typename -> IDENTIFIER
-- On COLONGT reduce production identifier_or_typename -> IDENTIFIER
-- On COLONCOLON reduce production identifier_or_typename -> IDENTIFIER
-- On COLON2 reduce production identifier_or_typename -> IDENTIFIER
-- On COLON reduce production identifier_or_typename -> IDENTIFIER
-- On CHAR reduce production identifier_or_typename -> IDENTIFIER
-- On CASE reduce production identifier_or_typename -> IDENTIFIER
-- On BSUNION reduce production identifier_or_typename -> IDENTIFIER
-- On BSTYPE reduce production identifier_or_typename -> IDENTIFIER
-- On BREAKS reduce production identifier_or_typename -> IDENTIFIER
-- On BOOLEAN reduce production identifier_or_typename -> IDENTIFIER
-- On BOOL reduce production identifier_or_typename -> IDENTIFIER
-- On BLOCK_LENGTH reduce production identifier_or_typename -> IDENTIFIER
-- On BIMPLIES reduce production identifier_or_typename -> IDENTIFIER
-- On BIFF reduce production identifier_or_typename -> IDENTIFIER
-- On BEHAVIORS reduce production identifier_or_typename -> IDENTIFIER
-- On BEHAVIOR reduce production identifier_or_typename -> IDENTIFIER
-- On BASE_ADDR reduce production identifier_or_typename -> IDENTIFIER
-- On AXIOMATIC reduce production identifier_or_typename -> IDENTIFIER
-- On AXIOM reduce production identifier_or_typename -> IDENTIFIER
-- On AUTOMATIC reduce production identifier_or_typename -> IDENTIFIER
-- On AT reduce production identifier_or_typename -> IDENTIFIER
-- On ASSUMES reduce production identifier_or_typename -> IDENTIFIER
-- On ASSIGNS reduce production identifier_or_typename -> IDENTIFIER
-- On ASSERT reduce production identifier_or_typename -> IDENTIFIER
-- On ARROW reduce production identifier_or_typename -> IDENTIFIER
-- On AND reduce production identifier_or_typename -> IDENTIFIER
-- On AMP reduce production identifier_or_typename -> IDENTIFIER
-- On ALLOCATION reduce production identifier_or_typename -> IDENTIFIER
-- On ALLOCATES reduce production identifier_or_typename -> IDENTIFIER
-- On ALLOCABLE reduce production identifier_or_typename -> IDENTIFIER

State 40:
## Known stack suffix:
## GLOBAL
## LR(1) items:
is_acsl_decl_or_code_annot -> GLOBAL . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On WITH reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On VOLATILE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On VOID reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On VARIANT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On VALID_READ reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On VALID_RANGE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On VALID_INDEX reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On VALID reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On UNSIGNED reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On UNION reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On UNALLOCATED reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On TYPEOF reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On TYPENAME reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On TYPE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On TRUE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On TILDE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On TERMINATES reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On STRUCT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On STRING_LITERAL reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On STATIC reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On STAR reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On SLICE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On SLASH reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On SIZEOF reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On SIGNED reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On SHORT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On SEPARATED reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On SEMICOLON reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On RSQUARE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On RPAR reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On RETURNS reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On RESULT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On REQUIRES reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On REGISTER reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On REAL reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On READS reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On RBRACE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On QUESTION reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On PREDICATE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On PRAGMA reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On PLUS reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On PIPE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On PERCENT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On OR reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On OLD reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On OFFSET reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On NULL reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On NOTHING reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On NOT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On NE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On MODULE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On MODEL reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On MINUS reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On LTLT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On LTCOLON reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On LT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On LSQUARE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On LPAR reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On LOOP reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On LONG reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On LOGIC reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On LET reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On LEMMA reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On LE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On LBRACE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On LAMBDA reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On LABEL reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On INVARIANT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On INTER reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On INTEGER reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On INT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On INITIALIZED reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On INDUCTIVE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On INCLUDE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On IMPLIES reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On IMPACT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On IFF reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On IF reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On IDENTIFIER reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On HATHAT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On HAT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On GTGT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On GT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On GLOBAL reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On GHOST reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On GE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On FUNCTION reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On FROM reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On FRESH reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On FREES reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On FREEABLE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On FORALL reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On FOR reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On FLOAT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On FALSE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On EXT_LET reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On EXT_AT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On EXITS reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On EXISTS reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On EQUAL reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On EQ reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On EOF reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On ENUM reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On ENSURES reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On EMPTY reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On ELSE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On DYNAMIC reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On DOUBLE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On DOTDOTDOT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On DOTDOT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On DOT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On DOLLAR reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On DISJOINT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On DECREASES reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On DANGLING reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On CUSTOM reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On CONTRACT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On CONTINUES reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On CONSTANT10 reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On CONSTANT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On CONST reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On COMPLETE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On COMMA reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On COLONGT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On COLONCOLON reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On COLON2 reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On COLON reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On CHAR reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On CASE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On BSUNION reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On BSTYPE reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On BREAKS reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On BOOLEAN reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On BOOL reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On BLOCK_LENGTH reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On BIMPLIES reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On BIFF reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On BEHAVIORS reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On BEHAVIOR reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On BASE_ADDR reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On AXIOMATIC reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On AXIOM reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On AUTOMATIC reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On AT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On ASSUMES reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On ASSIGNS reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On ASSERT reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On ARROW reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On AND reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On AMP reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On ALLOCATION reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On ALLOCATES reduce production is_acsl_decl_or_code_annot -> GLOBAL
-- On ALLOCABLE reduce production is_acsl_decl_or_code_annot -> GLOBAL

State 41:
## Known stack suffix:
## FUNCTION
## LR(1) items:
is_ext_spec -> FUNCTION . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_ext_spec -> FUNCTION
-- On WITH reduce production is_ext_spec -> FUNCTION
-- On VOLATILE reduce production is_ext_spec -> FUNCTION
-- On VOID reduce production is_ext_spec -> FUNCTION
-- On VARIANT reduce production is_ext_spec -> FUNCTION
-- On VALID_READ reduce production is_ext_spec -> FUNCTION
-- On VALID_RANGE reduce production is_ext_spec -> FUNCTION
-- On VALID_INDEX reduce production is_ext_spec -> FUNCTION
-- On VALID reduce production is_ext_spec -> FUNCTION
-- On UNSIGNED reduce production is_ext_spec -> FUNCTION
-- On UNION reduce production is_ext_spec -> FUNCTION
-- On UNALLOCATED reduce production is_ext_spec -> FUNCTION
-- On TYPEOF reduce production is_ext_spec -> FUNCTION
-- On TYPENAME reduce production is_ext_spec -> FUNCTION
-- On TYPE reduce production is_ext_spec -> FUNCTION
-- On TRUE reduce production is_ext_spec -> FUNCTION
-- On TILDE reduce production is_ext_spec -> FUNCTION
-- On TERMINATES reduce production is_ext_spec -> FUNCTION
-- On STRUCT reduce production is_ext_spec -> FUNCTION
-- On STRING_LITERAL reduce production is_ext_spec -> FUNCTION
-- On STATIC reduce production is_ext_spec -> FUNCTION
-- On STAR reduce production is_ext_spec -> FUNCTION
-- On SLICE reduce production is_ext_spec -> FUNCTION
-- On SLASH reduce production is_ext_spec -> FUNCTION
-- On SIZEOF reduce production is_ext_spec -> FUNCTION
-- On SIGNED reduce production is_ext_spec -> FUNCTION
-- On SHORT reduce production is_ext_spec -> FUNCTION
-- On SEPARATED reduce production is_ext_spec -> FUNCTION
-- On SEMICOLON reduce production is_ext_spec -> FUNCTION
-- On RSQUARE reduce production is_ext_spec -> FUNCTION
-- On RPAR reduce production is_ext_spec -> FUNCTION
-- On RETURNS reduce production is_ext_spec -> FUNCTION
-- On RESULT reduce production is_ext_spec -> FUNCTION
-- On REQUIRES reduce production is_ext_spec -> FUNCTION
-- On REGISTER reduce production is_ext_spec -> FUNCTION
-- On REAL reduce production is_ext_spec -> FUNCTION
-- On READS reduce production is_ext_spec -> FUNCTION
-- On RBRACE reduce production is_ext_spec -> FUNCTION
-- On QUESTION reduce production is_ext_spec -> FUNCTION
-- On PREDICATE reduce production is_ext_spec -> FUNCTION
-- On PRAGMA reduce production is_ext_spec -> FUNCTION
-- On PLUS reduce production is_ext_spec -> FUNCTION
-- On PIPE reduce production is_ext_spec -> FUNCTION
-- On PERCENT reduce production is_ext_spec -> FUNCTION
-- On OR reduce production is_ext_spec -> FUNCTION
-- On OLD reduce production is_ext_spec -> FUNCTION
-- On OFFSET reduce production is_ext_spec -> FUNCTION
-- On NULL reduce production is_ext_spec -> FUNCTION
-- On NOTHING reduce production is_ext_spec -> FUNCTION
-- On NOT reduce production is_ext_spec -> FUNCTION
-- On NE reduce production is_ext_spec -> FUNCTION
-- On MODULE reduce production is_ext_spec -> FUNCTION
-- On MODEL reduce production is_ext_spec -> FUNCTION
-- On MINUS reduce production is_ext_spec -> FUNCTION
-- On LTLT reduce production is_ext_spec -> FUNCTION
-- On LTCOLON reduce production is_ext_spec -> FUNCTION
-- On LT reduce production is_ext_spec -> FUNCTION
-- On LSQUARE reduce production is_ext_spec -> FUNCTION
-- On LPAR reduce production is_ext_spec -> FUNCTION
-- On LOOP reduce production is_ext_spec -> FUNCTION
-- On LONG reduce production is_ext_spec -> FUNCTION
-- On LOGIC reduce production is_ext_spec -> FUNCTION
-- On LET reduce production is_ext_spec -> FUNCTION
-- On LEMMA reduce production is_ext_spec -> FUNCTION
-- On LE reduce production is_ext_spec -> FUNCTION
-- On LBRACE reduce production is_ext_spec -> FUNCTION
-- On LAMBDA reduce production is_ext_spec -> FUNCTION
-- On LABEL reduce production is_ext_spec -> FUNCTION
-- On INVARIANT reduce production is_ext_spec -> FUNCTION
-- On INTER reduce production is_ext_spec -> FUNCTION
-- On INTEGER reduce production is_ext_spec -> FUNCTION
-- On INT reduce production is_ext_spec -> FUNCTION
-- On INITIALIZED reduce production is_ext_spec -> FUNCTION
-- On INDUCTIVE reduce production is_ext_spec -> FUNCTION
-- On INCLUDE reduce production is_ext_spec -> FUNCTION
-- On IMPLIES reduce production is_ext_spec -> FUNCTION
-- On IMPACT reduce production is_ext_spec -> FUNCTION
-- On IFF reduce production is_ext_spec -> FUNCTION
-- On IF reduce production is_ext_spec -> FUNCTION
-- On IDENTIFIER reduce production is_ext_spec -> FUNCTION
-- On HATHAT reduce production is_ext_spec -> FUNCTION
-- On HAT reduce production is_ext_spec -> FUNCTION
-- On GTGT reduce production is_ext_spec -> FUNCTION
-- On GT reduce production is_ext_spec -> FUNCTION
-- On GLOBAL reduce production is_ext_spec -> FUNCTION
-- On GHOST reduce production is_ext_spec -> FUNCTION
-- On GE reduce production is_ext_spec -> FUNCTION
-- On FUNCTION reduce production is_ext_spec -> FUNCTION
-- On FROM reduce production is_ext_spec -> FUNCTION
-- On FRESH reduce production is_ext_spec -> FUNCTION
-- On FREES reduce production is_ext_spec -> FUNCTION
-- On FREEABLE reduce production is_ext_spec -> FUNCTION
-- On FORALL reduce production is_ext_spec -> FUNCTION
-- On FOR reduce production is_ext_spec -> FUNCTION
-- On FLOAT reduce production is_ext_spec -> FUNCTION
-- On FALSE reduce production is_ext_spec -> FUNCTION
-- On EXT_LET reduce production is_ext_spec -> FUNCTION
-- On EXT_AT reduce production is_ext_spec -> FUNCTION
-- On EXITS reduce production is_ext_spec -> FUNCTION
-- On EXISTS reduce production is_ext_spec -> FUNCTION
-- On EQUAL reduce production is_ext_spec -> FUNCTION
-- On EQ reduce production is_ext_spec -> FUNCTION
-- On EOF reduce production is_ext_spec -> FUNCTION
-- On ENUM reduce production is_ext_spec -> FUNCTION
-- On ENSURES reduce production is_ext_spec -> FUNCTION
-- On EMPTY reduce production is_ext_spec -> FUNCTION
-- On ELSE reduce production is_ext_spec -> FUNCTION
-- On DYNAMIC reduce production is_ext_spec -> FUNCTION
-- On DOUBLE reduce production is_ext_spec -> FUNCTION
-- On DOTDOTDOT reduce production is_ext_spec -> FUNCTION
-- On DOTDOT reduce production is_ext_spec -> FUNCTION
-- On DOT reduce production is_ext_spec -> FUNCTION
-- On DOLLAR reduce production is_ext_spec -> FUNCTION
-- On DISJOINT reduce production is_ext_spec -> FUNCTION
-- On DECREASES reduce production is_ext_spec -> FUNCTION
-- On DANGLING reduce production is_ext_spec -> FUNCTION
-- On CUSTOM reduce production is_ext_spec -> FUNCTION
-- On CONTRACT reduce production is_ext_spec -> FUNCTION
-- On CONTINUES reduce production is_ext_spec -> FUNCTION
-- On CONSTANT10 reduce production is_ext_spec -> FUNCTION
-- On CONSTANT reduce production is_ext_spec -> FUNCTION
-- On CONST reduce production is_ext_spec -> FUNCTION
-- On COMPLETE reduce production is_ext_spec -> FUNCTION
-- On COMMA reduce production is_ext_spec -> FUNCTION
-- On COLONGT reduce production is_ext_spec -> FUNCTION
-- On COLONCOLON reduce production is_ext_spec -> FUNCTION
-- On COLON2 reduce production is_ext_spec -> FUNCTION
-- On COLON reduce production is_ext_spec -> FUNCTION
-- On CHAR reduce production is_ext_spec -> FUNCTION
-- On CASE reduce production is_ext_spec -> FUNCTION
-- On BSUNION reduce production is_ext_spec -> FUNCTION
-- On BSTYPE reduce production is_ext_spec -> FUNCTION
-- On BREAKS reduce production is_ext_spec -> FUNCTION
-- On BOOLEAN reduce production is_ext_spec -> FUNCTION
-- On BOOL reduce production is_ext_spec -> FUNCTION
-- On BLOCK_LENGTH reduce production is_ext_spec -> FUNCTION
-- On BIMPLIES reduce production is_ext_spec -> FUNCTION
-- On BIFF reduce production is_ext_spec -> FUNCTION
-- On BEHAVIORS reduce production is_ext_spec -> FUNCTION
-- On BEHAVIOR reduce production is_ext_spec -> FUNCTION
-- On BASE_ADDR reduce production is_ext_spec -> FUNCTION
-- On AXIOMATIC reduce production is_ext_spec -> FUNCTION
-- On AXIOM reduce production is_ext_spec -> FUNCTION
-- On AUTOMATIC reduce production is_ext_spec -> FUNCTION
-- On AT reduce production is_ext_spec -> FUNCTION
-- On ASSUMES reduce production is_ext_spec -> FUNCTION
-- On ASSIGNS reduce production is_ext_spec -> FUNCTION
-- On ASSERT reduce production is_ext_spec -> FUNCTION
-- On ARROW reduce production is_ext_spec -> FUNCTION
-- On AND reduce production is_ext_spec -> FUNCTION
-- On AMP reduce production is_ext_spec -> FUNCTION
-- On ALLOCATION reduce production is_ext_spec -> FUNCTION
-- On ALLOCATES reduce production is_ext_spec -> FUNCTION
-- On ALLOCABLE reduce production is_ext_spec -> FUNCTION

State 42:
## Known stack suffix:
## FREES
## LR(1) items:
is_acsl_spec -> FREES . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_spec -> FREES
-- On WITH reduce production is_acsl_spec -> FREES
-- On VOLATILE reduce production is_acsl_spec -> FREES
-- On VOID reduce production is_acsl_spec -> FREES
-- On VARIANT reduce production is_acsl_spec -> FREES
-- On VALID_READ reduce production is_acsl_spec -> FREES
-- On VALID_RANGE reduce production is_acsl_spec -> FREES
-- On VALID_INDEX reduce production is_acsl_spec -> FREES
-- On VALID reduce production is_acsl_spec -> FREES
-- On UNSIGNED reduce production is_acsl_spec -> FREES
-- On UNION reduce production is_acsl_spec -> FREES
-- On UNALLOCATED reduce production is_acsl_spec -> FREES
-- On TYPEOF reduce production is_acsl_spec -> FREES
-- On TYPENAME reduce production is_acsl_spec -> FREES
-- On TYPE reduce production is_acsl_spec -> FREES
-- On TRUE reduce production is_acsl_spec -> FREES
-- On TILDE reduce production is_acsl_spec -> FREES
-- On TERMINATES reduce production is_acsl_spec -> FREES
-- On STRUCT reduce production is_acsl_spec -> FREES
-- On STRING_LITERAL reduce production is_acsl_spec -> FREES
-- On STATIC reduce production is_acsl_spec -> FREES
-- On STAR reduce production is_acsl_spec -> FREES
-- On SLICE reduce production is_acsl_spec -> FREES
-- On SLASH reduce production is_acsl_spec -> FREES
-- On SIZEOF reduce production is_acsl_spec -> FREES
-- On SIGNED reduce production is_acsl_spec -> FREES
-- On SHORT reduce production is_acsl_spec -> FREES
-- On SEPARATED reduce production is_acsl_spec -> FREES
-- On SEMICOLON reduce production is_acsl_spec -> FREES
-- On RSQUARE reduce production is_acsl_spec -> FREES
-- On RPAR reduce production is_acsl_spec -> FREES
-- On RETURNS reduce production is_acsl_spec -> FREES
-- On RESULT reduce production is_acsl_spec -> FREES
-- On REQUIRES reduce production is_acsl_spec -> FREES
-- On REGISTER reduce production is_acsl_spec -> FREES
-- On REAL reduce production is_acsl_spec -> FREES
-- On READS reduce production is_acsl_spec -> FREES
-- On RBRACE reduce production is_acsl_spec -> FREES
-- On QUESTION reduce production is_acsl_spec -> FREES
-- On PREDICATE reduce production is_acsl_spec -> FREES
-- On PRAGMA reduce production is_acsl_spec -> FREES
-- On PLUS reduce production is_acsl_spec -> FREES
-- On PIPE reduce production is_acsl_spec -> FREES
-- On PERCENT reduce production is_acsl_spec -> FREES
-- On OR reduce production is_acsl_spec -> FREES
-- On OLD reduce production is_acsl_spec -> FREES
-- On OFFSET reduce production is_acsl_spec -> FREES
-- On NULL reduce production is_acsl_spec -> FREES
-- On NOTHING reduce production is_acsl_spec -> FREES
-- On NOT reduce production is_acsl_spec -> FREES
-- On NE reduce production is_acsl_spec -> FREES
-- On MODULE reduce production is_acsl_spec -> FREES
-- On MODEL reduce production is_acsl_spec -> FREES
-- On MINUS reduce production is_acsl_spec -> FREES
-- On LTLT reduce production is_acsl_spec -> FREES
-- On LTCOLON reduce production is_acsl_spec -> FREES
-- On LT reduce production is_acsl_spec -> FREES
-- On LSQUARE reduce production is_acsl_spec -> FREES
-- On LPAR reduce production is_acsl_spec -> FREES
-- On LOOP reduce production is_acsl_spec -> FREES
-- On LONG reduce production is_acsl_spec -> FREES
-- On LOGIC reduce production is_acsl_spec -> FREES
-- On LET reduce production is_acsl_spec -> FREES
-- On LEMMA reduce production is_acsl_spec -> FREES
-- On LE reduce production is_acsl_spec -> FREES
-- On LBRACE reduce production is_acsl_spec -> FREES
-- On LAMBDA reduce production is_acsl_spec -> FREES
-- On LABEL reduce production is_acsl_spec -> FREES
-- On INVARIANT reduce production is_acsl_spec -> FREES
-- On INTER reduce production is_acsl_spec -> FREES
-- On INTEGER reduce production is_acsl_spec -> FREES
-- On INT reduce production is_acsl_spec -> FREES
-- On INITIALIZED reduce production is_acsl_spec -> FREES
-- On INDUCTIVE reduce production is_acsl_spec -> FREES
-- On INCLUDE reduce production is_acsl_spec -> FREES
-- On IMPLIES reduce production is_acsl_spec -> FREES
-- On IMPACT reduce production is_acsl_spec -> FREES
-- On IFF reduce production is_acsl_spec -> FREES
-- On IF reduce production is_acsl_spec -> FREES
-- On IDENTIFIER reduce production is_acsl_spec -> FREES
-- On HATHAT reduce production is_acsl_spec -> FREES
-- On HAT reduce production is_acsl_spec -> FREES
-- On GTGT reduce production is_acsl_spec -> FREES
-- On GT reduce production is_acsl_spec -> FREES
-- On GLOBAL reduce production is_acsl_spec -> FREES
-- On GHOST reduce production is_acsl_spec -> FREES
-- On GE reduce production is_acsl_spec -> FREES
-- On FUNCTION reduce production is_acsl_spec -> FREES
-- On FROM reduce production is_acsl_spec -> FREES
-- On FRESH reduce production is_acsl_spec -> FREES
-- On FREES reduce production is_acsl_spec -> FREES
-- On FREEABLE reduce production is_acsl_spec -> FREES
-- On FORALL reduce production is_acsl_spec -> FREES
-- On FOR reduce production is_acsl_spec -> FREES
-- On FLOAT reduce production is_acsl_spec -> FREES
-- On FALSE reduce production is_acsl_spec -> FREES
-- On EXT_LET reduce production is_acsl_spec -> FREES
-- On EXT_AT reduce production is_acsl_spec -> FREES
-- On EXITS reduce production is_acsl_spec -> FREES
-- On EXISTS reduce production is_acsl_spec -> FREES
-- On EQUAL reduce production is_acsl_spec -> FREES
-- On EQ reduce production is_acsl_spec -> FREES
-- On EOF reduce production is_acsl_spec -> FREES
-- On ENUM reduce production is_acsl_spec -> FREES
-- On ENSURES reduce production is_acsl_spec -> FREES
-- On EMPTY reduce production is_acsl_spec -> FREES
-- On ELSE reduce production is_acsl_spec -> FREES
-- On DYNAMIC reduce production is_acsl_spec -> FREES
-- On DOUBLE reduce production is_acsl_spec -> FREES
-- On DOTDOTDOT reduce production is_acsl_spec -> FREES
-- On DOTDOT reduce production is_acsl_spec -> FREES
-- On DOT reduce production is_acsl_spec -> FREES
-- On DOLLAR reduce production is_acsl_spec -> FREES
-- On DISJOINT reduce production is_acsl_spec -> FREES
-- On DECREASES reduce production is_acsl_spec -> FREES
-- On DANGLING reduce production is_acsl_spec -> FREES
-- On CUSTOM reduce production is_acsl_spec -> FREES
-- On CONTRACT reduce production is_acsl_spec -> FREES
-- On CONTINUES reduce production is_acsl_spec -> FREES
-- On CONSTANT10 reduce production is_acsl_spec -> FREES
-- On CONSTANT reduce production is_acsl_spec -> FREES
-- On CONST reduce production is_acsl_spec -> FREES
-- On COMPLETE reduce production is_acsl_spec -> FREES
-- On COMMA reduce production is_acsl_spec -> FREES
-- On COLONGT reduce production is_acsl_spec -> FREES
-- On COLONCOLON reduce production is_acsl_spec -> FREES
-- On COLON2 reduce production is_acsl_spec -> FREES
-- On COLON reduce production is_acsl_spec -> FREES
-- On CHAR reduce production is_acsl_spec -> FREES
-- On CASE reduce production is_acsl_spec -> FREES
-- On BSUNION reduce production is_acsl_spec -> FREES
-- On BSTYPE reduce production is_acsl_spec -> FREES
-- On BREAKS reduce production is_acsl_spec -> FREES
-- On BOOLEAN reduce production is_acsl_spec -> FREES
-- On BOOL reduce production is_acsl_spec -> FREES
-- On BLOCK_LENGTH reduce production is_acsl_spec -> FREES
-- On BIMPLIES reduce production is_acsl_spec -> FREES
-- On BIFF reduce production is_acsl_spec -> FREES
-- On BEHAVIORS reduce production is_acsl_spec -> FREES
-- On BEHAVIOR reduce production is_acsl_spec -> FREES
-- On BASE_ADDR reduce production is_acsl_spec -> FREES
-- On AXIOMATIC reduce production is_acsl_spec -> FREES
-- On AXIOM reduce production is_acsl_spec -> FREES
-- On AUTOMATIC reduce production is_acsl_spec -> FREES
-- On AT reduce production is_acsl_spec -> FREES
-- On ASSUMES reduce production is_acsl_spec -> FREES
-- On ASSIGNS reduce production is_acsl_spec -> FREES
-- On ASSERT reduce production is_acsl_spec -> FREES
-- On ARROW reduce production is_acsl_spec -> FREES
-- On AND reduce production is_acsl_spec -> FREES
-- On AMP reduce production is_acsl_spec -> FREES
-- On ALLOCATION reduce production is_acsl_spec -> FREES
-- On ALLOCATES reduce production is_acsl_spec -> FREES
-- On ALLOCABLE reduce production is_acsl_spec -> FREES

State 43:
## Known stack suffix:
## FOR
## LR(1) items:
acsl_c_keyword -> FOR . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production acsl_c_keyword -> FOR
-- On WITH reduce production acsl_c_keyword -> FOR
-- On VOLATILE reduce production acsl_c_keyword -> FOR
-- On VOID reduce production acsl_c_keyword -> FOR
-- On VARIANT reduce production acsl_c_keyword -> FOR
-- On VALID_READ reduce production acsl_c_keyword -> FOR
-- On VALID_RANGE reduce production acsl_c_keyword -> FOR
-- On VALID_INDEX reduce production acsl_c_keyword -> FOR
-- On VALID reduce production acsl_c_keyword -> FOR
-- On UNSIGNED reduce production acsl_c_keyword -> FOR
-- On UNION reduce production acsl_c_keyword -> FOR
-- On UNALLOCATED reduce production acsl_c_keyword -> FOR
-- On TYPEOF reduce production acsl_c_keyword -> FOR
-- On TYPENAME reduce production acsl_c_keyword -> FOR
-- On TYPE reduce production acsl_c_keyword -> FOR
-- On TRUE reduce production acsl_c_keyword -> FOR
-- On TILDE reduce production acsl_c_keyword -> FOR
-- On TERMINATES reduce production acsl_c_keyword -> FOR
-- On STRUCT reduce production acsl_c_keyword -> FOR
-- On STRING_LITERAL reduce production acsl_c_keyword -> FOR
-- On STATIC reduce production acsl_c_keyword -> FOR
-- On STAR reduce production acsl_c_keyword -> FOR
-- On SLICE reduce production acsl_c_keyword -> FOR
-- On SLASH reduce production acsl_c_keyword -> FOR
-- On SIZEOF reduce production acsl_c_keyword -> FOR
-- On SIGNED reduce production acsl_c_keyword -> FOR
-- On SHORT reduce production acsl_c_keyword -> FOR
-- On SEPARATED reduce production acsl_c_keyword -> FOR
-- On SEMICOLON reduce production acsl_c_keyword -> FOR
-- On RSQUARE reduce production acsl_c_keyword -> FOR
-- On RPAR reduce production acsl_c_keyword -> FOR
-- On RETURNS reduce production acsl_c_keyword -> FOR
-- On RESULT reduce production acsl_c_keyword -> FOR
-- On REQUIRES reduce production acsl_c_keyword -> FOR
-- On REGISTER reduce production acsl_c_keyword -> FOR
-- On REAL reduce production acsl_c_keyword -> FOR
-- On READS reduce production acsl_c_keyword -> FOR
-- On RBRACE reduce production acsl_c_keyword -> FOR
-- On QUESTION reduce production acsl_c_keyword -> FOR
-- On PREDICATE reduce production acsl_c_keyword -> FOR
-- On PRAGMA reduce production acsl_c_keyword -> FOR
-- On PLUS reduce production acsl_c_keyword -> FOR
-- On PIPE reduce production acsl_c_keyword -> FOR
-- On PERCENT reduce production acsl_c_keyword -> FOR
-- On OR reduce production acsl_c_keyword -> FOR
-- On OLD reduce production acsl_c_keyword -> FOR
-- On OFFSET reduce production acsl_c_keyword -> FOR
-- On NULL reduce production acsl_c_keyword -> FOR
-- On NOTHING reduce production acsl_c_keyword -> FOR
-- On NOT reduce production acsl_c_keyword -> FOR
-- On NE reduce production acsl_c_keyword -> FOR
-- On MODULE reduce production acsl_c_keyword -> FOR
-- On MODEL reduce production acsl_c_keyword -> FOR
-- On MINUS reduce production acsl_c_keyword -> FOR
-- On LTLT reduce production acsl_c_keyword -> FOR
-- On LTCOLON reduce production acsl_c_keyword -> FOR
-- On LT reduce production acsl_c_keyword -> FOR
-- On LSQUARE reduce production acsl_c_keyword -> FOR
-- On LPAR reduce production acsl_c_keyword -> FOR
-- On LOOP reduce production acsl_c_keyword -> FOR
-- On LONG reduce production acsl_c_keyword -> FOR
-- On LOGIC reduce production acsl_c_keyword -> FOR
-- On LET reduce production acsl_c_keyword -> FOR
-- On LEMMA reduce production acsl_c_keyword -> FOR
-- On LE reduce production acsl_c_keyword -> FOR
-- On LBRACE reduce production acsl_c_keyword -> FOR
-- On LAMBDA reduce production acsl_c_keyword -> FOR
-- On LABEL reduce production acsl_c_keyword -> FOR
-- On INVARIANT reduce production acsl_c_keyword -> FOR
-- On INTER reduce production acsl_c_keyword -> FOR
-- On INTEGER reduce production acsl_c_keyword -> FOR
-- On INT reduce production acsl_c_keyword -> FOR
-- On INITIALIZED reduce production acsl_c_keyword -> FOR
-- On INDUCTIVE reduce production acsl_c_keyword -> FOR
-- On INCLUDE reduce production acsl_c_keyword -> FOR
-- On IMPLIES reduce production acsl_c_keyword -> FOR
-- On IMPACT reduce production acsl_c_keyword -> FOR
-- On IFF reduce production acsl_c_keyword -> FOR
-- On IF reduce production acsl_c_keyword -> FOR
-- On IDENTIFIER reduce production acsl_c_keyword -> FOR
-- On HATHAT reduce production acsl_c_keyword -> FOR
-- On HAT reduce production acsl_c_keyword -> FOR
-- On GTGT reduce production acsl_c_keyword -> FOR
-- On GT reduce production acsl_c_keyword -> FOR
-- On GLOBAL reduce production acsl_c_keyword -> FOR
-- On GHOST reduce production acsl_c_keyword -> FOR
-- On GE reduce production acsl_c_keyword -> FOR
-- On FUNCTION reduce production acsl_c_keyword -> FOR
-- On FROM reduce production acsl_c_keyword -> FOR
-- On FRESH reduce production acsl_c_keyword -> FOR
-- On FREES reduce production acsl_c_keyword -> FOR
-- On FREEABLE reduce production acsl_c_keyword -> FOR
-- On FORALL reduce production acsl_c_keyword -> FOR
-- On FOR reduce production acsl_c_keyword -> FOR
-- On FLOAT reduce production acsl_c_keyword -> FOR
-- On FALSE reduce production acsl_c_keyword -> FOR
-- On EXT_LET reduce production acsl_c_keyword -> FOR
-- On EXT_AT reduce production acsl_c_keyword -> FOR
-- On EXITS reduce production acsl_c_keyword -> FOR
-- On EXISTS reduce production acsl_c_keyword -> FOR
-- On EQUAL reduce production acsl_c_keyword -> FOR
-- On EQ reduce production acsl_c_keyword -> FOR
-- On EOF reduce production acsl_c_keyword -> FOR
-- On ENUM reduce production acsl_c_keyword -> FOR
-- On ENSURES reduce production acsl_c_keyword -> FOR
-- On EMPTY reduce production acsl_c_keyword -> FOR
-- On ELSE reduce production acsl_c_keyword -> FOR
-- On DYNAMIC reduce production acsl_c_keyword -> FOR
-- On DOUBLE reduce production acsl_c_keyword -> FOR
-- On DOTDOTDOT reduce production acsl_c_keyword -> FOR
-- On DOTDOT reduce production acsl_c_keyword -> FOR
-- On DOT reduce production acsl_c_keyword -> FOR
-- On DOLLAR reduce production acsl_c_keyword -> FOR
-- On DISJOINT reduce production acsl_c_keyword -> FOR
-- On DECREASES reduce production acsl_c_keyword -> FOR
-- On DANGLING reduce production acsl_c_keyword -> FOR
-- On CUSTOM reduce production acsl_c_keyword -> FOR
-- On CONTRACT reduce production acsl_c_keyword -> FOR
-- On CONTINUES reduce production acsl_c_keyword -> FOR
-- On CONSTANT10 reduce production acsl_c_keyword -> FOR
-- On CONSTANT reduce production acsl_c_keyword -> FOR
-- On CONST reduce production acsl_c_keyword -> FOR
-- On COMPLETE reduce production acsl_c_keyword -> FOR
-- On COMMA reduce production acsl_c_keyword -> FOR
-- On COLONGT reduce production acsl_c_keyword -> FOR
-- On COLONCOLON reduce production acsl_c_keyword -> FOR
-- On COLON2 reduce production acsl_c_keyword -> FOR
-- On COLON reduce production acsl_c_keyword -> FOR
-- On CHAR reduce production acsl_c_keyword -> FOR
-- On CASE reduce production acsl_c_keyword -> FOR
-- On BSUNION reduce production acsl_c_keyword -> FOR
-- On BSTYPE reduce production acsl_c_keyword -> FOR
-- On BREAKS reduce production acsl_c_keyword -> FOR
-- On BOOLEAN reduce production acsl_c_keyword -> FOR
-- On BOOL reduce production acsl_c_keyword -> FOR
-- On BLOCK_LENGTH reduce production acsl_c_keyword -> FOR
-- On BIMPLIES reduce production acsl_c_keyword -> FOR
-- On BIFF reduce production acsl_c_keyword -> FOR
-- On BEHAVIORS reduce production acsl_c_keyword -> FOR
-- On BEHAVIOR reduce production acsl_c_keyword -> FOR
-- On BASE_ADDR reduce production acsl_c_keyword -> FOR
-- On AXIOMATIC reduce production acsl_c_keyword -> FOR
-- On AXIOM reduce production acsl_c_keyword -> FOR
-- On AUTOMATIC reduce production acsl_c_keyword -> FOR
-- On AT reduce production acsl_c_keyword -> FOR
-- On ASSUMES reduce production acsl_c_keyword -> FOR
-- On ASSIGNS reduce production acsl_c_keyword -> FOR
-- On ASSERT reduce production acsl_c_keyword -> FOR
-- On ARROW reduce production acsl_c_keyword -> FOR
-- On AND reduce production acsl_c_keyword -> FOR
-- On AMP reduce production acsl_c_keyword -> FOR
-- On ALLOCATION reduce production acsl_c_keyword -> FOR
-- On ALLOCATES reduce production acsl_c_keyword -> FOR
-- On ALLOCABLE reduce production acsl_c_keyword -> FOR

State 44:
## Known stack suffix:
## FLOAT
## LR(1) items:
c_keyword -> FLOAT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> FLOAT
-- On WITH reduce production c_keyword -> FLOAT
-- On VOLATILE reduce production c_keyword -> FLOAT
-- On VOID reduce production c_keyword -> FLOAT
-- On VARIANT reduce production c_keyword -> FLOAT
-- On VALID_READ reduce production c_keyword -> FLOAT
-- On VALID_RANGE reduce production c_keyword -> FLOAT
-- On VALID_INDEX reduce production c_keyword -> FLOAT
-- On VALID reduce production c_keyword -> FLOAT
-- On UNSIGNED reduce production c_keyword -> FLOAT
-- On UNION reduce production c_keyword -> FLOAT
-- On UNALLOCATED reduce production c_keyword -> FLOAT
-- On TYPEOF reduce production c_keyword -> FLOAT
-- On TYPENAME reduce production c_keyword -> FLOAT
-- On TYPE reduce production c_keyword -> FLOAT
-- On TRUE reduce production c_keyword -> FLOAT
-- On TILDE reduce production c_keyword -> FLOAT
-- On TERMINATES reduce production c_keyword -> FLOAT
-- On STRUCT reduce production c_keyword -> FLOAT
-- On STRING_LITERAL reduce production c_keyword -> FLOAT
-- On STATIC reduce production c_keyword -> FLOAT
-- On STAR reduce production c_keyword -> FLOAT
-- On SLICE reduce production c_keyword -> FLOAT
-- On SLASH reduce production c_keyword -> FLOAT
-- On SIZEOF reduce production c_keyword -> FLOAT
-- On SIGNED reduce production c_keyword -> FLOAT
-- On SHORT reduce production c_keyword -> FLOAT
-- On SEPARATED reduce production c_keyword -> FLOAT
-- On SEMICOLON reduce production c_keyword -> FLOAT
-- On RSQUARE reduce production c_keyword -> FLOAT
-- On RPAR reduce production c_keyword -> FLOAT
-- On RETURNS reduce production c_keyword -> FLOAT
-- On RESULT reduce production c_keyword -> FLOAT
-- On REQUIRES reduce production c_keyword -> FLOAT
-- On REGISTER reduce production c_keyword -> FLOAT
-- On REAL reduce production c_keyword -> FLOAT
-- On READS reduce production c_keyword -> FLOAT
-- On RBRACE reduce production c_keyword -> FLOAT
-- On QUESTION reduce production c_keyword -> FLOAT
-- On PREDICATE reduce production c_keyword -> FLOAT
-- On PRAGMA reduce production c_keyword -> FLOAT
-- On PLUS reduce production c_keyword -> FLOAT
-- On PIPE reduce production c_keyword -> FLOAT
-- On PERCENT reduce production c_keyword -> FLOAT
-- On OR reduce production c_keyword -> FLOAT
-- On OLD reduce production c_keyword -> FLOAT
-- On OFFSET reduce production c_keyword -> FLOAT
-- On NULL reduce production c_keyword -> FLOAT
-- On NOTHING reduce production c_keyword -> FLOAT
-- On NOT reduce production c_keyword -> FLOAT
-- On NE reduce production c_keyword -> FLOAT
-- On MODULE reduce production c_keyword -> FLOAT
-- On MODEL reduce production c_keyword -> FLOAT
-- On MINUS reduce production c_keyword -> FLOAT
-- On LTLT reduce production c_keyword -> FLOAT
-- On LTCOLON reduce production c_keyword -> FLOAT
-- On LT reduce production c_keyword -> FLOAT
-- On LSQUARE reduce production c_keyword -> FLOAT
-- On LPAR reduce production c_keyword -> FLOAT
-- On LOOP reduce production c_keyword -> FLOAT
-- On LONG reduce production c_keyword -> FLOAT
-- On LOGIC reduce production c_keyword -> FLOAT
-- On LET reduce production c_keyword -> FLOAT
-- On LEMMA reduce production c_keyword -> FLOAT
-- On LE reduce production c_keyword -> FLOAT
-- On LBRACE reduce production c_keyword -> FLOAT
-- On LAMBDA reduce production c_keyword -> FLOAT
-- On LABEL reduce production c_keyword -> FLOAT
-- On INVARIANT reduce production c_keyword -> FLOAT
-- On INTER reduce production c_keyword -> FLOAT
-- On INTEGER reduce production c_keyword -> FLOAT
-- On INT reduce production c_keyword -> FLOAT
-- On INITIALIZED reduce production c_keyword -> FLOAT
-- On INDUCTIVE reduce production c_keyword -> FLOAT
-- On INCLUDE reduce production c_keyword -> FLOAT
-- On IMPLIES reduce production c_keyword -> FLOAT
-- On IMPACT reduce production c_keyword -> FLOAT
-- On IFF reduce production c_keyword -> FLOAT
-- On IF reduce production c_keyword -> FLOAT
-- On IDENTIFIER reduce production c_keyword -> FLOAT
-- On HATHAT reduce production c_keyword -> FLOAT
-- On HAT reduce production c_keyword -> FLOAT
-- On GTGT reduce production c_keyword -> FLOAT
-- On GT reduce production c_keyword -> FLOAT
-- On GLOBAL reduce production c_keyword -> FLOAT
-- On GHOST reduce production c_keyword -> FLOAT
-- On GE reduce production c_keyword -> FLOAT
-- On FUNCTION reduce production c_keyword -> FLOAT
-- On FROM reduce production c_keyword -> FLOAT
-- On FRESH reduce production c_keyword -> FLOAT
-- On FREES reduce production c_keyword -> FLOAT
-- On FREEABLE reduce production c_keyword -> FLOAT
-- On FORALL reduce production c_keyword -> FLOAT
-- On FOR reduce production c_keyword -> FLOAT
-- On FLOAT reduce production c_keyword -> FLOAT
-- On FALSE reduce production c_keyword -> FLOAT
-- On EXT_LET reduce production c_keyword -> FLOAT
-- On EXT_AT reduce production c_keyword -> FLOAT
-- On EXITS reduce production c_keyword -> FLOAT
-- On EXISTS reduce production c_keyword -> FLOAT
-- On EQUAL reduce production c_keyword -> FLOAT
-- On EQ reduce production c_keyword -> FLOAT
-- On EOF reduce production c_keyword -> FLOAT
-- On ENUM reduce production c_keyword -> FLOAT
-- On ENSURES reduce production c_keyword -> FLOAT
-- On EMPTY reduce production c_keyword -> FLOAT
-- On ELSE reduce production c_keyword -> FLOAT
-- On DYNAMIC reduce production c_keyword -> FLOAT
-- On DOUBLE reduce production c_keyword -> FLOAT
-- On DOTDOTDOT reduce production c_keyword -> FLOAT
-- On DOTDOT reduce production c_keyword -> FLOAT
-- On DOT reduce production c_keyword -> FLOAT
-- On DOLLAR reduce production c_keyword -> FLOAT
-- On DISJOINT reduce production c_keyword -> FLOAT
-- On DECREASES reduce production c_keyword -> FLOAT
-- On DANGLING reduce production c_keyword -> FLOAT
-- On CUSTOM reduce production c_keyword -> FLOAT
-- On CONTRACT reduce production c_keyword -> FLOAT
-- On CONTINUES reduce production c_keyword -> FLOAT
-- On CONSTANT10 reduce production c_keyword -> FLOAT
-- On CONSTANT reduce production c_keyword -> FLOAT
-- On CONST reduce production c_keyword -> FLOAT
-- On COMPLETE reduce production c_keyword -> FLOAT
-- On COMMA reduce production c_keyword -> FLOAT
-- On COLONGT reduce production c_keyword -> FLOAT
-- On COLONCOLON reduce production c_keyword -> FLOAT
-- On COLON2 reduce production c_keyword -> FLOAT
-- On COLON reduce production c_keyword -> FLOAT
-- On CHAR reduce production c_keyword -> FLOAT
-- On CASE reduce production c_keyword -> FLOAT
-- On BSUNION reduce production c_keyword -> FLOAT
-- On BSTYPE reduce production c_keyword -> FLOAT
-- On BREAKS reduce production c_keyword -> FLOAT
-- On BOOLEAN reduce production c_keyword -> FLOAT
-- On BOOL reduce production c_keyword -> FLOAT
-- On BLOCK_LENGTH reduce production c_keyword -> FLOAT
-- On BIMPLIES reduce production c_keyword -> FLOAT
-- On BIFF reduce production c_keyword -> FLOAT
-- On BEHAVIORS reduce production c_keyword -> FLOAT
-- On BEHAVIOR reduce production c_keyword -> FLOAT
-- On BASE_ADDR reduce production c_keyword -> FLOAT
-- On AXIOMATIC reduce production c_keyword -> FLOAT
-- On AXIOM reduce production c_keyword -> FLOAT
-- On AUTOMATIC reduce production c_keyword -> FLOAT
-- On AT reduce production c_keyword -> FLOAT
-- On ASSUMES reduce production c_keyword -> FLOAT
-- On ASSIGNS reduce production c_keyword -> FLOAT
-- On ASSERT reduce production c_keyword -> FLOAT
-- On ARROW reduce production c_keyword -> FLOAT
-- On AND reduce production c_keyword -> FLOAT
-- On AMP reduce production c_keyword -> FLOAT
-- On ALLOCATION reduce production c_keyword -> FLOAT
-- On ALLOCATES reduce production c_keyword -> FLOAT
-- On ALLOCABLE reduce production c_keyword -> FLOAT

State 45:
## Known stack suffix:
## EXT_LET
## LR(1) items:
is_ext_spec -> EXT_LET . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_ext_spec -> EXT_LET
-- On WITH reduce production is_ext_spec -> EXT_LET
-- On VOLATILE reduce production is_ext_spec -> EXT_LET
-- On VOID reduce production is_ext_spec -> EXT_LET
-- On VARIANT reduce production is_ext_spec -> EXT_LET
-- On VALID_READ reduce production is_ext_spec -> EXT_LET
-- On VALID_RANGE reduce production is_ext_spec -> EXT_LET
-- On VALID_INDEX reduce production is_ext_spec -> EXT_LET
-- On VALID reduce production is_ext_spec -> EXT_LET
-- On UNSIGNED reduce production is_ext_spec -> EXT_LET
-- On UNION reduce production is_ext_spec -> EXT_LET
-- On UNALLOCATED reduce production is_ext_spec -> EXT_LET
-- On TYPEOF reduce production is_ext_spec -> EXT_LET
-- On TYPENAME reduce production is_ext_spec -> EXT_LET
-- On TYPE reduce production is_ext_spec -> EXT_LET
-- On TRUE reduce production is_ext_spec -> EXT_LET
-- On TILDE reduce production is_ext_spec -> EXT_LET
-- On TERMINATES reduce production is_ext_spec -> EXT_LET
-- On STRUCT reduce production is_ext_spec -> EXT_LET
-- On STRING_LITERAL reduce production is_ext_spec -> EXT_LET
-- On STATIC reduce production is_ext_spec -> EXT_LET
-- On STAR reduce production is_ext_spec -> EXT_LET
-- On SLICE reduce production is_ext_spec -> EXT_LET
-- On SLASH reduce production is_ext_spec -> EXT_LET
-- On SIZEOF reduce production is_ext_spec -> EXT_LET
-- On SIGNED reduce production is_ext_spec -> EXT_LET
-- On SHORT reduce production is_ext_spec -> EXT_LET
-- On SEPARATED reduce production is_ext_spec -> EXT_LET
-- On SEMICOLON reduce production is_ext_spec -> EXT_LET
-- On RSQUARE reduce production is_ext_spec -> EXT_LET
-- On RPAR reduce production is_ext_spec -> EXT_LET
-- On RETURNS reduce production is_ext_spec -> EXT_LET
-- On RESULT reduce production is_ext_spec -> EXT_LET
-- On REQUIRES reduce production is_ext_spec -> EXT_LET
-- On REGISTER reduce production is_ext_spec -> EXT_LET
-- On REAL reduce production is_ext_spec -> EXT_LET
-- On READS reduce production is_ext_spec -> EXT_LET
-- On RBRACE reduce production is_ext_spec -> EXT_LET
-- On QUESTION reduce production is_ext_spec -> EXT_LET
-- On PREDICATE reduce production is_ext_spec -> EXT_LET
-- On PRAGMA reduce production is_ext_spec -> EXT_LET
-- On PLUS reduce production is_ext_spec -> EXT_LET
-- On PIPE reduce production is_ext_spec -> EXT_LET
-- On PERCENT reduce production is_ext_spec -> EXT_LET
-- On OR reduce production is_ext_spec -> EXT_LET
-- On OLD reduce production is_ext_spec -> EXT_LET
-- On OFFSET reduce production is_ext_spec -> EXT_LET
-- On NULL reduce production is_ext_spec -> EXT_LET
-- On NOTHING reduce production is_ext_spec -> EXT_LET
-- On NOT reduce production is_ext_spec -> EXT_LET
-- On NE reduce production is_ext_spec -> EXT_LET
-- On MODULE reduce production is_ext_spec -> EXT_LET
-- On MODEL reduce production is_ext_spec -> EXT_LET
-- On MINUS reduce production is_ext_spec -> EXT_LET
-- On LTLT reduce production is_ext_spec -> EXT_LET
-- On LTCOLON reduce production is_ext_spec -> EXT_LET
-- On LT reduce production is_ext_spec -> EXT_LET
-- On LSQUARE reduce production is_ext_spec -> EXT_LET
-- On LPAR reduce production is_ext_spec -> EXT_LET
-- On LOOP reduce production is_ext_spec -> EXT_LET
-- On LONG reduce production is_ext_spec -> EXT_LET
-- On LOGIC reduce production is_ext_spec -> EXT_LET
-- On LET reduce production is_ext_spec -> EXT_LET
-- On LEMMA reduce production is_ext_spec -> EXT_LET
-- On LE reduce production is_ext_spec -> EXT_LET
-- On LBRACE reduce production is_ext_spec -> EXT_LET
-- On LAMBDA reduce production is_ext_spec -> EXT_LET
-- On LABEL reduce production is_ext_spec -> EXT_LET
-- On INVARIANT reduce production is_ext_spec -> EXT_LET
-- On INTER reduce production is_ext_spec -> EXT_LET
-- On INTEGER reduce production is_ext_spec -> EXT_LET
-- On INT reduce production is_ext_spec -> EXT_LET
-- On INITIALIZED reduce production is_ext_spec -> EXT_LET
-- On INDUCTIVE reduce production is_ext_spec -> EXT_LET
-- On INCLUDE reduce production is_ext_spec -> EXT_LET
-- On IMPLIES reduce production is_ext_spec -> EXT_LET
-- On IMPACT reduce production is_ext_spec -> EXT_LET
-- On IFF reduce production is_ext_spec -> EXT_LET
-- On IF reduce production is_ext_spec -> EXT_LET
-- On IDENTIFIER reduce production is_ext_spec -> EXT_LET
-- On HATHAT reduce production is_ext_spec -> EXT_LET
-- On HAT reduce production is_ext_spec -> EXT_LET
-- On GTGT reduce production is_ext_spec -> EXT_LET
-- On GT reduce production is_ext_spec -> EXT_LET
-- On GLOBAL reduce production is_ext_spec -> EXT_LET
-- On GHOST reduce production is_ext_spec -> EXT_LET
-- On GE reduce production is_ext_spec -> EXT_LET
-- On FUNCTION reduce production is_ext_spec -> EXT_LET
-- On FROM reduce production is_ext_spec -> EXT_LET
-- On FRESH reduce production is_ext_spec -> EXT_LET
-- On FREES reduce production is_ext_spec -> EXT_LET
-- On FREEABLE reduce production is_ext_spec -> EXT_LET
-- On FORALL reduce production is_ext_spec -> EXT_LET
-- On FOR reduce production is_ext_spec -> EXT_LET
-- On FLOAT reduce production is_ext_spec -> EXT_LET
-- On FALSE reduce production is_ext_spec -> EXT_LET
-- On EXT_LET reduce production is_ext_spec -> EXT_LET
-- On EXT_AT reduce production is_ext_spec -> EXT_LET
-- On EXITS reduce production is_ext_spec -> EXT_LET
-- On EXISTS reduce production is_ext_spec -> EXT_LET
-- On EQUAL reduce production is_ext_spec -> EXT_LET
-- On EQ reduce production is_ext_spec -> EXT_LET
-- On EOF reduce production is_ext_spec -> EXT_LET
-- On ENUM reduce production is_ext_spec -> EXT_LET
-- On ENSURES reduce production is_ext_spec -> EXT_LET
-- On EMPTY reduce production is_ext_spec -> EXT_LET
-- On ELSE reduce production is_ext_spec -> EXT_LET
-- On DYNAMIC reduce production is_ext_spec -> EXT_LET
-- On DOUBLE reduce production is_ext_spec -> EXT_LET
-- On DOTDOTDOT reduce production is_ext_spec -> EXT_LET
-- On DOTDOT reduce production is_ext_spec -> EXT_LET
-- On DOT reduce production is_ext_spec -> EXT_LET
-- On DOLLAR reduce production is_ext_spec -> EXT_LET
-- On DISJOINT reduce production is_ext_spec -> EXT_LET
-- On DECREASES reduce production is_ext_spec -> EXT_LET
-- On DANGLING reduce production is_ext_spec -> EXT_LET
-- On CUSTOM reduce production is_ext_spec -> EXT_LET
-- On CONTRACT reduce production is_ext_spec -> EXT_LET
-- On CONTINUES reduce production is_ext_spec -> EXT_LET
-- On CONSTANT10 reduce production is_ext_spec -> EXT_LET
-- On CONSTANT reduce production is_ext_spec -> EXT_LET
-- On CONST reduce production is_ext_spec -> EXT_LET
-- On COMPLETE reduce production is_ext_spec -> EXT_LET
-- On COMMA reduce production is_ext_spec -> EXT_LET
-- On COLONGT reduce production is_ext_spec -> EXT_LET
-- On COLONCOLON reduce production is_ext_spec -> EXT_LET
-- On COLON2 reduce production is_ext_spec -> EXT_LET
-- On COLON reduce production is_ext_spec -> EXT_LET
-- On CHAR reduce production is_ext_spec -> EXT_LET
-- On CASE reduce production is_ext_spec -> EXT_LET
-- On BSUNION reduce production is_ext_spec -> EXT_LET
-- On BSTYPE reduce production is_ext_spec -> EXT_LET
-- On BREAKS reduce production is_ext_spec -> EXT_LET
-- On BOOLEAN reduce production is_ext_spec -> EXT_LET
-- On BOOL reduce production is_ext_spec -> EXT_LET
-- On BLOCK_LENGTH reduce production is_ext_spec -> EXT_LET
-- On BIMPLIES reduce production is_ext_spec -> EXT_LET
-- On BIFF reduce production is_ext_spec -> EXT_LET
-- On BEHAVIORS reduce production is_ext_spec -> EXT_LET
-- On BEHAVIOR reduce production is_ext_spec -> EXT_LET
-- On BASE_ADDR reduce production is_ext_spec -> EXT_LET
-- On AXIOMATIC reduce production is_ext_spec -> EXT_LET
-- On AXIOM reduce production is_ext_spec -> EXT_LET
-- On AUTOMATIC reduce production is_ext_spec -> EXT_LET
-- On AT reduce production is_ext_spec -> EXT_LET
-- On ASSUMES reduce production is_ext_spec -> EXT_LET
-- On ASSIGNS reduce production is_ext_spec -> EXT_LET
-- On ASSERT reduce production is_ext_spec -> EXT_LET
-- On ARROW reduce production is_ext_spec -> EXT_LET
-- On AND reduce production is_ext_spec -> EXT_LET
-- On AMP reduce production is_ext_spec -> EXT_LET
-- On ALLOCATION reduce production is_ext_spec -> EXT_LET
-- On ALLOCATES reduce production is_ext_spec -> EXT_LET
-- On ALLOCABLE reduce production is_ext_spec -> EXT_LET

State 46:
## Known stack suffix:
## EXT_AT
## LR(1) items:
is_ext_spec -> EXT_AT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_ext_spec -> EXT_AT
-- On WITH reduce production is_ext_spec -> EXT_AT
-- On VOLATILE reduce production is_ext_spec -> EXT_AT
-- On VOID reduce production is_ext_spec -> EXT_AT
-- On VARIANT reduce production is_ext_spec -> EXT_AT
-- On VALID_READ reduce production is_ext_spec -> EXT_AT
-- On VALID_RANGE reduce production is_ext_spec -> EXT_AT
-- On VALID_INDEX reduce production is_ext_spec -> EXT_AT
-- On VALID reduce production is_ext_spec -> EXT_AT
-- On UNSIGNED reduce production is_ext_spec -> EXT_AT
-- On UNION reduce production is_ext_spec -> EXT_AT
-- On UNALLOCATED reduce production is_ext_spec -> EXT_AT
-- On TYPEOF reduce production is_ext_spec -> EXT_AT
-- On TYPENAME reduce production is_ext_spec -> EXT_AT
-- On TYPE reduce production is_ext_spec -> EXT_AT
-- On TRUE reduce production is_ext_spec -> EXT_AT
-- On TILDE reduce production is_ext_spec -> EXT_AT
-- On TERMINATES reduce production is_ext_spec -> EXT_AT
-- On STRUCT reduce production is_ext_spec -> EXT_AT
-- On STRING_LITERAL reduce production is_ext_spec -> EXT_AT
-- On STATIC reduce production is_ext_spec -> EXT_AT
-- On STAR reduce production is_ext_spec -> EXT_AT
-- On SLICE reduce production is_ext_spec -> EXT_AT
-- On SLASH reduce production is_ext_spec -> EXT_AT
-- On SIZEOF reduce production is_ext_spec -> EXT_AT
-- On SIGNED reduce production is_ext_spec -> EXT_AT
-- On SHORT reduce production is_ext_spec -> EXT_AT
-- On SEPARATED reduce production is_ext_spec -> EXT_AT
-- On SEMICOLON reduce production is_ext_spec -> EXT_AT
-- On RSQUARE reduce production is_ext_spec -> EXT_AT
-- On RPAR reduce production is_ext_spec -> EXT_AT
-- On RETURNS reduce production is_ext_spec -> EXT_AT
-- On RESULT reduce production is_ext_spec -> EXT_AT
-- On REQUIRES reduce production is_ext_spec -> EXT_AT
-- On REGISTER reduce production is_ext_spec -> EXT_AT
-- On REAL reduce production is_ext_spec -> EXT_AT
-- On READS reduce production is_ext_spec -> EXT_AT
-- On RBRACE reduce production is_ext_spec -> EXT_AT
-- On QUESTION reduce production is_ext_spec -> EXT_AT
-- On PREDICATE reduce production is_ext_spec -> EXT_AT
-- On PRAGMA reduce production is_ext_spec -> EXT_AT
-- On PLUS reduce production is_ext_spec -> EXT_AT
-- On PIPE reduce production is_ext_spec -> EXT_AT
-- On PERCENT reduce production is_ext_spec -> EXT_AT
-- On OR reduce production is_ext_spec -> EXT_AT
-- On OLD reduce production is_ext_spec -> EXT_AT
-- On OFFSET reduce production is_ext_spec -> EXT_AT
-- On NULL reduce production is_ext_spec -> EXT_AT
-- On NOTHING reduce production is_ext_spec -> EXT_AT
-- On NOT reduce production is_ext_spec -> EXT_AT
-- On NE reduce production is_ext_spec -> EXT_AT
-- On MODULE reduce production is_ext_spec -> EXT_AT
-- On MODEL reduce production is_ext_spec -> EXT_AT
-- On MINUS reduce production is_ext_spec -> EXT_AT
-- On LTLT reduce production is_ext_spec -> EXT_AT
-- On LTCOLON reduce production is_ext_spec -> EXT_AT
-- On LT reduce production is_ext_spec -> EXT_AT
-- On LSQUARE reduce production is_ext_spec -> EXT_AT
-- On LPAR reduce production is_ext_spec -> EXT_AT
-- On LOOP reduce production is_ext_spec -> EXT_AT
-- On LONG reduce production is_ext_spec -> EXT_AT
-- On LOGIC reduce production is_ext_spec -> EXT_AT
-- On LET reduce production is_ext_spec -> EXT_AT
-- On LEMMA reduce production is_ext_spec -> EXT_AT
-- On LE reduce production is_ext_spec -> EXT_AT
-- On LBRACE reduce production is_ext_spec -> EXT_AT
-- On LAMBDA reduce production is_ext_spec -> EXT_AT
-- On LABEL reduce production is_ext_spec -> EXT_AT
-- On INVARIANT reduce production is_ext_spec -> EXT_AT
-- On INTER reduce production is_ext_spec -> EXT_AT
-- On INTEGER reduce production is_ext_spec -> EXT_AT
-- On INT reduce production is_ext_spec -> EXT_AT
-- On INITIALIZED reduce production is_ext_spec -> EXT_AT
-- On INDUCTIVE reduce production is_ext_spec -> EXT_AT
-- On INCLUDE reduce production is_ext_spec -> EXT_AT
-- On IMPLIES reduce production is_ext_spec -> EXT_AT
-- On IMPACT reduce production is_ext_spec -> EXT_AT
-- On IFF reduce production is_ext_spec -> EXT_AT
-- On IF reduce production is_ext_spec -> EXT_AT
-- On IDENTIFIER reduce production is_ext_spec -> EXT_AT
-- On HATHAT reduce production is_ext_spec -> EXT_AT
-- On HAT reduce production is_ext_spec -> EXT_AT
-- On GTGT reduce production is_ext_spec -> EXT_AT
-- On GT reduce production is_ext_spec -> EXT_AT
-- On GLOBAL reduce production is_ext_spec -> EXT_AT
-- On GHOST reduce production is_ext_spec -> EXT_AT
-- On GE reduce production is_ext_spec -> EXT_AT
-- On FUNCTION reduce production is_ext_spec -> EXT_AT
-- On FROM reduce production is_ext_spec -> EXT_AT
-- On FRESH reduce production is_ext_spec -> EXT_AT
-- On FREES reduce production is_ext_spec -> EXT_AT
-- On FREEABLE reduce production is_ext_spec -> EXT_AT
-- On FORALL reduce production is_ext_spec -> EXT_AT
-- On FOR reduce production is_ext_spec -> EXT_AT
-- On FLOAT reduce production is_ext_spec -> EXT_AT
-- On FALSE reduce production is_ext_spec -> EXT_AT
-- On EXT_LET reduce production is_ext_spec -> EXT_AT
-- On EXT_AT reduce production is_ext_spec -> EXT_AT
-- On EXITS reduce production is_ext_spec -> EXT_AT
-- On EXISTS reduce production is_ext_spec -> EXT_AT
-- On EQUAL reduce production is_ext_spec -> EXT_AT
-- On EQ reduce production is_ext_spec -> EXT_AT
-- On EOF reduce production is_ext_spec -> EXT_AT
-- On ENUM reduce production is_ext_spec -> EXT_AT
-- On ENSURES reduce production is_ext_spec -> EXT_AT
-- On EMPTY reduce production is_ext_spec -> EXT_AT
-- On ELSE reduce production is_ext_spec -> EXT_AT
-- On DYNAMIC reduce production is_ext_spec -> EXT_AT
-- On DOUBLE reduce production is_ext_spec -> EXT_AT
-- On DOTDOTDOT reduce production is_ext_spec -> EXT_AT
-- On DOTDOT reduce production is_ext_spec -> EXT_AT
-- On DOT reduce production is_ext_spec -> EXT_AT
-- On DOLLAR reduce production is_ext_spec -> EXT_AT
-- On DISJOINT reduce production is_ext_spec -> EXT_AT
-- On DECREASES reduce production is_ext_spec -> EXT_AT
-- On DANGLING reduce production is_ext_spec -> EXT_AT
-- On CUSTOM reduce production is_ext_spec -> EXT_AT
-- On CONTRACT reduce production is_ext_spec -> EXT_AT
-- On CONTINUES reduce production is_ext_spec -> EXT_AT
-- On CONSTANT10 reduce production is_ext_spec -> EXT_AT
-- On CONSTANT reduce production is_ext_spec -> EXT_AT
-- On CONST reduce production is_ext_spec -> EXT_AT
-- On COMPLETE reduce production is_ext_spec -> EXT_AT
-- On COMMA reduce production is_ext_spec -> EXT_AT
-- On COLONGT reduce production is_ext_spec -> EXT_AT
-- On COLONCOLON reduce production is_ext_spec -> EXT_AT
-- On COLON2 reduce production is_ext_spec -> EXT_AT
-- On COLON reduce production is_ext_spec -> EXT_AT
-- On CHAR reduce production is_ext_spec -> EXT_AT
-- On CASE reduce production is_ext_spec -> EXT_AT
-- On BSUNION reduce production is_ext_spec -> EXT_AT
-- On BSTYPE reduce production is_ext_spec -> EXT_AT
-- On BREAKS reduce production is_ext_spec -> EXT_AT
-- On BOOLEAN reduce production is_ext_spec -> EXT_AT
-- On BOOL reduce production is_ext_spec -> EXT_AT
-- On BLOCK_LENGTH reduce production is_ext_spec -> EXT_AT
-- On BIMPLIES reduce production is_ext_spec -> EXT_AT
-- On BIFF reduce production is_ext_spec -> EXT_AT
-- On BEHAVIORS reduce production is_ext_spec -> EXT_AT
-- On BEHAVIOR reduce production is_ext_spec -> EXT_AT
-- On BASE_ADDR reduce production is_ext_spec -> EXT_AT
-- On AXIOMATIC reduce production is_ext_spec -> EXT_AT
-- On AXIOM reduce production is_ext_spec -> EXT_AT
-- On AUTOMATIC reduce production is_ext_spec -> EXT_AT
-- On AT reduce production is_ext_spec -> EXT_AT
-- On ASSUMES reduce production is_ext_spec -> EXT_AT
-- On ASSIGNS reduce production is_ext_spec -> EXT_AT
-- On ASSERT reduce production is_ext_spec -> EXT_AT
-- On ARROW reduce production is_ext_spec -> EXT_AT
-- On AND reduce production is_ext_spec -> EXT_AT
-- On AMP reduce production is_ext_spec -> EXT_AT
-- On ALLOCATION reduce production is_ext_spec -> EXT_AT
-- On ALLOCATES reduce production is_ext_spec -> EXT_AT
-- On ALLOCABLE reduce production is_ext_spec -> EXT_AT

State 47:
## Known stack suffix:
## EXITS
## LR(1) items:
post_cond -> EXITS . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production post_cond -> EXITS
-- On WITH reduce production post_cond -> EXITS
-- On VOLATILE reduce production post_cond -> EXITS
-- On VOID reduce production post_cond -> EXITS
-- On VARIANT reduce production post_cond -> EXITS
-- On VALID_READ reduce production post_cond -> EXITS
-- On VALID_RANGE reduce production post_cond -> EXITS
-- On VALID_INDEX reduce production post_cond -> EXITS
-- On VALID reduce production post_cond -> EXITS
-- On UNSIGNED reduce production post_cond -> EXITS
-- On UNION reduce production post_cond -> EXITS
-- On UNALLOCATED reduce production post_cond -> EXITS
-- On TYPEOF reduce production post_cond -> EXITS
-- On TYPENAME reduce production post_cond -> EXITS
-- On TYPE reduce production post_cond -> EXITS
-- On TRUE reduce production post_cond -> EXITS
-- On TILDE reduce production post_cond -> EXITS
-- On TERMINATES reduce production post_cond -> EXITS
-- On STRUCT reduce production post_cond -> EXITS
-- On STRING_LITERAL reduce production post_cond -> EXITS
-- On STATIC reduce production post_cond -> EXITS
-- On STAR reduce production post_cond -> EXITS
-- On SLICE reduce production post_cond -> EXITS
-- On SLASH reduce production post_cond -> EXITS
-- On SIZEOF reduce production post_cond -> EXITS
-- On SIGNED reduce production post_cond -> EXITS
-- On SHORT reduce production post_cond -> EXITS
-- On SEPARATED reduce production post_cond -> EXITS
-- On SEMICOLON reduce production post_cond -> EXITS
-- On RSQUARE reduce production post_cond -> EXITS
-- On RPAR reduce production post_cond -> EXITS
-- On RETURNS reduce production post_cond -> EXITS
-- On RESULT reduce production post_cond -> EXITS
-- On REQUIRES reduce production post_cond -> EXITS
-- On REGISTER reduce production post_cond -> EXITS
-- On REAL reduce production post_cond -> EXITS
-- On READS reduce production post_cond -> EXITS
-- On RBRACE reduce production post_cond -> EXITS
-- On QUESTION reduce production post_cond -> EXITS
-- On PREDICATE reduce production post_cond -> EXITS
-- On PRAGMA reduce production post_cond -> EXITS
-- On PLUS reduce production post_cond -> EXITS
-- On PIPE reduce production post_cond -> EXITS
-- On PERCENT reduce production post_cond -> EXITS
-- On OR reduce production post_cond -> EXITS
-- On OLD reduce production post_cond -> EXITS
-- On OFFSET reduce production post_cond -> EXITS
-- On NULL reduce production post_cond -> EXITS
-- On NOTHING reduce production post_cond -> EXITS
-- On NOT reduce production post_cond -> EXITS
-- On NE reduce production post_cond -> EXITS
-- On MODULE reduce production post_cond -> EXITS
-- On MODEL reduce production post_cond -> EXITS
-- On MINUS reduce production post_cond -> EXITS
-- On LTLT reduce production post_cond -> EXITS
-- On LTCOLON reduce production post_cond -> EXITS
-- On LT reduce production post_cond -> EXITS
-- On LSQUARE reduce production post_cond -> EXITS
-- On LPAR reduce production post_cond -> EXITS
-- On LOOP reduce production post_cond -> EXITS
-- On LONG reduce production post_cond -> EXITS
-- On LOGIC reduce production post_cond -> EXITS
-- On LET reduce production post_cond -> EXITS
-- On LEMMA reduce production post_cond -> EXITS
-- On LE reduce production post_cond -> EXITS
-- On LBRACE reduce production post_cond -> EXITS
-- On LAMBDA reduce production post_cond -> EXITS
-- On LABEL reduce production post_cond -> EXITS
-- On INVARIANT reduce production post_cond -> EXITS
-- On INTER reduce production post_cond -> EXITS
-- On INTEGER reduce production post_cond -> EXITS
-- On INT reduce production post_cond -> EXITS
-- On INITIALIZED reduce production post_cond -> EXITS
-- On INDUCTIVE reduce production post_cond -> EXITS
-- On INCLUDE reduce production post_cond -> EXITS
-- On IMPLIES reduce production post_cond -> EXITS
-- On IMPACT reduce production post_cond -> EXITS
-- On IFF reduce production post_cond -> EXITS
-- On IF reduce production post_cond -> EXITS
-- On IDENTIFIER reduce production post_cond -> EXITS
-- On HATHAT reduce production post_cond -> EXITS
-- On HAT reduce production post_cond -> EXITS
-- On GTGT reduce production post_cond -> EXITS
-- On GT reduce production post_cond -> EXITS
-- On GLOBAL reduce production post_cond -> EXITS
-- On GHOST reduce production post_cond -> EXITS
-- On GE reduce production post_cond -> EXITS
-- On FUNCTION reduce production post_cond -> EXITS
-- On FROM reduce production post_cond -> EXITS
-- On FRESH reduce production post_cond -> EXITS
-- On FREES reduce production post_cond -> EXITS
-- On FREEABLE reduce production post_cond -> EXITS
-- On FORALL reduce production post_cond -> EXITS
-- On FOR reduce production post_cond -> EXITS
-- On FLOAT reduce production post_cond -> EXITS
-- On FALSE reduce production post_cond -> EXITS
-- On EXT_LET reduce production post_cond -> EXITS
-- On EXT_AT reduce production post_cond -> EXITS
-- On EXITS reduce production post_cond -> EXITS
-- On EXISTS reduce production post_cond -> EXITS
-- On EQUAL reduce production post_cond -> EXITS
-- On EQ reduce production post_cond -> EXITS
-- On EOF reduce production post_cond -> EXITS
-- On ENUM reduce production post_cond -> EXITS
-- On ENSURES reduce production post_cond -> EXITS
-- On EMPTY reduce production post_cond -> EXITS
-- On ELSE reduce production post_cond -> EXITS
-- On DYNAMIC reduce production post_cond -> EXITS
-- On DOUBLE reduce production post_cond -> EXITS
-- On DOTDOTDOT reduce production post_cond -> EXITS
-- On DOTDOT reduce production post_cond -> EXITS
-- On DOT reduce production post_cond -> EXITS
-- On DOLLAR reduce production post_cond -> EXITS
-- On DISJOINT reduce production post_cond -> EXITS
-- On DECREASES reduce production post_cond -> EXITS
-- On DANGLING reduce production post_cond -> EXITS
-- On CUSTOM reduce production post_cond -> EXITS
-- On CONTRACT reduce production post_cond -> EXITS
-- On CONTINUES reduce production post_cond -> EXITS
-- On CONSTANT10 reduce production post_cond -> EXITS
-- On CONSTANT reduce production post_cond -> EXITS
-- On CONST reduce production post_cond -> EXITS
-- On COMPLETE reduce production post_cond -> EXITS
-- On COMMA reduce production post_cond -> EXITS
-- On COLONGT reduce production post_cond -> EXITS
-- On COLONCOLON reduce production post_cond -> EXITS
-- On COLON2 reduce production post_cond -> EXITS
-- On COLON reduce production post_cond -> EXITS
-- On CHAR reduce production post_cond -> EXITS
-- On CASE reduce production post_cond -> EXITS
-- On BSUNION reduce production post_cond -> EXITS
-- On BSTYPE reduce production post_cond -> EXITS
-- On BREAKS reduce production post_cond -> EXITS
-- On BOOLEAN reduce production post_cond -> EXITS
-- On BOOL reduce production post_cond -> EXITS
-- On BLOCK_LENGTH reduce production post_cond -> EXITS
-- On BIMPLIES reduce production post_cond -> EXITS
-- On BIFF reduce production post_cond -> EXITS
-- On BEHAVIORS reduce production post_cond -> EXITS
-- On BEHAVIOR reduce production post_cond -> EXITS
-- On BASE_ADDR reduce production post_cond -> EXITS
-- On AXIOMATIC reduce production post_cond -> EXITS
-- On AXIOM reduce production post_cond -> EXITS
-- On AUTOMATIC reduce production post_cond -> EXITS
-- On AT reduce production post_cond -> EXITS
-- On ASSUMES reduce production post_cond -> EXITS
-- On ASSIGNS reduce production post_cond -> EXITS
-- On ASSERT reduce production post_cond -> EXITS
-- On ARROW reduce production post_cond -> EXITS
-- On AND reduce production post_cond -> EXITS
-- On AMP reduce production post_cond -> EXITS
-- On ALLOCATION reduce production post_cond -> EXITS
-- On ALLOCATES reduce production post_cond -> EXITS
-- On ALLOCABLE reduce production post_cond -> EXITS

State 48:
## Known stack suffix:
## ENUM
## LR(1) items:
c_keyword -> ENUM . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> ENUM
-- On WITH reduce production c_keyword -> ENUM
-- On VOLATILE reduce production c_keyword -> ENUM
-- On VOID reduce production c_keyword -> ENUM
-- On VARIANT reduce production c_keyword -> ENUM
-- On VALID_READ reduce production c_keyword -> ENUM
-- On VALID_RANGE reduce production c_keyword -> ENUM
-- On VALID_INDEX reduce production c_keyword -> ENUM
-- On VALID reduce production c_keyword -> ENUM
-- On UNSIGNED reduce production c_keyword -> ENUM
-- On UNION reduce production c_keyword -> ENUM
-- On UNALLOCATED reduce production c_keyword -> ENUM
-- On TYPEOF reduce production c_keyword -> ENUM
-- On TYPENAME reduce production c_keyword -> ENUM
-- On TYPE reduce production c_keyword -> ENUM
-- On TRUE reduce production c_keyword -> ENUM
-- On TILDE reduce production c_keyword -> ENUM
-- On TERMINATES reduce production c_keyword -> ENUM
-- On STRUCT reduce production c_keyword -> ENUM
-- On STRING_LITERAL reduce production c_keyword -> ENUM
-- On STATIC reduce production c_keyword -> ENUM
-- On STAR reduce production c_keyword -> ENUM
-- On SLICE reduce production c_keyword -> ENUM
-- On SLASH reduce production c_keyword -> ENUM
-- On SIZEOF reduce production c_keyword -> ENUM
-- On SIGNED reduce production c_keyword -> ENUM
-- On SHORT reduce production c_keyword -> ENUM
-- On SEPARATED reduce production c_keyword -> ENUM
-- On SEMICOLON reduce production c_keyword -> ENUM
-- On RSQUARE reduce production c_keyword -> ENUM
-- On RPAR reduce production c_keyword -> ENUM
-- On RETURNS reduce production c_keyword -> ENUM
-- On RESULT reduce production c_keyword -> ENUM
-- On REQUIRES reduce production c_keyword -> ENUM
-- On REGISTER reduce production c_keyword -> ENUM
-- On REAL reduce production c_keyword -> ENUM
-- On READS reduce production c_keyword -> ENUM
-- On RBRACE reduce production c_keyword -> ENUM
-- On QUESTION reduce production c_keyword -> ENUM
-- On PREDICATE reduce production c_keyword -> ENUM
-- On PRAGMA reduce production c_keyword -> ENUM
-- On PLUS reduce production c_keyword -> ENUM
-- On PIPE reduce production c_keyword -> ENUM
-- On PERCENT reduce production c_keyword -> ENUM
-- On OR reduce production c_keyword -> ENUM
-- On OLD reduce production c_keyword -> ENUM
-- On OFFSET reduce production c_keyword -> ENUM
-- On NULL reduce production c_keyword -> ENUM
-- On NOTHING reduce production c_keyword -> ENUM
-- On NOT reduce production c_keyword -> ENUM
-- On NE reduce production c_keyword -> ENUM
-- On MODULE reduce production c_keyword -> ENUM
-- On MODEL reduce production c_keyword -> ENUM
-- On MINUS reduce production c_keyword -> ENUM
-- On LTLT reduce production c_keyword -> ENUM
-- On LTCOLON reduce production c_keyword -> ENUM
-- On LT reduce production c_keyword -> ENUM
-- On LSQUARE reduce production c_keyword -> ENUM
-- On LPAR reduce production c_keyword -> ENUM
-- On LOOP reduce production c_keyword -> ENUM
-- On LONG reduce production c_keyword -> ENUM
-- On LOGIC reduce production c_keyword -> ENUM
-- On LET reduce production c_keyword -> ENUM
-- On LEMMA reduce production c_keyword -> ENUM
-- On LE reduce production c_keyword -> ENUM
-- On LBRACE reduce production c_keyword -> ENUM
-- On LAMBDA reduce production c_keyword -> ENUM
-- On LABEL reduce production c_keyword -> ENUM
-- On INVARIANT reduce production c_keyword -> ENUM
-- On INTER reduce production c_keyword -> ENUM
-- On INTEGER reduce production c_keyword -> ENUM
-- On INT reduce production c_keyword -> ENUM
-- On INITIALIZED reduce production c_keyword -> ENUM
-- On INDUCTIVE reduce production c_keyword -> ENUM
-- On INCLUDE reduce production c_keyword -> ENUM
-- On IMPLIES reduce production c_keyword -> ENUM
-- On IMPACT reduce production c_keyword -> ENUM
-- On IFF reduce production c_keyword -> ENUM
-- On IF reduce production c_keyword -> ENUM
-- On IDENTIFIER reduce production c_keyword -> ENUM
-- On HATHAT reduce production c_keyword -> ENUM
-- On HAT reduce production c_keyword -> ENUM
-- On GTGT reduce production c_keyword -> ENUM
-- On GT reduce production c_keyword -> ENUM
-- On GLOBAL reduce production c_keyword -> ENUM
-- On GHOST reduce production c_keyword -> ENUM
-- On GE reduce production c_keyword -> ENUM
-- On FUNCTION reduce production c_keyword -> ENUM
-- On FROM reduce production c_keyword -> ENUM
-- On FRESH reduce production c_keyword -> ENUM
-- On FREES reduce production c_keyword -> ENUM
-- On FREEABLE reduce production c_keyword -> ENUM
-- On FORALL reduce production c_keyword -> ENUM
-- On FOR reduce production c_keyword -> ENUM
-- On FLOAT reduce production c_keyword -> ENUM
-- On FALSE reduce production c_keyword -> ENUM
-- On EXT_LET reduce production c_keyword -> ENUM
-- On EXT_AT reduce production c_keyword -> ENUM
-- On EXITS reduce production c_keyword -> ENUM
-- On EXISTS reduce production c_keyword -> ENUM
-- On EQUAL reduce production c_keyword -> ENUM
-- On EQ reduce production c_keyword -> ENUM
-- On EOF reduce production c_keyword -> ENUM
-- On ENUM reduce production c_keyword -> ENUM
-- On ENSURES reduce production c_keyword -> ENUM
-- On EMPTY reduce production c_keyword -> ENUM
-- On ELSE reduce production c_keyword -> ENUM
-- On DYNAMIC reduce production c_keyword -> ENUM
-- On DOUBLE reduce production c_keyword -> ENUM
-- On DOTDOTDOT reduce production c_keyword -> ENUM
-- On DOTDOT reduce production c_keyword -> ENUM
-- On DOT reduce production c_keyword -> ENUM
-- On DOLLAR reduce production c_keyword -> ENUM
-- On DISJOINT reduce production c_keyword -> ENUM
-- On DECREASES reduce production c_keyword -> ENUM
-- On DANGLING reduce production c_keyword -> ENUM
-- On CUSTOM reduce production c_keyword -> ENUM
-- On CONTRACT reduce production c_keyword -> ENUM
-- On CONTINUES reduce production c_keyword -> ENUM
-- On CONSTANT10 reduce production c_keyword -> ENUM
-- On CONSTANT reduce production c_keyword -> ENUM
-- On CONST reduce production c_keyword -> ENUM
-- On COMPLETE reduce production c_keyword -> ENUM
-- On COMMA reduce production c_keyword -> ENUM
-- On COLONGT reduce production c_keyword -> ENUM
-- On COLONCOLON reduce production c_keyword -> ENUM
-- On COLON2 reduce production c_keyword -> ENUM
-- On COLON reduce production c_keyword -> ENUM
-- On CHAR reduce production c_keyword -> ENUM
-- On CASE reduce production c_keyword -> ENUM
-- On BSUNION reduce production c_keyword -> ENUM
-- On BSTYPE reduce production c_keyword -> ENUM
-- On BREAKS reduce production c_keyword -> ENUM
-- On BOOLEAN reduce production c_keyword -> ENUM
-- On BOOL reduce production c_keyword -> ENUM
-- On BLOCK_LENGTH reduce production c_keyword -> ENUM
-- On BIMPLIES reduce production c_keyword -> ENUM
-- On BIFF reduce production c_keyword -> ENUM
-- On BEHAVIORS reduce production c_keyword -> ENUM
-- On BEHAVIOR reduce production c_keyword -> ENUM
-- On BASE_ADDR reduce production c_keyword -> ENUM
-- On AXIOMATIC reduce production c_keyword -> ENUM
-- On AXIOM reduce production c_keyword -> ENUM
-- On AUTOMATIC reduce production c_keyword -> ENUM
-- On AT reduce production c_keyword -> ENUM
-- On ASSUMES reduce production c_keyword -> ENUM
-- On ASSIGNS reduce production c_keyword -> ENUM
-- On ASSERT reduce production c_keyword -> ENUM
-- On ARROW reduce production c_keyword -> ENUM
-- On AND reduce production c_keyword -> ENUM
-- On AMP reduce production c_keyword -> ENUM
-- On ALLOCATION reduce production c_keyword -> ENUM
-- On ALLOCATES reduce production c_keyword -> ENUM
-- On ALLOCABLE reduce production c_keyword -> ENUM

State 49:
## Known stack suffix:
## ENSURES
## LR(1) items:
post_cond -> ENSURES . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production post_cond -> ENSURES
-- On WITH reduce production post_cond -> ENSURES
-- On VOLATILE reduce production post_cond -> ENSURES
-- On VOID reduce production post_cond -> ENSURES
-- On VARIANT reduce production post_cond -> ENSURES
-- On VALID_READ reduce production post_cond -> ENSURES
-- On VALID_RANGE reduce production post_cond -> ENSURES
-- On VALID_INDEX reduce production post_cond -> ENSURES
-- On VALID reduce production post_cond -> ENSURES
-- On UNSIGNED reduce production post_cond -> ENSURES
-- On UNION reduce production post_cond -> ENSURES
-- On UNALLOCATED reduce production post_cond -> ENSURES
-- On TYPEOF reduce production post_cond -> ENSURES
-- On TYPENAME reduce production post_cond -> ENSURES
-- On TYPE reduce production post_cond -> ENSURES
-- On TRUE reduce production post_cond -> ENSURES
-- On TILDE reduce production post_cond -> ENSURES
-- On TERMINATES reduce production post_cond -> ENSURES
-- On STRUCT reduce production post_cond -> ENSURES
-- On STRING_LITERAL reduce production post_cond -> ENSURES
-- On STATIC reduce production post_cond -> ENSURES
-- On STAR reduce production post_cond -> ENSURES
-- On SLICE reduce production post_cond -> ENSURES
-- On SLASH reduce production post_cond -> ENSURES
-- On SIZEOF reduce production post_cond -> ENSURES
-- On SIGNED reduce production post_cond -> ENSURES
-- On SHORT reduce production post_cond -> ENSURES
-- On SEPARATED reduce production post_cond -> ENSURES
-- On SEMICOLON reduce production post_cond -> ENSURES
-- On RSQUARE reduce production post_cond -> ENSURES
-- On RPAR reduce production post_cond -> ENSURES
-- On RETURNS reduce production post_cond -> ENSURES
-- On RESULT reduce production post_cond -> ENSURES
-- On REQUIRES reduce production post_cond -> ENSURES
-- On REGISTER reduce production post_cond -> ENSURES
-- On REAL reduce production post_cond -> ENSURES
-- On READS reduce production post_cond -> ENSURES
-- On RBRACE reduce production post_cond -> ENSURES
-- On QUESTION reduce production post_cond -> ENSURES
-- On PREDICATE reduce production post_cond -> ENSURES
-- On PRAGMA reduce production post_cond -> ENSURES
-- On PLUS reduce production post_cond -> ENSURES
-- On PIPE reduce production post_cond -> ENSURES
-- On PERCENT reduce production post_cond -> ENSURES
-- On OR reduce production post_cond -> ENSURES
-- On OLD reduce production post_cond -> ENSURES
-- On OFFSET reduce production post_cond -> ENSURES
-- On NULL reduce production post_cond -> ENSURES
-- On NOTHING reduce production post_cond -> ENSURES
-- On NOT reduce production post_cond -> ENSURES
-- On NE reduce production post_cond -> ENSURES
-- On MODULE reduce production post_cond -> ENSURES
-- On MODEL reduce production post_cond -> ENSURES
-- On MINUS reduce production post_cond -> ENSURES
-- On LTLT reduce production post_cond -> ENSURES
-- On LTCOLON reduce production post_cond -> ENSURES
-- On LT reduce production post_cond -> ENSURES
-- On LSQUARE reduce production post_cond -> ENSURES
-- On LPAR reduce production post_cond -> ENSURES
-- On LOOP reduce production post_cond -> ENSURES
-- On LONG reduce production post_cond -> ENSURES
-- On LOGIC reduce production post_cond -> ENSURES
-- On LET reduce production post_cond -> ENSURES
-- On LEMMA reduce production post_cond -> ENSURES
-- On LE reduce production post_cond -> ENSURES
-- On LBRACE reduce production post_cond -> ENSURES
-- On LAMBDA reduce production post_cond -> ENSURES
-- On LABEL reduce production post_cond -> ENSURES
-- On INVARIANT reduce production post_cond -> ENSURES
-- On INTER reduce production post_cond -> ENSURES
-- On INTEGER reduce production post_cond -> ENSURES
-- On INT reduce production post_cond -> ENSURES
-- On INITIALIZED reduce production post_cond -> ENSURES
-- On INDUCTIVE reduce production post_cond -> ENSURES
-- On INCLUDE reduce production post_cond -> ENSURES
-- On IMPLIES reduce production post_cond -> ENSURES
-- On IMPACT reduce production post_cond -> ENSURES
-- On IFF reduce production post_cond -> ENSURES
-- On IF reduce production post_cond -> ENSURES
-- On IDENTIFIER reduce production post_cond -> ENSURES
-- On HATHAT reduce production post_cond -> ENSURES
-- On HAT reduce production post_cond -> ENSURES
-- On GTGT reduce production post_cond -> ENSURES
-- On GT reduce production post_cond -> ENSURES
-- On GLOBAL reduce production post_cond -> ENSURES
-- On GHOST reduce production post_cond -> ENSURES
-- On GE reduce production post_cond -> ENSURES
-- On FUNCTION reduce production post_cond -> ENSURES
-- On FROM reduce production post_cond -> ENSURES
-- On FRESH reduce production post_cond -> ENSURES
-- On FREES reduce production post_cond -> ENSURES
-- On FREEABLE reduce production post_cond -> ENSURES
-- On FORALL reduce production post_cond -> ENSURES
-- On FOR reduce production post_cond -> ENSURES
-- On FLOAT reduce production post_cond -> ENSURES
-- On FALSE reduce production post_cond -> ENSURES
-- On EXT_LET reduce production post_cond -> ENSURES
-- On EXT_AT reduce production post_cond -> ENSURES
-- On EXITS reduce production post_cond -> ENSURES
-- On EXISTS reduce production post_cond -> ENSURES
-- On EQUAL reduce production post_cond -> ENSURES
-- On EQ reduce production post_cond -> ENSURES
-- On EOF reduce production post_cond -> ENSURES
-- On ENUM reduce production post_cond -> ENSURES
-- On ENSURES reduce production post_cond -> ENSURES
-- On EMPTY reduce production post_cond -> ENSURES
-- On ELSE reduce production post_cond -> ENSURES
-- On DYNAMIC reduce production post_cond -> ENSURES
-- On DOUBLE reduce production post_cond -> ENSURES
-- On DOTDOTDOT reduce production post_cond -> ENSURES
-- On DOTDOT reduce production post_cond -> ENSURES
-- On DOT reduce production post_cond -> ENSURES
-- On DOLLAR reduce production post_cond -> ENSURES
-- On DISJOINT reduce production post_cond -> ENSURES
-- On DECREASES reduce production post_cond -> ENSURES
-- On DANGLING reduce production post_cond -> ENSURES
-- On CUSTOM reduce production post_cond -> ENSURES
-- On CONTRACT reduce production post_cond -> ENSURES
-- On CONTINUES reduce production post_cond -> ENSURES
-- On CONSTANT10 reduce production post_cond -> ENSURES
-- On CONSTANT reduce production post_cond -> ENSURES
-- On CONST reduce production post_cond -> ENSURES
-- On COMPLETE reduce production post_cond -> ENSURES
-- On COMMA reduce production post_cond -> ENSURES
-- On COLONGT reduce production post_cond -> ENSURES
-- On COLONCOLON reduce production post_cond -> ENSURES
-- On COLON2 reduce production post_cond -> ENSURES
-- On COLON reduce production post_cond -> ENSURES
-- On CHAR reduce production post_cond -> ENSURES
-- On CASE reduce production post_cond -> ENSURES
-- On BSUNION reduce production post_cond -> ENSURES
-- On BSTYPE reduce production post_cond -> ENSURES
-- On BREAKS reduce production post_cond -> ENSURES
-- On BOOLEAN reduce production post_cond -> ENSURES
-- On BOOL reduce production post_cond -> ENSURES
-- On BLOCK_LENGTH reduce production post_cond -> ENSURES
-- On BIMPLIES reduce production post_cond -> ENSURES
-- On BIFF reduce production post_cond -> ENSURES
-- On BEHAVIORS reduce production post_cond -> ENSURES
-- On BEHAVIOR reduce production post_cond -> ENSURES
-- On BASE_ADDR reduce production post_cond -> ENSURES
-- On AXIOMATIC reduce production post_cond -> ENSURES
-- On AXIOM reduce production post_cond -> ENSURES
-- On AUTOMATIC reduce production post_cond -> ENSURES
-- On AT reduce production post_cond -> ENSURES
-- On ASSUMES reduce production post_cond -> ENSURES
-- On ASSIGNS reduce production post_cond -> ENSURES
-- On ASSERT reduce production post_cond -> ENSURES
-- On ARROW reduce production post_cond -> ENSURES
-- On AND reduce production post_cond -> ENSURES
-- On AMP reduce production post_cond -> ENSURES
-- On ALLOCATION reduce production post_cond -> ENSURES
-- On ALLOCATES reduce production post_cond -> ENSURES
-- On ALLOCABLE reduce production post_cond -> ENSURES

State 50:
## Known stack suffix:
## ELSE
## LR(1) items:
c_keyword -> ELSE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> ELSE
-- On WITH reduce production c_keyword -> ELSE
-- On VOLATILE reduce production c_keyword -> ELSE
-- On VOID reduce production c_keyword -> ELSE
-- On VARIANT reduce production c_keyword -> ELSE
-- On VALID_READ reduce production c_keyword -> ELSE
-- On VALID_RANGE reduce production c_keyword -> ELSE
-- On VALID_INDEX reduce production c_keyword -> ELSE
-- On VALID reduce production c_keyword -> ELSE
-- On UNSIGNED reduce production c_keyword -> ELSE
-- On UNION reduce production c_keyword -> ELSE
-- On UNALLOCATED reduce production c_keyword -> ELSE
-- On TYPEOF reduce production c_keyword -> ELSE
-- On TYPENAME reduce production c_keyword -> ELSE
-- On TYPE reduce production c_keyword -> ELSE
-- On TRUE reduce production c_keyword -> ELSE
-- On TILDE reduce production c_keyword -> ELSE
-- On TERMINATES reduce production c_keyword -> ELSE
-- On STRUCT reduce production c_keyword -> ELSE
-- On STRING_LITERAL reduce production c_keyword -> ELSE
-- On STATIC reduce production c_keyword -> ELSE
-- On STAR reduce production c_keyword -> ELSE
-- On SLICE reduce production c_keyword -> ELSE
-- On SLASH reduce production c_keyword -> ELSE
-- On SIZEOF reduce production c_keyword -> ELSE
-- On SIGNED reduce production c_keyword -> ELSE
-- On SHORT reduce production c_keyword -> ELSE
-- On SEPARATED reduce production c_keyword -> ELSE
-- On SEMICOLON reduce production c_keyword -> ELSE
-- On RSQUARE reduce production c_keyword -> ELSE
-- On RPAR reduce production c_keyword -> ELSE
-- On RETURNS reduce production c_keyword -> ELSE
-- On RESULT reduce production c_keyword -> ELSE
-- On REQUIRES reduce production c_keyword -> ELSE
-- On REGISTER reduce production c_keyword -> ELSE
-- On REAL reduce production c_keyword -> ELSE
-- On READS reduce production c_keyword -> ELSE
-- On RBRACE reduce production c_keyword -> ELSE
-- On QUESTION reduce production c_keyword -> ELSE
-- On PREDICATE reduce production c_keyword -> ELSE
-- On PRAGMA reduce production c_keyword -> ELSE
-- On PLUS reduce production c_keyword -> ELSE
-- On PIPE reduce production c_keyword -> ELSE
-- On PERCENT reduce production c_keyword -> ELSE
-- On OR reduce production c_keyword -> ELSE
-- On OLD reduce production c_keyword -> ELSE
-- On OFFSET reduce production c_keyword -> ELSE
-- On NULL reduce production c_keyword -> ELSE
-- On NOTHING reduce production c_keyword -> ELSE
-- On NOT reduce production c_keyword -> ELSE
-- On NE reduce production c_keyword -> ELSE
-- On MODULE reduce production c_keyword -> ELSE
-- On MODEL reduce production c_keyword -> ELSE
-- On MINUS reduce production c_keyword -> ELSE
-- On LTLT reduce production c_keyword -> ELSE
-- On LTCOLON reduce production c_keyword -> ELSE
-- On LT reduce production c_keyword -> ELSE
-- On LSQUARE reduce production c_keyword -> ELSE
-- On LPAR reduce production c_keyword -> ELSE
-- On LOOP reduce production c_keyword -> ELSE
-- On LONG reduce production c_keyword -> ELSE
-- On LOGIC reduce production c_keyword -> ELSE
-- On LET reduce production c_keyword -> ELSE
-- On LEMMA reduce production c_keyword -> ELSE
-- On LE reduce production c_keyword -> ELSE
-- On LBRACE reduce production c_keyword -> ELSE
-- On LAMBDA reduce production c_keyword -> ELSE
-- On LABEL reduce production c_keyword -> ELSE
-- On INVARIANT reduce production c_keyword -> ELSE
-- On INTER reduce production c_keyword -> ELSE
-- On INTEGER reduce production c_keyword -> ELSE
-- On INT reduce production c_keyword -> ELSE
-- On INITIALIZED reduce production c_keyword -> ELSE
-- On INDUCTIVE reduce production c_keyword -> ELSE
-- On INCLUDE reduce production c_keyword -> ELSE
-- On IMPLIES reduce production c_keyword -> ELSE
-- On IMPACT reduce production c_keyword -> ELSE
-- On IFF reduce production c_keyword -> ELSE
-- On IF reduce production c_keyword -> ELSE
-- On IDENTIFIER reduce production c_keyword -> ELSE
-- On HATHAT reduce production c_keyword -> ELSE
-- On HAT reduce production c_keyword -> ELSE
-- On GTGT reduce production c_keyword -> ELSE
-- On GT reduce production c_keyword -> ELSE
-- On GLOBAL reduce production c_keyword -> ELSE
-- On GHOST reduce production c_keyword -> ELSE
-- On GE reduce production c_keyword -> ELSE
-- On FUNCTION reduce production c_keyword -> ELSE
-- On FROM reduce production c_keyword -> ELSE
-- On FRESH reduce production c_keyword -> ELSE
-- On FREES reduce production c_keyword -> ELSE
-- On FREEABLE reduce production c_keyword -> ELSE
-- On FORALL reduce production c_keyword -> ELSE
-- On FOR reduce production c_keyword -> ELSE
-- On FLOAT reduce production c_keyword -> ELSE
-- On FALSE reduce production c_keyword -> ELSE
-- On EXT_LET reduce production c_keyword -> ELSE
-- On EXT_AT reduce production c_keyword -> ELSE
-- On EXITS reduce production c_keyword -> ELSE
-- On EXISTS reduce production c_keyword -> ELSE
-- On EQUAL reduce production c_keyword -> ELSE
-- On EQ reduce production c_keyword -> ELSE
-- On EOF reduce production c_keyword -> ELSE
-- On ENUM reduce production c_keyword -> ELSE
-- On ENSURES reduce production c_keyword -> ELSE
-- On EMPTY reduce production c_keyword -> ELSE
-- On ELSE reduce production c_keyword -> ELSE
-- On DYNAMIC reduce production c_keyword -> ELSE
-- On DOUBLE reduce production c_keyword -> ELSE
-- On DOTDOTDOT reduce production c_keyword -> ELSE
-- On DOTDOT reduce production c_keyword -> ELSE
-- On DOT reduce production c_keyword -> ELSE
-- On DOLLAR reduce production c_keyword -> ELSE
-- On DISJOINT reduce production c_keyword -> ELSE
-- On DECREASES reduce production c_keyword -> ELSE
-- On DANGLING reduce production c_keyword -> ELSE
-- On CUSTOM reduce production c_keyword -> ELSE
-- On CONTRACT reduce production c_keyword -> ELSE
-- On CONTINUES reduce production c_keyword -> ELSE
-- On CONSTANT10 reduce production c_keyword -> ELSE
-- On CONSTANT reduce production c_keyword -> ELSE
-- On CONST reduce production c_keyword -> ELSE
-- On COMPLETE reduce production c_keyword -> ELSE
-- On COMMA reduce production c_keyword -> ELSE
-- On COLONGT reduce production c_keyword -> ELSE
-- On COLONCOLON reduce production c_keyword -> ELSE
-- On COLON2 reduce production c_keyword -> ELSE
-- On COLON reduce production c_keyword -> ELSE
-- On CHAR reduce production c_keyword -> ELSE
-- On CASE reduce production c_keyword -> ELSE
-- On BSUNION reduce production c_keyword -> ELSE
-- On BSTYPE reduce production c_keyword -> ELSE
-- On BREAKS reduce production c_keyword -> ELSE
-- On BOOLEAN reduce production c_keyword -> ELSE
-- On BOOL reduce production c_keyword -> ELSE
-- On BLOCK_LENGTH reduce production c_keyword -> ELSE
-- On BIMPLIES reduce production c_keyword -> ELSE
-- On BIFF reduce production c_keyword -> ELSE
-- On BEHAVIORS reduce production c_keyword -> ELSE
-- On BEHAVIOR reduce production c_keyword -> ELSE
-- On BASE_ADDR reduce production c_keyword -> ELSE
-- On AXIOMATIC reduce production c_keyword -> ELSE
-- On AXIOM reduce production c_keyword -> ELSE
-- On AUTOMATIC reduce production c_keyword -> ELSE
-- On AT reduce production c_keyword -> ELSE
-- On ASSUMES reduce production c_keyword -> ELSE
-- On ASSIGNS reduce production c_keyword -> ELSE
-- On ASSERT reduce production c_keyword -> ELSE
-- On ARROW reduce production c_keyword -> ELSE
-- On AND reduce production c_keyword -> ELSE
-- On AMP reduce production c_keyword -> ELSE
-- On ALLOCATION reduce production c_keyword -> ELSE
-- On ALLOCATES reduce production c_keyword -> ELSE
-- On ALLOCABLE reduce production c_keyword -> ELSE

State 51:
## Known stack suffix:
## DOUBLE
## LR(1) items:
c_keyword -> DOUBLE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> DOUBLE
-- On WITH reduce production c_keyword -> DOUBLE
-- On VOLATILE reduce production c_keyword -> DOUBLE
-- On VOID reduce production c_keyword -> DOUBLE
-- On VARIANT reduce production c_keyword -> DOUBLE
-- On VALID_READ reduce production c_keyword -> DOUBLE
-- On VALID_RANGE reduce production c_keyword -> DOUBLE
-- On VALID_INDEX reduce production c_keyword -> DOUBLE
-- On VALID reduce production c_keyword -> DOUBLE
-- On UNSIGNED reduce production c_keyword -> DOUBLE
-- On UNION reduce production c_keyword -> DOUBLE
-- On UNALLOCATED reduce production c_keyword -> DOUBLE
-- On TYPEOF reduce production c_keyword -> DOUBLE
-- On TYPENAME reduce production c_keyword -> DOUBLE
-- On TYPE reduce production c_keyword -> DOUBLE
-- On TRUE reduce production c_keyword -> DOUBLE
-- On TILDE reduce production c_keyword -> DOUBLE
-- On TERMINATES reduce production c_keyword -> DOUBLE
-- On STRUCT reduce production c_keyword -> DOUBLE
-- On STRING_LITERAL reduce production c_keyword -> DOUBLE
-- On STATIC reduce production c_keyword -> DOUBLE
-- On STAR reduce production c_keyword -> DOUBLE
-- On SLICE reduce production c_keyword -> DOUBLE
-- On SLASH reduce production c_keyword -> DOUBLE
-- On SIZEOF reduce production c_keyword -> DOUBLE
-- On SIGNED reduce production c_keyword -> DOUBLE
-- On SHORT reduce production c_keyword -> DOUBLE
-- On SEPARATED reduce production c_keyword -> DOUBLE
-- On SEMICOLON reduce production c_keyword -> DOUBLE
-- On RSQUARE reduce production c_keyword -> DOUBLE
-- On RPAR reduce production c_keyword -> DOUBLE
-- On RETURNS reduce production c_keyword -> DOUBLE
-- On RESULT reduce production c_keyword -> DOUBLE
-- On REQUIRES reduce production c_keyword -> DOUBLE
-- On REGISTER reduce production c_keyword -> DOUBLE
-- On REAL reduce production c_keyword -> DOUBLE
-- On READS reduce production c_keyword -> DOUBLE
-- On RBRACE reduce production c_keyword -> DOUBLE
-- On QUESTION reduce production c_keyword -> DOUBLE
-- On PREDICATE reduce production c_keyword -> DOUBLE
-- On PRAGMA reduce production c_keyword -> DOUBLE
-- On PLUS reduce production c_keyword -> DOUBLE
-- On PIPE reduce production c_keyword -> DOUBLE
-- On PERCENT reduce production c_keyword -> DOUBLE
-- On OR reduce production c_keyword -> DOUBLE
-- On OLD reduce production c_keyword -> DOUBLE
-- On OFFSET reduce production c_keyword -> DOUBLE
-- On NULL reduce production c_keyword -> DOUBLE
-- On NOTHING reduce production c_keyword -> DOUBLE
-- On NOT reduce production c_keyword -> DOUBLE
-- On NE reduce production c_keyword -> DOUBLE
-- On MODULE reduce production c_keyword -> DOUBLE
-- On MODEL reduce production c_keyword -> DOUBLE
-- On MINUS reduce production c_keyword -> DOUBLE
-- On LTLT reduce production c_keyword -> DOUBLE
-- On LTCOLON reduce production c_keyword -> DOUBLE
-- On LT reduce production c_keyword -> DOUBLE
-- On LSQUARE reduce production c_keyword -> DOUBLE
-- On LPAR reduce production c_keyword -> DOUBLE
-- On LOOP reduce production c_keyword -> DOUBLE
-- On LONG reduce production c_keyword -> DOUBLE
-- On LOGIC reduce production c_keyword -> DOUBLE
-- On LET reduce production c_keyword -> DOUBLE
-- On LEMMA reduce production c_keyword -> DOUBLE
-- On LE reduce production c_keyword -> DOUBLE
-- On LBRACE reduce production c_keyword -> DOUBLE
-- On LAMBDA reduce production c_keyword -> DOUBLE
-- On LABEL reduce production c_keyword -> DOUBLE
-- On INVARIANT reduce production c_keyword -> DOUBLE
-- On INTER reduce production c_keyword -> DOUBLE
-- On INTEGER reduce production c_keyword -> DOUBLE
-- On INT reduce production c_keyword -> DOUBLE
-- On INITIALIZED reduce production c_keyword -> DOUBLE
-- On INDUCTIVE reduce production c_keyword -> DOUBLE
-- On INCLUDE reduce production c_keyword -> DOUBLE
-- On IMPLIES reduce production c_keyword -> DOUBLE
-- On IMPACT reduce production c_keyword -> DOUBLE
-- On IFF reduce production c_keyword -> DOUBLE
-- On IF reduce production c_keyword -> DOUBLE
-- On IDENTIFIER reduce production c_keyword -> DOUBLE
-- On HATHAT reduce production c_keyword -> DOUBLE
-- On HAT reduce production c_keyword -> DOUBLE
-- On GTGT reduce production c_keyword -> DOUBLE
-- On GT reduce production c_keyword -> DOUBLE
-- On GLOBAL reduce production c_keyword -> DOUBLE
-- On GHOST reduce production c_keyword -> DOUBLE
-- On GE reduce production c_keyword -> DOUBLE
-- On FUNCTION reduce production c_keyword -> DOUBLE
-- On FROM reduce production c_keyword -> DOUBLE
-- On FRESH reduce production c_keyword -> DOUBLE
-- On FREES reduce production c_keyword -> DOUBLE
-- On FREEABLE reduce production c_keyword -> DOUBLE
-- On FORALL reduce production c_keyword -> DOUBLE
-- On FOR reduce production c_keyword -> DOUBLE
-- On FLOAT reduce production c_keyword -> DOUBLE
-- On FALSE reduce production c_keyword -> DOUBLE
-- On EXT_LET reduce production c_keyword -> DOUBLE
-- On EXT_AT reduce production c_keyword -> DOUBLE
-- On EXITS reduce production c_keyword -> DOUBLE
-- On EXISTS reduce production c_keyword -> DOUBLE
-- On EQUAL reduce production c_keyword -> DOUBLE
-- On EQ reduce production c_keyword -> DOUBLE
-- On EOF reduce production c_keyword -> DOUBLE
-- On ENUM reduce production c_keyword -> DOUBLE
-- On ENSURES reduce production c_keyword -> DOUBLE
-- On EMPTY reduce production c_keyword -> DOUBLE
-- On ELSE reduce production c_keyword -> DOUBLE
-- On DYNAMIC reduce production c_keyword -> DOUBLE
-- On DOUBLE reduce production c_keyword -> DOUBLE
-- On DOTDOTDOT reduce production c_keyword -> DOUBLE
-- On DOTDOT reduce production c_keyword -> DOUBLE
-- On DOT reduce production c_keyword -> DOUBLE
-- On DOLLAR reduce production c_keyword -> DOUBLE
-- On DISJOINT reduce production c_keyword -> DOUBLE
-- On DECREASES reduce production c_keyword -> DOUBLE
-- On DANGLING reduce production c_keyword -> DOUBLE
-- On CUSTOM reduce production c_keyword -> DOUBLE
-- On CONTRACT reduce production c_keyword -> DOUBLE
-- On CONTINUES reduce production c_keyword -> DOUBLE
-- On CONSTANT10 reduce production c_keyword -> DOUBLE
-- On CONSTANT reduce production c_keyword -> DOUBLE
-- On CONST reduce production c_keyword -> DOUBLE
-- On COMPLETE reduce production c_keyword -> DOUBLE
-- On COMMA reduce production c_keyword -> DOUBLE
-- On COLONGT reduce production c_keyword -> DOUBLE
-- On COLONCOLON reduce production c_keyword -> DOUBLE
-- On COLON2 reduce production c_keyword -> DOUBLE
-- On COLON reduce production c_keyword -> DOUBLE
-- On CHAR reduce production c_keyword -> DOUBLE
-- On CASE reduce production c_keyword -> DOUBLE
-- On BSUNION reduce production c_keyword -> DOUBLE
-- On BSTYPE reduce production c_keyword -> DOUBLE
-- On BREAKS reduce production c_keyword -> DOUBLE
-- On BOOLEAN reduce production c_keyword -> DOUBLE
-- On BOOL reduce production c_keyword -> DOUBLE
-- On BLOCK_LENGTH reduce production c_keyword -> DOUBLE
-- On BIMPLIES reduce production c_keyword -> DOUBLE
-- On BIFF reduce production c_keyword -> DOUBLE
-- On BEHAVIORS reduce production c_keyword -> DOUBLE
-- On BEHAVIOR reduce production c_keyword -> DOUBLE
-- On BASE_ADDR reduce production c_keyword -> DOUBLE
-- On AXIOMATIC reduce production c_keyword -> DOUBLE
-- On AXIOM reduce production c_keyword -> DOUBLE
-- On AUTOMATIC reduce production c_keyword -> DOUBLE
-- On AT reduce production c_keyword -> DOUBLE
-- On ASSUMES reduce production c_keyword -> DOUBLE
-- On ASSIGNS reduce production c_keyword -> DOUBLE
-- On ASSERT reduce production c_keyword -> DOUBLE
-- On ARROW reduce production c_keyword -> DOUBLE
-- On AND reduce production c_keyword -> DOUBLE
-- On AMP reduce production c_keyword -> DOUBLE
-- On ALLOCATION reduce production c_keyword -> DOUBLE
-- On ALLOCATES reduce production c_keyword -> DOUBLE
-- On ALLOCABLE reduce production c_keyword -> DOUBLE

State 52:
## Known stack suffix:
## DISJOINT
## LR(1) items:
is_acsl_spec -> DISJOINT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_spec -> DISJOINT
-- On WITH reduce production is_acsl_spec -> DISJOINT
-- On VOLATILE reduce production is_acsl_spec -> DISJOINT
-- On VOID reduce production is_acsl_spec -> DISJOINT
-- On VARIANT reduce production is_acsl_spec -> DISJOINT
-- On VALID_READ reduce production is_acsl_spec -> DISJOINT
-- On VALID_RANGE reduce production is_acsl_spec -> DISJOINT
-- On VALID_INDEX reduce production is_acsl_spec -> DISJOINT
-- On VALID reduce production is_acsl_spec -> DISJOINT
-- On UNSIGNED reduce production is_acsl_spec -> DISJOINT
-- On UNION reduce production is_acsl_spec -> DISJOINT
-- On UNALLOCATED reduce production is_acsl_spec -> DISJOINT
-- On TYPEOF reduce production is_acsl_spec -> DISJOINT
-- On TYPENAME reduce production is_acsl_spec -> DISJOINT
-- On TYPE reduce production is_acsl_spec -> DISJOINT
-- On TRUE reduce production is_acsl_spec -> DISJOINT
-- On TILDE reduce production is_acsl_spec -> DISJOINT
-- On TERMINATES reduce production is_acsl_spec -> DISJOINT
-- On STRUCT reduce production is_acsl_spec -> DISJOINT
-- On STRING_LITERAL reduce production is_acsl_spec -> DISJOINT
-- On STATIC reduce production is_acsl_spec -> DISJOINT
-- On STAR reduce production is_acsl_spec -> DISJOINT
-- On SLICE reduce production is_acsl_spec -> DISJOINT
-- On SLASH reduce production is_acsl_spec -> DISJOINT
-- On SIZEOF reduce production is_acsl_spec -> DISJOINT
-- On SIGNED reduce production is_acsl_spec -> DISJOINT
-- On SHORT reduce production is_acsl_spec -> DISJOINT
-- On SEPARATED reduce production is_acsl_spec -> DISJOINT
-- On SEMICOLON reduce production is_acsl_spec -> DISJOINT
-- On RSQUARE reduce production is_acsl_spec -> DISJOINT
-- On RPAR reduce production is_acsl_spec -> DISJOINT
-- On RETURNS reduce production is_acsl_spec -> DISJOINT
-- On RESULT reduce production is_acsl_spec -> DISJOINT
-- On REQUIRES reduce production is_acsl_spec -> DISJOINT
-- On REGISTER reduce production is_acsl_spec -> DISJOINT
-- On REAL reduce production is_acsl_spec -> DISJOINT
-- On READS reduce production is_acsl_spec -> DISJOINT
-- On RBRACE reduce production is_acsl_spec -> DISJOINT
-- On QUESTION reduce production is_acsl_spec -> DISJOINT
-- On PREDICATE reduce production is_acsl_spec -> DISJOINT
-- On PRAGMA reduce production is_acsl_spec -> DISJOINT
-- On PLUS reduce production is_acsl_spec -> DISJOINT
-- On PIPE reduce production is_acsl_spec -> DISJOINT
-- On PERCENT reduce production is_acsl_spec -> DISJOINT
-- On OR reduce production is_acsl_spec -> DISJOINT
-- On OLD reduce production is_acsl_spec -> DISJOINT
-- On OFFSET reduce production is_acsl_spec -> DISJOINT
-- On NULL reduce production is_acsl_spec -> DISJOINT
-- On NOTHING reduce production is_acsl_spec -> DISJOINT
-- On NOT reduce production is_acsl_spec -> DISJOINT
-- On NE reduce production is_acsl_spec -> DISJOINT
-- On MODULE reduce production is_acsl_spec -> DISJOINT
-- On MODEL reduce production is_acsl_spec -> DISJOINT
-- On MINUS reduce production is_acsl_spec -> DISJOINT
-- On LTLT reduce production is_acsl_spec -> DISJOINT
-- On LTCOLON reduce production is_acsl_spec -> DISJOINT
-- On LT reduce production is_acsl_spec -> DISJOINT
-- On LSQUARE reduce production is_acsl_spec -> DISJOINT
-- On LPAR reduce production is_acsl_spec -> DISJOINT
-- On LOOP reduce production is_acsl_spec -> DISJOINT
-- On LONG reduce production is_acsl_spec -> DISJOINT
-- On LOGIC reduce production is_acsl_spec -> DISJOINT
-- On LET reduce production is_acsl_spec -> DISJOINT
-- On LEMMA reduce production is_acsl_spec -> DISJOINT
-- On LE reduce production is_acsl_spec -> DISJOINT
-- On LBRACE reduce production is_acsl_spec -> DISJOINT
-- On LAMBDA reduce production is_acsl_spec -> DISJOINT
-- On LABEL reduce production is_acsl_spec -> DISJOINT
-- On INVARIANT reduce production is_acsl_spec -> DISJOINT
-- On INTER reduce production is_acsl_spec -> DISJOINT
-- On INTEGER reduce production is_acsl_spec -> DISJOINT
-- On INT reduce production is_acsl_spec -> DISJOINT
-- On INITIALIZED reduce production is_acsl_spec -> DISJOINT
-- On INDUCTIVE reduce production is_acsl_spec -> DISJOINT
-- On INCLUDE reduce production is_acsl_spec -> DISJOINT
-- On IMPLIES reduce production is_acsl_spec -> DISJOINT
-- On IMPACT reduce production is_acsl_spec -> DISJOINT
-- On IFF reduce production is_acsl_spec -> DISJOINT
-- On IF reduce production is_acsl_spec -> DISJOINT
-- On IDENTIFIER reduce production is_acsl_spec -> DISJOINT
-- On HATHAT reduce production is_acsl_spec -> DISJOINT
-- On HAT reduce production is_acsl_spec -> DISJOINT
-- On GTGT reduce production is_acsl_spec -> DISJOINT
-- On GT reduce production is_acsl_spec -> DISJOINT
-- On GLOBAL reduce production is_acsl_spec -> DISJOINT
-- On GHOST reduce production is_acsl_spec -> DISJOINT
-- On GE reduce production is_acsl_spec -> DISJOINT
-- On FUNCTION reduce production is_acsl_spec -> DISJOINT
-- On FROM reduce production is_acsl_spec -> DISJOINT
-- On FRESH reduce production is_acsl_spec -> DISJOINT
-- On FREES reduce production is_acsl_spec -> DISJOINT
-- On FREEABLE reduce production is_acsl_spec -> DISJOINT
-- On FORALL reduce production is_acsl_spec -> DISJOINT
-- On FOR reduce production is_acsl_spec -> DISJOINT
-- On FLOAT reduce production is_acsl_spec -> DISJOINT
-- On FALSE reduce production is_acsl_spec -> DISJOINT
-- On EXT_LET reduce production is_acsl_spec -> DISJOINT
-- On EXT_AT reduce production is_acsl_spec -> DISJOINT
-- On EXITS reduce production is_acsl_spec -> DISJOINT
-- On EXISTS reduce production is_acsl_spec -> DISJOINT
-- On EQUAL reduce production is_acsl_spec -> DISJOINT
-- On EQ reduce production is_acsl_spec -> DISJOINT
-- On EOF reduce production is_acsl_spec -> DISJOINT
-- On ENUM reduce production is_acsl_spec -> DISJOINT
-- On ENSURES reduce production is_acsl_spec -> DISJOINT
-- On EMPTY reduce production is_acsl_spec -> DISJOINT
-- On ELSE reduce production is_acsl_spec -> DISJOINT
-- On DYNAMIC reduce production is_acsl_spec -> DISJOINT
-- On DOUBLE reduce production is_acsl_spec -> DISJOINT
-- On DOTDOTDOT reduce production is_acsl_spec -> DISJOINT
-- On DOTDOT reduce production is_acsl_spec -> DISJOINT
-- On DOT reduce production is_acsl_spec -> DISJOINT
-- On DOLLAR reduce production is_acsl_spec -> DISJOINT
-- On DISJOINT reduce production is_acsl_spec -> DISJOINT
-- On DECREASES reduce production is_acsl_spec -> DISJOINT
-- On DANGLING reduce production is_acsl_spec -> DISJOINT
-- On CUSTOM reduce production is_acsl_spec -> DISJOINT
-- On CONTRACT reduce production is_acsl_spec -> DISJOINT
-- On CONTINUES reduce production is_acsl_spec -> DISJOINT
-- On CONSTANT10 reduce production is_acsl_spec -> DISJOINT
-- On CONSTANT reduce production is_acsl_spec -> DISJOINT
-- On CONST reduce production is_acsl_spec -> DISJOINT
-- On COMPLETE reduce production is_acsl_spec -> DISJOINT
-- On COMMA reduce production is_acsl_spec -> DISJOINT
-- On COLONGT reduce production is_acsl_spec -> DISJOINT
-- On COLONCOLON reduce production is_acsl_spec -> DISJOINT
-- On COLON2 reduce production is_acsl_spec -> DISJOINT
-- On COLON reduce production is_acsl_spec -> DISJOINT
-- On CHAR reduce production is_acsl_spec -> DISJOINT
-- On CASE reduce production is_acsl_spec -> DISJOINT
-- On BSUNION reduce production is_acsl_spec -> DISJOINT
-- On BSTYPE reduce production is_acsl_spec -> DISJOINT
-- On BREAKS reduce production is_acsl_spec -> DISJOINT
-- On BOOLEAN reduce production is_acsl_spec -> DISJOINT
-- On BOOL reduce production is_acsl_spec -> DISJOINT
-- On BLOCK_LENGTH reduce production is_acsl_spec -> DISJOINT
-- On BIMPLIES reduce production is_acsl_spec -> DISJOINT
-- On BIFF reduce production is_acsl_spec -> DISJOINT
-- On BEHAVIORS reduce production is_acsl_spec -> DISJOINT
-- On BEHAVIOR reduce production is_acsl_spec -> DISJOINT
-- On BASE_ADDR reduce production is_acsl_spec -> DISJOINT
-- On AXIOMATIC reduce production is_acsl_spec -> DISJOINT
-- On AXIOM reduce production is_acsl_spec -> DISJOINT
-- On AUTOMATIC reduce production is_acsl_spec -> DISJOINT
-- On AT reduce production is_acsl_spec -> DISJOINT
-- On ASSUMES reduce production is_acsl_spec -> DISJOINT
-- On ASSIGNS reduce production is_acsl_spec -> DISJOINT
-- On ASSERT reduce production is_acsl_spec -> DISJOINT
-- On ARROW reduce production is_acsl_spec -> DISJOINT
-- On AND reduce production is_acsl_spec -> DISJOINT
-- On AMP reduce production is_acsl_spec -> DISJOINT
-- On ALLOCATION reduce production is_acsl_spec -> DISJOINT
-- On ALLOCATES reduce production is_acsl_spec -> DISJOINT
-- On ALLOCABLE reduce production is_acsl_spec -> DISJOINT

State 53:
## Known stack suffix:
## DECREASES
## LR(1) items:
is_acsl_spec -> DECREASES . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_spec -> DECREASES
-- On WITH reduce production is_acsl_spec -> DECREASES
-- On VOLATILE reduce production is_acsl_spec -> DECREASES
-- On VOID reduce production is_acsl_spec -> DECREASES
-- On VARIANT reduce production is_acsl_spec -> DECREASES
-- On VALID_READ reduce production is_acsl_spec -> DECREASES
-- On VALID_RANGE reduce production is_acsl_spec -> DECREASES
-- On VALID_INDEX reduce production is_acsl_spec -> DECREASES
-- On VALID reduce production is_acsl_spec -> DECREASES
-- On UNSIGNED reduce production is_acsl_spec -> DECREASES
-- On UNION reduce production is_acsl_spec -> DECREASES
-- On UNALLOCATED reduce production is_acsl_spec -> DECREASES
-- On TYPEOF reduce production is_acsl_spec -> DECREASES
-- On TYPENAME reduce production is_acsl_spec -> DECREASES
-- On TYPE reduce production is_acsl_spec -> DECREASES
-- On TRUE reduce production is_acsl_spec -> DECREASES
-- On TILDE reduce production is_acsl_spec -> DECREASES
-- On TERMINATES reduce production is_acsl_spec -> DECREASES
-- On STRUCT reduce production is_acsl_spec -> DECREASES
-- On STRING_LITERAL reduce production is_acsl_spec -> DECREASES
-- On STATIC reduce production is_acsl_spec -> DECREASES
-- On STAR reduce production is_acsl_spec -> DECREASES
-- On SLICE reduce production is_acsl_spec -> DECREASES
-- On SLASH reduce production is_acsl_spec -> DECREASES
-- On SIZEOF reduce production is_acsl_spec -> DECREASES
-- On SIGNED reduce production is_acsl_spec -> DECREASES
-- On SHORT reduce production is_acsl_spec -> DECREASES
-- On SEPARATED reduce production is_acsl_spec -> DECREASES
-- On SEMICOLON reduce production is_acsl_spec -> DECREASES
-- On RSQUARE reduce production is_acsl_spec -> DECREASES
-- On RPAR reduce production is_acsl_spec -> DECREASES
-- On RETURNS reduce production is_acsl_spec -> DECREASES
-- On RESULT reduce production is_acsl_spec -> DECREASES
-- On REQUIRES reduce production is_acsl_spec -> DECREASES
-- On REGISTER reduce production is_acsl_spec -> DECREASES
-- On REAL reduce production is_acsl_spec -> DECREASES
-- On READS reduce production is_acsl_spec -> DECREASES
-- On RBRACE reduce production is_acsl_spec -> DECREASES
-- On QUESTION reduce production is_acsl_spec -> DECREASES
-- On PREDICATE reduce production is_acsl_spec -> DECREASES
-- On PRAGMA reduce production is_acsl_spec -> DECREASES
-- On PLUS reduce production is_acsl_spec -> DECREASES
-- On PIPE reduce production is_acsl_spec -> DECREASES
-- On PERCENT reduce production is_acsl_spec -> DECREASES
-- On OR reduce production is_acsl_spec -> DECREASES
-- On OLD reduce production is_acsl_spec -> DECREASES
-- On OFFSET reduce production is_acsl_spec -> DECREASES
-- On NULL reduce production is_acsl_spec -> DECREASES
-- On NOTHING reduce production is_acsl_spec -> DECREASES
-- On NOT reduce production is_acsl_spec -> DECREASES
-- On NE reduce production is_acsl_spec -> DECREASES
-- On MODULE reduce production is_acsl_spec -> DECREASES
-- On MODEL reduce production is_acsl_spec -> DECREASES
-- On MINUS reduce production is_acsl_spec -> DECREASES
-- On LTLT reduce production is_acsl_spec -> DECREASES
-- On LTCOLON reduce production is_acsl_spec -> DECREASES
-- On LT reduce production is_acsl_spec -> DECREASES
-- On LSQUARE reduce production is_acsl_spec -> DECREASES
-- On LPAR reduce production is_acsl_spec -> DECREASES
-- On LOOP reduce production is_acsl_spec -> DECREASES
-- On LONG reduce production is_acsl_spec -> DECREASES
-- On LOGIC reduce production is_acsl_spec -> DECREASES
-- On LET reduce production is_acsl_spec -> DECREASES
-- On LEMMA reduce production is_acsl_spec -> DECREASES
-- On LE reduce production is_acsl_spec -> DECREASES
-- On LBRACE reduce production is_acsl_spec -> DECREASES
-- On LAMBDA reduce production is_acsl_spec -> DECREASES
-- On LABEL reduce production is_acsl_spec -> DECREASES
-- On INVARIANT reduce production is_acsl_spec -> DECREASES
-- On INTER reduce production is_acsl_spec -> DECREASES
-- On INTEGER reduce production is_acsl_spec -> DECREASES
-- On INT reduce production is_acsl_spec -> DECREASES
-- On INITIALIZED reduce production is_acsl_spec -> DECREASES
-- On INDUCTIVE reduce production is_acsl_spec -> DECREASES
-- On INCLUDE reduce production is_acsl_spec -> DECREASES
-- On IMPLIES reduce production is_acsl_spec -> DECREASES
-- On IMPACT reduce production is_acsl_spec -> DECREASES
-- On IFF reduce production is_acsl_spec -> DECREASES
-- On IF reduce production is_acsl_spec -> DECREASES
-- On IDENTIFIER reduce production is_acsl_spec -> DECREASES
-- On HATHAT reduce production is_acsl_spec -> DECREASES
-- On HAT reduce production is_acsl_spec -> DECREASES
-- On GTGT reduce production is_acsl_spec -> DECREASES
-- On GT reduce production is_acsl_spec -> DECREASES
-- On GLOBAL reduce production is_acsl_spec -> DECREASES
-- On GHOST reduce production is_acsl_spec -> DECREASES
-- On GE reduce production is_acsl_spec -> DECREASES
-- On FUNCTION reduce production is_acsl_spec -> DECREASES
-- On FROM reduce production is_acsl_spec -> DECREASES
-- On FRESH reduce production is_acsl_spec -> DECREASES
-- On FREES reduce production is_acsl_spec -> DECREASES
-- On FREEABLE reduce production is_acsl_spec -> DECREASES
-- On FORALL reduce production is_acsl_spec -> DECREASES
-- On FOR reduce production is_acsl_spec -> DECREASES
-- On FLOAT reduce production is_acsl_spec -> DECREASES
-- On FALSE reduce production is_acsl_spec -> DECREASES
-- On EXT_LET reduce production is_acsl_spec -> DECREASES
-- On EXT_AT reduce production is_acsl_spec -> DECREASES
-- On EXITS reduce production is_acsl_spec -> DECREASES
-- On EXISTS reduce production is_acsl_spec -> DECREASES
-- On EQUAL reduce production is_acsl_spec -> DECREASES
-- On EQ reduce production is_acsl_spec -> DECREASES
-- On EOF reduce production is_acsl_spec -> DECREASES
-- On ENUM reduce production is_acsl_spec -> DECREASES
-- On ENSURES reduce production is_acsl_spec -> DECREASES
-- On EMPTY reduce production is_acsl_spec -> DECREASES
-- On ELSE reduce production is_acsl_spec -> DECREASES
-- On DYNAMIC reduce production is_acsl_spec -> DECREASES
-- On DOUBLE reduce production is_acsl_spec -> DECREASES
-- On DOTDOTDOT reduce production is_acsl_spec -> DECREASES
-- On DOTDOT reduce production is_acsl_spec -> DECREASES
-- On DOT reduce production is_acsl_spec -> DECREASES
-- On DOLLAR reduce production is_acsl_spec -> DECREASES
-- On DISJOINT reduce production is_acsl_spec -> DECREASES
-- On DECREASES reduce production is_acsl_spec -> DECREASES
-- On DANGLING reduce production is_acsl_spec -> DECREASES
-- On CUSTOM reduce production is_acsl_spec -> DECREASES
-- On CONTRACT reduce production is_acsl_spec -> DECREASES
-- On CONTINUES reduce production is_acsl_spec -> DECREASES
-- On CONSTANT10 reduce production is_acsl_spec -> DECREASES
-- On CONSTANT reduce production is_acsl_spec -> DECREASES
-- On CONST reduce production is_acsl_spec -> DECREASES
-- On COMPLETE reduce production is_acsl_spec -> DECREASES
-- On COMMA reduce production is_acsl_spec -> DECREASES
-- On COLONGT reduce production is_acsl_spec -> DECREASES
-- On COLONCOLON reduce production is_acsl_spec -> DECREASES
-- On COLON2 reduce production is_acsl_spec -> DECREASES
-- On COLON reduce production is_acsl_spec -> DECREASES
-- On CHAR reduce production is_acsl_spec -> DECREASES
-- On CASE reduce production is_acsl_spec -> DECREASES
-- On BSUNION reduce production is_acsl_spec -> DECREASES
-- On BSTYPE reduce production is_acsl_spec -> DECREASES
-- On BREAKS reduce production is_acsl_spec -> DECREASES
-- On BOOLEAN reduce production is_acsl_spec -> DECREASES
-- On BOOL reduce production is_acsl_spec -> DECREASES
-- On BLOCK_LENGTH reduce production is_acsl_spec -> DECREASES
-- On BIMPLIES reduce production is_acsl_spec -> DECREASES
-- On BIFF reduce production is_acsl_spec -> DECREASES
-- On BEHAVIORS reduce production is_acsl_spec -> DECREASES
-- On BEHAVIOR reduce production is_acsl_spec -> DECREASES
-- On BASE_ADDR reduce production is_acsl_spec -> DECREASES
-- On AXIOMATIC reduce production is_acsl_spec -> DECREASES
-- On AXIOM reduce production is_acsl_spec -> DECREASES
-- On AUTOMATIC reduce production is_acsl_spec -> DECREASES
-- On AT reduce production is_acsl_spec -> DECREASES
-- On ASSUMES reduce production is_acsl_spec -> DECREASES
-- On ASSIGNS reduce production is_acsl_spec -> DECREASES
-- On ASSERT reduce production is_acsl_spec -> DECREASES
-- On ARROW reduce production is_acsl_spec -> DECREASES
-- On AND reduce production is_acsl_spec -> DECREASES
-- On AMP reduce production is_acsl_spec -> DECREASES
-- On ALLOCATION reduce production is_acsl_spec -> DECREASES
-- On ALLOCATES reduce production is_acsl_spec -> DECREASES
-- On ALLOCABLE reduce production is_acsl_spec -> DECREASES

State 54:
## Known stack suffix:
## CUSTOM
## LR(1) items:
non_logic_keyword -> CUSTOM . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production non_logic_keyword -> CUSTOM
-- On WITH reduce production non_logic_keyword -> CUSTOM
-- On VOLATILE reduce production non_logic_keyword -> CUSTOM
-- On VOID reduce production non_logic_keyword -> CUSTOM
-- On VARIANT reduce production non_logic_keyword -> CUSTOM
-- On VALID_READ reduce production non_logic_keyword -> CUSTOM
-- On VALID_RANGE reduce production non_logic_keyword -> CUSTOM
-- On VALID_INDEX reduce production non_logic_keyword -> CUSTOM
-- On VALID reduce production non_logic_keyword -> CUSTOM
-- On UNSIGNED reduce production non_logic_keyword -> CUSTOM
-- On UNION reduce production non_logic_keyword -> CUSTOM
-- On UNALLOCATED reduce production non_logic_keyword -> CUSTOM
-- On TYPEOF reduce production non_logic_keyword -> CUSTOM
-- On TYPENAME reduce production non_logic_keyword -> CUSTOM
-- On TYPE reduce production non_logic_keyword -> CUSTOM
-- On TRUE reduce production non_logic_keyword -> CUSTOM
-- On TILDE reduce production non_logic_keyword -> CUSTOM
-- On TERMINATES reduce production non_logic_keyword -> CUSTOM
-- On STRUCT reduce production non_logic_keyword -> CUSTOM
-- On STRING_LITERAL reduce production non_logic_keyword -> CUSTOM
-- On STATIC reduce production non_logic_keyword -> CUSTOM
-- On STAR reduce production non_logic_keyword -> CUSTOM
-- On SLICE reduce production non_logic_keyword -> CUSTOM
-- On SLASH reduce production non_logic_keyword -> CUSTOM
-- On SIZEOF reduce production non_logic_keyword -> CUSTOM
-- On SIGNED reduce production non_logic_keyword -> CUSTOM
-- On SHORT reduce production non_logic_keyword -> CUSTOM
-- On SEPARATED reduce production non_logic_keyword -> CUSTOM
-- On SEMICOLON reduce production non_logic_keyword -> CUSTOM
-- On RSQUARE reduce production non_logic_keyword -> CUSTOM
-- On RPAR reduce production non_logic_keyword -> CUSTOM
-- On RETURNS reduce production non_logic_keyword -> CUSTOM
-- On RESULT reduce production non_logic_keyword -> CUSTOM
-- On REQUIRES reduce production non_logic_keyword -> CUSTOM
-- On REGISTER reduce production non_logic_keyword -> CUSTOM
-- On REAL reduce production non_logic_keyword -> CUSTOM
-- On READS reduce production non_logic_keyword -> CUSTOM
-- On RBRACE reduce production non_logic_keyword -> CUSTOM
-- On QUESTION reduce production non_logic_keyword -> CUSTOM
-- On PREDICATE reduce production non_logic_keyword -> CUSTOM
-- On PRAGMA reduce production non_logic_keyword -> CUSTOM
-- On PLUS reduce production non_logic_keyword -> CUSTOM
-- On PIPE reduce production non_logic_keyword -> CUSTOM
-- On PERCENT reduce production non_logic_keyword -> CUSTOM
-- On OR reduce production non_logic_keyword -> CUSTOM
-- On OLD reduce production non_logic_keyword -> CUSTOM
-- On OFFSET reduce production non_logic_keyword -> CUSTOM
-- On NULL reduce production non_logic_keyword -> CUSTOM
-- On NOTHING reduce production non_logic_keyword -> CUSTOM
-- On NOT reduce production non_logic_keyword -> CUSTOM
-- On NE reduce production non_logic_keyword -> CUSTOM
-- On MODULE reduce production non_logic_keyword -> CUSTOM
-- On MODEL reduce production non_logic_keyword -> CUSTOM
-- On MINUS reduce production non_logic_keyword -> CUSTOM
-- On LTLT reduce production non_logic_keyword -> CUSTOM
-- On LTCOLON reduce production non_logic_keyword -> CUSTOM
-- On LT reduce production non_logic_keyword -> CUSTOM
-- On LSQUARE reduce production non_logic_keyword -> CUSTOM
-- On LPAR reduce production non_logic_keyword -> CUSTOM
-- On LOOP reduce production non_logic_keyword -> CUSTOM
-- On LONG reduce production non_logic_keyword -> CUSTOM
-- On LOGIC reduce production non_logic_keyword -> CUSTOM
-- On LET reduce production non_logic_keyword -> CUSTOM
-- On LEMMA reduce production non_logic_keyword -> CUSTOM
-- On LE reduce production non_logic_keyword -> CUSTOM
-- On LBRACE reduce production non_logic_keyword -> CUSTOM
-- On LAMBDA reduce production non_logic_keyword -> CUSTOM
-- On LABEL reduce production non_logic_keyword -> CUSTOM
-- On INVARIANT reduce production non_logic_keyword -> CUSTOM
-- On INTER reduce production non_logic_keyword -> CUSTOM
-- On INTEGER reduce production non_logic_keyword -> CUSTOM
-- On INT reduce production non_logic_keyword -> CUSTOM
-- On INITIALIZED reduce production non_logic_keyword -> CUSTOM
-- On INDUCTIVE reduce production non_logic_keyword -> CUSTOM
-- On INCLUDE reduce production non_logic_keyword -> CUSTOM
-- On IMPLIES reduce production non_logic_keyword -> CUSTOM
-- On IMPACT reduce production non_logic_keyword -> CUSTOM
-- On IFF reduce production non_logic_keyword -> CUSTOM
-- On IF reduce production non_logic_keyword -> CUSTOM
-- On IDENTIFIER reduce production non_logic_keyword -> CUSTOM
-- On HATHAT reduce production non_logic_keyword -> CUSTOM
-- On HAT reduce production non_logic_keyword -> CUSTOM
-- On GTGT reduce production non_logic_keyword -> CUSTOM
-- On GT reduce production non_logic_keyword -> CUSTOM
-- On GLOBAL reduce production non_logic_keyword -> CUSTOM
-- On GHOST reduce production non_logic_keyword -> CUSTOM
-- On GE reduce production non_logic_keyword -> CUSTOM
-- On FUNCTION reduce production non_logic_keyword -> CUSTOM
-- On FROM reduce production non_logic_keyword -> CUSTOM
-- On FRESH reduce production non_logic_keyword -> CUSTOM
-- On FREES reduce production non_logic_keyword -> CUSTOM
-- On FREEABLE reduce production non_logic_keyword -> CUSTOM
-- On FORALL reduce production non_logic_keyword -> CUSTOM
-- On FOR reduce production non_logic_keyword -> CUSTOM
-- On FLOAT reduce production non_logic_keyword -> CUSTOM
-- On FALSE reduce production non_logic_keyword -> CUSTOM
-- On EXT_LET reduce production non_logic_keyword -> CUSTOM
-- On EXT_AT reduce production non_logic_keyword -> CUSTOM
-- On EXITS reduce production non_logic_keyword -> CUSTOM
-- On EXISTS reduce production non_logic_keyword -> CUSTOM
-- On EQUAL reduce production non_logic_keyword -> CUSTOM
-- On EQ reduce production non_logic_keyword -> CUSTOM
-- On EOF reduce production non_logic_keyword -> CUSTOM
-- On ENUM reduce production non_logic_keyword -> CUSTOM
-- On ENSURES reduce production non_logic_keyword -> CUSTOM
-- On EMPTY reduce production non_logic_keyword -> CUSTOM
-- On ELSE reduce production non_logic_keyword -> CUSTOM
-- On DYNAMIC reduce production non_logic_keyword -> CUSTOM
-- On DOUBLE reduce production non_logic_keyword -> CUSTOM
-- On DOTDOTDOT reduce production non_logic_keyword -> CUSTOM
-- On DOTDOT reduce production non_logic_keyword -> CUSTOM
-- On DOT reduce production non_logic_keyword -> CUSTOM
-- On DOLLAR reduce production non_logic_keyword -> CUSTOM
-- On DISJOINT reduce production non_logic_keyword -> CUSTOM
-- On DECREASES reduce production non_logic_keyword -> CUSTOM
-- On DANGLING reduce production non_logic_keyword -> CUSTOM
-- On CUSTOM reduce production non_logic_keyword -> CUSTOM
-- On CONTRACT reduce production non_logic_keyword -> CUSTOM
-- On CONTINUES reduce production non_logic_keyword -> CUSTOM
-- On CONSTANT10 reduce production non_logic_keyword -> CUSTOM
-- On CONSTANT reduce production non_logic_keyword -> CUSTOM
-- On CONST reduce production non_logic_keyword -> CUSTOM
-- On COMPLETE reduce production non_logic_keyword -> CUSTOM
-- On COMMA reduce production non_logic_keyword -> CUSTOM
-- On COLONGT reduce production non_logic_keyword -> CUSTOM
-- On COLONCOLON reduce production non_logic_keyword -> CUSTOM
-- On COLON2 reduce production non_logic_keyword -> CUSTOM
-- On COLON reduce production non_logic_keyword -> CUSTOM
-- On CHAR reduce production non_logic_keyword -> CUSTOM
-- On CASE reduce production non_logic_keyword -> CUSTOM
-- On BSUNION reduce production non_logic_keyword -> CUSTOM
-- On BSTYPE reduce production non_logic_keyword -> CUSTOM
-- On BREAKS reduce production non_logic_keyword -> CUSTOM
-- On BOOLEAN reduce production non_logic_keyword -> CUSTOM
-- On BOOL reduce production non_logic_keyword -> CUSTOM
-- On BLOCK_LENGTH reduce production non_logic_keyword -> CUSTOM
-- On BIMPLIES reduce production non_logic_keyword -> CUSTOM
-- On BIFF reduce production non_logic_keyword -> CUSTOM
-- On BEHAVIORS reduce production non_logic_keyword -> CUSTOM
-- On BEHAVIOR reduce production non_logic_keyword -> CUSTOM
-- On BASE_ADDR reduce production non_logic_keyword -> CUSTOM
-- On AXIOMATIC reduce production non_logic_keyword -> CUSTOM
-- On AXIOM reduce production non_logic_keyword -> CUSTOM
-- On AUTOMATIC reduce production non_logic_keyword -> CUSTOM
-- On AT reduce production non_logic_keyword -> CUSTOM
-- On ASSUMES reduce production non_logic_keyword -> CUSTOM
-- On ASSIGNS reduce production non_logic_keyword -> CUSTOM
-- On ASSERT reduce production non_logic_keyword -> CUSTOM
-- On ARROW reduce production non_logic_keyword -> CUSTOM
-- On AND reduce production non_logic_keyword -> CUSTOM
-- On AMP reduce production non_logic_keyword -> CUSTOM
-- On ALLOCATION reduce production non_logic_keyword -> CUSTOM
-- On ALLOCATES reduce production non_logic_keyword -> CUSTOM
-- On ALLOCABLE reduce production non_logic_keyword -> CUSTOM

State 55:
## Known stack suffix:
## CONTRACT
## LR(1) items:
is_ext_spec -> CONTRACT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_ext_spec -> CONTRACT
-- On WITH reduce production is_ext_spec -> CONTRACT
-- On VOLATILE reduce production is_ext_spec -> CONTRACT
-- On VOID reduce production is_ext_spec -> CONTRACT
-- On VARIANT reduce production is_ext_spec -> CONTRACT
-- On VALID_READ reduce production is_ext_spec -> CONTRACT
-- On VALID_RANGE reduce production is_ext_spec -> CONTRACT
-- On VALID_INDEX reduce production is_ext_spec -> CONTRACT
-- On VALID reduce production is_ext_spec -> CONTRACT
-- On UNSIGNED reduce production is_ext_spec -> CONTRACT
-- On UNION reduce production is_ext_spec -> CONTRACT
-- On UNALLOCATED reduce production is_ext_spec -> CONTRACT
-- On TYPEOF reduce production is_ext_spec -> CONTRACT
-- On TYPENAME reduce production is_ext_spec -> CONTRACT
-- On TYPE reduce production is_ext_spec -> CONTRACT
-- On TRUE reduce production is_ext_spec -> CONTRACT
-- On TILDE reduce production is_ext_spec -> CONTRACT
-- On TERMINATES reduce production is_ext_spec -> CONTRACT
-- On STRUCT reduce production is_ext_spec -> CONTRACT
-- On STRING_LITERAL reduce production is_ext_spec -> CONTRACT
-- On STATIC reduce production is_ext_spec -> CONTRACT
-- On STAR reduce production is_ext_spec -> CONTRACT
-- On SLICE reduce production is_ext_spec -> CONTRACT
-- On SLASH reduce production is_ext_spec -> CONTRACT
-- On SIZEOF reduce production is_ext_spec -> CONTRACT
-- On SIGNED reduce production is_ext_spec -> CONTRACT
-- On SHORT reduce production is_ext_spec -> CONTRACT
-- On SEPARATED reduce production is_ext_spec -> CONTRACT
-- On SEMICOLON reduce production is_ext_spec -> CONTRACT
-- On RSQUARE reduce production is_ext_spec -> CONTRACT
-- On RPAR reduce production is_ext_spec -> CONTRACT
-- On RETURNS reduce production is_ext_spec -> CONTRACT
-- On RESULT reduce production is_ext_spec -> CONTRACT
-- On REQUIRES reduce production is_ext_spec -> CONTRACT
-- On REGISTER reduce production is_ext_spec -> CONTRACT
-- On REAL reduce production is_ext_spec -> CONTRACT
-- On READS reduce production is_ext_spec -> CONTRACT
-- On RBRACE reduce production is_ext_spec -> CONTRACT
-- On QUESTION reduce production is_ext_spec -> CONTRACT
-- On PREDICATE reduce production is_ext_spec -> CONTRACT
-- On PRAGMA reduce production is_ext_spec -> CONTRACT
-- On PLUS reduce production is_ext_spec -> CONTRACT
-- On PIPE reduce production is_ext_spec -> CONTRACT
-- On PERCENT reduce production is_ext_spec -> CONTRACT
-- On OR reduce production is_ext_spec -> CONTRACT
-- On OLD reduce production is_ext_spec -> CONTRACT
-- On OFFSET reduce production is_ext_spec -> CONTRACT
-- On NULL reduce production is_ext_spec -> CONTRACT
-- On NOTHING reduce production is_ext_spec -> CONTRACT
-- On NOT reduce production is_ext_spec -> CONTRACT
-- On NE reduce production is_ext_spec -> CONTRACT
-- On MODULE reduce production is_ext_spec -> CONTRACT
-- On MODEL reduce production is_ext_spec -> CONTRACT
-- On MINUS reduce production is_ext_spec -> CONTRACT
-- On LTLT reduce production is_ext_spec -> CONTRACT
-- On LTCOLON reduce production is_ext_spec -> CONTRACT
-- On LT reduce production is_ext_spec -> CONTRACT
-- On LSQUARE reduce production is_ext_spec -> CONTRACT
-- On LPAR reduce production is_ext_spec -> CONTRACT
-- On LOOP reduce production is_ext_spec -> CONTRACT
-- On LONG reduce production is_ext_spec -> CONTRACT
-- On LOGIC reduce production is_ext_spec -> CONTRACT
-- On LET reduce production is_ext_spec -> CONTRACT
-- On LEMMA reduce production is_ext_spec -> CONTRACT
-- On LE reduce production is_ext_spec -> CONTRACT
-- On LBRACE reduce production is_ext_spec -> CONTRACT
-- On LAMBDA reduce production is_ext_spec -> CONTRACT
-- On LABEL reduce production is_ext_spec -> CONTRACT
-- On INVARIANT reduce production is_ext_spec -> CONTRACT
-- On INTER reduce production is_ext_spec -> CONTRACT
-- On INTEGER reduce production is_ext_spec -> CONTRACT
-- On INT reduce production is_ext_spec -> CONTRACT
-- On INITIALIZED reduce production is_ext_spec -> CONTRACT
-- On INDUCTIVE reduce production is_ext_spec -> CONTRACT
-- On INCLUDE reduce production is_ext_spec -> CONTRACT
-- On IMPLIES reduce production is_ext_spec -> CONTRACT
-- On IMPACT reduce production is_ext_spec -> CONTRACT
-- On IFF reduce production is_ext_spec -> CONTRACT
-- On IF reduce production is_ext_spec -> CONTRACT
-- On IDENTIFIER reduce production is_ext_spec -> CONTRACT
-- On HATHAT reduce production is_ext_spec -> CONTRACT
-- On HAT reduce production is_ext_spec -> CONTRACT
-- On GTGT reduce production is_ext_spec -> CONTRACT
-- On GT reduce production is_ext_spec -> CONTRACT
-- On GLOBAL reduce production is_ext_spec -> CONTRACT
-- On GHOST reduce production is_ext_spec -> CONTRACT
-- On GE reduce production is_ext_spec -> CONTRACT
-- On FUNCTION reduce production is_ext_spec -> CONTRACT
-- On FROM reduce production is_ext_spec -> CONTRACT
-- On FRESH reduce production is_ext_spec -> CONTRACT
-- On FREES reduce production is_ext_spec -> CONTRACT
-- On FREEABLE reduce production is_ext_spec -> CONTRACT
-- On FORALL reduce production is_ext_spec -> CONTRACT
-- On FOR reduce production is_ext_spec -> CONTRACT
-- On FLOAT reduce production is_ext_spec -> CONTRACT
-- On FALSE reduce production is_ext_spec -> CONTRACT
-- On EXT_LET reduce production is_ext_spec -> CONTRACT
-- On EXT_AT reduce production is_ext_spec -> CONTRACT
-- On EXITS reduce production is_ext_spec -> CONTRACT
-- On EXISTS reduce production is_ext_spec -> CONTRACT
-- On EQUAL reduce production is_ext_spec -> CONTRACT
-- On EQ reduce production is_ext_spec -> CONTRACT
-- On EOF reduce production is_ext_spec -> CONTRACT
-- On ENUM reduce production is_ext_spec -> CONTRACT
-- On ENSURES reduce production is_ext_spec -> CONTRACT
-- On EMPTY reduce production is_ext_spec -> CONTRACT
-- On ELSE reduce production is_ext_spec -> CONTRACT
-- On DYNAMIC reduce production is_ext_spec -> CONTRACT
-- On DOUBLE reduce production is_ext_spec -> CONTRACT
-- On DOTDOTDOT reduce production is_ext_spec -> CONTRACT
-- On DOTDOT reduce production is_ext_spec -> CONTRACT
-- On DOT reduce production is_ext_spec -> CONTRACT
-- On DOLLAR reduce production is_ext_spec -> CONTRACT
-- On DISJOINT reduce production is_ext_spec -> CONTRACT
-- On DECREASES reduce production is_ext_spec -> CONTRACT
-- On DANGLING reduce production is_ext_spec -> CONTRACT
-- On CUSTOM reduce production is_ext_spec -> CONTRACT
-- On CONTRACT reduce production is_ext_spec -> CONTRACT
-- On CONTINUES reduce production is_ext_spec -> CONTRACT
-- On CONSTANT10 reduce production is_ext_spec -> CONTRACT
-- On CONSTANT reduce production is_ext_spec -> CONTRACT
-- On CONST reduce production is_ext_spec -> CONTRACT
-- On COMPLETE reduce production is_ext_spec -> CONTRACT
-- On COMMA reduce production is_ext_spec -> CONTRACT
-- On COLONGT reduce production is_ext_spec -> CONTRACT
-- On COLONCOLON reduce production is_ext_spec -> CONTRACT
-- On COLON2 reduce production is_ext_spec -> CONTRACT
-- On COLON reduce production is_ext_spec -> CONTRACT
-- On CHAR reduce production is_ext_spec -> CONTRACT
-- On CASE reduce production is_ext_spec -> CONTRACT
-- On BSUNION reduce production is_ext_spec -> CONTRACT
-- On BSTYPE reduce production is_ext_spec -> CONTRACT
-- On BREAKS reduce production is_ext_spec -> CONTRACT
-- On BOOLEAN reduce production is_ext_spec -> CONTRACT
-- On BOOL reduce production is_ext_spec -> CONTRACT
-- On BLOCK_LENGTH reduce production is_ext_spec -> CONTRACT
-- On BIMPLIES reduce production is_ext_spec -> CONTRACT
-- On BIFF reduce production is_ext_spec -> CONTRACT
-- On BEHAVIORS reduce production is_ext_spec -> CONTRACT
-- On BEHAVIOR reduce production is_ext_spec -> CONTRACT
-- On BASE_ADDR reduce production is_ext_spec -> CONTRACT
-- On AXIOMATIC reduce production is_ext_spec -> CONTRACT
-- On AXIOM reduce production is_ext_spec -> CONTRACT
-- On AUTOMATIC reduce production is_ext_spec -> CONTRACT
-- On AT reduce production is_ext_spec -> CONTRACT
-- On ASSUMES reduce production is_ext_spec -> CONTRACT
-- On ASSIGNS reduce production is_ext_spec -> CONTRACT
-- On ASSERT reduce production is_ext_spec -> CONTRACT
-- On ARROW reduce production is_ext_spec -> CONTRACT
-- On AND reduce production is_ext_spec -> CONTRACT
-- On AMP reduce production is_ext_spec -> CONTRACT
-- On ALLOCATION reduce production is_ext_spec -> CONTRACT
-- On ALLOCATES reduce production is_ext_spec -> CONTRACT
-- On ALLOCABLE reduce production is_ext_spec -> CONTRACT

State 56:
## Known stack suffix:
## CONTINUES
## LR(1) items:
post_cond -> CONTINUES . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production post_cond -> CONTINUES
-- On WITH reduce production post_cond -> CONTINUES
-- On VOLATILE reduce production post_cond -> CONTINUES
-- On VOID reduce production post_cond -> CONTINUES
-- On VARIANT reduce production post_cond -> CONTINUES
-- On VALID_READ reduce production post_cond -> CONTINUES
-- On VALID_RANGE reduce production post_cond -> CONTINUES
-- On VALID_INDEX reduce production post_cond -> CONTINUES
-- On VALID reduce production post_cond -> CONTINUES
-- On UNSIGNED reduce production post_cond -> CONTINUES
-- On UNION reduce production post_cond -> CONTINUES
-- On UNALLOCATED reduce production post_cond -> CONTINUES
-- On TYPEOF reduce production post_cond -> CONTINUES
-- On TYPENAME reduce production post_cond -> CONTINUES
-- On TYPE reduce production post_cond -> CONTINUES
-- On TRUE reduce production post_cond -> CONTINUES
-- On TILDE reduce production post_cond -> CONTINUES
-- On TERMINATES reduce production post_cond -> CONTINUES
-- On STRUCT reduce production post_cond -> CONTINUES
-- On STRING_LITERAL reduce production post_cond -> CONTINUES
-- On STATIC reduce production post_cond -> CONTINUES
-- On STAR reduce production post_cond -> CONTINUES
-- On SLICE reduce production post_cond -> CONTINUES
-- On SLASH reduce production post_cond -> CONTINUES
-- On SIZEOF reduce production post_cond -> CONTINUES
-- On SIGNED reduce production post_cond -> CONTINUES
-- On SHORT reduce production post_cond -> CONTINUES
-- On SEPARATED reduce production post_cond -> CONTINUES
-- On SEMICOLON reduce production post_cond -> CONTINUES
-- On RSQUARE reduce production post_cond -> CONTINUES
-- On RPAR reduce production post_cond -> CONTINUES
-- On RETURNS reduce production post_cond -> CONTINUES
-- On RESULT reduce production post_cond -> CONTINUES
-- On REQUIRES reduce production post_cond -> CONTINUES
-- On REGISTER reduce production post_cond -> CONTINUES
-- On REAL reduce production post_cond -> CONTINUES
-- On READS reduce production post_cond -> CONTINUES
-- On RBRACE reduce production post_cond -> CONTINUES
-- On QUESTION reduce production post_cond -> CONTINUES
-- On PREDICATE reduce production post_cond -> CONTINUES
-- On PRAGMA reduce production post_cond -> CONTINUES
-- On PLUS reduce production post_cond -> CONTINUES
-- On PIPE reduce production post_cond -> CONTINUES
-- On PERCENT reduce production post_cond -> CONTINUES
-- On OR reduce production post_cond -> CONTINUES
-- On OLD reduce production post_cond -> CONTINUES
-- On OFFSET reduce production post_cond -> CONTINUES
-- On NULL reduce production post_cond -> CONTINUES
-- On NOTHING reduce production post_cond -> CONTINUES
-- On NOT reduce production post_cond -> CONTINUES
-- On NE reduce production post_cond -> CONTINUES
-- On MODULE reduce production post_cond -> CONTINUES
-- On MODEL reduce production post_cond -> CONTINUES
-- On MINUS reduce production post_cond -> CONTINUES
-- On LTLT reduce production post_cond -> CONTINUES
-- On LTCOLON reduce production post_cond -> CONTINUES
-- On LT reduce production post_cond -> CONTINUES
-- On LSQUARE reduce production post_cond -> CONTINUES
-- On LPAR reduce production post_cond -> CONTINUES
-- On LOOP reduce production post_cond -> CONTINUES
-- On LONG reduce production post_cond -> CONTINUES
-- On LOGIC reduce production post_cond -> CONTINUES
-- On LET reduce production post_cond -> CONTINUES
-- On LEMMA reduce production post_cond -> CONTINUES
-- On LE reduce production post_cond -> CONTINUES
-- On LBRACE reduce production post_cond -> CONTINUES
-- On LAMBDA reduce production post_cond -> CONTINUES
-- On LABEL reduce production post_cond -> CONTINUES
-- On INVARIANT reduce production post_cond -> CONTINUES
-- On INTER reduce production post_cond -> CONTINUES
-- On INTEGER reduce production post_cond -> CONTINUES
-- On INT reduce production post_cond -> CONTINUES
-- On INITIALIZED reduce production post_cond -> CONTINUES
-- On INDUCTIVE reduce production post_cond -> CONTINUES
-- On INCLUDE reduce production post_cond -> CONTINUES
-- On IMPLIES reduce production post_cond -> CONTINUES
-- On IMPACT reduce production post_cond -> CONTINUES
-- On IFF reduce production post_cond -> CONTINUES
-- On IF reduce production post_cond -> CONTINUES
-- On IDENTIFIER reduce production post_cond -> CONTINUES
-- On HATHAT reduce production post_cond -> CONTINUES
-- On HAT reduce production post_cond -> CONTINUES
-- On GTGT reduce production post_cond -> CONTINUES
-- On GT reduce production post_cond -> CONTINUES
-- On GLOBAL reduce production post_cond -> CONTINUES
-- On GHOST reduce production post_cond -> CONTINUES
-- On GE reduce production post_cond -> CONTINUES
-- On FUNCTION reduce production post_cond -> CONTINUES
-- On FROM reduce production post_cond -> CONTINUES
-- On FRESH reduce production post_cond -> CONTINUES
-- On FREES reduce production post_cond -> CONTINUES
-- On FREEABLE reduce production post_cond -> CONTINUES
-- On FORALL reduce production post_cond -> CONTINUES
-- On FOR reduce production post_cond -> CONTINUES
-- On FLOAT reduce production post_cond -> CONTINUES
-- On FALSE reduce production post_cond -> CONTINUES
-- On EXT_LET reduce production post_cond -> CONTINUES
-- On EXT_AT reduce production post_cond -> CONTINUES
-- On EXITS reduce production post_cond -> CONTINUES
-- On EXISTS reduce production post_cond -> CONTINUES
-- On EQUAL reduce production post_cond -> CONTINUES
-- On EQ reduce production post_cond -> CONTINUES
-- On EOF reduce production post_cond -> CONTINUES
-- On ENUM reduce production post_cond -> CONTINUES
-- On ENSURES reduce production post_cond -> CONTINUES
-- On EMPTY reduce production post_cond -> CONTINUES
-- On ELSE reduce production post_cond -> CONTINUES
-- On DYNAMIC reduce production post_cond -> CONTINUES
-- On DOUBLE reduce production post_cond -> CONTINUES
-- On DOTDOTDOT reduce production post_cond -> CONTINUES
-- On DOTDOT reduce production post_cond -> CONTINUES
-- On DOT reduce production post_cond -> CONTINUES
-- On DOLLAR reduce production post_cond -> CONTINUES
-- On DISJOINT reduce production post_cond -> CONTINUES
-- On DECREASES reduce production post_cond -> CONTINUES
-- On DANGLING reduce production post_cond -> CONTINUES
-- On CUSTOM reduce production post_cond -> CONTINUES
-- On CONTRACT reduce production post_cond -> CONTINUES
-- On CONTINUES reduce production post_cond -> CONTINUES
-- On CONSTANT10 reduce production post_cond -> CONTINUES
-- On CONSTANT reduce production post_cond -> CONTINUES
-- On CONST reduce production post_cond -> CONTINUES
-- On COMPLETE reduce production post_cond -> CONTINUES
-- On COMMA reduce production post_cond -> CONTINUES
-- On COLONGT reduce production post_cond -> CONTINUES
-- On COLONCOLON reduce production post_cond -> CONTINUES
-- On COLON2 reduce production post_cond -> CONTINUES
-- On COLON reduce production post_cond -> CONTINUES
-- On CHAR reduce production post_cond -> CONTINUES
-- On CASE reduce production post_cond -> CONTINUES
-- On BSUNION reduce production post_cond -> CONTINUES
-- On BSTYPE reduce production post_cond -> CONTINUES
-- On BREAKS reduce production post_cond -> CONTINUES
-- On BOOLEAN reduce production post_cond -> CONTINUES
-- On BOOL reduce production post_cond -> CONTINUES
-- On BLOCK_LENGTH reduce production post_cond -> CONTINUES
-- On BIMPLIES reduce production post_cond -> CONTINUES
-- On BIFF reduce production post_cond -> CONTINUES
-- On BEHAVIORS reduce production post_cond -> CONTINUES
-- On BEHAVIOR reduce production post_cond -> CONTINUES
-- On BASE_ADDR reduce production post_cond -> CONTINUES
-- On AXIOMATIC reduce production post_cond -> CONTINUES
-- On AXIOM reduce production post_cond -> CONTINUES
-- On AUTOMATIC reduce production post_cond -> CONTINUES
-- On AT reduce production post_cond -> CONTINUES
-- On ASSUMES reduce production post_cond -> CONTINUES
-- On ASSIGNS reduce production post_cond -> CONTINUES
-- On ASSERT reduce production post_cond -> CONTINUES
-- On ARROW reduce production post_cond -> CONTINUES
-- On AND reduce production post_cond -> CONTINUES
-- On AMP reduce production post_cond -> CONTINUES
-- On ALLOCATION reduce production post_cond -> CONTINUES
-- On ALLOCATES reduce production post_cond -> CONTINUES
-- On ALLOCABLE reduce production post_cond -> CONTINUES

State 57:
## Known stack suffix:
## CONST
## LR(1) items:
c_keyword -> CONST . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> CONST
-- On WITH reduce production c_keyword -> CONST
-- On VOLATILE reduce production c_keyword -> CONST
-- On VOID reduce production c_keyword -> CONST
-- On VARIANT reduce production c_keyword -> CONST
-- On VALID_READ reduce production c_keyword -> CONST
-- On VALID_RANGE reduce production c_keyword -> CONST
-- On VALID_INDEX reduce production c_keyword -> CONST
-- On VALID reduce production c_keyword -> CONST
-- On UNSIGNED reduce production c_keyword -> CONST
-- On UNION reduce production c_keyword -> CONST
-- On UNALLOCATED reduce production c_keyword -> CONST
-- On TYPEOF reduce production c_keyword -> CONST
-- On TYPENAME reduce production c_keyword -> CONST
-- On TYPE reduce production c_keyword -> CONST
-- On TRUE reduce production c_keyword -> CONST
-- On TILDE reduce production c_keyword -> CONST
-- On TERMINATES reduce production c_keyword -> CONST
-- On STRUCT reduce production c_keyword -> CONST
-- On STRING_LITERAL reduce production c_keyword -> CONST
-- On STATIC reduce production c_keyword -> CONST
-- On STAR reduce production c_keyword -> CONST
-- On SLICE reduce production c_keyword -> CONST
-- On SLASH reduce production c_keyword -> CONST
-- On SIZEOF reduce production c_keyword -> CONST
-- On SIGNED reduce production c_keyword -> CONST
-- On SHORT reduce production c_keyword -> CONST
-- On SEPARATED reduce production c_keyword -> CONST
-- On SEMICOLON reduce production c_keyword -> CONST
-- On RSQUARE reduce production c_keyword -> CONST
-- On RPAR reduce production c_keyword -> CONST
-- On RETURNS reduce production c_keyword -> CONST
-- On RESULT reduce production c_keyword -> CONST
-- On REQUIRES reduce production c_keyword -> CONST
-- On REGISTER reduce production c_keyword -> CONST
-- On REAL reduce production c_keyword -> CONST
-- On READS reduce production c_keyword -> CONST
-- On RBRACE reduce production c_keyword -> CONST
-- On QUESTION reduce production c_keyword -> CONST
-- On PREDICATE reduce production c_keyword -> CONST
-- On PRAGMA reduce production c_keyword -> CONST
-- On PLUS reduce production c_keyword -> CONST
-- On PIPE reduce production c_keyword -> CONST
-- On PERCENT reduce production c_keyword -> CONST
-- On OR reduce production c_keyword -> CONST
-- On OLD reduce production c_keyword -> CONST
-- On OFFSET reduce production c_keyword -> CONST
-- On NULL reduce production c_keyword -> CONST
-- On NOTHING reduce production c_keyword -> CONST
-- On NOT reduce production c_keyword -> CONST
-- On NE reduce production c_keyword -> CONST
-- On MODULE reduce production c_keyword -> CONST
-- On MODEL reduce production c_keyword -> CONST
-- On MINUS reduce production c_keyword -> CONST
-- On LTLT reduce production c_keyword -> CONST
-- On LTCOLON reduce production c_keyword -> CONST
-- On LT reduce production c_keyword -> CONST
-- On LSQUARE reduce production c_keyword -> CONST
-- On LPAR reduce production c_keyword -> CONST
-- On LOOP reduce production c_keyword -> CONST
-- On LONG reduce production c_keyword -> CONST
-- On LOGIC reduce production c_keyword -> CONST
-- On LET reduce production c_keyword -> CONST
-- On LEMMA reduce production c_keyword -> CONST
-- On LE reduce production c_keyword -> CONST
-- On LBRACE reduce production c_keyword -> CONST
-- On LAMBDA reduce production c_keyword -> CONST
-- On LABEL reduce production c_keyword -> CONST
-- On INVARIANT reduce production c_keyword -> CONST
-- On INTER reduce production c_keyword -> CONST
-- On INTEGER reduce production c_keyword -> CONST
-- On INT reduce production c_keyword -> CONST
-- On INITIALIZED reduce production c_keyword -> CONST
-- On INDUCTIVE reduce production c_keyword -> CONST
-- On INCLUDE reduce production c_keyword -> CONST
-- On IMPLIES reduce production c_keyword -> CONST
-- On IMPACT reduce production c_keyword -> CONST
-- On IFF reduce production c_keyword -> CONST
-- On IF reduce production c_keyword -> CONST
-- On IDENTIFIER reduce production c_keyword -> CONST
-- On HATHAT reduce production c_keyword -> CONST
-- On HAT reduce production c_keyword -> CONST
-- On GTGT reduce production c_keyword -> CONST
-- On GT reduce production c_keyword -> CONST
-- On GLOBAL reduce production c_keyword -> CONST
-- On GHOST reduce production c_keyword -> CONST
-- On GE reduce production c_keyword -> CONST
-- On FUNCTION reduce production c_keyword -> CONST
-- On FROM reduce production c_keyword -> CONST
-- On FRESH reduce production c_keyword -> CONST
-- On FREES reduce production c_keyword -> CONST
-- On FREEABLE reduce production c_keyword -> CONST
-- On FORALL reduce production c_keyword -> CONST
-- On FOR reduce production c_keyword -> CONST
-- On FLOAT reduce production c_keyword -> CONST
-- On FALSE reduce production c_keyword -> CONST
-- On EXT_LET reduce production c_keyword -> CONST
-- On EXT_AT reduce production c_keyword -> CONST
-- On EXITS reduce production c_keyword -> CONST
-- On EXISTS reduce production c_keyword -> CONST
-- On EQUAL reduce production c_keyword -> CONST
-- On EQ reduce production c_keyword -> CONST
-- On EOF reduce production c_keyword -> CONST
-- On ENUM reduce production c_keyword -> CONST
-- On ENSURES reduce production c_keyword -> CONST
-- On EMPTY reduce production c_keyword -> CONST
-- On ELSE reduce production c_keyword -> CONST
-- On DYNAMIC reduce production c_keyword -> CONST
-- On DOUBLE reduce production c_keyword -> CONST
-- On DOTDOTDOT reduce production c_keyword -> CONST
-- On DOTDOT reduce production c_keyword -> CONST
-- On DOT reduce production c_keyword -> CONST
-- On DOLLAR reduce production c_keyword -> CONST
-- On DISJOINT reduce production c_keyword -> CONST
-- On DECREASES reduce production c_keyword -> CONST
-- On DANGLING reduce production c_keyword -> CONST
-- On CUSTOM reduce production c_keyword -> CONST
-- On CONTRACT reduce production c_keyword -> CONST
-- On CONTINUES reduce production c_keyword -> CONST
-- On CONSTANT10 reduce production c_keyword -> CONST
-- On CONSTANT reduce production c_keyword -> CONST
-- On CONST reduce production c_keyword -> CONST
-- On COMPLETE reduce production c_keyword -> CONST
-- On COMMA reduce production c_keyword -> CONST
-- On COLONGT reduce production c_keyword -> CONST
-- On COLONCOLON reduce production c_keyword -> CONST
-- On COLON2 reduce production c_keyword -> CONST
-- On COLON reduce production c_keyword -> CONST
-- On CHAR reduce production c_keyword -> CONST
-- On CASE reduce production c_keyword -> CONST
-- On BSUNION reduce production c_keyword -> CONST
-- On BSTYPE reduce production c_keyword -> CONST
-- On BREAKS reduce production c_keyword -> CONST
-- On BOOLEAN reduce production c_keyword -> CONST
-- On BOOL reduce production c_keyword -> CONST
-- On BLOCK_LENGTH reduce production c_keyword -> CONST
-- On BIMPLIES reduce production c_keyword -> CONST
-- On BIFF reduce production c_keyword -> CONST
-- On BEHAVIORS reduce production c_keyword -> CONST
-- On BEHAVIOR reduce production c_keyword -> CONST
-- On BASE_ADDR reduce production c_keyword -> CONST
-- On AXIOMATIC reduce production c_keyword -> CONST
-- On AXIOM reduce production c_keyword -> CONST
-- On AUTOMATIC reduce production c_keyword -> CONST
-- On AT reduce production c_keyword -> CONST
-- On ASSUMES reduce production c_keyword -> CONST
-- On ASSIGNS reduce production c_keyword -> CONST
-- On ASSERT reduce production c_keyword -> CONST
-- On ARROW reduce production c_keyword -> CONST
-- On AND reduce production c_keyword -> CONST
-- On AMP reduce production c_keyword -> CONST
-- On ALLOCATION reduce production c_keyword -> CONST
-- On ALLOCATES reduce production c_keyword -> CONST
-- On ALLOCABLE reduce production c_keyword -> CONST

State 58:
## Known stack suffix:
## COMPLETE
## LR(1) items:
is_acsl_spec -> COMPLETE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_spec -> COMPLETE
-- On WITH reduce production is_acsl_spec -> COMPLETE
-- On VOLATILE reduce production is_acsl_spec -> COMPLETE
-- On VOID reduce production is_acsl_spec -> COMPLETE
-- On VARIANT reduce production is_acsl_spec -> COMPLETE
-- On VALID_READ reduce production is_acsl_spec -> COMPLETE
-- On VALID_RANGE reduce production is_acsl_spec -> COMPLETE
-- On VALID_INDEX reduce production is_acsl_spec -> COMPLETE
-- On VALID reduce production is_acsl_spec -> COMPLETE
-- On UNSIGNED reduce production is_acsl_spec -> COMPLETE
-- On UNION reduce production is_acsl_spec -> COMPLETE
-- On UNALLOCATED reduce production is_acsl_spec -> COMPLETE
-- On TYPEOF reduce production is_acsl_spec -> COMPLETE
-- On TYPENAME reduce production is_acsl_spec -> COMPLETE
-- On TYPE reduce production is_acsl_spec -> COMPLETE
-- On TRUE reduce production is_acsl_spec -> COMPLETE
-- On TILDE reduce production is_acsl_spec -> COMPLETE
-- On TERMINATES reduce production is_acsl_spec -> COMPLETE
-- On STRUCT reduce production is_acsl_spec -> COMPLETE
-- On STRING_LITERAL reduce production is_acsl_spec -> COMPLETE
-- On STATIC reduce production is_acsl_spec -> COMPLETE
-- On STAR reduce production is_acsl_spec -> COMPLETE
-- On SLICE reduce production is_acsl_spec -> COMPLETE
-- On SLASH reduce production is_acsl_spec -> COMPLETE
-- On SIZEOF reduce production is_acsl_spec -> COMPLETE
-- On SIGNED reduce production is_acsl_spec -> COMPLETE
-- On SHORT reduce production is_acsl_spec -> COMPLETE
-- On SEPARATED reduce production is_acsl_spec -> COMPLETE
-- On SEMICOLON reduce production is_acsl_spec -> COMPLETE
-- On RSQUARE reduce production is_acsl_spec -> COMPLETE
-- On RPAR reduce production is_acsl_spec -> COMPLETE
-- On RETURNS reduce production is_acsl_spec -> COMPLETE
-- On RESULT reduce production is_acsl_spec -> COMPLETE
-- On REQUIRES reduce production is_acsl_spec -> COMPLETE
-- On REGISTER reduce production is_acsl_spec -> COMPLETE
-- On REAL reduce production is_acsl_spec -> COMPLETE
-- On READS reduce production is_acsl_spec -> COMPLETE
-- On RBRACE reduce production is_acsl_spec -> COMPLETE
-- On QUESTION reduce production is_acsl_spec -> COMPLETE
-- On PREDICATE reduce production is_acsl_spec -> COMPLETE
-- On PRAGMA reduce production is_acsl_spec -> COMPLETE
-- On PLUS reduce production is_acsl_spec -> COMPLETE
-- On PIPE reduce production is_acsl_spec -> COMPLETE
-- On PERCENT reduce production is_acsl_spec -> COMPLETE
-- On OR reduce production is_acsl_spec -> COMPLETE
-- On OLD reduce production is_acsl_spec -> COMPLETE
-- On OFFSET reduce production is_acsl_spec -> COMPLETE
-- On NULL reduce production is_acsl_spec -> COMPLETE
-- On NOTHING reduce production is_acsl_spec -> COMPLETE
-- On NOT reduce production is_acsl_spec -> COMPLETE
-- On NE reduce production is_acsl_spec -> COMPLETE
-- On MODULE reduce production is_acsl_spec -> COMPLETE
-- On MODEL reduce production is_acsl_spec -> COMPLETE
-- On MINUS reduce production is_acsl_spec -> COMPLETE
-- On LTLT reduce production is_acsl_spec -> COMPLETE
-- On LTCOLON reduce production is_acsl_spec -> COMPLETE
-- On LT reduce production is_acsl_spec -> COMPLETE
-- On LSQUARE reduce production is_acsl_spec -> COMPLETE
-- On LPAR reduce production is_acsl_spec -> COMPLETE
-- On LOOP reduce production is_acsl_spec -> COMPLETE
-- On LONG reduce production is_acsl_spec -> COMPLETE
-- On LOGIC reduce production is_acsl_spec -> COMPLETE
-- On LET reduce production is_acsl_spec -> COMPLETE
-- On LEMMA reduce production is_acsl_spec -> COMPLETE
-- On LE reduce production is_acsl_spec -> COMPLETE
-- On LBRACE reduce production is_acsl_spec -> COMPLETE
-- On LAMBDA reduce production is_acsl_spec -> COMPLETE
-- On LABEL reduce production is_acsl_spec -> COMPLETE
-- On INVARIANT reduce production is_acsl_spec -> COMPLETE
-- On INTER reduce production is_acsl_spec -> COMPLETE
-- On INTEGER reduce production is_acsl_spec -> COMPLETE
-- On INT reduce production is_acsl_spec -> COMPLETE
-- On INITIALIZED reduce production is_acsl_spec -> COMPLETE
-- On INDUCTIVE reduce production is_acsl_spec -> COMPLETE
-- On INCLUDE reduce production is_acsl_spec -> COMPLETE
-- On IMPLIES reduce production is_acsl_spec -> COMPLETE
-- On IMPACT reduce production is_acsl_spec -> COMPLETE
-- On IFF reduce production is_acsl_spec -> COMPLETE
-- On IF reduce production is_acsl_spec -> COMPLETE
-- On IDENTIFIER reduce production is_acsl_spec -> COMPLETE
-- On HATHAT reduce production is_acsl_spec -> COMPLETE
-- On HAT reduce production is_acsl_spec -> COMPLETE
-- On GTGT reduce production is_acsl_spec -> COMPLETE
-- On GT reduce production is_acsl_spec -> COMPLETE
-- On GLOBAL reduce production is_acsl_spec -> COMPLETE
-- On GHOST reduce production is_acsl_spec -> COMPLETE
-- On GE reduce production is_acsl_spec -> COMPLETE
-- On FUNCTION reduce production is_acsl_spec -> COMPLETE
-- On FROM reduce production is_acsl_spec -> COMPLETE
-- On FRESH reduce production is_acsl_spec -> COMPLETE
-- On FREES reduce production is_acsl_spec -> COMPLETE
-- On FREEABLE reduce production is_acsl_spec -> COMPLETE
-- On FORALL reduce production is_acsl_spec -> COMPLETE
-- On FOR reduce production is_acsl_spec -> COMPLETE
-- On FLOAT reduce production is_acsl_spec -> COMPLETE
-- On FALSE reduce production is_acsl_spec -> COMPLETE
-- On EXT_LET reduce production is_acsl_spec -> COMPLETE
-- On EXT_AT reduce production is_acsl_spec -> COMPLETE
-- On EXITS reduce production is_acsl_spec -> COMPLETE
-- On EXISTS reduce production is_acsl_spec -> COMPLETE
-- On EQUAL reduce production is_acsl_spec -> COMPLETE
-- On EQ reduce production is_acsl_spec -> COMPLETE
-- On EOF reduce production is_acsl_spec -> COMPLETE
-- On ENUM reduce production is_acsl_spec -> COMPLETE
-- On ENSURES reduce production is_acsl_spec -> COMPLETE
-- On EMPTY reduce production is_acsl_spec -> COMPLETE
-- On ELSE reduce production is_acsl_spec -> COMPLETE
-- On DYNAMIC reduce production is_acsl_spec -> COMPLETE
-- On DOUBLE reduce production is_acsl_spec -> COMPLETE
-- On DOTDOTDOT reduce production is_acsl_spec -> COMPLETE
-- On DOTDOT reduce production is_acsl_spec -> COMPLETE
-- On DOT reduce production is_acsl_spec -> COMPLETE
-- On DOLLAR reduce production is_acsl_spec -> COMPLETE
-- On DISJOINT reduce production is_acsl_spec -> COMPLETE
-- On DECREASES reduce production is_acsl_spec -> COMPLETE
-- On DANGLING reduce production is_acsl_spec -> COMPLETE
-- On CUSTOM reduce production is_acsl_spec -> COMPLETE
-- On CONTRACT reduce production is_acsl_spec -> COMPLETE
-- On CONTINUES reduce production is_acsl_spec -> COMPLETE
-- On CONSTANT10 reduce production is_acsl_spec -> COMPLETE
-- On CONSTANT reduce production is_acsl_spec -> COMPLETE
-- On CONST reduce production is_acsl_spec -> COMPLETE
-- On COMPLETE reduce production is_acsl_spec -> COMPLETE
-- On COMMA reduce production is_acsl_spec -> COMPLETE
-- On COLONGT reduce production is_acsl_spec -> COMPLETE
-- On COLONCOLON reduce production is_acsl_spec -> COMPLETE
-- On COLON2 reduce production is_acsl_spec -> COMPLETE
-- On COLON reduce production is_acsl_spec -> COMPLETE
-- On CHAR reduce production is_acsl_spec -> COMPLETE
-- On CASE reduce production is_acsl_spec -> COMPLETE
-- On BSUNION reduce production is_acsl_spec -> COMPLETE
-- On BSTYPE reduce production is_acsl_spec -> COMPLETE
-- On BREAKS reduce production is_acsl_spec -> COMPLETE
-- On BOOLEAN reduce production is_acsl_spec -> COMPLETE
-- On BOOL reduce production is_acsl_spec -> COMPLETE
-- On BLOCK_LENGTH reduce production is_acsl_spec -> COMPLETE
-- On BIMPLIES reduce production is_acsl_spec -> COMPLETE
-- On BIFF reduce production is_acsl_spec -> COMPLETE
-- On BEHAVIORS reduce production is_acsl_spec -> COMPLETE
-- On BEHAVIOR reduce production is_acsl_spec -> COMPLETE
-- On BASE_ADDR reduce production is_acsl_spec -> COMPLETE
-- On AXIOMATIC reduce production is_acsl_spec -> COMPLETE
-- On AXIOM reduce production is_acsl_spec -> COMPLETE
-- On AUTOMATIC reduce production is_acsl_spec -> COMPLETE
-- On AT reduce production is_acsl_spec -> COMPLETE
-- On ASSUMES reduce production is_acsl_spec -> COMPLETE
-- On ASSIGNS reduce production is_acsl_spec -> COMPLETE
-- On ASSERT reduce production is_acsl_spec -> COMPLETE
-- On ARROW reduce production is_acsl_spec -> COMPLETE
-- On AND reduce production is_acsl_spec -> COMPLETE
-- On AMP reduce production is_acsl_spec -> COMPLETE
-- On ALLOCATION reduce production is_acsl_spec -> COMPLETE
-- On ALLOCATES reduce production is_acsl_spec -> COMPLETE
-- On ALLOCABLE reduce production is_acsl_spec -> COMPLETE

State 59:
## Known stack suffix:
## CHAR
## LR(1) items:
c_keyword -> CHAR . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> CHAR
-- On WITH reduce production c_keyword -> CHAR
-- On VOLATILE reduce production c_keyword -> CHAR
-- On VOID reduce production c_keyword -> CHAR
-- On VARIANT reduce production c_keyword -> CHAR
-- On VALID_READ reduce production c_keyword -> CHAR
-- On VALID_RANGE reduce production c_keyword -> CHAR
-- On VALID_INDEX reduce production c_keyword -> CHAR
-- On VALID reduce production c_keyword -> CHAR
-- On UNSIGNED reduce production c_keyword -> CHAR
-- On UNION reduce production c_keyword -> CHAR
-- On UNALLOCATED reduce production c_keyword -> CHAR
-- On TYPEOF reduce production c_keyword -> CHAR
-- On TYPENAME reduce production c_keyword -> CHAR
-- On TYPE reduce production c_keyword -> CHAR
-- On TRUE reduce production c_keyword -> CHAR
-- On TILDE reduce production c_keyword -> CHAR
-- On TERMINATES reduce production c_keyword -> CHAR
-- On STRUCT reduce production c_keyword -> CHAR
-- On STRING_LITERAL reduce production c_keyword -> CHAR
-- On STATIC reduce production c_keyword -> CHAR
-- On STAR reduce production c_keyword -> CHAR
-- On SLICE reduce production c_keyword -> CHAR
-- On SLASH reduce production c_keyword -> CHAR
-- On SIZEOF reduce production c_keyword -> CHAR
-- On SIGNED reduce production c_keyword -> CHAR
-- On SHORT reduce production c_keyword -> CHAR
-- On SEPARATED reduce production c_keyword -> CHAR
-- On SEMICOLON reduce production c_keyword -> CHAR
-- On RSQUARE reduce production c_keyword -> CHAR
-- On RPAR reduce production c_keyword -> CHAR
-- On RETURNS reduce production c_keyword -> CHAR
-- On RESULT reduce production c_keyword -> CHAR
-- On REQUIRES reduce production c_keyword -> CHAR
-- On REGISTER reduce production c_keyword -> CHAR
-- On REAL reduce production c_keyword -> CHAR
-- On READS reduce production c_keyword -> CHAR
-- On RBRACE reduce production c_keyword -> CHAR
-- On QUESTION reduce production c_keyword -> CHAR
-- On PREDICATE reduce production c_keyword -> CHAR
-- On PRAGMA reduce production c_keyword -> CHAR
-- On PLUS reduce production c_keyword -> CHAR
-- On PIPE reduce production c_keyword -> CHAR
-- On PERCENT reduce production c_keyword -> CHAR
-- On OR reduce production c_keyword -> CHAR
-- On OLD reduce production c_keyword -> CHAR
-- On OFFSET reduce production c_keyword -> CHAR
-- On NULL reduce production c_keyword -> CHAR
-- On NOTHING reduce production c_keyword -> CHAR
-- On NOT reduce production c_keyword -> CHAR
-- On NE reduce production c_keyword -> CHAR
-- On MODULE reduce production c_keyword -> CHAR
-- On MODEL reduce production c_keyword -> CHAR
-- On MINUS reduce production c_keyword -> CHAR
-- On LTLT reduce production c_keyword -> CHAR
-- On LTCOLON reduce production c_keyword -> CHAR
-- On LT reduce production c_keyword -> CHAR
-- On LSQUARE reduce production c_keyword -> CHAR
-- On LPAR reduce production c_keyword -> CHAR
-- On LOOP reduce production c_keyword -> CHAR
-- On LONG reduce production c_keyword -> CHAR
-- On LOGIC reduce production c_keyword -> CHAR
-- On LET reduce production c_keyword -> CHAR
-- On LEMMA reduce production c_keyword -> CHAR
-- On LE reduce production c_keyword -> CHAR
-- On LBRACE reduce production c_keyword -> CHAR
-- On LAMBDA reduce production c_keyword -> CHAR
-- On LABEL reduce production c_keyword -> CHAR
-- On INVARIANT reduce production c_keyword -> CHAR
-- On INTER reduce production c_keyword -> CHAR
-- On INTEGER reduce production c_keyword -> CHAR
-- On INT reduce production c_keyword -> CHAR
-- On INITIALIZED reduce production c_keyword -> CHAR
-- On INDUCTIVE reduce production c_keyword -> CHAR
-- On INCLUDE reduce production c_keyword -> CHAR
-- On IMPLIES reduce production c_keyword -> CHAR
-- On IMPACT reduce production c_keyword -> CHAR
-- On IFF reduce production c_keyword -> CHAR
-- On IF reduce production c_keyword -> CHAR
-- On IDENTIFIER reduce production c_keyword -> CHAR
-- On HATHAT reduce production c_keyword -> CHAR
-- On HAT reduce production c_keyword -> CHAR
-- On GTGT reduce production c_keyword -> CHAR
-- On GT reduce production c_keyword -> CHAR
-- On GLOBAL reduce production c_keyword -> CHAR
-- On GHOST reduce production c_keyword -> CHAR
-- On GE reduce production c_keyword -> CHAR
-- On FUNCTION reduce production c_keyword -> CHAR
-- On FROM reduce production c_keyword -> CHAR
-- On FRESH reduce production c_keyword -> CHAR
-- On FREES reduce production c_keyword -> CHAR
-- On FREEABLE reduce production c_keyword -> CHAR
-- On FORALL reduce production c_keyword -> CHAR
-- On FOR reduce production c_keyword -> CHAR
-- On FLOAT reduce production c_keyword -> CHAR
-- On FALSE reduce production c_keyword -> CHAR
-- On EXT_LET reduce production c_keyword -> CHAR
-- On EXT_AT reduce production c_keyword -> CHAR
-- On EXITS reduce production c_keyword -> CHAR
-- On EXISTS reduce production c_keyword -> CHAR
-- On EQUAL reduce production c_keyword -> CHAR
-- On EQ reduce production c_keyword -> CHAR
-- On EOF reduce production c_keyword -> CHAR
-- On ENUM reduce production c_keyword -> CHAR
-- On ENSURES reduce production c_keyword -> CHAR
-- On EMPTY reduce production c_keyword -> CHAR
-- On ELSE reduce production c_keyword -> CHAR
-- On DYNAMIC reduce production c_keyword -> CHAR
-- On DOUBLE reduce production c_keyword -> CHAR
-- On DOTDOTDOT reduce production c_keyword -> CHAR
-- On DOTDOT reduce production c_keyword -> CHAR
-- On DOT reduce production c_keyword -> CHAR
-- On DOLLAR reduce production c_keyword -> CHAR
-- On DISJOINT reduce production c_keyword -> CHAR
-- On DECREASES reduce production c_keyword -> CHAR
-- On DANGLING reduce production c_keyword -> CHAR
-- On CUSTOM reduce production c_keyword -> CHAR
-- On CONTRACT reduce production c_keyword -> CHAR
-- On CONTINUES reduce production c_keyword -> CHAR
-- On CONSTANT10 reduce production c_keyword -> CHAR
-- On CONSTANT reduce production c_keyword -> CHAR
-- On CONST reduce production c_keyword -> CHAR
-- On COMPLETE reduce production c_keyword -> CHAR
-- On COMMA reduce production c_keyword -> CHAR
-- On COLONGT reduce production c_keyword -> CHAR
-- On COLONCOLON reduce production c_keyword -> CHAR
-- On COLON2 reduce production c_keyword -> CHAR
-- On COLON reduce production c_keyword -> CHAR
-- On CHAR reduce production c_keyword -> CHAR
-- On CASE reduce production c_keyword -> CHAR
-- On BSUNION reduce production c_keyword -> CHAR
-- On BSTYPE reduce production c_keyword -> CHAR
-- On BREAKS reduce production c_keyword -> CHAR
-- On BOOLEAN reduce production c_keyword -> CHAR
-- On BOOL reduce production c_keyword -> CHAR
-- On BLOCK_LENGTH reduce production c_keyword -> CHAR
-- On BIMPLIES reduce production c_keyword -> CHAR
-- On BIFF reduce production c_keyword -> CHAR
-- On BEHAVIORS reduce production c_keyword -> CHAR
-- On BEHAVIOR reduce production c_keyword -> CHAR
-- On BASE_ADDR reduce production c_keyword -> CHAR
-- On AXIOMATIC reduce production c_keyword -> CHAR
-- On AXIOM reduce production c_keyword -> CHAR
-- On AUTOMATIC reduce production c_keyword -> CHAR
-- On AT reduce production c_keyword -> CHAR
-- On ASSUMES reduce production c_keyword -> CHAR
-- On ASSIGNS reduce production c_keyword -> CHAR
-- On ASSERT reduce production c_keyword -> CHAR
-- On ARROW reduce production c_keyword -> CHAR
-- On AND reduce production c_keyword -> CHAR
-- On AMP reduce production c_keyword -> CHAR
-- On ALLOCATION reduce production c_keyword -> CHAR
-- On ALLOCATES reduce production c_keyword -> CHAR
-- On ALLOCABLE reduce production c_keyword -> CHAR

State 60:
## Known stack suffix:
## CASE
## LR(1) items:
c_keyword -> CASE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> CASE
-- On WITH reduce production c_keyword -> CASE
-- On VOLATILE reduce production c_keyword -> CASE
-- On VOID reduce production c_keyword -> CASE
-- On VARIANT reduce production c_keyword -> CASE
-- On VALID_READ reduce production c_keyword -> CASE
-- On VALID_RANGE reduce production c_keyword -> CASE
-- On VALID_INDEX reduce production c_keyword -> CASE
-- On VALID reduce production c_keyword -> CASE
-- On UNSIGNED reduce production c_keyword -> CASE
-- On UNION reduce production c_keyword -> CASE
-- On UNALLOCATED reduce production c_keyword -> CASE
-- On TYPEOF reduce production c_keyword -> CASE
-- On TYPENAME reduce production c_keyword -> CASE
-- On TYPE reduce production c_keyword -> CASE
-- On TRUE reduce production c_keyword -> CASE
-- On TILDE reduce production c_keyword -> CASE
-- On TERMINATES reduce production c_keyword -> CASE
-- On STRUCT reduce production c_keyword -> CASE
-- On STRING_LITERAL reduce production c_keyword -> CASE
-- On STATIC reduce production c_keyword -> CASE
-- On STAR reduce production c_keyword -> CASE
-- On SLICE reduce production c_keyword -> CASE
-- On SLASH reduce production c_keyword -> CASE
-- On SIZEOF reduce production c_keyword -> CASE
-- On SIGNED reduce production c_keyword -> CASE
-- On SHORT reduce production c_keyword -> CASE
-- On SEPARATED reduce production c_keyword -> CASE
-- On SEMICOLON reduce production c_keyword -> CASE
-- On RSQUARE reduce production c_keyword -> CASE
-- On RPAR reduce production c_keyword -> CASE
-- On RETURNS reduce production c_keyword -> CASE
-- On RESULT reduce production c_keyword -> CASE
-- On REQUIRES reduce production c_keyword -> CASE
-- On REGISTER reduce production c_keyword -> CASE
-- On REAL reduce production c_keyword -> CASE
-- On READS reduce production c_keyword -> CASE
-- On RBRACE reduce production c_keyword -> CASE
-- On QUESTION reduce production c_keyword -> CASE
-- On PREDICATE reduce production c_keyword -> CASE
-- On PRAGMA reduce production c_keyword -> CASE
-- On PLUS reduce production c_keyword -> CASE
-- On PIPE reduce production c_keyword -> CASE
-- On PERCENT reduce production c_keyword -> CASE
-- On OR reduce production c_keyword -> CASE
-- On OLD reduce production c_keyword -> CASE
-- On OFFSET reduce production c_keyword -> CASE
-- On NULL reduce production c_keyword -> CASE
-- On NOTHING reduce production c_keyword -> CASE
-- On NOT reduce production c_keyword -> CASE
-- On NE reduce production c_keyword -> CASE
-- On MODULE reduce production c_keyword -> CASE
-- On MODEL reduce production c_keyword -> CASE
-- On MINUS reduce production c_keyword -> CASE
-- On LTLT reduce production c_keyword -> CASE
-- On LTCOLON reduce production c_keyword -> CASE
-- On LT reduce production c_keyword -> CASE
-- On LSQUARE reduce production c_keyword -> CASE
-- On LPAR reduce production c_keyword -> CASE
-- On LOOP reduce production c_keyword -> CASE
-- On LONG reduce production c_keyword -> CASE
-- On LOGIC reduce production c_keyword -> CASE
-- On LET reduce production c_keyword -> CASE
-- On LEMMA reduce production c_keyword -> CASE
-- On LE reduce production c_keyword -> CASE
-- On LBRACE reduce production c_keyword -> CASE
-- On LAMBDA reduce production c_keyword -> CASE
-- On LABEL reduce production c_keyword -> CASE
-- On INVARIANT reduce production c_keyword -> CASE
-- On INTER reduce production c_keyword -> CASE
-- On INTEGER reduce production c_keyword -> CASE
-- On INT reduce production c_keyword -> CASE
-- On INITIALIZED reduce production c_keyword -> CASE
-- On INDUCTIVE reduce production c_keyword -> CASE
-- On INCLUDE reduce production c_keyword -> CASE
-- On IMPLIES reduce production c_keyword -> CASE
-- On IMPACT reduce production c_keyword -> CASE
-- On IFF reduce production c_keyword -> CASE
-- On IF reduce production c_keyword -> CASE
-- On IDENTIFIER reduce production c_keyword -> CASE
-- On HATHAT reduce production c_keyword -> CASE
-- On HAT reduce production c_keyword -> CASE
-- On GTGT reduce production c_keyword -> CASE
-- On GT reduce production c_keyword -> CASE
-- On GLOBAL reduce production c_keyword -> CASE
-- On GHOST reduce production c_keyword -> CASE
-- On GE reduce production c_keyword -> CASE
-- On FUNCTION reduce production c_keyword -> CASE
-- On FROM reduce production c_keyword -> CASE
-- On FRESH reduce production c_keyword -> CASE
-- On FREES reduce production c_keyword -> CASE
-- On FREEABLE reduce production c_keyword -> CASE
-- On FORALL reduce production c_keyword -> CASE
-- On FOR reduce production c_keyword -> CASE
-- On FLOAT reduce production c_keyword -> CASE
-- On FALSE reduce production c_keyword -> CASE
-- On EXT_LET reduce production c_keyword -> CASE
-- On EXT_AT reduce production c_keyword -> CASE
-- On EXITS reduce production c_keyword -> CASE
-- On EXISTS reduce production c_keyword -> CASE
-- On EQUAL reduce production c_keyword -> CASE
-- On EQ reduce production c_keyword -> CASE
-- On EOF reduce production c_keyword -> CASE
-- On ENUM reduce production c_keyword -> CASE
-- On ENSURES reduce production c_keyword -> CASE
-- On EMPTY reduce production c_keyword -> CASE
-- On ELSE reduce production c_keyword -> CASE
-- On DYNAMIC reduce production c_keyword -> CASE
-- On DOUBLE reduce production c_keyword -> CASE
-- On DOTDOTDOT reduce production c_keyword -> CASE
-- On DOTDOT reduce production c_keyword -> CASE
-- On DOT reduce production c_keyword -> CASE
-- On DOLLAR reduce production c_keyword -> CASE
-- On DISJOINT reduce production c_keyword -> CASE
-- On DECREASES reduce production c_keyword -> CASE
-- On DANGLING reduce production c_keyword -> CASE
-- On CUSTOM reduce production c_keyword -> CASE
-- On CONTRACT reduce production c_keyword -> CASE
-- On CONTINUES reduce production c_keyword -> CASE
-- On CONSTANT10 reduce production c_keyword -> CASE
-- On CONSTANT reduce production c_keyword -> CASE
-- On CONST reduce production c_keyword -> CASE
-- On COMPLETE reduce production c_keyword -> CASE
-- On COMMA reduce production c_keyword -> CASE
-- On COLONGT reduce production c_keyword -> CASE
-- On COLONCOLON reduce production c_keyword -> CASE
-- On COLON2 reduce production c_keyword -> CASE
-- On COLON reduce production c_keyword -> CASE
-- On CHAR reduce production c_keyword -> CASE
-- On CASE reduce production c_keyword -> CASE
-- On BSUNION reduce production c_keyword -> CASE
-- On BSTYPE reduce production c_keyword -> CASE
-- On BREAKS reduce production c_keyword -> CASE
-- On BOOLEAN reduce production c_keyword -> CASE
-- On BOOL reduce production c_keyword -> CASE
-- On BLOCK_LENGTH reduce production c_keyword -> CASE
-- On BIMPLIES reduce production c_keyword -> CASE
-- On BIFF reduce production c_keyword -> CASE
-- On BEHAVIORS reduce production c_keyword -> CASE
-- On BEHAVIOR reduce production c_keyword -> CASE
-- On BASE_ADDR reduce production c_keyword -> CASE
-- On AXIOMATIC reduce production c_keyword -> CASE
-- On AXIOM reduce production c_keyword -> CASE
-- On AUTOMATIC reduce production c_keyword -> CASE
-- On AT reduce production c_keyword -> CASE
-- On ASSUMES reduce production c_keyword -> CASE
-- On ASSIGNS reduce production c_keyword -> CASE
-- On ASSERT reduce production c_keyword -> CASE
-- On ARROW reduce production c_keyword -> CASE
-- On AND reduce production c_keyword -> CASE
-- On AMP reduce production c_keyword -> CASE
-- On ALLOCATION reduce production c_keyword -> CASE
-- On ALLOCATES reduce production c_keyword -> CASE
-- On ALLOCABLE reduce production c_keyword -> CASE

State 61:
## Known stack suffix:
## BREAKS
## LR(1) items:
post_cond -> BREAKS . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production post_cond -> BREAKS
-- On WITH reduce production post_cond -> BREAKS
-- On VOLATILE reduce production post_cond -> BREAKS
-- On VOID reduce production post_cond -> BREAKS
-- On VARIANT reduce production post_cond -> BREAKS
-- On VALID_READ reduce production post_cond -> BREAKS
-- On VALID_RANGE reduce production post_cond -> BREAKS
-- On VALID_INDEX reduce production post_cond -> BREAKS
-- On VALID reduce production post_cond -> BREAKS
-- On UNSIGNED reduce production post_cond -> BREAKS
-- On UNION reduce production post_cond -> BREAKS
-- On UNALLOCATED reduce production post_cond -> BREAKS
-- On TYPEOF reduce production post_cond -> BREAKS
-- On TYPENAME reduce production post_cond -> BREAKS
-- On TYPE reduce production post_cond -> BREAKS
-- On TRUE reduce production post_cond -> BREAKS
-- On TILDE reduce production post_cond -> BREAKS
-- On TERMINATES reduce production post_cond -> BREAKS
-- On STRUCT reduce production post_cond -> BREAKS
-- On STRING_LITERAL reduce production post_cond -> BREAKS
-- On STATIC reduce production post_cond -> BREAKS
-- On STAR reduce production post_cond -> BREAKS
-- On SLICE reduce production post_cond -> BREAKS
-- On SLASH reduce production post_cond -> BREAKS
-- On SIZEOF reduce production post_cond -> BREAKS
-- On SIGNED reduce production post_cond -> BREAKS
-- On SHORT reduce production post_cond -> BREAKS
-- On SEPARATED reduce production post_cond -> BREAKS
-- On SEMICOLON reduce production post_cond -> BREAKS
-- On RSQUARE reduce production post_cond -> BREAKS
-- On RPAR reduce production post_cond -> BREAKS
-- On RETURNS reduce production post_cond -> BREAKS
-- On RESULT reduce production post_cond -> BREAKS
-- On REQUIRES reduce production post_cond -> BREAKS
-- On REGISTER reduce production post_cond -> BREAKS
-- On REAL reduce production post_cond -> BREAKS
-- On READS reduce production post_cond -> BREAKS
-- On RBRACE reduce production post_cond -> BREAKS
-- On QUESTION reduce production post_cond -> BREAKS
-- On PREDICATE reduce production post_cond -> BREAKS
-- On PRAGMA reduce production post_cond -> BREAKS
-- On PLUS reduce production post_cond -> BREAKS
-- On PIPE reduce production post_cond -> BREAKS
-- On PERCENT reduce production post_cond -> BREAKS
-- On OR reduce production post_cond -> BREAKS
-- On OLD reduce production post_cond -> BREAKS
-- On OFFSET reduce production post_cond -> BREAKS
-- On NULL reduce production post_cond -> BREAKS
-- On NOTHING reduce production post_cond -> BREAKS
-- On NOT reduce production post_cond -> BREAKS
-- On NE reduce production post_cond -> BREAKS
-- On MODULE reduce production post_cond -> BREAKS
-- On MODEL reduce production post_cond -> BREAKS
-- On MINUS reduce production post_cond -> BREAKS
-- On LTLT reduce production post_cond -> BREAKS
-- On LTCOLON reduce production post_cond -> BREAKS
-- On LT reduce production post_cond -> BREAKS
-- On LSQUARE reduce production post_cond -> BREAKS
-- On LPAR reduce production post_cond -> BREAKS
-- On LOOP reduce production post_cond -> BREAKS
-- On LONG reduce production post_cond -> BREAKS
-- On LOGIC reduce production post_cond -> BREAKS
-- On LET reduce production post_cond -> BREAKS
-- On LEMMA reduce production post_cond -> BREAKS
-- On LE reduce production post_cond -> BREAKS
-- On LBRACE reduce production post_cond -> BREAKS
-- On LAMBDA reduce production post_cond -> BREAKS
-- On LABEL reduce production post_cond -> BREAKS
-- On INVARIANT reduce production post_cond -> BREAKS
-- On INTER reduce production post_cond -> BREAKS
-- On INTEGER reduce production post_cond -> BREAKS
-- On INT reduce production post_cond -> BREAKS
-- On INITIALIZED reduce production post_cond -> BREAKS
-- On INDUCTIVE reduce production post_cond -> BREAKS
-- On INCLUDE reduce production post_cond -> BREAKS
-- On IMPLIES reduce production post_cond -> BREAKS
-- On IMPACT reduce production post_cond -> BREAKS
-- On IFF reduce production post_cond -> BREAKS
-- On IF reduce production post_cond -> BREAKS
-- On IDENTIFIER reduce production post_cond -> BREAKS
-- On HATHAT reduce production post_cond -> BREAKS
-- On HAT reduce production post_cond -> BREAKS
-- On GTGT reduce production post_cond -> BREAKS
-- On GT reduce production post_cond -> BREAKS
-- On GLOBAL reduce production post_cond -> BREAKS
-- On GHOST reduce production post_cond -> BREAKS
-- On GE reduce production post_cond -> BREAKS
-- On FUNCTION reduce production post_cond -> BREAKS
-- On FROM reduce production post_cond -> BREAKS
-- On FRESH reduce production post_cond -> BREAKS
-- On FREES reduce production post_cond -> BREAKS
-- On FREEABLE reduce production post_cond -> BREAKS
-- On FORALL reduce production post_cond -> BREAKS
-- On FOR reduce production post_cond -> BREAKS
-- On FLOAT reduce production post_cond -> BREAKS
-- On FALSE reduce production post_cond -> BREAKS
-- On EXT_LET reduce production post_cond -> BREAKS
-- On EXT_AT reduce production post_cond -> BREAKS
-- On EXITS reduce production post_cond -> BREAKS
-- On EXISTS reduce production post_cond -> BREAKS
-- On EQUAL reduce production post_cond -> BREAKS
-- On EQ reduce production post_cond -> BREAKS
-- On EOF reduce production post_cond -> BREAKS
-- On ENUM reduce production post_cond -> BREAKS
-- On ENSURES reduce production post_cond -> BREAKS
-- On EMPTY reduce production post_cond -> BREAKS
-- On ELSE reduce production post_cond -> BREAKS
-- On DYNAMIC reduce production post_cond -> BREAKS
-- On DOUBLE reduce production post_cond -> BREAKS
-- On DOTDOTDOT reduce production post_cond -> BREAKS
-- On DOTDOT reduce production post_cond -> BREAKS
-- On DOT reduce production post_cond -> BREAKS
-- On DOLLAR reduce production post_cond -> BREAKS
-- On DISJOINT reduce production post_cond -> BREAKS
-- On DECREASES reduce production post_cond -> BREAKS
-- On DANGLING reduce production post_cond -> BREAKS
-- On CUSTOM reduce production post_cond -> BREAKS
-- On CONTRACT reduce production post_cond -> BREAKS
-- On CONTINUES reduce production post_cond -> BREAKS
-- On CONSTANT10 reduce production post_cond -> BREAKS
-- On CONSTANT reduce production post_cond -> BREAKS
-- On CONST reduce production post_cond -> BREAKS
-- On COMPLETE reduce production post_cond -> BREAKS
-- On COMMA reduce production post_cond -> BREAKS
-- On COLONGT reduce production post_cond -> BREAKS
-- On COLONCOLON reduce production post_cond -> BREAKS
-- On COLON2 reduce production post_cond -> BREAKS
-- On COLON reduce production post_cond -> BREAKS
-- On CHAR reduce production post_cond -> BREAKS
-- On CASE reduce production post_cond -> BREAKS
-- On BSUNION reduce production post_cond -> BREAKS
-- On BSTYPE reduce production post_cond -> BREAKS
-- On BREAKS reduce production post_cond -> BREAKS
-- On BOOLEAN reduce production post_cond -> BREAKS
-- On BOOL reduce production post_cond -> BREAKS
-- On BLOCK_LENGTH reduce production post_cond -> BREAKS
-- On BIMPLIES reduce production post_cond -> BREAKS
-- On BIFF reduce production post_cond -> BREAKS
-- On BEHAVIORS reduce production post_cond -> BREAKS
-- On BEHAVIOR reduce production post_cond -> BREAKS
-- On BASE_ADDR reduce production post_cond -> BREAKS
-- On AXIOMATIC reduce production post_cond -> BREAKS
-- On AXIOM reduce production post_cond -> BREAKS
-- On AUTOMATIC reduce production post_cond -> BREAKS
-- On AT reduce production post_cond -> BREAKS
-- On ASSUMES reduce production post_cond -> BREAKS
-- On ASSIGNS reduce production post_cond -> BREAKS
-- On ASSERT reduce production post_cond -> BREAKS
-- On ARROW reduce production post_cond -> BREAKS
-- On AND reduce production post_cond -> BREAKS
-- On AMP reduce production post_cond -> BREAKS
-- On ALLOCATION reduce production post_cond -> BREAKS
-- On ALLOCATES reduce production post_cond -> BREAKS
-- On ALLOCABLE reduce production post_cond -> BREAKS

State 62:
## Known stack suffix:
## BOOLEAN
## LR(1) items:
c_keyword -> BOOLEAN . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> BOOLEAN
-- On WITH reduce production c_keyword -> BOOLEAN
-- On VOLATILE reduce production c_keyword -> BOOLEAN
-- On VOID reduce production c_keyword -> BOOLEAN
-- On VARIANT reduce production c_keyword -> BOOLEAN
-- On VALID_READ reduce production c_keyword -> BOOLEAN
-- On VALID_RANGE reduce production c_keyword -> BOOLEAN
-- On VALID_INDEX reduce production c_keyword -> BOOLEAN
-- On VALID reduce production c_keyword -> BOOLEAN
-- On UNSIGNED reduce production c_keyword -> BOOLEAN
-- On UNION reduce production c_keyword -> BOOLEAN
-- On UNALLOCATED reduce production c_keyword -> BOOLEAN
-- On TYPEOF reduce production c_keyword -> BOOLEAN
-- On TYPENAME reduce production c_keyword -> BOOLEAN
-- On TYPE reduce production c_keyword -> BOOLEAN
-- On TRUE reduce production c_keyword -> BOOLEAN
-- On TILDE reduce production c_keyword -> BOOLEAN
-- On TERMINATES reduce production c_keyword -> BOOLEAN
-- On STRUCT reduce production c_keyword -> BOOLEAN
-- On STRING_LITERAL reduce production c_keyword -> BOOLEAN
-- On STATIC reduce production c_keyword -> BOOLEAN
-- On STAR reduce production c_keyword -> BOOLEAN
-- On SLICE reduce production c_keyword -> BOOLEAN
-- On SLASH reduce production c_keyword -> BOOLEAN
-- On SIZEOF reduce production c_keyword -> BOOLEAN
-- On SIGNED reduce production c_keyword -> BOOLEAN
-- On SHORT reduce production c_keyword -> BOOLEAN
-- On SEPARATED reduce production c_keyword -> BOOLEAN
-- On SEMICOLON reduce production c_keyword -> BOOLEAN
-- On RSQUARE reduce production c_keyword -> BOOLEAN
-- On RPAR reduce production c_keyword -> BOOLEAN
-- On RETURNS reduce production c_keyword -> BOOLEAN
-- On RESULT reduce production c_keyword -> BOOLEAN
-- On REQUIRES reduce production c_keyword -> BOOLEAN
-- On REGISTER reduce production c_keyword -> BOOLEAN
-- On REAL reduce production c_keyword -> BOOLEAN
-- On READS reduce production c_keyword -> BOOLEAN
-- On RBRACE reduce production c_keyword -> BOOLEAN
-- On QUESTION reduce production c_keyword -> BOOLEAN
-- On PREDICATE reduce production c_keyword -> BOOLEAN
-- On PRAGMA reduce production c_keyword -> BOOLEAN
-- On PLUS reduce production c_keyword -> BOOLEAN
-- On PIPE reduce production c_keyword -> BOOLEAN
-- On PERCENT reduce production c_keyword -> BOOLEAN
-- On OR reduce production c_keyword -> BOOLEAN
-- On OLD reduce production c_keyword -> BOOLEAN
-- On OFFSET reduce production c_keyword -> BOOLEAN
-- On NULL reduce production c_keyword -> BOOLEAN
-- On NOTHING reduce production c_keyword -> BOOLEAN
-- On NOT reduce production c_keyword -> BOOLEAN
-- On NE reduce production c_keyword -> BOOLEAN
-- On MODULE reduce production c_keyword -> BOOLEAN
-- On MODEL reduce production c_keyword -> BOOLEAN
-- On MINUS reduce production c_keyword -> BOOLEAN
-- On LTLT reduce production c_keyword -> BOOLEAN
-- On LTCOLON reduce production c_keyword -> BOOLEAN
-- On LT reduce production c_keyword -> BOOLEAN
-- On LSQUARE reduce production c_keyword -> BOOLEAN
-- On LPAR reduce production c_keyword -> BOOLEAN
-- On LOOP reduce production c_keyword -> BOOLEAN
-- On LONG reduce production c_keyword -> BOOLEAN
-- On LOGIC reduce production c_keyword -> BOOLEAN
-- On LET reduce production c_keyword -> BOOLEAN
-- On LEMMA reduce production c_keyword -> BOOLEAN
-- On LE reduce production c_keyword -> BOOLEAN
-- On LBRACE reduce production c_keyword -> BOOLEAN
-- On LAMBDA reduce production c_keyword -> BOOLEAN
-- On LABEL reduce production c_keyword -> BOOLEAN
-- On INVARIANT reduce production c_keyword -> BOOLEAN
-- On INTER reduce production c_keyword -> BOOLEAN
-- On INTEGER reduce production c_keyword -> BOOLEAN
-- On INT reduce production c_keyword -> BOOLEAN
-- On INITIALIZED reduce production c_keyword -> BOOLEAN
-- On INDUCTIVE reduce production c_keyword -> BOOLEAN
-- On INCLUDE reduce production c_keyword -> BOOLEAN
-- On IMPLIES reduce production c_keyword -> BOOLEAN
-- On IMPACT reduce production c_keyword -> BOOLEAN
-- On IFF reduce production c_keyword -> BOOLEAN
-- On IF reduce production c_keyword -> BOOLEAN
-- On IDENTIFIER reduce production c_keyword -> BOOLEAN
-- On HATHAT reduce production c_keyword -> BOOLEAN
-- On HAT reduce production c_keyword -> BOOLEAN
-- On GTGT reduce production c_keyword -> BOOLEAN
-- On GT reduce production c_keyword -> BOOLEAN
-- On GLOBAL reduce production c_keyword -> BOOLEAN
-- On GHOST reduce production c_keyword -> BOOLEAN
-- On GE reduce production c_keyword -> BOOLEAN
-- On FUNCTION reduce production c_keyword -> BOOLEAN
-- On FROM reduce production c_keyword -> BOOLEAN
-- On FRESH reduce production c_keyword -> BOOLEAN
-- On FREES reduce production c_keyword -> BOOLEAN
-- On FREEABLE reduce production c_keyword -> BOOLEAN
-- On FORALL reduce production c_keyword -> BOOLEAN
-- On FOR reduce production c_keyword -> BOOLEAN
-- On FLOAT reduce production c_keyword -> BOOLEAN
-- On FALSE reduce production c_keyword -> BOOLEAN
-- On EXT_LET reduce production c_keyword -> BOOLEAN
-- On EXT_AT reduce production c_keyword -> BOOLEAN
-- On EXITS reduce production c_keyword -> BOOLEAN
-- On EXISTS reduce production c_keyword -> BOOLEAN
-- On EQUAL reduce production c_keyword -> BOOLEAN
-- On EQ reduce production c_keyword -> BOOLEAN
-- On EOF reduce production c_keyword -> BOOLEAN
-- On ENUM reduce production c_keyword -> BOOLEAN
-- On ENSURES reduce production c_keyword -> BOOLEAN
-- On EMPTY reduce production c_keyword -> BOOLEAN
-- On ELSE reduce production c_keyword -> BOOLEAN
-- On DYNAMIC reduce production c_keyword -> BOOLEAN
-- On DOUBLE reduce production c_keyword -> BOOLEAN
-- On DOTDOTDOT reduce production c_keyword -> BOOLEAN
-- On DOTDOT reduce production c_keyword -> BOOLEAN
-- On DOT reduce production c_keyword -> BOOLEAN
-- On DOLLAR reduce production c_keyword -> BOOLEAN
-- On DISJOINT reduce production c_keyword -> BOOLEAN
-- On DECREASES reduce production c_keyword -> BOOLEAN
-- On DANGLING reduce production c_keyword -> BOOLEAN
-- On CUSTOM reduce production c_keyword -> BOOLEAN
-- On CONTRACT reduce production c_keyword -> BOOLEAN
-- On CONTINUES reduce production c_keyword -> BOOLEAN
-- On CONSTANT10 reduce production c_keyword -> BOOLEAN
-- On CONSTANT reduce production c_keyword -> BOOLEAN
-- On CONST reduce production c_keyword -> BOOLEAN
-- On COMPLETE reduce production c_keyword -> BOOLEAN
-- On COMMA reduce production c_keyword -> BOOLEAN
-- On COLONGT reduce production c_keyword -> BOOLEAN
-- On COLONCOLON reduce production c_keyword -> BOOLEAN
-- On COLON2 reduce production c_keyword -> BOOLEAN
-- On COLON reduce production c_keyword -> BOOLEAN
-- On CHAR reduce production c_keyword -> BOOLEAN
-- On CASE reduce production c_keyword -> BOOLEAN
-- On BSUNION reduce production c_keyword -> BOOLEAN
-- On BSTYPE reduce production c_keyword -> BOOLEAN
-- On BREAKS reduce production c_keyword -> BOOLEAN
-- On BOOLEAN reduce production c_keyword -> BOOLEAN
-- On BOOL reduce production c_keyword -> BOOLEAN
-- On BLOCK_LENGTH reduce production c_keyword -> BOOLEAN
-- On BIMPLIES reduce production c_keyword -> BOOLEAN
-- On BIFF reduce production c_keyword -> BOOLEAN
-- On BEHAVIORS reduce production c_keyword -> BOOLEAN
-- On BEHAVIOR reduce production c_keyword -> BOOLEAN
-- On BASE_ADDR reduce production c_keyword -> BOOLEAN
-- On AXIOMATIC reduce production c_keyword -> BOOLEAN
-- On AXIOM reduce production c_keyword -> BOOLEAN
-- On AUTOMATIC reduce production c_keyword -> BOOLEAN
-- On AT reduce production c_keyword -> BOOLEAN
-- On ASSUMES reduce production c_keyword -> BOOLEAN
-- On ASSIGNS reduce production c_keyword -> BOOLEAN
-- On ASSERT reduce production c_keyword -> BOOLEAN
-- On ARROW reduce production c_keyword -> BOOLEAN
-- On AND reduce production c_keyword -> BOOLEAN
-- On AMP reduce production c_keyword -> BOOLEAN
-- On ALLOCATION reduce production c_keyword -> BOOLEAN
-- On ALLOCATES reduce production c_keyword -> BOOLEAN
-- On ALLOCABLE reduce production c_keyword -> BOOLEAN

State 63:
## Known stack suffix:
## BOOL
## LR(1) items:
c_keyword -> BOOL . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production c_keyword -> BOOL
-- On WITH reduce production c_keyword -> BOOL
-- On VOLATILE reduce production c_keyword -> BOOL
-- On VOID reduce production c_keyword -> BOOL
-- On VARIANT reduce production c_keyword -> BOOL
-- On VALID_READ reduce production c_keyword -> BOOL
-- On VALID_RANGE reduce production c_keyword -> BOOL
-- On VALID_INDEX reduce production c_keyword -> BOOL
-- On VALID reduce production c_keyword -> BOOL
-- On UNSIGNED reduce production c_keyword -> BOOL
-- On UNION reduce production c_keyword -> BOOL
-- On UNALLOCATED reduce production c_keyword -> BOOL
-- On TYPEOF reduce production c_keyword -> BOOL
-- On TYPENAME reduce production c_keyword -> BOOL
-- On TYPE reduce production c_keyword -> BOOL
-- On TRUE reduce production c_keyword -> BOOL
-- On TILDE reduce production c_keyword -> BOOL
-- On TERMINATES reduce production c_keyword -> BOOL
-- On STRUCT reduce production c_keyword -> BOOL
-- On STRING_LITERAL reduce production c_keyword -> BOOL
-- On STATIC reduce production c_keyword -> BOOL
-- On STAR reduce production c_keyword -> BOOL
-- On SLICE reduce production c_keyword -> BOOL
-- On SLASH reduce production c_keyword -> BOOL
-- On SIZEOF reduce production c_keyword -> BOOL
-- On SIGNED reduce production c_keyword -> BOOL
-- On SHORT reduce production c_keyword -> BOOL
-- On SEPARATED reduce production c_keyword -> BOOL
-- On SEMICOLON reduce production c_keyword -> BOOL
-- On RSQUARE reduce production c_keyword -> BOOL
-- On RPAR reduce production c_keyword -> BOOL
-- On RETURNS reduce production c_keyword -> BOOL
-- On RESULT reduce production c_keyword -> BOOL
-- On REQUIRES reduce production c_keyword -> BOOL
-- On REGISTER reduce production c_keyword -> BOOL
-- On REAL reduce production c_keyword -> BOOL
-- On READS reduce production c_keyword -> BOOL
-- On RBRACE reduce production c_keyword -> BOOL
-- On QUESTION reduce production c_keyword -> BOOL
-- On PREDICATE reduce production c_keyword -> BOOL
-- On PRAGMA reduce production c_keyword -> BOOL
-- On PLUS reduce production c_keyword -> BOOL
-- On PIPE reduce production c_keyword -> BOOL
-- On PERCENT reduce production c_keyword -> BOOL
-- On OR reduce production c_keyword -> BOOL
-- On OLD reduce production c_keyword -> BOOL
-- On OFFSET reduce production c_keyword -> BOOL
-- On NULL reduce production c_keyword -> BOOL
-- On NOTHING reduce production c_keyword -> BOOL
-- On NOT reduce production c_keyword -> BOOL
-- On NE reduce production c_keyword -> BOOL
-- On MODULE reduce production c_keyword -> BOOL
-- On MODEL reduce production c_keyword -> BOOL
-- On MINUS reduce production c_keyword -> BOOL
-- On LTLT reduce production c_keyword -> BOOL
-- On LTCOLON reduce production c_keyword -> BOOL
-- On LT reduce production c_keyword -> BOOL
-- On LSQUARE reduce production c_keyword -> BOOL
-- On LPAR reduce production c_keyword -> BOOL
-- On LOOP reduce production c_keyword -> BOOL
-- On LONG reduce production c_keyword -> BOOL
-- On LOGIC reduce production c_keyword -> BOOL
-- On LET reduce production c_keyword -> BOOL
-- On LEMMA reduce production c_keyword -> BOOL
-- On LE reduce production c_keyword -> BOOL
-- On LBRACE reduce production c_keyword -> BOOL
-- On LAMBDA reduce production c_keyword -> BOOL
-- On LABEL reduce production c_keyword -> BOOL
-- On INVARIANT reduce production c_keyword -> BOOL
-- On INTER reduce production c_keyword -> BOOL
-- On INTEGER reduce production c_keyword -> BOOL
-- On INT reduce production c_keyword -> BOOL
-- On INITIALIZED reduce production c_keyword -> BOOL
-- On INDUCTIVE reduce production c_keyword -> BOOL
-- On INCLUDE reduce production c_keyword -> BOOL
-- On IMPLIES reduce production c_keyword -> BOOL
-- On IMPACT reduce production c_keyword -> BOOL
-- On IFF reduce production c_keyword -> BOOL
-- On IF reduce production c_keyword -> BOOL
-- On IDENTIFIER reduce production c_keyword -> BOOL
-- On HATHAT reduce production c_keyword -> BOOL
-- On HAT reduce production c_keyword -> BOOL
-- On GTGT reduce production c_keyword -> BOOL
-- On GT reduce production c_keyword -> BOOL
-- On GLOBAL reduce production c_keyword -> BOOL
-- On GHOST reduce production c_keyword -> BOOL
-- On GE reduce production c_keyword -> BOOL
-- On FUNCTION reduce production c_keyword -> BOOL
-- On FROM reduce production c_keyword -> BOOL
-- On FRESH reduce production c_keyword -> BOOL
-- On FREES reduce production c_keyword -> BOOL
-- On FREEABLE reduce production c_keyword -> BOOL
-- On FORALL reduce production c_keyword -> BOOL
-- On FOR reduce production c_keyword -> BOOL
-- On FLOAT reduce production c_keyword -> BOOL
-- On FALSE reduce production c_keyword -> BOOL
-- On EXT_LET reduce production c_keyword -> BOOL
-- On EXT_AT reduce production c_keyword -> BOOL
-- On EXITS reduce production c_keyword -> BOOL
-- On EXISTS reduce production c_keyword -> BOOL
-- On EQUAL reduce production c_keyword -> BOOL
-- On EQ reduce production c_keyword -> BOOL
-- On EOF reduce production c_keyword -> BOOL
-- On ENUM reduce production c_keyword -> BOOL
-- On ENSURES reduce production c_keyword -> BOOL
-- On EMPTY reduce production c_keyword -> BOOL
-- On ELSE reduce production c_keyword -> BOOL
-- On DYNAMIC reduce production c_keyword -> BOOL
-- On DOUBLE reduce production c_keyword -> BOOL
-- On DOTDOTDOT reduce production c_keyword -> BOOL
-- On DOTDOT reduce production c_keyword -> BOOL
-- On DOT reduce production c_keyword -> BOOL
-- On DOLLAR reduce production c_keyword -> BOOL
-- On DISJOINT reduce production c_keyword -> BOOL
-- On DECREASES reduce production c_keyword -> BOOL
-- On DANGLING reduce production c_keyword -> BOOL
-- On CUSTOM reduce production c_keyword -> BOOL
-- On CONTRACT reduce production c_keyword -> BOOL
-- On CONTINUES reduce production c_keyword -> BOOL
-- On CONSTANT10 reduce production c_keyword -> BOOL
-- On CONSTANT reduce production c_keyword -> BOOL
-- On CONST reduce production c_keyword -> BOOL
-- On COMPLETE reduce production c_keyword -> BOOL
-- On COMMA reduce production c_keyword -> BOOL
-- On COLONGT reduce production c_keyword -> BOOL
-- On COLONCOLON reduce production c_keyword -> BOOL
-- On COLON2 reduce production c_keyword -> BOOL
-- On COLON reduce production c_keyword -> BOOL
-- On CHAR reduce production c_keyword -> BOOL
-- On CASE reduce production c_keyword -> BOOL
-- On BSUNION reduce production c_keyword -> BOOL
-- On BSTYPE reduce production c_keyword -> BOOL
-- On BREAKS reduce production c_keyword -> BOOL
-- On BOOLEAN reduce production c_keyword -> BOOL
-- On BOOL reduce production c_keyword -> BOOL
-- On BLOCK_LENGTH reduce production c_keyword -> BOOL
-- On BIMPLIES reduce production c_keyword -> BOOL
-- On BIFF reduce production c_keyword -> BOOL
-- On BEHAVIORS reduce production c_keyword -> BOOL
-- On BEHAVIOR reduce production c_keyword -> BOOL
-- On BASE_ADDR reduce production c_keyword -> BOOL
-- On AXIOMATIC reduce production c_keyword -> BOOL
-- On AXIOM reduce production c_keyword -> BOOL
-- On AUTOMATIC reduce production c_keyword -> BOOL
-- On AT reduce production c_keyword -> BOOL
-- On ASSUMES reduce production c_keyword -> BOOL
-- On ASSIGNS reduce production c_keyword -> BOOL
-- On ASSERT reduce production c_keyword -> BOOL
-- On ARROW reduce production c_keyword -> BOOL
-- On AND reduce production c_keyword -> BOOL
-- On AMP reduce production c_keyword -> BOOL
-- On ALLOCATION reduce production c_keyword -> BOOL
-- On ALLOCATES reduce production c_keyword -> BOOL
-- On ALLOCABLE reduce production c_keyword -> BOOL

State 64:
## Known stack suffix:
## BEHAVIORS
## LR(1) items:
is_acsl_other -> BEHAVIORS . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_other -> BEHAVIORS
-- On WITH reduce production is_acsl_other -> BEHAVIORS
-- On VOLATILE reduce production is_acsl_other -> BEHAVIORS
-- On VOID reduce production is_acsl_other -> BEHAVIORS
-- On VARIANT reduce production is_acsl_other -> BEHAVIORS
-- On VALID_READ reduce production is_acsl_other -> BEHAVIORS
-- On VALID_RANGE reduce production is_acsl_other -> BEHAVIORS
-- On VALID_INDEX reduce production is_acsl_other -> BEHAVIORS
-- On VALID reduce production is_acsl_other -> BEHAVIORS
-- On UNSIGNED reduce production is_acsl_other -> BEHAVIORS
-- On UNION reduce production is_acsl_other -> BEHAVIORS
-- On UNALLOCATED reduce production is_acsl_other -> BEHAVIORS
-- On TYPEOF reduce production is_acsl_other -> BEHAVIORS
-- On TYPENAME reduce production is_acsl_other -> BEHAVIORS
-- On TYPE reduce production is_acsl_other -> BEHAVIORS
-- On TRUE reduce production is_acsl_other -> BEHAVIORS
-- On TILDE reduce production is_acsl_other -> BEHAVIORS
-- On TERMINATES reduce production is_acsl_other -> BEHAVIORS
-- On STRUCT reduce production is_acsl_other -> BEHAVIORS
-- On STRING_LITERAL reduce production is_acsl_other -> BEHAVIORS
-- On STATIC reduce production is_acsl_other -> BEHAVIORS
-- On STAR reduce production is_acsl_other -> BEHAVIORS
-- On SLICE reduce production is_acsl_other -> BEHAVIORS
-- On SLASH reduce production is_acsl_other -> BEHAVIORS
-- On SIZEOF reduce production is_acsl_other -> BEHAVIORS
-- On SIGNED reduce production is_acsl_other -> BEHAVIORS
-- On SHORT reduce production is_acsl_other -> BEHAVIORS
-- On SEPARATED reduce production is_acsl_other -> BEHAVIORS
-- On SEMICOLON reduce production is_acsl_other -> BEHAVIORS
-- On RSQUARE reduce production is_acsl_other -> BEHAVIORS
-- On RPAR reduce production is_acsl_other -> BEHAVIORS
-- On RETURNS reduce production is_acsl_other -> BEHAVIORS
-- On RESULT reduce production is_acsl_other -> BEHAVIORS
-- On REQUIRES reduce production is_acsl_other -> BEHAVIORS
-- On REGISTER reduce production is_acsl_other -> BEHAVIORS
-- On REAL reduce production is_acsl_other -> BEHAVIORS
-- On READS reduce production is_acsl_other -> BEHAVIORS
-- On RBRACE reduce production is_acsl_other -> BEHAVIORS
-- On QUESTION reduce production is_acsl_other -> BEHAVIORS
-- On PREDICATE reduce production is_acsl_other -> BEHAVIORS
-- On PRAGMA reduce production is_acsl_other -> BEHAVIORS
-- On PLUS reduce production is_acsl_other -> BEHAVIORS
-- On PIPE reduce production is_acsl_other -> BEHAVIORS
-- On PERCENT reduce production is_acsl_other -> BEHAVIORS
-- On OR reduce production is_acsl_other -> BEHAVIORS
-- On OLD reduce production is_acsl_other -> BEHAVIORS
-- On OFFSET reduce production is_acsl_other -> BEHAVIORS
-- On NULL reduce production is_acsl_other -> BEHAVIORS
-- On NOTHING reduce production is_acsl_other -> BEHAVIORS
-- On NOT reduce production is_acsl_other -> BEHAVIORS
-- On NE reduce production is_acsl_other -> BEHAVIORS
-- On MODULE reduce production is_acsl_other -> BEHAVIORS
-- On MODEL reduce production is_acsl_other -> BEHAVIORS
-- On MINUS reduce production is_acsl_other -> BEHAVIORS
-- On LTLT reduce production is_acsl_other -> BEHAVIORS
-- On LTCOLON reduce production is_acsl_other -> BEHAVIORS
-- On LT reduce production is_acsl_other -> BEHAVIORS
-- On LSQUARE reduce production is_acsl_other -> BEHAVIORS
-- On LPAR reduce production is_acsl_other -> BEHAVIORS
-- On LOOP reduce production is_acsl_other -> BEHAVIORS
-- On LONG reduce production is_acsl_other -> BEHAVIORS
-- On LOGIC reduce production is_acsl_other -> BEHAVIORS
-- On LET reduce production is_acsl_other -> BEHAVIORS
-- On LEMMA reduce production is_acsl_other -> BEHAVIORS
-- On LE reduce production is_acsl_other -> BEHAVIORS
-- On LBRACE reduce production is_acsl_other -> BEHAVIORS
-- On LAMBDA reduce production is_acsl_other -> BEHAVIORS
-- On LABEL reduce production is_acsl_other -> BEHAVIORS
-- On INVARIANT reduce production is_acsl_other -> BEHAVIORS
-- On INTER reduce production is_acsl_other -> BEHAVIORS
-- On INTEGER reduce production is_acsl_other -> BEHAVIORS
-- On INT reduce production is_acsl_other -> BEHAVIORS
-- On INITIALIZED reduce production is_acsl_other -> BEHAVIORS
-- On INDUCTIVE reduce production is_acsl_other -> BEHAVIORS
-- On INCLUDE reduce production is_acsl_other -> BEHAVIORS
-- On IMPLIES reduce production is_acsl_other -> BEHAVIORS
-- On IMPACT reduce production is_acsl_other -> BEHAVIORS
-- On IFF reduce production is_acsl_other -> BEHAVIORS
-- On IF reduce production is_acsl_other -> BEHAVIORS
-- On IDENTIFIER reduce production is_acsl_other -> BEHAVIORS
-- On HATHAT reduce production is_acsl_other -> BEHAVIORS
-- On HAT reduce production is_acsl_other -> BEHAVIORS
-- On GTGT reduce production is_acsl_other -> BEHAVIORS
-- On GT reduce production is_acsl_other -> BEHAVIORS
-- On GLOBAL reduce production is_acsl_other -> BEHAVIORS
-- On GHOST reduce production is_acsl_other -> BEHAVIORS
-- On GE reduce production is_acsl_other -> BEHAVIORS
-- On FUNCTION reduce production is_acsl_other -> BEHAVIORS
-- On FROM reduce production is_acsl_other -> BEHAVIORS
-- On FRESH reduce production is_acsl_other -> BEHAVIORS
-- On FREES reduce production is_acsl_other -> BEHAVIORS
-- On FREEABLE reduce production is_acsl_other -> BEHAVIORS
-- On FORALL reduce production is_acsl_other -> BEHAVIORS
-- On FOR reduce production is_acsl_other -> BEHAVIORS
-- On FLOAT reduce production is_acsl_other -> BEHAVIORS
-- On FALSE reduce production is_acsl_other -> BEHAVIORS
-- On EXT_LET reduce production is_acsl_other -> BEHAVIORS
-- On EXT_AT reduce production is_acsl_other -> BEHAVIORS
-- On EXITS reduce production is_acsl_other -> BEHAVIORS
-- On EXISTS reduce production is_acsl_other -> BEHAVIORS
-- On EQUAL reduce production is_acsl_other -> BEHAVIORS
-- On EQ reduce production is_acsl_other -> BEHAVIORS
-- On EOF reduce production is_acsl_other -> BEHAVIORS
-- On ENUM reduce production is_acsl_other -> BEHAVIORS
-- On ENSURES reduce production is_acsl_other -> BEHAVIORS
-- On EMPTY reduce production is_acsl_other -> BEHAVIORS
-- On ELSE reduce production is_acsl_other -> BEHAVIORS
-- On DYNAMIC reduce production is_acsl_other -> BEHAVIORS
-- On DOUBLE reduce production is_acsl_other -> BEHAVIORS
-- On DOTDOTDOT reduce production is_acsl_other -> BEHAVIORS
-- On DOTDOT reduce production is_acsl_other -> BEHAVIORS
-- On DOT reduce production is_acsl_other -> BEHAVIORS
-- On DOLLAR reduce production is_acsl_other -> BEHAVIORS
-- On DISJOINT reduce production is_acsl_other -> BEHAVIORS
-- On DECREASES reduce production is_acsl_other -> BEHAVIORS
-- On DANGLING reduce production is_acsl_other -> BEHAVIORS
-- On CUSTOM reduce production is_acsl_other -> BEHAVIORS
-- On CONTRACT reduce production is_acsl_other -> BEHAVIORS
-- On CONTINUES reduce production is_acsl_other -> BEHAVIORS
-- On CONSTANT10 reduce production is_acsl_other -> BEHAVIORS
-- On CONSTANT reduce production is_acsl_other -> BEHAVIORS
-- On CONST reduce production is_acsl_other -> BEHAVIORS
-- On COMPLETE reduce production is_acsl_other -> BEHAVIORS
-- On COMMA reduce production is_acsl_other -> BEHAVIORS
-- On COLONGT reduce production is_acsl_other -> BEHAVIORS
-- On COLONCOLON reduce production is_acsl_other -> BEHAVIORS
-- On COLON2 reduce production is_acsl_other -> BEHAVIORS
-- On COLON reduce production is_acsl_other -> BEHAVIORS
-- On CHAR reduce production is_acsl_other -> BEHAVIORS
-- On CASE reduce production is_acsl_other -> BEHAVIORS
-- On BSUNION reduce production is_acsl_other -> BEHAVIORS
-- On BSTYPE reduce production is_acsl_other -> BEHAVIORS
-- On BREAKS reduce production is_acsl_other -> BEHAVIORS
-- On BOOLEAN reduce production is_acsl_other -> BEHAVIORS
-- On BOOL reduce production is_acsl_other -> BEHAVIORS
-- On BLOCK_LENGTH reduce production is_acsl_other -> BEHAVIORS
-- On BIMPLIES reduce production is_acsl_other -> BEHAVIORS
-- On BIFF reduce production is_acsl_other -> BEHAVIORS
-- On BEHAVIORS reduce production is_acsl_other -> BEHAVIORS
-- On BEHAVIOR reduce production is_acsl_other -> BEHAVIORS
-- On BASE_ADDR reduce production is_acsl_other -> BEHAVIORS
-- On AXIOMATIC reduce production is_acsl_other -> BEHAVIORS
-- On AXIOM reduce production is_acsl_other -> BEHAVIORS
-- On AUTOMATIC reduce production is_acsl_other -> BEHAVIORS
-- On AT reduce production is_acsl_other -> BEHAVIORS
-- On ASSUMES reduce production is_acsl_other -> BEHAVIORS
-- On ASSIGNS reduce production is_acsl_other -> BEHAVIORS
-- On ASSERT reduce production is_acsl_other -> BEHAVIORS
-- On ARROW reduce production is_acsl_other -> BEHAVIORS
-- On AND reduce production is_acsl_other -> BEHAVIORS
-- On AMP reduce production is_acsl_other -> BEHAVIORS
-- On ALLOCATION reduce production is_acsl_other -> BEHAVIORS
-- On ALLOCATES reduce production is_acsl_other -> BEHAVIORS
-- On ALLOCABLE reduce production is_acsl_other -> BEHAVIORS

State 65:
## Known stack suffix:
## BEHAVIOR
## LR(1) items:
is_acsl_spec -> BEHAVIOR . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_spec -> BEHAVIOR
-- On WITH reduce production is_acsl_spec -> BEHAVIOR
-- On VOLATILE reduce production is_acsl_spec -> BEHAVIOR
-- On VOID reduce production is_acsl_spec -> BEHAVIOR
-- On VARIANT reduce production is_acsl_spec -> BEHAVIOR
-- On VALID_READ reduce production is_acsl_spec -> BEHAVIOR
-- On VALID_RANGE reduce production is_acsl_spec -> BEHAVIOR
-- On VALID_INDEX reduce production is_acsl_spec -> BEHAVIOR
-- On VALID reduce production is_acsl_spec -> BEHAVIOR
-- On UNSIGNED reduce production is_acsl_spec -> BEHAVIOR
-- On UNION reduce production is_acsl_spec -> BEHAVIOR
-- On UNALLOCATED reduce production is_acsl_spec -> BEHAVIOR
-- On TYPEOF reduce production is_acsl_spec -> BEHAVIOR
-- On TYPENAME reduce production is_acsl_spec -> BEHAVIOR
-- On TYPE reduce production is_acsl_spec -> BEHAVIOR
-- On TRUE reduce production is_acsl_spec -> BEHAVIOR
-- On TILDE reduce production is_acsl_spec -> BEHAVIOR
-- On TERMINATES reduce production is_acsl_spec -> BEHAVIOR
-- On STRUCT reduce production is_acsl_spec -> BEHAVIOR
-- On STRING_LITERAL reduce production is_acsl_spec -> BEHAVIOR
-- On STATIC reduce production is_acsl_spec -> BEHAVIOR
-- On STAR reduce production is_acsl_spec -> BEHAVIOR
-- On SLICE reduce production is_acsl_spec -> BEHAVIOR
-- On SLASH reduce production is_acsl_spec -> BEHAVIOR
-- On SIZEOF reduce production is_acsl_spec -> BEHAVIOR
-- On SIGNED reduce production is_acsl_spec -> BEHAVIOR
-- On SHORT reduce production is_acsl_spec -> BEHAVIOR
-- On SEPARATED reduce production is_acsl_spec -> BEHAVIOR
-- On SEMICOLON reduce production is_acsl_spec -> BEHAVIOR
-- On RSQUARE reduce production is_acsl_spec -> BEHAVIOR
-- On RPAR reduce production is_acsl_spec -> BEHAVIOR
-- On RETURNS reduce production is_acsl_spec -> BEHAVIOR
-- On RESULT reduce production is_acsl_spec -> BEHAVIOR
-- On REQUIRES reduce production is_acsl_spec -> BEHAVIOR
-- On REGISTER reduce production is_acsl_spec -> BEHAVIOR
-- On REAL reduce production is_acsl_spec -> BEHAVIOR
-- On READS reduce production is_acsl_spec -> BEHAVIOR
-- On RBRACE reduce production is_acsl_spec -> BEHAVIOR
-- On QUESTION reduce production is_acsl_spec -> BEHAVIOR
-- On PREDICATE reduce production is_acsl_spec -> BEHAVIOR
-- On PRAGMA reduce production is_acsl_spec -> BEHAVIOR
-- On PLUS reduce production is_acsl_spec -> BEHAVIOR
-- On PIPE reduce production is_acsl_spec -> BEHAVIOR
-- On PERCENT reduce production is_acsl_spec -> BEHAVIOR
-- On OR reduce production is_acsl_spec -> BEHAVIOR
-- On OLD reduce production is_acsl_spec -> BEHAVIOR
-- On OFFSET reduce production is_acsl_spec -> BEHAVIOR
-- On NULL reduce production is_acsl_spec -> BEHAVIOR
-- On NOTHING reduce production is_acsl_spec -> BEHAVIOR
-- On NOT reduce production is_acsl_spec -> BEHAVIOR
-- On NE reduce production is_acsl_spec -> BEHAVIOR
-- On MODULE reduce production is_acsl_spec -> BEHAVIOR
-- On MODEL reduce production is_acsl_spec -> BEHAVIOR
-- On MINUS reduce production is_acsl_spec -> BEHAVIOR
-- On LTLT reduce production is_acsl_spec -> BEHAVIOR
-- On LTCOLON reduce production is_acsl_spec -> BEHAVIOR
-- On LT reduce production is_acsl_spec -> BEHAVIOR
-- On LSQUARE reduce production is_acsl_spec -> BEHAVIOR
-- On LPAR reduce production is_acsl_spec -> BEHAVIOR
-- On LOOP reduce production is_acsl_spec -> BEHAVIOR
-- On LONG reduce production is_acsl_spec -> BEHAVIOR
-- On LOGIC reduce production is_acsl_spec -> BEHAVIOR
-- On LET reduce production is_acsl_spec -> BEHAVIOR
-- On LEMMA reduce production is_acsl_spec -> BEHAVIOR
-- On LE reduce production is_acsl_spec -> BEHAVIOR
-- On LBRACE reduce production is_acsl_spec -> BEHAVIOR
-- On LAMBDA reduce production is_acsl_spec -> BEHAVIOR
-- On LABEL reduce production is_acsl_spec -> BEHAVIOR
-- On INVARIANT reduce production is_acsl_spec -> BEHAVIOR
-- On INTER reduce production is_acsl_spec -> BEHAVIOR
-- On INTEGER reduce production is_acsl_spec -> BEHAVIOR
-- On INT reduce production is_acsl_spec -> BEHAVIOR
-- On INITIALIZED reduce production is_acsl_spec -> BEHAVIOR
-- On INDUCTIVE reduce production is_acsl_spec -> BEHAVIOR
-- On INCLUDE reduce production is_acsl_spec -> BEHAVIOR
-- On IMPLIES reduce production is_acsl_spec -> BEHAVIOR
-- On IMPACT reduce production is_acsl_spec -> BEHAVIOR
-- On IFF reduce production is_acsl_spec -> BEHAVIOR
-- On IF reduce production is_acsl_spec -> BEHAVIOR
-- On IDENTIFIER reduce production is_acsl_spec -> BEHAVIOR
-- On HATHAT reduce production is_acsl_spec -> BEHAVIOR
-- On HAT reduce production is_acsl_spec -> BEHAVIOR
-- On GTGT reduce production is_acsl_spec -> BEHAVIOR
-- On GT reduce production is_acsl_spec -> BEHAVIOR
-- On GLOBAL reduce production is_acsl_spec -> BEHAVIOR
-- On GHOST reduce production is_acsl_spec -> BEHAVIOR
-- On GE reduce production is_acsl_spec -> BEHAVIOR
-- On FUNCTION reduce production is_acsl_spec -> BEHAVIOR
-- On FROM reduce production is_acsl_spec -> BEHAVIOR
-- On FRESH reduce production is_acsl_spec -> BEHAVIOR
-- On FREES reduce production is_acsl_spec -> BEHAVIOR
-- On FREEABLE reduce production is_acsl_spec -> BEHAVIOR
-- On FORALL reduce production is_acsl_spec -> BEHAVIOR
-- On FOR reduce production is_acsl_spec -> BEHAVIOR
-- On FLOAT reduce production is_acsl_spec -> BEHAVIOR
-- On FALSE reduce production is_acsl_spec -> BEHAVIOR
-- On EXT_LET reduce production is_acsl_spec -> BEHAVIOR
-- On EXT_AT reduce production is_acsl_spec -> BEHAVIOR
-- On EXITS reduce production is_acsl_spec -> BEHAVIOR
-- On EXISTS reduce production is_acsl_spec -> BEHAVIOR
-- On EQUAL reduce production is_acsl_spec -> BEHAVIOR
-- On EQ reduce production is_acsl_spec -> BEHAVIOR
-- On EOF reduce production is_acsl_spec -> BEHAVIOR
-- On ENUM reduce production is_acsl_spec -> BEHAVIOR
-- On ENSURES reduce production is_acsl_spec -> BEHAVIOR
-- On EMPTY reduce production is_acsl_spec -> BEHAVIOR
-- On ELSE reduce production is_acsl_spec -> BEHAVIOR
-- On DYNAMIC reduce production is_acsl_spec -> BEHAVIOR
-- On DOUBLE reduce production is_acsl_spec -> BEHAVIOR
-- On DOTDOTDOT reduce production is_acsl_spec -> BEHAVIOR
-- On DOTDOT reduce production is_acsl_spec -> BEHAVIOR
-- On DOT reduce production is_acsl_spec -> BEHAVIOR
-- On DOLLAR reduce production is_acsl_spec -> BEHAVIOR
-- On DISJOINT reduce production is_acsl_spec -> BEHAVIOR
-- On DECREASES reduce production is_acsl_spec -> BEHAVIOR
-- On DANGLING reduce production is_acsl_spec -> BEHAVIOR
-- On CUSTOM reduce production is_acsl_spec -> BEHAVIOR
-- On CONTRACT reduce production is_acsl_spec -> BEHAVIOR
-- On CONTINUES reduce production is_acsl_spec -> BEHAVIOR
-- On CONSTANT10 reduce production is_acsl_spec -> BEHAVIOR
-- On CONSTANT reduce production is_acsl_spec -> BEHAVIOR
-- On CONST reduce production is_acsl_spec -> BEHAVIOR
-- On COMPLETE reduce production is_acsl_spec -> BEHAVIOR
-- On COMMA reduce production is_acsl_spec -> BEHAVIOR
-- On COLONGT reduce production is_acsl_spec -> BEHAVIOR
-- On COLONCOLON reduce production is_acsl_spec -> BEHAVIOR
-- On COLON2 reduce production is_acsl_spec -> BEHAVIOR
-- On COLON reduce production is_acsl_spec -> BEHAVIOR
-- On CHAR reduce production is_acsl_spec -> BEHAVIOR
-- On CASE reduce production is_acsl_spec -> BEHAVIOR
-- On BSUNION reduce production is_acsl_spec -> BEHAVIOR
-- On BSTYPE reduce production is_acsl_spec -> BEHAVIOR
-- On BREAKS reduce production is_acsl_spec -> BEHAVIOR
-- On BOOLEAN reduce production is_acsl_spec -> BEHAVIOR
-- On BOOL reduce production is_acsl_spec -> BEHAVIOR
-- On BLOCK_LENGTH reduce production is_acsl_spec -> BEHAVIOR
-- On BIMPLIES reduce production is_acsl_spec -> BEHAVIOR
-- On BIFF reduce production is_acsl_spec -> BEHAVIOR
-- On BEHAVIORS reduce production is_acsl_spec -> BEHAVIOR
-- On BEHAVIOR reduce production is_acsl_spec -> BEHAVIOR
-- On BASE_ADDR reduce production is_acsl_spec -> BEHAVIOR
-- On AXIOMATIC reduce production is_acsl_spec -> BEHAVIOR
-- On AXIOM reduce production is_acsl_spec -> BEHAVIOR
-- On AUTOMATIC reduce production is_acsl_spec -> BEHAVIOR
-- On AT reduce production is_acsl_spec -> BEHAVIOR
-- On ASSUMES reduce production is_acsl_spec -> BEHAVIOR
-- On ASSIGNS reduce production is_acsl_spec -> BEHAVIOR
-- On ASSERT reduce production is_acsl_spec -> BEHAVIOR
-- On ARROW reduce production is_acsl_spec -> BEHAVIOR
-- On AND reduce production is_acsl_spec -> BEHAVIOR
-- On AMP reduce production is_acsl_spec -> BEHAVIOR
-- On ALLOCATION reduce production is_acsl_spec -> BEHAVIOR
-- On ALLOCATES reduce production is_acsl_spec -> BEHAVIOR
-- On ALLOCABLE reduce production is_acsl_spec -> BEHAVIOR

State 66:
## Known stack suffix:
## AXIOMATIC
## LR(1) items:
is_acsl_decl_or_code_annot -> AXIOMATIC . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On WITH reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On VOLATILE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On VOID reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On VARIANT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On VALID_READ reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On VALID_RANGE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On VALID_INDEX reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On VALID reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On UNSIGNED reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On UNION reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On UNALLOCATED reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On TYPEOF reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On TYPENAME reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On TYPE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On TRUE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On TILDE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On TERMINATES reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On STRUCT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On STRING_LITERAL reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On STATIC reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On STAR reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On SLICE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On SLASH reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On SIZEOF reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On SIGNED reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On SHORT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On SEPARATED reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On SEMICOLON reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On RSQUARE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On RPAR reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On RETURNS reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On RESULT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On REQUIRES reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On REGISTER reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On REAL reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On READS reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On RBRACE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On QUESTION reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On PREDICATE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On PRAGMA reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On PLUS reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On PIPE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On PERCENT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On OR reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On OLD reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On OFFSET reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On NULL reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On NOTHING reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On NOT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On NE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On MODULE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On MODEL reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On MINUS reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On LTLT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On LTCOLON reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On LT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On LSQUARE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On LPAR reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On LOOP reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On LONG reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On LOGIC reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On LET reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On LEMMA reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On LE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On LBRACE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On LAMBDA reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On LABEL reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On INVARIANT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On INTER reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On INTEGER reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On INT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On INITIALIZED reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On INDUCTIVE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On INCLUDE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On IMPLIES reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On IMPACT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On IFF reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On IF reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On IDENTIFIER reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On HATHAT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On HAT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On GTGT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On GT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On GLOBAL reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On GHOST reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On GE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On FUNCTION reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On FROM reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On FRESH reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On FREES reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On FREEABLE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On FORALL reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On FOR reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On FLOAT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On FALSE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On EXT_LET reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On EXT_AT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On EXITS reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On EXISTS reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On EQUAL reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On EQ reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On EOF reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On ENUM reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On ENSURES reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On EMPTY reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On ELSE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On DYNAMIC reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On DOUBLE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On DOTDOTDOT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On DOTDOT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On DOT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On DOLLAR reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On DISJOINT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On DECREASES reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On DANGLING reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On CUSTOM reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On CONTRACT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On CONTINUES reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On CONSTANT10 reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On CONSTANT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On CONST reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On COMPLETE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On COMMA reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On COLONGT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On COLONCOLON reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On COLON2 reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On COLON reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On CHAR reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On CASE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On BSUNION reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On BSTYPE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On BREAKS reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On BOOLEAN reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On BOOL reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On BLOCK_LENGTH reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On BIMPLIES reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On BIFF reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On BEHAVIORS reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On BEHAVIOR reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On BASE_ADDR reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On AXIOMATIC reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On AXIOM reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On AUTOMATIC reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On AT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On ASSUMES reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On ASSIGNS reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On ASSERT reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On ARROW reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On AND reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On AMP reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On ALLOCATION reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On ALLOCATES reduce production is_acsl_decl_or_code_annot -> AXIOMATIC
-- On ALLOCABLE reduce production is_acsl_decl_or_code_annot -> AXIOMATIC

State 67:
## Known stack suffix:
## AXIOM
## LR(1) items:
is_acsl_decl_or_code_annot -> AXIOM . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On WITH reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On VOLATILE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On VOID reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On VARIANT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On VALID_READ reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On VALID_RANGE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On VALID_INDEX reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On VALID reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On UNSIGNED reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On UNION reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On UNALLOCATED reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On TYPEOF reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On TYPENAME reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On TYPE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On TRUE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On TILDE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On TERMINATES reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On STRUCT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On STRING_LITERAL reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On STATIC reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On STAR reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On SLICE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On SLASH reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On SIZEOF reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On SIGNED reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On SHORT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On SEPARATED reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On SEMICOLON reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On RSQUARE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On RPAR reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On RETURNS reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On RESULT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On REQUIRES reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On REGISTER reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On REAL reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On READS reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On RBRACE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On QUESTION reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On PREDICATE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On PRAGMA reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On PLUS reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On PIPE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On PERCENT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On OR reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On OLD reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On OFFSET reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On NULL reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On NOTHING reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On NOT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On NE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On MODULE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On MODEL reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On MINUS reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On LTLT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On LTCOLON reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On LT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On LSQUARE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On LPAR reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On LOOP reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On LONG reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On LOGIC reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On LET reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On LEMMA reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On LE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On LBRACE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On LAMBDA reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On LABEL reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On INVARIANT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On INTER reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On INTEGER reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On INT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On INITIALIZED reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On INDUCTIVE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On INCLUDE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On IMPLIES reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On IMPACT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On IFF reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On IF reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On IDENTIFIER reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On HATHAT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On HAT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On GTGT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On GT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On GLOBAL reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On GHOST reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On GE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On FUNCTION reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On FROM reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On FRESH reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On FREES reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On FREEABLE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On FORALL reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On FOR reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On FLOAT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On FALSE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On EXT_LET reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On EXT_AT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On EXITS reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On EXISTS reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On EQUAL reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On EQ reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On EOF reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On ENUM reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On ENSURES reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On EMPTY reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On ELSE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On DYNAMIC reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On DOUBLE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On DOTDOTDOT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On DOTDOT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On DOT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On DOLLAR reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On DISJOINT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On DECREASES reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On DANGLING reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On CUSTOM reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On CONTRACT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On CONTINUES reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On CONSTANT10 reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On CONSTANT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On CONST reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On COMPLETE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On COMMA reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On COLONGT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On COLONCOLON reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On COLON2 reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On COLON reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On CHAR reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On CASE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On BSUNION reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On BSTYPE reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On BREAKS reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On BOOLEAN reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On BOOL reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On BLOCK_LENGTH reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On BIMPLIES reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On BIFF reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On BEHAVIORS reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On BEHAVIOR reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On BASE_ADDR reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On AXIOMATIC reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On AXIOM reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On AUTOMATIC reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On AT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On ASSUMES reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On ASSIGNS reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On ASSERT reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On ARROW reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On AND reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On AMP reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On ALLOCATION reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On ALLOCATES reduce production is_acsl_decl_or_code_annot -> AXIOM
-- On ALLOCABLE reduce production is_acsl_decl_or_code_annot -> AXIOM

State 68:
## Known stack suffix:
## ASSUMES
## LR(1) items:
is_acsl_decl_or_code_annot -> ASSUMES . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On WITH reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On VOLATILE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On VOID reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On VARIANT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On VALID_READ reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On VALID_RANGE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On VALID_INDEX reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On VALID reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On UNSIGNED reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On UNION reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On UNALLOCATED reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On TYPEOF reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On TYPENAME reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On TYPE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On TRUE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On TILDE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On TERMINATES reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On STRUCT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On STRING_LITERAL reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On STATIC reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On STAR reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On SLICE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On SLASH reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On SIZEOF reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On SIGNED reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On SHORT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On SEPARATED reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On SEMICOLON reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On RSQUARE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On RPAR reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On RETURNS reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On RESULT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On REQUIRES reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On REGISTER reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On REAL reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On READS reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On RBRACE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On QUESTION reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On PREDICATE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On PRAGMA reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On PLUS reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On PIPE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On PERCENT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On OR reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On OLD reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On OFFSET reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On NULL reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On NOTHING reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On NOT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On NE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On MODULE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On MODEL reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On MINUS reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On LTLT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On LTCOLON reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On LT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On LSQUARE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On LPAR reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On LOOP reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On LONG reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On LOGIC reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On LET reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On LEMMA reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On LE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On LBRACE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On LAMBDA reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On LABEL reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On INVARIANT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On INTER reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On INTEGER reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On INT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On INITIALIZED reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On INDUCTIVE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On INCLUDE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On IMPLIES reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On IMPACT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On IFF reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On IF reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On IDENTIFIER reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On HATHAT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On HAT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On GTGT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On GT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On GLOBAL reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On GHOST reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On GE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On FUNCTION reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On FROM reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On FRESH reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On FREES reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On FREEABLE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On FORALL reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On FOR reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On FLOAT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On FALSE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On EXT_LET reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On EXT_AT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On EXITS reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On EXISTS reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On EQUAL reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On EQ reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On EOF reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On ENUM reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On ENSURES reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On EMPTY reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On ELSE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On DYNAMIC reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On DOUBLE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On DOTDOTDOT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On DOTDOT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On DOT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On DOLLAR reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On DISJOINT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On DECREASES reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On DANGLING reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On CUSTOM reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On CONTRACT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On CONTINUES reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On CONSTANT10 reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On CONSTANT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On CONST reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On COMPLETE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On COMMA reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On COLONGT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On COLONCOLON reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On COLON2 reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On COLON reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On CHAR reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On CASE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On BSUNION reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On BSTYPE reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On BREAKS reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On BOOLEAN reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On BOOL reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On BLOCK_LENGTH reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On BIMPLIES reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On BIFF reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On BEHAVIORS reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On BEHAVIOR reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On BASE_ADDR reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On AXIOMATIC reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On AXIOM reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On AUTOMATIC reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On AT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On ASSUMES reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On ASSIGNS reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On ASSERT reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On ARROW reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On AND reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On AMP reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On ALLOCATION reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On ALLOCATES reduce production is_acsl_decl_or_code_annot -> ASSUMES
-- On ALLOCABLE reduce production is_acsl_decl_or_code_annot -> ASSUMES

State 69:
## Known stack suffix:
## ASSIGNS
## LR(1) items:
is_acsl_spec -> ASSIGNS . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_spec -> ASSIGNS
-- On WITH reduce production is_acsl_spec -> ASSIGNS
-- On VOLATILE reduce production is_acsl_spec -> ASSIGNS
-- On VOID reduce production is_acsl_spec -> ASSIGNS
-- On VARIANT reduce production is_acsl_spec -> ASSIGNS
-- On VALID_READ reduce production is_acsl_spec -> ASSIGNS
-- On VALID_RANGE reduce production is_acsl_spec -> ASSIGNS
-- On VALID_INDEX reduce production is_acsl_spec -> ASSIGNS
-- On VALID reduce production is_acsl_spec -> ASSIGNS
-- On UNSIGNED reduce production is_acsl_spec -> ASSIGNS
-- On UNION reduce production is_acsl_spec -> ASSIGNS
-- On UNALLOCATED reduce production is_acsl_spec -> ASSIGNS
-- On TYPEOF reduce production is_acsl_spec -> ASSIGNS
-- On TYPENAME reduce production is_acsl_spec -> ASSIGNS
-- On TYPE reduce production is_acsl_spec -> ASSIGNS
-- On TRUE reduce production is_acsl_spec -> ASSIGNS
-- On TILDE reduce production is_acsl_spec -> ASSIGNS
-- On TERMINATES reduce production is_acsl_spec -> ASSIGNS
-- On STRUCT reduce production is_acsl_spec -> ASSIGNS
-- On STRING_LITERAL reduce production is_acsl_spec -> ASSIGNS
-- On STATIC reduce production is_acsl_spec -> ASSIGNS
-- On STAR reduce production is_acsl_spec -> ASSIGNS
-- On SLICE reduce production is_acsl_spec -> ASSIGNS
-- On SLASH reduce production is_acsl_spec -> ASSIGNS
-- On SIZEOF reduce production is_acsl_spec -> ASSIGNS
-- On SIGNED reduce production is_acsl_spec -> ASSIGNS
-- On SHORT reduce production is_acsl_spec -> ASSIGNS
-- On SEPARATED reduce production is_acsl_spec -> ASSIGNS
-- On SEMICOLON reduce production is_acsl_spec -> ASSIGNS
-- On RSQUARE reduce production is_acsl_spec -> ASSIGNS
-- On RPAR reduce production is_acsl_spec -> ASSIGNS
-- On RETURNS reduce production is_acsl_spec -> ASSIGNS
-- On RESULT reduce production is_acsl_spec -> ASSIGNS
-- On REQUIRES reduce production is_acsl_spec -> ASSIGNS
-- On REGISTER reduce production is_acsl_spec -> ASSIGNS
-- On REAL reduce production is_acsl_spec -> ASSIGNS
-- On READS reduce production is_acsl_spec -> ASSIGNS
-- On RBRACE reduce production is_acsl_spec -> ASSIGNS
-- On QUESTION reduce production is_acsl_spec -> ASSIGNS
-- On PREDICATE reduce production is_acsl_spec -> ASSIGNS
-- On PRAGMA reduce production is_acsl_spec -> ASSIGNS
-- On PLUS reduce production is_acsl_spec -> ASSIGNS
-- On PIPE reduce production is_acsl_spec -> ASSIGNS
-- On PERCENT reduce production is_acsl_spec -> ASSIGNS
-- On OR reduce production is_acsl_spec -> ASSIGNS
-- On OLD reduce production is_acsl_spec -> ASSIGNS
-- On OFFSET reduce production is_acsl_spec -> ASSIGNS
-- On NULL reduce production is_acsl_spec -> ASSIGNS
-- On NOTHING reduce production is_acsl_spec -> ASSIGNS
-- On NOT reduce production is_acsl_spec -> ASSIGNS
-- On NE reduce production is_acsl_spec -> ASSIGNS
-- On MODULE reduce production is_acsl_spec -> ASSIGNS
-- On MODEL reduce production is_acsl_spec -> ASSIGNS
-- On MINUS reduce production is_acsl_spec -> ASSIGNS
-- On LTLT reduce production is_acsl_spec -> ASSIGNS
-- On LTCOLON reduce production is_acsl_spec -> ASSIGNS
-- On LT reduce production is_acsl_spec -> ASSIGNS
-- On LSQUARE reduce production is_acsl_spec -> ASSIGNS
-- On LPAR reduce production is_acsl_spec -> ASSIGNS
-- On LOOP reduce production is_acsl_spec -> ASSIGNS
-- On LONG reduce production is_acsl_spec -> ASSIGNS
-- On LOGIC reduce production is_acsl_spec -> ASSIGNS
-- On LET reduce production is_acsl_spec -> ASSIGNS
-- On LEMMA reduce production is_acsl_spec -> ASSIGNS
-- On LE reduce production is_acsl_spec -> ASSIGNS
-- On LBRACE reduce production is_acsl_spec -> ASSIGNS
-- On LAMBDA reduce production is_acsl_spec -> ASSIGNS
-- On LABEL reduce production is_acsl_spec -> ASSIGNS
-- On INVARIANT reduce production is_acsl_spec -> ASSIGNS
-- On INTER reduce production is_acsl_spec -> ASSIGNS
-- On INTEGER reduce production is_acsl_spec -> ASSIGNS
-- On INT reduce production is_acsl_spec -> ASSIGNS
-- On INITIALIZED reduce production is_acsl_spec -> ASSIGNS
-- On INDUCTIVE reduce production is_acsl_spec -> ASSIGNS
-- On INCLUDE reduce production is_acsl_spec -> ASSIGNS
-- On IMPLIES reduce production is_acsl_spec -> ASSIGNS
-- On IMPACT reduce production is_acsl_spec -> ASSIGNS
-- On IFF reduce production is_acsl_spec -> ASSIGNS
-- On IF reduce production is_acsl_spec -> ASSIGNS
-- On IDENTIFIER reduce production is_acsl_spec -> ASSIGNS
-- On HATHAT reduce production is_acsl_spec -> ASSIGNS
-- On HAT reduce production is_acsl_spec -> ASSIGNS
-- On GTGT reduce production is_acsl_spec -> ASSIGNS
-- On GT reduce production is_acsl_spec -> ASSIGNS
-- On GLOBAL reduce production is_acsl_spec -> ASSIGNS
-- On GHOST reduce production is_acsl_spec -> ASSIGNS
-- On GE reduce production is_acsl_spec -> ASSIGNS
-- On FUNCTION reduce production is_acsl_spec -> ASSIGNS
-- On FROM reduce production is_acsl_spec -> ASSIGNS
-- On FRESH reduce production is_acsl_spec -> ASSIGNS
-- On FREES reduce production is_acsl_spec -> ASSIGNS
-- On FREEABLE reduce production is_acsl_spec -> ASSIGNS
-- On FORALL reduce production is_acsl_spec -> ASSIGNS
-- On FOR reduce production is_acsl_spec -> ASSIGNS
-- On FLOAT reduce production is_acsl_spec -> ASSIGNS
-- On FALSE reduce production is_acsl_spec -> ASSIGNS
-- On EXT_LET reduce production is_acsl_spec -> ASSIGNS
-- On EXT_AT reduce production is_acsl_spec -> ASSIGNS
-- On EXITS reduce production is_acsl_spec -> ASSIGNS
-- On EXISTS reduce production is_acsl_spec -> ASSIGNS
-- On EQUAL reduce production is_acsl_spec -> ASSIGNS
-- On EQ reduce production is_acsl_spec -> ASSIGNS
-- On EOF reduce production is_acsl_spec -> ASSIGNS
-- On ENUM reduce production is_acsl_spec -> ASSIGNS
-- On ENSURES reduce production is_acsl_spec -> ASSIGNS
-- On EMPTY reduce production is_acsl_spec -> ASSIGNS
-- On ELSE reduce production is_acsl_spec -> ASSIGNS
-- On DYNAMIC reduce production is_acsl_spec -> ASSIGNS
-- On DOUBLE reduce production is_acsl_spec -> ASSIGNS
-- On DOTDOTDOT reduce production is_acsl_spec -> ASSIGNS
-- On DOTDOT reduce production is_acsl_spec -> ASSIGNS
-- On DOT reduce production is_acsl_spec -> ASSIGNS
-- On DOLLAR reduce production is_acsl_spec -> ASSIGNS
-- On DISJOINT reduce production is_acsl_spec -> ASSIGNS
-- On DECREASES reduce production is_acsl_spec -> ASSIGNS
-- On DANGLING reduce production is_acsl_spec -> ASSIGNS
-- On CUSTOM reduce production is_acsl_spec -> ASSIGNS
-- On CONTRACT reduce production is_acsl_spec -> ASSIGNS
-- On CONTINUES reduce production is_acsl_spec -> ASSIGNS
-- On CONSTANT10 reduce production is_acsl_spec -> ASSIGNS
-- On CONSTANT reduce production is_acsl_spec -> ASSIGNS
-- On CONST reduce production is_acsl_spec -> ASSIGNS
-- On COMPLETE reduce production is_acsl_spec -> ASSIGNS
-- On COMMA reduce production is_acsl_spec -> ASSIGNS
-- On COLONGT reduce production is_acsl_spec -> ASSIGNS
-- On COLONCOLON reduce production is_acsl_spec -> ASSIGNS
-- On COLON2 reduce production is_acsl_spec -> ASSIGNS
-- On COLON reduce production is_acsl_spec -> ASSIGNS
-- On CHAR reduce production is_acsl_spec -> ASSIGNS
-- On CASE reduce production is_acsl_spec -> ASSIGNS
-- On BSUNION reduce production is_acsl_spec -> ASSIGNS
-- On BSTYPE reduce production is_acsl_spec -> ASSIGNS
-- On BREAKS reduce production is_acsl_spec -> ASSIGNS
-- On BOOLEAN reduce production is_acsl_spec -> ASSIGNS
-- On BOOL reduce production is_acsl_spec -> ASSIGNS
-- On BLOCK_LENGTH reduce production is_acsl_spec -> ASSIGNS
-- On BIMPLIES reduce production is_acsl_spec -> ASSIGNS
-- On BIFF reduce production is_acsl_spec -> ASSIGNS
-- On BEHAVIORS reduce production is_acsl_spec -> ASSIGNS
-- On BEHAVIOR reduce production is_acsl_spec -> ASSIGNS
-- On BASE_ADDR reduce production is_acsl_spec -> ASSIGNS
-- On AXIOMATIC reduce production is_acsl_spec -> ASSIGNS
-- On AXIOM reduce production is_acsl_spec -> ASSIGNS
-- On AUTOMATIC reduce production is_acsl_spec -> ASSIGNS
-- On AT reduce production is_acsl_spec -> ASSIGNS
-- On ASSUMES reduce production is_acsl_spec -> ASSIGNS
-- On ASSIGNS reduce production is_acsl_spec -> ASSIGNS
-- On ASSERT reduce production is_acsl_spec -> ASSIGNS
-- On ARROW reduce production is_acsl_spec -> ASSIGNS
-- On AND reduce production is_acsl_spec -> ASSIGNS
-- On AMP reduce production is_acsl_spec -> ASSIGNS
-- On ALLOCATION reduce production is_acsl_spec -> ASSIGNS
-- On ALLOCATES reduce production is_acsl_spec -> ASSIGNS
-- On ALLOCABLE reduce production is_acsl_spec -> ASSIGNS

State 70:
## Known stack suffix:
## ASSERT
## LR(1) items:
is_acsl_decl_or_code_annot -> ASSERT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On WITH reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On VOLATILE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On VOID reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On VARIANT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On VALID_READ reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On VALID_RANGE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On VALID_INDEX reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On VALID reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On UNSIGNED reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On UNION reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On UNALLOCATED reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On TYPEOF reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On TYPENAME reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On TYPE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On TRUE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On TILDE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On TERMINATES reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On STRUCT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On STRING_LITERAL reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On STATIC reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On STAR reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On SLICE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On SLASH reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On SIZEOF reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On SIGNED reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On SHORT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On SEPARATED reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On SEMICOLON reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On RSQUARE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On RPAR reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On RETURNS reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On RESULT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On REQUIRES reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On REGISTER reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On REAL reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On READS reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On RBRACE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On QUESTION reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On PREDICATE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On PRAGMA reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On PLUS reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On PIPE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On PERCENT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On OR reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On OLD reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On OFFSET reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On NULL reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On NOTHING reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On NOT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On NE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On MODULE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On MODEL reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On MINUS reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On LTLT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On LTCOLON reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On LT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On LSQUARE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On LPAR reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On LOOP reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On LONG reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On LOGIC reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On LET reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On LEMMA reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On LE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On LBRACE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On LAMBDA reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On LABEL reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On INVARIANT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On INTER reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On INTEGER reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On INT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On INITIALIZED reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On INDUCTIVE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On INCLUDE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On IMPLIES reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On IMPACT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On IFF reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On IF reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On IDENTIFIER reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On HATHAT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On HAT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On GTGT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On GT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On GLOBAL reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On GHOST reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On GE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On FUNCTION reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On FROM reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On FRESH reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On FREES reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On FREEABLE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On FORALL reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On FOR reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On FLOAT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On FALSE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On EXT_LET reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On EXT_AT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On EXITS reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On EXISTS reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On EQUAL reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On EQ reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On EOF reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On ENUM reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On ENSURES reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On EMPTY reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On ELSE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On DYNAMIC reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On DOUBLE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On DOTDOTDOT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On DOTDOT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On DOT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On DOLLAR reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On DISJOINT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On DECREASES reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On DANGLING reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On CUSTOM reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On CONTRACT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On CONTINUES reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On CONSTANT10 reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On CONSTANT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On CONST reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On COMPLETE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On COMMA reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On COLONGT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On COLONCOLON reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On COLON2 reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On COLON reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On CHAR reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On CASE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On BSUNION reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On BSTYPE reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On BREAKS reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On BOOLEAN reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On BOOL reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On BLOCK_LENGTH reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On BIMPLIES reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On BIFF reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On BEHAVIORS reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On BEHAVIOR reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On BASE_ADDR reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On AXIOMATIC reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On AXIOM reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On AUTOMATIC reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On AT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On ASSUMES reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On ASSIGNS reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On ASSERT reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On ARROW reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On AND reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On AMP reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On ALLOCATION reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On ALLOCATES reduce production is_acsl_decl_or_code_annot -> ASSERT
-- On ALLOCABLE reduce production is_acsl_decl_or_code_annot -> ASSERT

State 71:
## Known stack suffix:
## ALLOCATES
## LR(1) items:
is_acsl_spec -> ALLOCATES . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_spec -> ALLOCATES
-- On WITH reduce production is_acsl_spec -> ALLOCATES
-- On VOLATILE reduce production is_acsl_spec -> ALLOCATES
-- On VOID reduce production is_acsl_spec -> ALLOCATES
-- On VARIANT reduce production is_acsl_spec -> ALLOCATES
-- On VALID_READ reduce production is_acsl_spec -> ALLOCATES
-- On VALID_RANGE reduce production is_acsl_spec -> ALLOCATES
-- On VALID_INDEX reduce production is_acsl_spec -> ALLOCATES
-- On VALID reduce production is_acsl_spec -> ALLOCATES
-- On UNSIGNED reduce production is_acsl_spec -> ALLOCATES
-- On UNION reduce production is_acsl_spec -> ALLOCATES
-- On UNALLOCATED reduce production is_acsl_spec -> ALLOCATES
-- On TYPEOF reduce production is_acsl_spec -> ALLOCATES
-- On TYPENAME reduce production is_acsl_spec -> ALLOCATES
-- On TYPE reduce production is_acsl_spec -> ALLOCATES
-- On TRUE reduce production is_acsl_spec -> ALLOCATES
-- On TILDE reduce production is_acsl_spec -> ALLOCATES
-- On TERMINATES reduce production is_acsl_spec -> ALLOCATES
-- On STRUCT reduce production is_acsl_spec -> ALLOCATES
-- On STRING_LITERAL reduce production is_acsl_spec -> ALLOCATES
-- On STATIC reduce production is_acsl_spec -> ALLOCATES
-- On STAR reduce production is_acsl_spec -> ALLOCATES
-- On SLICE reduce production is_acsl_spec -> ALLOCATES
-- On SLASH reduce production is_acsl_spec -> ALLOCATES
-- On SIZEOF reduce production is_acsl_spec -> ALLOCATES
-- On SIGNED reduce production is_acsl_spec -> ALLOCATES
-- On SHORT reduce production is_acsl_spec -> ALLOCATES
-- On SEPARATED reduce production is_acsl_spec -> ALLOCATES
-- On SEMICOLON reduce production is_acsl_spec -> ALLOCATES
-- On RSQUARE reduce production is_acsl_spec -> ALLOCATES
-- On RPAR reduce production is_acsl_spec -> ALLOCATES
-- On RETURNS reduce production is_acsl_spec -> ALLOCATES
-- On RESULT reduce production is_acsl_spec -> ALLOCATES
-- On REQUIRES reduce production is_acsl_spec -> ALLOCATES
-- On REGISTER reduce production is_acsl_spec -> ALLOCATES
-- On REAL reduce production is_acsl_spec -> ALLOCATES
-- On READS reduce production is_acsl_spec -> ALLOCATES
-- On RBRACE reduce production is_acsl_spec -> ALLOCATES
-- On QUESTION reduce production is_acsl_spec -> ALLOCATES
-- On PREDICATE reduce production is_acsl_spec -> ALLOCATES
-- On PRAGMA reduce production is_acsl_spec -> ALLOCATES
-- On PLUS reduce production is_acsl_spec -> ALLOCATES
-- On PIPE reduce production is_acsl_spec -> ALLOCATES
-- On PERCENT reduce production is_acsl_spec -> ALLOCATES
-- On OR reduce production is_acsl_spec -> ALLOCATES
-- On OLD reduce production is_acsl_spec -> ALLOCATES
-- On OFFSET reduce production is_acsl_spec -> ALLOCATES
-- On NULL reduce production is_acsl_spec -> ALLOCATES
-- On NOTHING reduce production is_acsl_spec -> ALLOCATES
-- On NOT reduce production is_acsl_spec -> ALLOCATES
-- On NE reduce production is_acsl_spec -> ALLOCATES
-- On MODULE reduce production is_acsl_spec -> ALLOCATES
-- On MODEL reduce production is_acsl_spec -> ALLOCATES
-- On MINUS reduce production is_acsl_spec -> ALLOCATES
-- On LTLT reduce production is_acsl_spec -> ALLOCATES
-- On LTCOLON reduce production is_acsl_spec -> ALLOCATES
-- On LT reduce production is_acsl_spec -> ALLOCATES
-- On LSQUARE reduce production is_acsl_spec -> ALLOCATES
-- On LPAR reduce production is_acsl_spec -> ALLOCATES
-- On LOOP reduce production is_acsl_spec -> ALLOCATES
-- On LONG reduce production is_acsl_spec -> ALLOCATES
-- On LOGIC reduce production is_acsl_spec -> ALLOCATES
-- On LET reduce production is_acsl_spec -> ALLOCATES
-- On LEMMA reduce production is_acsl_spec -> ALLOCATES
-- On LE reduce production is_acsl_spec -> ALLOCATES
-- On LBRACE reduce production is_acsl_spec -> ALLOCATES
-- On LAMBDA reduce production is_acsl_spec -> ALLOCATES
-- On LABEL reduce production is_acsl_spec -> ALLOCATES
-- On INVARIANT reduce production is_acsl_spec -> ALLOCATES
-- On INTER reduce production is_acsl_spec -> ALLOCATES
-- On INTEGER reduce production is_acsl_spec -> ALLOCATES
-- On INT reduce production is_acsl_spec -> ALLOCATES
-- On INITIALIZED reduce production is_acsl_spec -> ALLOCATES
-- On INDUCTIVE reduce production is_acsl_spec -> ALLOCATES
-- On INCLUDE reduce production is_acsl_spec -> ALLOCATES
-- On IMPLIES reduce production is_acsl_spec -> ALLOCATES
-- On IMPACT reduce production is_acsl_spec -> ALLOCATES
-- On IFF reduce production is_acsl_spec -> ALLOCATES
-- On IF reduce production is_acsl_spec -> ALLOCATES
-- On IDENTIFIER reduce production is_acsl_spec -> ALLOCATES
-- On HATHAT reduce production is_acsl_spec -> ALLOCATES
-- On HAT reduce production is_acsl_spec -> ALLOCATES
-- On GTGT reduce production is_acsl_spec -> ALLOCATES
-- On GT reduce production is_acsl_spec -> ALLOCATES
-- On GLOBAL reduce production is_acsl_spec -> ALLOCATES
-- On GHOST reduce production is_acsl_spec -> ALLOCATES
-- On GE reduce production is_acsl_spec -> ALLOCATES
-- On FUNCTION reduce production is_acsl_spec -> ALLOCATES
-- On FROM reduce production is_acsl_spec -> ALLOCATES
-- On FRESH reduce production is_acsl_spec -> ALLOCATES
-- On FREES reduce production is_acsl_spec -> ALLOCATES
-- On FREEABLE reduce production is_acsl_spec -> ALLOCATES
-- On FORALL reduce production is_acsl_spec -> ALLOCATES
-- On FOR reduce production is_acsl_spec -> ALLOCATES
-- On FLOAT reduce production is_acsl_spec -> ALLOCATES
-- On FALSE reduce production is_acsl_spec -> ALLOCATES
-- On EXT_LET reduce production is_acsl_spec -> ALLOCATES
-- On EXT_AT reduce production is_acsl_spec -> ALLOCATES
-- On EXITS reduce production is_acsl_spec -> ALLOCATES
-- On EXISTS reduce production is_acsl_spec -> ALLOCATES
-- On EQUAL reduce production is_acsl_spec -> ALLOCATES
-- On EQ reduce production is_acsl_spec -> ALLOCATES
-- On EOF reduce production is_acsl_spec -> ALLOCATES
-- On ENUM reduce production is_acsl_spec -> ALLOCATES
-- On ENSURES reduce production is_acsl_spec -> ALLOCATES
-- On EMPTY reduce production is_acsl_spec -> ALLOCATES
-- On ELSE reduce production is_acsl_spec -> ALLOCATES
-- On DYNAMIC reduce production is_acsl_spec -> ALLOCATES
-- On DOUBLE reduce production is_acsl_spec -> ALLOCATES
-- On DOTDOTDOT reduce production is_acsl_spec -> ALLOCATES
-- On DOTDOT reduce production is_acsl_spec -> ALLOCATES
-- On DOT reduce production is_acsl_spec -> ALLOCATES
-- On DOLLAR reduce production is_acsl_spec -> ALLOCATES
-- On DISJOINT reduce production is_acsl_spec -> ALLOCATES
-- On DECREASES reduce production is_acsl_spec -> ALLOCATES
-- On DANGLING reduce production is_acsl_spec -> ALLOCATES
-- On CUSTOM reduce production is_acsl_spec -> ALLOCATES
-- On CONTRACT reduce production is_acsl_spec -> ALLOCATES
-- On CONTINUES reduce production is_acsl_spec -> ALLOCATES
-- On CONSTANT10 reduce production is_acsl_spec -> ALLOCATES
-- On CONSTANT reduce production is_acsl_spec -> ALLOCATES
-- On CONST reduce production is_acsl_spec -> ALLOCATES
-- On COMPLETE reduce production is_acsl_spec -> ALLOCATES
-- On COMMA reduce production is_acsl_spec -> ALLOCATES
-- On COLONGT reduce production is_acsl_spec -> ALLOCATES
-- On COLONCOLON reduce production is_acsl_spec -> ALLOCATES
-- On COLON2 reduce production is_acsl_spec -> ALLOCATES
-- On COLON reduce production is_acsl_spec -> ALLOCATES
-- On CHAR reduce production is_acsl_spec -> ALLOCATES
-- On CASE reduce production is_acsl_spec -> ALLOCATES
-- On BSUNION reduce production is_acsl_spec -> ALLOCATES
-- On BSTYPE reduce production is_acsl_spec -> ALLOCATES
-- On BREAKS reduce production is_acsl_spec -> ALLOCATES
-- On BOOLEAN reduce production is_acsl_spec -> ALLOCATES
-- On BOOL reduce production is_acsl_spec -> ALLOCATES
-- On BLOCK_LENGTH reduce production is_acsl_spec -> ALLOCATES
-- On BIMPLIES reduce production is_acsl_spec -> ALLOCATES
-- On BIFF reduce production is_acsl_spec -> ALLOCATES
-- On BEHAVIORS reduce production is_acsl_spec -> ALLOCATES
-- On BEHAVIOR reduce production is_acsl_spec -> ALLOCATES
-- On BASE_ADDR reduce production is_acsl_spec -> ALLOCATES
-- On AXIOMATIC reduce production is_acsl_spec -> ALLOCATES
-- On AXIOM reduce production is_acsl_spec -> ALLOCATES
-- On AUTOMATIC reduce production is_acsl_spec -> ALLOCATES
-- On AT reduce production is_acsl_spec -> ALLOCATES
-- On ASSUMES reduce production is_acsl_spec -> ALLOCATES
-- On ASSIGNS reduce production is_acsl_spec -> ALLOCATES
-- On ASSERT reduce production is_acsl_spec -> ALLOCATES
-- On ARROW reduce production is_acsl_spec -> ALLOCATES
-- On AND reduce production is_acsl_spec -> ALLOCATES
-- On AMP reduce production is_acsl_spec -> ALLOCATES
-- On ALLOCATION reduce production is_acsl_spec -> ALLOCATES
-- On ALLOCATES reduce production is_acsl_spec -> ALLOCATES
-- On ALLOCABLE reduce production is_acsl_spec -> ALLOCATES

State 72:
## Known stack suffix:
## post_cond
## LR(1) items:
is_acsl_spec -> post_cond . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_acsl_spec -> post_cond
-- On WITH reduce production is_acsl_spec -> post_cond
-- On VOLATILE reduce production is_acsl_spec -> post_cond
-- On VOID reduce production is_acsl_spec -> post_cond
-- On VARIANT reduce production is_acsl_spec -> post_cond
-- On VALID_READ reduce production is_acsl_spec -> post_cond
-- On VALID_RANGE reduce production is_acsl_spec -> post_cond
-- On VALID_INDEX reduce production is_acsl_spec -> post_cond
-- On VALID reduce production is_acsl_spec -> post_cond
-- On UNSIGNED reduce production is_acsl_spec -> post_cond
-- On UNION reduce production is_acsl_spec -> post_cond
-- On UNALLOCATED reduce production is_acsl_spec -> post_cond
-- On TYPEOF reduce production is_acsl_spec -> post_cond
-- On TYPENAME reduce production is_acsl_spec -> post_cond
-- On TYPE reduce production is_acsl_spec -> post_cond
-- On TRUE reduce production is_acsl_spec -> post_cond
-- On TILDE reduce production is_acsl_spec -> post_cond
-- On TERMINATES reduce production is_acsl_spec -> post_cond
-- On STRUCT reduce production is_acsl_spec -> post_cond
-- On STRING_LITERAL reduce production is_acsl_spec -> post_cond
-- On STATIC reduce production is_acsl_spec -> post_cond
-- On STAR reduce production is_acsl_spec -> post_cond
-- On SLICE reduce production is_acsl_spec -> post_cond
-- On SLASH reduce production is_acsl_spec -> post_cond
-- On SIZEOF reduce production is_acsl_spec -> post_cond
-- On SIGNED reduce production is_acsl_spec -> post_cond
-- On SHORT reduce production is_acsl_spec -> post_cond
-- On SEPARATED reduce production is_acsl_spec -> post_cond
-- On SEMICOLON reduce production is_acsl_spec -> post_cond
-- On RSQUARE reduce production is_acsl_spec -> post_cond
-- On RPAR reduce production is_acsl_spec -> post_cond
-- On RETURNS reduce production is_acsl_spec -> post_cond
-- On RESULT reduce production is_acsl_spec -> post_cond
-- On REQUIRES reduce production is_acsl_spec -> post_cond
-- On REGISTER reduce production is_acsl_spec -> post_cond
-- On REAL reduce production is_acsl_spec -> post_cond
-- On READS reduce production is_acsl_spec -> post_cond
-- On RBRACE reduce production is_acsl_spec -> post_cond
-- On QUESTION reduce production is_acsl_spec -> post_cond
-- On PREDICATE reduce production is_acsl_spec -> post_cond
-- On PRAGMA reduce production is_acsl_spec -> post_cond
-- On PLUS reduce production is_acsl_spec -> post_cond
-- On PIPE reduce production is_acsl_spec -> post_cond
-- On PERCENT reduce production is_acsl_spec -> post_cond
-- On OR reduce production is_acsl_spec -> post_cond
-- On OLD reduce production is_acsl_spec -> post_cond
-- On OFFSET reduce production is_acsl_spec -> post_cond
-- On NULL reduce production is_acsl_spec -> post_cond
-- On NOTHING reduce production is_acsl_spec -> post_cond
-- On NOT reduce production is_acsl_spec -> post_cond
-- On NE reduce production is_acsl_spec -> post_cond
-- On MODULE reduce production is_acsl_spec -> post_cond
-- On MODEL reduce production is_acsl_spec -> post_cond
-- On MINUS reduce production is_acsl_spec -> post_cond
-- On LTLT reduce production is_acsl_spec -> post_cond
-- On LTCOLON reduce production is_acsl_spec -> post_cond
-- On LT reduce production is_acsl_spec -> post_cond
-- On LSQUARE reduce production is_acsl_spec -> post_cond
-- On LPAR reduce production is_acsl_spec -> post_cond
-- On LOOP reduce production is_acsl_spec -> post_cond
-- On LONG reduce production is_acsl_spec -> post_cond
-- On LOGIC reduce production is_acsl_spec -> post_cond
-- On LET reduce production is_acsl_spec -> post_cond
-- On LEMMA reduce production is_acsl_spec -> post_cond
-- On LE reduce production is_acsl_spec -> post_cond
-- On LBRACE reduce production is_acsl_spec -> post_cond
-- On LAMBDA reduce production is_acsl_spec -> post_cond
-- On LABEL reduce production is_acsl_spec -> post_cond
-- On INVARIANT reduce production is_acsl_spec -> post_cond
-- On INTER reduce production is_acsl_spec -> post_cond
-- On INTEGER reduce production is_acsl_spec -> post_cond
-- On INT reduce production is_acsl_spec -> post_cond
-- On INITIALIZED reduce production is_acsl_spec -> post_cond
-- On INDUCTIVE reduce production is_acsl_spec -> post_cond
-- On INCLUDE reduce production is_acsl_spec -> post_cond
-- On IMPLIES reduce production is_acsl_spec -> post_cond
-- On IMPACT reduce production is_acsl_spec -> post_cond
-- On IFF reduce production is_acsl_spec -> post_cond
-- On IF reduce production is_acsl_spec -> post_cond
-- On IDENTIFIER reduce production is_acsl_spec -> post_cond
-- On HATHAT reduce production is_acsl_spec -> post_cond
-- On HAT reduce production is_acsl_spec -> post_cond
-- On GTGT reduce production is_acsl_spec -> post_cond
-- On GT reduce production is_acsl_spec -> post_cond
-- On GLOBAL reduce production is_acsl_spec -> post_cond
-- On GHOST reduce production is_acsl_spec -> post_cond
-- On GE reduce production is_acsl_spec -> post_cond
-- On FUNCTION reduce production is_acsl_spec -> post_cond
-- On FROM reduce production is_acsl_spec -> post_cond
-- On FRESH reduce production is_acsl_spec -> post_cond
-- On FREES reduce production is_acsl_spec -> post_cond
-- On FREEABLE reduce production is_acsl_spec -> post_cond
-- On FORALL reduce production is_acsl_spec -> post_cond
-- On FOR reduce production is_acsl_spec -> post_cond
-- On FLOAT reduce production is_acsl_spec -> post_cond
-- On FALSE reduce production is_acsl_spec -> post_cond
-- On EXT_LET reduce production is_acsl_spec -> post_cond
-- On EXT_AT reduce production is_acsl_spec -> post_cond
-- On EXITS reduce production is_acsl_spec -> post_cond
-- On EXISTS reduce production is_acsl_spec -> post_cond
-- On EQUAL reduce production is_acsl_spec -> post_cond
-- On EQ reduce production is_acsl_spec -> post_cond
-- On EOF reduce production is_acsl_spec -> post_cond
-- On ENUM reduce production is_acsl_spec -> post_cond
-- On ENSURES reduce production is_acsl_spec -> post_cond
-- On EMPTY reduce production is_acsl_spec -> post_cond
-- On ELSE reduce production is_acsl_spec -> post_cond
-- On DYNAMIC reduce production is_acsl_spec -> post_cond
-- On DOUBLE reduce production is_acsl_spec -> post_cond
-- On DOTDOTDOT reduce production is_acsl_spec -> post_cond
-- On DOTDOT reduce production is_acsl_spec -> post_cond
-- On DOT reduce production is_acsl_spec -> post_cond
-- On DOLLAR reduce production is_acsl_spec -> post_cond
-- On DISJOINT reduce production is_acsl_spec -> post_cond
-- On DECREASES reduce production is_acsl_spec -> post_cond
-- On DANGLING reduce production is_acsl_spec -> post_cond
-- On CUSTOM reduce production is_acsl_spec -> post_cond
-- On CONTRACT reduce production is_acsl_spec -> post_cond
-- On CONTINUES reduce production is_acsl_spec -> post_cond
-- On CONSTANT10 reduce production is_acsl_spec -> post_cond
-- On CONSTANT reduce production is_acsl_spec -> post_cond
-- On CONST reduce production is_acsl_spec -> post_cond
-- On COMPLETE reduce production is_acsl_spec -> post_cond
-- On COMMA reduce production is_acsl_spec -> post_cond
-- On COLONGT reduce production is_acsl_spec -> post_cond
-- On COLONCOLON reduce production is_acsl_spec -> post_cond
-- On COLON2 reduce production is_acsl_spec -> post_cond
-- On COLON reduce production is_acsl_spec -> post_cond
-- On CHAR reduce production is_acsl_spec -> post_cond
-- On CASE reduce production is_acsl_spec -> post_cond
-- On BSUNION reduce production is_acsl_spec -> post_cond
-- On BSTYPE reduce production is_acsl_spec -> post_cond
-- On BREAKS reduce production is_acsl_spec -> post_cond
-- On BOOLEAN reduce production is_acsl_spec -> post_cond
-- On BOOL reduce production is_acsl_spec -> post_cond
-- On BLOCK_LENGTH reduce production is_acsl_spec -> post_cond
-- On BIMPLIES reduce production is_acsl_spec -> post_cond
-- On BIFF reduce production is_acsl_spec -> post_cond
-- On BEHAVIORS reduce production is_acsl_spec -> post_cond
-- On BEHAVIOR reduce production is_acsl_spec -> post_cond
-- On BASE_ADDR reduce production is_acsl_spec -> post_cond
-- On AXIOMATIC reduce production is_acsl_spec -> post_cond
-- On AXIOM reduce production is_acsl_spec -> post_cond
-- On AUTOMATIC reduce production is_acsl_spec -> post_cond
-- On AT reduce production is_acsl_spec -> post_cond
-- On ASSUMES reduce production is_acsl_spec -> post_cond
-- On ASSIGNS reduce production is_acsl_spec -> post_cond
-- On ASSERT reduce production is_acsl_spec -> post_cond
-- On ARROW reduce production is_acsl_spec -> post_cond
-- On AND reduce production is_acsl_spec -> post_cond
-- On AMP reduce production is_acsl_spec -> post_cond
-- On ALLOCATION reduce production is_acsl_spec -> post_cond
-- On ALLOCATES reduce production is_acsl_spec -> post_cond
-- On ALLOCABLE reduce production is_acsl_spec -> post_cond

State 73:
## Known stack suffix:
## non_logic_keyword
## LR(1) items:
keyword -> non_logic_keyword . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production keyword -> non_logic_keyword
-- On WITH reduce production keyword -> non_logic_keyword
-- On VOLATILE reduce production keyword -> non_logic_keyword
-- On VOID reduce production keyword -> non_logic_keyword
-- On VARIANT reduce production keyword -> non_logic_keyword
-- On VALID_READ reduce production keyword -> non_logic_keyword
-- On VALID_RANGE reduce production keyword -> non_logic_keyword
-- On VALID_INDEX reduce production keyword -> non_logic_keyword
-- On VALID reduce production keyword -> non_logic_keyword
-- On UNSIGNED reduce production keyword -> non_logic_keyword
-- On UNION reduce production keyword -> non_logic_keyword
-- On UNALLOCATED reduce production keyword -> non_logic_keyword
-- On TYPEOF reduce production keyword -> non_logic_keyword
-- On TYPENAME reduce production keyword -> non_logic_keyword
-- On TYPE reduce production keyword -> non_logic_keyword
-- On TRUE reduce production keyword -> non_logic_keyword
-- On TILDE reduce production keyword -> non_logic_keyword
-- On TERMINATES reduce production keyword -> non_logic_keyword
-- On STRUCT reduce production keyword -> non_logic_keyword
-- On STRING_LITERAL reduce production keyword -> non_logic_keyword
-- On STATIC reduce production keyword -> non_logic_keyword
-- On STAR reduce production keyword -> non_logic_keyword
-- On SLICE reduce production keyword -> non_logic_keyword
-- On SLASH reduce production keyword -> non_logic_keyword
-- On SIZEOF reduce production keyword -> non_logic_keyword
-- On SIGNED reduce production keyword -> non_logic_keyword
-- On SHORT reduce production keyword -> non_logic_keyword
-- On SEPARATED reduce production keyword -> non_logic_keyword
-- On SEMICOLON reduce production keyword -> non_logic_keyword
-- On RSQUARE reduce production keyword -> non_logic_keyword
-- On RPAR reduce production keyword -> non_logic_keyword
-- On RETURNS reduce production keyword -> non_logic_keyword
-- On RESULT reduce production keyword -> non_logic_keyword
-- On REQUIRES reduce production keyword -> non_logic_keyword
-- On REGISTER reduce production keyword -> non_logic_keyword
-- On REAL reduce production keyword -> non_logic_keyword
-- On READS reduce production keyword -> non_logic_keyword
-- On RBRACE reduce production keyword -> non_logic_keyword
-- On QUESTION reduce production keyword -> non_logic_keyword
-- On PREDICATE reduce production keyword -> non_logic_keyword
-- On PRAGMA reduce production keyword -> non_logic_keyword
-- On PLUS reduce production keyword -> non_logic_keyword
-- On PIPE reduce production keyword -> non_logic_keyword
-- On PERCENT reduce production keyword -> non_logic_keyword
-- On OR reduce production keyword -> non_logic_keyword
-- On OLD reduce production keyword -> non_logic_keyword
-- On OFFSET reduce production keyword -> non_logic_keyword
-- On NULL reduce production keyword -> non_logic_keyword
-- On NOTHING reduce production keyword -> non_logic_keyword
-- On NOT reduce production keyword -> non_logic_keyword
-- On NE reduce production keyword -> non_logic_keyword
-- On MODULE reduce production keyword -> non_logic_keyword
-- On MODEL reduce production keyword -> non_logic_keyword
-- On MINUS reduce production keyword -> non_logic_keyword
-- On LTLT reduce production keyword -> non_logic_keyword
-- On LTCOLON reduce production keyword -> non_logic_keyword
-- On LT reduce production keyword -> non_logic_keyword
-- On LSQUARE reduce production keyword -> non_logic_keyword
-- On LPAR reduce production keyword -> non_logic_keyword
-- On LOOP reduce production keyword -> non_logic_keyword
-- On LONG reduce production keyword -> non_logic_keyword
-- On LOGIC reduce production keyword -> non_logic_keyword
-- On LET reduce production keyword -> non_logic_keyword
-- On LEMMA reduce production keyword -> non_logic_keyword
-- On LE reduce production keyword -> non_logic_keyword
-- On LBRACE reduce production keyword -> non_logic_keyword
-- On LAMBDA reduce production keyword -> non_logic_keyword
-- On LABEL reduce production keyword -> non_logic_keyword
-- On INVARIANT reduce production keyword -> non_logic_keyword
-- On INTER reduce production keyword -> non_logic_keyword
-- On INTEGER reduce production keyword -> non_logic_keyword
-- On INT reduce production keyword -> non_logic_keyword
-- On INITIALIZED reduce production keyword -> non_logic_keyword
-- On INDUCTIVE reduce production keyword -> non_logic_keyword
-- On INCLUDE reduce production keyword -> non_logic_keyword
-- On IMPLIES reduce production keyword -> non_logic_keyword
-- On IMPACT reduce production keyword -> non_logic_keyword
-- On IFF reduce production keyword -> non_logic_keyword
-- On IF reduce production keyword -> non_logic_keyword
-- On IDENTIFIER reduce production keyword -> non_logic_keyword
-- On HATHAT reduce production keyword -> non_logic_keyword
-- On HAT reduce production keyword -> non_logic_keyword
-- On GTGT reduce production keyword -> non_logic_keyword
-- On GT reduce production keyword -> non_logic_keyword
-- On GLOBAL reduce production keyword -> non_logic_keyword
-- On GHOST reduce production keyword -> non_logic_keyword
-- On GE reduce production keyword -> non_logic_keyword
-- On FUNCTION reduce production keyword -> non_logic_keyword
-- On FROM reduce production keyword -> non_logic_keyword
-- On FRESH reduce production keyword -> non_logic_keyword
-- On FREES reduce production keyword -> non_logic_keyword
-- On FREEABLE reduce production keyword -> non_logic_keyword
-- On FORALL reduce production keyword -> non_logic_keyword
-- On FOR reduce production keyword -> non_logic_keyword
-- On FLOAT reduce production keyword -> non_logic_keyword
-- On FALSE reduce production keyword -> non_logic_keyword
-- On EXT_LET reduce production keyword -> non_logic_keyword
-- On EXT_AT reduce production keyword -> non_logic_keyword
-- On EXITS reduce production keyword -> non_logic_keyword
-- On EXISTS reduce production keyword -> non_logic_keyword
-- On EQUAL reduce production keyword -> non_logic_keyword
-- On EQ reduce production keyword -> non_logic_keyword
-- On EOF reduce production keyword -> non_logic_keyword
-- On ENUM reduce production keyword -> non_logic_keyword
-- On ENSURES reduce production keyword -> non_logic_keyword
-- On EMPTY reduce production keyword -> non_logic_keyword
-- On ELSE reduce production keyword -> non_logic_keyword
-- On DYNAMIC reduce production keyword -> non_logic_keyword
-- On DOUBLE reduce production keyword -> non_logic_keyword
-- On DOTDOTDOT reduce production keyword -> non_logic_keyword
-- On DOTDOT reduce production keyword -> non_logic_keyword
-- On DOT reduce production keyword -> non_logic_keyword
-- On DOLLAR reduce production keyword -> non_logic_keyword
-- On DISJOINT reduce production keyword -> non_logic_keyword
-- On DECREASES reduce production keyword -> non_logic_keyword
-- On DANGLING reduce production keyword -> non_logic_keyword
-- On CUSTOM reduce production keyword -> non_logic_keyword
-- On CONTRACT reduce production keyword -> non_logic_keyword
-- On CONTINUES reduce production keyword -> non_logic_keyword
-- On CONSTANT10 reduce production keyword -> non_logic_keyword
-- On CONSTANT reduce production keyword -> non_logic_keyword
-- On CONST reduce production keyword -> non_logic_keyword
-- On COMPLETE reduce production keyword -> non_logic_keyword
-- On COMMA reduce production keyword -> non_logic_keyword
-- On COLONGT reduce production keyword -> non_logic_keyword
-- On COLONCOLON reduce production keyword -> non_logic_keyword
-- On COLON2 reduce production keyword -> non_logic_keyword
-- On COLON reduce production keyword -> non_logic_keyword
-- On CHAR reduce production keyword -> non_logic_keyword
-- On CASE reduce production keyword -> non_logic_keyword
-- On BSUNION reduce production keyword -> non_logic_keyword
-- On BSTYPE reduce production keyword -> non_logic_keyword
-- On BREAKS reduce production keyword -> non_logic_keyword
-- On BOOLEAN reduce production keyword -> non_logic_keyword
-- On BOOL reduce production keyword -> non_logic_keyword
-- On BLOCK_LENGTH reduce production keyword -> non_logic_keyword
-- On BIMPLIES reduce production keyword -> non_logic_keyword
-- On BIFF reduce production keyword -> non_logic_keyword
-- On BEHAVIORS reduce production keyword -> non_logic_keyword
-- On BEHAVIOR reduce production keyword -> non_logic_keyword
-- On BASE_ADDR reduce production keyword -> non_logic_keyword
-- On AXIOMATIC reduce production keyword -> non_logic_keyword
-- On AXIOM reduce production keyword -> non_logic_keyword
-- On AUTOMATIC reduce production keyword -> non_logic_keyword
-- On AT reduce production keyword -> non_logic_keyword
-- On ASSUMES reduce production keyword -> non_logic_keyword
-- On ASSIGNS reduce production keyword -> non_logic_keyword
-- On ASSERT reduce production keyword -> non_logic_keyword
-- On ARROW reduce production keyword -> non_logic_keyword
-- On AND reduce production keyword -> non_logic_keyword
-- On AMP reduce production keyword -> non_logic_keyword
-- On ALLOCATION reduce production keyword -> non_logic_keyword
-- On ALLOCATES reduce production keyword -> non_logic_keyword
-- On ALLOCABLE reduce production keyword -> non_logic_keyword

State 74:
## Known stack suffix:
## LBRACE ne_label_list
## LR(1) items:
opt_label_list -> LBRACE ne_label_list . RBRACE [ LPAR ]
## Transitions:
-- On RBRACE shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## LBRACE ne_label_list RBRACE
## LR(1) items:
opt_label_list -> LBRACE ne_label_list RBRACE . [ LPAR ]
## Transitions:
## Reductions:
-- On LPAR reduce production opt_label_list -> LBRACE ne_label_list RBRACE

State 76:
## Known stack suffix:
## label_name
## LR(1) items:
ne_label_list -> label_name . [ RBRACE ]
ne_label_list -> label_name . COMMA ne_label_list [ RBRACE ]
## Transitions:
-- On COMMA shift to state 77
## Reductions:
-- On RBRACE reduce production ne_label_list -> label_name

State 77:
## Known stack suffix:
## label_name COMMA
## LR(1) items:
ne_label_list -> label_name COMMA . ne_label_list [ RBRACE ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_label_list shift to state 78
-- On label_name shift to state 76
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On any_identifier shift to state 86
-- On acsl_c_keyword shift to state 87
## Reductions:

State 78:
## Known stack suffix:
## label_name COMMA ne_label_list
## LR(1) items:
ne_label_list -> label_name COMMA ne_label_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production ne_label_list -> label_name COMMA ne_label_list

State 79:
## Known stack suffix:
## keyword
## LR(1) items:
any_identifier -> keyword . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production any_identifier -> keyword
-- On WITH reduce production any_identifier -> keyword
-- On VOLATILE reduce production any_identifier -> keyword
-- On VOID reduce production any_identifier -> keyword
-- On VARIANT reduce production any_identifier -> keyword
-- On VALID_READ reduce production any_identifier -> keyword
-- On VALID_RANGE reduce production any_identifier -> keyword
-- On VALID_INDEX reduce production any_identifier -> keyword
-- On VALID reduce production any_identifier -> keyword
-- On UNSIGNED reduce production any_identifier -> keyword
-- On UNION reduce production any_identifier -> keyword
-- On UNALLOCATED reduce production any_identifier -> keyword
-- On TYPEOF reduce production any_identifier -> keyword
-- On TYPENAME reduce production any_identifier -> keyword
-- On TYPE reduce production any_identifier -> keyword
-- On TRUE reduce production any_identifier -> keyword
-- On TILDE reduce production any_identifier -> keyword
-- On TERMINATES reduce production any_identifier -> keyword
-- On STRUCT reduce production any_identifier -> keyword
-- On STRING_LITERAL reduce production any_identifier -> keyword
-- On STATIC reduce production any_identifier -> keyword
-- On STAR reduce production any_identifier -> keyword
-- On SLICE reduce production any_identifier -> keyword
-- On SLASH reduce production any_identifier -> keyword
-- On SIZEOF reduce production any_identifier -> keyword
-- On SIGNED reduce production any_identifier -> keyword
-- On SHORT reduce production any_identifier -> keyword
-- On SEPARATED reduce production any_identifier -> keyword
-- On SEMICOLON reduce production any_identifier -> keyword
-- On RSQUARE reduce production any_identifier -> keyword
-- On RPAR reduce production any_identifier -> keyword
-- On RETURNS reduce production any_identifier -> keyword
-- On RESULT reduce production any_identifier -> keyword
-- On REQUIRES reduce production any_identifier -> keyword
-- On REGISTER reduce production any_identifier -> keyword
-- On REAL reduce production any_identifier -> keyword
-- On READS reduce production any_identifier -> keyword
-- On RBRACE reduce production any_identifier -> keyword
-- On QUESTION reduce production any_identifier -> keyword
-- On PREDICATE reduce production any_identifier -> keyword
-- On PRAGMA reduce production any_identifier -> keyword
-- On PLUS reduce production any_identifier -> keyword
-- On PIPE reduce production any_identifier -> keyword
-- On PERCENT reduce production any_identifier -> keyword
-- On OR reduce production any_identifier -> keyword
-- On OLD reduce production any_identifier -> keyword
-- On OFFSET reduce production any_identifier -> keyword
-- On NULL reduce production any_identifier -> keyword
-- On NOTHING reduce production any_identifier -> keyword
-- On NOT reduce production any_identifier -> keyword
-- On NE reduce production any_identifier -> keyword
-- On MODULE reduce production any_identifier -> keyword
-- On MODEL reduce production any_identifier -> keyword
-- On MINUS reduce production any_identifier -> keyword
-- On LTLT reduce production any_identifier -> keyword
-- On LTCOLON reduce production any_identifier -> keyword
-- On LT reduce production any_identifier -> keyword
-- On LSQUARE reduce production any_identifier -> keyword
-- On LPAR reduce production any_identifier -> keyword
-- On LOOP reduce production any_identifier -> keyword
-- On LONG reduce production any_identifier -> keyword
-- On LOGIC reduce production any_identifier -> keyword
-- On LET reduce production any_identifier -> keyword
-- On LEMMA reduce production any_identifier -> keyword
-- On LE reduce production any_identifier -> keyword
-- On LBRACE reduce production any_identifier -> keyword
-- On LAMBDA reduce production any_identifier -> keyword
-- On LABEL reduce production any_identifier -> keyword
-- On INVARIANT reduce production any_identifier -> keyword
-- On INTER reduce production any_identifier -> keyword
-- On INTEGER reduce production any_identifier -> keyword
-- On INT reduce production any_identifier -> keyword
-- On INITIALIZED reduce production any_identifier -> keyword
-- On INDUCTIVE reduce production any_identifier -> keyword
-- On INCLUDE reduce production any_identifier -> keyword
-- On IMPLIES reduce production any_identifier -> keyword
-- On IMPACT reduce production any_identifier -> keyword
-- On IFF reduce production any_identifier -> keyword
-- On IF reduce production any_identifier -> keyword
-- On IDENTIFIER reduce production any_identifier -> keyword
-- On HATHAT reduce production any_identifier -> keyword
-- On HAT reduce production any_identifier -> keyword
-- On GTGT reduce production any_identifier -> keyword
-- On GT reduce production any_identifier -> keyword
-- On GLOBAL reduce production any_identifier -> keyword
-- On GHOST reduce production any_identifier -> keyword
-- On GE reduce production any_identifier -> keyword
-- On FUNCTION reduce production any_identifier -> keyword
-- On FROM reduce production any_identifier -> keyword
-- On FRESH reduce production any_identifier -> keyword
-- On FREES reduce production any_identifier -> keyword
-- On FREEABLE reduce production any_identifier -> keyword
-- On FORALL reduce production any_identifier -> keyword
-- On FOR reduce production any_identifier -> keyword
-- On FLOAT reduce production any_identifier -> keyword
-- On FALSE reduce production any_identifier -> keyword
-- On EXT_LET reduce production any_identifier -> keyword
-- On EXT_AT reduce production any_identifier -> keyword
-- On EXITS reduce production any_identifier -> keyword
-- On EXISTS reduce production any_identifier -> keyword
-- On EQUAL reduce production any_identifier -> keyword
-- On EQ reduce production any_identifier -> keyword
-- On EOF reduce production any_identifier -> keyword
-- On ENUM reduce production any_identifier -> keyword
-- On ENSURES reduce production any_identifier -> keyword
-- On EMPTY reduce production any_identifier -> keyword
-- On ELSE reduce production any_identifier -> keyword
-- On DYNAMIC reduce production any_identifier -> keyword
-- On DOUBLE reduce production any_identifier -> keyword
-- On DOTDOTDOT reduce production any_identifier -> keyword
-- On DOTDOT reduce production any_identifier -> keyword
-- On DOT reduce production any_identifier -> keyword
-- On DOLLAR reduce production any_identifier -> keyword
-- On DISJOINT reduce production any_identifier -> keyword
-- On DECREASES reduce production any_identifier -> keyword
-- On DANGLING reduce production any_identifier -> keyword
-- On CUSTOM reduce production any_identifier -> keyword
-- On CONTRACT reduce production any_identifier -> keyword
-- On CONTINUES reduce production any_identifier -> keyword
-- On CONSTANT10 reduce production any_identifier -> keyword
-- On CONSTANT reduce production any_identifier -> keyword
-- On CONST reduce production any_identifier -> keyword
-- On COMPLETE reduce production any_identifier -> keyword
-- On COMMA reduce production any_identifier -> keyword
-- On COLONGT reduce production any_identifier -> keyword
-- On COLONCOLON reduce production any_identifier -> keyword
-- On COLON2 reduce production any_identifier -> keyword
-- On COLON reduce production any_identifier -> keyword
-- On CHAR reduce production any_identifier -> keyword
-- On CASE reduce production any_identifier -> keyword
-- On BSUNION reduce production any_identifier -> keyword
-- On BSTYPE reduce production any_identifier -> keyword
-- On BREAKS reduce production any_identifier -> keyword
-- On BOOLEAN reduce production any_identifier -> keyword
-- On BOOL reduce production any_identifier -> keyword
-- On BLOCK_LENGTH reduce production any_identifier -> keyword
-- On BIMPLIES reduce production any_identifier -> keyword
-- On BIFF reduce production any_identifier -> keyword
-- On BEHAVIORS reduce production any_identifier -> keyword
-- On BEHAVIOR reduce production any_identifier -> keyword
-- On BASE_ADDR reduce production any_identifier -> keyword
-- On AXIOMATIC reduce production any_identifier -> keyword
-- On AXIOM reduce production any_identifier -> keyword
-- On AUTOMATIC reduce production any_identifier -> keyword
-- On AT reduce production any_identifier -> keyword
-- On ASSUMES reduce production any_identifier -> keyword
-- On ASSIGNS reduce production any_identifier -> keyword
-- On ASSERT reduce production any_identifier -> keyword
-- On ARROW reduce production any_identifier -> keyword
-- On AND reduce production any_identifier -> keyword
-- On AMP reduce production any_identifier -> keyword
-- On ALLOCATION reduce production any_identifier -> keyword
-- On ALLOCATES reduce production any_identifier -> keyword
-- On ALLOCABLE reduce production any_identifier -> keyword

State 80:
## Known stack suffix:
## is_ext_spec
## LR(1) items:
non_logic_keyword -> is_ext_spec . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production non_logic_keyword -> is_ext_spec
-- On WITH reduce production non_logic_keyword -> is_ext_spec
-- On VOLATILE reduce production non_logic_keyword -> is_ext_spec
-- On VOID reduce production non_logic_keyword -> is_ext_spec
-- On VARIANT reduce production non_logic_keyword -> is_ext_spec
-- On VALID_READ reduce production non_logic_keyword -> is_ext_spec
-- On VALID_RANGE reduce production non_logic_keyword -> is_ext_spec
-- On VALID_INDEX reduce production non_logic_keyword -> is_ext_spec
-- On VALID reduce production non_logic_keyword -> is_ext_spec
-- On UNSIGNED reduce production non_logic_keyword -> is_ext_spec
-- On UNION reduce production non_logic_keyword -> is_ext_spec
-- On UNALLOCATED reduce production non_logic_keyword -> is_ext_spec
-- On TYPEOF reduce production non_logic_keyword -> is_ext_spec
-- On TYPENAME reduce production non_logic_keyword -> is_ext_spec
-- On TYPE reduce production non_logic_keyword -> is_ext_spec
-- On TRUE reduce production non_logic_keyword -> is_ext_spec
-- On TILDE reduce production non_logic_keyword -> is_ext_spec
-- On TERMINATES reduce production non_logic_keyword -> is_ext_spec
-- On STRUCT reduce production non_logic_keyword -> is_ext_spec
-- On STRING_LITERAL reduce production non_logic_keyword -> is_ext_spec
-- On STATIC reduce production non_logic_keyword -> is_ext_spec
-- On STAR reduce production non_logic_keyword -> is_ext_spec
-- On SLICE reduce production non_logic_keyword -> is_ext_spec
-- On SLASH reduce production non_logic_keyword -> is_ext_spec
-- On SIZEOF reduce production non_logic_keyword -> is_ext_spec
-- On SIGNED reduce production non_logic_keyword -> is_ext_spec
-- On SHORT reduce production non_logic_keyword -> is_ext_spec
-- On SEPARATED reduce production non_logic_keyword -> is_ext_spec
-- On SEMICOLON reduce production non_logic_keyword -> is_ext_spec
-- On RSQUARE reduce production non_logic_keyword -> is_ext_spec
-- On RPAR reduce production non_logic_keyword -> is_ext_spec
-- On RETURNS reduce production non_logic_keyword -> is_ext_spec
-- On RESULT reduce production non_logic_keyword -> is_ext_spec
-- On REQUIRES reduce production non_logic_keyword -> is_ext_spec
-- On REGISTER reduce production non_logic_keyword -> is_ext_spec
-- On REAL reduce production non_logic_keyword -> is_ext_spec
-- On READS reduce production non_logic_keyword -> is_ext_spec
-- On RBRACE reduce production non_logic_keyword -> is_ext_spec
-- On QUESTION reduce production non_logic_keyword -> is_ext_spec
-- On PREDICATE reduce production non_logic_keyword -> is_ext_spec
-- On PRAGMA reduce production non_logic_keyword -> is_ext_spec
-- On PLUS reduce production non_logic_keyword -> is_ext_spec
-- On PIPE reduce production non_logic_keyword -> is_ext_spec
-- On PERCENT reduce production non_logic_keyword -> is_ext_spec
-- On OR reduce production non_logic_keyword -> is_ext_spec
-- On OLD reduce production non_logic_keyword -> is_ext_spec
-- On OFFSET reduce production non_logic_keyword -> is_ext_spec
-- On NULL reduce production non_logic_keyword -> is_ext_spec
-- On NOTHING reduce production non_logic_keyword -> is_ext_spec
-- On NOT reduce production non_logic_keyword -> is_ext_spec
-- On NE reduce production non_logic_keyword -> is_ext_spec
-- On MODULE reduce production non_logic_keyword -> is_ext_spec
-- On MODEL reduce production non_logic_keyword -> is_ext_spec
-- On MINUS reduce production non_logic_keyword -> is_ext_spec
-- On LTLT reduce production non_logic_keyword -> is_ext_spec
-- On LTCOLON reduce production non_logic_keyword -> is_ext_spec
-- On LT reduce production non_logic_keyword -> is_ext_spec
-- On LSQUARE reduce production non_logic_keyword -> is_ext_spec
-- On LPAR reduce production non_logic_keyword -> is_ext_spec
-- On LOOP reduce production non_logic_keyword -> is_ext_spec
-- On LONG reduce production non_logic_keyword -> is_ext_spec
-- On LOGIC reduce production non_logic_keyword -> is_ext_spec
-- On LET reduce production non_logic_keyword -> is_ext_spec
-- On LEMMA reduce production non_logic_keyword -> is_ext_spec
-- On LE reduce production non_logic_keyword -> is_ext_spec
-- On LBRACE reduce production non_logic_keyword -> is_ext_spec
-- On LAMBDA reduce production non_logic_keyword -> is_ext_spec
-- On LABEL reduce production non_logic_keyword -> is_ext_spec
-- On INVARIANT reduce production non_logic_keyword -> is_ext_spec
-- On INTER reduce production non_logic_keyword -> is_ext_spec
-- On INTEGER reduce production non_logic_keyword -> is_ext_spec
-- On INT reduce production non_logic_keyword -> is_ext_spec
-- On INITIALIZED reduce production non_logic_keyword -> is_ext_spec
-- On INDUCTIVE reduce production non_logic_keyword -> is_ext_spec
-- On INCLUDE reduce production non_logic_keyword -> is_ext_spec
-- On IMPLIES reduce production non_logic_keyword -> is_ext_spec
-- On IMPACT reduce production non_logic_keyword -> is_ext_spec
-- On IFF reduce production non_logic_keyword -> is_ext_spec
-- On IF reduce production non_logic_keyword -> is_ext_spec
-- On IDENTIFIER reduce production non_logic_keyword -> is_ext_spec
-- On HATHAT reduce production non_logic_keyword -> is_ext_spec
-- On HAT reduce production non_logic_keyword -> is_ext_spec
-- On GTGT reduce production non_logic_keyword -> is_ext_spec
-- On GT reduce production non_logic_keyword -> is_ext_spec
-- On GLOBAL reduce production non_logic_keyword -> is_ext_spec
-- On GHOST reduce production non_logic_keyword -> is_ext_spec
-- On GE reduce production non_logic_keyword -> is_ext_spec
-- On FUNCTION reduce production non_logic_keyword -> is_ext_spec
-- On FROM reduce production non_logic_keyword -> is_ext_spec
-- On FRESH reduce production non_logic_keyword -> is_ext_spec
-- On FREES reduce production non_logic_keyword -> is_ext_spec
-- On FREEABLE reduce production non_logic_keyword -> is_ext_spec
-- On FORALL reduce production non_logic_keyword -> is_ext_spec
-- On FOR reduce production non_logic_keyword -> is_ext_spec
-- On FLOAT reduce production non_logic_keyword -> is_ext_spec
-- On FALSE reduce production non_logic_keyword -> is_ext_spec
-- On EXT_LET reduce production non_logic_keyword -> is_ext_spec
-- On EXT_AT reduce production non_logic_keyword -> is_ext_spec
-- On EXITS reduce production non_logic_keyword -> is_ext_spec
-- On EXISTS reduce production non_logic_keyword -> is_ext_spec
-- On EQUAL reduce production non_logic_keyword -> is_ext_spec
-- On EQ reduce production non_logic_keyword -> is_ext_spec
-- On EOF reduce production non_logic_keyword -> is_ext_spec
-- On ENUM reduce production non_logic_keyword -> is_ext_spec
-- On ENSURES reduce production non_logic_keyword -> is_ext_spec
-- On EMPTY reduce production non_logic_keyword -> is_ext_spec
-- On ELSE reduce production non_logic_keyword -> is_ext_spec
-- On DYNAMIC reduce production non_logic_keyword -> is_ext_spec
-- On DOUBLE reduce production non_logic_keyword -> is_ext_spec
-- On DOTDOTDOT reduce production non_logic_keyword -> is_ext_spec
-- On DOTDOT reduce production non_logic_keyword -> is_ext_spec
-- On DOT reduce production non_logic_keyword -> is_ext_spec
-- On DOLLAR reduce production non_logic_keyword -> is_ext_spec
-- On DISJOINT reduce production non_logic_keyword -> is_ext_spec
-- On DECREASES reduce production non_logic_keyword -> is_ext_spec
-- On DANGLING reduce production non_logic_keyword -> is_ext_spec
-- On CUSTOM reduce production non_logic_keyword -> is_ext_spec
-- On CONTRACT reduce production non_logic_keyword -> is_ext_spec
-- On CONTINUES reduce production non_logic_keyword -> is_ext_spec
-- On CONSTANT10 reduce production non_logic_keyword -> is_ext_spec
-- On CONSTANT reduce production non_logic_keyword -> is_ext_spec
-- On CONST reduce production non_logic_keyword -> is_ext_spec
-- On COMPLETE reduce production non_logic_keyword -> is_ext_spec
-- On COMMA reduce production non_logic_keyword -> is_ext_spec
-- On COLONGT reduce production non_logic_keyword -> is_ext_spec
-- On COLONCOLON reduce production non_logic_keyword -> is_ext_spec
-- On COLON2 reduce production non_logic_keyword -> is_ext_spec
-- On COLON reduce production non_logic_keyword -> is_ext_spec
-- On CHAR reduce production non_logic_keyword -> is_ext_spec
-- On CASE reduce production non_logic_keyword -> is_ext_spec
-- On BSUNION reduce production non_logic_keyword -> is_ext_spec
-- On BSTYPE reduce production non_logic_keyword -> is_ext_spec
-- On BREAKS reduce production non_logic_keyword -> is_ext_spec
-- On BOOLEAN reduce production non_logic_keyword -> is_ext_spec
-- On BOOL reduce production non_logic_keyword -> is_ext_spec
-- On BLOCK_LENGTH reduce production non_logic_keyword -> is_ext_spec
-- On BIMPLIES reduce production non_logic_keyword -> is_ext_spec
-- On BIFF reduce production non_logic_keyword -> is_ext_spec
-- On BEHAVIORS reduce production non_logic_keyword -> is_ext_spec
-- On BEHAVIOR reduce production non_logic_keyword -> is_ext_spec
-- On BASE_ADDR reduce production non_logic_keyword -> is_ext_spec
-- On AXIOMATIC reduce production non_logic_keyword -> is_ext_spec
-- On AXIOM reduce production non_logic_keyword -> is_ext_spec
-- On AUTOMATIC reduce production non_logic_keyword -> is_ext_spec
-- On AT reduce production non_logic_keyword -> is_ext_spec
-- On ASSUMES reduce production non_logic_keyword -> is_ext_spec
-- On ASSIGNS reduce production non_logic_keyword -> is_ext_spec
-- On ASSERT reduce production non_logic_keyword -> is_ext_spec
-- On ARROW reduce production non_logic_keyword -> is_ext_spec
-- On AND reduce production non_logic_keyword -> is_ext_spec
-- On AMP reduce production non_logic_keyword -> is_ext_spec
-- On ALLOCATION reduce production non_logic_keyword -> is_ext_spec
-- On ALLOCATES reduce production non_logic_keyword -> is_ext_spec
-- On ALLOCABLE reduce production non_logic_keyword -> is_ext_spec

State 81:
## Known stack suffix:
## is_acsl_spec
## LR(1) items:
non_logic_keyword -> is_acsl_spec . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production non_logic_keyword -> is_acsl_spec
-- On WITH reduce production non_logic_keyword -> is_acsl_spec
-- On VOLATILE reduce production non_logic_keyword -> is_acsl_spec
-- On VOID reduce production non_logic_keyword -> is_acsl_spec
-- On VARIANT reduce production non_logic_keyword -> is_acsl_spec
-- On VALID_READ reduce production non_logic_keyword -> is_acsl_spec
-- On VALID_RANGE reduce production non_logic_keyword -> is_acsl_spec
-- On VALID_INDEX reduce production non_logic_keyword -> is_acsl_spec
-- On VALID reduce production non_logic_keyword -> is_acsl_spec
-- On UNSIGNED reduce production non_logic_keyword -> is_acsl_spec
-- On UNION reduce production non_logic_keyword -> is_acsl_spec
-- On UNALLOCATED reduce production non_logic_keyword -> is_acsl_spec
-- On TYPEOF reduce production non_logic_keyword -> is_acsl_spec
-- On TYPENAME reduce production non_logic_keyword -> is_acsl_spec
-- On TYPE reduce production non_logic_keyword -> is_acsl_spec
-- On TRUE reduce production non_logic_keyword -> is_acsl_spec
-- On TILDE reduce production non_logic_keyword -> is_acsl_spec
-- On TERMINATES reduce production non_logic_keyword -> is_acsl_spec
-- On STRUCT reduce production non_logic_keyword -> is_acsl_spec
-- On STRING_LITERAL reduce production non_logic_keyword -> is_acsl_spec
-- On STATIC reduce production non_logic_keyword -> is_acsl_spec
-- On STAR reduce production non_logic_keyword -> is_acsl_spec
-- On SLICE reduce production non_logic_keyword -> is_acsl_spec
-- On SLASH reduce production non_logic_keyword -> is_acsl_spec
-- On SIZEOF reduce production non_logic_keyword -> is_acsl_spec
-- On SIGNED reduce production non_logic_keyword -> is_acsl_spec
-- On SHORT reduce production non_logic_keyword -> is_acsl_spec
-- On SEPARATED reduce production non_logic_keyword -> is_acsl_spec
-- On SEMICOLON reduce production non_logic_keyword -> is_acsl_spec
-- On RSQUARE reduce production non_logic_keyword -> is_acsl_spec
-- On RPAR reduce production non_logic_keyword -> is_acsl_spec
-- On RETURNS reduce production non_logic_keyword -> is_acsl_spec
-- On RESULT reduce production non_logic_keyword -> is_acsl_spec
-- On REQUIRES reduce production non_logic_keyword -> is_acsl_spec
-- On REGISTER reduce production non_logic_keyword -> is_acsl_spec
-- On REAL reduce production non_logic_keyword -> is_acsl_spec
-- On READS reduce production non_logic_keyword -> is_acsl_spec
-- On RBRACE reduce production non_logic_keyword -> is_acsl_spec
-- On QUESTION reduce production non_logic_keyword -> is_acsl_spec
-- On PREDICATE reduce production non_logic_keyword -> is_acsl_spec
-- On PRAGMA reduce production non_logic_keyword -> is_acsl_spec
-- On PLUS reduce production non_logic_keyword -> is_acsl_spec
-- On PIPE reduce production non_logic_keyword -> is_acsl_spec
-- On PERCENT reduce production non_logic_keyword -> is_acsl_spec
-- On OR reduce production non_logic_keyword -> is_acsl_spec
-- On OLD reduce production non_logic_keyword -> is_acsl_spec
-- On OFFSET reduce production non_logic_keyword -> is_acsl_spec
-- On NULL reduce production non_logic_keyword -> is_acsl_spec
-- On NOTHING reduce production non_logic_keyword -> is_acsl_spec
-- On NOT reduce production non_logic_keyword -> is_acsl_spec
-- On NE reduce production non_logic_keyword -> is_acsl_spec
-- On MODULE reduce production non_logic_keyword -> is_acsl_spec
-- On MODEL reduce production non_logic_keyword -> is_acsl_spec
-- On MINUS reduce production non_logic_keyword -> is_acsl_spec
-- On LTLT reduce production non_logic_keyword -> is_acsl_spec
-- On LTCOLON reduce production non_logic_keyword -> is_acsl_spec
-- On LT reduce production non_logic_keyword -> is_acsl_spec
-- On LSQUARE reduce production non_logic_keyword -> is_acsl_spec
-- On LPAR reduce production non_logic_keyword -> is_acsl_spec
-- On LOOP reduce production non_logic_keyword -> is_acsl_spec
-- On LONG reduce production non_logic_keyword -> is_acsl_spec
-- On LOGIC reduce production non_logic_keyword -> is_acsl_spec
-- On LET reduce production non_logic_keyword -> is_acsl_spec
-- On LEMMA reduce production non_logic_keyword -> is_acsl_spec
-- On LE reduce production non_logic_keyword -> is_acsl_spec
-- On LBRACE reduce production non_logic_keyword -> is_acsl_spec
-- On LAMBDA reduce production non_logic_keyword -> is_acsl_spec
-- On LABEL reduce production non_logic_keyword -> is_acsl_spec
-- On INVARIANT reduce production non_logic_keyword -> is_acsl_spec
-- On INTER reduce production non_logic_keyword -> is_acsl_spec
-- On INTEGER reduce production non_logic_keyword -> is_acsl_spec
-- On INT reduce production non_logic_keyword -> is_acsl_spec
-- On INITIALIZED reduce production non_logic_keyword -> is_acsl_spec
-- On INDUCTIVE reduce production non_logic_keyword -> is_acsl_spec
-- On INCLUDE reduce production non_logic_keyword -> is_acsl_spec
-- On IMPLIES reduce production non_logic_keyword -> is_acsl_spec
-- On IMPACT reduce production non_logic_keyword -> is_acsl_spec
-- On IFF reduce production non_logic_keyword -> is_acsl_spec
-- On IF reduce production non_logic_keyword -> is_acsl_spec
-- On IDENTIFIER reduce production non_logic_keyword -> is_acsl_spec
-- On HATHAT reduce production non_logic_keyword -> is_acsl_spec
-- On HAT reduce production non_logic_keyword -> is_acsl_spec
-- On GTGT reduce production non_logic_keyword -> is_acsl_spec
-- On GT reduce production non_logic_keyword -> is_acsl_spec
-- On GLOBAL reduce production non_logic_keyword -> is_acsl_spec
-- On GHOST reduce production non_logic_keyword -> is_acsl_spec
-- On GE reduce production non_logic_keyword -> is_acsl_spec
-- On FUNCTION reduce production non_logic_keyword -> is_acsl_spec
-- On FROM reduce production non_logic_keyword -> is_acsl_spec
-- On FRESH reduce production non_logic_keyword -> is_acsl_spec
-- On FREES reduce production non_logic_keyword -> is_acsl_spec
-- On FREEABLE reduce production non_logic_keyword -> is_acsl_spec
-- On FORALL reduce production non_logic_keyword -> is_acsl_spec
-- On FOR reduce production non_logic_keyword -> is_acsl_spec
-- On FLOAT reduce production non_logic_keyword -> is_acsl_spec
-- On FALSE reduce production non_logic_keyword -> is_acsl_spec
-- On EXT_LET reduce production non_logic_keyword -> is_acsl_spec
-- On EXT_AT reduce production non_logic_keyword -> is_acsl_spec
-- On EXITS reduce production non_logic_keyword -> is_acsl_spec
-- On EXISTS reduce production non_logic_keyword -> is_acsl_spec
-- On EQUAL reduce production non_logic_keyword -> is_acsl_spec
-- On EQ reduce production non_logic_keyword -> is_acsl_spec
-- On EOF reduce production non_logic_keyword -> is_acsl_spec
-- On ENUM reduce production non_logic_keyword -> is_acsl_spec
-- On ENSURES reduce production non_logic_keyword -> is_acsl_spec
-- On EMPTY reduce production non_logic_keyword -> is_acsl_spec
-- On ELSE reduce production non_logic_keyword -> is_acsl_spec
-- On DYNAMIC reduce production non_logic_keyword -> is_acsl_spec
-- On DOUBLE reduce production non_logic_keyword -> is_acsl_spec
-- On DOTDOTDOT reduce production non_logic_keyword -> is_acsl_spec
-- On DOTDOT reduce production non_logic_keyword -> is_acsl_spec
-- On DOT reduce production non_logic_keyword -> is_acsl_spec
-- On DOLLAR reduce production non_logic_keyword -> is_acsl_spec
-- On DISJOINT reduce production non_logic_keyword -> is_acsl_spec
-- On DECREASES reduce production non_logic_keyword -> is_acsl_spec
-- On DANGLING reduce production non_logic_keyword -> is_acsl_spec
-- On CUSTOM reduce production non_logic_keyword -> is_acsl_spec
-- On CONTRACT reduce production non_logic_keyword -> is_acsl_spec
-- On CONTINUES reduce production non_logic_keyword -> is_acsl_spec
-- On CONSTANT10 reduce production non_logic_keyword -> is_acsl_spec
-- On CONSTANT reduce production non_logic_keyword -> is_acsl_spec
-- On CONST reduce production non_logic_keyword -> is_acsl_spec
-- On COMPLETE reduce production non_logic_keyword -> is_acsl_spec
-- On COMMA reduce production non_logic_keyword -> is_acsl_spec
-- On COLONGT reduce production non_logic_keyword -> is_acsl_spec
-- On COLONCOLON reduce production non_logic_keyword -> is_acsl_spec
-- On COLON2 reduce production non_logic_keyword -> is_acsl_spec
-- On COLON reduce production non_logic_keyword -> is_acsl_spec
-- On CHAR reduce production non_logic_keyword -> is_acsl_spec
-- On CASE reduce production non_logic_keyword -> is_acsl_spec
-- On BSUNION reduce production non_logic_keyword -> is_acsl_spec
-- On BSTYPE reduce production non_logic_keyword -> is_acsl_spec
-- On BREAKS reduce production non_logic_keyword -> is_acsl_spec
-- On BOOLEAN reduce production non_logic_keyword -> is_acsl_spec
-- On BOOL reduce production non_logic_keyword -> is_acsl_spec
-- On BLOCK_LENGTH reduce production non_logic_keyword -> is_acsl_spec
-- On BIMPLIES reduce production non_logic_keyword -> is_acsl_spec
-- On BIFF reduce production non_logic_keyword -> is_acsl_spec
-- On BEHAVIORS reduce production non_logic_keyword -> is_acsl_spec
-- On BEHAVIOR reduce production non_logic_keyword -> is_acsl_spec
-- On BASE_ADDR reduce production non_logic_keyword -> is_acsl_spec
-- On AXIOMATIC reduce production non_logic_keyword -> is_acsl_spec
-- On AXIOM reduce production non_logic_keyword -> is_acsl_spec
-- On AUTOMATIC reduce production non_logic_keyword -> is_acsl_spec
-- On AT reduce production non_logic_keyword -> is_acsl_spec
-- On ASSUMES reduce production non_logic_keyword -> is_acsl_spec
-- On ASSIGNS reduce production non_logic_keyword -> is_acsl_spec
-- On ASSERT reduce production non_logic_keyword -> is_acsl_spec
-- On ARROW reduce production non_logic_keyword -> is_acsl_spec
-- On AND reduce production non_logic_keyword -> is_acsl_spec
-- On AMP reduce production non_logic_keyword -> is_acsl_spec
-- On ALLOCATION reduce production non_logic_keyword -> is_acsl_spec
-- On ALLOCATES reduce production non_logic_keyword -> is_acsl_spec
-- On ALLOCABLE reduce production non_logic_keyword -> is_acsl_spec

State 82:
## Known stack suffix:
## is_acsl_other
## LR(1) items:
non_logic_keyword -> is_acsl_other . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production non_logic_keyword -> is_acsl_other
-- On WITH reduce production non_logic_keyword -> is_acsl_other
-- On VOLATILE reduce production non_logic_keyword -> is_acsl_other
-- On VOID reduce production non_logic_keyword -> is_acsl_other
-- On VARIANT reduce production non_logic_keyword -> is_acsl_other
-- On VALID_READ reduce production non_logic_keyword -> is_acsl_other
-- On VALID_RANGE reduce production non_logic_keyword -> is_acsl_other
-- On VALID_INDEX reduce production non_logic_keyword -> is_acsl_other
-- On VALID reduce production non_logic_keyword -> is_acsl_other
-- On UNSIGNED reduce production non_logic_keyword -> is_acsl_other
-- On UNION reduce production non_logic_keyword -> is_acsl_other
-- On UNALLOCATED reduce production non_logic_keyword -> is_acsl_other
-- On TYPEOF reduce production non_logic_keyword -> is_acsl_other
-- On TYPENAME reduce production non_logic_keyword -> is_acsl_other
-- On TYPE reduce production non_logic_keyword -> is_acsl_other
-- On TRUE reduce production non_logic_keyword -> is_acsl_other
-- On TILDE reduce production non_logic_keyword -> is_acsl_other
-- On TERMINATES reduce production non_logic_keyword -> is_acsl_other
-- On STRUCT reduce production non_logic_keyword -> is_acsl_other
-- On STRING_LITERAL reduce production non_logic_keyword -> is_acsl_other
-- On STATIC reduce production non_logic_keyword -> is_acsl_other
-- On STAR reduce production non_logic_keyword -> is_acsl_other
-- On SLICE reduce production non_logic_keyword -> is_acsl_other
-- On SLASH reduce production non_logic_keyword -> is_acsl_other
-- On SIZEOF reduce production non_logic_keyword -> is_acsl_other
-- On SIGNED reduce production non_logic_keyword -> is_acsl_other
-- On SHORT reduce production non_logic_keyword -> is_acsl_other
-- On SEPARATED reduce production non_logic_keyword -> is_acsl_other
-- On SEMICOLON reduce production non_logic_keyword -> is_acsl_other
-- On RSQUARE reduce production non_logic_keyword -> is_acsl_other
-- On RPAR reduce production non_logic_keyword -> is_acsl_other
-- On RETURNS reduce production non_logic_keyword -> is_acsl_other
-- On RESULT reduce production non_logic_keyword -> is_acsl_other
-- On REQUIRES reduce production non_logic_keyword -> is_acsl_other
-- On REGISTER reduce production non_logic_keyword -> is_acsl_other
-- On REAL reduce production non_logic_keyword -> is_acsl_other
-- On READS reduce production non_logic_keyword -> is_acsl_other
-- On RBRACE reduce production non_logic_keyword -> is_acsl_other
-- On QUESTION reduce production non_logic_keyword -> is_acsl_other
-- On PREDICATE reduce production non_logic_keyword -> is_acsl_other
-- On PRAGMA reduce production non_logic_keyword -> is_acsl_other
-- On PLUS reduce production non_logic_keyword -> is_acsl_other
-- On PIPE reduce production non_logic_keyword -> is_acsl_other
-- On PERCENT reduce production non_logic_keyword -> is_acsl_other
-- On OR reduce production non_logic_keyword -> is_acsl_other
-- On OLD reduce production non_logic_keyword -> is_acsl_other
-- On OFFSET reduce production non_logic_keyword -> is_acsl_other
-- On NULL reduce production non_logic_keyword -> is_acsl_other
-- On NOTHING reduce production non_logic_keyword -> is_acsl_other
-- On NOT reduce production non_logic_keyword -> is_acsl_other
-- On NE reduce production non_logic_keyword -> is_acsl_other
-- On MODULE reduce production non_logic_keyword -> is_acsl_other
-- On MODEL reduce production non_logic_keyword -> is_acsl_other
-- On MINUS reduce production non_logic_keyword -> is_acsl_other
-- On LTLT reduce production non_logic_keyword -> is_acsl_other
-- On LTCOLON reduce production non_logic_keyword -> is_acsl_other
-- On LT reduce production non_logic_keyword -> is_acsl_other
-- On LSQUARE reduce production non_logic_keyword -> is_acsl_other
-- On LPAR reduce production non_logic_keyword -> is_acsl_other
-- On LOOP reduce production non_logic_keyword -> is_acsl_other
-- On LONG reduce production non_logic_keyword -> is_acsl_other
-- On LOGIC reduce production non_logic_keyword -> is_acsl_other
-- On LET reduce production non_logic_keyword -> is_acsl_other
-- On LEMMA reduce production non_logic_keyword -> is_acsl_other
-- On LE reduce production non_logic_keyword -> is_acsl_other
-- On LBRACE reduce production non_logic_keyword -> is_acsl_other
-- On LAMBDA reduce production non_logic_keyword -> is_acsl_other
-- On LABEL reduce production non_logic_keyword -> is_acsl_other
-- On INVARIANT reduce production non_logic_keyword -> is_acsl_other
-- On INTER reduce production non_logic_keyword -> is_acsl_other
-- On INTEGER reduce production non_logic_keyword -> is_acsl_other
-- On INT reduce production non_logic_keyword -> is_acsl_other
-- On INITIALIZED reduce production non_logic_keyword -> is_acsl_other
-- On INDUCTIVE reduce production non_logic_keyword -> is_acsl_other
-- On INCLUDE reduce production non_logic_keyword -> is_acsl_other
-- On IMPLIES reduce production non_logic_keyword -> is_acsl_other
-- On IMPACT reduce production non_logic_keyword -> is_acsl_other
-- On IFF reduce production non_logic_keyword -> is_acsl_other
-- On IF reduce production non_logic_keyword -> is_acsl_other
-- On IDENTIFIER reduce production non_logic_keyword -> is_acsl_other
-- On HATHAT reduce production non_logic_keyword -> is_acsl_other
-- On HAT reduce production non_logic_keyword -> is_acsl_other
-- On GTGT reduce production non_logic_keyword -> is_acsl_other
-- On GT reduce production non_logic_keyword -> is_acsl_other
-- On GLOBAL reduce production non_logic_keyword -> is_acsl_other
-- On GHOST reduce production non_logic_keyword -> is_acsl_other
-- On GE reduce production non_logic_keyword -> is_acsl_other
-- On FUNCTION reduce production non_logic_keyword -> is_acsl_other
-- On FROM reduce production non_logic_keyword -> is_acsl_other
-- On FRESH reduce production non_logic_keyword -> is_acsl_other
-- On FREES reduce production non_logic_keyword -> is_acsl_other
-- On FREEABLE reduce production non_logic_keyword -> is_acsl_other
-- On FORALL reduce production non_logic_keyword -> is_acsl_other
-- On FOR reduce production non_logic_keyword -> is_acsl_other
-- On FLOAT reduce production non_logic_keyword -> is_acsl_other
-- On FALSE reduce production non_logic_keyword -> is_acsl_other
-- On EXT_LET reduce production non_logic_keyword -> is_acsl_other
-- On EXT_AT reduce production non_logic_keyword -> is_acsl_other
-- On EXITS reduce production non_logic_keyword -> is_acsl_other
-- On EXISTS reduce production non_logic_keyword -> is_acsl_other
-- On EQUAL reduce production non_logic_keyword -> is_acsl_other
-- On EQ reduce production non_logic_keyword -> is_acsl_other
-- On EOF reduce production non_logic_keyword -> is_acsl_other
-- On ENUM reduce production non_logic_keyword -> is_acsl_other
-- On ENSURES reduce production non_logic_keyword -> is_acsl_other
-- On EMPTY reduce production non_logic_keyword -> is_acsl_other
-- On ELSE reduce production non_logic_keyword -> is_acsl_other
-- On DYNAMIC reduce production non_logic_keyword -> is_acsl_other
-- On DOUBLE reduce production non_logic_keyword -> is_acsl_other
-- On DOTDOTDOT reduce production non_logic_keyword -> is_acsl_other
-- On DOTDOT reduce production non_logic_keyword -> is_acsl_other
-- On DOT reduce production non_logic_keyword -> is_acsl_other
-- On DOLLAR reduce production non_logic_keyword -> is_acsl_other
-- On DISJOINT reduce production non_logic_keyword -> is_acsl_other
-- On DECREASES reduce production non_logic_keyword -> is_acsl_other
-- On DANGLING reduce production non_logic_keyword -> is_acsl_other
-- On CUSTOM reduce production non_logic_keyword -> is_acsl_other
-- On CONTRACT reduce production non_logic_keyword -> is_acsl_other
-- On CONTINUES reduce production non_logic_keyword -> is_acsl_other
-- On CONSTANT10 reduce production non_logic_keyword -> is_acsl_other
-- On CONSTANT reduce production non_logic_keyword -> is_acsl_other
-- On CONST reduce production non_logic_keyword -> is_acsl_other
-- On COMPLETE reduce production non_logic_keyword -> is_acsl_other
-- On COMMA reduce production non_logic_keyword -> is_acsl_other
-- On COLONGT reduce production non_logic_keyword -> is_acsl_other
-- On COLONCOLON reduce production non_logic_keyword -> is_acsl_other
-- On COLON2 reduce production non_logic_keyword -> is_acsl_other
-- On COLON reduce production non_logic_keyword -> is_acsl_other
-- On CHAR reduce production non_logic_keyword -> is_acsl_other
-- On CASE reduce production non_logic_keyword -> is_acsl_other
-- On BSUNION reduce production non_logic_keyword -> is_acsl_other
-- On BSTYPE reduce production non_logic_keyword -> is_acsl_other
-- On BREAKS reduce production non_logic_keyword -> is_acsl_other
-- On BOOLEAN reduce production non_logic_keyword -> is_acsl_other
-- On BOOL reduce production non_logic_keyword -> is_acsl_other
-- On BLOCK_LENGTH reduce production non_logic_keyword -> is_acsl_other
-- On BIMPLIES reduce production non_logic_keyword -> is_acsl_other
-- On BIFF reduce production non_logic_keyword -> is_acsl_other
-- On BEHAVIORS reduce production non_logic_keyword -> is_acsl_other
-- On BEHAVIOR reduce production non_logic_keyword -> is_acsl_other
-- On BASE_ADDR reduce production non_logic_keyword -> is_acsl_other
-- On AXIOMATIC reduce production non_logic_keyword -> is_acsl_other
-- On AXIOM reduce production non_logic_keyword -> is_acsl_other
-- On AUTOMATIC reduce production non_logic_keyword -> is_acsl_other
-- On AT reduce production non_logic_keyword -> is_acsl_other
-- On ASSUMES reduce production non_logic_keyword -> is_acsl_other
-- On ASSIGNS reduce production non_logic_keyword -> is_acsl_other
-- On ASSERT reduce production non_logic_keyword -> is_acsl_other
-- On ARROW reduce production non_logic_keyword -> is_acsl_other
-- On AND reduce production non_logic_keyword -> is_acsl_other
-- On AMP reduce production non_logic_keyword -> is_acsl_other
-- On ALLOCATION reduce production non_logic_keyword -> is_acsl_other
-- On ALLOCATES reduce production non_logic_keyword -> is_acsl_other
-- On ALLOCABLE reduce production non_logic_keyword -> is_acsl_other

State 83:
## Known stack suffix:
## is_acsl_decl_or_code_annot
## LR(1) items:
non_logic_keyword -> is_acsl_decl_or_code_annot . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On WITH reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On VOLATILE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On VOID reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On VARIANT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On VALID_READ reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On VALID_RANGE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On VALID_INDEX reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On VALID reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On UNSIGNED reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On UNION reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On UNALLOCATED reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On TYPEOF reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On TYPENAME reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On TYPE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On TRUE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On TILDE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On TERMINATES reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On STRUCT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On STRING_LITERAL reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On STATIC reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On STAR reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On SLICE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On SLASH reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On SIZEOF reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On SIGNED reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On SHORT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On SEPARATED reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On SEMICOLON reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On RSQUARE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On RPAR reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On RETURNS reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On RESULT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On REQUIRES reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On REGISTER reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On REAL reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On READS reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On RBRACE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On QUESTION reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On PREDICATE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On PRAGMA reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On PLUS reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On PIPE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On PERCENT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On OR reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On OLD reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On OFFSET reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On NULL reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On NOTHING reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On NOT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On NE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On MODULE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On MODEL reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On MINUS reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On LTLT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On LTCOLON reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On LT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On LSQUARE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On LPAR reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On LOOP reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On LONG reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On LOGIC reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On LET reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On LEMMA reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On LE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On LBRACE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On LAMBDA reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On LABEL reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On INVARIANT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On INTER reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On INTEGER reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On INT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On INITIALIZED reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On INDUCTIVE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On INCLUDE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On IMPLIES reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On IMPACT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On IFF reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On IF reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On IDENTIFIER reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On HATHAT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On HAT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On GTGT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On GT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On GLOBAL reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On GHOST reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On GE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On FUNCTION reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On FROM reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On FRESH reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On FREES reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On FREEABLE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On FORALL reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On FOR reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On FLOAT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On FALSE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On EXT_LET reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On EXT_AT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On EXITS reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On EXISTS reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On EQUAL reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On EQ reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On EOF reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On ENUM reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On ENSURES reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On EMPTY reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On ELSE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On DYNAMIC reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On DOUBLE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On DOTDOTDOT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On DOTDOT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On DOT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On DOLLAR reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On DISJOINT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On DECREASES reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On DANGLING reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On CUSTOM reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On CONTRACT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On CONTINUES reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On CONSTANT10 reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On CONSTANT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On CONST reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On COMPLETE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On COMMA reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On COLONGT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On COLONCOLON reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On COLON2 reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On COLON reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On CHAR reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On CASE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On BSUNION reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On BSTYPE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On BREAKS reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On BOOLEAN reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On BOOL reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On BLOCK_LENGTH reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On BIMPLIES reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On BIFF reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On BEHAVIORS reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On BEHAVIOR reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On BASE_ADDR reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On AXIOMATIC reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On AXIOM reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On AUTOMATIC reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On AT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On ASSUMES reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On ASSIGNS reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On ASSERT reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On ARROW reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On AND reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On AMP reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On ALLOCATION reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On ALLOCATES reduce production non_logic_keyword -> is_acsl_decl_or_code_annot
-- On ALLOCABLE reduce production non_logic_keyword -> is_acsl_decl_or_code_annot

State 84:
## Known stack suffix:
## identifier_or_typename
## LR(1) items:
any_identifier -> identifier_or_typename . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production any_identifier -> identifier_or_typename
-- On WITH reduce production any_identifier -> identifier_or_typename
-- On VOLATILE reduce production any_identifier -> identifier_or_typename
-- On VOID reduce production any_identifier -> identifier_or_typename
-- On VARIANT reduce production any_identifier -> identifier_or_typename
-- On VALID_READ reduce production any_identifier -> identifier_or_typename
-- On VALID_RANGE reduce production any_identifier -> identifier_or_typename
-- On VALID_INDEX reduce production any_identifier -> identifier_or_typename
-- On VALID reduce production any_identifier -> identifier_or_typename
-- On UNSIGNED reduce production any_identifier -> identifier_or_typename
-- On UNION reduce production any_identifier -> identifier_or_typename
-- On UNALLOCATED reduce production any_identifier -> identifier_or_typename
-- On TYPEOF reduce production any_identifier -> identifier_or_typename
-- On TYPENAME reduce production any_identifier -> identifier_or_typename
-- On TYPE reduce production any_identifier -> identifier_or_typename
-- On TRUE reduce production any_identifier -> identifier_or_typename
-- On TILDE reduce production any_identifier -> identifier_or_typename
-- On TERMINATES reduce production any_identifier -> identifier_or_typename
-- On STRUCT reduce production any_identifier -> identifier_or_typename
-- On STRING_LITERAL reduce production any_identifier -> identifier_or_typename
-- On STATIC reduce production any_identifier -> identifier_or_typename
-- On STAR reduce production any_identifier -> identifier_or_typename
-- On SLICE reduce production any_identifier -> identifier_or_typename
-- On SLASH reduce production any_identifier -> identifier_or_typename
-- On SIZEOF reduce production any_identifier -> identifier_or_typename
-- On SIGNED reduce production any_identifier -> identifier_or_typename
-- On SHORT reduce production any_identifier -> identifier_or_typename
-- On SEPARATED reduce production any_identifier -> identifier_or_typename
-- On SEMICOLON reduce production any_identifier -> identifier_or_typename
-- On RSQUARE reduce production any_identifier -> identifier_or_typename
-- On RPAR reduce production any_identifier -> identifier_or_typename
-- On RETURNS reduce production any_identifier -> identifier_or_typename
-- On RESULT reduce production any_identifier -> identifier_or_typename
-- On REQUIRES reduce production any_identifier -> identifier_or_typename
-- On REGISTER reduce production any_identifier -> identifier_or_typename
-- On REAL reduce production any_identifier -> identifier_or_typename
-- On READS reduce production any_identifier -> identifier_or_typename
-- On RBRACE reduce production any_identifier -> identifier_or_typename
-- On QUESTION reduce production any_identifier -> identifier_or_typename
-- On PREDICATE reduce production any_identifier -> identifier_or_typename
-- On PRAGMA reduce production any_identifier -> identifier_or_typename
-- On PLUS reduce production any_identifier -> identifier_or_typename
-- On PIPE reduce production any_identifier -> identifier_or_typename
-- On PERCENT reduce production any_identifier -> identifier_or_typename
-- On OR reduce production any_identifier -> identifier_or_typename
-- On OLD reduce production any_identifier -> identifier_or_typename
-- On OFFSET reduce production any_identifier -> identifier_or_typename
-- On NULL reduce production any_identifier -> identifier_or_typename
-- On NOTHING reduce production any_identifier -> identifier_or_typename
-- On NOT reduce production any_identifier -> identifier_or_typename
-- On NE reduce production any_identifier -> identifier_or_typename
-- On MODULE reduce production any_identifier -> identifier_or_typename
-- On MODEL reduce production any_identifier -> identifier_or_typename
-- On MINUS reduce production any_identifier -> identifier_or_typename
-- On LTLT reduce production any_identifier -> identifier_or_typename
-- On LTCOLON reduce production any_identifier -> identifier_or_typename
-- On LT reduce production any_identifier -> identifier_or_typename
-- On LSQUARE reduce production any_identifier -> identifier_or_typename
-- On LPAR reduce production any_identifier -> identifier_or_typename
-- On LOOP reduce production any_identifier -> identifier_or_typename
-- On LONG reduce production any_identifier -> identifier_or_typename
-- On LOGIC reduce production any_identifier -> identifier_or_typename
-- On LET reduce production any_identifier -> identifier_or_typename
-- On LEMMA reduce production any_identifier -> identifier_or_typename
-- On LE reduce production any_identifier -> identifier_or_typename
-- On LBRACE reduce production any_identifier -> identifier_or_typename
-- On LAMBDA reduce production any_identifier -> identifier_or_typename
-- On LABEL reduce production any_identifier -> identifier_or_typename
-- On INVARIANT reduce production any_identifier -> identifier_or_typename
-- On INTER reduce production any_identifier -> identifier_or_typename
-- On INTEGER reduce production any_identifier -> identifier_or_typename
-- On INT reduce production any_identifier -> identifier_or_typename
-- On INITIALIZED reduce production any_identifier -> identifier_or_typename
-- On INDUCTIVE reduce production any_identifier -> identifier_or_typename
-- On INCLUDE reduce production any_identifier -> identifier_or_typename
-- On IMPLIES reduce production any_identifier -> identifier_or_typename
-- On IMPACT reduce production any_identifier -> identifier_or_typename
-- On IFF reduce production any_identifier -> identifier_or_typename
-- On IF reduce production any_identifier -> identifier_or_typename
-- On IDENTIFIER reduce production any_identifier -> identifier_or_typename
-- On HATHAT reduce production any_identifier -> identifier_or_typename
-- On HAT reduce production any_identifier -> identifier_or_typename
-- On GTGT reduce production any_identifier -> identifier_or_typename
-- On GT reduce production any_identifier -> identifier_or_typename
-- On GLOBAL reduce production any_identifier -> identifier_or_typename
-- On GHOST reduce production any_identifier -> identifier_or_typename
-- On GE reduce production any_identifier -> identifier_or_typename
-- On FUNCTION reduce production any_identifier -> identifier_or_typename
-- On FROM reduce production any_identifier -> identifier_or_typename
-- On FRESH reduce production any_identifier -> identifier_or_typename
-- On FREES reduce production any_identifier -> identifier_or_typename
-- On FREEABLE reduce production any_identifier -> identifier_or_typename
-- On FORALL reduce production any_identifier -> identifier_or_typename
-- On FOR reduce production any_identifier -> identifier_or_typename
-- On FLOAT reduce production any_identifier -> identifier_or_typename
-- On FALSE reduce production any_identifier -> identifier_or_typename
-- On EXT_LET reduce production any_identifier -> identifier_or_typename
-- On EXT_AT reduce production any_identifier -> identifier_or_typename
-- On EXITS reduce production any_identifier -> identifier_or_typename
-- On EXISTS reduce production any_identifier -> identifier_or_typename
-- On EQUAL reduce production any_identifier -> identifier_or_typename
-- On EQ reduce production any_identifier -> identifier_or_typename
-- On EOF reduce production any_identifier -> identifier_or_typename
-- On ENUM reduce production any_identifier -> identifier_or_typename
-- On ENSURES reduce production any_identifier -> identifier_or_typename
-- On EMPTY reduce production any_identifier -> identifier_or_typename
-- On ELSE reduce production any_identifier -> identifier_or_typename
-- On DYNAMIC reduce production any_identifier -> identifier_or_typename
-- On DOUBLE reduce production any_identifier -> identifier_or_typename
-- On DOTDOTDOT reduce production any_identifier -> identifier_or_typename
-- On DOTDOT reduce production any_identifier -> identifier_or_typename
-- On DOT reduce production any_identifier -> identifier_or_typename
-- On DOLLAR reduce production any_identifier -> identifier_or_typename
-- On DISJOINT reduce production any_identifier -> identifier_or_typename
-- On DECREASES reduce production any_identifier -> identifier_or_typename
-- On DANGLING reduce production any_identifier -> identifier_or_typename
-- On CUSTOM reduce production any_identifier -> identifier_or_typename
-- On CONTRACT reduce production any_identifier -> identifier_or_typename
-- On CONTINUES reduce production any_identifier -> identifier_or_typename
-- On CONSTANT10 reduce production any_identifier -> identifier_or_typename
-- On CONSTANT reduce production any_identifier -> identifier_or_typename
-- On CONST reduce production any_identifier -> identifier_or_typename
-- On COMPLETE reduce production any_identifier -> identifier_or_typename
-- On COMMA reduce production any_identifier -> identifier_or_typename
-- On COLONGT reduce production any_identifier -> identifier_or_typename
-- On COLONCOLON reduce production any_identifier -> identifier_or_typename
-- On COLON2 reduce production any_identifier -> identifier_or_typename
-- On COLON reduce production any_identifier -> identifier_or_typename
-- On CHAR reduce production any_identifier -> identifier_or_typename
-- On CASE reduce production any_identifier -> identifier_or_typename
-- On BSUNION reduce production any_identifier -> identifier_or_typename
-- On BSTYPE reduce production any_identifier -> identifier_or_typename
-- On BREAKS reduce production any_identifier -> identifier_or_typename
-- On BOOLEAN reduce production any_identifier -> identifier_or_typename
-- On BOOL reduce production any_identifier -> identifier_or_typename
-- On BLOCK_LENGTH reduce production any_identifier -> identifier_or_typename
-- On BIMPLIES reduce production any_identifier -> identifier_or_typename
-- On BIFF reduce production any_identifier -> identifier_or_typename
-- On BEHAVIORS reduce production any_identifier -> identifier_or_typename
-- On BEHAVIOR reduce production any_identifier -> identifier_or_typename
-- On BASE_ADDR reduce production any_identifier -> identifier_or_typename
-- On AXIOMATIC reduce production any_identifier -> identifier_or_typename
-- On AXIOM reduce production any_identifier -> identifier_or_typename
-- On AUTOMATIC reduce production any_identifier -> identifier_or_typename
-- On AT reduce production any_identifier -> identifier_or_typename
-- On ASSUMES reduce production any_identifier -> identifier_or_typename
-- On ASSIGNS reduce production any_identifier -> identifier_or_typename
-- On ASSERT reduce production any_identifier -> identifier_or_typename
-- On ARROW reduce production any_identifier -> identifier_or_typename
-- On AND reduce production any_identifier -> identifier_or_typename
-- On AMP reduce production any_identifier -> identifier_or_typename
-- On ALLOCATION reduce production any_identifier -> identifier_or_typename
-- On ALLOCATES reduce production any_identifier -> identifier_or_typename
-- On ALLOCABLE reduce production any_identifier -> identifier_or_typename

State 85:
## Known stack suffix:
## c_keyword
## LR(1) items:
non_logic_keyword -> c_keyword . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production non_logic_keyword -> c_keyword
-- On WITH reduce production non_logic_keyword -> c_keyword
-- On VOLATILE reduce production non_logic_keyword -> c_keyword
-- On VOID reduce production non_logic_keyword -> c_keyword
-- On VARIANT reduce production non_logic_keyword -> c_keyword
-- On VALID_READ reduce production non_logic_keyword -> c_keyword
-- On VALID_RANGE reduce production non_logic_keyword -> c_keyword
-- On VALID_INDEX reduce production non_logic_keyword -> c_keyword
-- On VALID reduce production non_logic_keyword -> c_keyword
-- On UNSIGNED reduce production non_logic_keyword -> c_keyword
-- On UNION reduce production non_logic_keyword -> c_keyword
-- On UNALLOCATED reduce production non_logic_keyword -> c_keyword
-- On TYPEOF reduce production non_logic_keyword -> c_keyword
-- On TYPENAME reduce production non_logic_keyword -> c_keyword
-- On TYPE reduce production non_logic_keyword -> c_keyword
-- On TRUE reduce production non_logic_keyword -> c_keyword
-- On TILDE reduce production non_logic_keyword -> c_keyword
-- On TERMINATES reduce production non_logic_keyword -> c_keyword
-- On STRUCT reduce production non_logic_keyword -> c_keyword
-- On STRING_LITERAL reduce production non_logic_keyword -> c_keyword
-- On STATIC reduce production non_logic_keyword -> c_keyword
-- On STAR reduce production non_logic_keyword -> c_keyword
-- On SLICE reduce production non_logic_keyword -> c_keyword
-- On SLASH reduce production non_logic_keyword -> c_keyword
-- On SIZEOF reduce production non_logic_keyword -> c_keyword
-- On SIGNED reduce production non_logic_keyword -> c_keyword
-- On SHORT reduce production non_logic_keyword -> c_keyword
-- On SEPARATED reduce production non_logic_keyword -> c_keyword
-- On SEMICOLON reduce production non_logic_keyword -> c_keyword
-- On RSQUARE reduce production non_logic_keyword -> c_keyword
-- On RPAR reduce production non_logic_keyword -> c_keyword
-- On RETURNS reduce production non_logic_keyword -> c_keyword
-- On RESULT reduce production non_logic_keyword -> c_keyword
-- On REQUIRES reduce production non_logic_keyword -> c_keyword
-- On REGISTER reduce production non_logic_keyword -> c_keyword
-- On REAL reduce production non_logic_keyword -> c_keyword
-- On READS reduce production non_logic_keyword -> c_keyword
-- On RBRACE reduce production non_logic_keyword -> c_keyword
-- On QUESTION reduce production non_logic_keyword -> c_keyword
-- On PREDICATE reduce production non_logic_keyword -> c_keyword
-- On PRAGMA reduce production non_logic_keyword -> c_keyword
-- On PLUS reduce production non_logic_keyword -> c_keyword
-- On PIPE reduce production non_logic_keyword -> c_keyword
-- On PERCENT reduce production non_logic_keyword -> c_keyword
-- On OR reduce production non_logic_keyword -> c_keyword
-- On OLD reduce production non_logic_keyword -> c_keyword
-- On OFFSET reduce production non_logic_keyword -> c_keyword
-- On NULL reduce production non_logic_keyword -> c_keyword
-- On NOTHING reduce production non_logic_keyword -> c_keyword
-- On NOT reduce production non_logic_keyword -> c_keyword
-- On NE reduce production non_logic_keyword -> c_keyword
-- On MODULE reduce production non_logic_keyword -> c_keyword
-- On MODEL reduce production non_logic_keyword -> c_keyword
-- On MINUS reduce production non_logic_keyword -> c_keyword
-- On LTLT reduce production non_logic_keyword -> c_keyword
-- On LTCOLON reduce production non_logic_keyword -> c_keyword
-- On LT reduce production non_logic_keyword -> c_keyword
-- On LSQUARE reduce production non_logic_keyword -> c_keyword
-- On LPAR reduce production non_logic_keyword -> c_keyword
-- On LOOP reduce production non_logic_keyword -> c_keyword
-- On LONG reduce production non_logic_keyword -> c_keyword
-- On LOGIC reduce production non_logic_keyword -> c_keyword
-- On LET reduce production non_logic_keyword -> c_keyword
-- On LEMMA reduce production non_logic_keyword -> c_keyword
-- On LE reduce production non_logic_keyword -> c_keyword
-- On LBRACE reduce production non_logic_keyword -> c_keyword
-- On LAMBDA reduce production non_logic_keyword -> c_keyword
-- On LABEL reduce production non_logic_keyword -> c_keyword
-- On INVARIANT reduce production non_logic_keyword -> c_keyword
-- On INTER reduce production non_logic_keyword -> c_keyword
-- On INTEGER reduce production non_logic_keyword -> c_keyword
-- On INT reduce production non_logic_keyword -> c_keyword
-- On INITIALIZED reduce production non_logic_keyword -> c_keyword
-- On INDUCTIVE reduce production non_logic_keyword -> c_keyword
-- On INCLUDE reduce production non_logic_keyword -> c_keyword
-- On IMPLIES reduce production non_logic_keyword -> c_keyword
-- On IMPACT reduce production non_logic_keyword -> c_keyword
-- On IFF reduce production non_logic_keyword -> c_keyword
-- On IF reduce production non_logic_keyword -> c_keyword
-- On IDENTIFIER reduce production non_logic_keyword -> c_keyword
-- On HATHAT reduce production non_logic_keyword -> c_keyword
-- On HAT reduce production non_logic_keyword -> c_keyword
-- On GTGT reduce production non_logic_keyword -> c_keyword
-- On GT reduce production non_logic_keyword -> c_keyword
-- On GLOBAL reduce production non_logic_keyword -> c_keyword
-- On GHOST reduce production non_logic_keyword -> c_keyword
-- On GE reduce production non_logic_keyword -> c_keyword
-- On FUNCTION reduce production non_logic_keyword -> c_keyword
-- On FROM reduce production non_logic_keyword -> c_keyword
-- On FRESH reduce production non_logic_keyword -> c_keyword
-- On FREES reduce production non_logic_keyword -> c_keyword
-- On FREEABLE reduce production non_logic_keyword -> c_keyword
-- On FORALL reduce production non_logic_keyword -> c_keyword
-- On FOR reduce production non_logic_keyword -> c_keyword
-- On FLOAT reduce production non_logic_keyword -> c_keyword
-- On FALSE reduce production non_logic_keyword -> c_keyword
-- On EXT_LET reduce production non_logic_keyword -> c_keyword
-- On EXT_AT reduce production non_logic_keyword -> c_keyword
-- On EXITS reduce production non_logic_keyword -> c_keyword
-- On EXISTS reduce production non_logic_keyword -> c_keyword
-- On EQUAL reduce production non_logic_keyword -> c_keyword
-- On EQ reduce production non_logic_keyword -> c_keyword
-- On EOF reduce production non_logic_keyword -> c_keyword
-- On ENUM reduce production non_logic_keyword -> c_keyword
-- On ENSURES reduce production non_logic_keyword -> c_keyword
-- On EMPTY reduce production non_logic_keyword -> c_keyword
-- On ELSE reduce production non_logic_keyword -> c_keyword
-- On DYNAMIC reduce production non_logic_keyword -> c_keyword
-- On DOUBLE reduce production non_logic_keyword -> c_keyword
-- On DOTDOTDOT reduce production non_logic_keyword -> c_keyword
-- On DOTDOT reduce production non_logic_keyword -> c_keyword
-- On DOT reduce production non_logic_keyword -> c_keyword
-- On DOLLAR reduce production non_logic_keyword -> c_keyword
-- On DISJOINT reduce production non_logic_keyword -> c_keyword
-- On DECREASES reduce production non_logic_keyword -> c_keyword
-- On DANGLING reduce production non_logic_keyword -> c_keyword
-- On CUSTOM reduce production non_logic_keyword -> c_keyword
-- On CONTRACT reduce production non_logic_keyword -> c_keyword
-- On CONTINUES reduce production non_logic_keyword -> c_keyword
-- On CONSTANT10 reduce production non_logic_keyword -> c_keyword
-- On CONSTANT reduce production non_logic_keyword -> c_keyword
-- On CONST reduce production non_logic_keyword -> c_keyword
-- On COMPLETE reduce production non_logic_keyword -> c_keyword
-- On COMMA reduce production non_logic_keyword -> c_keyword
-- On COLONGT reduce production non_logic_keyword -> c_keyword
-- On COLONCOLON reduce production non_logic_keyword -> c_keyword
-- On COLON2 reduce production non_logic_keyword -> c_keyword
-- On COLON reduce production non_logic_keyword -> c_keyword
-- On CHAR reduce production non_logic_keyword -> c_keyword
-- On CASE reduce production non_logic_keyword -> c_keyword
-- On BSUNION reduce production non_logic_keyword -> c_keyword
-- On BSTYPE reduce production non_logic_keyword -> c_keyword
-- On BREAKS reduce production non_logic_keyword -> c_keyword
-- On BOOLEAN reduce production non_logic_keyword -> c_keyword
-- On BOOL reduce production non_logic_keyword -> c_keyword
-- On BLOCK_LENGTH reduce production non_logic_keyword -> c_keyword
-- On BIMPLIES reduce production non_logic_keyword -> c_keyword
-- On BIFF reduce production non_logic_keyword -> c_keyword
-- On BEHAVIORS reduce production non_logic_keyword -> c_keyword
-- On BEHAVIOR reduce production non_logic_keyword -> c_keyword
-- On BASE_ADDR reduce production non_logic_keyword -> c_keyword
-- On AXIOMATIC reduce production non_logic_keyword -> c_keyword
-- On AXIOM reduce production non_logic_keyword -> c_keyword
-- On AUTOMATIC reduce production non_logic_keyword -> c_keyword
-- On AT reduce production non_logic_keyword -> c_keyword
-- On ASSUMES reduce production non_logic_keyword -> c_keyword
-- On ASSIGNS reduce production non_logic_keyword -> c_keyword
-- On ASSERT reduce production non_logic_keyword -> c_keyword
-- On ARROW reduce production non_logic_keyword -> c_keyword
-- On AND reduce production non_logic_keyword -> c_keyword
-- On AMP reduce production non_logic_keyword -> c_keyword
-- On ALLOCATION reduce production non_logic_keyword -> c_keyword
-- On ALLOCATES reduce production non_logic_keyword -> c_keyword
-- On ALLOCABLE reduce production non_logic_keyword -> c_keyword

State 86:
## Known stack suffix:
## any_identifier
## LR(1) items:
label_name -> any_identifier . [ RPAR RBRACE COMMA ]
## Transitions:
## Reductions:
-- On RPAR reduce production label_name -> any_identifier
-- On RBRACE reduce production label_name -> any_identifier
-- On COMMA reduce production label_name -> any_identifier

State 87:
## Known stack suffix:
## acsl_c_keyword
## LR(1) items:
non_logic_keyword -> acsl_c_keyword . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production non_logic_keyword -> acsl_c_keyword
-- On WITH reduce production non_logic_keyword -> acsl_c_keyword
-- On VOLATILE reduce production non_logic_keyword -> acsl_c_keyword
-- On VOID reduce production non_logic_keyword -> acsl_c_keyword
-- On VARIANT reduce production non_logic_keyword -> acsl_c_keyword
-- On VALID_READ reduce production non_logic_keyword -> acsl_c_keyword
-- On VALID_RANGE reduce production non_logic_keyword -> acsl_c_keyword
-- On VALID_INDEX reduce production non_logic_keyword -> acsl_c_keyword
-- On VALID reduce production non_logic_keyword -> acsl_c_keyword
-- On UNSIGNED reduce production non_logic_keyword -> acsl_c_keyword
-- On UNION reduce production non_logic_keyword -> acsl_c_keyword
-- On UNALLOCATED reduce production non_logic_keyword -> acsl_c_keyword
-- On TYPEOF reduce production non_logic_keyword -> acsl_c_keyword
-- On TYPENAME reduce production non_logic_keyword -> acsl_c_keyword
-- On TYPE reduce production non_logic_keyword -> acsl_c_keyword
-- On TRUE reduce production non_logic_keyword -> acsl_c_keyword
-- On TILDE reduce production non_logic_keyword -> acsl_c_keyword
-- On TERMINATES reduce production non_logic_keyword -> acsl_c_keyword
-- On STRUCT reduce production non_logic_keyword -> acsl_c_keyword
-- On STRING_LITERAL reduce production non_logic_keyword -> acsl_c_keyword
-- On STATIC reduce production non_logic_keyword -> acsl_c_keyword
-- On STAR reduce production non_logic_keyword -> acsl_c_keyword
-- On SLICE reduce production non_logic_keyword -> acsl_c_keyword
-- On SLASH reduce production non_logic_keyword -> acsl_c_keyword
-- On SIZEOF reduce production non_logic_keyword -> acsl_c_keyword
-- On SIGNED reduce production non_logic_keyword -> acsl_c_keyword
-- On SHORT reduce production non_logic_keyword -> acsl_c_keyword
-- On SEPARATED reduce production non_logic_keyword -> acsl_c_keyword
-- On SEMICOLON reduce production non_logic_keyword -> acsl_c_keyword
-- On RSQUARE reduce production non_logic_keyword -> acsl_c_keyword
-- On RPAR reduce production non_logic_keyword -> acsl_c_keyword
-- On RETURNS reduce production non_logic_keyword -> acsl_c_keyword
-- On RESULT reduce production non_logic_keyword -> acsl_c_keyword
-- On REQUIRES reduce production non_logic_keyword -> acsl_c_keyword
-- On REGISTER reduce production non_logic_keyword -> acsl_c_keyword
-- On REAL reduce production non_logic_keyword -> acsl_c_keyword
-- On READS reduce production non_logic_keyword -> acsl_c_keyword
-- On RBRACE reduce production non_logic_keyword -> acsl_c_keyword
-- On QUESTION reduce production non_logic_keyword -> acsl_c_keyword
-- On PREDICATE reduce production non_logic_keyword -> acsl_c_keyword
-- On PRAGMA reduce production non_logic_keyword -> acsl_c_keyword
-- On PLUS reduce production non_logic_keyword -> acsl_c_keyword
-- On PIPE reduce production non_logic_keyword -> acsl_c_keyword
-- On PERCENT reduce production non_logic_keyword -> acsl_c_keyword
-- On OR reduce production non_logic_keyword -> acsl_c_keyword
-- On OLD reduce production non_logic_keyword -> acsl_c_keyword
-- On OFFSET reduce production non_logic_keyword -> acsl_c_keyword
-- On NULL reduce production non_logic_keyword -> acsl_c_keyword
-- On NOTHING reduce production non_logic_keyword -> acsl_c_keyword
-- On NOT reduce production non_logic_keyword -> acsl_c_keyword
-- On NE reduce production non_logic_keyword -> acsl_c_keyword
-- On MODULE reduce production non_logic_keyword -> acsl_c_keyword
-- On MODEL reduce production non_logic_keyword -> acsl_c_keyword
-- On MINUS reduce production non_logic_keyword -> acsl_c_keyword
-- On LTLT reduce production non_logic_keyword -> acsl_c_keyword
-- On LTCOLON reduce production non_logic_keyword -> acsl_c_keyword
-- On LT reduce production non_logic_keyword -> acsl_c_keyword
-- On LSQUARE reduce production non_logic_keyword -> acsl_c_keyword
-- On LPAR reduce production non_logic_keyword -> acsl_c_keyword
-- On LOOP reduce production non_logic_keyword -> acsl_c_keyword
-- On LONG reduce production non_logic_keyword -> acsl_c_keyword
-- On LOGIC reduce production non_logic_keyword -> acsl_c_keyword
-- On LET reduce production non_logic_keyword -> acsl_c_keyword
-- On LEMMA reduce production non_logic_keyword -> acsl_c_keyword
-- On LE reduce production non_logic_keyword -> acsl_c_keyword
-- On LBRACE reduce production non_logic_keyword -> acsl_c_keyword
-- On LAMBDA reduce production non_logic_keyword -> acsl_c_keyword
-- On LABEL reduce production non_logic_keyword -> acsl_c_keyword
-- On INVARIANT reduce production non_logic_keyword -> acsl_c_keyword
-- On INTER reduce production non_logic_keyword -> acsl_c_keyword
-- On INTEGER reduce production non_logic_keyword -> acsl_c_keyword
-- On INT reduce production non_logic_keyword -> acsl_c_keyword
-- On INITIALIZED reduce production non_logic_keyword -> acsl_c_keyword
-- On INDUCTIVE reduce production non_logic_keyword -> acsl_c_keyword
-- On INCLUDE reduce production non_logic_keyword -> acsl_c_keyword
-- On IMPLIES reduce production non_logic_keyword -> acsl_c_keyword
-- On IMPACT reduce production non_logic_keyword -> acsl_c_keyword
-- On IFF reduce production non_logic_keyword -> acsl_c_keyword
-- On IF reduce production non_logic_keyword -> acsl_c_keyword
-- On IDENTIFIER reduce production non_logic_keyword -> acsl_c_keyword
-- On HATHAT reduce production non_logic_keyword -> acsl_c_keyword
-- On HAT reduce production non_logic_keyword -> acsl_c_keyword
-- On GTGT reduce production non_logic_keyword -> acsl_c_keyword
-- On GT reduce production non_logic_keyword -> acsl_c_keyword
-- On GLOBAL reduce production non_logic_keyword -> acsl_c_keyword
-- On GHOST reduce production non_logic_keyword -> acsl_c_keyword
-- On GE reduce production non_logic_keyword -> acsl_c_keyword
-- On FUNCTION reduce production non_logic_keyword -> acsl_c_keyword
-- On FROM reduce production non_logic_keyword -> acsl_c_keyword
-- On FRESH reduce production non_logic_keyword -> acsl_c_keyword
-- On FREES reduce production non_logic_keyword -> acsl_c_keyword
-- On FREEABLE reduce production non_logic_keyword -> acsl_c_keyword
-- On FORALL reduce production non_logic_keyword -> acsl_c_keyword
-- On FOR reduce production non_logic_keyword -> acsl_c_keyword
-- On FLOAT reduce production non_logic_keyword -> acsl_c_keyword
-- On FALSE reduce production non_logic_keyword -> acsl_c_keyword
-- On EXT_LET reduce production non_logic_keyword -> acsl_c_keyword
-- On EXT_AT reduce production non_logic_keyword -> acsl_c_keyword
-- On EXITS reduce production non_logic_keyword -> acsl_c_keyword
-- On EXISTS reduce production non_logic_keyword -> acsl_c_keyword
-- On EQUAL reduce production non_logic_keyword -> acsl_c_keyword
-- On EQ reduce production non_logic_keyword -> acsl_c_keyword
-- On EOF reduce production non_logic_keyword -> acsl_c_keyword
-- On ENUM reduce production non_logic_keyword -> acsl_c_keyword
-- On ENSURES reduce production non_logic_keyword -> acsl_c_keyword
-- On EMPTY reduce production non_logic_keyword -> acsl_c_keyword
-- On ELSE reduce production non_logic_keyword -> acsl_c_keyword
-- On DYNAMIC reduce production non_logic_keyword -> acsl_c_keyword
-- On DOUBLE reduce production non_logic_keyword -> acsl_c_keyword
-- On DOTDOTDOT reduce production non_logic_keyword -> acsl_c_keyword
-- On DOTDOT reduce production non_logic_keyword -> acsl_c_keyword
-- On DOT reduce production non_logic_keyword -> acsl_c_keyword
-- On DOLLAR reduce production non_logic_keyword -> acsl_c_keyword
-- On DISJOINT reduce production non_logic_keyword -> acsl_c_keyword
-- On DECREASES reduce production non_logic_keyword -> acsl_c_keyword
-- On DANGLING reduce production non_logic_keyword -> acsl_c_keyword
-- On CUSTOM reduce production non_logic_keyword -> acsl_c_keyword
-- On CONTRACT reduce production non_logic_keyword -> acsl_c_keyword
-- On CONTINUES reduce production non_logic_keyword -> acsl_c_keyword
-- On CONSTANT10 reduce production non_logic_keyword -> acsl_c_keyword
-- On CONSTANT reduce production non_logic_keyword -> acsl_c_keyword
-- On CONST reduce production non_logic_keyword -> acsl_c_keyword
-- On COMPLETE reduce production non_logic_keyword -> acsl_c_keyword
-- On COMMA reduce production non_logic_keyword -> acsl_c_keyword
-- On COLONGT reduce production non_logic_keyword -> acsl_c_keyword
-- On COLONCOLON reduce production non_logic_keyword -> acsl_c_keyword
-- On COLON2 reduce production non_logic_keyword -> acsl_c_keyword
-- On COLON reduce production non_logic_keyword -> acsl_c_keyword
-- On CHAR reduce production non_logic_keyword -> acsl_c_keyword
-- On CASE reduce production non_logic_keyword -> acsl_c_keyword
-- On BSUNION reduce production non_logic_keyword -> acsl_c_keyword
-- On BSTYPE reduce production non_logic_keyword -> acsl_c_keyword
-- On BREAKS reduce production non_logic_keyword -> acsl_c_keyword
-- On BOOLEAN reduce production non_logic_keyword -> acsl_c_keyword
-- On BOOL reduce production non_logic_keyword -> acsl_c_keyword
-- On BLOCK_LENGTH reduce production non_logic_keyword -> acsl_c_keyword
-- On BIMPLIES reduce production non_logic_keyword -> acsl_c_keyword
-- On BIFF reduce production non_logic_keyword -> acsl_c_keyword
-- On BEHAVIORS reduce production non_logic_keyword -> acsl_c_keyword
-- On BEHAVIOR reduce production non_logic_keyword -> acsl_c_keyword
-- On BASE_ADDR reduce production non_logic_keyword -> acsl_c_keyword
-- On AXIOMATIC reduce production non_logic_keyword -> acsl_c_keyword
-- On AXIOM reduce production non_logic_keyword -> acsl_c_keyword
-- On AUTOMATIC reduce production non_logic_keyword -> acsl_c_keyword
-- On AT reduce production non_logic_keyword -> acsl_c_keyword
-- On ASSUMES reduce production non_logic_keyword -> acsl_c_keyword
-- On ASSIGNS reduce production non_logic_keyword -> acsl_c_keyword
-- On ASSERT reduce production non_logic_keyword -> acsl_c_keyword
-- On ARROW reduce production non_logic_keyword -> acsl_c_keyword
-- On AND reduce production non_logic_keyword -> acsl_c_keyword
-- On AMP reduce production non_logic_keyword -> acsl_c_keyword
-- On ALLOCATION reduce production non_logic_keyword -> acsl_c_keyword
-- On ALLOCATES reduce production non_logic_keyword -> acsl_c_keyword
-- On ALLOCABLE reduce production non_logic_keyword -> acsl_c_keyword

State 88:
## Known stack suffix:
## opt_label_list
## LR(1) items:
opt_label_1 -> opt_label_list . [ LPAR ]
## Transitions:
## Reductions:
-- On LPAR reduce production opt_label_1 -> opt_label_list

State 89:
## Known stack suffix:
## VALID_READ opt_label_1
## LR(1) items:
lexpr_inner -> VALID_READ opt_label_1 . LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 90
## Reductions:

State 90:
## Known stack suffix:
## VALID_READ opt_label_1 LPAR
## LR(1) items:
lexpr_inner -> VALID_READ opt_label_1 LPAR . lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 548
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 91:
## Known stack suffix:
## VALID_RANGE
## LR(1) items:
lexpr_inner -> VALID_RANGE . opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LBRACE shift to state 7
-- On opt_label_list shift to state 88
-- On opt_label_1 shift to state 92
## Reductions:
-- On LPAR reduce production opt_label_list ->

State 92:
## Known stack suffix:
## VALID_RANGE opt_label_1
## LR(1) items:
lexpr_inner -> VALID_RANGE opt_label_1 . LPAR lexpr COMMA lexpr COMMA lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## VALID_RANGE opt_label_1 LPAR
## LR(1) items:
lexpr_inner -> VALID_RANGE opt_label_1 LPAR . lexpr COMMA lexpr COMMA lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 542
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 94:
## Known stack suffix:
## VALID_INDEX
## LR(1) items:
lexpr_inner -> VALID_INDEX . opt_label_1 LPAR lexpr COMMA lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LBRACE shift to state 7
-- On opt_label_list shift to state 88
-- On opt_label_1 shift to state 95
## Reductions:
-- On LPAR reduce production opt_label_list ->

State 95:
## Known stack suffix:
## VALID_INDEX opt_label_1
## LR(1) items:
lexpr_inner -> VALID_INDEX opt_label_1 . LPAR lexpr COMMA lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## VALID_INDEX opt_label_1 LPAR
## LR(1) items:
lexpr_inner -> VALID_INDEX opt_label_1 LPAR . lexpr COMMA lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 538
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 97:
## Known stack suffix:
## VALID
## LR(1) items:
lexpr_inner -> VALID . opt_label_1 LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LBRACE shift to state 7
-- On opt_label_list shift to state 88
-- On opt_label_1 shift to state 98
## Reductions:
-- On LPAR reduce production opt_label_list ->

State 98:
## Known stack suffix:
## VALID opt_label_1
## LR(1) items:
lexpr_inner -> VALID opt_label_1 . LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 99
## Reductions:

State 99:
## Known stack suffix:
## VALID opt_label_1 LPAR
## LR(1) items:
lexpr_inner -> VALID opt_label_1 LPAR . lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 536
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 100:
## Known stack suffix:
## UNALLOCATED
## LR(1) items:
lexpr_inner -> UNALLOCATED . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> UNALLOCATED
-- On WITH reduce production lexpr_inner -> UNALLOCATED
-- On STAR reduce production lexpr_inner -> UNALLOCATED
-- On SLASH reduce production lexpr_inner -> UNALLOCATED
-- On SEMICOLON reduce production lexpr_inner -> UNALLOCATED
-- On RSQUARE reduce production lexpr_inner -> UNALLOCATED
-- On RPAR reduce production lexpr_inner -> UNALLOCATED
-- On RETURNS reduce production lexpr_inner -> UNALLOCATED
-- On REQUIRES reduce production lexpr_inner -> UNALLOCATED
-- On READS reduce production lexpr_inner -> UNALLOCATED
-- On RBRACE reduce production lexpr_inner -> UNALLOCATED
-- On QUESTION reduce production lexpr_inner -> UNALLOCATED
-- On PLUS reduce production lexpr_inner -> UNALLOCATED
-- On PIPE reduce production lexpr_inner -> UNALLOCATED
-- On PERCENT reduce production lexpr_inner -> UNALLOCATED
-- On OR reduce production lexpr_inner -> UNALLOCATED
-- On NE reduce production lexpr_inner -> UNALLOCATED
-- On MINUS reduce production lexpr_inner -> UNALLOCATED
-- On LTLT reduce production lexpr_inner -> UNALLOCATED
-- On LTCOLON reduce production lexpr_inner -> UNALLOCATED
-- On LT reduce production lexpr_inner -> UNALLOCATED
-- On LSQUARE reduce production lexpr_inner -> UNALLOCATED
-- On LE reduce production lexpr_inner -> UNALLOCATED
-- On IMPLIES reduce production lexpr_inner -> UNALLOCATED
-- On IFF reduce production lexpr_inner -> UNALLOCATED
-- On IDENTIFIER reduce production lexpr_inner -> UNALLOCATED
-- On HATHAT reduce production lexpr_inner -> UNALLOCATED
-- On HAT reduce production lexpr_inner -> UNALLOCATED
-- On GTGT reduce production lexpr_inner -> UNALLOCATED
-- On GT reduce production lexpr_inner -> UNALLOCATED
-- On GE reduce production lexpr_inner -> UNALLOCATED
-- On FROM reduce production lexpr_inner -> UNALLOCATED
-- On FREES reduce production lexpr_inner -> UNALLOCATED
-- On FOR reduce production lexpr_inner -> UNALLOCATED
-- On EXITS reduce production lexpr_inner -> UNALLOCATED
-- On EQUAL reduce production lexpr_inner -> UNALLOCATED
-- On EQ reduce production lexpr_inner -> UNALLOCATED
-- On EOF reduce production lexpr_inner -> UNALLOCATED
-- On ENSURES reduce production lexpr_inner -> UNALLOCATED
-- On DOTDOT reduce production lexpr_inner -> UNALLOCATED
-- On DOT reduce production lexpr_inner -> UNALLOCATED
-- On DISJOINT reduce production lexpr_inner -> UNALLOCATED
-- On DECREASES reduce production lexpr_inner -> UNALLOCATED
-- On CONTINUES reduce production lexpr_inner -> UNALLOCATED
-- On COMPLETE reduce production lexpr_inner -> UNALLOCATED
-- On COMMA reduce production lexpr_inner -> UNALLOCATED
-- On COLONGT reduce production lexpr_inner -> UNALLOCATED
-- On COLON2 reduce production lexpr_inner -> UNALLOCATED
-- On BREAKS reduce production lexpr_inner -> UNALLOCATED
-- On BIMPLIES reduce production lexpr_inner -> UNALLOCATED
-- On BIFF reduce production lexpr_inner -> UNALLOCATED
-- On BEHAVIOR reduce production lexpr_inner -> UNALLOCATED
-- On ASSUMES reduce production lexpr_inner -> UNALLOCATED
-- On ASSIGNS reduce production lexpr_inner -> UNALLOCATED
-- On ARROW reduce production lexpr_inner -> UNALLOCATED
-- On AND reduce production lexpr_inner -> UNALLOCATED
-- On AMP reduce production lexpr_inner -> UNALLOCATED
-- On ALLOCATES reduce production lexpr_inner -> UNALLOCATED

State 101:
## Known stack suffix:
## TYPEOF
## LR(1) items:
lexpr_inner -> TYPEOF . LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 102
## Reductions:

State 102:
## Known stack suffix:
## TYPEOF LPAR
## LR(1) items:
lexpr_inner -> TYPEOF LPAR . lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 534
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 103:
## Known stack suffix:
## TRUE
## LR(1) items:
lexpr_inner -> TRUE . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> TRUE
-- On WITH reduce production lexpr_inner -> TRUE
-- On STAR reduce production lexpr_inner -> TRUE
-- On SLASH reduce production lexpr_inner -> TRUE
-- On SEMICOLON reduce production lexpr_inner -> TRUE
-- On RSQUARE reduce production lexpr_inner -> TRUE
-- On RPAR reduce production lexpr_inner -> TRUE
-- On RETURNS reduce production lexpr_inner -> TRUE
-- On REQUIRES reduce production lexpr_inner -> TRUE
-- On READS reduce production lexpr_inner -> TRUE
-- On RBRACE reduce production lexpr_inner -> TRUE
-- On QUESTION reduce production lexpr_inner -> TRUE
-- On PLUS reduce production lexpr_inner -> TRUE
-- On PIPE reduce production lexpr_inner -> TRUE
-- On PERCENT reduce production lexpr_inner -> TRUE
-- On OR reduce production lexpr_inner -> TRUE
-- On NE reduce production lexpr_inner -> TRUE
-- On MINUS reduce production lexpr_inner -> TRUE
-- On LTLT reduce production lexpr_inner -> TRUE
-- On LTCOLON reduce production lexpr_inner -> TRUE
-- On LT reduce production lexpr_inner -> TRUE
-- On LSQUARE reduce production lexpr_inner -> TRUE
-- On LE reduce production lexpr_inner -> TRUE
-- On IMPLIES reduce production lexpr_inner -> TRUE
-- On IFF reduce production lexpr_inner -> TRUE
-- On IDENTIFIER reduce production lexpr_inner -> TRUE
-- On HATHAT reduce production lexpr_inner -> TRUE
-- On HAT reduce production lexpr_inner -> TRUE
-- On GTGT reduce production lexpr_inner -> TRUE
-- On GT reduce production lexpr_inner -> TRUE
-- On GE reduce production lexpr_inner -> TRUE
-- On FROM reduce production lexpr_inner -> TRUE
-- On FREES reduce production lexpr_inner -> TRUE
-- On FOR reduce production lexpr_inner -> TRUE
-- On EXITS reduce production lexpr_inner -> TRUE
-- On EQUAL reduce production lexpr_inner -> TRUE
-- On EQ reduce production lexpr_inner -> TRUE
-- On EOF reduce production lexpr_inner -> TRUE
-- On ENSURES reduce production lexpr_inner -> TRUE
-- On DOTDOT reduce production lexpr_inner -> TRUE
-- On DOT reduce production lexpr_inner -> TRUE
-- On DISJOINT reduce production lexpr_inner -> TRUE
-- On DECREASES reduce production lexpr_inner -> TRUE
-- On CONTINUES reduce production lexpr_inner -> TRUE
-- On COMPLETE reduce production lexpr_inner -> TRUE
-- On COMMA reduce production lexpr_inner -> TRUE
-- On COLONGT reduce production lexpr_inner -> TRUE
-- On COLON2 reduce production lexpr_inner -> TRUE
-- On BREAKS reduce production lexpr_inner -> TRUE
-- On BIMPLIES reduce production lexpr_inner -> TRUE
-- On BIFF reduce production lexpr_inner -> TRUE
-- On BEHAVIOR reduce production lexpr_inner -> TRUE
-- On ASSUMES reduce production lexpr_inner -> TRUE
-- On ASSIGNS reduce production lexpr_inner -> TRUE
-- On ARROW reduce production lexpr_inner -> TRUE
-- On AND reduce production lexpr_inner -> TRUE
-- On AMP reduce production lexpr_inner -> TRUE
-- On ALLOCATES reduce production lexpr_inner -> TRUE

State 104:
## Known stack suffix:
## TILDE
## LR(1) items:
lexpr_inner -> TILDE . lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 212
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LBRACE shift to state 224
-- On INTER shift to state 249
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FALSE shift to state 265
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On string shift to state 304
-- On lexpr_inner shift to state 533
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 105:
## Known stack suffix:
## STRING_LITERAL
## LR(1) items:
string -> STRING_LITERAL . [ WRITES WITH STRING_LITERAL STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 COLON BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production string -> STRING_LITERAL
-- On WITH reduce production string -> STRING_LITERAL
-- On STRING_LITERAL reduce production string -> STRING_LITERAL
-- On STAR reduce production string -> STRING_LITERAL
-- On SLASH reduce production string -> STRING_LITERAL
-- On SEMICOLON reduce production string -> STRING_LITERAL
-- On RSQUARE reduce production string -> STRING_LITERAL
-- On RPAR reduce production string -> STRING_LITERAL
-- On RETURNS reduce production string -> STRING_LITERAL
-- On REQUIRES reduce production string -> STRING_LITERAL
-- On READS reduce production string -> STRING_LITERAL
-- On RBRACE reduce production string -> STRING_LITERAL
-- On QUESTION reduce production string -> STRING_LITERAL
-- On PLUS reduce production string -> STRING_LITERAL
-- On PIPE reduce production string -> STRING_LITERAL
-- On PERCENT reduce production string -> STRING_LITERAL
-- On OR reduce production string -> STRING_LITERAL
-- On NE reduce production string -> STRING_LITERAL
-- On MINUS reduce production string -> STRING_LITERAL
-- On LTLT reduce production string -> STRING_LITERAL
-- On LTCOLON reduce production string -> STRING_LITERAL
-- On LT reduce production string -> STRING_LITERAL
-- On LSQUARE reduce production string -> STRING_LITERAL
-- On LE reduce production string -> STRING_LITERAL
-- On IMPLIES reduce production string -> STRING_LITERAL
-- On IFF reduce production string -> STRING_LITERAL
-- On IDENTIFIER reduce production string -> STRING_LITERAL
-- On HATHAT reduce production string -> STRING_LITERAL
-- On HAT reduce production string -> STRING_LITERAL
-- On GTGT reduce production string -> STRING_LITERAL
-- On GT reduce production string -> STRING_LITERAL
-- On GE reduce production string -> STRING_LITERAL
-- On FROM reduce production string -> STRING_LITERAL
-- On FREES reduce production string -> STRING_LITERAL
-- On FOR reduce production string -> STRING_LITERAL
-- On EXITS reduce production string -> STRING_LITERAL
-- On EQUAL reduce production string -> STRING_LITERAL
-- On EQ reduce production string -> STRING_LITERAL
-- On EOF reduce production string -> STRING_LITERAL
-- On ENSURES reduce production string -> STRING_LITERAL
-- On DOTDOT reduce production string -> STRING_LITERAL
-- On DOT reduce production string -> STRING_LITERAL
-- On DISJOINT reduce production string -> STRING_LITERAL
-- On DECREASES reduce production string -> STRING_LITERAL
-- On CONTINUES reduce production string -> STRING_LITERAL
-- On COMPLETE reduce production string -> STRING_LITERAL
-- On COMMA reduce production string -> STRING_LITERAL
-- On COLONGT reduce production string -> STRING_LITERAL
-- On COLON2 reduce production string -> STRING_LITERAL
-- On COLON reduce production string -> STRING_LITERAL
-- On BREAKS reduce production string -> STRING_LITERAL
-- On BIMPLIES reduce production string -> STRING_LITERAL
-- On BIFF reduce production string -> STRING_LITERAL
-- On BEHAVIOR reduce production string -> STRING_LITERAL
-- On ASSUMES reduce production string -> STRING_LITERAL
-- On ASSIGNS reduce production string -> STRING_LITERAL
-- On ARROW reduce production string -> STRING_LITERAL
-- On AND reduce production string -> STRING_LITERAL
-- On AMP reduce production string -> STRING_LITERAL
-- On ALLOCATES reduce production string -> STRING_LITERAL

State 106:
## Known stack suffix:
## STATIC
## LR(1) items:
lexpr_inner -> STATIC . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> STATIC
-- On WITH reduce production lexpr_inner -> STATIC
-- On STAR reduce production lexpr_inner -> STATIC
-- On SLASH reduce production lexpr_inner -> STATIC
-- On SEMICOLON reduce production lexpr_inner -> STATIC
-- On RSQUARE reduce production lexpr_inner -> STATIC
-- On RPAR reduce production lexpr_inner -> STATIC
-- On RETURNS reduce production lexpr_inner -> STATIC
-- On REQUIRES reduce production lexpr_inner -> STATIC
-- On READS reduce production lexpr_inner -> STATIC
-- On RBRACE reduce production lexpr_inner -> STATIC
-- On QUESTION reduce production lexpr_inner -> STATIC
-- On PLUS reduce production lexpr_inner -> STATIC
-- On PIPE reduce production lexpr_inner -> STATIC
-- On PERCENT reduce production lexpr_inner -> STATIC
-- On OR reduce production lexpr_inner -> STATIC
-- On NE reduce production lexpr_inner -> STATIC
-- On MINUS reduce production lexpr_inner -> STATIC
-- On LTLT reduce production lexpr_inner -> STATIC
-- On LTCOLON reduce production lexpr_inner -> STATIC
-- On LT reduce production lexpr_inner -> STATIC
-- On LSQUARE reduce production lexpr_inner -> STATIC
-- On LE reduce production lexpr_inner -> STATIC
-- On IMPLIES reduce production lexpr_inner -> STATIC
-- On IFF reduce production lexpr_inner -> STATIC
-- On IDENTIFIER reduce production lexpr_inner -> STATIC
-- On HATHAT reduce production lexpr_inner -> STATIC
-- On HAT reduce production lexpr_inner -> STATIC
-- On GTGT reduce production lexpr_inner -> STATIC
-- On GT reduce production lexpr_inner -> STATIC
-- On GE reduce production lexpr_inner -> STATIC
-- On FROM reduce production lexpr_inner -> STATIC
-- On FREES reduce production lexpr_inner -> STATIC
-- On FOR reduce production lexpr_inner -> STATIC
-- On EXITS reduce production lexpr_inner -> STATIC
-- On EQUAL reduce production lexpr_inner -> STATIC
-- On EQ reduce production lexpr_inner -> STATIC
-- On EOF reduce production lexpr_inner -> STATIC
-- On ENSURES reduce production lexpr_inner -> STATIC
-- On DOTDOT reduce production lexpr_inner -> STATIC
-- On DOT reduce production lexpr_inner -> STATIC
-- On DISJOINT reduce production lexpr_inner -> STATIC
-- On DECREASES reduce production lexpr_inner -> STATIC
-- On CONTINUES reduce production lexpr_inner -> STATIC
-- On COMPLETE reduce production lexpr_inner -> STATIC
-- On COMMA reduce production lexpr_inner -> STATIC
-- On COLONGT reduce production lexpr_inner -> STATIC
-- On COLON2 reduce production lexpr_inner -> STATIC
-- On BREAKS reduce production lexpr_inner -> STATIC
-- On BIMPLIES reduce production lexpr_inner -> STATIC
-- On BIFF reduce production lexpr_inner -> STATIC
-- On BEHAVIOR reduce production lexpr_inner -> STATIC
-- On ASSUMES reduce production lexpr_inner -> STATIC
-- On ASSIGNS reduce production lexpr_inner -> STATIC
-- On ARROW reduce production lexpr_inner -> STATIC
-- On AND reduce production lexpr_inner -> STATIC
-- On AMP reduce production lexpr_inner -> STATIC
-- On ALLOCATES reduce production lexpr_inner -> STATIC

State 107:
## Known stack suffix:
## STAR
## LR(1) items:
lexpr_inner -> STAR . lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 212
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LBRACE shift to state 224
-- On INTER shift to state 249
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FALSE shift to state 265
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On string shift to state 304
-- On lexpr_inner shift to state 532
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 108:
## Known stack suffix:
## SIZEOF
## LR(1) items:
lexpr_inner -> SIZEOF . LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> SIZEOF . LPAR logic_type RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 109
## Reductions:

State 109:
## Known stack suffix:
## SIZEOF LPAR
## LR(1) items:
lexpr_inner -> SIZEOF LPAR . lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> SIZEOF LPAR . logic_type RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 110
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 111
-- On UNION shift to state 119
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 122
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 195
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 198
-- On SHORT shift to state 199
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 216
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 217
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 468
-- On INT shift to state 469
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 470
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 471
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 472
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 473
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 474
-- On BOOL shift to state 475
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On type_spec shift to state 157
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On logic_type shift to state 528
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 530
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 110:
## Known stack suffix:
## VOID
## LR(1) items:
c_keyword -> VOID . [ COLON ]
type_spec -> VOID . [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production type_spec -> VOID
-- On STAR reduce production type_spec -> VOID
-- On RPAR reduce production type_spec -> VOID
-- On LSQUARE reduce production type_spec -> VOID
-- On LPAR reduce production type_spec -> VOID
-- On IDENTIFIER reduce production type_spec -> VOID
-- On CONST reduce production type_spec -> VOID
-- On COLON reduce production c_keyword -> VOID

State 111:
## Known stack suffix:
## UNSIGNED
## LR(1) items:
c_keyword -> UNSIGNED . [ COLON ]
type_spec -> UNSIGNED . CHAR [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> UNSIGNED . INT [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> UNSIGNED . [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> UNSIGNED . SHORT [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> UNSIGNED . LONG [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> UNSIGNED . LONG INT [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> UNSIGNED . LONG LONG [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> UNSIGNED . LONG LONG INT [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
## Transitions:
-- On SHORT shift to state 112
-- On LONG shift to state 113
-- On INT shift to state 117
-- On CHAR shift to state 118
## Reductions:
-- On VOLATILE reduce production type_spec -> UNSIGNED
-- On STAR reduce production type_spec -> UNSIGNED
-- On RPAR reduce production type_spec -> UNSIGNED
-- On LSQUARE reduce production type_spec -> UNSIGNED
-- On LPAR reduce production type_spec -> UNSIGNED
-- On IDENTIFIER reduce production type_spec -> UNSIGNED
-- On CONST reduce production type_spec -> UNSIGNED
-- On COLON reduce production c_keyword -> UNSIGNED

State 112:
## Known stack suffix:
## UNSIGNED SHORT
## LR(1) items:
type_spec -> UNSIGNED SHORT . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> UNSIGNED SHORT
-- On WITH reduce production type_spec -> UNSIGNED SHORT
-- On VOLATILE reduce production type_spec -> UNSIGNED SHORT
-- On STAR reduce production type_spec -> UNSIGNED SHORT
-- On SLASH reduce production type_spec -> UNSIGNED SHORT
-- On SEMICOLON reduce production type_spec -> UNSIGNED SHORT
-- On RSQUARE reduce production type_spec -> UNSIGNED SHORT
-- On RPAR reduce production type_spec -> UNSIGNED SHORT
-- On RETURNS reduce production type_spec -> UNSIGNED SHORT
-- On REQUIRES reduce production type_spec -> UNSIGNED SHORT
-- On READS reduce production type_spec -> UNSIGNED SHORT
-- On RBRACE reduce production type_spec -> UNSIGNED SHORT
-- On QUESTION reduce production type_spec -> UNSIGNED SHORT
-- On PLUS reduce production type_spec -> UNSIGNED SHORT
-- On PIPE reduce production type_spec -> UNSIGNED SHORT
-- On PERCENT reduce production type_spec -> UNSIGNED SHORT
-- On OR reduce production type_spec -> UNSIGNED SHORT
-- On NE reduce production type_spec -> UNSIGNED SHORT
-- On MINUS reduce production type_spec -> UNSIGNED SHORT
-- On LTLT reduce production type_spec -> UNSIGNED SHORT
-- On LTCOLON reduce production type_spec -> UNSIGNED SHORT
-- On LT reduce production type_spec -> UNSIGNED SHORT
-- On LSQUARE reduce production type_spec -> UNSIGNED SHORT
-- On LPAR reduce production type_spec -> UNSIGNED SHORT
-- On LE reduce production type_spec -> UNSIGNED SHORT
-- On LBRACE reduce production type_spec -> UNSIGNED SHORT
-- On IMPLIES reduce production type_spec -> UNSIGNED SHORT
-- On IFF reduce production type_spec -> UNSIGNED SHORT
-- On IDENTIFIER reduce production type_spec -> UNSIGNED SHORT
-- On HATHAT reduce production type_spec -> UNSIGNED SHORT
-- On HAT reduce production type_spec -> UNSIGNED SHORT
-- On GTGT reduce production type_spec -> UNSIGNED SHORT
-- On GT reduce production type_spec -> UNSIGNED SHORT
-- On GE reduce production type_spec -> UNSIGNED SHORT
-- On FROM reduce production type_spec -> UNSIGNED SHORT
-- On FREES reduce production type_spec -> UNSIGNED SHORT
-- On FOR reduce production type_spec -> UNSIGNED SHORT
-- On EXITS reduce production type_spec -> UNSIGNED SHORT
-- On EQUAL reduce production type_spec -> UNSIGNED SHORT
-- On EQ reduce production type_spec -> UNSIGNED SHORT
-- On EOF reduce production type_spec -> UNSIGNED SHORT
-- On ENSURES reduce production type_spec -> UNSIGNED SHORT
-- On DOTDOT reduce production type_spec -> UNSIGNED SHORT
-- On DOT reduce production type_spec -> UNSIGNED SHORT
-- On DISJOINT reduce production type_spec -> UNSIGNED SHORT
-- On DECREASES reduce production type_spec -> UNSIGNED SHORT
-- On CONTINUES reduce production type_spec -> UNSIGNED SHORT
-- On CONST reduce production type_spec -> UNSIGNED SHORT
-- On COMPLETE reduce production type_spec -> UNSIGNED SHORT
-- On COMMA reduce production type_spec -> UNSIGNED SHORT
-- On COLONGT reduce production type_spec -> UNSIGNED SHORT
-- On COLON2 reduce production type_spec -> UNSIGNED SHORT
-- On BREAKS reduce production type_spec -> UNSIGNED SHORT
-- On BIMPLIES reduce production type_spec -> UNSIGNED SHORT
-- On BIFF reduce production type_spec -> UNSIGNED SHORT
-- On BEHAVIOR reduce production type_spec -> UNSIGNED SHORT
-- On ASSUMES reduce production type_spec -> UNSIGNED SHORT
-- On ASSIGNS reduce production type_spec -> UNSIGNED SHORT
-- On ARROW reduce production type_spec -> UNSIGNED SHORT
-- On AND reduce production type_spec -> UNSIGNED SHORT
-- On AMP reduce production type_spec -> UNSIGNED SHORT
-- On ALLOCATES reduce production type_spec -> UNSIGNED SHORT

State 113:
## Known stack suffix:
## UNSIGNED LONG
## LR(1) items:
type_spec -> UNSIGNED LONG . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> UNSIGNED LONG . INT [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> UNSIGNED LONG . LONG [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> UNSIGNED LONG . LONG INT [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LONG shift to state 114
-- On INT shift to state 116
## Reductions:
-- On WRITES reduce production type_spec -> UNSIGNED LONG
-- On WITH reduce production type_spec -> UNSIGNED LONG
-- On VOLATILE reduce production type_spec -> UNSIGNED LONG
-- On STAR reduce production type_spec -> UNSIGNED LONG
-- On SLASH reduce production type_spec -> UNSIGNED LONG
-- On SEMICOLON reduce production type_spec -> UNSIGNED LONG
-- On RSQUARE reduce production type_spec -> UNSIGNED LONG
-- On RPAR reduce production type_spec -> UNSIGNED LONG
-- On RETURNS reduce production type_spec -> UNSIGNED LONG
-- On REQUIRES reduce production type_spec -> UNSIGNED LONG
-- On READS reduce production type_spec -> UNSIGNED LONG
-- On RBRACE reduce production type_spec -> UNSIGNED LONG
-- On QUESTION reduce production type_spec -> UNSIGNED LONG
-- On PLUS reduce production type_spec -> UNSIGNED LONG
-- On PIPE reduce production type_spec -> UNSIGNED LONG
-- On PERCENT reduce production type_spec -> UNSIGNED LONG
-- On OR reduce production type_spec -> UNSIGNED LONG
-- On NE reduce production type_spec -> UNSIGNED LONG
-- On MINUS reduce production type_spec -> UNSIGNED LONG
-- On LTLT reduce production type_spec -> UNSIGNED LONG
-- On LTCOLON reduce production type_spec -> UNSIGNED LONG
-- On LT reduce production type_spec -> UNSIGNED LONG
-- On LSQUARE reduce production type_spec -> UNSIGNED LONG
-- On LPAR reduce production type_spec -> UNSIGNED LONG
-- On LE reduce production type_spec -> UNSIGNED LONG
-- On LBRACE reduce production type_spec -> UNSIGNED LONG
-- On IMPLIES reduce production type_spec -> UNSIGNED LONG
-- On IFF reduce production type_spec -> UNSIGNED LONG
-- On IDENTIFIER reduce production type_spec -> UNSIGNED LONG
-- On HATHAT reduce production type_spec -> UNSIGNED LONG
-- On HAT reduce production type_spec -> UNSIGNED LONG
-- On GTGT reduce production type_spec -> UNSIGNED LONG
-- On GT reduce production type_spec -> UNSIGNED LONG
-- On GE reduce production type_spec -> UNSIGNED LONG
-- On FROM reduce production type_spec -> UNSIGNED LONG
-- On FREES reduce production type_spec -> UNSIGNED LONG
-- On FOR reduce production type_spec -> UNSIGNED LONG
-- On EXITS reduce production type_spec -> UNSIGNED LONG
-- On EQUAL reduce production type_spec -> UNSIGNED LONG
-- On EQ reduce production type_spec -> UNSIGNED LONG
-- On EOF reduce production type_spec -> UNSIGNED LONG
-- On ENSURES reduce production type_spec -> UNSIGNED LONG
-- On DOTDOT reduce production type_spec -> UNSIGNED LONG
-- On DOT reduce production type_spec -> UNSIGNED LONG
-- On DISJOINT reduce production type_spec -> UNSIGNED LONG
-- On DECREASES reduce production type_spec -> UNSIGNED LONG
-- On CONTINUES reduce production type_spec -> UNSIGNED LONG
-- On CONST reduce production type_spec -> UNSIGNED LONG
-- On COMPLETE reduce production type_spec -> UNSIGNED LONG
-- On COMMA reduce production type_spec -> UNSIGNED LONG
-- On COLONGT reduce production type_spec -> UNSIGNED LONG
-- On COLON2 reduce production type_spec -> UNSIGNED LONG
-- On BREAKS reduce production type_spec -> UNSIGNED LONG
-- On BIMPLIES reduce production type_spec -> UNSIGNED LONG
-- On BIFF reduce production type_spec -> UNSIGNED LONG
-- On BEHAVIOR reduce production type_spec -> UNSIGNED LONG
-- On ASSUMES reduce production type_spec -> UNSIGNED LONG
-- On ASSIGNS reduce production type_spec -> UNSIGNED LONG
-- On ARROW reduce production type_spec -> UNSIGNED LONG
-- On AND reduce production type_spec -> UNSIGNED LONG
-- On AMP reduce production type_spec -> UNSIGNED LONG
-- On ALLOCATES reduce production type_spec -> UNSIGNED LONG

State 114:
## Known stack suffix:
## UNSIGNED LONG LONG
## LR(1) items:
type_spec -> UNSIGNED LONG LONG . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> UNSIGNED LONG LONG . INT [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On INT shift to state 115
## Reductions:
-- On WRITES reduce production type_spec -> UNSIGNED LONG LONG
-- On WITH reduce production type_spec -> UNSIGNED LONG LONG
-- On VOLATILE reduce production type_spec -> UNSIGNED LONG LONG
-- On STAR reduce production type_spec -> UNSIGNED LONG LONG
-- On SLASH reduce production type_spec -> UNSIGNED LONG LONG
-- On SEMICOLON reduce production type_spec -> UNSIGNED LONG LONG
-- On RSQUARE reduce production type_spec -> UNSIGNED LONG LONG
-- On RPAR reduce production type_spec -> UNSIGNED LONG LONG
-- On RETURNS reduce production type_spec -> UNSIGNED LONG LONG
-- On REQUIRES reduce production type_spec -> UNSIGNED LONG LONG
-- On READS reduce production type_spec -> UNSIGNED LONG LONG
-- On RBRACE reduce production type_spec -> UNSIGNED LONG LONG
-- On QUESTION reduce production type_spec -> UNSIGNED LONG LONG
-- On PLUS reduce production type_spec -> UNSIGNED LONG LONG
-- On PIPE reduce production type_spec -> UNSIGNED LONG LONG
-- On PERCENT reduce production type_spec -> UNSIGNED LONG LONG
-- On OR reduce production type_spec -> UNSIGNED LONG LONG
-- On NE reduce production type_spec -> UNSIGNED LONG LONG
-- On MINUS reduce production type_spec -> UNSIGNED LONG LONG
-- On LTLT reduce production type_spec -> UNSIGNED LONG LONG
-- On LTCOLON reduce production type_spec -> UNSIGNED LONG LONG
-- On LT reduce production type_spec -> UNSIGNED LONG LONG
-- On LSQUARE reduce production type_spec -> UNSIGNED LONG LONG
-- On LPAR reduce production type_spec -> UNSIGNED LONG LONG
-- On LE reduce production type_spec -> UNSIGNED LONG LONG
-- On LBRACE reduce production type_spec -> UNSIGNED LONG LONG
-- On IMPLIES reduce production type_spec -> UNSIGNED LONG LONG
-- On IFF reduce production type_spec -> UNSIGNED LONG LONG
-- On IDENTIFIER reduce production type_spec -> UNSIGNED LONG LONG
-- On HATHAT reduce production type_spec -> UNSIGNED LONG LONG
-- On HAT reduce production type_spec -> UNSIGNED LONG LONG
-- On GTGT reduce production type_spec -> UNSIGNED LONG LONG
-- On GT reduce production type_spec -> UNSIGNED LONG LONG
-- On GE reduce production type_spec -> UNSIGNED LONG LONG
-- On FROM reduce production type_spec -> UNSIGNED LONG LONG
-- On FREES reduce production type_spec -> UNSIGNED LONG LONG
-- On FOR reduce production type_spec -> UNSIGNED LONG LONG
-- On EXITS reduce production type_spec -> UNSIGNED LONG LONG
-- On EQUAL reduce production type_spec -> UNSIGNED LONG LONG
-- On EQ reduce production type_spec -> UNSIGNED LONG LONG
-- On EOF reduce production type_spec -> UNSIGNED LONG LONG
-- On ENSURES reduce production type_spec -> UNSIGNED LONG LONG
-- On DOTDOT reduce production type_spec -> UNSIGNED LONG LONG
-- On DOT reduce production type_spec -> UNSIGNED LONG LONG
-- On DISJOINT reduce production type_spec -> UNSIGNED LONG LONG
-- On DECREASES reduce production type_spec -> UNSIGNED LONG LONG
-- On CONTINUES reduce production type_spec -> UNSIGNED LONG LONG
-- On CONST reduce production type_spec -> UNSIGNED LONG LONG
-- On COMPLETE reduce production type_spec -> UNSIGNED LONG LONG
-- On COMMA reduce production type_spec -> UNSIGNED LONG LONG
-- On COLONGT reduce production type_spec -> UNSIGNED LONG LONG
-- On COLON2 reduce production type_spec -> UNSIGNED LONG LONG
-- On BREAKS reduce production type_spec -> UNSIGNED LONG LONG
-- On BIMPLIES reduce production type_spec -> UNSIGNED LONG LONG
-- On BIFF reduce production type_spec -> UNSIGNED LONG LONG
-- On BEHAVIOR reduce production type_spec -> UNSIGNED LONG LONG
-- On ASSUMES reduce production type_spec -> UNSIGNED LONG LONG
-- On ASSIGNS reduce production type_spec -> UNSIGNED LONG LONG
-- On ARROW reduce production type_spec -> UNSIGNED LONG LONG
-- On AND reduce production type_spec -> UNSIGNED LONG LONG
-- On AMP reduce production type_spec -> UNSIGNED LONG LONG
-- On ALLOCATES reduce production type_spec -> UNSIGNED LONG LONG

State 115:
## Known stack suffix:
## UNSIGNED LONG LONG INT
## LR(1) items:
type_spec -> UNSIGNED LONG LONG INT . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> UNSIGNED LONG LONG INT
-- On WITH reduce production type_spec -> UNSIGNED LONG LONG INT
-- On VOLATILE reduce production type_spec -> UNSIGNED LONG LONG INT
-- On STAR reduce production type_spec -> UNSIGNED LONG LONG INT
-- On SLASH reduce production type_spec -> UNSIGNED LONG LONG INT
-- On SEMICOLON reduce production type_spec -> UNSIGNED LONG LONG INT
-- On RSQUARE reduce production type_spec -> UNSIGNED LONG LONG INT
-- On RPAR reduce production type_spec -> UNSIGNED LONG LONG INT
-- On RETURNS reduce production type_spec -> UNSIGNED LONG LONG INT
-- On REQUIRES reduce production type_spec -> UNSIGNED LONG LONG INT
-- On READS reduce production type_spec -> UNSIGNED LONG LONG INT
-- On RBRACE reduce production type_spec -> UNSIGNED LONG LONG INT
-- On QUESTION reduce production type_spec -> UNSIGNED LONG LONG INT
-- On PLUS reduce production type_spec -> UNSIGNED LONG LONG INT
-- On PIPE reduce production type_spec -> UNSIGNED LONG LONG INT
-- On PERCENT reduce production type_spec -> UNSIGNED LONG LONG INT
-- On OR reduce production type_spec -> UNSIGNED LONG LONG INT
-- On NE reduce production type_spec -> UNSIGNED LONG LONG INT
-- On MINUS reduce production type_spec -> UNSIGNED LONG LONG INT
-- On LTLT reduce production type_spec -> UNSIGNED LONG LONG INT
-- On LTCOLON reduce production type_spec -> UNSIGNED LONG LONG INT
-- On LT reduce production type_spec -> UNSIGNED LONG LONG INT
-- On LSQUARE reduce production type_spec -> UNSIGNED LONG LONG INT
-- On LPAR reduce production type_spec -> UNSIGNED LONG LONG INT
-- On LE reduce production type_spec -> UNSIGNED LONG LONG INT
-- On LBRACE reduce production type_spec -> UNSIGNED LONG LONG INT
-- On IMPLIES reduce production type_spec -> UNSIGNED LONG LONG INT
-- On IFF reduce production type_spec -> UNSIGNED LONG LONG INT
-- On IDENTIFIER reduce production type_spec -> UNSIGNED LONG LONG INT
-- On HATHAT reduce production type_spec -> UNSIGNED LONG LONG INT
-- On HAT reduce production type_spec -> UNSIGNED LONG LONG INT
-- On GTGT reduce production type_spec -> UNSIGNED LONG LONG INT
-- On GT reduce production type_spec -> UNSIGNED LONG LONG INT
-- On GE reduce production type_spec -> UNSIGNED LONG LONG INT
-- On FROM reduce production type_spec -> UNSIGNED LONG LONG INT
-- On FREES reduce production type_spec -> UNSIGNED LONG LONG INT
-- On FOR reduce production type_spec -> UNSIGNED LONG LONG INT
-- On EXITS reduce production type_spec -> UNSIGNED LONG LONG INT
-- On EQUAL reduce production type_spec -> UNSIGNED LONG LONG INT
-- On EQ reduce production type_spec -> UNSIGNED LONG LONG INT
-- On EOF reduce production type_spec -> UNSIGNED LONG LONG INT
-- On ENSURES reduce production type_spec -> UNSIGNED LONG LONG INT
-- On DOTDOT reduce production type_spec -> UNSIGNED LONG LONG INT
-- On DOT reduce production type_spec -> UNSIGNED LONG LONG INT
-- On DISJOINT reduce production type_spec -> UNSIGNED LONG LONG INT
-- On DECREASES reduce production type_spec -> UNSIGNED LONG LONG INT
-- On CONTINUES reduce production type_spec -> UNSIGNED LONG LONG INT
-- On CONST reduce production type_spec -> UNSIGNED LONG LONG INT
-- On COMPLETE reduce production type_spec -> UNSIGNED LONG LONG INT
-- On COMMA reduce production type_spec -> UNSIGNED LONG LONG INT
-- On COLONGT reduce production type_spec -> UNSIGNED LONG LONG INT
-- On COLON2 reduce production type_spec -> UNSIGNED LONG LONG INT
-- On BREAKS reduce production type_spec -> UNSIGNED LONG LONG INT
-- On BIMPLIES reduce production type_spec -> UNSIGNED LONG LONG INT
-- On BIFF reduce production type_spec -> UNSIGNED LONG LONG INT
-- On BEHAVIOR reduce production type_spec -> UNSIGNED LONG LONG INT
-- On ASSUMES reduce production type_spec -> UNSIGNED LONG LONG INT
-- On ASSIGNS reduce production type_spec -> UNSIGNED LONG LONG INT
-- On ARROW reduce production type_spec -> UNSIGNED LONG LONG INT
-- On AND reduce production type_spec -> UNSIGNED LONG LONG INT
-- On AMP reduce production type_spec -> UNSIGNED LONG LONG INT
-- On ALLOCATES reduce production type_spec -> UNSIGNED LONG LONG INT

State 116:
## Known stack suffix:
## UNSIGNED LONG INT
## LR(1) items:
type_spec -> UNSIGNED LONG INT . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> UNSIGNED LONG INT
-- On WITH reduce production type_spec -> UNSIGNED LONG INT
-- On VOLATILE reduce production type_spec -> UNSIGNED LONG INT
-- On STAR reduce production type_spec -> UNSIGNED LONG INT
-- On SLASH reduce production type_spec -> UNSIGNED LONG INT
-- On SEMICOLON reduce production type_spec -> UNSIGNED LONG INT
-- On RSQUARE reduce production type_spec -> UNSIGNED LONG INT
-- On RPAR reduce production type_spec -> UNSIGNED LONG INT
-- On RETURNS reduce production type_spec -> UNSIGNED LONG INT
-- On REQUIRES reduce production type_spec -> UNSIGNED LONG INT
-- On READS reduce production type_spec -> UNSIGNED LONG INT
-- On RBRACE reduce production type_spec -> UNSIGNED LONG INT
-- On QUESTION reduce production type_spec -> UNSIGNED LONG INT
-- On PLUS reduce production type_spec -> UNSIGNED LONG INT
-- On PIPE reduce production type_spec -> UNSIGNED LONG INT
-- On PERCENT reduce production type_spec -> UNSIGNED LONG INT
-- On OR reduce production type_spec -> UNSIGNED LONG INT
-- On NE reduce production type_spec -> UNSIGNED LONG INT
-- On MINUS reduce production type_spec -> UNSIGNED LONG INT
-- On LTLT reduce production type_spec -> UNSIGNED LONG INT
-- On LTCOLON reduce production type_spec -> UNSIGNED LONG INT
-- On LT reduce production type_spec -> UNSIGNED LONG INT
-- On LSQUARE reduce production type_spec -> UNSIGNED LONG INT
-- On LPAR reduce production type_spec -> UNSIGNED LONG INT
-- On LE reduce production type_spec -> UNSIGNED LONG INT
-- On LBRACE reduce production type_spec -> UNSIGNED LONG INT
-- On IMPLIES reduce production type_spec -> UNSIGNED LONG INT
-- On IFF reduce production type_spec -> UNSIGNED LONG INT
-- On IDENTIFIER reduce production type_spec -> UNSIGNED LONG INT
-- On HATHAT reduce production type_spec -> UNSIGNED LONG INT
-- On HAT reduce production type_spec -> UNSIGNED LONG INT
-- On GTGT reduce production type_spec -> UNSIGNED LONG INT
-- On GT reduce production type_spec -> UNSIGNED LONG INT
-- On GE reduce production type_spec -> UNSIGNED LONG INT
-- On FROM reduce production type_spec -> UNSIGNED LONG INT
-- On FREES reduce production type_spec -> UNSIGNED LONG INT
-- On FOR reduce production type_spec -> UNSIGNED LONG INT
-- On EXITS reduce production type_spec -> UNSIGNED LONG INT
-- On EQUAL reduce production type_spec -> UNSIGNED LONG INT
-- On EQ reduce production type_spec -> UNSIGNED LONG INT
-- On EOF reduce production type_spec -> UNSIGNED LONG INT
-- On ENSURES reduce production type_spec -> UNSIGNED LONG INT
-- On DOTDOT reduce production type_spec -> UNSIGNED LONG INT
-- On DOT reduce production type_spec -> UNSIGNED LONG INT
-- On DISJOINT reduce production type_spec -> UNSIGNED LONG INT
-- On DECREASES reduce production type_spec -> UNSIGNED LONG INT
-- On CONTINUES reduce production type_spec -> UNSIGNED LONG INT
-- On CONST reduce production type_spec -> UNSIGNED LONG INT
-- On COMPLETE reduce production type_spec -> UNSIGNED LONG INT
-- On COMMA reduce production type_spec -> UNSIGNED LONG INT
-- On COLONGT reduce production type_spec -> UNSIGNED LONG INT
-- On COLON2 reduce production type_spec -> UNSIGNED LONG INT
-- On BREAKS reduce production type_spec -> UNSIGNED LONG INT
-- On BIMPLIES reduce production type_spec -> UNSIGNED LONG INT
-- On BIFF reduce production type_spec -> UNSIGNED LONG INT
-- On BEHAVIOR reduce production type_spec -> UNSIGNED LONG INT
-- On ASSUMES reduce production type_spec -> UNSIGNED LONG INT
-- On ASSIGNS reduce production type_spec -> UNSIGNED LONG INT
-- On ARROW reduce production type_spec -> UNSIGNED LONG INT
-- On AND reduce production type_spec -> UNSIGNED LONG INT
-- On AMP reduce production type_spec -> UNSIGNED LONG INT
-- On ALLOCATES reduce production type_spec -> UNSIGNED LONG INT

State 117:
## Known stack suffix:
## UNSIGNED INT
## LR(1) items:
type_spec -> UNSIGNED INT . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> UNSIGNED INT
-- On WITH reduce production type_spec -> UNSIGNED INT
-- On VOLATILE reduce production type_spec -> UNSIGNED INT
-- On STAR reduce production type_spec -> UNSIGNED INT
-- On SLASH reduce production type_spec -> UNSIGNED INT
-- On SEMICOLON reduce production type_spec -> UNSIGNED INT
-- On RSQUARE reduce production type_spec -> UNSIGNED INT
-- On RPAR reduce production type_spec -> UNSIGNED INT
-- On RETURNS reduce production type_spec -> UNSIGNED INT
-- On REQUIRES reduce production type_spec -> UNSIGNED INT
-- On READS reduce production type_spec -> UNSIGNED INT
-- On RBRACE reduce production type_spec -> UNSIGNED INT
-- On QUESTION reduce production type_spec -> UNSIGNED INT
-- On PLUS reduce production type_spec -> UNSIGNED INT
-- On PIPE reduce production type_spec -> UNSIGNED INT
-- On PERCENT reduce production type_spec -> UNSIGNED INT
-- On OR reduce production type_spec -> UNSIGNED INT
-- On NE reduce production type_spec -> UNSIGNED INT
-- On MINUS reduce production type_spec -> UNSIGNED INT
-- On LTLT reduce production type_spec -> UNSIGNED INT
-- On LTCOLON reduce production type_spec -> UNSIGNED INT
-- On LT reduce production type_spec -> UNSIGNED INT
-- On LSQUARE reduce production type_spec -> UNSIGNED INT
-- On LPAR reduce production type_spec -> UNSIGNED INT
-- On LE reduce production type_spec -> UNSIGNED INT
-- On LBRACE reduce production type_spec -> UNSIGNED INT
-- On IMPLIES reduce production type_spec -> UNSIGNED INT
-- On IFF reduce production type_spec -> UNSIGNED INT
-- On IDENTIFIER reduce production type_spec -> UNSIGNED INT
-- On HATHAT reduce production type_spec -> UNSIGNED INT
-- On HAT reduce production type_spec -> UNSIGNED INT
-- On GTGT reduce production type_spec -> UNSIGNED INT
-- On GT reduce production type_spec -> UNSIGNED INT
-- On GE reduce production type_spec -> UNSIGNED INT
-- On FROM reduce production type_spec -> UNSIGNED INT
-- On FREES reduce production type_spec -> UNSIGNED INT
-- On FOR reduce production type_spec -> UNSIGNED INT
-- On EXITS reduce production type_spec -> UNSIGNED INT
-- On EQUAL reduce production type_spec -> UNSIGNED INT
-- On EQ reduce production type_spec -> UNSIGNED INT
-- On EOF reduce production type_spec -> UNSIGNED INT
-- On ENSURES reduce production type_spec -> UNSIGNED INT
-- On DOTDOT reduce production type_spec -> UNSIGNED INT
-- On DOT reduce production type_spec -> UNSIGNED INT
-- On DISJOINT reduce production type_spec -> UNSIGNED INT
-- On DECREASES reduce production type_spec -> UNSIGNED INT
-- On CONTINUES reduce production type_spec -> UNSIGNED INT
-- On CONST reduce production type_spec -> UNSIGNED INT
-- On COMPLETE reduce production type_spec -> UNSIGNED INT
-- On COMMA reduce production type_spec -> UNSIGNED INT
-- On COLONGT reduce production type_spec -> UNSIGNED INT
-- On COLON2 reduce production type_spec -> UNSIGNED INT
-- On BREAKS reduce production type_spec -> UNSIGNED INT
-- On BIMPLIES reduce production type_spec -> UNSIGNED INT
-- On BIFF reduce production type_spec -> UNSIGNED INT
-- On BEHAVIOR reduce production type_spec -> UNSIGNED INT
-- On ASSUMES reduce production type_spec -> UNSIGNED INT
-- On ASSIGNS reduce production type_spec -> UNSIGNED INT
-- On ARROW reduce production type_spec -> UNSIGNED INT
-- On AND reduce production type_spec -> UNSIGNED INT
-- On AMP reduce production type_spec -> UNSIGNED INT
-- On ALLOCATES reduce production type_spec -> UNSIGNED INT

State 118:
## Known stack suffix:
## UNSIGNED CHAR
## LR(1) items:
type_spec -> UNSIGNED CHAR . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> UNSIGNED CHAR
-- On WITH reduce production type_spec -> UNSIGNED CHAR
-- On VOLATILE reduce production type_spec -> UNSIGNED CHAR
-- On STAR reduce production type_spec -> UNSIGNED CHAR
-- On SLASH reduce production type_spec -> UNSIGNED CHAR
-- On SEMICOLON reduce production type_spec -> UNSIGNED CHAR
-- On RSQUARE reduce production type_spec -> UNSIGNED CHAR
-- On RPAR reduce production type_spec -> UNSIGNED CHAR
-- On RETURNS reduce production type_spec -> UNSIGNED CHAR
-- On REQUIRES reduce production type_spec -> UNSIGNED CHAR
-- On READS reduce production type_spec -> UNSIGNED CHAR
-- On RBRACE reduce production type_spec -> UNSIGNED CHAR
-- On QUESTION reduce production type_spec -> UNSIGNED CHAR
-- On PLUS reduce production type_spec -> UNSIGNED CHAR
-- On PIPE reduce production type_spec -> UNSIGNED CHAR
-- On PERCENT reduce production type_spec -> UNSIGNED CHAR
-- On OR reduce production type_spec -> UNSIGNED CHAR
-- On NE reduce production type_spec -> UNSIGNED CHAR
-- On MINUS reduce production type_spec -> UNSIGNED CHAR
-- On LTLT reduce production type_spec -> UNSIGNED CHAR
-- On LTCOLON reduce production type_spec -> UNSIGNED CHAR
-- On LT reduce production type_spec -> UNSIGNED CHAR
-- On LSQUARE reduce production type_spec -> UNSIGNED CHAR
-- On LPAR reduce production type_spec -> UNSIGNED CHAR
-- On LE reduce production type_spec -> UNSIGNED CHAR
-- On LBRACE reduce production type_spec -> UNSIGNED CHAR
-- On IMPLIES reduce production type_spec -> UNSIGNED CHAR
-- On IFF reduce production type_spec -> UNSIGNED CHAR
-- On IDENTIFIER reduce production type_spec -> UNSIGNED CHAR
-- On HATHAT reduce production type_spec -> UNSIGNED CHAR
-- On HAT reduce production type_spec -> UNSIGNED CHAR
-- On GTGT reduce production type_spec -> UNSIGNED CHAR
-- On GT reduce production type_spec -> UNSIGNED CHAR
-- On GE reduce production type_spec -> UNSIGNED CHAR
-- On FROM reduce production type_spec -> UNSIGNED CHAR
-- On FREES reduce production type_spec -> UNSIGNED CHAR
-- On FOR reduce production type_spec -> UNSIGNED CHAR
-- On EXITS reduce production type_spec -> UNSIGNED CHAR
-- On EQUAL reduce production type_spec -> UNSIGNED CHAR
-- On EQ reduce production type_spec -> UNSIGNED CHAR
-- On EOF reduce production type_spec -> UNSIGNED CHAR
-- On ENSURES reduce production type_spec -> UNSIGNED CHAR
-- On DOTDOT reduce production type_spec -> UNSIGNED CHAR
-- On DOT reduce production type_spec -> UNSIGNED CHAR
-- On DISJOINT reduce production type_spec -> UNSIGNED CHAR
-- On DECREASES reduce production type_spec -> UNSIGNED CHAR
-- On CONTINUES reduce production type_spec -> UNSIGNED CHAR
-- On CONST reduce production type_spec -> UNSIGNED CHAR
-- On COMPLETE reduce production type_spec -> UNSIGNED CHAR
-- On COMMA reduce production type_spec -> UNSIGNED CHAR
-- On COLONGT reduce production type_spec -> UNSIGNED CHAR
-- On COLON2 reduce production type_spec -> UNSIGNED CHAR
-- On BREAKS reduce production type_spec -> UNSIGNED CHAR
-- On BIMPLIES reduce production type_spec -> UNSIGNED CHAR
-- On BIFF reduce production type_spec -> UNSIGNED CHAR
-- On BEHAVIOR reduce production type_spec -> UNSIGNED CHAR
-- On ASSUMES reduce production type_spec -> UNSIGNED CHAR
-- On ASSIGNS reduce production type_spec -> UNSIGNED CHAR
-- On ARROW reduce production type_spec -> UNSIGNED CHAR
-- On AND reduce production type_spec -> UNSIGNED CHAR
-- On AMP reduce production type_spec -> UNSIGNED CHAR
-- On ALLOCATES reduce production type_spec -> UNSIGNED CHAR

State 119:
## Known stack suffix:
## UNION
## LR(1) items:
c_keyword -> UNION . [ COLON ]
type_spec -> UNION . exit_rt_type identifier_or_typename [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
## Transitions:
-- On exit_rt_type shift to state 120
## Reductions:
-- On TYPENAME reduce production exit_rt_type ->
-- On IDENTIFIER reduce production exit_rt_type ->
-- On COLON reduce production c_keyword -> UNION

State 120:
## Known stack suffix:
## UNION exit_rt_type
## LR(1) items:
type_spec -> UNION exit_rt_type . identifier_or_typename [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On TYPENAME shift to state 10
-- On IDENTIFIER shift to state 39
-- On identifier_or_typename shift to state 121
## Reductions:

State 121:
## Known stack suffix:
## UNION exit_rt_type identifier_or_typename
## LR(1) items:
type_spec -> UNION exit_rt_type identifier_or_typename . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On WITH reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On VOLATILE reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On STAR reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On SLASH reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On SEMICOLON reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On RSQUARE reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On RPAR reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On RETURNS reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On REQUIRES reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On READS reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On RBRACE reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On QUESTION reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On PLUS reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On PIPE reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On PERCENT reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On OR reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On NE reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On MINUS reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On LTLT reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On LTCOLON reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On LT reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On LSQUARE reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On LPAR reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On LE reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On LBRACE reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On IMPLIES reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On IFF reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On IDENTIFIER reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On HATHAT reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On HAT reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On GTGT reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On GT reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On GE reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On FROM reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On FREES reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On FOR reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On EXITS reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On EQUAL reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On EQ reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On EOF reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On ENSURES reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On DOTDOT reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On DOT reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On DISJOINT reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On DECREASES reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On CONTINUES reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On CONST reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On COMPLETE reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On COMMA reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On COLONGT reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On COLON2 reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On BREAKS reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On BIMPLIES reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On BIFF reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On BEHAVIOR reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On ASSUMES reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On ASSIGNS reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On ARROW reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On AND reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On AMP reduce production type_spec -> UNION exit_rt_type identifier_or_typename
-- On ALLOCATES reduce production type_spec -> UNION exit_rt_type identifier_or_typename

State 122:
## Known stack suffix:
## TYPENAME
## LR(1) items:
identifier_or_typename -> TYPENAME . [ COLON ]
type_spec -> TYPENAME . [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> TYPENAME . LT enter_rt_type ne_logic_type_list GT exit_rt_type [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
## Transitions:
-- On LT shift to state 123
## Reductions:
-- On VOLATILE reduce production type_spec -> TYPENAME
-- On STAR reduce production type_spec -> TYPENAME
-- On RPAR reduce production type_spec -> TYPENAME
-- On LSQUARE reduce production type_spec -> TYPENAME
-- On LPAR reduce production type_spec -> TYPENAME
-- On IDENTIFIER reduce production type_spec -> TYPENAME
-- On CONST reduce production type_spec -> TYPENAME
-- On COLON reduce production identifier_or_typename -> TYPENAME

State 123:
## Known stack suffix:
## TYPENAME LT
## LR(1) items:
type_spec -> TYPENAME LT . enter_rt_type ne_logic_type_list GT exit_rt_type [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On enter_rt_type shift to state 124
## Reductions:
-- On VOID reduce production enter_rt_type ->
-- On UNSIGNED reduce production enter_rt_type ->
-- On UNION reduce production enter_rt_type ->
-- On TYPENAME reduce production enter_rt_type ->
-- On STRUCT reduce production enter_rt_type ->
-- On SIGNED reduce production enter_rt_type ->
-- On SHORT reduce production enter_rt_type ->
-- On REAL reduce production enter_rt_type ->
-- On LONG reduce production enter_rt_type ->
-- On INTEGER reduce production enter_rt_type ->
-- On INT reduce production enter_rt_type ->
-- On FLOAT reduce production enter_rt_type ->
-- On ENUM reduce production enter_rt_type ->
-- On DOUBLE reduce production enter_rt_type ->
-- On CHAR reduce production enter_rt_type ->
-- On BOOLEAN reduce production enter_rt_type ->
-- On BOOL reduce production enter_rt_type ->

State 124:
## Known stack suffix:
## TYPENAME LT enter_rt_type
## LR(1) items:
type_spec -> TYPENAME LT enter_rt_type . ne_logic_type_list GT exit_rt_type [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 157
-- On ne_logic_type_list shift to state 188
-- On logic_type shift to state 191
## Reductions:

State 125:
## Known stack suffix:
## VOID
## LR(1) items:
type_spec -> VOID . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> VOID
-- On WITH reduce production type_spec -> VOID
-- On STAR reduce production type_spec -> VOID
-- On SLASH reduce production type_spec -> VOID
-- On SEMICOLON reduce production type_spec -> VOID
-- On RSQUARE reduce production type_spec -> VOID
-- On RPAR reduce production type_spec -> VOID
-- On RETURNS reduce production type_spec -> VOID
-- On REQUIRES reduce production type_spec -> VOID
-- On READS reduce production type_spec -> VOID
-- On RBRACE reduce production type_spec -> VOID
-- On QUESTION reduce production type_spec -> VOID
-- On PLUS reduce production type_spec -> VOID
-- On PIPE reduce production type_spec -> VOID
-- On PERCENT reduce production type_spec -> VOID
-- On OR reduce production type_spec -> VOID
-- On NE reduce production type_spec -> VOID
-- On MINUS reduce production type_spec -> VOID
-- On LTLT reduce production type_spec -> VOID
-- On LTCOLON reduce production type_spec -> VOID
-- On LT reduce production type_spec -> VOID
-- On LSQUARE reduce production type_spec -> VOID
-- On LPAR reduce production type_spec -> VOID
-- On LE reduce production type_spec -> VOID
-- On LBRACE reduce production type_spec -> VOID
-- On IMPLIES reduce production type_spec -> VOID
-- On IFF reduce production type_spec -> VOID
-- On IDENTIFIER reduce production type_spec -> VOID
-- On HATHAT reduce production type_spec -> VOID
-- On HAT reduce production type_spec -> VOID
-- On GTGT reduce production type_spec -> VOID
-- On GT reduce production type_spec -> VOID
-- On GE reduce production type_spec -> VOID
-- On FROM reduce production type_spec -> VOID
-- On FREES reduce production type_spec -> VOID
-- On FOR reduce production type_spec -> VOID
-- On EXITS reduce production type_spec -> VOID
-- On EQUAL reduce production type_spec -> VOID
-- On EQ reduce production type_spec -> VOID
-- On EOF reduce production type_spec -> VOID
-- On ENSURES reduce production type_spec -> VOID
-- On DOTDOT reduce production type_spec -> VOID
-- On DOT reduce production type_spec -> VOID
-- On DISJOINT reduce production type_spec -> VOID
-- On DECREASES reduce production type_spec -> VOID
-- On CONTINUES reduce production type_spec -> VOID
-- On COMPLETE reduce production type_spec -> VOID
-- On COMMA reduce production type_spec -> VOID
-- On COLONGT reduce production type_spec -> VOID
-- On COLON2 reduce production type_spec -> VOID
-- On BREAKS reduce production type_spec -> VOID
-- On BIMPLIES reduce production type_spec -> VOID
-- On BIFF reduce production type_spec -> VOID
-- On BEHAVIOR reduce production type_spec -> VOID
-- On ASSUMES reduce production type_spec -> VOID
-- On ASSIGNS reduce production type_spec -> VOID
-- On ARROW reduce production type_spec -> VOID
-- On AND reduce production type_spec -> VOID
-- On AMP reduce production type_spec -> VOID
-- On ALLOCATES reduce production type_spec -> VOID

State 126:
## Known stack suffix:
## UNSIGNED
## LR(1) items:
type_spec -> UNSIGNED . CHAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> UNSIGNED . INT [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> UNSIGNED . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> UNSIGNED . SHORT [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> UNSIGNED . LONG [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> UNSIGNED . LONG INT [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> UNSIGNED . LONG LONG [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> UNSIGNED . LONG LONG INT [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On SHORT shift to state 112
-- On LONG shift to state 113
-- On INT shift to state 117
-- On CHAR shift to state 118
## Reductions:
-- On WRITES reduce production type_spec -> UNSIGNED
-- On WITH reduce production type_spec -> UNSIGNED
-- On STAR reduce production type_spec -> UNSIGNED
-- On SLASH reduce production type_spec -> UNSIGNED
-- On SEMICOLON reduce production type_spec -> UNSIGNED
-- On RSQUARE reduce production type_spec -> UNSIGNED
-- On RPAR reduce production type_spec -> UNSIGNED
-- On RETURNS reduce production type_spec -> UNSIGNED
-- On REQUIRES reduce production type_spec -> UNSIGNED
-- On READS reduce production type_spec -> UNSIGNED
-- On RBRACE reduce production type_spec -> UNSIGNED
-- On QUESTION reduce production type_spec -> UNSIGNED
-- On PLUS reduce production type_spec -> UNSIGNED
-- On PIPE reduce production type_spec -> UNSIGNED
-- On PERCENT reduce production type_spec -> UNSIGNED
-- On OR reduce production type_spec -> UNSIGNED
-- On NE reduce production type_spec -> UNSIGNED
-- On MINUS reduce production type_spec -> UNSIGNED
-- On LTLT reduce production type_spec -> UNSIGNED
-- On LTCOLON reduce production type_spec -> UNSIGNED
-- On LT reduce production type_spec -> UNSIGNED
-- On LSQUARE reduce production type_spec -> UNSIGNED
-- On LPAR reduce production type_spec -> UNSIGNED
-- On LE reduce production type_spec -> UNSIGNED
-- On LBRACE reduce production type_spec -> UNSIGNED
-- On IMPLIES reduce production type_spec -> UNSIGNED
-- On IFF reduce production type_spec -> UNSIGNED
-- On IDENTIFIER reduce production type_spec -> UNSIGNED
-- On HATHAT reduce production type_spec -> UNSIGNED
-- On HAT reduce production type_spec -> UNSIGNED
-- On GTGT reduce production type_spec -> UNSIGNED
-- On GT reduce production type_spec -> UNSIGNED
-- On GE reduce production type_spec -> UNSIGNED
-- On FROM reduce production type_spec -> UNSIGNED
-- On FREES reduce production type_spec -> UNSIGNED
-- On FOR reduce production type_spec -> UNSIGNED
-- On EXITS reduce production type_spec -> UNSIGNED
-- On EQUAL reduce production type_spec -> UNSIGNED
-- On EQ reduce production type_spec -> UNSIGNED
-- On EOF reduce production type_spec -> UNSIGNED
-- On ENSURES reduce production type_spec -> UNSIGNED
-- On DOTDOT reduce production type_spec -> UNSIGNED
-- On DOT reduce production type_spec -> UNSIGNED
-- On DISJOINT reduce production type_spec -> UNSIGNED
-- On DECREASES reduce production type_spec -> UNSIGNED
-- On CONTINUES reduce production type_spec -> UNSIGNED
-- On COMPLETE reduce production type_spec -> UNSIGNED
-- On COMMA reduce production type_spec -> UNSIGNED
-- On COLONGT reduce production type_spec -> UNSIGNED
-- On COLON2 reduce production type_spec -> UNSIGNED
-- On BREAKS reduce production type_spec -> UNSIGNED
-- On BIMPLIES reduce production type_spec -> UNSIGNED
-- On BIFF reduce production type_spec -> UNSIGNED
-- On BEHAVIOR reduce production type_spec -> UNSIGNED
-- On ASSUMES reduce production type_spec -> UNSIGNED
-- On ASSIGNS reduce production type_spec -> UNSIGNED
-- On ARROW reduce production type_spec -> UNSIGNED
-- On AND reduce production type_spec -> UNSIGNED
-- On AMP reduce production type_spec -> UNSIGNED
-- On ALLOCATES reduce production type_spec -> UNSIGNED

State 127:
## Known stack suffix:
## UNION
## LR(1) items:
type_spec -> UNION . exit_rt_type identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On exit_rt_type shift to state 120
## Reductions:
-- On TYPENAME reduce production exit_rt_type ->
-- On IDENTIFIER reduce production exit_rt_type ->

State 128:
## Known stack suffix:
## TYPENAME
## LR(1) items:
type_spec -> TYPENAME . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> TYPENAME . LT enter_rt_type ne_logic_type_list GT exit_rt_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LT shift to state 123
## Reductions:
-- On WRITES reduce production type_spec -> TYPENAME
-- On WITH reduce production type_spec -> TYPENAME
-- On STAR reduce production type_spec -> TYPENAME
-- On SLASH reduce production type_spec -> TYPENAME
-- On SEMICOLON reduce production type_spec -> TYPENAME
-- On RSQUARE reduce production type_spec -> TYPENAME
-- On RPAR reduce production type_spec -> TYPENAME
-- On RETURNS reduce production type_spec -> TYPENAME
-- On REQUIRES reduce production type_spec -> TYPENAME
-- On READS reduce production type_spec -> TYPENAME
-- On RBRACE reduce production type_spec -> TYPENAME
-- On QUESTION reduce production type_spec -> TYPENAME
-- On PLUS reduce production type_spec -> TYPENAME
-- On PIPE reduce production type_spec -> TYPENAME
-- On PERCENT reduce production type_spec -> TYPENAME
-- On OR reduce production type_spec -> TYPENAME
-- On NE reduce production type_spec -> TYPENAME
-- On MINUS reduce production type_spec -> TYPENAME
-- On LTLT reduce production type_spec -> TYPENAME
-- On LTCOLON reduce production type_spec -> TYPENAME
-- On LSQUARE reduce production type_spec -> TYPENAME
-- On LPAR reduce production type_spec -> TYPENAME
-- On LE reduce production type_spec -> TYPENAME
-- On LBRACE reduce production type_spec -> TYPENAME
-- On IMPLIES reduce production type_spec -> TYPENAME
-- On IFF reduce production type_spec -> TYPENAME
-- On IDENTIFIER reduce production type_spec -> TYPENAME
-- On HATHAT reduce production type_spec -> TYPENAME
-- On HAT reduce production type_spec -> TYPENAME
-- On GTGT reduce production type_spec -> TYPENAME
-- On GT reduce production type_spec -> TYPENAME
-- On GE reduce production type_spec -> TYPENAME
-- On FROM reduce production type_spec -> TYPENAME
-- On FREES reduce production type_spec -> TYPENAME
-- On FOR reduce production type_spec -> TYPENAME
-- On EXITS reduce production type_spec -> TYPENAME
-- On EQUAL reduce production type_spec -> TYPENAME
-- On EQ reduce production type_spec -> TYPENAME
-- On EOF reduce production type_spec -> TYPENAME
-- On ENSURES reduce production type_spec -> TYPENAME
-- On DOTDOT reduce production type_spec -> TYPENAME
-- On DOT reduce production type_spec -> TYPENAME
-- On DISJOINT reduce production type_spec -> TYPENAME
-- On DECREASES reduce production type_spec -> TYPENAME
-- On CONTINUES reduce production type_spec -> TYPENAME
-- On COMPLETE reduce production type_spec -> TYPENAME
-- On COMMA reduce production type_spec -> TYPENAME
-- On COLONGT reduce production type_spec -> TYPENAME
-- On COLON2 reduce production type_spec -> TYPENAME
-- On BREAKS reduce production type_spec -> TYPENAME
-- On BIMPLIES reduce production type_spec -> TYPENAME
-- On BIFF reduce production type_spec -> TYPENAME
-- On BEHAVIOR reduce production type_spec -> TYPENAME
-- On ASSUMES reduce production type_spec -> TYPENAME
-- On ASSIGNS reduce production type_spec -> TYPENAME
-- On ARROW reduce production type_spec -> TYPENAME
-- On AND reduce production type_spec -> TYPENAME
-- On AMP reduce production type_spec -> TYPENAME
-- On ALLOCATES reduce production type_spec -> TYPENAME

State 129:
## Known stack suffix:
## STRUCT
## LR(1) items:
type_spec -> STRUCT . exit_rt_type identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On exit_rt_type shift to state 130
## Reductions:
-- On TYPENAME reduce production exit_rt_type ->
-- On IDENTIFIER reduce production exit_rt_type ->

State 130:
## Known stack suffix:
## STRUCT exit_rt_type
## LR(1) items:
type_spec -> STRUCT exit_rt_type . identifier_or_typename [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On TYPENAME shift to state 10
-- On IDENTIFIER shift to state 39
-- On identifier_or_typename shift to state 131
## Reductions:

State 131:
## Known stack suffix:
## STRUCT exit_rt_type identifier_or_typename
## LR(1) items:
type_spec -> STRUCT exit_rt_type identifier_or_typename . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On WITH reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On VOLATILE reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On STAR reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On SLASH reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On SEMICOLON reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On RSQUARE reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On RPAR reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On RETURNS reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On REQUIRES reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On READS reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On RBRACE reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On QUESTION reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On PLUS reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On PIPE reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On PERCENT reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On OR reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On NE reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On MINUS reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On LTLT reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On LTCOLON reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On LT reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On LSQUARE reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On LPAR reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On LE reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On LBRACE reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On IMPLIES reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On IFF reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On IDENTIFIER reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On HATHAT reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On HAT reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On GTGT reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On GT reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On GE reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On FROM reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On FREES reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On FOR reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On EXITS reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On EQUAL reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On EQ reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On EOF reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On ENSURES reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On DOTDOT reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On DOT reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On DISJOINT reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On DECREASES reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On CONTINUES reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On CONST reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On COMPLETE reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On COMMA reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On COLONGT reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On COLON2 reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On BREAKS reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On BIMPLIES reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On BIFF reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On BEHAVIOR reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On ASSUMES reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On ASSIGNS reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On ARROW reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On AND reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On AMP reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename
-- On ALLOCATES reduce production type_spec -> STRUCT exit_rt_type identifier_or_typename

State 132:
## Known stack suffix:
## SIGNED
## LR(1) items:
type_spec -> SIGNED . CHAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> SIGNED . INT [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> SIGNED . SHORT [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> SIGNED . LONG [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> SIGNED . LONG INT [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> SIGNED . LONG LONG [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> SIGNED . LONG LONG INT [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On SHORT shift to state 133
-- On LONG shift to state 134
-- On INT shift to state 138
-- On CHAR shift to state 139
## Reductions:

State 133:
## Known stack suffix:
## SIGNED SHORT
## LR(1) items:
type_spec -> SIGNED SHORT . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> SIGNED SHORT
-- On WITH reduce production type_spec -> SIGNED SHORT
-- On VOLATILE reduce production type_spec -> SIGNED SHORT
-- On STAR reduce production type_spec -> SIGNED SHORT
-- On SLASH reduce production type_spec -> SIGNED SHORT
-- On SEMICOLON reduce production type_spec -> SIGNED SHORT
-- On RSQUARE reduce production type_spec -> SIGNED SHORT
-- On RPAR reduce production type_spec -> SIGNED SHORT
-- On RETURNS reduce production type_spec -> SIGNED SHORT
-- On REQUIRES reduce production type_spec -> SIGNED SHORT
-- On READS reduce production type_spec -> SIGNED SHORT
-- On RBRACE reduce production type_spec -> SIGNED SHORT
-- On QUESTION reduce production type_spec -> SIGNED SHORT
-- On PLUS reduce production type_spec -> SIGNED SHORT
-- On PIPE reduce production type_spec -> SIGNED SHORT
-- On PERCENT reduce production type_spec -> SIGNED SHORT
-- On OR reduce production type_spec -> SIGNED SHORT
-- On NE reduce production type_spec -> SIGNED SHORT
-- On MINUS reduce production type_spec -> SIGNED SHORT
-- On LTLT reduce production type_spec -> SIGNED SHORT
-- On LTCOLON reduce production type_spec -> SIGNED SHORT
-- On LT reduce production type_spec -> SIGNED SHORT
-- On LSQUARE reduce production type_spec -> SIGNED SHORT
-- On LPAR reduce production type_spec -> SIGNED SHORT
-- On LE reduce production type_spec -> SIGNED SHORT
-- On LBRACE reduce production type_spec -> SIGNED SHORT
-- On IMPLIES reduce production type_spec -> SIGNED SHORT
-- On IFF reduce production type_spec -> SIGNED SHORT
-- On IDENTIFIER reduce production type_spec -> SIGNED SHORT
-- On HATHAT reduce production type_spec -> SIGNED SHORT
-- On HAT reduce production type_spec -> SIGNED SHORT
-- On GTGT reduce production type_spec -> SIGNED SHORT
-- On GT reduce production type_spec -> SIGNED SHORT
-- On GE reduce production type_spec -> SIGNED SHORT
-- On FROM reduce production type_spec -> SIGNED SHORT
-- On FREES reduce production type_spec -> SIGNED SHORT
-- On FOR reduce production type_spec -> SIGNED SHORT
-- On EXITS reduce production type_spec -> SIGNED SHORT
-- On EQUAL reduce production type_spec -> SIGNED SHORT
-- On EQ reduce production type_spec -> SIGNED SHORT
-- On EOF reduce production type_spec -> SIGNED SHORT
-- On ENSURES reduce production type_spec -> SIGNED SHORT
-- On DOTDOT reduce production type_spec -> SIGNED SHORT
-- On DOT reduce production type_spec -> SIGNED SHORT
-- On DISJOINT reduce production type_spec -> SIGNED SHORT
-- On DECREASES reduce production type_spec -> SIGNED SHORT
-- On CONTINUES reduce production type_spec -> SIGNED SHORT
-- On CONST reduce production type_spec -> SIGNED SHORT
-- On COMPLETE reduce production type_spec -> SIGNED SHORT
-- On COMMA reduce production type_spec -> SIGNED SHORT
-- On COLONGT reduce production type_spec -> SIGNED SHORT
-- On COLON2 reduce production type_spec -> SIGNED SHORT
-- On BREAKS reduce production type_spec -> SIGNED SHORT
-- On BIMPLIES reduce production type_spec -> SIGNED SHORT
-- On BIFF reduce production type_spec -> SIGNED SHORT
-- On BEHAVIOR reduce production type_spec -> SIGNED SHORT
-- On ASSUMES reduce production type_spec -> SIGNED SHORT
-- On ASSIGNS reduce production type_spec -> SIGNED SHORT
-- On ARROW reduce production type_spec -> SIGNED SHORT
-- On AND reduce production type_spec -> SIGNED SHORT
-- On AMP reduce production type_spec -> SIGNED SHORT
-- On ALLOCATES reduce production type_spec -> SIGNED SHORT

State 134:
## Known stack suffix:
## SIGNED LONG
## LR(1) items:
type_spec -> SIGNED LONG . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> SIGNED LONG . INT [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> SIGNED LONG . LONG [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> SIGNED LONG . LONG INT [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LONG shift to state 135
-- On INT shift to state 137
## Reductions:
-- On WRITES reduce production type_spec -> SIGNED LONG
-- On WITH reduce production type_spec -> SIGNED LONG
-- On VOLATILE reduce production type_spec -> SIGNED LONG
-- On STAR reduce production type_spec -> SIGNED LONG
-- On SLASH reduce production type_spec -> SIGNED LONG
-- On SEMICOLON reduce production type_spec -> SIGNED LONG
-- On RSQUARE reduce production type_spec -> SIGNED LONG
-- On RPAR reduce production type_spec -> SIGNED LONG
-- On RETURNS reduce production type_spec -> SIGNED LONG
-- On REQUIRES reduce production type_spec -> SIGNED LONG
-- On READS reduce production type_spec -> SIGNED LONG
-- On RBRACE reduce production type_spec -> SIGNED LONG
-- On QUESTION reduce production type_spec -> SIGNED LONG
-- On PLUS reduce production type_spec -> SIGNED LONG
-- On PIPE reduce production type_spec -> SIGNED LONG
-- On PERCENT reduce production type_spec -> SIGNED LONG
-- On OR reduce production type_spec -> SIGNED LONG
-- On NE reduce production type_spec -> SIGNED LONG
-- On MINUS reduce production type_spec -> SIGNED LONG
-- On LTLT reduce production type_spec -> SIGNED LONG
-- On LTCOLON reduce production type_spec -> SIGNED LONG
-- On LT reduce production type_spec -> SIGNED LONG
-- On LSQUARE reduce production type_spec -> SIGNED LONG
-- On LPAR reduce production type_spec -> SIGNED LONG
-- On LE reduce production type_spec -> SIGNED LONG
-- On LBRACE reduce production type_spec -> SIGNED LONG
-- On IMPLIES reduce production type_spec -> SIGNED LONG
-- On IFF reduce production type_spec -> SIGNED LONG
-- On IDENTIFIER reduce production type_spec -> SIGNED LONG
-- On HATHAT reduce production type_spec -> SIGNED LONG
-- On HAT reduce production type_spec -> SIGNED LONG
-- On GTGT reduce production type_spec -> SIGNED LONG
-- On GT reduce production type_spec -> SIGNED LONG
-- On GE reduce production type_spec -> SIGNED LONG
-- On FROM reduce production type_spec -> SIGNED LONG
-- On FREES reduce production type_spec -> SIGNED LONG
-- On FOR reduce production type_spec -> SIGNED LONG
-- On EXITS reduce production type_spec -> SIGNED LONG
-- On EQUAL reduce production type_spec -> SIGNED LONG
-- On EQ reduce production type_spec -> SIGNED LONG
-- On EOF reduce production type_spec -> SIGNED LONG
-- On ENSURES reduce production type_spec -> SIGNED LONG
-- On DOTDOT reduce production type_spec -> SIGNED LONG
-- On DOT reduce production type_spec -> SIGNED LONG
-- On DISJOINT reduce production type_spec -> SIGNED LONG
-- On DECREASES reduce production type_spec -> SIGNED LONG
-- On CONTINUES reduce production type_spec -> SIGNED LONG
-- On CONST reduce production type_spec -> SIGNED LONG
-- On COMPLETE reduce production type_spec -> SIGNED LONG
-- On COMMA reduce production type_spec -> SIGNED LONG
-- On COLONGT reduce production type_spec -> SIGNED LONG
-- On COLON2 reduce production type_spec -> SIGNED LONG
-- On BREAKS reduce production type_spec -> SIGNED LONG
-- On BIMPLIES reduce production type_spec -> SIGNED LONG
-- On BIFF reduce production type_spec -> SIGNED LONG
-- On BEHAVIOR reduce production type_spec -> SIGNED LONG
-- On ASSUMES reduce production type_spec -> SIGNED LONG
-- On ASSIGNS reduce production type_spec -> SIGNED LONG
-- On ARROW reduce production type_spec -> SIGNED LONG
-- On AND reduce production type_spec -> SIGNED LONG
-- On AMP reduce production type_spec -> SIGNED LONG
-- On ALLOCATES reduce production type_spec -> SIGNED LONG

State 135:
## Known stack suffix:
## SIGNED LONG LONG
## LR(1) items:
type_spec -> SIGNED LONG LONG . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> SIGNED LONG LONG . INT [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On INT shift to state 136
## Reductions:
-- On WRITES reduce production type_spec -> SIGNED LONG LONG
-- On WITH reduce production type_spec -> SIGNED LONG LONG
-- On VOLATILE reduce production type_spec -> SIGNED LONG LONG
-- On STAR reduce production type_spec -> SIGNED LONG LONG
-- On SLASH reduce production type_spec -> SIGNED LONG LONG
-- On SEMICOLON reduce production type_spec -> SIGNED LONG LONG
-- On RSQUARE reduce production type_spec -> SIGNED LONG LONG
-- On RPAR reduce production type_spec -> SIGNED LONG LONG
-- On RETURNS reduce production type_spec -> SIGNED LONG LONG
-- On REQUIRES reduce production type_spec -> SIGNED LONG LONG
-- On READS reduce production type_spec -> SIGNED LONG LONG
-- On RBRACE reduce production type_spec -> SIGNED LONG LONG
-- On QUESTION reduce production type_spec -> SIGNED LONG LONG
-- On PLUS reduce production type_spec -> SIGNED LONG LONG
-- On PIPE reduce production type_spec -> SIGNED LONG LONG
-- On PERCENT reduce production type_spec -> SIGNED LONG LONG
-- On OR reduce production type_spec -> SIGNED LONG LONG
-- On NE reduce production type_spec -> SIGNED LONG LONG
-- On MINUS reduce production type_spec -> SIGNED LONG LONG
-- On LTLT reduce production type_spec -> SIGNED LONG LONG
-- On LTCOLON reduce production type_spec -> SIGNED LONG LONG
-- On LT reduce production type_spec -> SIGNED LONG LONG
-- On LSQUARE reduce production type_spec -> SIGNED LONG LONG
-- On LPAR reduce production type_spec -> SIGNED LONG LONG
-- On LE reduce production type_spec -> SIGNED LONG LONG
-- On LBRACE reduce production type_spec -> SIGNED LONG LONG
-- On IMPLIES reduce production type_spec -> SIGNED LONG LONG
-- On IFF reduce production type_spec -> SIGNED LONG LONG
-- On IDENTIFIER reduce production type_spec -> SIGNED LONG LONG
-- On HATHAT reduce production type_spec -> SIGNED LONG LONG
-- On HAT reduce production type_spec -> SIGNED LONG LONG
-- On GTGT reduce production type_spec -> SIGNED LONG LONG
-- On GT reduce production type_spec -> SIGNED LONG LONG
-- On GE reduce production type_spec -> SIGNED LONG LONG
-- On FROM reduce production type_spec -> SIGNED LONG LONG
-- On FREES reduce production type_spec -> SIGNED LONG LONG
-- On FOR reduce production type_spec -> SIGNED LONG LONG
-- On EXITS reduce production type_spec -> SIGNED LONG LONG
-- On EQUAL reduce production type_spec -> SIGNED LONG LONG
-- On EQ reduce production type_spec -> SIGNED LONG LONG
-- On EOF reduce production type_spec -> SIGNED LONG LONG
-- On ENSURES reduce production type_spec -> SIGNED LONG LONG
-- On DOTDOT reduce production type_spec -> SIGNED LONG LONG
-- On DOT reduce production type_spec -> SIGNED LONG LONG
-- On DISJOINT reduce production type_spec -> SIGNED LONG LONG
-- On DECREASES reduce production type_spec -> SIGNED LONG LONG
-- On CONTINUES reduce production type_spec -> SIGNED LONG LONG
-- On CONST reduce production type_spec -> SIGNED LONG LONG
-- On COMPLETE reduce production type_spec -> SIGNED LONG LONG
-- On COMMA reduce production type_spec -> SIGNED LONG LONG
-- On COLONGT reduce production type_spec -> SIGNED LONG LONG
-- On COLON2 reduce production type_spec -> SIGNED LONG LONG
-- On BREAKS reduce production type_spec -> SIGNED LONG LONG
-- On BIMPLIES reduce production type_spec -> SIGNED LONG LONG
-- On BIFF reduce production type_spec -> SIGNED LONG LONG
-- On BEHAVIOR reduce production type_spec -> SIGNED LONG LONG
-- On ASSUMES reduce production type_spec -> SIGNED LONG LONG
-- On ASSIGNS reduce production type_spec -> SIGNED LONG LONG
-- On ARROW reduce production type_spec -> SIGNED LONG LONG
-- On AND reduce production type_spec -> SIGNED LONG LONG
-- On AMP reduce production type_spec -> SIGNED LONG LONG
-- On ALLOCATES reduce production type_spec -> SIGNED LONG LONG

State 136:
## Known stack suffix:
## SIGNED LONG LONG INT
## LR(1) items:
type_spec -> SIGNED LONG LONG INT . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> SIGNED LONG LONG INT
-- On WITH reduce production type_spec -> SIGNED LONG LONG INT
-- On VOLATILE reduce production type_spec -> SIGNED LONG LONG INT
-- On STAR reduce production type_spec -> SIGNED LONG LONG INT
-- On SLASH reduce production type_spec -> SIGNED LONG LONG INT
-- On SEMICOLON reduce production type_spec -> SIGNED LONG LONG INT
-- On RSQUARE reduce production type_spec -> SIGNED LONG LONG INT
-- On RPAR reduce production type_spec -> SIGNED LONG LONG INT
-- On RETURNS reduce production type_spec -> SIGNED LONG LONG INT
-- On REQUIRES reduce production type_spec -> SIGNED LONG LONG INT
-- On READS reduce production type_spec -> SIGNED LONG LONG INT
-- On RBRACE reduce production type_spec -> SIGNED LONG LONG INT
-- On QUESTION reduce production type_spec -> SIGNED LONG LONG INT
-- On PLUS reduce production type_spec -> SIGNED LONG LONG INT
-- On PIPE reduce production type_spec -> SIGNED LONG LONG INT
-- On PERCENT reduce production type_spec -> SIGNED LONG LONG INT
-- On OR reduce production type_spec -> SIGNED LONG LONG INT
-- On NE reduce production type_spec -> SIGNED LONG LONG INT
-- On MINUS reduce production type_spec -> SIGNED LONG LONG INT
-- On LTLT reduce production type_spec -> SIGNED LONG LONG INT
-- On LTCOLON reduce production type_spec -> SIGNED LONG LONG INT
-- On LT reduce production type_spec -> SIGNED LONG LONG INT
-- On LSQUARE reduce production type_spec -> SIGNED LONG LONG INT
-- On LPAR reduce production type_spec -> SIGNED LONG LONG INT
-- On LE reduce production type_spec -> SIGNED LONG LONG INT
-- On LBRACE reduce production type_spec -> SIGNED LONG LONG INT
-- On IMPLIES reduce production type_spec -> SIGNED LONG LONG INT
-- On IFF reduce production type_spec -> SIGNED LONG LONG INT
-- On IDENTIFIER reduce production type_spec -> SIGNED LONG LONG INT
-- On HATHAT reduce production type_spec -> SIGNED LONG LONG INT
-- On HAT reduce production type_spec -> SIGNED LONG LONG INT
-- On GTGT reduce production type_spec -> SIGNED LONG LONG INT
-- On GT reduce production type_spec -> SIGNED LONG LONG INT
-- On GE reduce production type_spec -> SIGNED LONG LONG INT
-- On FROM reduce production type_spec -> SIGNED LONG LONG INT
-- On FREES reduce production type_spec -> SIGNED LONG LONG INT
-- On FOR reduce production type_spec -> SIGNED LONG LONG INT
-- On EXITS reduce production type_spec -> SIGNED LONG LONG INT
-- On EQUAL reduce production type_spec -> SIGNED LONG LONG INT
-- On EQ reduce production type_spec -> SIGNED LONG LONG INT
-- On EOF reduce production type_spec -> SIGNED LONG LONG INT
-- On ENSURES reduce production type_spec -> SIGNED LONG LONG INT
-- On DOTDOT reduce production type_spec -> SIGNED LONG LONG INT
-- On DOT reduce production type_spec -> SIGNED LONG LONG INT
-- On DISJOINT reduce production type_spec -> SIGNED LONG LONG INT
-- On DECREASES reduce production type_spec -> SIGNED LONG LONG INT
-- On CONTINUES reduce production type_spec -> SIGNED LONG LONG INT
-- On CONST reduce production type_spec -> SIGNED LONG LONG INT
-- On COMPLETE reduce production type_spec -> SIGNED LONG LONG INT
-- On COMMA reduce production type_spec -> SIGNED LONG LONG INT
-- On COLONGT reduce production type_spec -> SIGNED LONG LONG INT
-- On COLON2 reduce production type_spec -> SIGNED LONG LONG INT
-- On BREAKS reduce production type_spec -> SIGNED LONG LONG INT
-- On BIMPLIES reduce production type_spec -> SIGNED LONG LONG INT
-- On BIFF reduce production type_spec -> SIGNED LONG LONG INT
-- On BEHAVIOR reduce production type_spec -> SIGNED LONG LONG INT
-- On ASSUMES reduce production type_spec -> SIGNED LONG LONG INT
-- On ASSIGNS reduce production type_spec -> SIGNED LONG LONG INT
-- On ARROW reduce production type_spec -> SIGNED LONG LONG INT
-- On AND reduce production type_spec -> SIGNED LONG LONG INT
-- On AMP reduce production type_spec -> SIGNED LONG LONG INT
-- On ALLOCATES reduce production type_spec -> SIGNED LONG LONG INT

State 137:
## Known stack suffix:
## SIGNED LONG INT
## LR(1) items:
type_spec -> SIGNED LONG INT . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> SIGNED LONG INT
-- On WITH reduce production type_spec -> SIGNED LONG INT
-- On VOLATILE reduce production type_spec -> SIGNED LONG INT
-- On STAR reduce production type_spec -> SIGNED LONG INT
-- On SLASH reduce production type_spec -> SIGNED LONG INT
-- On SEMICOLON reduce production type_spec -> SIGNED LONG INT
-- On RSQUARE reduce production type_spec -> SIGNED LONG INT
-- On RPAR reduce production type_spec -> SIGNED LONG INT
-- On RETURNS reduce production type_spec -> SIGNED LONG INT
-- On REQUIRES reduce production type_spec -> SIGNED LONG INT
-- On READS reduce production type_spec -> SIGNED LONG INT
-- On RBRACE reduce production type_spec -> SIGNED LONG INT
-- On QUESTION reduce production type_spec -> SIGNED LONG INT
-- On PLUS reduce production type_spec -> SIGNED LONG INT
-- On PIPE reduce production type_spec -> SIGNED LONG INT
-- On PERCENT reduce production type_spec -> SIGNED LONG INT
-- On OR reduce production type_spec -> SIGNED LONG INT
-- On NE reduce production type_spec -> SIGNED LONG INT
-- On MINUS reduce production type_spec -> SIGNED LONG INT
-- On LTLT reduce production type_spec -> SIGNED LONG INT
-- On LTCOLON reduce production type_spec -> SIGNED LONG INT
-- On LT reduce production type_spec -> SIGNED LONG INT
-- On LSQUARE reduce production type_spec -> SIGNED LONG INT
-- On LPAR reduce production type_spec -> SIGNED LONG INT
-- On LE reduce production type_spec -> SIGNED LONG INT
-- On LBRACE reduce production type_spec -> SIGNED LONG INT
-- On IMPLIES reduce production type_spec -> SIGNED LONG INT
-- On IFF reduce production type_spec -> SIGNED LONG INT
-- On IDENTIFIER reduce production type_spec -> SIGNED LONG INT
-- On HATHAT reduce production type_spec -> SIGNED LONG INT
-- On HAT reduce production type_spec -> SIGNED LONG INT
-- On GTGT reduce production type_spec -> SIGNED LONG INT
-- On GT reduce production type_spec -> SIGNED LONG INT
-- On GE reduce production type_spec -> SIGNED LONG INT
-- On FROM reduce production type_spec -> SIGNED LONG INT
-- On FREES reduce production type_spec -> SIGNED LONG INT
-- On FOR reduce production type_spec -> SIGNED LONG INT
-- On EXITS reduce production type_spec -> SIGNED LONG INT
-- On EQUAL reduce production type_spec -> SIGNED LONG INT
-- On EQ reduce production type_spec -> SIGNED LONG INT
-- On EOF reduce production type_spec -> SIGNED LONG INT
-- On ENSURES reduce production type_spec -> SIGNED LONG INT
-- On DOTDOT reduce production type_spec -> SIGNED LONG INT
-- On DOT reduce production type_spec -> SIGNED LONG INT
-- On DISJOINT reduce production type_spec -> SIGNED LONG INT
-- On DECREASES reduce production type_spec -> SIGNED LONG INT
-- On CONTINUES reduce production type_spec -> SIGNED LONG INT
-- On CONST reduce production type_spec -> SIGNED LONG INT
-- On COMPLETE reduce production type_spec -> SIGNED LONG INT
-- On COMMA reduce production type_spec -> SIGNED LONG INT
-- On COLONGT reduce production type_spec -> SIGNED LONG INT
-- On COLON2 reduce production type_spec -> SIGNED LONG INT
-- On BREAKS reduce production type_spec -> SIGNED LONG INT
-- On BIMPLIES reduce production type_spec -> SIGNED LONG INT
-- On BIFF reduce production type_spec -> SIGNED LONG INT
-- On BEHAVIOR reduce production type_spec -> SIGNED LONG INT
-- On ASSUMES reduce production type_spec -> SIGNED LONG INT
-- On ASSIGNS reduce production type_spec -> SIGNED LONG INT
-- On ARROW reduce production type_spec -> SIGNED LONG INT
-- On AND reduce production type_spec -> SIGNED LONG INT
-- On AMP reduce production type_spec -> SIGNED LONG INT
-- On ALLOCATES reduce production type_spec -> SIGNED LONG INT

State 138:
## Known stack suffix:
## SIGNED INT
## LR(1) items:
type_spec -> SIGNED INT . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> SIGNED INT
-- On WITH reduce production type_spec -> SIGNED INT
-- On VOLATILE reduce production type_spec -> SIGNED INT
-- On STAR reduce production type_spec -> SIGNED INT
-- On SLASH reduce production type_spec -> SIGNED INT
-- On SEMICOLON reduce production type_spec -> SIGNED INT
-- On RSQUARE reduce production type_spec -> SIGNED INT
-- On RPAR reduce production type_spec -> SIGNED INT
-- On RETURNS reduce production type_spec -> SIGNED INT
-- On REQUIRES reduce production type_spec -> SIGNED INT
-- On READS reduce production type_spec -> SIGNED INT
-- On RBRACE reduce production type_spec -> SIGNED INT
-- On QUESTION reduce production type_spec -> SIGNED INT
-- On PLUS reduce production type_spec -> SIGNED INT
-- On PIPE reduce production type_spec -> SIGNED INT
-- On PERCENT reduce production type_spec -> SIGNED INT
-- On OR reduce production type_spec -> SIGNED INT
-- On NE reduce production type_spec -> SIGNED INT
-- On MINUS reduce production type_spec -> SIGNED INT
-- On LTLT reduce production type_spec -> SIGNED INT
-- On LTCOLON reduce production type_spec -> SIGNED INT
-- On LT reduce production type_spec -> SIGNED INT
-- On LSQUARE reduce production type_spec -> SIGNED INT
-- On LPAR reduce production type_spec -> SIGNED INT
-- On LE reduce production type_spec -> SIGNED INT
-- On LBRACE reduce production type_spec -> SIGNED INT
-- On IMPLIES reduce production type_spec -> SIGNED INT
-- On IFF reduce production type_spec -> SIGNED INT
-- On IDENTIFIER reduce production type_spec -> SIGNED INT
-- On HATHAT reduce production type_spec -> SIGNED INT
-- On HAT reduce production type_spec -> SIGNED INT
-- On GTGT reduce production type_spec -> SIGNED INT
-- On GT reduce production type_spec -> SIGNED INT
-- On GE reduce production type_spec -> SIGNED INT
-- On FROM reduce production type_spec -> SIGNED INT
-- On FREES reduce production type_spec -> SIGNED INT
-- On FOR reduce production type_spec -> SIGNED INT
-- On EXITS reduce production type_spec -> SIGNED INT
-- On EQUAL reduce production type_spec -> SIGNED INT
-- On EQ reduce production type_spec -> SIGNED INT
-- On EOF reduce production type_spec -> SIGNED INT
-- On ENSURES reduce production type_spec -> SIGNED INT
-- On DOTDOT reduce production type_spec -> SIGNED INT
-- On DOT reduce production type_spec -> SIGNED INT
-- On DISJOINT reduce production type_spec -> SIGNED INT
-- On DECREASES reduce production type_spec -> SIGNED INT
-- On CONTINUES reduce production type_spec -> SIGNED INT
-- On CONST reduce production type_spec -> SIGNED INT
-- On COMPLETE reduce production type_spec -> SIGNED INT
-- On COMMA reduce production type_spec -> SIGNED INT
-- On COLONGT reduce production type_spec -> SIGNED INT
-- On COLON2 reduce production type_spec -> SIGNED INT
-- On BREAKS reduce production type_spec -> SIGNED INT
-- On BIMPLIES reduce production type_spec -> SIGNED INT
-- On BIFF reduce production type_spec -> SIGNED INT
-- On BEHAVIOR reduce production type_spec -> SIGNED INT
-- On ASSUMES reduce production type_spec -> SIGNED INT
-- On ASSIGNS reduce production type_spec -> SIGNED INT
-- On ARROW reduce production type_spec -> SIGNED INT
-- On AND reduce production type_spec -> SIGNED INT
-- On AMP reduce production type_spec -> SIGNED INT
-- On ALLOCATES reduce production type_spec -> SIGNED INT

State 139:
## Known stack suffix:
## SIGNED CHAR
## LR(1) items:
type_spec -> SIGNED CHAR . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> SIGNED CHAR
-- On WITH reduce production type_spec -> SIGNED CHAR
-- On VOLATILE reduce production type_spec -> SIGNED CHAR
-- On STAR reduce production type_spec -> SIGNED CHAR
-- On SLASH reduce production type_spec -> SIGNED CHAR
-- On SEMICOLON reduce production type_spec -> SIGNED CHAR
-- On RSQUARE reduce production type_spec -> SIGNED CHAR
-- On RPAR reduce production type_spec -> SIGNED CHAR
-- On RETURNS reduce production type_spec -> SIGNED CHAR
-- On REQUIRES reduce production type_spec -> SIGNED CHAR
-- On READS reduce production type_spec -> SIGNED CHAR
-- On RBRACE reduce production type_spec -> SIGNED CHAR
-- On QUESTION reduce production type_spec -> SIGNED CHAR
-- On PLUS reduce production type_spec -> SIGNED CHAR
-- On PIPE reduce production type_spec -> SIGNED CHAR
-- On PERCENT reduce production type_spec -> SIGNED CHAR
-- On OR reduce production type_spec -> SIGNED CHAR
-- On NE reduce production type_spec -> SIGNED CHAR
-- On MINUS reduce production type_spec -> SIGNED CHAR
-- On LTLT reduce production type_spec -> SIGNED CHAR
-- On LTCOLON reduce production type_spec -> SIGNED CHAR
-- On LT reduce production type_spec -> SIGNED CHAR
-- On LSQUARE reduce production type_spec -> SIGNED CHAR
-- On LPAR reduce production type_spec -> SIGNED CHAR
-- On LE reduce production type_spec -> SIGNED CHAR
-- On LBRACE reduce production type_spec -> SIGNED CHAR
-- On IMPLIES reduce production type_spec -> SIGNED CHAR
-- On IFF reduce production type_spec -> SIGNED CHAR
-- On IDENTIFIER reduce production type_spec -> SIGNED CHAR
-- On HATHAT reduce production type_spec -> SIGNED CHAR
-- On HAT reduce production type_spec -> SIGNED CHAR
-- On GTGT reduce production type_spec -> SIGNED CHAR
-- On GT reduce production type_spec -> SIGNED CHAR
-- On GE reduce production type_spec -> SIGNED CHAR
-- On FROM reduce production type_spec -> SIGNED CHAR
-- On FREES reduce production type_spec -> SIGNED CHAR
-- On FOR reduce production type_spec -> SIGNED CHAR
-- On EXITS reduce production type_spec -> SIGNED CHAR
-- On EQUAL reduce production type_spec -> SIGNED CHAR
-- On EQ reduce production type_spec -> SIGNED CHAR
-- On EOF reduce production type_spec -> SIGNED CHAR
-- On ENSURES reduce production type_spec -> SIGNED CHAR
-- On DOTDOT reduce production type_spec -> SIGNED CHAR
-- On DOT reduce production type_spec -> SIGNED CHAR
-- On DISJOINT reduce production type_spec -> SIGNED CHAR
-- On DECREASES reduce production type_spec -> SIGNED CHAR
-- On CONTINUES reduce production type_spec -> SIGNED CHAR
-- On CONST reduce production type_spec -> SIGNED CHAR
-- On COMPLETE reduce production type_spec -> SIGNED CHAR
-- On COMMA reduce production type_spec -> SIGNED CHAR
-- On COLONGT reduce production type_spec -> SIGNED CHAR
-- On COLON2 reduce production type_spec -> SIGNED CHAR
-- On BREAKS reduce production type_spec -> SIGNED CHAR
-- On BIMPLIES reduce production type_spec -> SIGNED CHAR
-- On BIFF reduce production type_spec -> SIGNED CHAR
-- On BEHAVIOR reduce production type_spec -> SIGNED CHAR
-- On ASSUMES reduce production type_spec -> SIGNED CHAR
-- On ASSIGNS reduce production type_spec -> SIGNED CHAR
-- On ARROW reduce production type_spec -> SIGNED CHAR
-- On AND reduce production type_spec -> SIGNED CHAR
-- On AMP reduce production type_spec -> SIGNED CHAR
-- On ALLOCATES reduce production type_spec -> SIGNED CHAR

State 140:
## Known stack suffix:
## SHORT
## LR(1) items:
type_spec -> SHORT . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> SHORT
-- On WITH reduce production type_spec -> SHORT
-- On STAR reduce production type_spec -> SHORT
-- On SLASH reduce production type_spec -> SHORT
-- On SEMICOLON reduce production type_spec -> SHORT
-- On RSQUARE reduce production type_spec -> SHORT
-- On RPAR reduce production type_spec -> SHORT
-- On RETURNS reduce production type_spec -> SHORT
-- On REQUIRES reduce production type_spec -> SHORT
-- On READS reduce production type_spec -> SHORT
-- On RBRACE reduce production type_spec -> SHORT
-- On QUESTION reduce production type_spec -> SHORT
-- On PLUS reduce production type_spec -> SHORT
-- On PIPE reduce production type_spec -> SHORT
-- On PERCENT reduce production type_spec -> SHORT
-- On OR reduce production type_spec -> SHORT
-- On NE reduce production type_spec -> SHORT
-- On MINUS reduce production type_spec -> SHORT
-- On LTLT reduce production type_spec -> SHORT
-- On LTCOLON reduce production type_spec -> SHORT
-- On LT reduce production type_spec -> SHORT
-- On LSQUARE reduce production type_spec -> SHORT
-- On LPAR reduce production type_spec -> SHORT
-- On LE reduce production type_spec -> SHORT
-- On LBRACE reduce production type_spec -> SHORT
-- On IMPLIES reduce production type_spec -> SHORT
-- On IFF reduce production type_spec -> SHORT
-- On IDENTIFIER reduce production type_spec -> SHORT
-- On HATHAT reduce production type_spec -> SHORT
-- On HAT reduce production type_spec -> SHORT
-- On GTGT reduce production type_spec -> SHORT
-- On GT reduce production type_spec -> SHORT
-- On GE reduce production type_spec -> SHORT
-- On FROM reduce production type_spec -> SHORT
-- On FREES reduce production type_spec -> SHORT
-- On FOR reduce production type_spec -> SHORT
-- On EXITS reduce production type_spec -> SHORT
-- On EQUAL reduce production type_spec -> SHORT
-- On EQ reduce production type_spec -> SHORT
-- On EOF reduce production type_spec -> SHORT
-- On ENSURES reduce production type_spec -> SHORT
-- On DOTDOT reduce production type_spec -> SHORT
-- On DOT reduce production type_spec -> SHORT
-- On DISJOINT reduce production type_spec -> SHORT
-- On DECREASES reduce production type_spec -> SHORT
-- On CONTINUES reduce production type_spec -> SHORT
-- On COMPLETE reduce production type_spec -> SHORT
-- On COMMA reduce production type_spec -> SHORT
-- On COLONGT reduce production type_spec -> SHORT
-- On COLON2 reduce production type_spec -> SHORT
-- On BREAKS reduce production type_spec -> SHORT
-- On BIMPLIES reduce production type_spec -> SHORT
-- On BIFF reduce production type_spec -> SHORT
-- On BEHAVIOR reduce production type_spec -> SHORT
-- On ASSUMES reduce production type_spec -> SHORT
-- On ASSIGNS reduce production type_spec -> SHORT
-- On ARROW reduce production type_spec -> SHORT
-- On AND reduce production type_spec -> SHORT
-- On AMP reduce production type_spec -> SHORT
-- On ALLOCATES reduce production type_spec -> SHORT

State 141:
## Known stack suffix:
## REAL
## LR(1) items:
type_spec -> REAL . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> REAL
-- On WITH reduce production type_spec -> REAL
-- On STAR reduce production type_spec -> REAL
-- On SLASH reduce production type_spec -> REAL
-- On SEMICOLON reduce production type_spec -> REAL
-- On RSQUARE reduce production type_spec -> REAL
-- On RPAR reduce production type_spec -> REAL
-- On RETURNS reduce production type_spec -> REAL
-- On REQUIRES reduce production type_spec -> REAL
-- On READS reduce production type_spec -> REAL
-- On RBRACE reduce production type_spec -> REAL
-- On QUESTION reduce production type_spec -> REAL
-- On PLUS reduce production type_spec -> REAL
-- On PIPE reduce production type_spec -> REAL
-- On PERCENT reduce production type_spec -> REAL
-- On OR reduce production type_spec -> REAL
-- On NE reduce production type_spec -> REAL
-- On MINUS reduce production type_spec -> REAL
-- On LTLT reduce production type_spec -> REAL
-- On LTCOLON reduce production type_spec -> REAL
-- On LT reduce production type_spec -> REAL
-- On LSQUARE reduce production type_spec -> REAL
-- On LPAR reduce production type_spec -> REAL
-- On LE reduce production type_spec -> REAL
-- On LBRACE reduce production type_spec -> REAL
-- On IMPLIES reduce production type_spec -> REAL
-- On IFF reduce production type_spec -> REAL
-- On IDENTIFIER reduce production type_spec -> REAL
-- On HATHAT reduce production type_spec -> REAL
-- On HAT reduce production type_spec -> REAL
-- On GTGT reduce production type_spec -> REAL
-- On GT reduce production type_spec -> REAL
-- On GE reduce production type_spec -> REAL
-- On FROM reduce production type_spec -> REAL
-- On FREES reduce production type_spec -> REAL
-- On FOR reduce production type_spec -> REAL
-- On EXITS reduce production type_spec -> REAL
-- On EQUAL reduce production type_spec -> REAL
-- On EQ reduce production type_spec -> REAL
-- On EOF reduce production type_spec -> REAL
-- On ENSURES reduce production type_spec -> REAL
-- On DOTDOT reduce production type_spec -> REAL
-- On DOT reduce production type_spec -> REAL
-- On DISJOINT reduce production type_spec -> REAL
-- On DECREASES reduce production type_spec -> REAL
-- On CONTINUES reduce production type_spec -> REAL
-- On COMPLETE reduce production type_spec -> REAL
-- On COMMA reduce production type_spec -> REAL
-- On COLONGT reduce production type_spec -> REAL
-- On COLON2 reduce production type_spec -> REAL
-- On BREAKS reduce production type_spec -> REAL
-- On BIMPLIES reduce production type_spec -> REAL
-- On BIFF reduce production type_spec -> REAL
-- On BEHAVIOR reduce production type_spec -> REAL
-- On ASSUMES reduce production type_spec -> REAL
-- On ASSIGNS reduce production type_spec -> REAL
-- On ARROW reduce production type_spec -> REAL
-- On AND reduce production type_spec -> REAL
-- On AMP reduce production type_spec -> REAL
-- On ALLOCATES reduce production type_spec -> REAL

State 142:
## Known stack suffix:
## LONG
## LR(1) items:
type_spec -> LONG . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> LONG . INT [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> LONG . LONG [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> LONG . LONG INT [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> LONG . DOUBLE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LONG shift to state 143
-- On INT shift to state 145
-- On DOUBLE shift to state 146
## Reductions:
-- On WRITES reduce production type_spec -> LONG
-- On WITH reduce production type_spec -> LONG
-- On STAR reduce production type_spec -> LONG
-- On SLASH reduce production type_spec -> LONG
-- On SEMICOLON reduce production type_spec -> LONG
-- On RSQUARE reduce production type_spec -> LONG
-- On RPAR reduce production type_spec -> LONG
-- On RETURNS reduce production type_spec -> LONG
-- On REQUIRES reduce production type_spec -> LONG
-- On READS reduce production type_spec -> LONG
-- On RBRACE reduce production type_spec -> LONG
-- On QUESTION reduce production type_spec -> LONG
-- On PLUS reduce production type_spec -> LONG
-- On PIPE reduce production type_spec -> LONG
-- On PERCENT reduce production type_spec -> LONG
-- On OR reduce production type_spec -> LONG
-- On NE reduce production type_spec -> LONG
-- On MINUS reduce production type_spec -> LONG
-- On LTLT reduce production type_spec -> LONG
-- On LTCOLON reduce production type_spec -> LONG
-- On LT reduce production type_spec -> LONG
-- On LSQUARE reduce production type_spec -> LONG
-- On LPAR reduce production type_spec -> LONG
-- On LE reduce production type_spec -> LONG
-- On LBRACE reduce production type_spec -> LONG
-- On IMPLIES reduce production type_spec -> LONG
-- On IFF reduce production type_spec -> LONG
-- On IDENTIFIER reduce production type_spec -> LONG
-- On HATHAT reduce production type_spec -> LONG
-- On HAT reduce production type_spec -> LONG
-- On GTGT reduce production type_spec -> LONG
-- On GT reduce production type_spec -> LONG
-- On GE reduce production type_spec -> LONG
-- On FROM reduce production type_spec -> LONG
-- On FREES reduce production type_spec -> LONG
-- On FOR reduce production type_spec -> LONG
-- On EXITS reduce production type_spec -> LONG
-- On EQUAL reduce production type_spec -> LONG
-- On EQ reduce production type_spec -> LONG
-- On EOF reduce production type_spec -> LONG
-- On ENSURES reduce production type_spec -> LONG
-- On DOTDOT reduce production type_spec -> LONG
-- On DOT reduce production type_spec -> LONG
-- On DISJOINT reduce production type_spec -> LONG
-- On DECREASES reduce production type_spec -> LONG
-- On CONTINUES reduce production type_spec -> LONG
-- On COMPLETE reduce production type_spec -> LONG
-- On COMMA reduce production type_spec -> LONG
-- On COLONGT reduce production type_spec -> LONG
-- On COLON2 reduce production type_spec -> LONG
-- On BREAKS reduce production type_spec -> LONG
-- On BIMPLIES reduce production type_spec -> LONG
-- On BIFF reduce production type_spec -> LONG
-- On BEHAVIOR reduce production type_spec -> LONG
-- On ASSUMES reduce production type_spec -> LONG
-- On ASSIGNS reduce production type_spec -> LONG
-- On ARROW reduce production type_spec -> LONG
-- On AND reduce production type_spec -> LONG
-- On AMP reduce production type_spec -> LONG
-- On ALLOCATES reduce production type_spec -> LONG

State 143:
## Known stack suffix:
## LONG LONG
## LR(1) items:
type_spec -> LONG LONG . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
type_spec -> LONG LONG . INT [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On INT shift to state 144
## Reductions:
-- On WRITES reduce production type_spec -> LONG LONG
-- On WITH reduce production type_spec -> LONG LONG
-- On VOLATILE reduce production type_spec -> LONG LONG
-- On STAR reduce production type_spec -> LONG LONG
-- On SLASH reduce production type_spec -> LONG LONG
-- On SEMICOLON reduce production type_spec -> LONG LONG
-- On RSQUARE reduce production type_spec -> LONG LONG
-- On RPAR reduce production type_spec -> LONG LONG
-- On RETURNS reduce production type_spec -> LONG LONG
-- On REQUIRES reduce production type_spec -> LONG LONG
-- On READS reduce production type_spec -> LONG LONG
-- On RBRACE reduce production type_spec -> LONG LONG
-- On QUESTION reduce production type_spec -> LONG LONG
-- On PLUS reduce production type_spec -> LONG LONG
-- On PIPE reduce production type_spec -> LONG LONG
-- On PERCENT reduce production type_spec -> LONG LONG
-- On OR reduce production type_spec -> LONG LONG
-- On NE reduce production type_spec -> LONG LONG
-- On MINUS reduce production type_spec -> LONG LONG
-- On LTLT reduce production type_spec -> LONG LONG
-- On LTCOLON reduce production type_spec -> LONG LONG
-- On LT reduce production type_spec -> LONG LONG
-- On LSQUARE reduce production type_spec -> LONG LONG
-- On LPAR reduce production type_spec -> LONG LONG
-- On LE reduce production type_spec -> LONG LONG
-- On LBRACE reduce production type_spec -> LONG LONG
-- On IMPLIES reduce production type_spec -> LONG LONG
-- On IFF reduce production type_spec -> LONG LONG
-- On IDENTIFIER reduce production type_spec -> LONG LONG
-- On HATHAT reduce production type_spec -> LONG LONG
-- On HAT reduce production type_spec -> LONG LONG
-- On GTGT reduce production type_spec -> LONG LONG
-- On GT reduce production type_spec -> LONG LONG
-- On GE reduce production type_spec -> LONG LONG
-- On FROM reduce production type_spec -> LONG LONG
-- On FREES reduce production type_spec -> LONG LONG
-- On FOR reduce production type_spec -> LONG LONG
-- On EXITS reduce production type_spec -> LONG LONG
-- On EQUAL reduce production type_spec -> LONG LONG
-- On EQ reduce production type_spec -> LONG LONG
-- On EOF reduce production type_spec -> LONG LONG
-- On ENSURES reduce production type_spec -> LONG LONG
-- On DOTDOT reduce production type_spec -> LONG LONG
-- On DOT reduce production type_spec -> LONG LONG
-- On DISJOINT reduce production type_spec -> LONG LONG
-- On DECREASES reduce production type_spec -> LONG LONG
-- On CONTINUES reduce production type_spec -> LONG LONG
-- On CONST reduce production type_spec -> LONG LONG
-- On COMPLETE reduce production type_spec -> LONG LONG
-- On COMMA reduce production type_spec -> LONG LONG
-- On COLONGT reduce production type_spec -> LONG LONG
-- On COLON2 reduce production type_spec -> LONG LONG
-- On BREAKS reduce production type_spec -> LONG LONG
-- On BIMPLIES reduce production type_spec -> LONG LONG
-- On BIFF reduce production type_spec -> LONG LONG
-- On BEHAVIOR reduce production type_spec -> LONG LONG
-- On ASSUMES reduce production type_spec -> LONG LONG
-- On ASSIGNS reduce production type_spec -> LONG LONG
-- On ARROW reduce production type_spec -> LONG LONG
-- On AND reduce production type_spec -> LONG LONG
-- On AMP reduce production type_spec -> LONG LONG
-- On ALLOCATES reduce production type_spec -> LONG LONG

State 144:
## Known stack suffix:
## LONG LONG INT
## LR(1) items:
type_spec -> LONG LONG INT . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> LONG LONG INT
-- On WITH reduce production type_spec -> LONG LONG INT
-- On VOLATILE reduce production type_spec -> LONG LONG INT
-- On STAR reduce production type_spec -> LONG LONG INT
-- On SLASH reduce production type_spec -> LONG LONG INT
-- On SEMICOLON reduce production type_spec -> LONG LONG INT
-- On RSQUARE reduce production type_spec -> LONG LONG INT
-- On RPAR reduce production type_spec -> LONG LONG INT
-- On RETURNS reduce production type_spec -> LONG LONG INT
-- On REQUIRES reduce production type_spec -> LONG LONG INT
-- On READS reduce production type_spec -> LONG LONG INT
-- On RBRACE reduce production type_spec -> LONG LONG INT
-- On QUESTION reduce production type_spec -> LONG LONG INT
-- On PLUS reduce production type_spec -> LONG LONG INT
-- On PIPE reduce production type_spec -> LONG LONG INT
-- On PERCENT reduce production type_spec -> LONG LONG INT
-- On OR reduce production type_spec -> LONG LONG INT
-- On NE reduce production type_spec -> LONG LONG INT
-- On MINUS reduce production type_spec -> LONG LONG INT
-- On LTLT reduce production type_spec -> LONG LONG INT
-- On LTCOLON reduce production type_spec -> LONG LONG INT
-- On LT reduce production type_spec -> LONG LONG INT
-- On LSQUARE reduce production type_spec -> LONG LONG INT
-- On LPAR reduce production type_spec -> LONG LONG INT
-- On LE reduce production type_spec -> LONG LONG INT
-- On LBRACE reduce production type_spec -> LONG LONG INT
-- On IMPLIES reduce production type_spec -> LONG LONG INT
-- On IFF reduce production type_spec -> LONG LONG INT
-- On IDENTIFIER reduce production type_spec -> LONG LONG INT
-- On HATHAT reduce production type_spec -> LONG LONG INT
-- On HAT reduce production type_spec -> LONG LONG INT
-- On GTGT reduce production type_spec -> LONG LONG INT
-- On GT reduce production type_spec -> LONG LONG INT
-- On GE reduce production type_spec -> LONG LONG INT
-- On FROM reduce production type_spec -> LONG LONG INT
-- On FREES reduce production type_spec -> LONG LONG INT
-- On FOR reduce production type_spec -> LONG LONG INT
-- On EXITS reduce production type_spec -> LONG LONG INT
-- On EQUAL reduce production type_spec -> LONG LONG INT
-- On EQ reduce production type_spec -> LONG LONG INT
-- On EOF reduce production type_spec -> LONG LONG INT
-- On ENSURES reduce production type_spec -> LONG LONG INT
-- On DOTDOT reduce production type_spec -> LONG LONG INT
-- On DOT reduce production type_spec -> LONG LONG INT
-- On DISJOINT reduce production type_spec -> LONG LONG INT
-- On DECREASES reduce production type_spec -> LONG LONG INT
-- On CONTINUES reduce production type_spec -> LONG LONG INT
-- On CONST reduce production type_spec -> LONG LONG INT
-- On COMPLETE reduce production type_spec -> LONG LONG INT
-- On COMMA reduce production type_spec -> LONG LONG INT
-- On COLONGT reduce production type_spec -> LONG LONG INT
-- On COLON2 reduce production type_spec -> LONG LONG INT
-- On BREAKS reduce production type_spec -> LONG LONG INT
-- On BIMPLIES reduce production type_spec -> LONG LONG INT
-- On BIFF reduce production type_spec -> LONG LONG INT
-- On BEHAVIOR reduce production type_spec -> LONG LONG INT
-- On ASSUMES reduce production type_spec -> LONG LONG INT
-- On ASSIGNS reduce production type_spec -> LONG LONG INT
-- On ARROW reduce production type_spec -> LONG LONG INT
-- On AND reduce production type_spec -> LONG LONG INT
-- On AMP reduce production type_spec -> LONG LONG INT
-- On ALLOCATES reduce production type_spec -> LONG LONG INT

State 145:
## Known stack suffix:
## LONG INT
## LR(1) items:
type_spec -> LONG INT . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> LONG INT
-- On WITH reduce production type_spec -> LONG INT
-- On VOLATILE reduce production type_spec -> LONG INT
-- On STAR reduce production type_spec -> LONG INT
-- On SLASH reduce production type_spec -> LONG INT
-- On SEMICOLON reduce production type_spec -> LONG INT
-- On RSQUARE reduce production type_spec -> LONG INT
-- On RPAR reduce production type_spec -> LONG INT
-- On RETURNS reduce production type_spec -> LONG INT
-- On REQUIRES reduce production type_spec -> LONG INT
-- On READS reduce production type_spec -> LONG INT
-- On RBRACE reduce production type_spec -> LONG INT
-- On QUESTION reduce production type_spec -> LONG INT
-- On PLUS reduce production type_spec -> LONG INT
-- On PIPE reduce production type_spec -> LONG INT
-- On PERCENT reduce production type_spec -> LONG INT
-- On OR reduce production type_spec -> LONG INT
-- On NE reduce production type_spec -> LONG INT
-- On MINUS reduce production type_spec -> LONG INT
-- On LTLT reduce production type_spec -> LONG INT
-- On LTCOLON reduce production type_spec -> LONG INT
-- On LT reduce production type_spec -> LONG INT
-- On LSQUARE reduce production type_spec -> LONG INT
-- On LPAR reduce production type_spec -> LONG INT
-- On LE reduce production type_spec -> LONG INT
-- On LBRACE reduce production type_spec -> LONG INT
-- On IMPLIES reduce production type_spec -> LONG INT
-- On IFF reduce production type_spec -> LONG INT
-- On IDENTIFIER reduce production type_spec -> LONG INT
-- On HATHAT reduce production type_spec -> LONG INT
-- On HAT reduce production type_spec -> LONG INT
-- On GTGT reduce production type_spec -> LONG INT
-- On GT reduce production type_spec -> LONG INT
-- On GE reduce production type_spec -> LONG INT
-- On FROM reduce production type_spec -> LONG INT
-- On FREES reduce production type_spec -> LONG INT
-- On FOR reduce production type_spec -> LONG INT
-- On EXITS reduce production type_spec -> LONG INT
-- On EQUAL reduce production type_spec -> LONG INT
-- On EQ reduce production type_spec -> LONG INT
-- On EOF reduce production type_spec -> LONG INT
-- On ENSURES reduce production type_spec -> LONG INT
-- On DOTDOT reduce production type_spec -> LONG INT
-- On DOT reduce production type_spec -> LONG INT
-- On DISJOINT reduce production type_spec -> LONG INT
-- On DECREASES reduce production type_spec -> LONG INT
-- On CONTINUES reduce production type_spec -> LONG INT
-- On CONST reduce production type_spec -> LONG INT
-- On COMPLETE reduce production type_spec -> LONG INT
-- On COMMA reduce production type_spec -> LONG INT
-- On COLONGT reduce production type_spec -> LONG INT
-- On COLON2 reduce production type_spec -> LONG INT
-- On BREAKS reduce production type_spec -> LONG INT
-- On BIMPLIES reduce production type_spec -> LONG INT
-- On BIFF reduce production type_spec -> LONG INT
-- On BEHAVIOR reduce production type_spec -> LONG INT
-- On ASSUMES reduce production type_spec -> LONG INT
-- On ASSIGNS reduce production type_spec -> LONG INT
-- On ARROW reduce production type_spec -> LONG INT
-- On AND reduce production type_spec -> LONG INT
-- On AMP reduce production type_spec -> LONG INT
-- On ALLOCATES reduce production type_spec -> LONG INT

State 146:
## Known stack suffix:
## LONG DOUBLE
## LR(1) items:
type_spec -> LONG DOUBLE . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> LONG DOUBLE
-- On WITH reduce production type_spec -> LONG DOUBLE
-- On VOLATILE reduce production type_spec -> LONG DOUBLE
-- On STAR reduce production type_spec -> LONG DOUBLE
-- On SLASH reduce production type_spec -> LONG DOUBLE
-- On SEMICOLON reduce production type_spec -> LONG DOUBLE
-- On RSQUARE reduce production type_spec -> LONG DOUBLE
-- On RPAR reduce production type_spec -> LONG DOUBLE
-- On RETURNS reduce production type_spec -> LONG DOUBLE
-- On REQUIRES reduce production type_spec -> LONG DOUBLE
-- On READS reduce production type_spec -> LONG DOUBLE
-- On RBRACE reduce production type_spec -> LONG DOUBLE
-- On QUESTION reduce production type_spec -> LONG DOUBLE
-- On PLUS reduce production type_spec -> LONG DOUBLE
-- On PIPE reduce production type_spec -> LONG DOUBLE
-- On PERCENT reduce production type_spec -> LONG DOUBLE
-- On OR reduce production type_spec -> LONG DOUBLE
-- On NE reduce production type_spec -> LONG DOUBLE
-- On MINUS reduce production type_spec -> LONG DOUBLE
-- On LTLT reduce production type_spec -> LONG DOUBLE
-- On LTCOLON reduce production type_spec -> LONG DOUBLE
-- On LT reduce production type_spec -> LONG DOUBLE
-- On LSQUARE reduce production type_spec -> LONG DOUBLE
-- On LPAR reduce production type_spec -> LONG DOUBLE
-- On LE reduce production type_spec -> LONG DOUBLE
-- On LBRACE reduce production type_spec -> LONG DOUBLE
-- On IMPLIES reduce production type_spec -> LONG DOUBLE
-- On IFF reduce production type_spec -> LONG DOUBLE
-- On IDENTIFIER reduce production type_spec -> LONG DOUBLE
-- On HATHAT reduce production type_spec -> LONG DOUBLE
-- On HAT reduce production type_spec -> LONG DOUBLE
-- On GTGT reduce production type_spec -> LONG DOUBLE
-- On GT reduce production type_spec -> LONG DOUBLE
-- On GE reduce production type_spec -> LONG DOUBLE
-- On FROM reduce production type_spec -> LONG DOUBLE
-- On FREES reduce production type_spec -> LONG DOUBLE
-- On FOR reduce production type_spec -> LONG DOUBLE
-- On EXITS reduce production type_spec -> LONG DOUBLE
-- On EQUAL reduce production type_spec -> LONG DOUBLE
-- On EQ reduce production type_spec -> LONG DOUBLE
-- On EOF reduce production type_spec -> LONG DOUBLE
-- On ENSURES reduce production type_spec -> LONG DOUBLE
-- On DOTDOT reduce production type_spec -> LONG DOUBLE
-- On DOT reduce production type_spec -> LONG DOUBLE
-- On DISJOINT reduce production type_spec -> LONG DOUBLE
-- On DECREASES reduce production type_spec -> LONG DOUBLE
-- On CONTINUES reduce production type_spec -> LONG DOUBLE
-- On CONST reduce production type_spec -> LONG DOUBLE
-- On COMPLETE reduce production type_spec -> LONG DOUBLE
-- On COMMA reduce production type_spec -> LONG DOUBLE
-- On COLONGT reduce production type_spec -> LONG DOUBLE
-- On COLON2 reduce production type_spec -> LONG DOUBLE
-- On BREAKS reduce production type_spec -> LONG DOUBLE
-- On BIMPLIES reduce production type_spec -> LONG DOUBLE
-- On BIFF reduce production type_spec -> LONG DOUBLE
-- On BEHAVIOR reduce production type_spec -> LONG DOUBLE
-- On ASSUMES reduce production type_spec -> LONG DOUBLE
-- On ASSIGNS reduce production type_spec -> LONG DOUBLE
-- On ARROW reduce production type_spec -> LONG DOUBLE
-- On AND reduce production type_spec -> LONG DOUBLE
-- On AMP reduce production type_spec -> LONG DOUBLE
-- On ALLOCATES reduce production type_spec -> LONG DOUBLE

State 147:
## Known stack suffix:
## INTEGER
## LR(1) items:
type_spec -> INTEGER . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> INTEGER
-- On WITH reduce production type_spec -> INTEGER
-- On STAR reduce production type_spec -> INTEGER
-- On SLASH reduce production type_spec -> INTEGER
-- On SEMICOLON reduce production type_spec -> INTEGER
-- On RSQUARE reduce production type_spec -> INTEGER
-- On RPAR reduce production type_spec -> INTEGER
-- On RETURNS reduce production type_spec -> INTEGER
-- On REQUIRES reduce production type_spec -> INTEGER
-- On READS reduce production type_spec -> INTEGER
-- On RBRACE reduce production type_spec -> INTEGER
-- On QUESTION reduce production type_spec -> INTEGER
-- On PLUS reduce production type_spec -> INTEGER
-- On PIPE reduce production type_spec -> INTEGER
-- On PERCENT reduce production type_spec -> INTEGER
-- On OR reduce production type_spec -> INTEGER
-- On NE reduce production type_spec -> INTEGER
-- On MINUS reduce production type_spec -> INTEGER
-- On LTLT reduce production type_spec -> INTEGER
-- On LTCOLON reduce production type_spec -> INTEGER
-- On LT reduce production type_spec -> INTEGER
-- On LSQUARE reduce production type_spec -> INTEGER
-- On LPAR reduce production type_spec -> INTEGER
-- On LE reduce production type_spec -> INTEGER
-- On LBRACE reduce production type_spec -> INTEGER
-- On IMPLIES reduce production type_spec -> INTEGER
-- On IFF reduce production type_spec -> INTEGER
-- On IDENTIFIER reduce production type_spec -> INTEGER
-- On HATHAT reduce production type_spec -> INTEGER
-- On HAT reduce production type_spec -> INTEGER
-- On GTGT reduce production type_spec -> INTEGER
-- On GT reduce production type_spec -> INTEGER
-- On GE reduce production type_spec -> INTEGER
-- On FROM reduce production type_spec -> INTEGER
-- On FREES reduce production type_spec -> INTEGER
-- On FOR reduce production type_spec -> INTEGER
-- On EXITS reduce production type_spec -> INTEGER
-- On EQUAL reduce production type_spec -> INTEGER
-- On EQ reduce production type_spec -> INTEGER
-- On EOF reduce production type_spec -> INTEGER
-- On ENSURES reduce production type_spec -> INTEGER
-- On DOTDOT reduce production type_spec -> INTEGER
-- On DOT reduce production type_spec -> INTEGER
-- On DISJOINT reduce production type_spec -> INTEGER
-- On DECREASES reduce production type_spec -> INTEGER
-- On CONTINUES reduce production type_spec -> INTEGER
-- On COMPLETE reduce production type_spec -> INTEGER
-- On COMMA reduce production type_spec -> INTEGER
-- On COLONGT reduce production type_spec -> INTEGER
-- On COLON2 reduce production type_spec -> INTEGER
-- On BREAKS reduce production type_spec -> INTEGER
-- On BIMPLIES reduce production type_spec -> INTEGER
-- On BIFF reduce production type_spec -> INTEGER
-- On BEHAVIOR reduce production type_spec -> INTEGER
-- On ASSUMES reduce production type_spec -> INTEGER
-- On ASSIGNS reduce production type_spec -> INTEGER
-- On ARROW reduce production type_spec -> INTEGER
-- On AND reduce production type_spec -> INTEGER
-- On AMP reduce production type_spec -> INTEGER
-- On ALLOCATES reduce production type_spec -> INTEGER

State 148:
## Known stack suffix:
## INT
## LR(1) items:
type_spec -> INT . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> INT
-- On WITH reduce production type_spec -> INT
-- On STAR reduce production type_spec -> INT
-- On SLASH reduce production type_spec -> INT
-- On SEMICOLON reduce production type_spec -> INT
-- On RSQUARE reduce production type_spec -> INT
-- On RPAR reduce production type_spec -> INT
-- On RETURNS reduce production type_spec -> INT
-- On REQUIRES reduce production type_spec -> INT
-- On READS reduce production type_spec -> INT
-- On RBRACE reduce production type_spec -> INT
-- On QUESTION reduce production type_spec -> INT
-- On PLUS reduce production type_spec -> INT
-- On PIPE reduce production type_spec -> INT
-- On PERCENT reduce production type_spec -> INT
-- On OR reduce production type_spec -> INT
-- On NE reduce production type_spec -> INT
-- On MINUS reduce production type_spec -> INT
-- On LTLT reduce production type_spec -> INT
-- On LTCOLON reduce production type_spec -> INT
-- On LT reduce production type_spec -> INT
-- On LSQUARE reduce production type_spec -> INT
-- On LPAR reduce production type_spec -> INT
-- On LE reduce production type_spec -> INT
-- On LBRACE reduce production type_spec -> INT
-- On IMPLIES reduce production type_spec -> INT
-- On IFF reduce production type_spec -> INT
-- On IDENTIFIER reduce production type_spec -> INT
-- On HATHAT reduce production type_spec -> INT
-- On HAT reduce production type_spec -> INT
-- On GTGT reduce production type_spec -> INT
-- On GT reduce production type_spec -> INT
-- On GE reduce production type_spec -> INT
-- On FROM reduce production type_spec -> INT
-- On FREES reduce production type_spec -> INT
-- On FOR reduce production type_spec -> INT
-- On EXITS reduce production type_spec -> INT
-- On EQUAL reduce production type_spec -> INT
-- On EQ reduce production type_spec -> INT
-- On EOF reduce production type_spec -> INT
-- On ENSURES reduce production type_spec -> INT
-- On DOTDOT reduce production type_spec -> INT
-- On DOT reduce production type_spec -> INT
-- On DISJOINT reduce production type_spec -> INT
-- On DECREASES reduce production type_spec -> INT
-- On CONTINUES reduce production type_spec -> INT
-- On COMPLETE reduce production type_spec -> INT
-- On COMMA reduce production type_spec -> INT
-- On COLONGT reduce production type_spec -> INT
-- On COLON2 reduce production type_spec -> INT
-- On BREAKS reduce production type_spec -> INT
-- On BIMPLIES reduce production type_spec -> INT
-- On BIFF reduce production type_spec -> INT
-- On BEHAVIOR reduce production type_spec -> INT
-- On ASSUMES reduce production type_spec -> INT
-- On ASSIGNS reduce production type_spec -> INT
-- On ARROW reduce production type_spec -> INT
-- On AND reduce production type_spec -> INT
-- On AMP reduce production type_spec -> INT
-- On ALLOCATES reduce production type_spec -> INT

State 149:
## Known stack suffix:
## FLOAT
## LR(1) items:
type_spec -> FLOAT . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> FLOAT
-- On WITH reduce production type_spec -> FLOAT
-- On STAR reduce production type_spec -> FLOAT
-- On SLASH reduce production type_spec -> FLOAT
-- On SEMICOLON reduce production type_spec -> FLOAT
-- On RSQUARE reduce production type_spec -> FLOAT
-- On RPAR reduce production type_spec -> FLOAT
-- On RETURNS reduce production type_spec -> FLOAT
-- On REQUIRES reduce production type_spec -> FLOAT
-- On READS reduce production type_spec -> FLOAT
-- On RBRACE reduce production type_spec -> FLOAT
-- On QUESTION reduce production type_spec -> FLOAT
-- On PLUS reduce production type_spec -> FLOAT
-- On PIPE reduce production type_spec -> FLOAT
-- On PERCENT reduce production type_spec -> FLOAT
-- On OR reduce production type_spec -> FLOAT
-- On NE reduce production type_spec -> FLOAT
-- On MINUS reduce production type_spec -> FLOAT
-- On LTLT reduce production type_spec -> FLOAT
-- On LTCOLON reduce production type_spec -> FLOAT
-- On LT reduce production type_spec -> FLOAT
-- On LSQUARE reduce production type_spec -> FLOAT
-- On LPAR reduce production type_spec -> FLOAT
-- On LE reduce production type_spec -> FLOAT
-- On LBRACE reduce production type_spec -> FLOAT
-- On IMPLIES reduce production type_spec -> FLOAT
-- On IFF reduce production type_spec -> FLOAT
-- On IDENTIFIER reduce production type_spec -> FLOAT
-- On HATHAT reduce production type_spec -> FLOAT
-- On HAT reduce production type_spec -> FLOAT
-- On GTGT reduce production type_spec -> FLOAT
-- On GT reduce production type_spec -> FLOAT
-- On GE reduce production type_spec -> FLOAT
-- On FROM reduce production type_spec -> FLOAT
-- On FREES reduce production type_spec -> FLOAT
-- On FOR reduce production type_spec -> FLOAT
-- On EXITS reduce production type_spec -> FLOAT
-- On EQUAL reduce production type_spec -> FLOAT
-- On EQ reduce production type_spec -> FLOAT
-- On EOF reduce production type_spec -> FLOAT
-- On ENSURES reduce production type_spec -> FLOAT
-- On DOTDOT reduce production type_spec -> FLOAT
-- On DOT reduce production type_spec -> FLOAT
-- On DISJOINT reduce production type_spec -> FLOAT
-- On DECREASES reduce production type_spec -> FLOAT
-- On CONTINUES reduce production type_spec -> FLOAT
-- On COMPLETE reduce production type_spec -> FLOAT
-- On COMMA reduce production type_spec -> FLOAT
-- On COLONGT reduce production type_spec -> FLOAT
-- On COLON2 reduce production type_spec -> FLOAT
-- On BREAKS reduce production type_spec -> FLOAT
-- On BIMPLIES reduce production type_spec -> FLOAT
-- On BIFF reduce production type_spec -> FLOAT
-- On BEHAVIOR reduce production type_spec -> FLOAT
-- On ASSUMES reduce production type_spec -> FLOAT
-- On ASSIGNS reduce production type_spec -> FLOAT
-- On ARROW reduce production type_spec -> FLOAT
-- On AND reduce production type_spec -> FLOAT
-- On AMP reduce production type_spec -> FLOAT
-- On ALLOCATES reduce production type_spec -> FLOAT

State 150:
## Known stack suffix:
## ENUM
## LR(1) items:
type_spec -> ENUM . exit_rt_type identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On exit_rt_type shift to state 151
## Reductions:
-- On TYPENAME reduce production exit_rt_type ->
-- On IDENTIFIER reduce production exit_rt_type ->

State 151:
## Known stack suffix:
## ENUM exit_rt_type
## LR(1) items:
type_spec -> ENUM exit_rt_type . identifier_or_typename [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On TYPENAME shift to state 10
-- On IDENTIFIER shift to state 39
-- On identifier_or_typename shift to state 152
## Reductions:

State 152:
## Known stack suffix:
## ENUM exit_rt_type identifier_or_typename
## LR(1) items:
type_spec -> ENUM exit_rt_type identifier_or_typename . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On WITH reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On VOLATILE reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On STAR reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On SLASH reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On SEMICOLON reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On RSQUARE reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On RPAR reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On RETURNS reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On REQUIRES reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On READS reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On RBRACE reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On QUESTION reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On PLUS reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On PIPE reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On PERCENT reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On OR reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On NE reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On MINUS reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On LTLT reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On LTCOLON reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On LT reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On LSQUARE reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On LPAR reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On LE reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On LBRACE reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On IMPLIES reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On IFF reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On IDENTIFIER reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On HATHAT reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On HAT reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On GTGT reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On GT reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On GE reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On FROM reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On FREES reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On FOR reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On EXITS reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On EQUAL reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On EQ reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On EOF reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On ENSURES reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On DOTDOT reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On DOT reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On DISJOINT reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On DECREASES reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On CONTINUES reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On CONST reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On COMPLETE reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On COMMA reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On COLONGT reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On COLON2 reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On BREAKS reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On BIMPLIES reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On BIFF reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On BEHAVIOR reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On ASSUMES reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On ASSIGNS reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On ARROW reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On AND reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On AMP reduce production type_spec -> ENUM exit_rt_type identifier_or_typename
-- On ALLOCATES reduce production type_spec -> ENUM exit_rt_type identifier_or_typename

State 153:
## Known stack suffix:
## DOUBLE
## LR(1) items:
type_spec -> DOUBLE . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> DOUBLE
-- On WITH reduce production type_spec -> DOUBLE
-- On STAR reduce production type_spec -> DOUBLE
-- On SLASH reduce production type_spec -> DOUBLE
-- On SEMICOLON reduce production type_spec -> DOUBLE
-- On RSQUARE reduce production type_spec -> DOUBLE
-- On RPAR reduce production type_spec -> DOUBLE
-- On RETURNS reduce production type_spec -> DOUBLE
-- On REQUIRES reduce production type_spec -> DOUBLE
-- On READS reduce production type_spec -> DOUBLE
-- On RBRACE reduce production type_spec -> DOUBLE
-- On QUESTION reduce production type_spec -> DOUBLE
-- On PLUS reduce production type_spec -> DOUBLE
-- On PIPE reduce production type_spec -> DOUBLE
-- On PERCENT reduce production type_spec -> DOUBLE
-- On OR reduce production type_spec -> DOUBLE
-- On NE reduce production type_spec -> DOUBLE
-- On MINUS reduce production type_spec -> DOUBLE
-- On LTLT reduce production type_spec -> DOUBLE
-- On LTCOLON reduce production type_spec -> DOUBLE
-- On LT reduce production type_spec -> DOUBLE
-- On LSQUARE reduce production type_spec -> DOUBLE
-- On LPAR reduce production type_spec -> DOUBLE
-- On LE reduce production type_spec -> DOUBLE
-- On LBRACE reduce production type_spec -> DOUBLE
-- On IMPLIES reduce production type_spec -> DOUBLE
-- On IFF reduce production type_spec -> DOUBLE
-- On IDENTIFIER reduce production type_spec -> DOUBLE
-- On HATHAT reduce production type_spec -> DOUBLE
-- On HAT reduce production type_spec -> DOUBLE
-- On GTGT reduce production type_spec -> DOUBLE
-- On GT reduce production type_spec -> DOUBLE
-- On GE reduce production type_spec -> DOUBLE
-- On FROM reduce production type_spec -> DOUBLE
-- On FREES reduce production type_spec -> DOUBLE
-- On FOR reduce production type_spec -> DOUBLE
-- On EXITS reduce production type_spec -> DOUBLE
-- On EQUAL reduce production type_spec -> DOUBLE
-- On EQ reduce production type_spec -> DOUBLE
-- On EOF reduce production type_spec -> DOUBLE
-- On ENSURES reduce production type_spec -> DOUBLE
-- On DOTDOT reduce production type_spec -> DOUBLE
-- On DOT reduce production type_spec -> DOUBLE
-- On DISJOINT reduce production type_spec -> DOUBLE
-- On DECREASES reduce production type_spec -> DOUBLE
-- On CONTINUES reduce production type_spec -> DOUBLE
-- On COMPLETE reduce production type_spec -> DOUBLE
-- On COMMA reduce production type_spec -> DOUBLE
-- On COLONGT reduce production type_spec -> DOUBLE
-- On COLON2 reduce production type_spec -> DOUBLE
-- On BREAKS reduce production type_spec -> DOUBLE
-- On BIMPLIES reduce production type_spec -> DOUBLE
-- On BIFF reduce production type_spec -> DOUBLE
-- On BEHAVIOR reduce production type_spec -> DOUBLE
-- On ASSUMES reduce production type_spec -> DOUBLE
-- On ASSIGNS reduce production type_spec -> DOUBLE
-- On ARROW reduce production type_spec -> DOUBLE
-- On AND reduce production type_spec -> DOUBLE
-- On AMP reduce production type_spec -> DOUBLE
-- On ALLOCATES reduce production type_spec -> DOUBLE

State 154:
## Known stack suffix:
## CHAR
## LR(1) items:
type_spec -> CHAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> CHAR
-- On WITH reduce production type_spec -> CHAR
-- On STAR reduce production type_spec -> CHAR
-- On SLASH reduce production type_spec -> CHAR
-- On SEMICOLON reduce production type_spec -> CHAR
-- On RSQUARE reduce production type_spec -> CHAR
-- On RPAR reduce production type_spec -> CHAR
-- On RETURNS reduce production type_spec -> CHAR
-- On REQUIRES reduce production type_spec -> CHAR
-- On READS reduce production type_spec -> CHAR
-- On RBRACE reduce production type_spec -> CHAR
-- On QUESTION reduce production type_spec -> CHAR
-- On PLUS reduce production type_spec -> CHAR
-- On PIPE reduce production type_spec -> CHAR
-- On PERCENT reduce production type_spec -> CHAR
-- On OR reduce production type_spec -> CHAR
-- On NE reduce production type_spec -> CHAR
-- On MINUS reduce production type_spec -> CHAR
-- On LTLT reduce production type_spec -> CHAR
-- On LTCOLON reduce production type_spec -> CHAR
-- On LT reduce production type_spec -> CHAR
-- On LSQUARE reduce production type_spec -> CHAR
-- On LPAR reduce production type_spec -> CHAR
-- On LE reduce production type_spec -> CHAR
-- On LBRACE reduce production type_spec -> CHAR
-- On IMPLIES reduce production type_spec -> CHAR
-- On IFF reduce production type_spec -> CHAR
-- On IDENTIFIER reduce production type_spec -> CHAR
-- On HATHAT reduce production type_spec -> CHAR
-- On HAT reduce production type_spec -> CHAR
-- On GTGT reduce production type_spec -> CHAR
-- On GT reduce production type_spec -> CHAR
-- On GE reduce production type_spec -> CHAR
-- On FROM reduce production type_spec -> CHAR
-- On FREES reduce production type_spec -> CHAR
-- On FOR reduce production type_spec -> CHAR
-- On EXITS reduce production type_spec -> CHAR
-- On EQUAL reduce production type_spec -> CHAR
-- On EQ reduce production type_spec -> CHAR
-- On EOF reduce production type_spec -> CHAR
-- On ENSURES reduce production type_spec -> CHAR
-- On DOTDOT reduce production type_spec -> CHAR
-- On DOT reduce production type_spec -> CHAR
-- On DISJOINT reduce production type_spec -> CHAR
-- On DECREASES reduce production type_spec -> CHAR
-- On CONTINUES reduce production type_spec -> CHAR
-- On COMPLETE reduce production type_spec -> CHAR
-- On COMMA reduce production type_spec -> CHAR
-- On COLONGT reduce production type_spec -> CHAR
-- On COLON2 reduce production type_spec -> CHAR
-- On BREAKS reduce production type_spec -> CHAR
-- On BIMPLIES reduce production type_spec -> CHAR
-- On BIFF reduce production type_spec -> CHAR
-- On BEHAVIOR reduce production type_spec -> CHAR
-- On ASSUMES reduce production type_spec -> CHAR
-- On ASSIGNS reduce production type_spec -> CHAR
-- On ARROW reduce production type_spec -> CHAR
-- On AND reduce production type_spec -> CHAR
-- On AMP reduce production type_spec -> CHAR
-- On ALLOCATES reduce production type_spec -> CHAR

State 155:
## Known stack suffix:
## BOOLEAN
## LR(1) items:
type_spec -> BOOLEAN . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> BOOLEAN
-- On WITH reduce production type_spec -> BOOLEAN
-- On STAR reduce production type_spec -> BOOLEAN
-- On SLASH reduce production type_spec -> BOOLEAN
-- On SEMICOLON reduce production type_spec -> BOOLEAN
-- On RSQUARE reduce production type_spec -> BOOLEAN
-- On RPAR reduce production type_spec -> BOOLEAN
-- On RETURNS reduce production type_spec -> BOOLEAN
-- On REQUIRES reduce production type_spec -> BOOLEAN
-- On READS reduce production type_spec -> BOOLEAN
-- On RBRACE reduce production type_spec -> BOOLEAN
-- On QUESTION reduce production type_spec -> BOOLEAN
-- On PLUS reduce production type_spec -> BOOLEAN
-- On PIPE reduce production type_spec -> BOOLEAN
-- On PERCENT reduce production type_spec -> BOOLEAN
-- On OR reduce production type_spec -> BOOLEAN
-- On NE reduce production type_spec -> BOOLEAN
-- On MINUS reduce production type_spec -> BOOLEAN
-- On LTLT reduce production type_spec -> BOOLEAN
-- On LTCOLON reduce production type_spec -> BOOLEAN
-- On LT reduce production type_spec -> BOOLEAN
-- On LSQUARE reduce production type_spec -> BOOLEAN
-- On LPAR reduce production type_spec -> BOOLEAN
-- On LE reduce production type_spec -> BOOLEAN
-- On LBRACE reduce production type_spec -> BOOLEAN
-- On IMPLIES reduce production type_spec -> BOOLEAN
-- On IFF reduce production type_spec -> BOOLEAN
-- On IDENTIFIER reduce production type_spec -> BOOLEAN
-- On HATHAT reduce production type_spec -> BOOLEAN
-- On HAT reduce production type_spec -> BOOLEAN
-- On GTGT reduce production type_spec -> BOOLEAN
-- On GT reduce production type_spec -> BOOLEAN
-- On GE reduce production type_spec -> BOOLEAN
-- On FROM reduce production type_spec -> BOOLEAN
-- On FREES reduce production type_spec -> BOOLEAN
-- On FOR reduce production type_spec -> BOOLEAN
-- On EXITS reduce production type_spec -> BOOLEAN
-- On EQUAL reduce production type_spec -> BOOLEAN
-- On EQ reduce production type_spec -> BOOLEAN
-- On EOF reduce production type_spec -> BOOLEAN
-- On ENSURES reduce production type_spec -> BOOLEAN
-- On DOTDOT reduce production type_spec -> BOOLEAN
-- On DOT reduce production type_spec -> BOOLEAN
-- On DISJOINT reduce production type_spec -> BOOLEAN
-- On DECREASES reduce production type_spec -> BOOLEAN
-- On CONTINUES reduce production type_spec -> BOOLEAN
-- On COMPLETE reduce production type_spec -> BOOLEAN
-- On COMMA reduce production type_spec -> BOOLEAN
-- On COLONGT reduce production type_spec -> BOOLEAN
-- On COLON2 reduce production type_spec -> BOOLEAN
-- On BREAKS reduce production type_spec -> BOOLEAN
-- On BIMPLIES reduce production type_spec -> BOOLEAN
-- On BIFF reduce production type_spec -> BOOLEAN
-- On BEHAVIOR reduce production type_spec -> BOOLEAN
-- On ASSUMES reduce production type_spec -> BOOLEAN
-- On ASSIGNS reduce production type_spec -> BOOLEAN
-- On ARROW reduce production type_spec -> BOOLEAN
-- On AND reduce production type_spec -> BOOLEAN
-- On AMP reduce production type_spec -> BOOLEAN
-- On ALLOCATES reduce production type_spec -> BOOLEAN

State 156:
## Known stack suffix:
## BOOL
## LR(1) items:
type_spec -> BOOL . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> BOOL
-- On WITH reduce production type_spec -> BOOL
-- On STAR reduce production type_spec -> BOOL
-- On SLASH reduce production type_spec -> BOOL
-- On SEMICOLON reduce production type_spec -> BOOL
-- On RSQUARE reduce production type_spec -> BOOL
-- On RPAR reduce production type_spec -> BOOL
-- On RETURNS reduce production type_spec -> BOOL
-- On REQUIRES reduce production type_spec -> BOOL
-- On READS reduce production type_spec -> BOOL
-- On RBRACE reduce production type_spec -> BOOL
-- On QUESTION reduce production type_spec -> BOOL
-- On PLUS reduce production type_spec -> BOOL
-- On PIPE reduce production type_spec -> BOOL
-- On PERCENT reduce production type_spec -> BOOL
-- On OR reduce production type_spec -> BOOL
-- On NE reduce production type_spec -> BOOL
-- On MINUS reduce production type_spec -> BOOL
-- On LTLT reduce production type_spec -> BOOL
-- On LTCOLON reduce production type_spec -> BOOL
-- On LT reduce production type_spec -> BOOL
-- On LSQUARE reduce production type_spec -> BOOL
-- On LPAR reduce production type_spec -> BOOL
-- On LE reduce production type_spec -> BOOL
-- On LBRACE reduce production type_spec -> BOOL
-- On IMPLIES reduce production type_spec -> BOOL
-- On IFF reduce production type_spec -> BOOL
-- On IDENTIFIER reduce production type_spec -> BOOL
-- On HATHAT reduce production type_spec -> BOOL
-- On HAT reduce production type_spec -> BOOL
-- On GTGT reduce production type_spec -> BOOL
-- On GT reduce production type_spec -> BOOL
-- On GE reduce production type_spec -> BOOL
-- On FROM reduce production type_spec -> BOOL
-- On FREES reduce production type_spec -> BOOL
-- On FOR reduce production type_spec -> BOOL
-- On EXITS reduce production type_spec -> BOOL
-- On EQUAL reduce production type_spec -> BOOL
-- On EQ reduce production type_spec -> BOOL
-- On EOF reduce production type_spec -> BOOL
-- On ENSURES reduce production type_spec -> BOOL
-- On DOTDOT reduce production type_spec -> BOOL
-- On DOT reduce production type_spec -> BOOL
-- On DISJOINT reduce production type_spec -> BOOL
-- On DECREASES reduce production type_spec -> BOOL
-- On CONTINUES reduce production type_spec -> BOOL
-- On COMPLETE reduce production type_spec -> BOOL
-- On COMMA reduce production type_spec -> BOOL
-- On COLONGT reduce production type_spec -> BOOL
-- On COLON2 reduce production type_spec -> BOOL
-- On BREAKS reduce production type_spec -> BOOL
-- On BIMPLIES reduce production type_spec -> BOOL
-- On BIFF reduce production type_spec -> BOOL
-- On BEHAVIOR reduce production type_spec -> BOOL
-- On ASSUMES reduce production type_spec -> BOOL
-- On ASSIGNS reduce production type_spec -> BOOL
-- On ARROW reduce production type_spec -> BOOL
-- On AND reduce production type_spec -> BOOL
-- On AMP reduce production type_spec -> BOOL
-- On ALLOCATES reduce production type_spec -> BOOL

State 157:
## Known stack suffix:
## type_spec
## LR(1) items:
logic_type -> type_spec . abs_spec_option [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On STAR shift to state 158
-- On LSQUARE shift to state 159
-- On LPAR shift to state 166
-- On tabs shift to state 167
-- On stars shift to state 168
-- On abs_spec_option shift to state 186
-- On abs_spec_bis shift to state 182
-- On abs_spec shift to state 187
## Reductions:
-- On WRITES reduce production abs_spec_option ->
-- On WITH reduce production abs_spec_option ->
-- On SLASH reduce production abs_spec_option ->
-- On SEMICOLON reduce production abs_spec_option ->
-- On RSQUARE reduce production abs_spec_option ->
-- On RPAR reduce production abs_spec_option ->
-- On RETURNS reduce production abs_spec_option ->
-- On REQUIRES reduce production abs_spec_option ->
-- On READS reduce production abs_spec_option ->
-- On RBRACE reduce production abs_spec_option ->
-- On QUESTION reduce production abs_spec_option ->
-- On PLUS reduce production abs_spec_option ->
-- On PIPE reduce production abs_spec_option ->
-- On PERCENT reduce production abs_spec_option ->
-- On OR reduce production abs_spec_option ->
-- On NE reduce production abs_spec_option ->
-- On MINUS reduce production abs_spec_option ->
-- On LTLT reduce production abs_spec_option ->
-- On LTCOLON reduce production abs_spec_option ->
-- On LT reduce production abs_spec_option ->
-- On LE reduce production abs_spec_option ->
-- On IMPLIES reduce production abs_spec_option ->
-- On IFF reduce production abs_spec_option ->
-- On IDENTIFIER reduce production abs_spec_option ->
-- On HATHAT reduce production abs_spec_option ->
-- On HAT reduce production abs_spec_option ->
-- On GTGT reduce production abs_spec_option ->
-- On GT reduce production abs_spec_option ->
-- On GE reduce production abs_spec_option ->
-- On FROM reduce production abs_spec_option ->
-- On FREES reduce production abs_spec_option ->
-- On FOR reduce production abs_spec_option ->
-- On EXITS reduce production abs_spec_option ->
-- On EQUAL reduce production abs_spec_option ->
-- On EQ reduce production abs_spec_option ->
-- On EOF reduce production abs_spec_option ->
-- On ENSURES reduce production abs_spec_option ->
-- On DOTDOT reduce production abs_spec_option ->
-- On DOT reduce production abs_spec_option ->
-- On DISJOINT reduce production abs_spec_option ->
-- On DECREASES reduce production abs_spec_option ->
-- On CONTINUES reduce production abs_spec_option ->
-- On COMPLETE reduce production abs_spec_option ->
-- On COMMA reduce production abs_spec_option ->
-- On COLONGT reduce production abs_spec_option ->
-- On COLON2 reduce production abs_spec_option ->
-- On BREAKS reduce production abs_spec_option ->
-- On BIMPLIES reduce production abs_spec_option ->
-- On BIFF reduce production abs_spec_option ->
-- On BEHAVIOR reduce production abs_spec_option ->
-- On ASSUMES reduce production abs_spec_option ->
-- On ASSIGNS reduce production abs_spec_option ->
-- On ARROW reduce production abs_spec_option ->
-- On AND reduce production abs_spec_option ->
-- On AMP reduce production abs_spec_option ->
-- On ALLOCATES reduce production abs_spec_option ->

State 158:
## Known stack suffix:
## STAR
## LR(1) items:
stars -> STAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production stars -> STAR
-- On WITH reduce production stars -> STAR
-- On STAR reduce production stars -> STAR
-- On SLASH reduce production stars -> STAR
-- On SEMICOLON reduce production stars -> STAR
-- On RSQUARE reduce production stars -> STAR
-- On RPAR reduce production stars -> STAR
-- On RETURNS reduce production stars -> STAR
-- On REQUIRES reduce production stars -> STAR
-- On READS reduce production stars -> STAR
-- On RBRACE reduce production stars -> STAR
-- On QUESTION reduce production stars -> STAR
-- On PLUS reduce production stars -> STAR
-- On PIPE reduce production stars -> STAR
-- On PERCENT reduce production stars -> STAR
-- On OR reduce production stars -> STAR
-- On NE reduce production stars -> STAR
-- On MINUS reduce production stars -> STAR
-- On LTLT reduce production stars -> STAR
-- On LTCOLON reduce production stars -> STAR
-- On LT reduce production stars -> STAR
-- On LSQUARE reduce production stars -> STAR
-- On LPAR reduce production stars -> STAR
-- On LE reduce production stars -> STAR
-- On IMPLIES reduce production stars -> STAR
-- On IFF reduce production stars -> STAR
-- On IDENTIFIER reduce production stars -> STAR
-- On HATHAT reduce production stars -> STAR
-- On HAT reduce production stars -> STAR
-- On GTGT reduce production stars -> STAR
-- On GT reduce production stars -> STAR
-- On GE reduce production stars -> STAR
-- On FROM reduce production stars -> STAR
-- On FREES reduce production stars -> STAR
-- On FOR reduce production stars -> STAR
-- On EXITS reduce production stars -> STAR
-- On EQUAL reduce production stars -> STAR
-- On EQ reduce production stars -> STAR
-- On EOF reduce production stars -> STAR
-- On ENSURES reduce production stars -> STAR
-- On DOTDOT reduce production stars -> STAR
-- On DOT reduce production stars -> STAR
-- On DISJOINT reduce production stars -> STAR
-- On DECREASES reduce production stars -> STAR
-- On CONTINUES reduce production stars -> STAR
-- On COMPLETE reduce production stars -> STAR
-- On COMMA reduce production stars -> STAR
-- On COLONGT reduce production stars -> STAR
-- On COLON2 reduce production stars -> STAR
-- On BREAKS reduce production stars -> STAR
-- On BIMPLIES reduce production stars -> STAR
-- On BIFF reduce production stars -> STAR
-- On BEHAVIOR reduce production stars -> STAR
-- On ASSUMES reduce production stars -> STAR
-- On ASSIGNS reduce production stars -> STAR
-- On ARROW reduce production stars -> STAR
-- On AND reduce production stars -> STAR
-- On AMP reduce production stars -> STAR
-- On ALLOCATES reduce production stars -> STAR

State 159:
## Known stack suffix:
## LSQUARE
## LR(1) items:
tabs -> LSQUARE . constant_option RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
tabs -> LSQUARE . constant_option RSQUARE tabs [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On constant_option shift to state 162
-- On constant shift to state 165
## Reductions:
-- On RSQUARE reduce production constant_option ->

State 160:
## Known stack suffix:
## CONSTANT10
## LR(1) items:
constant -> CONSTANT10 . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production constant -> CONSTANT10
-- On WITH reduce production constant -> CONSTANT10
-- On STAR reduce production constant -> CONSTANT10
-- On SLASH reduce production constant -> CONSTANT10
-- On SEMICOLON reduce production constant -> CONSTANT10
-- On RSQUARE reduce production constant -> CONSTANT10
-- On RPAR reduce production constant -> CONSTANT10
-- On RETURNS reduce production constant -> CONSTANT10
-- On REQUIRES reduce production constant -> CONSTANT10
-- On READS reduce production constant -> CONSTANT10
-- On RBRACE reduce production constant -> CONSTANT10
-- On QUESTION reduce production constant -> CONSTANT10
-- On PLUS reduce production constant -> CONSTANT10
-- On PIPE reduce production constant -> CONSTANT10
-- On PERCENT reduce production constant -> CONSTANT10
-- On OR reduce production constant -> CONSTANT10
-- On NE reduce production constant -> CONSTANT10
-- On MINUS reduce production constant -> CONSTANT10
-- On LTLT reduce production constant -> CONSTANT10
-- On LTCOLON reduce production constant -> CONSTANT10
-- On LT reduce production constant -> CONSTANT10
-- On LSQUARE reduce production constant -> CONSTANT10
-- On LE reduce production constant -> CONSTANT10
-- On IMPLIES reduce production constant -> CONSTANT10
-- On IFF reduce production constant -> CONSTANT10
-- On IDENTIFIER reduce production constant -> CONSTANT10
-- On HATHAT reduce production constant -> CONSTANT10
-- On HAT reduce production constant -> CONSTANT10
-- On GTGT reduce production constant -> CONSTANT10
-- On GT reduce production constant -> CONSTANT10
-- On GE reduce production constant -> CONSTANT10
-- On FROM reduce production constant -> CONSTANT10
-- On FREES reduce production constant -> CONSTANT10
-- On FOR reduce production constant -> CONSTANT10
-- On EXITS reduce production constant -> CONSTANT10
-- On EQUAL reduce production constant -> CONSTANT10
-- On EQ reduce production constant -> CONSTANT10
-- On EOF reduce production constant -> CONSTANT10
-- On ENSURES reduce production constant -> CONSTANT10
-- On DOTDOT reduce production constant -> CONSTANT10
-- On DOT reduce production constant -> CONSTANT10
-- On DISJOINT reduce production constant -> CONSTANT10
-- On DECREASES reduce production constant -> CONSTANT10
-- On CONTINUES reduce production constant -> CONSTANT10
-- On COMPLETE reduce production constant -> CONSTANT10
-- On COMMA reduce production constant -> CONSTANT10
-- On COLONGT reduce production constant -> CONSTANT10
-- On COLON2 reduce production constant -> CONSTANT10
-- On BREAKS reduce production constant -> CONSTANT10
-- On BIMPLIES reduce production constant -> CONSTANT10
-- On BIFF reduce production constant -> CONSTANT10
-- On BEHAVIOR reduce production constant -> CONSTANT10
-- On ASSUMES reduce production constant -> CONSTANT10
-- On ASSIGNS reduce production constant -> CONSTANT10
-- On ARROW reduce production constant -> CONSTANT10
-- On AND reduce production constant -> CONSTANT10
-- On AMP reduce production constant -> CONSTANT10
-- On ALLOCATES reduce production constant -> CONSTANT10

State 161:
## Known stack suffix:
## CONSTANT
## LR(1) items:
constant -> CONSTANT . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production constant -> CONSTANT
-- On WITH reduce production constant -> CONSTANT
-- On STAR reduce production constant -> CONSTANT
-- On SLASH reduce production constant -> CONSTANT
-- On SEMICOLON reduce production constant -> CONSTANT
-- On RSQUARE reduce production constant -> CONSTANT
-- On RPAR reduce production constant -> CONSTANT
-- On RETURNS reduce production constant -> CONSTANT
-- On REQUIRES reduce production constant -> CONSTANT
-- On READS reduce production constant -> CONSTANT
-- On RBRACE reduce production constant -> CONSTANT
-- On QUESTION reduce production constant -> CONSTANT
-- On PLUS reduce production constant -> CONSTANT
-- On PIPE reduce production constant -> CONSTANT
-- On PERCENT reduce production constant -> CONSTANT
-- On OR reduce production constant -> CONSTANT
-- On NE reduce production constant -> CONSTANT
-- On MINUS reduce production constant -> CONSTANT
-- On LTLT reduce production constant -> CONSTANT
-- On LTCOLON reduce production constant -> CONSTANT
-- On LT reduce production constant -> CONSTANT
-- On LSQUARE reduce production constant -> CONSTANT
-- On LE reduce production constant -> CONSTANT
-- On IMPLIES reduce production constant -> CONSTANT
-- On IFF reduce production constant -> CONSTANT
-- On IDENTIFIER reduce production constant -> CONSTANT
-- On HATHAT reduce production constant -> CONSTANT
-- On HAT reduce production constant -> CONSTANT
-- On GTGT reduce production constant -> CONSTANT
-- On GT reduce production constant -> CONSTANT
-- On GE reduce production constant -> CONSTANT
-- On FROM reduce production constant -> CONSTANT
-- On FREES reduce production constant -> CONSTANT
-- On FOR reduce production constant -> CONSTANT
-- On EXITS reduce production constant -> CONSTANT
-- On EQUAL reduce production constant -> CONSTANT
-- On EQ reduce production constant -> CONSTANT
-- On EOF reduce production constant -> CONSTANT
-- On ENSURES reduce production constant -> CONSTANT
-- On DOTDOT reduce production constant -> CONSTANT
-- On DOT reduce production constant -> CONSTANT
-- On DISJOINT reduce production constant -> CONSTANT
-- On DECREASES reduce production constant -> CONSTANT
-- On CONTINUES reduce production constant -> CONSTANT
-- On COMPLETE reduce production constant -> CONSTANT
-- On COMMA reduce production constant -> CONSTANT
-- On COLONGT reduce production constant -> CONSTANT
-- On COLON2 reduce production constant -> CONSTANT
-- On BREAKS reduce production constant -> CONSTANT
-- On BIMPLIES reduce production constant -> CONSTANT
-- On BIFF reduce production constant -> CONSTANT
-- On BEHAVIOR reduce production constant -> CONSTANT
-- On ASSUMES reduce production constant -> CONSTANT
-- On ASSIGNS reduce production constant -> CONSTANT
-- On ARROW reduce production constant -> CONSTANT
-- On AND reduce production constant -> CONSTANT
-- On AMP reduce production constant -> CONSTANT
-- On ALLOCATES reduce production constant -> CONSTANT

State 162:
## Known stack suffix:
## LSQUARE constant_option
## LR(1) items:
tabs -> LSQUARE constant_option . RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
tabs -> LSQUARE constant_option . RSQUARE tabs [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RSQUARE shift to state 163
## Reductions:

State 163:
## Known stack suffix:
## LSQUARE constant_option RSQUARE
## LR(1) items:
tabs -> LSQUARE constant_option RSQUARE . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
tabs -> LSQUARE constant_option RSQUARE . tabs [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LSQUARE shift to state 159
-- On tabs shift to state 164
## Reductions:
-- On WRITES reduce production tabs -> LSQUARE constant_option RSQUARE
-- On WITH reduce production tabs -> LSQUARE constant_option RSQUARE
-- On STAR reduce production tabs -> LSQUARE constant_option RSQUARE
-- On SLASH reduce production tabs -> LSQUARE constant_option RSQUARE
-- On SEMICOLON reduce production tabs -> LSQUARE constant_option RSQUARE
-- On RSQUARE reduce production tabs -> LSQUARE constant_option RSQUARE
-- On RPAR reduce production tabs -> LSQUARE constant_option RSQUARE
-- On RETURNS reduce production tabs -> LSQUARE constant_option RSQUARE
-- On REQUIRES reduce production tabs -> LSQUARE constant_option RSQUARE
-- On READS reduce production tabs -> LSQUARE constant_option RSQUARE
-- On RBRACE reduce production tabs -> LSQUARE constant_option RSQUARE
-- On QUESTION reduce production tabs -> LSQUARE constant_option RSQUARE
-- On PLUS reduce production tabs -> LSQUARE constant_option RSQUARE
-- On PIPE reduce production tabs -> LSQUARE constant_option RSQUARE
-- On PERCENT reduce production tabs -> LSQUARE constant_option RSQUARE
-- On OR reduce production tabs -> LSQUARE constant_option RSQUARE
-- On NE reduce production tabs -> LSQUARE constant_option RSQUARE
-- On MINUS reduce production tabs -> LSQUARE constant_option RSQUARE
-- On LTLT reduce production tabs -> LSQUARE constant_option RSQUARE
-- On LTCOLON reduce production tabs -> LSQUARE constant_option RSQUARE
-- On LT reduce production tabs -> LSQUARE constant_option RSQUARE
-- On LE reduce production tabs -> LSQUARE constant_option RSQUARE
-- On IMPLIES reduce production tabs -> LSQUARE constant_option RSQUARE
-- On IFF reduce production tabs -> LSQUARE constant_option RSQUARE
-- On IDENTIFIER reduce production tabs -> LSQUARE constant_option RSQUARE
-- On HATHAT reduce production tabs -> LSQUARE constant_option RSQUARE
-- On HAT reduce production tabs -> LSQUARE constant_option RSQUARE
-- On GTGT reduce production tabs -> LSQUARE constant_option RSQUARE
-- On GT reduce production tabs -> LSQUARE constant_option RSQUARE
-- On GE reduce production tabs -> LSQUARE constant_option RSQUARE
-- On FROM reduce production tabs -> LSQUARE constant_option RSQUARE
-- On FREES reduce production tabs -> LSQUARE constant_option RSQUARE
-- On FOR reduce production tabs -> LSQUARE constant_option RSQUARE
-- On EXITS reduce production tabs -> LSQUARE constant_option RSQUARE
-- On EQUAL reduce production tabs -> LSQUARE constant_option RSQUARE
-- On EQ reduce production tabs -> LSQUARE constant_option RSQUARE
-- On EOF reduce production tabs -> LSQUARE constant_option RSQUARE
-- On ENSURES reduce production tabs -> LSQUARE constant_option RSQUARE
-- On DOTDOT reduce production tabs -> LSQUARE constant_option RSQUARE
-- On DOT reduce production tabs -> LSQUARE constant_option RSQUARE
-- On DISJOINT reduce production tabs -> LSQUARE constant_option RSQUARE
-- On DECREASES reduce production tabs -> LSQUARE constant_option RSQUARE
-- On CONTINUES reduce production tabs -> LSQUARE constant_option RSQUARE
-- On COMPLETE reduce production tabs -> LSQUARE constant_option RSQUARE
-- On COMMA reduce production tabs -> LSQUARE constant_option RSQUARE
-- On COLONGT reduce production tabs -> LSQUARE constant_option RSQUARE
-- On COLON2 reduce production tabs -> LSQUARE constant_option RSQUARE
-- On BREAKS reduce production tabs -> LSQUARE constant_option RSQUARE
-- On BIMPLIES reduce production tabs -> LSQUARE constant_option RSQUARE
-- On BIFF reduce production tabs -> LSQUARE constant_option RSQUARE
-- On BEHAVIOR reduce production tabs -> LSQUARE constant_option RSQUARE
-- On ASSUMES reduce production tabs -> LSQUARE constant_option RSQUARE
-- On ASSIGNS reduce production tabs -> LSQUARE constant_option RSQUARE
-- On ARROW reduce production tabs -> LSQUARE constant_option RSQUARE
-- On AND reduce production tabs -> LSQUARE constant_option RSQUARE
-- On AMP reduce production tabs -> LSQUARE constant_option RSQUARE
-- On ALLOCATES reduce production tabs -> LSQUARE constant_option RSQUARE

State 164:
## Known stack suffix:
## LSQUARE constant_option RSQUARE tabs
## LR(1) items:
tabs -> LSQUARE constant_option RSQUARE tabs . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On WITH reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On STAR reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On SLASH reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On SEMICOLON reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On RSQUARE reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On RPAR reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On RETURNS reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On REQUIRES reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On READS reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On RBRACE reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On QUESTION reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On PLUS reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On PIPE reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On PERCENT reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On OR reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On NE reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On MINUS reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On LTLT reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On LTCOLON reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On LT reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On LSQUARE reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On LE reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On IMPLIES reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On IFF reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On IDENTIFIER reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On HATHAT reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On HAT reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On GTGT reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On GT reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On GE reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On FROM reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On FREES reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On FOR reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On EXITS reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On EQUAL reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On EQ reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On EOF reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On ENSURES reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On DOTDOT reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On DOT reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On DISJOINT reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On DECREASES reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On CONTINUES reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On COMPLETE reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On COMMA reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On COLONGT reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On COLON2 reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On BREAKS reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On BIMPLIES reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On BIFF reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On BEHAVIOR reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On ASSUMES reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On ASSIGNS reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On ARROW reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On AND reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On AMP reduce production tabs -> LSQUARE constant_option RSQUARE tabs
-- On ALLOCATES reduce production tabs -> LSQUARE constant_option RSQUARE tabs

State 165:
## Known stack suffix:
## constant
## LR(1) items:
constant_option -> constant . [ RSQUARE ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production constant_option -> constant

State 166:
## Known stack suffix:
## LPAR
## LR(1) items:
abs_spec_bis -> LPAR . abs_spec RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On STAR shift to state 158
-- On LSQUARE shift to state 159
-- On LPAR shift to state 166
-- On tabs shift to state 167
-- On stars shift to state 168
-- On abs_spec_bis shift to state 182
-- On abs_spec shift to state 184
## Reductions:

State 167:
## Known stack suffix:
## tabs
## LR(1) items:
abs_spec -> tabs . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production abs_spec -> tabs
-- On WITH reduce production abs_spec -> tabs
-- On STAR reduce production abs_spec -> tabs
-- On SLASH reduce production abs_spec -> tabs
-- On SEMICOLON reduce production abs_spec -> tabs
-- On RSQUARE reduce production abs_spec -> tabs
-- On RPAR reduce production abs_spec -> tabs
-- On RETURNS reduce production abs_spec -> tabs
-- On REQUIRES reduce production abs_spec -> tabs
-- On READS reduce production abs_spec -> tabs
-- On RBRACE reduce production abs_spec -> tabs
-- On QUESTION reduce production abs_spec -> tabs
-- On PLUS reduce production abs_spec -> tabs
-- On PIPE reduce production abs_spec -> tabs
-- On PERCENT reduce production abs_spec -> tabs
-- On OR reduce production abs_spec -> tabs
-- On NE reduce production abs_spec -> tabs
-- On MINUS reduce production abs_spec -> tabs
-- On LTLT reduce production abs_spec -> tabs
-- On LTCOLON reduce production abs_spec -> tabs
-- On LT reduce production abs_spec -> tabs
-- On LSQUARE reduce production abs_spec -> tabs
-- On LE reduce production abs_spec -> tabs
-- On IMPLIES reduce production abs_spec -> tabs
-- On IFF reduce production abs_spec -> tabs
-- On IDENTIFIER reduce production abs_spec -> tabs
-- On HATHAT reduce production abs_spec -> tabs
-- On HAT reduce production abs_spec -> tabs
-- On GTGT reduce production abs_spec -> tabs
-- On GT reduce production abs_spec -> tabs
-- On GE reduce production abs_spec -> tabs
-- On FROM reduce production abs_spec -> tabs
-- On FREES reduce production abs_spec -> tabs
-- On FOR reduce production abs_spec -> tabs
-- On EXITS reduce production abs_spec -> tabs
-- On EQUAL reduce production abs_spec -> tabs
-- On EQ reduce production abs_spec -> tabs
-- On EOF reduce production abs_spec -> tabs
-- On ENSURES reduce production abs_spec -> tabs
-- On DOTDOT reduce production abs_spec -> tabs
-- On DOT reduce production abs_spec -> tabs
-- On DISJOINT reduce production abs_spec -> tabs
-- On DECREASES reduce production abs_spec -> tabs
-- On CONTINUES reduce production abs_spec -> tabs
-- On COMPLETE reduce production abs_spec -> tabs
-- On COMMA reduce production abs_spec -> tabs
-- On COLONGT reduce production abs_spec -> tabs
-- On COLON2 reduce production abs_spec -> tabs
-- On BREAKS reduce production abs_spec -> tabs
-- On BIMPLIES reduce production abs_spec -> tabs
-- On BIFF reduce production abs_spec -> tabs
-- On BEHAVIOR reduce production abs_spec -> tabs
-- On ASSUMES reduce production abs_spec -> tabs
-- On ASSIGNS reduce production abs_spec -> tabs
-- On ARROW reduce production abs_spec -> tabs
-- On AND reduce production abs_spec -> tabs
-- On AMP reduce production abs_spec -> tabs
-- On ALLOCATES reduce production abs_spec -> tabs

State 168:
## Known stack suffix:
## stars
## LR(1) items:
abs_spec -> stars . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
abs_spec -> stars . tabs [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
abs_spec -> stars . abs_spec_bis [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
abs_spec -> stars . abs_spec_bis tabs [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
stars -> stars . STAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On STAR shift to state 169
-- On LSQUARE shift to state 159
-- On LPAR shift to state 166
-- On tabs shift to state 170
-- On abs_spec_bis shift to state 171
## Reductions:
-- On WRITES reduce production abs_spec -> stars
-- On WITH reduce production abs_spec -> stars
-- On SLASH reduce production abs_spec -> stars
-- On SEMICOLON reduce production abs_spec -> stars
-- On RSQUARE reduce production abs_spec -> stars
-- On RPAR reduce production abs_spec -> stars
-- On RETURNS reduce production abs_spec -> stars
-- On REQUIRES reduce production abs_spec -> stars
-- On READS reduce production abs_spec -> stars
-- On RBRACE reduce production abs_spec -> stars
-- On QUESTION reduce production abs_spec -> stars
-- On PLUS reduce production abs_spec -> stars
-- On PIPE reduce production abs_spec -> stars
-- On PERCENT reduce production abs_spec -> stars
-- On OR reduce production abs_spec -> stars
-- On NE reduce production abs_spec -> stars
-- On MINUS reduce production abs_spec -> stars
-- On LTLT reduce production abs_spec -> stars
-- On LTCOLON reduce production abs_spec -> stars
-- On LT reduce production abs_spec -> stars
-- On LE reduce production abs_spec -> stars
-- On IMPLIES reduce production abs_spec -> stars
-- On IFF reduce production abs_spec -> stars
-- On IDENTIFIER reduce production abs_spec -> stars
-- On HATHAT reduce production abs_spec -> stars
-- On HAT reduce production abs_spec -> stars
-- On GTGT reduce production abs_spec -> stars
-- On GT reduce production abs_spec -> stars
-- On GE reduce production abs_spec -> stars
-- On FROM reduce production abs_spec -> stars
-- On FREES reduce production abs_spec -> stars
-- On FOR reduce production abs_spec -> stars
-- On EXITS reduce production abs_spec -> stars
-- On EQUAL reduce production abs_spec -> stars
-- On EQ reduce production abs_spec -> stars
-- On EOF reduce production abs_spec -> stars
-- On ENSURES reduce production abs_spec -> stars
-- On DOTDOT reduce production abs_spec -> stars
-- On DOT reduce production abs_spec -> stars
-- On DISJOINT reduce production abs_spec -> stars
-- On DECREASES reduce production abs_spec -> stars
-- On CONTINUES reduce production abs_spec -> stars
-- On COMPLETE reduce production abs_spec -> stars
-- On COMMA reduce production abs_spec -> stars
-- On COLONGT reduce production abs_spec -> stars
-- On COLON2 reduce production abs_spec -> stars
-- On BREAKS reduce production abs_spec -> stars
-- On BIMPLIES reduce production abs_spec -> stars
-- On BIFF reduce production abs_spec -> stars
-- On BEHAVIOR reduce production abs_spec -> stars
-- On ASSUMES reduce production abs_spec -> stars
-- On ASSIGNS reduce production abs_spec -> stars
-- On ARROW reduce production abs_spec -> stars
-- On AND reduce production abs_spec -> stars
-- On AMP reduce production abs_spec -> stars
-- On ALLOCATES reduce production abs_spec -> stars

State 169:
## Known stack suffix:
## stars STAR
## LR(1) items:
stars -> stars STAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production stars -> stars STAR
-- On WITH reduce production stars -> stars STAR
-- On STAR reduce production stars -> stars STAR
-- On SLASH reduce production stars -> stars STAR
-- On SEMICOLON reduce production stars -> stars STAR
-- On RSQUARE reduce production stars -> stars STAR
-- On RPAR reduce production stars -> stars STAR
-- On RETURNS reduce production stars -> stars STAR
-- On REQUIRES reduce production stars -> stars STAR
-- On READS reduce production stars -> stars STAR
-- On RBRACE reduce production stars -> stars STAR
-- On QUESTION reduce production stars -> stars STAR
-- On PLUS reduce production stars -> stars STAR
-- On PIPE reduce production stars -> stars STAR
-- On PERCENT reduce production stars -> stars STAR
-- On OR reduce production stars -> stars STAR
-- On NE reduce production stars -> stars STAR
-- On MINUS reduce production stars -> stars STAR
-- On LTLT reduce production stars -> stars STAR
-- On LTCOLON reduce production stars -> stars STAR
-- On LT reduce production stars -> stars STAR
-- On LSQUARE reduce production stars -> stars STAR
-- On LPAR reduce production stars -> stars STAR
-- On LE reduce production stars -> stars STAR
-- On IMPLIES reduce production stars -> stars STAR
-- On IFF reduce production stars -> stars STAR
-- On IDENTIFIER reduce production stars -> stars STAR
-- On HATHAT reduce production stars -> stars STAR
-- On HAT reduce production stars -> stars STAR
-- On GTGT reduce production stars -> stars STAR
-- On GT reduce production stars -> stars STAR
-- On GE reduce production stars -> stars STAR
-- On FROM reduce production stars -> stars STAR
-- On FREES reduce production stars -> stars STAR
-- On FOR reduce production stars -> stars STAR
-- On EXITS reduce production stars -> stars STAR
-- On EQUAL reduce production stars -> stars STAR
-- On EQ reduce production stars -> stars STAR
-- On EOF reduce production stars -> stars STAR
-- On ENSURES reduce production stars -> stars STAR
-- On DOTDOT reduce production stars -> stars STAR
-- On DOT reduce production stars -> stars STAR
-- On DISJOINT reduce production stars -> stars STAR
-- On DECREASES reduce production stars -> stars STAR
-- On CONTINUES reduce production stars -> stars STAR
-- On COMPLETE reduce production stars -> stars STAR
-- On COMMA reduce production stars -> stars STAR
-- On COLONGT reduce production stars -> stars STAR
-- On COLON2 reduce production stars -> stars STAR
-- On BREAKS reduce production stars -> stars STAR
-- On BIMPLIES reduce production stars -> stars STAR
-- On BIFF reduce production stars -> stars STAR
-- On BEHAVIOR reduce production stars -> stars STAR
-- On ASSUMES reduce production stars -> stars STAR
-- On ASSIGNS reduce production stars -> stars STAR
-- On ARROW reduce production stars -> stars STAR
-- On AND reduce production stars -> stars STAR
-- On AMP reduce production stars -> stars STAR
-- On ALLOCATES reduce production stars -> stars STAR

State 170:
## Known stack suffix:
## stars tabs
## LR(1) items:
abs_spec -> stars tabs . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production abs_spec -> stars tabs
-- On WITH reduce production abs_spec -> stars tabs
-- On STAR reduce production abs_spec -> stars tabs
-- On SLASH reduce production abs_spec -> stars tabs
-- On SEMICOLON reduce production abs_spec -> stars tabs
-- On RSQUARE reduce production abs_spec -> stars tabs
-- On RPAR reduce production abs_spec -> stars tabs
-- On RETURNS reduce production abs_spec -> stars tabs
-- On REQUIRES reduce production abs_spec -> stars tabs
-- On READS reduce production abs_spec -> stars tabs
-- On RBRACE reduce production abs_spec -> stars tabs
-- On QUESTION reduce production abs_spec -> stars tabs
-- On PLUS reduce production abs_spec -> stars tabs
-- On PIPE reduce production abs_spec -> stars tabs
-- On PERCENT reduce production abs_spec -> stars tabs
-- On OR reduce production abs_spec -> stars tabs
-- On NE reduce production abs_spec -> stars tabs
-- On MINUS reduce production abs_spec -> stars tabs
-- On LTLT reduce production abs_spec -> stars tabs
-- On LTCOLON reduce production abs_spec -> stars tabs
-- On LT reduce production abs_spec -> stars tabs
-- On LSQUARE reduce production abs_spec -> stars tabs
-- On LE reduce production abs_spec -> stars tabs
-- On IMPLIES reduce production abs_spec -> stars tabs
-- On IFF reduce production abs_spec -> stars tabs
-- On IDENTIFIER reduce production abs_spec -> stars tabs
-- On HATHAT reduce production abs_spec -> stars tabs
-- On HAT reduce production abs_spec -> stars tabs
-- On GTGT reduce production abs_spec -> stars tabs
-- On GT reduce production abs_spec -> stars tabs
-- On GE reduce production abs_spec -> stars tabs
-- On FROM reduce production abs_spec -> stars tabs
-- On FREES reduce production abs_spec -> stars tabs
-- On FOR reduce production abs_spec -> stars tabs
-- On EXITS reduce production abs_spec -> stars tabs
-- On EQUAL reduce production abs_spec -> stars tabs
-- On EQ reduce production abs_spec -> stars tabs
-- On EOF reduce production abs_spec -> stars tabs
-- On ENSURES reduce production abs_spec -> stars tabs
-- On DOTDOT reduce production abs_spec -> stars tabs
-- On DOT reduce production abs_spec -> stars tabs
-- On DISJOINT reduce production abs_spec -> stars tabs
-- On DECREASES reduce production abs_spec -> stars tabs
-- On CONTINUES reduce production abs_spec -> stars tabs
-- On COMPLETE reduce production abs_spec -> stars tabs
-- On COMMA reduce production abs_spec -> stars tabs
-- On COLONGT reduce production abs_spec -> stars tabs
-- On COLON2 reduce production abs_spec -> stars tabs
-- On BREAKS reduce production abs_spec -> stars tabs
-- On BIMPLIES reduce production abs_spec -> stars tabs
-- On BIFF reduce production abs_spec -> stars tabs
-- On BEHAVIOR reduce production abs_spec -> stars tabs
-- On ASSUMES reduce production abs_spec -> stars tabs
-- On ASSIGNS reduce production abs_spec -> stars tabs
-- On ARROW reduce production abs_spec -> stars tabs
-- On AND reduce production abs_spec -> stars tabs
-- On AMP reduce production abs_spec -> stars tabs
-- On ALLOCATES reduce production abs_spec -> stars tabs

State 171:
## Known stack suffix:
## stars abs_spec_bis
## LR(1) items:
abs_spec -> stars abs_spec_bis . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
abs_spec -> stars abs_spec_bis . tabs [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
abs_spec_bis -> abs_spec_bis . LPAR abs_param_type_list RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LSQUARE shift to state 159
-- On LPAR shift to state 172
-- On tabs shift to state 181
## Reductions:
-- On WRITES reduce production abs_spec -> stars abs_spec_bis
-- On WITH reduce production abs_spec -> stars abs_spec_bis
-- On STAR reduce production abs_spec -> stars abs_spec_bis
-- On SLASH reduce production abs_spec -> stars abs_spec_bis
-- On SEMICOLON reduce production abs_spec -> stars abs_spec_bis
-- On RSQUARE reduce production abs_spec -> stars abs_spec_bis
-- On RPAR reduce production abs_spec -> stars abs_spec_bis
-- On RETURNS reduce production abs_spec -> stars abs_spec_bis
-- On REQUIRES reduce production abs_spec -> stars abs_spec_bis
-- On READS reduce production abs_spec -> stars abs_spec_bis
-- On RBRACE reduce production abs_spec -> stars abs_spec_bis
-- On QUESTION reduce production abs_spec -> stars abs_spec_bis
-- On PLUS reduce production abs_spec -> stars abs_spec_bis
-- On PIPE reduce production abs_spec -> stars abs_spec_bis
-- On PERCENT reduce production abs_spec -> stars abs_spec_bis
-- On OR reduce production abs_spec -> stars abs_spec_bis
-- On NE reduce production abs_spec -> stars abs_spec_bis
-- On MINUS reduce production abs_spec -> stars abs_spec_bis
-- On LTLT reduce production abs_spec -> stars abs_spec_bis
-- On LTCOLON reduce production abs_spec -> stars abs_spec_bis
-- On LT reduce production abs_spec -> stars abs_spec_bis
-- On LE reduce production abs_spec -> stars abs_spec_bis
-- On IMPLIES reduce production abs_spec -> stars abs_spec_bis
-- On IFF reduce production abs_spec -> stars abs_spec_bis
-- On IDENTIFIER reduce production abs_spec -> stars abs_spec_bis
-- On HATHAT reduce production abs_spec -> stars abs_spec_bis
-- On HAT reduce production abs_spec -> stars abs_spec_bis
-- On GTGT reduce production abs_spec -> stars abs_spec_bis
-- On GT reduce production abs_spec -> stars abs_spec_bis
-- On GE reduce production abs_spec -> stars abs_spec_bis
-- On FROM reduce production abs_spec -> stars abs_spec_bis
-- On FREES reduce production abs_spec -> stars abs_spec_bis
-- On FOR reduce production abs_spec -> stars abs_spec_bis
-- On EXITS reduce production abs_spec -> stars abs_spec_bis
-- On EQUAL reduce production abs_spec -> stars abs_spec_bis
-- On EQ reduce production abs_spec -> stars abs_spec_bis
-- On EOF reduce production abs_spec -> stars abs_spec_bis
-- On ENSURES reduce production abs_spec -> stars abs_spec_bis
-- On DOTDOT reduce production abs_spec -> stars abs_spec_bis
-- On DOT reduce production abs_spec -> stars abs_spec_bis
-- On DISJOINT reduce production abs_spec -> stars abs_spec_bis
-- On DECREASES reduce production abs_spec -> stars abs_spec_bis
-- On CONTINUES reduce production abs_spec -> stars abs_spec_bis
-- On COMPLETE reduce production abs_spec -> stars abs_spec_bis
-- On COMMA reduce production abs_spec -> stars abs_spec_bis
-- On COLONGT reduce production abs_spec -> stars abs_spec_bis
-- On COLON2 reduce production abs_spec -> stars abs_spec_bis
-- On BREAKS reduce production abs_spec -> stars abs_spec_bis
-- On BIMPLIES reduce production abs_spec -> stars abs_spec_bis
-- On BIFF reduce production abs_spec -> stars abs_spec_bis
-- On BEHAVIOR reduce production abs_spec -> stars abs_spec_bis
-- On ASSUMES reduce production abs_spec -> stars abs_spec_bis
-- On ASSIGNS reduce production abs_spec -> stars abs_spec_bis
-- On ARROW reduce production abs_spec -> stars abs_spec_bis
-- On AND reduce production abs_spec -> stars abs_spec_bis
-- On AMP reduce production abs_spec -> stars abs_spec_bis
-- On ALLOCATES reduce production abs_spec -> stars abs_spec_bis

State 172:
## Known stack suffix:
## abs_spec_bis LPAR
## LR(1) items:
abs_spec_bis -> abs_spec_bis LPAR . abs_param_type_list RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 157
-- On logic_type shift to state 173
-- On abs_param_type_list shift to state 174
-- On abs_param_list shift to state 176
-- On abs_param shift to state 180
## Reductions:
-- On RPAR reduce production abs_param_type_list ->

State 173:
## Known stack suffix:
## logic_type
## LR(1) items:
abs_param -> logic_type . [ RPAR COMMA ]
## Transitions:
## Reductions:
-- On RPAR reduce production abs_param -> logic_type
-- On COMMA reduce production abs_param -> logic_type

State 174:
## Known stack suffix:
## abs_spec_bis LPAR abs_param_type_list
## LR(1) items:
abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 175
## Reductions:

State 175:
## Known stack suffix:
## abs_spec_bis LPAR abs_param_type_list RPAR
## LR(1) items:
abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On WITH reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On STAR reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On SLASH reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On SEMICOLON reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On RSQUARE reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On RPAR reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On RETURNS reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On REQUIRES reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On READS reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On RBRACE reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On QUESTION reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On PLUS reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On PIPE reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On PERCENT reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On OR reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On NE reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On MINUS reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On LTLT reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On LTCOLON reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On LT reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On LSQUARE reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On LPAR reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On LE reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On IMPLIES reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On IFF reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On IDENTIFIER reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On HATHAT reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On HAT reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On GTGT reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On GT reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On GE reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On FROM reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On FREES reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On FOR reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On EXITS reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On EQUAL reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On EQ reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On EOF reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On ENSURES reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On DOTDOT reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On DOT reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On DISJOINT reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On DECREASES reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On CONTINUES reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On COMPLETE reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On COMMA reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On COLONGT reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On COLON2 reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On BREAKS reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On BIMPLIES reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On BIFF reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On BEHAVIOR reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On ASSUMES reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On ASSIGNS reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On ARROW reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On AND reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On AMP reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR
-- On ALLOCATES reduce production abs_spec_bis -> abs_spec_bis LPAR abs_param_type_list RPAR

State 176:
## Known stack suffix:
## abs_param_list
## LR(1) items:
abs_param_list -> abs_param_list . COMMA abs_param [ RPAR COMMA ]
abs_param_type_list -> abs_param_list . [ RPAR ]
abs_param_type_list -> abs_param_list . COMMA DOTDOTDOT [ RPAR ]
## Transitions:
-- On COMMA shift to state 177
## Reductions:
-- On RPAR reduce production abs_param_type_list -> abs_param_list

State 177:
## Known stack suffix:
## abs_param_list COMMA
## LR(1) items:
abs_param_list -> abs_param_list COMMA . abs_param [ RPAR COMMA ]
abs_param_type_list -> abs_param_list COMMA . DOTDOTDOT [ RPAR ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On DOTDOTDOT shift to state 178
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 157
-- On logic_type shift to state 173
-- On abs_param shift to state 179
## Reductions:

State 178:
## Known stack suffix:
## abs_param_list COMMA DOTDOTDOT
## LR(1) items:
abs_param_type_list -> abs_param_list COMMA DOTDOTDOT . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR reduce production abs_param_type_list -> abs_param_list COMMA DOTDOTDOT

State 179:
## Known stack suffix:
## abs_param_list COMMA abs_param
## LR(1) items:
abs_param_list -> abs_param_list COMMA abs_param . [ RPAR COMMA ]
## Transitions:
## Reductions:
-- On RPAR reduce production abs_param_list -> abs_param_list COMMA abs_param
-- On COMMA reduce production abs_param_list -> abs_param_list COMMA abs_param

State 180:
## Known stack suffix:
## abs_param
## LR(1) items:
abs_param_list -> abs_param . [ RPAR COMMA ]
## Transitions:
## Reductions:
-- On RPAR reduce production abs_param_list -> abs_param
-- On COMMA reduce production abs_param_list -> abs_param

State 181:
## Known stack suffix:
## stars abs_spec_bis tabs
## LR(1) items:
abs_spec -> stars abs_spec_bis tabs . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production abs_spec -> stars abs_spec_bis tabs
-- On WITH reduce production abs_spec -> stars abs_spec_bis tabs
-- On STAR reduce production abs_spec -> stars abs_spec_bis tabs
-- On SLASH reduce production abs_spec -> stars abs_spec_bis tabs
-- On SEMICOLON reduce production abs_spec -> stars abs_spec_bis tabs
-- On RSQUARE reduce production abs_spec -> stars abs_spec_bis tabs
-- On RPAR reduce production abs_spec -> stars abs_spec_bis tabs
-- On RETURNS reduce production abs_spec -> stars abs_spec_bis tabs
-- On REQUIRES reduce production abs_spec -> stars abs_spec_bis tabs
-- On READS reduce production abs_spec -> stars abs_spec_bis tabs
-- On RBRACE reduce production abs_spec -> stars abs_spec_bis tabs
-- On QUESTION reduce production abs_spec -> stars abs_spec_bis tabs
-- On PLUS reduce production abs_spec -> stars abs_spec_bis tabs
-- On PIPE reduce production abs_spec -> stars abs_spec_bis tabs
-- On PERCENT reduce production abs_spec -> stars abs_spec_bis tabs
-- On OR reduce production abs_spec -> stars abs_spec_bis tabs
-- On NE reduce production abs_spec -> stars abs_spec_bis tabs
-- On MINUS reduce production abs_spec -> stars abs_spec_bis tabs
-- On LTLT reduce production abs_spec -> stars abs_spec_bis tabs
-- On LTCOLON reduce production abs_spec -> stars abs_spec_bis tabs
-- On LT reduce production abs_spec -> stars abs_spec_bis tabs
-- On LSQUARE reduce production abs_spec -> stars abs_spec_bis tabs
-- On LE reduce production abs_spec -> stars abs_spec_bis tabs
-- On IMPLIES reduce production abs_spec -> stars abs_spec_bis tabs
-- On IFF reduce production abs_spec -> stars abs_spec_bis tabs
-- On IDENTIFIER reduce production abs_spec -> stars abs_spec_bis tabs
-- On HATHAT reduce production abs_spec -> stars abs_spec_bis tabs
-- On HAT reduce production abs_spec -> stars abs_spec_bis tabs
-- On GTGT reduce production abs_spec -> stars abs_spec_bis tabs
-- On GT reduce production abs_spec -> stars abs_spec_bis tabs
-- On GE reduce production abs_spec -> stars abs_spec_bis tabs
-- On FROM reduce production abs_spec -> stars abs_spec_bis tabs
-- On FREES reduce production abs_spec -> stars abs_spec_bis tabs
-- On FOR reduce production abs_spec -> stars abs_spec_bis tabs
-- On EXITS reduce production abs_spec -> stars abs_spec_bis tabs
-- On EQUAL reduce production abs_spec -> stars abs_spec_bis tabs
-- On EQ reduce production abs_spec -> stars abs_spec_bis tabs
-- On EOF reduce production abs_spec -> stars abs_spec_bis tabs
-- On ENSURES reduce production abs_spec -> stars abs_spec_bis tabs
-- On DOTDOT reduce production abs_spec -> stars abs_spec_bis tabs
-- On DOT reduce production abs_spec -> stars abs_spec_bis tabs
-- On DISJOINT reduce production abs_spec -> stars abs_spec_bis tabs
-- On DECREASES reduce production abs_spec -> stars abs_spec_bis tabs
-- On CONTINUES reduce production abs_spec -> stars abs_spec_bis tabs
-- On COMPLETE reduce production abs_spec -> stars abs_spec_bis tabs
-- On COMMA reduce production abs_spec -> stars abs_spec_bis tabs
-- On COLONGT reduce production abs_spec -> stars abs_spec_bis tabs
-- On COLON2 reduce production abs_spec -> stars abs_spec_bis tabs
-- On BREAKS reduce production abs_spec -> stars abs_spec_bis tabs
-- On BIMPLIES reduce production abs_spec -> stars abs_spec_bis tabs
-- On BIFF reduce production abs_spec -> stars abs_spec_bis tabs
-- On BEHAVIOR reduce production abs_spec -> stars abs_spec_bis tabs
-- On ASSUMES reduce production abs_spec -> stars abs_spec_bis tabs
-- On ASSIGNS reduce production abs_spec -> stars abs_spec_bis tabs
-- On ARROW reduce production abs_spec -> stars abs_spec_bis tabs
-- On AND reduce production abs_spec -> stars abs_spec_bis tabs
-- On AMP reduce production abs_spec -> stars abs_spec_bis tabs
-- On ALLOCATES reduce production abs_spec -> stars abs_spec_bis tabs

State 182:
## Known stack suffix:
## abs_spec_bis
## LR(1) items:
abs_spec -> abs_spec_bis . tabs [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
abs_spec -> abs_spec_bis . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
abs_spec_bis -> abs_spec_bis . LPAR abs_param_type_list RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LSQUARE shift to state 159
-- On LPAR shift to state 172
-- On tabs shift to state 183
## Reductions:
-- On WRITES reduce production abs_spec -> abs_spec_bis
-- On WITH reduce production abs_spec -> abs_spec_bis
-- On STAR reduce production abs_spec -> abs_spec_bis
-- On SLASH reduce production abs_spec -> abs_spec_bis
-- On SEMICOLON reduce production abs_spec -> abs_spec_bis
-- On RSQUARE reduce production abs_spec -> abs_spec_bis
-- On RPAR reduce production abs_spec -> abs_spec_bis
-- On RETURNS reduce production abs_spec -> abs_spec_bis
-- On REQUIRES reduce production abs_spec -> abs_spec_bis
-- On READS reduce production abs_spec -> abs_spec_bis
-- On RBRACE reduce production abs_spec -> abs_spec_bis
-- On QUESTION reduce production abs_spec -> abs_spec_bis
-- On PLUS reduce production abs_spec -> abs_spec_bis
-- On PIPE reduce production abs_spec -> abs_spec_bis
-- On PERCENT reduce production abs_spec -> abs_spec_bis
-- On OR reduce production abs_spec -> abs_spec_bis
-- On NE reduce production abs_spec -> abs_spec_bis
-- On MINUS reduce production abs_spec -> abs_spec_bis
-- On LTLT reduce production abs_spec -> abs_spec_bis
-- On LTCOLON reduce production abs_spec -> abs_spec_bis
-- On LT reduce production abs_spec -> abs_spec_bis
-- On LE reduce production abs_spec -> abs_spec_bis
-- On IMPLIES reduce production abs_spec -> abs_spec_bis
-- On IFF reduce production abs_spec -> abs_spec_bis
-- On IDENTIFIER reduce production abs_spec -> abs_spec_bis
-- On HATHAT reduce production abs_spec -> abs_spec_bis
-- On HAT reduce production abs_spec -> abs_spec_bis
-- On GTGT reduce production abs_spec -> abs_spec_bis
-- On GT reduce production abs_spec -> abs_spec_bis
-- On GE reduce production abs_spec -> abs_spec_bis
-- On FROM reduce production abs_spec -> abs_spec_bis
-- On FREES reduce production abs_spec -> abs_spec_bis
-- On FOR reduce production abs_spec -> abs_spec_bis
-- On EXITS reduce production abs_spec -> abs_spec_bis
-- On EQUAL reduce production abs_spec -> abs_spec_bis
-- On EQ reduce production abs_spec -> abs_spec_bis
-- On EOF reduce production abs_spec -> abs_spec_bis
-- On ENSURES reduce production abs_spec -> abs_spec_bis
-- On DOTDOT reduce production abs_spec -> abs_spec_bis
-- On DOT reduce production abs_spec -> abs_spec_bis
-- On DISJOINT reduce production abs_spec -> abs_spec_bis
-- On DECREASES reduce production abs_spec -> abs_spec_bis
-- On CONTINUES reduce production abs_spec -> abs_spec_bis
-- On COMPLETE reduce production abs_spec -> abs_spec_bis
-- On COMMA reduce production abs_spec -> abs_spec_bis
-- On COLONGT reduce production abs_spec -> abs_spec_bis
-- On COLON2 reduce production abs_spec -> abs_spec_bis
-- On BREAKS reduce production abs_spec -> abs_spec_bis
-- On BIMPLIES reduce production abs_spec -> abs_spec_bis
-- On BIFF reduce production abs_spec -> abs_spec_bis
-- On BEHAVIOR reduce production abs_spec -> abs_spec_bis
-- On ASSUMES reduce production abs_spec -> abs_spec_bis
-- On ASSIGNS reduce production abs_spec -> abs_spec_bis
-- On ARROW reduce production abs_spec -> abs_spec_bis
-- On AND reduce production abs_spec -> abs_spec_bis
-- On AMP reduce production abs_spec -> abs_spec_bis
-- On ALLOCATES reduce production abs_spec -> abs_spec_bis

State 183:
## Known stack suffix:
## abs_spec_bis tabs
## LR(1) items:
abs_spec -> abs_spec_bis tabs . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production abs_spec -> abs_spec_bis tabs
-- On WITH reduce production abs_spec -> abs_spec_bis tabs
-- On STAR reduce production abs_spec -> abs_spec_bis tabs
-- On SLASH reduce production abs_spec -> abs_spec_bis tabs
-- On SEMICOLON reduce production abs_spec -> abs_spec_bis tabs
-- On RSQUARE reduce production abs_spec -> abs_spec_bis tabs
-- On RPAR reduce production abs_spec -> abs_spec_bis tabs
-- On RETURNS reduce production abs_spec -> abs_spec_bis tabs
-- On REQUIRES reduce production abs_spec -> abs_spec_bis tabs
-- On READS reduce production abs_spec -> abs_spec_bis tabs
-- On RBRACE reduce production abs_spec -> abs_spec_bis tabs
-- On QUESTION reduce production abs_spec -> abs_spec_bis tabs
-- On PLUS reduce production abs_spec -> abs_spec_bis tabs
-- On PIPE reduce production abs_spec -> abs_spec_bis tabs
-- On PERCENT reduce production abs_spec -> abs_spec_bis tabs
-- On OR reduce production abs_spec -> abs_spec_bis tabs
-- On NE reduce production abs_spec -> abs_spec_bis tabs
-- On MINUS reduce production abs_spec -> abs_spec_bis tabs
-- On LTLT reduce production abs_spec -> abs_spec_bis tabs
-- On LTCOLON reduce production abs_spec -> abs_spec_bis tabs
-- On LT reduce production abs_spec -> abs_spec_bis tabs
-- On LSQUARE reduce production abs_spec -> abs_spec_bis tabs
-- On LE reduce production abs_spec -> abs_spec_bis tabs
-- On IMPLIES reduce production abs_spec -> abs_spec_bis tabs
-- On IFF reduce production abs_spec -> abs_spec_bis tabs
-- On IDENTIFIER reduce production abs_spec -> abs_spec_bis tabs
-- On HATHAT reduce production abs_spec -> abs_spec_bis tabs
-- On HAT reduce production abs_spec -> abs_spec_bis tabs
-- On GTGT reduce production abs_spec -> abs_spec_bis tabs
-- On GT reduce production abs_spec -> abs_spec_bis tabs
-- On GE reduce production abs_spec -> abs_spec_bis tabs
-- On FROM reduce production abs_spec -> abs_spec_bis tabs
-- On FREES reduce production abs_spec -> abs_spec_bis tabs
-- On FOR reduce production abs_spec -> abs_spec_bis tabs
-- On EXITS reduce production abs_spec -> abs_spec_bis tabs
-- On EQUAL reduce production abs_spec -> abs_spec_bis tabs
-- On EQ reduce production abs_spec -> abs_spec_bis tabs
-- On EOF reduce production abs_spec -> abs_spec_bis tabs
-- On ENSURES reduce production abs_spec -> abs_spec_bis tabs
-- On DOTDOT reduce production abs_spec -> abs_spec_bis tabs
-- On DOT reduce production abs_spec -> abs_spec_bis tabs
-- On DISJOINT reduce production abs_spec -> abs_spec_bis tabs
-- On DECREASES reduce production abs_spec -> abs_spec_bis tabs
-- On CONTINUES reduce production abs_spec -> abs_spec_bis tabs
-- On COMPLETE reduce production abs_spec -> abs_spec_bis tabs
-- On COMMA reduce production abs_spec -> abs_spec_bis tabs
-- On COLONGT reduce production abs_spec -> abs_spec_bis tabs
-- On COLON2 reduce production abs_spec -> abs_spec_bis tabs
-- On BREAKS reduce production abs_spec -> abs_spec_bis tabs
-- On BIMPLIES reduce production abs_spec -> abs_spec_bis tabs
-- On BIFF reduce production abs_spec -> abs_spec_bis tabs
-- On BEHAVIOR reduce production abs_spec -> abs_spec_bis tabs
-- On ASSUMES reduce production abs_spec -> abs_spec_bis tabs
-- On ASSIGNS reduce production abs_spec -> abs_spec_bis tabs
-- On ARROW reduce production abs_spec -> abs_spec_bis tabs
-- On AND reduce production abs_spec -> abs_spec_bis tabs
-- On AMP reduce production abs_spec -> abs_spec_bis tabs
-- On ALLOCATES reduce production abs_spec -> abs_spec_bis tabs

State 184:
## Known stack suffix:
## LPAR abs_spec
## LR(1) items:
abs_spec_bis -> LPAR abs_spec . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 185
## Reductions:

State 185:
## Known stack suffix:
## LPAR abs_spec RPAR
## LR(1) items:
abs_spec_bis -> LPAR abs_spec RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On WITH reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On STAR reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On SLASH reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On SEMICOLON reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On RSQUARE reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On RPAR reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On RETURNS reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On REQUIRES reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On READS reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On RBRACE reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On QUESTION reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On PLUS reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On PIPE reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On PERCENT reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On OR reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On NE reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On MINUS reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On LTLT reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On LTCOLON reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On LT reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On LSQUARE reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On LPAR reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On LE reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On IMPLIES reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On IFF reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On IDENTIFIER reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On HATHAT reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On HAT reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On GTGT reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On GT reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On GE reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On FROM reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On FREES reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On FOR reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On EXITS reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On EQUAL reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On EQ reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On EOF reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On ENSURES reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On DOTDOT reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On DOT reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On DISJOINT reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On DECREASES reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On CONTINUES reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On COMPLETE reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On COMMA reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On COLONGT reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On COLON2 reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On BREAKS reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On BIMPLIES reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On BIFF reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On BEHAVIOR reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On ASSUMES reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On ASSIGNS reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On ARROW reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On AND reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On AMP reduce production abs_spec_bis -> LPAR abs_spec RPAR
-- On ALLOCATES reduce production abs_spec_bis -> LPAR abs_spec RPAR

State 186:
## Known stack suffix:
## type_spec abs_spec_option
## LR(1) items:
logic_type -> type_spec abs_spec_option . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production logic_type -> type_spec abs_spec_option
-- On WITH reduce production logic_type -> type_spec abs_spec_option
-- On STAR reduce production logic_type -> type_spec abs_spec_option
-- On SLASH reduce production logic_type -> type_spec abs_spec_option
-- On SEMICOLON reduce production logic_type -> type_spec abs_spec_option
-- On RSQUARE reduce production logic_type -> type_spec abs_spec_option
-- On RPAR reduce production logic_type -> type_spec abs_spec_option
-- On RETURNS reduce production logic_type -> type_spec abs_spec_option
-- On REQUIRES reduce production logic_type -> type_spec abs_spec_option
-- On READS reduce production logic_type -> type_spec abs_spec_option
-- On RBRACE reduce production logic_type -> type_spec abs_spec_option
-- On QUESTION reduce production logic_type -> type_spec abs_spec_option
-- On PLUS reduce production logic_type -> type_spec abs_spec_option
-- On PIPE reduce production logic_type -> type_spec abs_spec_option
-- On PERCENT reduce production logic_type -> type_spec abs_spec_option
-- On OR reduce production logic_type -> type_spec abs_spec_option
-- On NE reduce production logic_type -> type_spec abs_spec_option
-- On MINUS reduce production logic_type -> type_spec abs_spec_option
-- On LTLT reduce production logic_type -> type_spec abs_spec_option
-- On LTCOLON reduce production logic_type -> type_spec abs_spec_option
-- On LT reduce production logic_type -> type_spec abs_spec_option
-- On LSQUARE reduce production logic_type -> type_spec abs_spec_option
-- On LE reduce production logic_type -> type_spec abs_spec_option
-- On IMPLIES reduce production logic_type -> type_spec abs_spec_option
-- On IFF reduce production logic_type -> type_spec abs_spec_option
-- On IDENTIFIER reduce production logic_type -> type_spec abs_spec_option
-- On HATHAT reduce production logic_type -> type_spec abs_spec_option
-- On HAT reduce production logic_type -> type_spec abs_spec_option
-- On GTGT reduce production logic_type -> type_spec abs_spec_option
-- On GT reduce production logic_type -> type_spec abs_spec_option
-- On GE reduce production logic_type -> type_spec abs_spec_option
-- On FROM reduce production logic_type -> type_spec abs_spec_option
-- On FREES reduce production logic_type -> type_spec abs_spec_option
-- On FOR reduce production logic_type -> type_spec abs_spec_option
-- On EXITS reduce production logic_type -> type_spec abs_spec_option
-- On EQUAL reduce production logic_type -> type_spec abs_spec_option
-- On EQ reduce production logic_type -> type_spec abs_spec_option
-- On EOF reduce production logic_type -> type_spec abs_spec_option
-- On ENSURES reduce production logic_type -> type_spec abs_spec_option
-- On DOTDOT reduce production logic_type -> type_spec abs_spec_option
-- On DOT reduce production logic_type -> type_spec abs_spec_option
-- On DISJOINT reduce production logic_type -> type_spec abs_spec_option
-- On DECREASES reduce production logic_type -> type_spec abs_spec_option
-- On CONTINUES reduce production logic_type -> type_spec abs_spec_option
-- On COMPLETE reduce production logic_type -> type_spec abs_spec_option
-- On COMMA reduce production logic_type -> type_spec abs_spec_option
-- On COLONGT reduce production logic_type -> type_spec abs_spec_option
-- On COLON2 reduce production logic_type -> type_spec abs_spec_option
-- On BREAKS reduce production logic_type -> type_spec abs_spec_option
-- On BIMPLIES reduce production logic_type -> type_spec abs_spec_option
-- On BIFF reduce production logic_type -> type_spec abs_spec_option
-- On BEHAVIOR reduce production logic_type -> type_spec abs_spec_option
-- On ASSUMES reduce production logic_type -> type_spec abs_spec_option
-- On ASSIGNS reduce production logic_type -> type_spec abs_spec_option
-- On ARROW reduce production logic_type -> type_spec abs_spec_option
-- On AND reduce production logic_type -> type_spec abs_spec_option
-- On AMP reduce production logic_type -> type_spec abs_spec_option
-- On ALLOCATES reduce production logic_type -> type_spec abs_spec_option

State 187:
## Known stack suffix:
## abs_spec
## LR(1) items:
abs_spec_option -> abs_spec . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production abs_spec_option -> abs_spec
-- On WITH reduce production abs_spec_option -> abs_spec
-- On STAR reduce production abs_spec_option -> abs_spec
-- On SLASH reduce production abs_spec_option -> abs_spec
-- On SEMICOLON reduce production abs_spec_option -> abs_spec
-- On RSQUARE reduce production abs_spec_option -> abs_spec
-- On RPAR reduce production abs_spec_option -> abs_spec
-- On RETURNS reduce production abs_spec_option -> abs_spec
-- On REQUIRES reduce production abs_spec_option -> abs_spec
-- On READS reduce production abs_spec_option -> abs_spec
-- On RBRACE reduce production abs_spec_option -> abs_spec
-- On QUESTION reduce production abs_spec_option -> abs_spec
-- On PLUS reduce production abs_spec_option -> abs_spec
-- On PIPE reduce production abs_spec_option -> abs_spec
-- On PERCENT reduce production abs_spec_option -> abs_spec
-- On OR reduce production abs_spec_option -> abs_spec
-- On NE reduce production abs_spec_option -> abs_spec
-- On MINUS reduce production abs_spec_option -> abs_spec
-- On LTLT reduce production abs_spec_option -> abs_spec
-- On LTCOLON reduce production abs_spec_option -> abs_spec
-- On LT reduce production abs_spec_option -> abs_spec
-- On LSQUARE reduce production abs_spec_option -> abs_spec
-- On LE reduce production abs_spec_option -> abs_spec
-- On IMPLIES reduce production abs_spec_option -> abs_spec
-- On IFF reduce production abs_spec_option -> abs_spec
-- On IDENTIFIER reduce production abs_spec_option -> abs_spec
-- On HATHAT reduce production abs_spec_option -> abs_spec
-- On HAT reduce production abs_spec_option -> abs_spec
-- On GTGT reduce production abs_spec_option -> abs_spec
-- On GT reduce production abs_spec_option -> abs_spec
-- On GE reduce production abs_spec_option -> abs_spec
-- On FROM reduce production abs_spec_option -> abs_spec
-- On FREES reduce production abs_spec_option -> abs_spec
-- On FOR reduce production abs_spec_option -> abs_spec
-- On EXITS reduce production abs_spec_option -> abs_spec
-- On EQUAL reduce production abs_spec_option -> abs_spec
-- On EQ reduce production abs_spec_option -> abs_spec
-- On EOF reduce production abs_spec_option -> abs_spec
-- On ENSURES reduce production abs_spec_option -> abs_spec
-- On DOTDOT reduce production abs_spec_option -> abs_spec
-- On DOT reduce production abs_spec_option -> abs_spec
-- On DISJOINT reduce production abs_spec_option -> abs_spec
-- On DECREASES reduce production abs_spec_option -> abs_spec
-- On CONTINUES reduce production abs_spec_option -> abs_spec
-- On COMPLETE reduce production abs_spec_option -> abs_spec
-- On COMMA reduce production abs_spec_option -> abs_spec
-- On COLONGT reduce production abs_spec_option -> abs_spec
-- On COLON2 reduce production abs_spec_option -> abs_spec
-- On BREAKS reduce production abs_spec_option -> abs_spec
-- On BIMPLIES reduce production abs_spec_option -> abs_spec
-- On BIFF reduce production abs_spec_option -> abs_spec
-- On BEHAVIOR reduce production abs_spec_option -> abs_spec
-- On ASSUMES reduce production abs_spec_option -> abs_spec
-- On ASSIGNS reduce production abs_spec_option -> abs_spec
-- On ARROW reduce production abs_spec_option -> abs_spec
-- On AND reduce production abs_spec_option -> abs_spec
-- On AMP reduce production abs_spec_option -> abs_spec
-- On ALLOCATES reduce production abs_spec_option -> abs_spec

State 188:
## Known stack suffix:
## TYPENAME LT enter_rt_type ne_logic_type_list
## LR(1) items:
type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list . GT exit_rt_type [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On GT shift to state 189
## Reductions:

State 189:
## Known stack suffix:
## TYPENAME LT enter_rt_type ne_logic_type_list GT
## LR(1) items:
type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT . exit_rt_type [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On exit_rt_type shift to state 190
## Reductions:
-- On WRITES reduce production exit_rt_type ->
-- On WITH reduce production exit_rt_type ->
-- On VOLATILE reduce production exit_rt_type ->
-- On STAR reduce production exit_rt_type ->
-- On SLASH reduce production exit_rt_type ->
-- On SEMICOLON reduce production exit_rt_type ->
-- On RSQUARE reduce production exit_rt_type ->
-- On RPAR reduce production exit_rt_type ->
-- On RETURNS reduce production exit_rt_type ->
-- On REQUIRES reduce production exit_rt_type ->
-- On READS reduce production exit_rt_type ->
-- On RBRACE reduce production exit_rt_type ->
-- On QUESTION reduce production exit_rt_type ->
-- On PLUS reduce production exit_rt_type ->
-- On PIPE reduce production exit_rt_type ->
-- On PERCENT reduce production exit_rt_type ->
-- On OR reduce production exit_rt_type ->
-- On NE reduce production exit_rt_type ->
-- On MINUS reduce production exit_rt_type ->
-- On LTLT reduce production exit_rt_type ->
-- On LTCOLON reduce production exit_rt_type ->
-- On LT reduce production exit_rt_type ->
-- On LSQUARE reduce production exit_rt_type ->
-- On LPAR reduce production exit_rt_type ->
-- On LE reduce production exit_rt_type ->
-- On LBRACE reduce production exit_rt_type ->
-- On IMPLIES reduce production exit_rt_type ->
-- On IFF reduce production exit_rt_type ->
-- On IDENTIFIER reduce production exit_rt_type ->
-- On HATHAT reduce production exit_rt_type ->
-- On HAT reduce production exit_rt_type ->
-- On GTGT reduce production exit_rt_type ->
-- On GT reduce production exit_rt_type ->
-- On GE reduce production exit_rt_type ->
-- On FROM reduce production exit_rt_type ->
-- On FREES reduce production exit_rt_type ->
-- On FOR reduce production exit_rt_type ->
-- On EXITS reduce production exit_rt_type ->
-- On EQUAL reduce production exit_rt_type ->
-- On EQ reduce production exit_rt_type ->
-- On EOF reduce production exit_rt_type ->
-- On ENSURES reduce production exit_rt_type ->
-- On DOTDOT reduce production exit_rt_type ->
-- On DOT reduce production exit_rt_type ->
-- On DISJOINT reduce production exit_rt_type ->
-- On DECREASES reduce production exit_rt_type ->
-- On CONTINUES reduce production exit_rt_type ->
-- On CONST reduce production exit_rt_type ->
-- On COMPLETE reduce production exit_rt_type ->
-- On COMMA reduce production exit_rt_type ->
-- On COLONGT reduce production exit_rt_type ->
-- On COLON2 reduce production exit_rt_type ->
-- On BREAKS reduce production exit_rt_type ->
-- On BIMPLIES reduce production exit_rt_type ->
-- On BIFF reduce production exit_rt_type ->
-- On BEHAVIOR reduce production exit_rt_type ->
-- On ASSUMES reduce production exit_rt_type ->
-- On ASSIGNS reduce production exit_rt_type ->
-- On ARROW reduce production exit_rt_type ->
-- On AND reduce production exit_rt_type ->
-- On AMP reduce production exit_rt_type ->
-- On ALLOCATES reduce production exit_rt_type ->

State 190:
## Known stack suffix:
## TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
## LR(1) items:
type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type . [ WRITES WITH VOLATILE STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES CONST COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On WITH reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On VOLATILE reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On STAR reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On SLASH reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On SEMICOLON reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On RSQUARE reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On RPAR reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On RETURNS reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On REQUIRES reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On READS reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On RBRACE reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On QUESTION reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On PLUS reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On PIPE reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On PERCENT reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On OR reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On NE reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On MINUS reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On LTLT reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On LTCOLON reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On LT reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On LSQUARE reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On LPAR reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On LE reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On LBRACE reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On IMPLIES reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On IFF reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On IDENTIFIER reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On HATHAT reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On HAT reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On GTGT reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On GT reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On GE reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On FROM reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On FREES reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On FOR reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On EXITS reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On EQUAL reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On EQ reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On EOF reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On ENSURES reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On DOTDOT reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On DOT reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On DISJOINT reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On DECREASES reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On CONTINUES reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On CONST reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On COMPLETE reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On COMMA reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On COLONGT reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On COLON2 reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On BREAKS reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On BIMPLIES reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On BIFF reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On BEHAVIOR reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On ASSUMES reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On ASSIGNS reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On ARROW reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On AND reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On AMP reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type
-- On ALLOCATES reduce production type_spec -> TYPENAME LT enter_rt_type ne_logic_type_list GT exit_rt_type

State 191:
## Known stack suffix:
## logic_type
## LR(1) items:
ne_logic_type_list -> logic_type . [ GT ]
ne_logic_type_list -> logic_type . COMMA enter_rt_type ne_logic_type_list [ GT ]
## Transitions:
-- On COMMA shift to state 192
## Reductions:
-- On GT reduce production ne_logic_type_list -> logic_type

State 192:
## Known stack suffix:
## logic_type COMMA
## LR(1) items:
ne_logic_type_list -> logic_type COMMA . enter_rt_type ne_logic_type_list [ GT ]
## Transitions:
-- On enter_rt_type shift to state 193
## Reductions:
-- On VOID reduce production enter_rt_type ->
-- On UNSIGNED reduce production enter_rt_type ->
-- On UNION reduce production enter_rt_type ->
-- On TYPENAME reduce production enter_rt_type ->
-- On STRUCT reduce production enter_rt_type ->
-- On SIGNED reduce production enter_rt_type ->
-- On SHORT reduce production enter_rt_type ->
-- On REAL reduce production enter_rt_type ->
-- On LONG reduce production enter_rt_type ->
-- On INTEGER reduce production enter_rt_type ->
-- On INT reduce production enter_rt_type ->
-- On FLOAT reduce production enter_rt_type ->
-- On ENUM reduce production enter_rt_type ->
-- On DOUBLE reduce production enter_rt_type ->
-- On CHAR reduce production enter_rt_type ->
-- On BOOLEAN reduce production enter_rt_type ->
-- On BOOL reduce production enter_rt_type ->

State 193:
## Known stack suffix:
## logic_type COMMA enter_rt_type
## LR(1) items:
ne_logic_type_list -> logic_type COMMA enter_rt_type . ne_logic_type_list [ GT ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 157
-- On ne_logic_type_list shift to state 194
-- On logic_type shift to state 191
## Reductions:

State 194:
## Known stack suffix:
## logic_type COMMA enter_rt_type ne_logic_type_list
## LR(1) items:
ne_logic_type_list -> logic_type COMMA enter_rt_type ne_logic_type_list . [ GT ]
## Transitions:
## Reductions:
-- On GT reduce production ne_logic_type_list -> logic_type COMMA enter_rt_type ne_logic_type_list

State 195:
## Known stack suffix:
## STRUCT
## LR(1) items:
c_keyword -> STRUCT . [ COLON ]
type_spec -> STRUCT . exit_rt_type identifier_or_typename [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
## Transitions:
-- On exit_rt_type shift to state 130
## Reductions:
-- On TYPENAME reduce production exit_rt_type ->
-- On IDENTIFIER reduce production exit_rt_type ->
-- On COLON reduce production c_keyword -> STRUCT

State 196:
## Known stack suffix:
## STATIC
## LR(1) items:
c_keyword -> STATIC . [ COLON ]
lexpr_inner -> STATIC . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> STATIC
-- On WITH reduce production lexpr_inner -> STATIC
-- On STAR reduce production lexpr_inner -> STATIC
-- On SLASH reduce production lexpr_inner -> STATIC
-- On SEMICOLON reduce production lexpr_inner -> STATIC
-- On RSQUARE reduce production lexpr_inner -> STATIC
-- On RPAR reduce production lexpr_inner -> STATIC
-- On RETURNS reduce production lexpr_inner -> STATIC
-- On REQUIRES reduce production lexpr_inner -> STATIC
-- On READS reduce production lexpr_inner -> STATIC
-- On RBRACE reduce production lexpr_inner -> STATIC
-- On QUESTION reduce production lexpr_inner -> STATIC
-- On PLUS reduce production lexpr_inner -> STATIC
-- On PIPE reduce production lexpr_inner -> STATIC
-- On PERCENT reduce production lexpr_inner -> STATIC
-- On OR reduce production lexpr_inner -> STATIC
-- On NE reduce production lexpr_inner -> STATIC
-- On MINUS reduce production lexpr_inner -> STATIC
-- On LTLT reduce production lexpr_inner -> STATIC
-- On LTCOLON reduce production lexpr_inner -> STATIC
-- On LT reduce production lexpr_inner -> STATIC
-- On LSQUARE reduce production lexpr_inner -> STATIC
-- On LE reduce production lexpr_inner -> STATIC
-- On IMPLIES reduce production lexpr_inner -> STATIC
-- On IFF reduce production lexpr_inner -> STATIC
-- On IDENTIFIER reduce production lexpr_inner -> STATIC
-- On HATHAT reduce production lexpr_inner -> STATIC
-- On HAT reduce production lexpr_inner -> STATIC
-- On GTGT reduce production lexpr_inner -> STATIC
-- On GT reduce production lexpr_inner -> STATIC
-- On GE reduce production lexpr_inner -> STATIC
-- On FROM reduce production lexpr_inner -> STATIC
-- On FREES reduce production lexpr_inner -> STATIC
-- On FOR reduce production lexpr_inner -> STATIC
-- On EXITS reduce production lexpr_inner -> STATIC
-- On EQUAL reduce production lexpr_inner -> STATIC
-- On EQ reduce production lexpr_inner -> STATIC
-- On EOF reduce production lexpr_inner -> STATIC
-- On ENSURES reduce production lexpr_inner -> STATIC
-- On DOTDOT reduce production lexpr_inner -> STATIC
-- On DOT reduce production lexpr_inner -> STATIC
-- On DISJOINT reduce production lexpr_inner -> STATIC
-- On DECREASES reduce production lexpr_inner -> STATIC
-- On CONTINUES reduce production lexpr_inner -> STATIC
-- On COMPLETE reduce production lexpr_inner -> STATIC
-- On COMMA reduce production lexpr_inner -> STATIC
-- On COLONGT reduce production lexpr_inner -> STATIC
-- On COLON2 reduce production lexpr_inner -> STATIC
-- On COLON reduce production c_keyword -> STATIC
-- On BREAKS reduce production lexpr_inner -> STATIC
-- On BIMPLIES reduce production lexpr_inner -> STATIC
-- On BIFF reduce production lexpr_inner -> STATIC
-- On BEHAVIOR reduce production lexpr_inner -> STATIC
-- On ASSUMES reduce production lexpr_inner -> STATIC
-- On ASSIGNS reduce production lexpr_inner -> STATIC
-- On ARROW reduce production lexpr_inner -> STATIC
-- On AND reduce production lexpr_inner -> STATIC
-- On AMP reduce production lexpr_inner -> STATIC
-- On ALLOCATES reduce production lexpr_inner -> STATIC

State 197:
## Known stack suffix:
## SIZEOF
## LR(1) items:
c_keyword -> SIZEOF . [ COLON ]
lexpr_inner -> SIZEOF . LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> SIZEOF . LPAR logic_type RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 109
## Reductions:
-- On COLON reduce production c_keyword -> SIZEOF

State 198:
## Known stack suffix:
## SIGNED
## LR(1) items:
c_keyword -> SIGNED . [ COLON ]
type_spec -> SIGNED . CHAR [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> SIGNED . INT [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> SIGNED . SHORT [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> SIGNED . LONG [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> SIGNED . LONG INT [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> SIGNED . LONG LONG [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> SIGNED . LONG LONG INT [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
## Transitions:
-- On SHORT shift to state 133
-- On LONG shift to state 134
-- On INT shift to state 138
-- On CHAR shift to state 139
## Reductions:
-- On COLON reduce production c_keyword -> SIGNED

State 199:
## Known stack suffix:
## SHORT
## LR(1) items:
c_keyword -> SHORT . [ COLON ]
type_spec -> SHORT . [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production type_spec -> SHORT
-- On STAR reduce production type_spec -> SHORT
-- On RPAR reduce production type_spec -> SHORT
-- On LSQUARE reduce production type_spec -> SHORT
-- On LPAR reduce production type_spec -> SHORT
-- On IDENTIFIER reduce production type_spec -> SHORT
-- On CONST reduce production type_spec -> SHORT
-- On COLON reduce production c_keyword -> SHORT

State 200:
## Known stack suffix:
## SEPARATED
## LR(1) items:
lexpr_inner -> SEPARATED . LPAR ne_lexpr_list RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 201
## Reductions:

State 201:
## Known stack suffix:
## SEPARATED LPAR
## LR(1) items:
lexpr_inner -> SEPARATED LPAR . ne_lexpr_list RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_lexpr_list shift to state 526
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 329
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 202:
## Known stack suffix:
## RESULT
## LR(1) items:
lexpr_inner -> RESULT . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> RESULT
-- On WITH reduce production lexpr_inner -> RESULT
-- On STAR reduce production lexpr_inner -> RESULT
-- On SLASH reduce production lexpr_inner -> RESULT
-- On SEMICOLON reduce production lexpr_inner -> RESULT
-- On RSQUARE reduce production lexpr_inner -> RESULT
-- On RPAR reduce production lexpr_inner -> RESULT
-- On RETURNS reduce production lexpr_inner -> RESULT
-- On REQUIRES reduce production lexpr_inner -> RESULT
-- On READS reduce production lexpr_inner -> RESULT
-- On RBRACE reduce production lexpr_inner -> RESULT
-- On QUESTION reduce production lexpr_inner -> RESULT
-- On PLUS reduce production lexpr_inner -> RESULT
-- On PIPE reduce production lexpr_inner -> RESULT
-- On PERCENT reduce production lexpr_inner -> RESULT
-- On OR reduce production lexpr_inner -> RESULT
-- On NE reduce production lexpr_inner -> RESULT
-- On MINUS reduce production lexpr_inner -> RESULT
-- On LTLT reduce production lexpr_inner -> RESULT
-- On LTCOLON reduce production lexpr_inner -> RESULT
-- On LT reduce production lexpr_inner -> RESULT
-- On LSQUARE reduce production lexpr_inner -> RESULT
-- On LE reduce production lexpr_inner -> RESULT
-- On IMPLIES reduce production lexpr_inner -> RESULT
-- On IFF reduce production lexpr_inner -> RESULT
-- On IDENTIFIER reduce production lexpr_inner -> RESULT
-- On HATHAT reduce production lexpr_inner -> RESULT
-- On HAT reduce production lexpr_inner -> RESULT
-- On GTGT reduce production lexpr_inner -> RESULT
-- On GT reduce production lexpr_inner -> RESULT
-- On GE reduce production lexpr_inner -> RESULT
-- On FROM reduce production lexpr_inner -> RESULT
-- On FREES reduce production lexpr_inner -> RESULT
-- On FOR reduce production lexpr_inner -> RESULT
-- On EXITS reduce production lexpr_inner -> RESULT
-- On EQUAL reduce production lexpr_inner -> RESULT
-- On EQ reduce production lexpr_inner -> RESULT
-- On EOF reduce production lexpr_inner -> RESULT
-- On ENSURES reduce production lexpr_inner -> RESULT
-- On DOTDOT reduce production lexpr_inner -> RESULT
-- On DOT reduce production lexpr_inner -> RESULT
-- On DISJOINT reduce production lexpr_inner -> RESULT
-- On DECREASES reduce production lexpr_inner -> RESULT
-- On CONTINUES reduce production lexpr_inner -> RESULT
-- On COMPLETE reduce production lexpr_inner -> RESULT
-- On COMMA reduce production lexpr_inner -> RESULT
-- On COLONGT reduce production lexpr_inner -> RESULT
-- On COLON2 reduce production lexpr_inner -> RESULT
-- On BREAKS reduce production lexpr_inner -> RESULT
-- On BIMPLIES reduce production lexpr_inner -> RESULT
-- On BIFF reduce production lexpr_inner -> RESULT
-- On BEHAVIOR reduce production lexpr_inner -> RESULT
-- On ASSUMES reduce production lexpr_inner -> RESULT
-- On ASSIGNS reduce production lexpr_inner -> RESULT
-- On ARROW reduce production lexpr_inner -> RESULT
-- On AND reduce production lexpr_inner -> RESULT
-- On AMP reduce production lexpr_inner -> RESULT
-- On ALLOCATES reduce production lexpr_inner -> RESULT

State 203:
## Known stack suffix:
## REGISTER
## LR(1) items:
lexpr_inner -> REGISTER . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> REGISTER
-- On WITH reduce production lexpr_inner -> REGISTER
-- On STAR reduce production lexpr_inner -> REGISTER
-- On SLASH reduce production lexpr_inner -> REGISTER
-- On SEMICOLON reduce production lexpr_inner -> REGISTER
-- On RSQUARE reduce production lexpr_inner -> REGISTER
-- On RPAR reduce production lexpr_inner -> REGISTER
-- On RETURNS reduce production lexpr_inner -> REGISTER
-- On REQUIRES reduce production lexpr_inner -> REGISTER
-- On READS reduce production lexpr_inner -> REGISTER
-- On RBRACE reduce production lexpr_inner -> REGISTER
-- On QUESTION reduce production lexpr_inner -> REGISTER
-- On PLUS reduce production lexpr_inner -> REGISTER
-- On PIPE reduce production lexpr_inner -> REGISTER
-- On PERCENT reduce production lexpr_inner -> REGISTER
-- On OR reduce production lexpr_inner -> REGISTER
-- On NE reduce production lexpr_inner -> REGISTER
-- On MINUS reduce production lexpr_inner -> REGISTER
-- On LTLT reduce production lexpr_inner -> REGISTER
-- On LTCOLON reduce production lexpr_inner -> REGISTER
-- On LT reduce production lexpr_inner -> REGISTER
-- On LSQUARE reduce production lexpr_inner -> REGISTER
-- On LE reduce production lexpr_inner -> REGISTER
-- On IMPLIES reduce production lexpr_inner -> REGISTER
-- On IFF reduce production lexpr_inner -> REGISTER
-- On IDENTIFIER reduce production lexpr_inner -> REGISTER
-- On HATHAT reduce production lexpr_inner -> REGISTER
-- On HAT reduce production lexpr_inner -> REGISTER
-- On GTGT reduce production lexpr_inner -> REGISTER
-- On GT reduce production lexpr_inner -> REGISTER
-- On GE reduce production lexpr_inner -> REGISTER
-- On FROM reduce production lexpr_inner -> REGISTER
-- On FREES reduce production lexpr_inner -> REGISTER
-- On FOR reduce production lexpr_inner -> REGISTER
-- On EXITS reduce production lexpr_inner -> REGISTER
-- On EQUAL reduce production lexpr_inner -> REGISTER
-- On EQ reduce production lexpr_inner -> REGISTER
-- On EOF reduce production lexpr_inner -> REGISTER
-- On ENSURES reduce production lexpr_inner -> REGISTER
-- On DOTDOT reduce production lexpr_inner -> REGISTER
-- On DOT reduce production lexpr_inner -> REGISTER
-- On DISJOINT reduce production lexpr_inner -> REGISTER
-- On DECREASES reduce production lexpr_inner -> REGISTER
-- On CONTINUES reduce production lexpr_inner -> REGISTER
-- On COMPLETE reduce production lexpr_inner -> REGISTER
-- On COMMA reduce production lexpr_inner -> REGISTER
-- On COLONGT reduce production lexpr_inner -> REGISTER
-- On COLON2 reduce production lexpr_inner -> REGISTER
-- On BREAKS reduce production lexpr_inner -> REGISTER
-- On BIMPLIES reduce production lexpr_inner -> REGISTER
-- On BIFF reduce production lexpr_inner -> REGISTER
-- On BEHAVIOR reduce production lexpr_inner -> REGISTER
-- On ASSUMES reduce production lexpr_inner -> REGISTER
-- On ASSIGNS reduce production lexpr_inner -> REGISTER
-- On ARROW reduce production lexpr_inner -> REGISTER
-- On AND reduce production lexpr_inner -> REGISTER
-- On AMP reduce production lexpr_inner -> REGISTER
-- On ALLOCATES reduce production lexpr_inner -> REGISTER

State 204:
## Known stack suffix:
## PLUS
## LR(1) items:
lexpr_inner -> PLUS . lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 212
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LBRACE shift to state 224
-- On INTER shift to state 249
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FALSE shift to state 265
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On string shift to state 304
-- On lexpr_inner shift to state 525
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 205:
## Known stack suffix:
## OLD
## LR(1) items:
lexpr_inner -> OLD . LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 206
## Reductions:

State 206:
## Known stack suffix:
## OLD LPAR
## LR(1) items:
lexpr_inner -> OLD LPAR . lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 523
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 207:
## Known stack suffix:
## OFFSET
## LR(1) items:
lexpr_inner -> OFFSET . opt_label_1 LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LBRACE shift to state 7
-- On opt_label_list shift to state 88
-- On opt_label_1 shift to state 208
## Reductions:
-- On LPAR reduce production opt_label_list ->

State 208:
## Known stack suffix:
## OFFSET opt_label_1
## LR(1) items:
lexpr_inner -> OFFSET opt_label_1 . LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 209
## Reductions:

State 209:
## Known stack suffix:
## OFFSET opt_label_1 LPAR
## LR(1) items:
lexpr_inner -> OFFSET opt_label_1 LPAR . lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 521
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 210:
## Known stack suffix:
## NULL
## LR(1) items:
lexpr_inner -> NULL . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> NULL
-- On WITH reduce production lexpr_inner -> NULL
-- On STAR reduce production lexpr_inner -> NULL
-- On SLASH reduce production lexpr_inner -> NULL
-- On SEMICOLON reduce production lexpr_inner -> NULL
-- On RSQUARE reduce production lexpr_inner -> NULL
-- On RPAR reduce production lexpr_inner -> NULL
-- On RETURNS reduce production lexpr_inner -> NULL
-- On REQUIRES reduce production lexpr_inner -> NULL
-- On READS reduce production lexpr_inner -> NULL
-- On RBRACE reduce production lexpr_inner -> NULL
-- On QUESTION reduce production lexpr_inner -> NULL
-- On PLUS reduce production lexpr_inner -> NULL
-- On PIPE reduce production lexpr_inner -> NULL
-- On PERCENT reduce production lexpr_inner -> NULL
-- On OR reduce production lexpr_inner -> NULL
-- On NE reduce production lexpr_inner -> NULL
-- On MINUS reduce production lexpr_inner -> NULL
-- On LTLT reduce production lexpr_inner -> NULL
-- On LTCOLON reduce production lexpr_inner -> NULL
-- On LT reduce production lexpr_inner -> NULL
-- On LSQUARE reduce production lexpr_inner -> NULL
-- On LE reduce production lexpr_inner -> NULL
-- On IMPLIES reduce production lexpr_inner -> NULL
-- On IFF reduce production lexpr_inner -> NULL
-- On IDENTIFIER reduce production lexpr_inner -> NULL
-- On HATHAT reduce production lexpr_inner -> NULL
-- On HAT reduce production lexpr_inner -> NULL
-- On GTGT reduce production lexpr_inner -> NULL
-- On GT reduce production lexpr_inner -> NULL
-- On GE reduce production lexpr_inner -> NULL
-- On FROM reduce production lexpr_inner -> NULL
-- On FREES reduce production lexpr_inner -> NULL
-- On FOR reduce production lexpr_inner -> NULL
-- On EXITS reduce production lexpr_inner -> NULL
-- On EQUAL reduce production lexpr_inner -> NULL
-- On EQ reduce production lexpr_inner -> NULL
-- On EOF reduce production lexpr_inner -> NULL
-- On ENSURES reduce production lexpr_inner -> NULL
-- On DOTDOT reduce production lexpr_inner -> NULL
-- On DOT reduce production lexpr_inner -> NULL
-- On DISJOINT reduce production lexpr_inner -> NULL
-- On DECREASES reduce production lexpr_inner -> NULL
-- On CONTINUES reduce production lexpr_inner -> NULL
-- On COMPLETE reduce production lexpr_inner -> NULL
-- On COMMA reduce production lexpr_inner -> NULL
-- On COLONGT reduce production lexpr_inner -> NULL
-- On COLON2 reduce production lexpr_inner -> NULL
-- On BREAKS reduce production lexpr_inner -> NULL
-- On BIMPLIES reduce production lexpr_inner -> NULL
-- On BIFF reduce production lexpr_inner -> NULL
-- On BEHAVIOR reduce production lexpr_inner -> NULL
-- On ASSUMES reduce production lexpr_inner -> NULL
-- On ASSIGNS reduce production lexpr_inner -> NULL
-- On ARROW reduce production lexpr_inner -> NULL
-- On AND reduce production lexpr_inner -> NULL
-- On AMP reduce production lexpr_inner -> NULL
-- On ALLOCATES reduce production lexpr_inner -> NULL

State 211:
## Known stack suffix:
## NOT
## LR(1) items:
lexpr_end_rel -> NOT . lexpr_binder [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr_inner -> NOT . lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 212
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LET shift to state 218
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On INTER shift to state 249
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FALSE shift to state 265
-- On EXISTS shift to state 266
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On string shift to state 304
-- On lexpr_inner shift to state 519
-- On lexpr_binder shift to state 520
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 212:
## Known stack suffix:
## NOT
## LR(1) items:
lexpr_inner -> NOT . lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 212
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LBRACE shift to state 224
-- On INTER shift to state 249
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FALSE shift to state 265
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On string shift to state 304
-- On lexpr_inner shift to state 519
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 213:
## Known stack suffix:
## MINUS
## LR(1) items:
lexpr_inner -> MINUS . lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 212
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LBRACE shift to state 224
-- On INTER shift to state 249
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FALSE shift to state 265
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On string shift to state 304
-- On lexpr_inner shift to state 518
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 214:
## Known stack suffix:
## LPAR
## LR(1) items:
lexpr_inner -> LPAR . lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> LPAR . range RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> LPAR . cast_logic_type RPAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 215
-- On VOID shift to state 110
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 111
-- On UNION shift to state 119
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 122
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 195
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 198
-- On SHORT shift to state 199
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 216
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 217
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 468
-- On INT shift to state 469
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 470
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 471
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 472
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 484
-- On COMPLETE shift to state 58
-- On CHAR shift to state 473
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 474
-- On BOOL shift to state 475
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On type_spec_cv shift to state 485
-- On type_spec shift to state 507
-- On string shift to state 298
-- On range shift to state 509
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_option shift to state 311
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 511
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On cv shift to state 513
-- On constant shift to state 336
-- On cast_logic_type shift to state 515
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:
-- On DOTDOT reduce production lexpr_option ->

State 215:
## Known stack suffix:
## VOLATILE
## LR(1) items:
acsl_c_keyword -> VOLATILE . [ COLON ]
cv -> VOLATILE . [ VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL ]
## Transitions:
## Reductions:
-- On VOID reduce production cv -> VOLATILE
-- On UNSIGNED reduce production cv -> VOLATILE
-- On UNION reduce production cv -> VOLATILE
-- On TYPENAME reduce production cv -> VOLATILE
-- On STRUCT reduce production cv -> VOLATILE
-- On SIGNED reduce production cv -> VOLATILE
-- On SHORT reduce production cv -> VOLATILE
-- On REAL reduce production cv -> VOLATILE
-- On LONG reduce production cv -> VOLATILE
-- On INTEGER reduce production cv -> VOLATILE
-- On INT reduce production cv -> VOLATILE
-- On FLOAT reduce production cv -> VOLATILE
-- On ENUM reduce production cv -> VOLATILE
-- On DOUBLE reduce production cv -> VOLATILE
-- On COLON reduce production acsl_c_keyword -> VOLATILE
-- On CHAR reduce production cv -> VOLATILE
-- On BOOLEAN reduce production cv -> VOLATILE
-- On BOOL reduce production cv -> VOLATILE

State 216:
## Known stack suffix:
## REAL
## LR(1) items:
is_acsl_other -> REAL . [ COLON ]
type_spec -> REAL . [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production type_spec -> REAL
-- On STAR reduce production type_spec -> REAL
-- On RPAR reduce production type_spec -> REAL
-- On LSQUARE reduce production type_spec -> REAL
-- On LPAR reduce production type_spec -> REAL
-- On IDENTIFIER reduce production type_spec -> REAL
-- On CONST reduce production type_spec -> REAL
-- On COLON reduce production is_acsl_other -> REAL

State 217:
## Known stack suffix:
## LONG
## LR(1) items:
c_keyword -> LONG . [ COLON ]
type_spec -> LONG . [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> LONG . INT [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> LONG . LONG [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> LONG . LONG INT [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
type_spec -> LONG . DOUBLE [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
## Transitions:
-- On LONG shift to state 143
-- On INT shift to state 145
-- On DOUBLE shift to state 146
## Reductions:
-- On VOLATILE reduce production type_spec -> LONG
-- On STAR reduce production type_spec -> LONG
-- On RPAR reduce production type_spec -> LONG
-- On LSQUARE reduce production type_spec -> LONG
-- On LPAR reduce production type_spec -> LONG
-- On IDENTIFIER reduce production type_spec -> LONG
-- On CONST reduce production type_spec -> LONG
-- On COLON reduce production c_keyword -> LONG

State 218:
## Known stack suffix:
## LET
## LR(1) items:
lexpr_binder -> LET . bounded_var EQUAL lexpr SEMICOLON lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On TYPENAME shift to state 219
-- On IDENTIFIER shift to state 220
-- On identifier shift to state 221
-- On bounded_var shift to state 222
## Reductions:

State 219:
## Known stack suffix:
## TYPENAME
## LR(1) items:
bounded_var -> TYPENAME . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL reduce production bounded_var -> TYPENAME

State 220:
## Known stack suffix:
## IDENTIFIER
## LR(1) items:
identifier -> IDENTIFIER . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 COLON BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production identifier -> IDENTIFIER
-- On WITH reduce production identifier -> IDENTIFIER
-- On STAR reduce production identifier -> IDENTIFIER
-- On SLASH reduce production identifier -> IDENTIFIER
-- On SEMICOLON reduce production identifier -> IDENTIFIER
-- On RSQUARE reduce production identifier -> IDENTIFIER
-- On RPAR reduce production identifier -> IDENTIFIER
-- On RETURNS reduce production identifier -> IDENTIFIER
-- On REQUIRES reduce production identifier -> IDENTIFIER
-- On READS reduce production identifier -> IDENTIFIER
-- On RBRACE reduce production identifier -> IDENTIFIER
-- On QUESTION reduce production identifier -> IDENTIFIER
-- On PLUS reduce production identifier -> IDENTIFIER
-- On PIPE reduce production identifier -> IDENTIFIER
-- On PERCENT reduce production identifier -> IDENTIFIER
-- On OR reduce production identifier -> IDENTIFIER
-- On NE reduce production identifier -> IDENTIFIER
-- On MINUS reduce production identifier -> IDENTIFIER
-- On LTLT reduce production identifier -> IDENTIFIER
-- On LTCOLON reduce production identifier -> IDENTIFIER
-- On LT reduce production identifier -> IDENTIFIER
-- On LSQUARE reduce production identifier -> IDENTIFIER
-- On LPAR reduce production identifier -> IDENTIFIER
-- On LE reduce production identifier -> IDENTIFIER
-- On LBRACE reduce production identifier -> IDENTIFIER
-- On IMPLIES reduce production identifier -> IDENTIFIER
-- On IFF reduce production identifier -> IDENTIFIER
-- On IDENTIFIER reduce production identifier -> IDENTIFIER
-- On HATHAT reduce production identifier -> IDENTIFIER
-- On HAT reduce production identifier -> IDENTIFIER
-- On GTGT reduce production identifier -> IDENTIFIER
-- On GT reduce production identifier -> IDENTIFIER
-- On GE reduce production identifier -> IDENTIFIER
-- On FROM reduce production identifier -> IDENTIFIER
-- On FREES reduce production identifier -> IDENTIFIER
-- On FOR reduce production identifier -> IDENTIFIER
-- On EXITS reduce production identifier -> IDENTIFIER
-- On EQUAL reduce production identifier -> IDENTIFIER
-- On EQ reduce production identifier -> IDENTIFIER
-- On EOF reduce production identifier -> IDENTIFIER
-- On ENSURES reduce production identifier -> IDENTIFIER
-- On DOTDOT reduce production identifier -> IDENTIFIER
-- On DOT reduce production identifier -> IDENTIFIER
-- On DISJOINT reduce production identifier -> IDENTIFIER
-- On DECREASES reduce production identifier -> IDENTIFIER
-- On CONTINUES reduce production identifier -> IDENTIFIER
-- On COMPLETE reduce production identifier -> IDENTIFIER
-- On COMMA reduce production identifier -> IDENTIFIER
-- On COLONGT reduce production identifier -> IDENTIFIER
-- On COLON2 reduce production identifier -> IDENTIFIER
-- On COLON reduce production identifier -> IDENTIFIER
-- On BREAKS reduce production identifier -> IDENTIFIER
-- On BIMPLIES reduce production identifier -> IDENTIFIER
-- On BIFF reduce production identifier -> IDENTIFIER
-- On BEHAVIOR reduce production identifier -> IDENTIFIER
-- On ASSUMES reduce production identifier -> IDENTIFIER
-- On ASSIGNS reduce production identifier -> IDENTIFIER
-- On ARROW reduce production identifier -> IDENTIFIER
-- On AND reduce production identifier -> IDENTIFIER
-- On AMP reduce production identifier -> IDENTIFIER
-- On ALLOCATES reduce production identifier -> IDENTIFIER

State 221:
## Known stack suffix:
## identifier
## LR(1) items:
bounded_var -> identifier . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL reduce production bounded_var -> identifier

State 222:
## Known stack suffix:
## LET bounded_var
## LR(1) items:
lexpr_binder -> LET bounded_var . EQUAL lexpr SEMICOLON lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On EQUAL shift to state 223
## Reductions:

State 223:
## Known stack suffix:
## LET bounded_var EQUAL
## LR(1) items:
lexpr_binder -> LET bounded_var EQUAL . lexpr SEMICOLON lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 481
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 224:
## Known stack suffix:
## LBRACE
## LR(1) items:
lexpr_inner -> LBRACE . lexpr RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> LBRACE . lexpr PIPE binders RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> LBRACE . lexpr PIPE binders SEMICOLON lexpr RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> LBRACE . field_init RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> LBRACE . array_init RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> LBRACE . lexpr WITH update RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LSQUARE shift to state 225
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DOT shift to state 430
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 432
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On field_path_elt shift to state 447
-- On field_init_elt shift to state 450
-- On field_init shift to state 453
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On array_path_elt shift to state 455
-- On array_init_elt shift to state 458
-- On array_init shift to state 461
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 225:
## Known stack suffix:
## LSQUARE
## LR(1) items:
array_path_elt -> LSQUARE . lexpr RSQUARE [ LSQUARE EQUAL DOT ]
array_path_elt -> LSQUARE . range RSQUARE [ LSQUARE EQUAL DOT ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On range shift to state 426
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_option shift to state 311
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 428
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:
-- On DOTDOT reduce production lexpr_option ->

State 226:
## Known stack suffix:
## LAMBDA
## LR(1) items:
lexpr_binder -> LAMBDA . binders SEMICOLON lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 227
-- On decl_spec shift to state 242
-- On binders_reentrance shift to state 243
-- On binders shift to state 247
## Reductions:

State 227:
## Known stack suffix:
## type_spec
## LR(1) items:
decl_spec -> type_spec . var_spec [ SEMICOLON RBRACE COMMA ]
## Transitions:
-- On STAR shift to state 158
-- On LPAR shift to state 228
-- On IDENTIFIER shift to state 220
-- On var_spec_bis shift to state 229
-- On var_spec shift to state 241
-- On stars shift to state 238
-- On identifier shift to state 240
## Reductions:

State 228:
## Known stack suffix:
## LPAR
## LR(1) items:
var_spec_bis -> LPAR . var_spec RPAR [ SEMICOLON RPAR RBRACE LSQUARE LPAR COMMA ]
## Transitions:
-- On STAR shift to state 158
-- On LPAR shift to state 228
-- On IDENTIFIER shift to state 220
-- On var_spec_bis shift to state 229
-- On var_spec shift to state 236
-- On stars shift to state 238
-- On identifier shift to state 240
## Reductions:

State 229:
## Known stack suffix:
## var_spec_bis
## LR(1) items:
var_spec -> var_spec_bis . [ SEMICOLON RPAR RBRACE COMMA ]
var_spec_bis -> var_spec_bis . LSQUARE constant_option RSQUARE [ SEMICOLON RPAR RBRACE LSQUARE LPAR COMMA ]
var_spec_bis -> var_spec_bis . LPAR abs_param_type_list RPAR [ SEMICOLON RPAR RBRACE LSQUARE LPAR COMMA ]
## Transitions:
-- On LSQUARE shift to state 230
-- On LPAR shift to state 233
## Reductions:
-- On SEMICOLON reduce production var_spec -> var_spec_bis
-- On RPAR reduce production var_spec -> var_spec_bis
-- On RBRACE reduce production var_spec -> var_spec_bis
-- On COMMA reduce production var_spec -> var_spec_bis

State 230:
## Known stack suffix:
## var_spec_bis LSQUARE
## LR(1) items:
var_spec_bis -> var_spec_bis LSQUARE . constant_option RSQUARE [ SEMICOLON RPAR RBRACE LSQUARE LPAR COMMA ]
## Transitions:
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On constant_option shift to state 231
-- On constant shift to state 165
## Reductions:
-- On RSQUARE reduce production constant_option ->

State 231:
## Known stack suffix:
## var_spec_bis LSQUARE constant_option
## LR(1) items:
var_spec_bis -> var_spec_bis LSQUARE constant_option . RSQUARE [ SEMICOLON RPAR RBRACE LSQUARE LPAR COMMA ]
## Transitions:
-- On RSQUARE shift to state 232
## Reductions:

State 232:
## Known stack suffix:
## var_spec_bis LSQUARE constant_option RSQUARE
## LR(1) items:
var_spec_bis -> var_spec_bis LSQUARE constant_option RSQUARE . [ SEMICOLON RPAR RBRACE LSQUARE LPAR COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production var_spec_bis -> var_spec_bis LSQUARE constant_option RSQUARE
-- On RPAR reduce production var_spec_bis -> var_spec_bis LSQUARE constant_option RSQUARE
-- On RBRACE reduce production var_spec_bis -> var_spec_bis LSQUARE constant_option RSQUARE
-- On LSQUARE reduce production var_spec_bis -> var_spec_bis LSQUARE constant_option RSQUARE
-- On LPAR reduce production var_spec_bis -> var_spec_bis LSQUARE constant_option RSQUARE
-- On COMMA reduce production var_spec_bis -> var_spec_bis LSQUARE constant_option RSQUARE

State 233:
## Known stack suffix:
## var_spec_bis LPAR
## LR(1) items:
var_spec_bis -> var_spec_bis LPAR . abs_param_type_list RPAR [ SEMICOLON RPAR RBRACE LSQUARE LPAR COMMA ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 157
-- On logic_type shift to state 173
-- On abs_param_type_list shift to state 234
-- On abs_param_list shift to state 176
-- On abs_param shift to state 180
## Reductions:
-- On RPAR reduce production abs_param_type_list ->

State 234:
## Known stack suffix:
## var_spec_bis LPAR abs_param_type_list
## LR(1) items:
var_spec_bis -> var_spec_bis LPAR abs_param_type_list . RPAR [ SEMICOLON RPAR RBRACE LSQUARE LPAR COMMA ]
## Transitions:
-- On RPAR shift to state 235
## Reductions:

State 235:
## Known stack suffix:
## var_spec_bis LPAR abs_param_type_list RPAR
## LR(1) items:
var_spec_bis -> var_spec_bis LPAR abs_param_type_list RPAR . [ SEMICOLON RPAR RBRACE LSQUARE LPAR COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production var_spec_bis -> var_spec_bis LPAR abs_param_type_list RPAR
-- On RPAR reduce production var_spec_bis -> var_spec_bis LPAR abs_param_type_list RPAR
-- On RBRACE reduce production var_spec_bis -> var_spec_bis LPAR abs_param_type_list RPAR
-- On LSQUARE reduce production var_spec_bis -> var_spec_bis LPAR abs_param_type_list RPAR
-- On LPAR reduce production var_spec_bis -> var_spec_bis LPAR abs_param_type_list RPAR
-- On COMMA reduce production var_spec_bis -> var_spec_bis LPAR abs_param_type_list RPAR

State 236:
## Known stack suffix:
## LPAR var_spec
## LR(1) items:
var_spec_bis -> LPAR var_spec . RPAR [ SEMICOLON RPAR RBRACE LSQUARE LPAR COMMA ]
## Transitions:
-- On RPAR shift to state 237
## Reductions:

State 237:
## Known stack suffix:
## LPAR var_spec RPAR
## LR(1) items:
var_spec_bis -> LPAR var_spec RPAR . [ SEMICOLON RPAR RBRACE LSQUARE LPAR COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production var_spec_bis -> LPAR var_spec RPAR
-- On RPAR reduce production var_spec_bis -> LPAR var_spec RPAR
-- On RBRACE reduce production var_spec_bis -> LPAR var_spec RPAR
-- On LSQUARE reduce production var_spec_bis -> LPAR var_spec RPAR
-- On LPAR reduce production var_spec_bis -> LPAR var_spec RPAR
-- On COMMA reduce production var_spec_bis -> LPAR var_spec RPAR

State 238:
## Known stack suffix:
## stars
## LR(1) items:
stars -> stars . STAR [ STAR LPAR IDENTIFIER ]
var_spec -> stars . var_spec_bis [ SEMICOLON RPAR RBRACE COMMA ]
## Transitions:
-- On STAR shift to state 169
-- On LPAR shift to state 228
-- On IDENTIFIER shift to state 220
-- On var_spec_bis shift to state 239
-- On identifier shift to state 240
## Reductions:

State 239:
## Known stack suffix:
## stars var_spec_bis
## LR(1) items:
var_spec -> stars var_spec_bis . [ SEMICOLON RPAR RBRACE COMMA ]
var_spec_bis -> var_spec_bis . LSQUARE constant_option RSQUARE [ SEMICOLON RPAR RBRACE LSQUARE LPAR COMMA ]
var_spec_bis -> var_spec_bis . LPAR abs_param_type_list RPAR [ SEMICOLON RPAR RBRACE LSQUARE LPAR COMMA ]
## Transitions:
-- On LSQUARE shift to state 230
-- On LPAR shift to state 233
## Reductions:
-- On SEMICOLON reduce production var_spec -> stars var_spec_bis
-- On RPAR reduce production var_spec -> stars var_spec_bis
-- On RBRACE reduce production var_spec -> stars var_spec_bis
-- On COMMA reduce production var_spec -> stars var_spec_bis

State 240:
## Known stack suffix:
## identifier
## LR(1) items:
var_spec_bis -> identifier . [ SEMICOLON RPAR RBRACE LSQUARE LPAR COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production var_spec_bis -> identifier
-- On RPAR reduce production var_spec_bis -> identifier
-- On RBRACE reduce production var_spec_bis -> identifier
-- On LSQUARE reduce production var_spec_bis -> identifier
-- On LPAR reduce production var_spec_bis -> identifier
-- On COMMA reduce production var_spec_bis -> identifier

State 241:
## Known stack suffix:
## type_spec var_spec
## LR(1) items:
decl_spec -> type_spec var_spec . [ SEMICOLON RBRACE COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production decl_spec -> type_spec var_spec
-- On RBRACE reduce production decl_spec -> type_spec var_spec
-- On COMMA reduce production decl_spec -> type_spec var_spec

State 242:
## Known stack suffix:
## decl_spec
## LR(1) items:
binders_reentrance -> decl_spec . [ SEMICOLON RBRACE COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production binders_reentrance -> decl_spec
-- On RBRACE reduce production binders_reentrance -> decl_spec
-- On COMMA reduce production binders_reentrance -> decl_spec

State 243:
## Known stack suffix:
## binders_reentrance
## LR(1) items:
binders -> binders_reentrance . [ SEMICOLON RBRACE ]
binders_reentrance -> binders_reentrance . COMMA decl_spec [ SEMICOLON RBRACE COMMA ]
binders_reentrance -> binders_reentrance . COMMA var_spec [ SEMICOLON RBRACE COMMA ]
## Transitions:
-- On COMMA shift to state 244
## Reductions:
-- On SEMICOLON reduce production binders -> binders_reentrance
-- On RBRACE reduce production binders -> binders_reentrance

State 244:
## Known stack suffix:
## binders_reentrance COMMA
## LR(1) items:
binders_reentrance -> binders_reentrance COMMA . decl_spec [ SEMICOLON RBRACE COMMA ]
binders_reentrance -> binders_reentrance COMMA . var_spec [ SEMICOLON RBRACE COMMA ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On STAR shift to state 158
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LPAR shift to state 228
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On IDENTIFIER shift to state 220
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On var_spec_bis shift to state 229
-- On var_spec shift to state 245
-- On type_spec shift to state 227
-- On stars shift to state 238
-- On identifier shift to state 240
-- On decl_spec shift to state 246
## Reductions:

State 245:
## Known stack suffix:
## binders_reentrance COMMA var_spec
## LR(1) items:
binders_reentrance -> binders_reentrance COMMA var_spec . [ SEMICOLON RBRACE COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production binders_reentrance -> binders_reentrance COMMA var_spec
-- On RBRACE reduce production binders_reentrance -> binders_reentrance COMMA var_spec
-- On COMMA reduce production binders_reentrance -> binders_reentrance COMMA var_spec

State 246:
## Known stack suffix:
## binders_reentrance COMMA decl_spec
## LR(1) items:
binders_reentrance -> binders_reentrance COMMA decl_spec . [ SEMICOLON RBRACE COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production binders_reentrance -> binders_reentrance COMMA decl_spec
-- On RBRACE reduce production binders_reentrance -> binders_reentrance COMMA decl_spec
-- On COMMA reduce production binders_reentrance -> binders_reentrance COMMA decl_spec

State 247:
## Known stack suffix:
## LAMBDA binders
## LR(1) items:
lexpr_binder -> LAMBDA binders . SEMICOLON lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On SEMICOLON shift to state 248
## Reductions:

State 248:
## Known stack suffix:
## LAMBDA binders SEMICOLON
## LR(1) items:
lexpr_binder -> LAMBDA binders SEMICOLON . lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 425
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 249:
## Known stack suffix:
## INTER
## LR(1) items:
lexpr_inner -> INTER . LPAR lexpr_list RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 250
## Reductions:

State 250:
## Known stack suffix:
## INTER LPAR
## LR(1) items:
lexpr_inner -> INTER LPAR . lexpr_list RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_lexpr_list shift to state 408
-- On lexpr_rel shift to state 301
-- On lexpr_list shift to state 423
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 329
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:
-- On RPAR reduce production lexpr_list ->

State 251:
## Known stack suffix:
## INITIALIZED
## LR(1) items:
lexpr_inner -> INITIALIZED . opt_label_1 LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LBRACE shift to state 7
-- On opt_label_list shift to state 88
-- On opt_label_1 shift to state 252
## Reductions:
-- On LPAR reduce production opt_label_list ->

State 252:
## Known stack suffix:
## INITIALIZED opt_label_1
## LR(1) items:
lexpr_inner -> INITIALIZED opt_label_1 . LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 253
## Reductions:

State 253:
## Known stack suffix:
## INITIALIZED opt_label_1 LPAR
## LR(1) items:
lexpr_inner -> INITIALIZED opt_label_1 LPAR . lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 421
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 254:
## Known stack suffix:
## IDENTIFIER
## LR(1) items:
identifier -> IDENTIFIER . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LPAR LE LBRACE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
identifier_or_typename -> IDENTIFIER . [ COLON ]
## Transitions:
## Reductions:
-- On WRITES reduce production identifier -> IDENTIFIER
-- On WITH reduce production identifier -> IDENTIFIER
-- On STAR reduce production identifier -> IDENTIFIER
-- On SLASH reduce production identifier -> IDENTIFIER
-- On SEMICOLON reduce production identifier -> IDENTIFIER
-- On RSQUARE reduce production identifier -> IDENTIFIER
-- On RPAR reduce production identifier -> IDENTIFIER
-- On RETURNS reduce production identifier -> IDENTIFIER
-- On REQUIRES reduce production identifier -> IDENTIFIER
-- On READS reduce production identifier -> IDENTIFIER
-- On RBRACE reduce production identifier -> IDENTIFIER
-- On QUESTION reduce production identifier -> IDENTIFIER
-- On PLUS reduce production identifier -> IDENTIFIER
-- On PIPE reduce production identifier -> IDENTIFIER
-- On PERCENT reduce production identifier -> IDENTIFIER
-- On OR reduce production identifier -> IDENTIFIER
-- On NE reduce production identifier -> IDENTIFIER
-- On MINUS reduce production identifier -> IDENTIFIER
-- On LTLT reduce production identifier -> IDENTIFIER
-- On LTCOLON reduce production identifier -> IDENTIFIER
-- On LT reduce production identifier -> IDENTIFIER
-- On LSQUARE reduce production identifier -> IDENTIFIER
-- On LPAR reduce production identifier -> IDENTIFIER
-- On LE reduce production identifier -> IDENTIFIER
-- On LBRACE reduce production identifier -> IDENTIFIER
-- On IMPLIES reduce production identifier -> IDENTIFIER
-- On IFF reduce production identifier -> IDENTIFIER
-- On IDENTIFIER reduce production identifier -> IDENTIFIER
-- On HATHAT reduce production identifier -> IDENTIFIER
-- On HAT reduce production identifier -> IDENTIFIER
-- On GTGT reduce production identifier -> IDENTIFIER
-- On GT reduce production identifier -> IDENTIFIER
-- On GE reduce production identifier -> IDENTIFIER
-- On FROM reduce production identifier -> IDENTIFIER
-- On FREES reduce production identifier -> IDENTIFIER
-- On FOR reduce production identifier -> IDENTIFIER
-- On EXITS reduce production identifier -> IDENTIFIER
-- On EQUAL reduce production identifier -> IDENTIFIER
-- On EQ reduce production identifier -> IDENTIFIER
-- On EOF reduce production identifier -> IDENTIFIER
-- On ENSURES reduce production identifier -> IDENTIFIER
-- On DOTDOT reduce production identifier -> IDENTIFIER
-- On DOT reduce production identifier -> IDENTIFIER
-- On DISJOINT reduce production identifier -> IDENTIFIER
-- On DECREASES reduce production identifier -> IDENTIFIER
-- On CONTINUES reduce production identifier -> IDENTIFIER
-- On COMPLETE reduce production identifier -> IDENTIFIER
-- On COMMA reduce production identifier -> IDENTIFIER
-- On COLONGT reduce production identifier -> IDENTIFIER
-- On COLON2 reduce production identifier -> IDENTIFIER
-- On COLON reduce production identifier_or_typename -> IDENTIFIER
-- On BREAKS reduce production identifier -> IDENTIFIER
-- On BIMPLIES reduce production identifier -> IDENTIFIER
-- On BIFF reduce production identifier -> IDENTIFIER
-- On BEHAVIOR reduce production identifier -> IDENTIFIER
-- On ASSUMES reduce production identifier -> IDENTIFIER
-- On ASSIGNS reduce production identifier -> IDENTIFIER
-- On ARROW reduce production identifier -> IDENTIFIER
-- On AND reduce production identifier -> IDENTIFIER
-- On AMP reduce production identifier -> IDENTIFIER
-- On ALLOCATES reduce production identifier -> IDENTIFIER

State 255:
## Known stack suffix:
## FRESH
## LR(1) items:
lexpr_inner -> FRESH . opt_label_2 LPAR lexpr COMMA lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LBRACE shift to state 7
-- On opt_label_list shift to state 256
-- On opt_label_2 shift to state 257
## Reductions:
-- On LPAR reduce production opt_label_list ->

State 256:
## Known stack suffix:
## opt_label_list
## LR(1) items:
opt_label_2 -> opt_label_list . [ LPAR ]
## Transitions:
## Reductions:
-- On LPAR reduce production opt_label_2 -> opt_label_list

State 257:
## Known stack suffix:
## FRESH opt_label_2
## LR(1) items:
lexpr_inner -> FRESH opt_label_2 . LPAR lexpr COMMA lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 258
## Reductions:

State 258:
## Known stack suffix:
## FRESH opt_label_2 LPAR
## LR(1) items:
lexpr_inner -> FRESH opt_label_2 LPAR . lexpr COMMA lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 417
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 259:
## Known stack suffix:
## FREEABLE
## LR(1) items:
lexpr_inner -> FREEABLE . opt_label_1 LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LBRACE shift to state 7
-- On opt_label_list shift to state 88
-- On opt_label_1 shift to state 260
## Reductions:
-- On LPAR reduce production opt_label_list ->

State 260:
## Known stack suffix:
## FREEABLE opt_label_1
## LR(1) items:
lexpr_inner -> FREEABLE opt_label_1 . LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 261
## Reductions:

State 261:
## Known stack suffix:
## FREEABLE opt_label_1 LPAR
## LR(1) items:
lexpr_inner -> FREEABLE opt_label_1 LPAR . lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 415
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 262:
## Known stack suffix:
## FORALL
## LR(1) items:
lexpr_binder -> FORALL . binders SEMICOLON lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 227
-- On decl_spec shift to state 242
-- On binders_reentrance shift to state 243
-- On binders shift to state 263
## Reductions:

State 263:
## Known stack suffix:
## FORALL binders
## LR(1) items:
lexpr_binder -> FORALL binders . SEMICOLON lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On SEMICOLON shift to state 264
## Reductions:

State 264:
## Known stack suffix:
## FORALL binders SEMICOLON
## LR(1) items:
lexpr_binder -> FORALL binders SEMICOLON . lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 414
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 265:
## Known stack suffix:
## FALSE
## LR(1) items:
lexpr_inner -> FALSE . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> FALSE
-- On WITH reduce production lexpr_inner -> FALSE
-- On STAR reduce production lexpr_inner -> FALSE
-- On SLASH reduce production lexpr_inner -> FALSE
-- On SEMICOLON reduce production lexpr_inner -> FALSE
-- On RSQUARE reduce production lexpr_inner -> FALSE
-- On RPAR reduce production lexpr_inner -> FALSE
-- On RETURNS reduce production lexpr_inner -> FALSE
-- On REQUIRES reduce production lexpr_inner -> FALSE
-- On READS reduce production lexpr_inner -> FALSE
-- On RBRACE reduce production lexpr_inner -> FALSE
-- On QUESTION reduce production lexpr_inner -> FALSE
-- On PLUS reduce production lexpr_inner -> FALSE
-- On PIPE reduce production lexpr_inner -> FALSE
-- On PERCENT reduce production lexpr_inner -> FALSE
-- On OR reduce production lexpr_inner -> FALSE
-- On NE reduce production lexpr_inner -> FALSE
-- On MINUS reduce production lexpr_inner -> FALSE
-- On LTLT reduce production lexpr_inner -> FALSE
-- On LTCOLON reduce production lexpr_inner -> FALSE
-- On LT reduce production lexpr_inner -> FALSE
-- On LSQUARE reduce production lexpr_inner -> FALSE
-- On LE reduce production lexpr_inner -> FALSE
-- On IMPLIES reduce production lexpr_inner -> FALSE
-- On IFF reduce production lexpr_inner -> FALSE
-- On IDENTIFIER reduce production lexpr_inner -> FALSE
-- On HATHAT reduce production lexpr_inner -> FALSE
-- On HAT reduce production lexpr_inner -> FALSE
-- On GTGT reduce production lexpr_inner -> FALSE
-- On GT reduce production lexpr_inner -> FALSE
-- On GE reduce production lexpr_inner -> FALSE
-- On FROM reduce production lexpr_inner -> FALSE
-- On FREES reduce production lexpr_inner -> FALSE
-- On FOR reduce production lexpr_inner -> FALSE
-- On EXITS reduce production lexpr_inner -> FALSE
-- On EQUAL reduce production lexpr_inner -> FALSE
-- On EQ reduce production lexpr_inner -> FALSE
-- On EOF reduce production lexpr_inner -> FALSE
-- On ENSURES reduce production lexpr_inner -> FALSE
-- On DOTDOT reduce production lexpr_inner -> FALSE
-- On DOT reduce production lexpr_inner -> FALSE
-- On DISJOINT reduce production lexpr_inner -> FALSE
-- On DECREASES reduce production lexpr_inner -> FALSE
-- On CONTINUES reduce production lexpr_inner -> FALSE
-- On COMPLETE reduce production lexpr_inner -> FALSE
-- On COMMA reduce production lexpr_inner -> FALSE
-- On COLONGT reduce production lexpr_inner -> FALSE
-- On COLON2 reduce production lexpr_inner -> FALSE
-- On BREAKS reduce production lexpr_inner -> FALSE
-- On BIMPLIES reduce production lexpr_inner -> FALSE
-- On BIFF reduce production lexpr_inner -> FALSE
-- On BEHAVIOR reduce production lexpr_inner -> FALSE
-- On ASSUMES reduce production lexpr_inner -> FALSE
-- On ASSIGNS reduce production lexpr_inner -> FALSE
-- On ARROW reduce production lexpr_inner -> FALSE
-- On AND reduce production lexpr_inner -> FALSE
-- On AMP reduce production lexpr_inner -> FALSE
-- On ALLOCATES reduce production lexpr_inner -> FALSE

State 266:
## Known stack suffix:
## EXISTS
## LR(1) items:
lexpr_binder -> EXISTS . binders SEMICOLON lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 227
-- On decl_spec shift to state 242
-- On binders_reentrance shift to state 243
-- On binders shift to state 267
## Reductions:

State 267:
## Known stack suffix:
## EXISTS binders
## LR(1) items:
lexpr_binder -> EXISTS binders . SEMICOLON lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On SEMICOLON shift to state 268
## Reductions:

State 268:
## Known stack suffix:
## EXISTS binders SEMICOLON
## LR(1) items:
lexpr_binder -> EXISTS binders SEMICOLON . lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 413
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 269:
## Known stack suffix:
## EMPTY
## LR(1) items:
lexpr_inner -> EMPTY . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> EMPTY
-- On WITH reduce production lexpr_inner -> EMPTY
-- On STAR reduce production lexpr_inner -> EMPTY
-- On SLASH reduce production lexpr_inner -> EMPTY
-- On SEMICOLON reduce production lexpr_inner -> EMPTY
-- On RSQUARE reduce production lexpr_inner -> EMPTY
-- On RPAR reduce production lexpr_inner -> EMPTY
-- On RETURNS reduce production lexpr_inner -> EMPTY
-- On REQUIRES reduce production lexpr_inner -> EMPTY
-- On READS reduce production lexpr_inner -> EMPTY
-- On RBRACE reduce production lexpr_inner -> EMPTY
-- On QUESTION reduce production lexpr_inner -> EMPTY
-- On PLUS reduce production lexpr_inner -> EMPTY
-- On PIPE reduce production lexpr_inner -> EMPTY
-- On PERCENT reduce production lexpr_inner -> EMPTY
-- On OR reduce production lexpr_inner -> EMPTY
-- On NE reduce production lexpr_inner -> EMPTY
-- On MINUS reduce production lexpr_inner -> EMPTY
-- On LTLT reduce production lexpr_inner -> EMPTY
-- On LTCOLON reduce production lexpr_inner -> EMPTY
-- On LT reduce production lexpr_inner -> EMPTY
-- On LSQUARE reduce production lexpr_inner -> EMPTY
-- On LE reduce production lexpr_inner -> EMPTY
-- On IMPLIES reduce production lexpr_inner -> EMPTY
-- On IFF reduce production lexpr_inner -> EMPTY
-- On IDENTIFIER reduce production lexpr_inner -> EMPTY
-- On HATHAT reduce production lexpr_inner -> EMPTY
-- On HAT reduce production lexpr_inner -> EMPTY
-- On GTGT reduce production lexpr_inner -> EMPTY
-- On GT reduce production lexpr_inner -> EMPTY
-- On GE reduce production lexpr_inner -> EMPTY
-- On FROM reduce production lexpr_inner -> EMPTY
-- On FREES reduce production lexpr_inner -> EMPTY
-- On FOR reduce production lexpr_inner -> EMPTY
-- On EXITS reduce production lexpr_inner -> EMPTY
-- On EQUAL reduce production lexpr_inner -> EMPTY
-- On EQ reduce production lexpr_inner -> EMPTY
-- On EOF reduce production lexpr_inner -> EMPTY
-- On ENSURES reduce production lexpr_inner -> EMPTY
-- On DOTDOT reduce production lexpr_inner -> EMPTY
-- On DOT reduce production lexpr_inner -> EMPTY
-- On DISJOINT reduce production lexpr_inner -> EMPTY
-- On DECREASES reduce production lexpr_inner -> EMPTY
-- On CONTINUES reduce production lexpr_inner -> EMPTY
-- On COMPLETE reduce production lexpr_inner -> EMPTY
-- On COMMA reduce production lexpr_inner -> EMPTY
-- On COLONGT reduce production lexpr_inner -> EMPTY
-- On COLON2 reduce production lexpr_inner -> EMPTY
-- On BREAKS reduce production lexpr_inner -> EMPTY
-- On BIMPLIES reduce production lexpr_inner -> EMPTY
-- On BIFF reduce production lexpr_inner -> EMPTY
-- On BEHAVIOR reduce production lexpr_inner -> EMPTY
-- On ASSUMES reduce production lexpr_inner -> EMPTY
-- On ASSIGNS reduce production lexpr_inner -> EMPTY
-- On ARROW reduce production lexpr_inner -> EMPTY
-- On AND reduce production lexpr_inner -> EMPTY
-- On AMP reduce production lexpr_inner -> EMPTY
-- On ALLOCATES reduce production lexpr_inner -> EMPTY

State 270:
## Known stack suffix:
## DYNAMIC
## LR(1) items:
lexpr_inner -> DYNAMIC . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> DYNAMIC
-- On WITH reduce production lexpr_inner -> DYNAMIC
-- On STAR reduce production lexpr_inner -> DYNAMIC
-- On SLASH reduce production lexpr_inner -> DYNAMIC
-- On SEMICOLON reduce production lexpr_inner -> DYNAMIC
-- On RSQUARE reduce production lexpr_inner -> DYNAMIC
-- On RPAR reduce production lexpr_inner -> DYNAMIC
-- On RETURNS reduce production lexpr_inner -> DYNAMIC
-- On REQUIRES reduce production lexpr_inner -> DYNAMIC
-- On READS reduce production lexpr_inner -> DYNAMIC
-- On RBRACE reduce production lexpr_inner -> DYNAMIC
-- On QUESTION reduce production lexpr_inner -> DYNAMIC
-- On PLUS reduce production lexpr_inner -> DYNAMIC
-- On PIPE reduce production lexpr_inner -> DYNAMIC
-- On PERCENT reduce production lexpr_inner -> DYNAMIC
-- On OR reduce production lexpr_inner -> DYNAMIC
-- On NE reduce production lexpr_inner -> DYNAMIC
-- On MINUS reduce production lexpr_inner -> DYNAMIC
-- On LTLT reduce production lexpr_inner -> DYNAMIC
-- On LTCOLON reduce production lexpr_inner -> DYNAMIC
-- On LT reduce production lexpr_inner -> DYNAMIC
-- On LSQUARE reduce production lexpr_inner -> DYNAMIC
-- On LE reduce production lexpr_inner -> DYNAMIC
-- On IMPLIES reduce production lexpr_inner -> DYNAMIC
-- On IFF reduce production lexpr_inner -> DYNAMIC
-- On IDENTIFIER reduce production lexpr_inner -> DYNAMIC
-- On HATHAT reduce production lexpr_inner -> DYNAMIC
-- On HAT reduce production lexpr_inner -> DYNAMIC
-- On GTGT reduce production lexpr_inner -> DYNAMIC
-- On GT reduce production lexpr_inner -> DYNAMIC
-- On GE reduce production lexpr_inner -> DYNAMIC
-- On FROM reduce production lexpr_inner -> DYNAMIC
-- On FREES reduce production lexpr_inner -> DYNAMIC
-- On FOR reduce production lexpr_inner -> DYNAMIC
-- On EXITS reduce production lexpr_inner -> DYNAMIC
-- On EQUAL reduce production lexpr_inner -> DYNAMIC
-- On EQ reduce production lexpr_inner -> DYNAMIC
-- On EOF reduce production lexpr_inner -> DYNAMIC
-- On ENSURES reduce production lexpr_inner -> DYNAMIC
-- On DOTDOT reduce production lexpr_inner -> DYNAMIC
-- On DOT reduce production lexpr_inner -> DYNAMIC
-- On DISJOINT reduce production lexpr_inner -> DYNAMIC
-- On DECREASES reduce production lexpr_inner -> DYNAMIC
-- On CONTINUES reduce production lexpr_inner -> DYNAMIC
-- On COMPLETE reduce production lexpr_inner -> DYNAMIC
-- On COMMA reduce production lexpr_inner -> DYNAMIC
-- On COLONGT reduce production lexpr_inner -> DYNAMIC
-- On COLON2 reduce production lexpr_inner -> DYNAMIC
-- On BREAKS reduce production lexpr_inner -> DYNAMIC
-- On BIMPLIES reduce production lexpr_inner -> DYNAMIC
-- On BIFF reduce production lexpr_inner -> DYNAMIC
-- On BEHAVIOR reduce production lexpr_inner -> DYNAMIC
-- On ASSUMES reduce production lexpr_inner -> DYNAMIC
-- On ASSIGNS reduce production lexpr_inner -> DYNAMIC
-- On ARROW reduce production lexpr_inner -> DYNAMIC
-- On AND reduce production lexpr_inner -> DYNAMIC
-- On AMP reduce production lexpr_inner -> DYNAMIC
-- On ALLOCATES reduce production lexpr_inner -> DYNAMIC

State 271:
## Known stack suffix:
## DANGLING
## LR(1) items:
lexpr_inner -> DANGLING . opt_label_1 LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LBRACE shift to state 7
-- On opt_label_list shift to state 88
-- On opt_label_1 shift to state 272
## Reductions:
-- On LPAR reduce production opt_label_list ->

State 272:
## Known stack suffix:
## DANGLING opt_label_1
## LR(1) items:
lexpr_inner -> DANGLING opt_label_1 . LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 273
## Reductions:

State 273:
## Known stack suffix:
## DANGLING opt_label_1 LPAR
## LR(1) items:
lexpr_inner -> DANGLING opt_label_1 LPAR . lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 411
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 274:
## Known stack suffix:
## BSUNION
## LR(1) items:
lexpr_inner -> BSUNION . LPAR lexpr_list RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 275
## Reductions:

State 275:
## Known stack suffix:
## BSUNION LPAR
## LR(1) items:
lexpr_inner -> BSUNION LPAR . lexpr_list RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_lexpr_list shift to state 408
-- On lexpr_rel shift to state 301
-- On lexpr_list shift to state 409
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 329
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:
-- On RPAR reduce production lexpr_list ->

State 276:
## Known stack suffix:
## BSTYPE
## LR(1) items:
lexpr_inner -> BSTYPE . LPAR type_spec RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> BSTYPE . LPAR type_spec stars RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 277
## Reductions:

State 277:
## Known stack suffix:
## BSTYPE LPAR
## LR(1) items:
lexpr_inner -> BSTYPE LPAR . type_spec RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> BSTYPE LPAR . type_spec stars RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 278
## Reductions:

State 278:
## Known stack suffix:
## BSTYPE LPAR type_spec
## LR(1) items:
lexpr_inner -> BSTYPE LPAR type_spec . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> BSTYPE LPAR type_spec . stars RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On STAR shift to state 158
-- On RPAR shift to state 279
-- On stars shift to state 280
## Reductions:

State 279:
## Known stack suffix:
## BSTYPE LPAR type_spec RPAR
## LR(1) items:
lexpr_inner -> BSTYPE LPAR type_spec RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On WITH reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On STAR reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On SLASH reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On SEMICOLON reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On RSQUARE reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On RPAR reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On RETURNS reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On REQUIRES reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On READS reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On RBRACE reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On QUESTION reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On PLUS reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On PIPE reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On PERCENT reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On OR reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On NE reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On MINUS reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On LTLT reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On LTCOLON reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On LT reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On LSQUARE reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On LE reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On IMPLIES reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On IFF reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On IDENTIFIER reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On HATHAT reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On HAT reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On GTGT reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On GT reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On GE reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On FROM reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On FREES reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On FOR reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On EXITS reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On EQUAL reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On EQ reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On EOF reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On ENSURES reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On DOTDOT reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On DOT reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On DISJOINT reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On DECREASES reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On CONTINUES reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On COMPLETE reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On COMMA reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On COLONGT reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On COLON2 reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On BREAKS reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On BIMPLIES reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On BIFF reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On BEHAVIOR reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On ASSUMES reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On ASSIGNS reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On ARROW reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On AND reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On AMP reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR
-- On ALLOCATES reduce production lexpr_inner -> BSTYPE LPAR type_spec RPAR

State 280:
## Known stack suffix:
## BSTYPE LPAR type_spec stars
## LR(1) items:
lexpr_inner -> BSTYPE LPAR type_spec stars . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
stars -> stars . STAR [ STAR RPAR ]
## Transitions:
-- On STAR shift to state 169
-- On RPAR shift to state 281
## Reductions:

State 281:
## Known stack suffix:
## BSTYPE LPAR type_spec stars RPAR
## LR(1) items:
lexpr_inner -> BSTYPE LPAR type_spec stars RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On WITH reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On STAR reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On SLASH reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On SEMICOLON reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On RSQUARE reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On RPAR reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On RETURNS reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On REQUIRES reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On READS reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On RBRACE reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On QUESTION reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On PLUS reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On PIPE reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On PERCENT reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On OR reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On NE reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On MINUS reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On LTLT reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On LTCOLON reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On LT reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On LSQUARE reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On LE reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On IMPLIES reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On IFF reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On IDENTIFIER reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On HATHAT reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On HAT reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On GTGT reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On GT reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On GE reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On FROM reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On FREES reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On FOR reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On EXITS reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On EQUAL reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On EQ reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On EOF reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On ENSURES reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On DOTDOT reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On DOT reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On DISJOINT reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On DECREASES reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On CONTINUES reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On COMPLETE reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On COMMA reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On COLONGT reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On COLON2 reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On BREAKS reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On BIMPLIES reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On BIFF reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On BEHAVIOR reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On ASSUMES reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On ASSIGNS reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On ARROW reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On AND reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On AMP reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR
-- On ALLOCATES reduce production lexpr_inner -> BSTYPE LPAR type_spec stars RPAR

State 282:
## Known stack suffix:
## BLOCK_LENGTH
## LR(1) items:
lexpr_inner -> BLOCK_LENGTH . opt_label_1 LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LBRACE shift to state 7
-- On opt_label_list shift to state 88
-- On opt_label_1 shift to state 283
## Reductions:
-- On LPAR reduce production opt_label_list ->

State 283:
## Known stack suffix:
## BLOCK_LENGTH opt_label_1
## LR(1) items:
lexpr_inner -> BLOCK_LENGTH opt_label_1 . LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 284
## Reductions:

State 284:
## Known stack suffix:
## BLOCK_LENGTH opt_label_1 LPAR
## LR(1) items:
lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR . lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 406
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 285:
## Known stack suffix:
## BASE_ADDR
## LR(1) items:
lexpr_inner -> BASE_ADDR . opt_label_1 LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LBRACE shift to state 7
-- On opt_label_list shift to state 88
-- On opt_label_1 shift to state 286
## Reductions:
-- On LPAR reduce production opt_label_list ->

State 286:
## Known stack suffix:
## BASE_ADDR opt_label_1
## LR(1) items:
lexpr_inner -> BASE_ADDR opt_label_1 . LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 287
## Reductions:

State 287:
## Known stack suffix:
## BASE_ADDR opt_label_1 LPAR
## LR(1) items:
lexpr_inner -> BASE_ADDR opt_label_1 LPAR . lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 404
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 288:
## Known stack suffix:
## AUTOMATIC
## LR(1) items:
lexpr_inner -> AUTOMATIC . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> AUTOMATIC
-- On WITH reduce production lexpr_inner -> AUTOMATIC
-- On STAR reduce production lexpr_inner -> AUTOMATIC
-- On SLASH reduce production lexpr_inner -> AUTOMATIC
-- On SEMICOLON reduce production lexpr_inner -> AUTOMATIC
-- On RSQUARE reduce production lexpr_inner -> AUTOMATIC
-- On RPAR reduce production lexpr_inner -> AUTOMATIC
-- On RETURNS reduce production lexpr_inner -> AUTOMATIC
-- On REQUIRES reduce production lexpr_inner -> AUTOMATIC
-- On READS reduce production lexpr_inner -> AUTOMATIC
-- On RBRACE reduce production lexpr_inner -> AUTOMATIC
-- On QUESTION reduce production lexpr_inner -> AUTOMATIC
-- On PLUS reduce production lexpr_inner -> AUTOMATIC
-- On PIPE reduce production lexpr_inner -> AUTOMATIC
-- On PERCENT reduce production lexpr_inner -> AUTOMATIC
-- On OR reduce production lexpr_inner -> AUTOMATIC
-- On NE reduce production lexpr_inner -> AUTOMATIC
-- On MINUS reduce production lexpr_inner -> AUTOMATIC
-- On LTLT reduce production lexpr_inner -> AUTOMATIC
-- On LTCOLON reduce production lexpr_inner -> AUTOMATIC
-- On LT reduce production lexpr_inner -> AUTOMATIC
-- On LSQUARE reduce production lexpr_inner -> AUTOMATIC
-- On LE reduce production lexpr_inner -> AUTOMATIC
-- On IMPLIES reduce production lexpr_inner -> AUTOMATIC
-- On IFF reduce production lexpr_inner -> AUTOMATIC
-- On IDENTIFIER reduce production lexpr_inner -> AUTOMATIC
-- On HATHAT reduce production lexpr_inner -> AUTOMATIC
-- On HAT reduce production lexpr_inner -> AUTOMATIC
-- On GTGT reduce production lexpr_inner -> AUTOMATIC
-- On GT reduce production lexpr_inner -> AUTOMATIC
-- On GE reduce production lexpr_inner -> AUTOMATIC
-- On FROM reduce production lexpr_inner -> AUTOMATIC
-- On FREES reduce production lexpr_inner -> AUTOMATIC
-- On FOR reduce production lexpr_inner -> AUTOMATIC
-- On EXITS reduce production lexpr_inner -> AUTOMATIC
-- On EQUAL reduce production lexpr_inner -> AUTOMATIC
-- On EQ reduce production lexpr_inner -> AUTOMATIC
-- On EOF reduce production lexpr_inner -> AUTOMATIC
-- On ENSURES reduce production lexpr_inner -> AUTOMATIC
-- On DOTDOT reduce production lexpr_inner -> AUTOMATIC
-- On DOT reduce production lexpr_inner -> AUTOMATIC
-- On DISJOINT reduce production lexpr_inner -> AUTOMATIC
-- On DECREASES reduce production lexpr_inner -> AUTOMATIC
-- On CONTINUES reduce production lexpr_inner -> AUTOMATIC
-- On COMPLETE reduce production lexpr_inner -> AUTOMATIC
-- On COMMA reduce production lexpr_inner -> AUTOMATIC
-- On COLONGT reduce production lexpr_inner -> AUTOMATIC
-- On COLON2 reduce production lexpr_inner -> AUTOMATIC
-- On BREAKS reduce production lexpr_inner -> AUTOMATIC
-- On BIMPLIES reduce production lexpr_inner -> AUTOMATIC
-- On BIFF reduce production lexpr_inner -> AUTOMATIC
-- On BEHAVIOR reduce production lexpr_inner -> AUTOMATIC
-- On ASSUMES reduce production lexpr_inner -> AUTOMATIC
-- On ASSIGNS reduce production lexpr_inner -> AUTOMATIC
-- On ARROW reduce production lexpr_inner -> AUTOMATIC
-- On AND reduce production lexpr_inner -> AUTOMATIC
-- On AMP reduce production lexpr_inner -> AUTOMATIC
-- On ALLOCATES reduce production lexpr_inner -> AUTOMATIC

State 289:
## Known stack suffix:
## AT
## LR(1) items:
lexpr_inner -> AT . LPAR lexpr COMMA label_name RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 290
## Reductions:

State 290:
## Known stack suffix:
## AT LPAR
## LR(1) items:
lexpr_inner -> AT LPAR . lexpr COMMA label_name RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 400
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 291:
## Known stack suffix:
## AMP
## LR(1) items:
lexpr_inner -> AMP . lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 212
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LBRACE shift to state 224
-- On INTER shift to state 249
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FALSE shift to state 265
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On string shift to state 304
-- On lexpr_inner shift to state 399
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 292:
## Known stack suffix:
## ALLOCATION
## LR(1) items:
lexpr_inner -> ALLOCATION . opt_label_1 LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LBRACE shift to state 7
-- On opt_label_list shift to state 88
-- On opt_label_1 shift to state 293
## Reductions:
-- On LPAR reduce production opt_label_list ->

State 293:
## Known stack suffix:
## ALLOCATION opt_label_1
## LR(1) items:
lexpr_inner -> ALLOCATION opt_label_1 . LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 294
## Reductions:

State 294:
## Known stack suffix:
## ALLOCATION opt_label_1 LPAR
## LR(1) items:
lexpr_inner -> ALLOCATION opt_label_1 LPAR . lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 397
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 295:
## Known stack suffix:
## ALLOCABLE
## LR(1) items:
lexpr_inner -> ALLOCABLE . opt_label_1 LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LBRACE shift to state 7
-- On opt_label_list shift to state 88
-- On opt_label_1 shift to state 296
## Reductions:
-- On LPAR reduce production opt_label_list ->

State 296:
## Known stack suffix:
## ALLOCABLE opt_label_1
## LR(1) items:
lexpr_inner -> ALLOCABLE opt_label_1 . LPAR lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 297
## Reductions:

State 297:
## Known stack suffix:
## ALLOCABLE opt_label_1 LPAR
## LR(1) items:
lexpr_inner -> ALLOCABLE opt_label_1 LPAR . lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 395
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 298:
## Known stack suffix:
## string
## LR(1) items:
lexpr -> string . COLON lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr_inner -> string . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
string -> string . STRING_LITERAL [ WRITES WITH STRING_LITERAL STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 COLON BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On STRING_LITERAL shift to state 299
-- On COLON shift to state 300
## Reductions:
-- On WRITES reduce production lexpr_inner -> string
-- On WITH reduce production lexpr_inner -> string
-- On STAR reduce production lexpr_inner -> string
-- On SLASH reduce production lexpr_inner -> string
-- On SEMICOLON reduce production lexpr_inner -> string
-- On RSQUARE reduce production lexpr_inner -> string
-- On RPAR reduce production lexpr_inner -> string
-- On RETURNS reduce production lexpr_inner -> string
-- On REQUIRES reduce production lexpr_inner -> string
-- On READS reduce production lexpr_inner -> string
-- On RBRACE reduce production lexpr_inner -> string
-- On QUESTION reduce production lexpr_inner -> string
-- On PLUS reduce production lexpr_inner -> string
-- On PIPE reduce production lexpr_inner -> string
-- On PERCENT reduce production lexpr_inner -> string
-- On OR reduce production lexpr_inner -> string
-- On NE reduce production lexpr_inner -> string
-- On MINUS reduce production lexpr_inner -> string
-- On LTLT reduce production lexpr_inner -> string
-- On LTCOLON reduce production lexpr_inner -> string
-- On LT reduce production lexpr_inner -> string
-- On LSQUARE reduce production lexpr_inner -> string
-- On LE reduce production lexpr_inner -> string
-- On IMPLIES reduce production lexpr_inner -> string
-- On IFF reduce production lexpr_inner -> string
-- On IDENTIFIER reduce production lexpr_inner -> string
-- On HATHAT reduce production lexpr_inner -> string
-- On HAT reduce production lexpr_inner -> string
-- On GTGT reduce production lexpr_inner -> string
-- On GT reduce production lexpr_inner -> string
-- On GE reduce production lexpr_inner -> string
-- On FROM reduce production lexpr_inner -> string
-- On FREES reduce production lexpr_inner -> string
-- On FOR reduce production lexpr_inner -> string
-- On EXITS reduce production lexpr_inner -> string
-- On EQUAL reduce production lexpr_inner -> string
-- On EQ reduce production lexpr_inner -> string
-- On EOF reduce production lexpr_inner -> string
-- On ENSURES reduce production lexpr_inner -> string
-- On DOTDOT reduce production lexpr_inner -> string
-- On DOT reduce production lexpr_inner -> string
-- On DISJOINT reduce production lexpr_inner -> string
-- On DECREASES reduce production lexpr_inner -> string
-- On CONTINUES reduce production lexpr_inner -> string
-- On COMPLETE reduce production lexpr_inner -> string
-- On COMMA reduce production lexpr_inner -> string
-- On COLONGT reduce production lexpr_inner -> string
-- On COLON2 reduce production lexpr_inner -> string
-- On BREAKS reduce production lexpr_inner -> string
-- On BIMPLIES reduce production lexpr_inner -> string
-- On BIFF reduce production lexpr_inner -> string
-- On BEHAVIOR reduce production lexpr_inner -> string
-- On ASSUMES reduce production lexpr_inner -> string
-- On ASSIGNS reduce production lexpr_inner -> string
-- On ARROW reduce production lexpr_inner -> string
-- On AND reduce production lexpr_inner -> string
-- On AMP reduce production lexpr_inner -> string
-- On ALLOCATES reduce production lexpr_inner -> string

State 299:
## Known stack suffix:
## string STRING_LITERAL
## LR(1) items:
string -> string STRING_LITERAL . [ WRITES WITH STRING_LITERAL STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 COLON BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production string -> string STRING_LITERAL
-- On WITH reduce production string -> string STRING_LITERAL
-- On STRING_LITERAL reduce production string -> string STRING_LITERAL
-- On STAR reduce production string -> string STRING_LITERAL
-- On SLASH reduce production string -> string STRING_LITERAL
-- On SEMICOLON reduce production string -> string STRING_LITERAL
-- On RSQUARE reduce production string -> string STRING_LITERAL
-- On RPAR reduce production string -> string STRING_LITERAL
-- On RETURNS reduce production string -> string STRING_LITERAL
-- On REQUIRES reduce production string -> string STRING_LITERAL
-- On READS reduce production string -> string STRING_LITERAL
-- On RBRACE reduce production string -> string STRING_LITERAL
-- On QUESTION reduce production string -> string STRING_LITERAL
-- On PLUS reduce production string -> string STRING_LITERAL
-- On PIPE reduce production string -> string STRING_LITERAL
-- On PERCENT reduce production string -> string STRING_LITERAL
-- On OR reduce production string -> string STRING_LITERAL
-- On NE reduce production string -> string STRING_LITERAL
-- On MINUS reduce production string -> string STRING_LITERAL
-- On LTLT reduce production string -> string STRING_LITERAL
-- On LTCOLON reduce production string -> string STRING_LITERAL
-- On LT reduce production string -> string STRING_LITERAL
-- On LSQUARE reduce production string -> string STRING_LITERAL
-- On LE reduce production string -> string STRING_LITERAL
-- On IMPLIES reduce production string -> string STRING_LITERAL
-- On IFF reduce production string -> string STRING_LITERAL
-- On IDENTIFIER reduce production string -> string STRING_LITERAL
-- On HATHAT reduce production string -> string STRING_LITERAL
-- On HAT reduce production string -> string STRING_LITERAL
-- On GTGT reduce production string -> string STRING_LITERAL
-- On GT reduce production string -> string STRING_LITERAL
-- On GE reduce production string -> string STRING_LITERAL
-- On FROM reduce production string -> string STRING_LITERAL
-- On FREES reduce production string -> string STRING_LITERAL
-- On FOR reduce production string -> string STRING_LITERAL
-- On EXITS reduce production string -> string STRING_LITERAL
-- On EQUAL reduce production string -> string STRING_LITERAL
-- On EQ reduce production string -> string STRING_LITERAL
-- On EOF reduce production string -> string STRING_LITERAL
-- On ENSURES reduce production string -> string STRING_LITERAL
-- On DOTDOT reduce production string -> string STRING_LITERAL
-- On DOT reduce production string -> string STRING_LITERAL
-- On DISJOINT reduce production string -> string STRING_LITERAL
-- On DECREASES reduce production string -> string STRING_LITERAL
-- On CONTINUES reduce production string -> string STRING_LITERAL
-- On COMPLETE reduce production string -> string STRING_LITERAL
-- On COMMA reduce production string -> string STRING_LITERAL
-- On COLONGT reduce production string -> string STRING_LITERAL
-- On COLON2 reduce production string -> string STRING_LITERAL
-- On COLON reduce production string -> string STRING_LITERAL
-- On BREAKS reduce production string -> string STRING_LITERAL
-- On BIMPLIES reduce production string -> string STRING_LITERAL
-- On BIFF reduce production string -> string STRING_LITERAL
-- On BEHAVIOR reduce production string -> string STRING_LITERAL
-- On ASSUMES reduce production string -> string STRING_LITERAL
-- On ASSIGNS reduce production string -> string STRING_LITERAL
-- On ARROW reduce production string -> string STRING_LITERAL
-- On AND reduce production string -> string STRING_LITERAL
-- On AMP reduce production string -> string STRING_LITERAL
-- On ALLOCATES reduce production string -> string STRING_LITERAL

State 300:
## Known stack suffix:
## string COLON
## LR(1) items:
lexpr -> string COLON . lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 394
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 301:
## Known stack suffix:
## lexpr_rel
## LR(1) items:
lexpr -> lexpr_rel . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr -> lexpr_rel
-- On WITH reduce production lexpr -> lexpr_rel
-- On SEMICOLON reduce production lexpr -> lexpr_rel
-- On RSQUARE reduce production lexpr -> lexpr_rel
-- On RPAR reduce production lexpr -> lexpr_rel
-- On RETURNS reduce production lexpr -> lexpr_rel
-- On REQUIRES reduce production lexpr -> lexpr_rel
-- On READS reduce production lexpr -> lexpr_rel
-- On RBRACE reduce production lexpr -> lexpr_rel
-- On QUESTION reduce production lexpr -> lexpr_rel
-- On PIPE reduce production lexpr -> lexpr_rel
-- On OR reduce production lexpr -> lexpr_rel
-- On IMPLIES reduce production lexpr -> lexpr_rel
-- On IFF reduce production lexpr -> lexpr_rel
-- On IDENTIFIER reduce production lexpr -> lexpr_rel
-- On HATHAT reduce production lexpr -> lexpr_rel
-- On HAT reduce production lexpr -> lexpr_rel
-- On FROM reduce production lexpr -> lexpr_rel
-- On FREES reduce production lexpr -> lexpr_rel
-- On FOR reduce production lexpr -> lexpr_rel
-- On EXITS reduce production lexpr -> lexpr_rel
-- On EOF reduce production lexpr -> lexpr_rel
-- On ENSURES reduce production lexpr -> lexpr_rel
-- On DOTDOT reduce production lexpr -> lexpr_rel
-- On DISJOINT reduce production lexpr -> lexpr_rel
-- On DECREASES reduce production lexpr -> lexpr_rel
-- On CONTINUES reduce production lexpr -> lexpr_rel
-- On COMPLETE reduce production lexpr -> lexpr_rel
-- On COMMA reduce production lexpr -> lexpr_rel
-- On COLON2 reduce production lexpr -> lexpr_rel
-- On BREAKS reduce production lexpr -> lexpr_rel
-- On BIMPLIES reduce production lexpr -> lexpr_rel
-- On BIFF reduce production lexpr -> lexpr_rel
-- On BEHAVIOR reduce production lexpr -> lexpr_rel
-- On ASSUMES reduce production lexpr -> lexpr_rel
-- On ASSIGNS reduce production lexpr -> lexpr_rel
-- On AND reduce production lexpr -> lexpr_rel
-- On AMP reduce production lexpr -> lexpr_rel
-- On ALLOCATES reduce production lexpr -> lexpr_rel

State 302:
## Known stack suffix:
## lexpr_inner
## LR(1) items:
lexpr_end_rel -> lexpr_inner . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_rel -> lexpr_inner . rel_list [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On STAR shift to state 303
-- On SLASH shift to state 370
-- On PLUS shift to state 372
-- On PERCENT shift to state 374
-- On NE shift to state 376
-- On MINUS shift to state 377
-- On LTLT shift to state 379
-- On LTCOLON shift to state 306
-- On LT shift to state 381
-- On LSQUARE shift to state 308
-- On LE shift to state 382
-- On GTGT shift to state 383
-- On GT shift to state 385
-- On GE shift to state 386
-- On EQUAL shift to state 387
-- On EQ shift to state 388
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
-- On relation shift to state 389
-- On rel_list shift to state 393
## Reductions:
-- On WRITES reduce production lexpr_end_rel -> lexpr_inner
-- On WITH reduce production lexpr_end_rel -> lexpr_inner
-- On SEMICOLON reduce production lexpr_end_rel -> lexpr_inner
-- On RSQUARE reduce production lexpr_end_rel -> lexpr_inner
-- On RPAR reduce production lexpr_end_rel -> lexpr_inner
-- On RETURNS reduce production lexpr_end_rel -> lexpr_inner
-- On REQUIRES reduce production lexpr_end_rel -> lexpr_inner
-- On READS reduce production lexpr_end_rel -> lexpr_inner
-- On RBRACE reduce production lexpr_end_rel -> lexpr_inner
-- On QUESTION reduce production lexpr_end_rel -> lexpr_inner
-- On PIPE reduce production lexpr_end_rel -> lexpr_inner
-- On OR reduce production lexpr_end_rel -> lexpr_inner
-- On IMPLIES reduce production lexpr_end_rel -> lexpr_inner
-- On IFF reduce production lexpr_end_rel -> lexpr_inner
-- On IDENTIFIER reduce production lexpr_end_rel -> lexpr_inner
-- On HATHAT reduce production lexpr_end_rel -> lexpr_inner
-- On HAT reduce production lexpr_end_rel -> lexpr_inner
-- On FROM reduce production lexpr_end_rel -> lexpr_inner
-- On FREES reduce production lexpr_end_rel -> lexpr_inner
-- On FOR reduce production lexpr_end_rel -> lexpr_inner
-- On EXITS reduce production lexpr_end_rel -> lexpr_inner
-- On EOF reduce production lexpr_end_rel -> lexpr_inner
-- On ENSURES reduce production lexpr_end_rel -> lexpr_inner
-- On DOTDOT reduce production lexpr_end_rel -> lexpr_inner
-- On DISJOINT reduce production lexpr_end_rel -> lexpr_inner
-- On DECREASES reduce production lexpr_end_rel -> lexpr_inner
-- On CONTINUES reduce production lexpr_end_rel -> lexpr_inner
-- On COMPLETE reduce production lexpr_end_rel -> lexpr_inner
-- On COMMA reduce production lexpr_end_rel -> lexpr_inner
-- On COLON2 reduce production lexpr_end_rel -> lexpr_inner
-- On BREAKS reduce production lexpr_end_rel -> lexpr_inner
-- On BIMPLIES reduce production lexpr_end_rel -> lexpr_inner
-- On BIFF reduce production lexpr_end_rel -> lexpr_inner
-- On BEHAVIOR reduce production lexpr_end_rel -> lexpr_inner
-- On ASSUMES reduce production lexpr_end_rel -> lexpr_inner
-- On ASSIGNS reduce production lexpr_end_rel -> lexpr_inner
-- On AND reduce production lexpr_end_rel -> lexpr_inner
-- On AMP reduce production lexpr_end_rel -> lexpr_inner
-- On ALLOCATES reduce production lexpr_end_rel -> lexpr_inner

State 303:
## Known stack suffix:
## lexpr_inner STAR
## LR(1) items:
lexpr_inner -> lexpr_inner STAR . lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 212
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LBRACE shift to state 224
-- On INTER shift to state 249
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FALSE shift to state 265
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On string shift to state 304
-- On lexpr_inner shift to state 305
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 304:
## Known stack suffix:
## string
## LR(1) items:
lexpr_inner -> string . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
string -> string . STRING_LITERAL [ WRITES WITH STRING_LITERAL STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On STRING_LITERAL shift to state 299
## Reductions:
-- On WRITES reduce production lexpr_inner -> string
-- On WITH reduce production lexpr_inner -> string
-- On STAR reduce production lexpr_inner -> string
-- On SLASH reduce production lexpr_inner -> string
-- On SEMICOLON reduce production lexpr_inner -> string
-- On RSQUARE reduce production lexpr_inner -> string
-- On RPAR reduce production lexpr_inner -> string
-- On RETURNS reduce production lexpr_inner -> string
-- On REQUIRES reduce production lexpr_inner -> string
-- On READS reduce production lexpr_inner -> string
-- On RBRACE reduce production lexpr_inner -> string
-- On QUESTION reduce production lexpr_inner -> string
-- On PLUS reduce production lexpr_inner -> string
-- On PIPE reduce production lexpr_inner -> string
-- On PERCENT reduce production lexpr_inner -> string
-- On OR reduce production lexpr_inner -> string
-- On NE reduce production lexpr_inner -> string
-- On MINUS reduce production lexpr_inner -> string
-- On LTLT reduce production lexpr_inner -> string
-- On LTCOLON reduce production lexpr_inner -> string
-- On LT reduce production lexpr_inner -> string
-- On LSQUARE reduce production lexpr_inner -> string
-- On LE reduce production lexpr_inner -> string
-- On IMPLIES reduce production lexpr_inner -> string
-- On IFF reduce production lexpr_inner -> string
-- On IDENTIFIER reduce production lexpr_inner -> string
-- On HATHAT reduce production lexpr_inner -> string
-- On HAT reduce production lexpr_inner -> string
-- On GTGT reduce production lexpr_inner -> string
-- On GT reduce production lexpr_inner -> string
-- On GE reduce production lexpr_inner -> string
-- On FROM reduce production lexpr_inner -> string
-- On FREES reduce production lexpr_inner -> string
-- On FOR reduce production lexpr_inner -> string
-- On EXITS reduce production lexpr_inner -> string
-- On EQUAL reduce production lexpr_inner -> string
-- On EQ reduce production lexpr_inner -> string
-- On EOF reduce production lexpr_inner -> string
-- On ENSURES reduce production lexpr_inner -> string
-- On DOTDOT reduce production lexpr_inner -> string
-- On DOT reduce production lexpr_inner -> string
-- On DISJOINT reduce production lexpr_inner -> string
-- On DECREASES reduce production lexpr_inner -> string
-- On CONTINUES reduce production lexpr_inner -> string
-- On COMPLETE reduce production lexpr_inner -> string
-- On COMMA reduce production lexpr_inner -> string
-- On COLONGT reduce production lexpr_inner -> string
-- On COLON2 reduce production lexpr_inner -> string
-- On BREAKS reduce production lexpr_inner -> string
-- On BIMPLIES reduce production lexpr_inner -> string
-- On BIFF reduce production lexpr_inner -> string
-- On BEHAVIOR reduce production lexpr_inner -> string
-- On ASSUMES reduce production lexpr_inner -> string
-- On ASSIGNS reduce production lexpr_inner -> string
-- On ARROW reduce production lexpr_inner -> string
-- On AND reduce production lexpr_inner -> string
-- On AMP reduce production lexpr_inner -> string
-- On ALLOCATES reduce production lexpr_inner -> string

State 305:
## Known stack suffix:
## lexpr_inner STAR lexpr_inner
## LR(1) items:
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner STAR lexpr_inner . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LTCOLON shift to state 306
-- On LSQUARE shift to state 308
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
## Reductions:
-- On WRITES reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On WITH reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On STAR reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On SLASH reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On SEMICOLON reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On RSQUARE reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On RPAR reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On RETURNS reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On REQUIRES reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On READS reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On RBRACE reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On QUESTION reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On PLUS reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On PIPE reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On PERCENT reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On OR reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On NE reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On MINUS reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On LTLT reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On LT reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On LE reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On IMPLIES reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On IFF reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On IDENTIFIER reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On HATHAT reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On HAT reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On GTGT reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On GT reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On GE reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On FROM reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On FREES reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On FOR reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On EXITS reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On EQUAL reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On EQ reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On EOF reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On ENSURES reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On DOTDOT reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On DISJOINT reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On DECREASES reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On CONTINUES reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On COMPLETE reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On COMMA reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On COLON2 reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On BREAKS reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On BIMPLIES reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On BIFF reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On BEHAVIOR reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On ASSUMES reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On ASSIGNS reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On AND reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On AMP reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner
-- On ALLOCATES reduce production lexpr_inner -> lexpr_inner STAR lexpr_inner

State 306:
## Known stack suffix:
## lexpr_inner LTCOLON
## LR(1) items:
lexpr_inner -> lexpr_inner LTCOLON . lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 212
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LBRACE shift to state 224
-- On INTER shift to state 249
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FALSE shift to state 265
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On string shift to state 304
-- On lexpr_inner shift to state 307
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 307:
## Known stack suffix:
## lexpr_inner LTCOLON lexpr_inner
## LR(1) items:
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner LTCOLON lexpr_inner . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LTCOLON shift to state 306
-- On LSQUARE shift to state 308
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
## Reductions:
-- On WRITES reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On WITH reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On STAR reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On SLASH reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On SEMICOLON reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On RSQUARE reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On RPAR reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On RETURNS reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On REQUIRES reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On READS reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On RBRACE reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On QUESTION reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On PLUS reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On PIPE reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On PERCENT reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On OR reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On NE reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On MINUS reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On LTLT reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On LT reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On LE reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On IMPLIES reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On IFF reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On IDENTIFIER reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On HATHAT reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On HAT reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On GTGT reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On GT reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On GE reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On FROM reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On FREES reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On FOR reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On EXITS reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On EQUAL reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On EQ reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On EOF reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On ENSURES reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On DOTDOT reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On DISJOINT reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On DECREASES reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On CONTINUES reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On COMPLETE reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On COMMA reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On COLON2 reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On BREAKS reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On BIMPLIES reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On BIFF reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On BEHAVIOR reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On ASSUMES reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On ASSIGNS reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On AND reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On AMP reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner
-- On ALLOCATES reduce production lexpr_inner -> lexpr_inner LTCOLON lexpr_inner

State 308:
## Known stack suffix:
## lexpr_inner LSQUARE
## LR(1) items:
lexpr_inner -> lexpr_inner LSQUARE . range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner LSQUARE . lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On range shift to state 309
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_option shift to state 311
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 361
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:
-- On DOTDOT reduce production lexpr_option ->

State 309:
## Known stack suffix:
## lexpr_inner LSQUARE range
## LR(1) items:
lexpr_inner -> lexpr_inner LSQUARE range . RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RSQUARE shift to state 310
## Reductions:

State 310:
## Known stack suffix:
## lexpr_inner LSQUARE range RSQUARE
## LR(1) items:
lexpr_inner -> lexpr_inner LSQUARE range RSQUARE . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On WITH reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On STAR reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On SLASH reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On SEMICOLON reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On RSQUARE reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On RPAR reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On RETURNS reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On REQUIRES reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On READS reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On RBRACE reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On QUESTION reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On PLUS reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On PIPE reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On PERCENT reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On OR reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On NE reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On MINUS reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On LTLT reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On LTCOLON reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On LT reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On LSQUARE reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On LE reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On IMPLIES reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On IFF reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On IDENTIFIER reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On HATHAT reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On HAT reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On GTGT reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On GT reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On GE reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On FROM reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On FREES reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On FOR reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On EXITS reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On EQUAL reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On EQ reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On EOF reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On ENSURES reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On DOTDOT reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On DOT reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On DISJOINT reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On DECREASES reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On CONTINUES reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On COMPLETE reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On COMMA reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On COLONGT reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On COLON2 reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On BREAKS reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On BIMPLIES reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On BIFF reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On BEHAVIOR reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On ASSUMES reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On ASSIGNS reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On ARROW reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On AND reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On AMP reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE
-- On ALLOCATES reduce production lexpr_inner -> lexpr_inner LSQUARE range RSQUARE

State 311:
## Known stack suffix:
## lexpr_option
## LR(1) items:
range -> lexpr_option . DOTDOT lexpr_option [ RSQUARE RPAR ]
## Transitions:
-- On DOTDOT shift to state 312
## Reductions:

State 312:
## Known stack suffix:
## lexpr_option DOTDOT
## LR(1) items:
range -> lexpr_option DOTDOT . lexpr_option [ RSQUARE RPAR ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_option shift to state 313
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 316
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:
-- On RSQUARE reduce production lexpr_option ->
-- On RPAR reduce production lexpr_option ->

State 313:
## Known stack suffix:
## lexpr_option DOTDOT lexpr_option
## LR(1) items:
range -> lexpr_option DOTDOT lexpr_option . [ RSQUARE RPAR ]
## Transitions:
## Reductions:
-- On RSQUARE reduce production range -> lexpr_option DOTDOT lexpr_option
-- On RPAR reduce production range -> lexpr_option DOTDOT lexpr_option

State 314:
## Known stack suffix:
## lexpr_end_rel
## LR(1) items:
lexpr_rel -> lexpr_end_rel . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_rel -> lexpr_end_rel
-- On WITH reduce production lexpr_rel -> lexpr_end_rel
-- On SEMICOLON reduce production lexpr_rel -> lexpr_end_rel
-- On RSQUARE reduce production lexpr_rel -> lexpr_end_rel
-- On RPAR reduce production lexpr_rel -> lexpr_end_rel
-- On RETURNS reduce production lexpr_rel -> lexpr_end_rel
-- On REQUIRES reduce production lexpr_rel -> lexpr_end_rel
-- On READS reduce production lexpr_rel -> lexpr_end_rel
-- On RBRACE reduce production lexpr_rel -> lexpr_end_rel
-- On QUESTION reduce production lexpr_rel -> lexpr_end_rel
-- On PIPE reduce production lexpr_rel -> lexpr_end_rel
-- On OR reduce production lexpr_rel -> lexpr_end_rel
-- On IMPLIES reduce production lexpr_rel -> lexpr_end_rel
-- On IFF reduce production lexpr_rel -> lexpr_end_rel
-- On IDENTIFIER reduce production lexpr_rel -> lexpr_end_rel
-- On HATHAT reduce production lexpr_rel -> lexpr_end_rel
-- On HAT reduce production lexpr_rel -> lexpr_end_rel
-- On FROM reduce production lexpr_rel -> lexpr_end_rel
-- On FREES reduce production lexpr_rel -> lexpr_end_rel
-- On FOR reduce production lexpr_rel -> lexpr_end_rel
-- On EXITS reduce production lexpr_rel -> lexpr_end_rel
-- On EOF reduce production lexpr_rel -> lexpr_end_rel
-- On ENSURES reduce production lexpr_rel -> lexpr_end_rel
-- On DOTDOT reduce production lexpr_rel -> lexpr_end_rel
-- On DISJOINT reduce production lexpr_rel -> lexpr_end_rel
-- On DECREASES reduce production lexpr_rel -> lexpr_end_rel
-- On CONTINUES reduce production lexpr_rel -> lexpr_end_rel
-- On COMPLETE reduce production lexpr_rel -> lexpr_end_rel
-- On COMMA reduce production lexpr_rel -> lexpr_end_rel
-- On COLON2 reduce production lexpr_rel -> lexpr_end_rel
-- On BREAKS reduce production lexpr_rel -> lexpr_end_rel
-- On BIMPLIES reduce production lexpr_rel -> lexpr_end_rel
-- On BIFF reduce production lexpr_rel -> lexpr_end_rel
-- On BEHAVIOR reduce production lexpr_rel -> lexpr_end_rel
-- On ASSUMES reduce production lexpr_rel -> lexpr_end_rel
-- On ASSIGNS reduce production lexpr_rel -> lexpr_end_rel
-- On AND reduce production lexpr_rel -> lexpr_end_rel
-- On AMP reduce production lexpr_rel -> lexpr_end_rel
-- On ALLOCATES reduce production lexpr_rel -> lexpr_end_rel

State 315:
## Known stack suffix:
## lexpr_binder
## LR(1) items:
lexpr_end_rel -> lexpr_binder . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_end_rel -> lexpr_binder
-- On WITH reduce production lexpr_end_rel -> lexpr_binder
-- On SEMICOLON reduce production lexpr_end_rel -> lexpr_binder
-- On RSQUARE reduce production lexpr_end_rel -> lexpr_binder
-- On RPAR reduce production lexpr_end_rel -> lexpr_binder
-- On RETURNS reduce production lexpr_end_rel -> lexpr_binder
-- On REQUIRES reduce production lexpr_end_rel -> lexpr_binder
-- On READS reduce production lexpr_end_rel -> lexpr_binder
-- On RBRACE reduce production lexpr_end_rel -> lexpr_binder
-- On QUESTION reduce production lexpr_end_rel -> lexpr_binder
-- On PIPE reduce production lexpr_end_rel -> lexpr_binder
-- On OR reduce production lexpr_end_rel -> lexpr_binder
-- On IMPLIES reduce production lexpr_end_rel -> lexpr_binder
-- On IFF reduce production lexpr_end_rel -> lexpr_binder
-- On IDENTIFIER reduce production lexpr_end_rel -> lexpr_binder
-- On HATHAT reduce production lexpr_end_rel -> lexpr_binder
-- On HAT reduce production lexpr_end_rel -> lexpr_binder
-- On FROM reduce production lexpr_end_rel -> lexpr_binder
-- On FREES reduce production lexpr_end_rel -> lexpr_binder
-- On FOR reduce production lexpr_end_rel -> lexpr_binder
-- On EXITS reduce production lexpr_end_rel -> lexpr_binder
-- On EOF reduce production lexpr_end_rel -> lexpr_binder
-- On ENSURES reduce production lexpr_end_rel -> lexpr_binder
-- On DOTDOT reduce production lexpr_end_rel -> lexpr_binder
-- On DISJOINT reduce production lexpr_end_rel -> lexpr_binder
-- On DECREASES reduce production lexpr_end_rel -> lexpr_binder
-- On CONTINUES reduce production lexpr_end_rel -> lexpr_binder
-- On COMPLETE reduce production lexpr_end_rel -> lexpr_binder
-- On COMMA reduce production lexpr_end_rel -> lexpr_binder
-- On COLON2 reduce production lexpr_end_rel -> lexpr_binder
-- On BREAKS reduce production lexpr_end_rel -> lexpr_binder
-- On BIMPLIES reduce production lexpr_end_rel -> lexpr_binder
-- On BIFF reduce production lexpr_end_rel -> lexpr_binder
-- On BEHAVIOR reduce production lexpr_end_rel -> lexpr_binder
-- On ASSUMES reduce production lexpr_end_rel -> lexpr_binder
-- On ASSIGNS reduce production lexpr_end_rel -> lexpr_binder
-- On AND reduce production lexpr_end_rel -> lexpr_binder
-- On AMP reduce production lexpr_end_rel -> lexpr_binder
-- On ALLOCATES reduce production lexpr_end_rel -> lexpr_binder

State 316:
## Known stack suffix:
## lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RSQUARE RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RSQUARE RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RSQUARE RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RSQUARE RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RSQUARE RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RSQUARE RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RSQUARE RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RSQUARE RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RSQUARE RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RSQUARE RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RSQUARE RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_option -> lexpr . [ RSQUARE RPAR ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On RSQUARE reduce production lexpr_option -> lexpr
-- On RPAR reduce production lexpr_option -> lexpr

State 317:
## Known stack suffix:
## lexpr QUESTION
## LR(1) items:
lexpr -> lexpr QUESTION . lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 318
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 318:
## Known stack suffix:
## lexpr QUESTION lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COLON2 BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COLON2 BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COLON2 BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COLON2 BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COLON2 BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COLON2 BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COLON2 BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COLON2 BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COLON2 BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COLON2 BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COLON2 BIMPLIES BIFF AND AMP ]
lexpr -> lexpr QUESTION lexpr . COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On COLON2 shift to state 359
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 319:
## Known stack suffix:
## lexpr PIPE
## LR(1) items:
lexpr -> lexpr PIPE . lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 320
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 320:
## Known stack suffix:
## lexpr PIPE lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr PIPE lexpr . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AMP shift to state 323
## Reductions:
-- On WRITES reduce production lexpr -> lexpr PIPE lexpr
-- On WITH reduce production lexpr -> lexpr PIPE lexpr
-- On SEMICOLON reduce production lexpr -> lexpr PIPE lexpr
-- On RSQUARE reduce production lexpr -> lexpr PIPE lexpr
-- On RPAR reduce production lexpr -> lexpr PIPE lexpr
-- On RETURNS reduce production lexpr -> lexpr PIPE lexpr
-- On REQUIRES reduce production lexpr -> lexpr PIPE lexpr
-- On READS reduce production lexpr -> lexpr PIPE lexpr
-- On RBRACE reduce production lexpr -> lexpr PIPE lexpr
-- On QUESTION reduce production lexpr -> lexpr PIPE lexpr
-- On PIPE reduce production lexpr -> lexpr PIPE lexpr
-- On OR reduce production lexpr -> lexpr PIPE lexpr
-- On IMPLIES reduce production lexpr -> lexpr PIPE lexpr
-- On IFF reduce production lexpr -> lexpr PIPE lexpr
-- On IDENTIFIER reduce production lexpr -> lexpr PIPE lexpr
-- On HATHAT reduce production lexpr -> lexpr PIPE lexpr
-- On FROM reduce production lexpr -> lexpr PIPE lexpr
-- On FREES reduce production lexpr -> lexpr PIPE lexpr
-- On FOR reduce production lexpr -> lexpr PIPE lexpr
-- On EXITS reduce production lexpr -> lexpr PIPE lexpr
-- On EOF reduce production lexpr -> lexpr PIPE lexpr
-- On ENSURES reduce production lexpr -> lexpr PIPE lexpr
-- On DOTDOT reduce production lexpr -> lexpr PIPE lexpr
-- On DISJOINT reduce production lexpr -> lexpr PIPE lexpr
-- On DECREASES reduce production lexpr -> lexpr PIPE lexpr
-- On CONTINUES reduce production lexpr -> lexpr PIPE lexpr
-- On COMPLETE reduce production lexpr -> lexpr PIPE lexpr
-- On COMMA reduce production lexpr -> lexpr PIPE lexpr
-- On COLON2 reduce production lexpr -> lexpr PIPE lexpr
-- On BREAKS reduce production lexpr -> lexpr PIPE lexpr
-- On BEHAVIOR reduce production lexpr -> lexpr PIPE lexpr
-- On ASSUMES reduce production lexpr -> lexpr PIPE lexpr
-- On ASSIGNS reduce production lexpr -> lexpr PIPE lexpr
-- On AND reduce production lexpr -> lexpr PIPE lexpr
-- On ALLOCATES reduce production lexpr -> lexpr PIPE lexpr

State 321:
## Known stack suffix:
## lexpr HAT
## LR(1) items:
lexpr -> lexpr HAT . lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 322
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 322:
## Known stack suffix:
## lexpr HAT lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr HAT lexpr . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On AMP shift to state 323
## Reductions:
-- On WRITES reduce production lexpr -> lexpr HAT lexpr
-- On WITH reduce production lexpr -> lexpr HAT lexpr
-- On SEMICOLON reduce production lexpr -> lexpr HAT lexpr
-- On RSQUARE reduce production lexpr -> lexpr HAT lexpr
-- On RPAR reduce production lexpr -> lexpr HAT lexpr
-- On RETURNS reduce production lexpr -> lexpr HAT lexpr
-- On REQUIRES reduce production lexpr -> lexpr HAT lexpr
-- On READS reduce production lexpr -> lexpr HAT lexpr
-- On RBRACE reduce production lexpr -> lexpr HAT lexpr
-- On QUESTION reduce production lexpr -> lexpr HAT lexpr
-- On PIPE reduce production lexpr -> lexpr HAT lexpr
-- On OR reduce production lexpr -> lexpr HAT lexpr
-- On IMPLIES reduce production lexpr -> lexpr HAT lexpr
-- On IFF reduce production lexpr -> lexpr HAT lexpr
-- On IDENTIFIER reduce production lexpr -> lexpr HAT lexpr
-- On HATHAT reduce production lexpr -> lexpr HAT lexpr
-- On HAT reduce production lexpr -> lexpr HAT lexpr
-- On FROM reduce production lexpr -> lexpr HAT lexpr
-- On FREES reduce production lexpr -> lexpr HAT lexpr
-- On FOR reduce production lexpr -> lexpr HAT lexpr
-- On EXITS reduce production lexpr -> lexpr HAT lexpr
-- On EOF reduce production lexpr -> lexpr HAT lexpr
-- On ENSURES reduce production lexpr -> lexpr HAT lexpr
-- On DOTDOT reduce production lexpr -> lexpr HAT lexpr
-- On DISJOINT reduce production lexpr -> lexpr HAT lexpr
-- On DECREASES reduce production lexpr -> lexpr HAT lexpr
-- On CONTINUES reduce production lexpr -> lexpr HAT lexpr
-- On COMPLETE reduce production lexpr -> lexpr HAT lexpr
-- On COMMA reduce production lexpr -> lexpr HAT lexpr
-- On COLON2 reduce production lexpr -> lexpr HAT lexpr
-- On BREAKS reduce production lexpr -> lexpr HAT lexpr
-- On BIMPLIES reduce production lexpr -> lexpr HAT lexpr
-- On BIFF reduce production lexpr -> lexpr HAT lexpr
-- On BEHAVIOR reduce production lexpr -> lexpr HAT lexpr
-- On ASSUMES reduce production lexpr -> lexpr HAT lexpr
-- On ASSIGNS reduce production lexpr -> lexpr HAT lexpr
-- On AND reduce production lexpr -> lexpr HAT lexpr
-- On ALLOCATES reduce production lexpr -> lexpr HAT lexpr

State 323:
## Known stack suffix:
## lexpr AMP
## LR(1) items:
lexpr -> lexpr AMP . lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 324
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 324:
## Known stack suffix:
## lexpr AMP lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr AMP lexpr . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr -> lexpr AMP lexpr
-- On WITH reduce production lexpr -> lexpr AMP lexpr
-- On SEMICOLON reduce production lexpr -> lexpr AMP lexpr
-- On RSQUARE reduce production lexpr -> lexpr AMP lexpr
-- On RPAR reduce production lexpr -> lexpr AMP lexpr
-- On RETURNS reduce production lexpr -> lexpr AMP lexpr
-- On REQUIRES reduce production lexpr -> lexpr AMP lexpr
-- On READS reduce production lexpr -> lexpr AMP lexpr
-- On RBRACE reduce production lexpr -> lexpr AMP lexpr
-- On QUESTION reduce production lexpr -> lexpr AMP lexpr
-- On PIPE reduce production lexpr -> lexpr AMP lexpr
-- On OR reduce production lexpr -> lexpr AMP lexpr
-- On IMPLIES reduce production lexpr -> lexpr AMP lexpr
-- On IFF reduce production lexpr -> lexpr AMP lexpr
-- On IDENTIFIER reduce production lexpr -> lexpr AMP lexpr
-- On HATHAT reduce production lexpr -> lexpr AMP lexpr
-- On HAT reduce production lexpr -> lexpr AMP lexpr
-- On FROM reduce production lexpr -> lexpr AMP lexpr
-- On FREES reduce production lexpr -> lexpr AMP lexpr
-- On FOR reduce production lexpr -> lexpr AMP lexpr
-- On EXITS reduce production lexpr -> lexpr AMP lexpr
-- On EOF reduce production lexpr -> lexpr AMP lexpr
-- On ENSURES reduce production lexpr -> lexpr AMP lexpr
-- On DOTDOT reduce production lexpr -> lexpr AMP lexpr
-- On DISJOINT reduce production lexpr -> lexpr AMP lexpr
-- On DECREASES reduce production lexpr -> lexpr AMP lexpr
-- On CONTINUES reduce production lexpr -> lexpr AMP lexpr
-- On COMPLETE reduce production lexpr -> lexpr AMP lexpr
-- On COMMA reduce production lexpr -> lexpr AMP lexpr
-- On COLON2 reduce production lexpr -> lexpr AMP lexpr
-- On BREAKS reduce production lexpr -> lexpr AMP lexpr
-- On BIMPLIES reduce production lexpr -> lexpr AMP lexpr
-- On BIFF reduce production lexpr -> lexpr AMP lexpr
-- On BEHAVIOR reduce production lexpr -> lexpr AMP lexpr
-- On ASSUMES reduce production lexpr -> lexpr AMP lexpr
-- On ASSIGNS reduce production lexpr -> lexpr AMP lexpr
-- On AND reduce production lexpr -> lexpr AMP lexpr
-- On AMP reduce production lexpr -> lexpr AMP lexpr
-- On ALLOCATES reduce production lexpr -> lexpr AMP lexpr

State 325:
## Known stack suffix:
## identifier
## LR(1) items:
lexpr_inner -> identifier . LPAR ne_lexpr_list RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> identifier . LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> identifier . LBRACE ne_label_args RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> identifier . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 326
-- On LBRACE shift to state 350
## Reductions:
-- On WRITES reduce production lexpr_inner -> identifier
-- On WITH reduce production lexpr_inner -> identifier
-- On STAR reduce production lexpr_inner -> identifier
-- On SLASH reduce production lexpr_inner -> identifier
-- On SEMICOLON reduce production lexpr_inner -> identifier
-- On RSQUARE reduce production lexpr_inner -> identifier
-- On RPAR reduce production lexpr_inner -> identifier
-- On RETURNS reduce production lexpr_inner -> identifier
-- On REQUIRES reduce production lexpr_inner -> identifier
-- On READS reduce production lexpr_inner -> identifier
-- On RBRACE reduce production lexpr_inner -> identifier
-- On QUESTION reduce production lexpr_inner -> identifier
-- On PLUS reduce production lexpr_inner -> identifier
-- On PIPE reduce production lexpr_inner -> identifier
-- On PERCENT reduce production lexpr_inner -> identifier
-- On OR reduce production lexpr_inner -> identifier
-- On NE reduce production lexpr_inner -> identifier
-- On MINUS reduce production lexpr_inner -> identifier
-- On LTLT reduce production lexpr_inner -> identifier
-- On LTCOLON reduce production lexpr_inner -> identifier
-- On LT reduce production lexpr_inner -> identifier
-- On LSQUARE reduce production lexpr_inner -> identifier
-- On LE reduce production lexpr_inner -> identifier
-- On IMPLIES reduce production lexpr_inner -> identifier
-- On IFF reduce production lexpr_inner -> identifier
-- On IDENTIFIER reduce production lexpr_inner -> identifier
-- On HATHAT reduce production lexpr_inner -> identifier
-- On HAT reduce production lexpr_inner -> identifier
-- On GTGT reduce production lexpr_inner -> identifier
-- On GT reduce production lexpr_inner -> identifier
-- On GE reduce production lexpr_inner -> identifier
-- On FROM reduce production lexpr_inner -> identifier
-- On FREES reduce production lexpr_inner -> identifier
-- On FOR reduce production lexpr_inner -> identifier
-- On EXITS reduce production lexpr_inner -> identifier
-- On EQUAL reduce production lexpr_inner -> identifier
-- On EQ reduce production lexpr_inner -> identifier
-- On EOF reduce production lexpr_inner -> identifier
-- On ENSURES reduce production lexpr_inner -> identifier
-- On DOTDOT reduce production lexpr_inner -> identifier
-- On DOT reduce production lexpr_inner -> identifier
-- On DISJOINT reduce production lexpr_inner -> identifier
-- On DECREASES reduce production lexpr_inner -> identifier
-- On CONTINUES reduce production lexpr_inner -> identifier
-- On COMPLETE reduce production lexpr_inner -> identifier
-- On COMMA reduce production lexpr_inner -> identifier
-- On COLONGT reduce production lexpr_inner -> identifier
-- On COLON2 reduce production lexpr_inner -> identifier
-- On BREAKS reduce production lexpr_inner -> identifier
-- On BIMPLIES reduce production lexpr_inner -> identifier
-- On BIFF reduce production lexpr_inner -> identifier
-- On BEHAVIOR reduce production lexpr_inner -> identifier
-- On ASSUMES reduce production lexpr_inner -> identifier
-- On ASSIGNS reduce production lexpr_inner -> identifier
-- On ARROW reduce production lexpr_inner -> identifier
-- On AND reduce production lexpr_inner -> identifier
-- On AMP reduce production lexpr_inner -> identifier
-- On ALLOCATES reduce production lexpr_inner -> identifier

State 326:
## Known stack suffix:
## identifier LPAR
## LR(1) items:
lexpr_inner -> identifier LPAR . ne_lexpr_list RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_lexpr_list shift to state 327
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 329
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 327:
## Known stack suffix:
## identifier LPAR ne_lexpr_list
## LR(1) items:
lexpr_inner -> identifier LPAR ne_lexpr_list . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 328
## Reductions:

State 328:
## Known stack suffix:
## identifier LPAR ne_lexpr_list RPAR
## LR(1) items:
lexpr_inner -> identifier LPAR ne_lexpr_list RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On WITH reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On STAR reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On SLASH reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On SEMICOLON reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On RSQUARE reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On RPAR reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On RETURNS reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On REQUIRES reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On READS reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On RBRACE reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On QUESTION reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On PLUS reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On PIPE reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On PERCENT reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On OR reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On NE reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On MINUS reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On LTLT reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On LTCOLON reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On LT reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On LSQUARE reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On LE reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On IMPLIES reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On IFF reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On IDENTIFIER reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On HATHAT reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On HAT reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On GTGT reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On GT reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On GE reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On FROM reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On FREES reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On FOR reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On EXITS reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On EQUAL reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On EQ reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On EOF reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On ENSURES reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On DOTDOT reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On DOT reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On DISJOINT reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On DECREASES reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On CONTINUES reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On COMPLETE reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On COMMA reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On COLONGT reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On COLON2 reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On BREAKS reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On BIMPLIES reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On BIFF reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On BEHAVIOR reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On ASSUMES reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On ASSIGNS reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On ARROW reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On AND reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On AMP reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR
-- On ALLOCATES reduce production lexpr_inner -> identifier LPAR ne_lexpr_list RPAR

State 329:
## Known stack suffix:
## lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES SEMICOLON RPAR RETURNS REQUIRES READS QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COMMA BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES SEMICOLON RPAR RETURNS REQUIRES READS QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COMMA BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES SEMICOLON RPAR RETURNS REQUIRES READS QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COMMA BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES SEMICOLON RPAR RETURNS REQUIRES READS QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COMMA BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES SEMICOLON RPAR RETURNS REQUIRES READS QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COMMA BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES SEMICOLON RPAR RETURNS REQUIRES READS QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COMMA BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES SEMICOLON RPAR RETURNS REQUIRES READS QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COMMA BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES SEMICOLON RPAR RETURNS REQUIRES READS QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COMMA BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES SEMICOLON RPAR RETURNS REQUIRES READS QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COMMA BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES SEMICOLON RPAR RETURNS REQUIRES READS QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COMMA BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES SEMICOLON RPAR RETURNS REQUIRES READS QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COMMA BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
ne_lexpr_list -> lexpr . [ WRITES SEMICOLON RPAR RETURNS REQUIRES READS IDENTIFIER FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
ne_lexpr_list -> lexpr . COMMA ne_lexpr_list [ WRITES SEMICOLON RPAR RETURNS REQUIRES READS IDENTIFIER FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On COMMA shift to state 348
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On WRITES reduce production ne_lexpr_list -> lexpr
-- On SEMICOLON reduce production ne_lexpr_list -> lexpr
-- On RPAR reduce production ne_lexpr_list -> lexpr
-- On RETURNS reduce production ne_lexpr_list -> lexpr
-- On REQUIRES reduce production ne_lexpr_list -> lexpr
-- On READS reduce production ne_lexpr_list -> lexpr
-- On IDENTIFIER reduce production ne_lexpr_list -> lexpr
-- On FROM reduce production ne_lexpr_list -> lexpr
-- On FREES reduce production ne_lexpr_list -> lexpr
-- On EXITS reduce production ne_lexpr_list -> lexpr
-- On EOF reduce production ne_lexpr_list -> lexpr
-- On ENSURES reduce production ne_lexpr_list -> lexpr
-- On DISJOINT reduce production ne_lexpr_list -> lexpr
-- On DECREASES reduce production ne_lexpr_list -> lexpr
-- On CONTINUES reduce production ne_lexpr_list -> lexpr
-- On COMPLETE reduce production ne_lexpr_list -> lexpr
-- On BREAKS reduce production ne_lexpr_list -> lexpr
-- On BEHAVIOR reduce production ne_lexpr_list -> lexpr
-- On ASSUMES reduce production ne_lexpr_list -> lexpr
-- On ASSIGNS reduce production ne_lexpr_list -> lexpr
-- On ALLOCATES reduce production ne_lexpr_list -> lexpr

State 330:
## Known stack suffix:
## lexpr OR
## LR(1) items:
lexpr -> lexpr OR . lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 331
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 331:
## Known stack suffix:
## lexpr OR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr OR lexpr . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On PIPE shift to state 319
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On WRITES reduce production lexpr -> lexpr OR lexpr
-- On WITH reduce production lexpr -> lexpr OR lexpr
-- On SEMICOLON reduce production lexpr -> lexpr OR lexpr
-- On RSQUARE reduce production lexpr -> lexpr OR lexpr
-- On RPAR reduce production lexpr -> lexpr OR lexpr
-- On RETURNS reduce production lexpr -> lexpr OR lexpr
-- On REQUIRES reduce production lexpr -> lexpr OR lexpr
-- On READS reduce production lexpr -> lexpr OR lexpr
-- On RBRACE reduce production lexpr -> lexpr OR lexpr
-- On QUESTION reduce production lexpr -> lexpr OR lexpr
-- On OR reduce production lexpr -> lexpr OR lexpr
-- On IMPLIES reduce production lexpr -> lexpr OR lexpr
-- On IFF reduce production lexpr -> lexpr OR lexpr
-- On IDENTIFIER reduce production lexpr -> lexpr OR lexpr
-- On FROM reduce production lexpr -> lexpr OR lexpr
-- On FREES reduce production lexpr -> lexpr OR lexpr
-- On FOR reduce production lexpr -> lexpr OR lexpr
-- On EXITS reduce production lexpr -> lexpr OR lexpr
-- On EOF reduce production lexpr -> lexpr OR lexpr
-- On ENSURES reduce production lexpr -> lexpr OR lexpr
-- On DOTDOT reduce production lexpr -> lexpr OR lexpr
-- On DISJOINT reduce production lexpr -> lexpr OR lexpr
-- On DECREASES reduce production lexpr -> lexpr OR lexpr
-- On CONTINUES reduce production lexpr -> lexpr OR lexpr
-- On COMPLETE reduce production lexpr -> lexpr OR lexpr
-- On COMMA reduce production lexpr -> lexpr OR lexpr
-- On COLON2 reduce production lexpr -> lexpr OR lexpr
-- On BREAKS reduce production lexpr -> lexpr OR lexpr
-- On BEHAVIOR reduce production lexpr -> lexpr OR lexpr
-- On ASSUMES reduce production lexpr -> lexpr OR lexpr
-- On ASSIGNS reduce production lexpr -> lexpr OR lexpr
-- On ALLOCATES reduce production lexpr -> lexpr OR lexpr

State 332:
## Known stack suffix:
## lexpr HATHAT
## LR(1) items:
lexpr -> lexpr HATHAT . lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 333
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 333:
## Known stack suffix:
## lexpr HATHAT lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr HATHAT lexpr . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On PIPE shift to state 319
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On WRITES reduce production lexpr -> lexpr HATHAT lexpr
-- On WITH reduce production lexpr -> lexpr HATHAT lexpr
-- On SEMICOLON reduce production lexpr -> lexpr HATHAT lexpr
-- On RSQUARE reduce production lexpr -> lexpr HATHAT lexpr
-- On RPAR reduce production lexpr -> lexpr HATHAT lexpr
-- On RETURNS reduce production lexpr -> lexpr HATHAT lexpr
-- On REQUIRES reduce production lexpr -> lexpr HATHAT lexpr
-- On READS reduce production lexpr -> lexpr HATHAT lexpr
-- On RBRACE reduce production lexpr -> lexpr HATHAT lexpr
-- On QUESTION reduce production lexpr -> lexpr HATHAT lexpr
-- On OR reduce production lexpr -> lexpr HATHAT lexpr
-- On IMPLIES reduce production lexpr -> lexpr HATHAT lexpr
-- On IFF reduce production lexpr -> lexpr HATHAT lexpr
-- On IDENTIFIER reduce production lexpr -> lexpr HATHAT lexpr
-- On HATHAT reduce production lexpr -> lexpr HATHAT lexpr
-- On FROM reduce production lexpr -> lexpr HATHAT lexpr
-- On FREES reduce production lexpr -> lexpr HATHAT lexpr
-- On FOR reduce production lexpr -> lexpr HATHAT lexpr
-- On EXITS reduce production lexpr -> lexpr HATHAT lexpr
-- On EOF reduce production lexpr -> lexpr HATHAT lexpr
-- On ENSURES reduce production lexpr -> lexpr HATHAT lexpr
-- On DOTDOT reduce production lexpr -> lexpr HATHAT lexpr
-- On DISJOINT reduce production lexpr -> lexpr HATHAT lexpr
-- On DECREASES reduce production lexpr -> lexpr HATHAT lexpr
-- On CONTINUES reduce production lexpr -> lexpr HATHAT lexpr
-- On COMPLETE reduce production lexpr -> lexpr HATHAT lexpr
-- On COMMA reduce production lexpr -> lexpr HATHAT lexpr
-- On COLON2 reduce production lexpr -> lexpr HATHAT lexpr
-- On BREAKS reduce production lexpr -> lexpr HATHAT lexpr
-- On BEHAVIOR reduce production lexpr -> lexpr HATHAT lexpr
-- On ASSUMES reduce production lexpr -> lexpr HATHAT lexpr
-- On ASSIGNS reduce production lexpr -> lexpr HATHAT lexpr
-- On ALLOCATES reduce production lexpr -> lexpr HATHAT lexpr

State 334:
## Known stack suffix:
## lexpr BIMPLIES
## LR(1) items:
lexpr -> lexpr BIMPLIES . lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 335
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 335:
## Known stack suffix:
## lexpr BIMPLIES lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr BIMPLIES lexpr . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On AMP shift to state 323
## Reductions:
-- On WRITES reduce production lexpr -> lexpr BIMPLIES lexpr
-- On WITH reduce production lexpr -> lexpr BIMPLIES lexpr
-- On SEMICOLON reduce production lexpr -> lexpr BIMPLIES lexpr
-- On RSQUARE reduce production lexpr -> lexpr BIMPLIES lexpr
-- On RPAR reduce production lexpr -> lexpr BIMPLIES lexpr
-- On RETURNS reduce production lexpr -> lexpr BIMPLIES lexpr
-- On REQUIRES reduce production lexpr -> lexpr BIMPLIES lexpr
-- On READS reduce production lexpr -> lexpr BIMPLIES lexpr
-- On RBRACE reduce production lexpr -> lexpr BIMPLIES lexpr
-- On QUESTION reduce production lexpr -> lexpr BIMPLIES lexpr
-- On PIPE reduce production lexpr -> lexpr BIMPLIES lexpr
-- On OR reduce production lexpr -> lexpr BIMPLIES lexpr
-- On IMPLIES reduce production lexpr -> lexpr BIMPLIES lexpr
-- On IFF reduce production lexpr -> lexpr BIMPLIES lexpr
-- On IDENTIFIER reduce production lexpr -> lexpr BIMPLIES lexpr
-- On HATHAT reduce production lexpr -> lexpr BIMPLIES lexpr
-- On FROM reduce production lexpr -> lexpr BIMPLIES lexpr
-- On FREES reduce production lexpr -> lexpr BIMPLIES lexpr
-- On FOR reduce production lexpr -> lexpr BIMPLIES lexpr
-- On EXITS reduce production lexpr -> lexpr BIMPLIES lexpr
-- On EOF reduce production lexpr -> lexpr BIMPLIES lexpr
-- On ENSURES reduce production lexpr -> lexpr BIMPLIES lexpr
-- On DOTDOT reduce production lexpr -> lexpr BIMPLIES lexpr
-- On DISJOINT reduce production lexpr -> lexpr BIMPLIES lexpr
-- On DECREASES reduce production lexpr -> lexpr BIMPLIES lexpr
-- On CONTINUES reduce production lexpr -> lexpr BIMPLIES lexpr
-- On COMPLETE reduce production lexpr -> lexpr BIMPLIES lexpr
-- On COMMA reduce production lexpr -> lexpr BIMPLIES lexpr
-- On COLON2 reduce production lexpr -> lexpr BIMPLIES lexpr
-- On BREAKS reduce production lexpr -> lexpr BIMPLIES lexpr
-- On BIFF reduce production lexpr -> lexpr BIMPLIES lexpr
-- On BEHAVIOR reduce production lexpr -> lexpr BIMPLIES lexpr
-- On ASSUMES reduce production lexpr -> lexpr BIMPLIES lexpr
-- On ASSIGNS reduce production lexpr -> lexpr BIMPLIES lexpr
-- On AND reduce production lexpr -> lexpr BIMPLIES lexpr
-- On ALLOCATES reduce production lexpr -> lexpr BIMPLIES lexpr

State 336:
## Known stack suffix:
## constant
## LR(1) items:
lexpr_inner -> constant . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> constant
-- On WITH reduce production lexpr_inner -> constant
-- On STAR reduce production lexpr_inner -> constant
-- On SLASH reduce production lexpr_inner -> constant
-- On SEMICOLON reduce production lexpr_inner -> constant
-- On RSQUARE reduce production lexpr_inner -> constant
-- On RPAR reduce production lexpr_inner -> constant
-- On RETURNS reduce production lexpr_inner -> constant
-- On REQUIRES reduce production lexpr_inner -> constant
-- On READS reduce production lexpr_inner -> constant
-- On RBRACE reduce production lexpr_inner -> constant
-- On QUESTION reduce production lexpr_inner -> constant
-- On PLUS reduce production lexpr_inner -> constant
-- On PIPE reduce production lexpr_inner -> constant
-- On PERCENT reduce production lexpr_inner -> constant
-- On OR reduce production lexpr_inner -> constant
-- On NE reduce production lexpr_inner -> constant
-- On MINUS reduce production lexpr_inner -> constant
-- On LTLT reduce production lexpr_inner -> constant
-- On LTCOLON reduce production lexpr_inner -> constant
-- On LT reduce production lexpr_inner -> constant
-- On LSQUARE reduce production lexpr_inner -> constant
-- On LE reduce production lexpr_inner -> constant
-- On IMPLIES reduce production lexpr_inner -> constant
-- On IFF reduce production lexpr_inner -> constant
-- On IDENTIFIER reduce production lexpr_inner -> constant
-- On HATHAT reduce production lexpr_inner -> constant
-- On HAT reduce production lexpr_inner -> constant
-- On GTGT reduce production lexpr_inner -> constant
-- On GT reduce production lexpr_inner -> constant
-- On GE reduce production lexpr_inner -> constant
-- On FROM reduce production lexpr_inner -> constant
-- On FREES reduce production lexpr_inner -> constant
-- On FOR reduce production lexpr_inner -> constant
-- On EXITS reduce production lexpr_inner -> constant
-- On EQUAL reduce production lexpr_inner -> constant
-- On EQ reduce production lexpr_inner -> constant
-- On EOF reduce production lexpr_inner -> constant
-- On ENSURES reduce production lexpr_inner -> constant
-- On DOTDOT reduce production lexpr_inner -> constant
-- On DOT reduce production lexpr_inner -> constant
-- On DISJOINT reduce production lexpr_inner -> constant
-- On DECREASES reduce production lexpr_inner -> constant
-- On CONTINUES reduce production lexpr_inner -> constant
-- On COMPLETE reduce production lexpr_inner -> constant
-- On COMMA reduce production lexpr_inner -> constant
-- On COLONGT reduce production lexpr_inner -> constant
-- On COLON2 reduce production lexpr_inner -> constant
-- On BREAKS reduce production lexpr_inner -> constant
-- On BIMPLIES reduce production lexpr_inner -> constant
-- On BIFF reduce production lexpr_inner -> constant
-- On BEHAVIOR reduce production lexpr_inner -> constant
-- On ASSUMES reduce production lexpr_inner -> constant
-- On ASSIGNS reduce production lexpr_inner -> constant
-- On ARROW reduce production lexpr_inner -> constant
-- On AND reduce production lexpr_inner -> constant
-- On AMP reduce production lexpr_inner -> constant
-- On ALLOCATES reduce production lexpr_inner -> constant

State 337:
## Known stack suffix:
## any_identifier
## LR(1) items:
lexpr -> any_identifier . COLON lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On COLON shift to state 338
## Reductions:

State 338:
## Known stack suffix:
## any_identifier COLON
## LR(1) items:
lexpr -> any_identifier COLON . lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 339
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 339:
## Known stack suffix:
## any_identifier COLON lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> any_identifier COLON lexpr . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On WRITES reduce production lexpr -> any_identifier COLON lexpr
-- On WITH reduce production lexpr -> any_identifier COLON lexpr
-- On SEMICOLON reduce production lexpr -> any_identifier COLON lexpr
-- On RSQUARE reduce production lexpr -> any_identifier COLON lexpr
-- On RPAR reduce production lexpr -> any_identifier COLON lexpr
-- On RETURNS reduce production lexpr -> any_identifier COLON lexpr
-- On REQUIRES reduce production lexpr -> any_identifier COLON lexpr
-- On READS reduce production lexpr -> any_identifier COLON lexpr
-- On RBRACE reduce production lexpr -> any_identifier COLON lexpr
-- On IDENTIFIER reduce production lexpr -> any_identifier COLON lexpr
-- On FROM reduce production lexpr -> any_identifier COLON lexpr
-- On FREES reduce production lexpr -> any_identifier COLON lexpr
-- On FOR reduce production lexpr -> any_identifier COLON lexpr
-- On EXITS reduce production lexpr -> any_identifier COLON lexpr
-- On EOF reduce production lexpr -> any_identifier COLON lexpr
-- On ENSURES reduce production lexpr -> any_identifier COLON lexpr
-- On DOTDOT reduce production lexpr -> any_identifier COLON lexpr
-- On DISJOINT reduce production lexpr -> any_identifier COLON lexpr
-- On DECREASES reduce production lexpr -> any_identifier COLON lexpr
-- On CONTINUES reduce production lexpr -> any_identifier COLON lexpr
-- On COMPLETE reduce production lexpr -> any_identifier COLON lexpr
-- On COMMA reduce production lexpr -> any_identifier COLON lexpr
-- On COLON2 reduce production lexpr -> any_identifier COLON lexpr
-- On BREAKS reduce production lexpr -> any_identifier COLON lexpr
-- On BEHAVIOR reduce production lexpr -> any_identifier COLON lexpr
-- On ASSUMES reduce production lexpr -> any_identifier COLON lexpr
-- On ASSIGNS reduce production lexpr -> any_identifier COLON lexpr
-- On ALLOCATES reduce production lexpr -> any_identifier COLON lexpr

State 340:
## Known stack suffix:
## lexpr IMPLIES
## LR(1) items:
lexpr -> lexpr IMPLIES . lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 341
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 341:
## Known stack suffix:
## lexpr IMPLIES lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr IMPLIES lexpr . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On WRITES reduce production lexpr -> lexpr IMPLIES lexpr
-- On WITH reduce production lexpr -> lexpr IMPLIES lexpr
-- On SEMICOLON reduce production lexpr -> lexpr IMPLIES lexpr
-- On RSQUARE reduce production lexpr -> lexpr IMPLIES lexpr
-- On RPAR reduce production lexpr -> lexpr IMPLIES lexpr
-- On RETURNS reduce production lexpr -> lexpr IMPLIES lexpr
-- On REQUIRES reduce production lexpr -> lexpr IMPLIES lexpr
-- On READS reduce production lexpr -> lexpr IMPLIES lexpr
-- On RBRACE reduce production lexpr -> lexpr IMPLIES lexpr
-- On QUESTION reduce production lexpr -> lexpr IMPLIES lexpr
-- On IFF reduce production lexpr -> lexpr IMPLIES lexpr
-- On IDENTIFIER reduce production lexpr -> lexpr IMPLIES lexpr
-- On FROM reduce production lexpr -> lexpr IMPLIES lexpr
-- On FREES reduce production lexpr -> lexpr IMPLIES lexpr
-- On FOR reduce production lexpr -> lexpr IMPLIES lexpr
-- On EXITS reduce production lexpr -> lexpr IMPLIES lexpr
-- On EOF reduce production lexpr -> lexpr IMPLIES lexpr
-- On ENSURES reduce production lexpr -> lexpr IMPLIES lexpr
-- On DOTDOT reduce production lexpr -> lexpr IMPLIES lexpr
-- On DISJOINT reduce production lexpr -> lexpr IMPLIES lexpr
-- On DECREASES reduce production lexpr -> lexpr IMPLIES lexpr
-- On CONTINUES reduce production lexpr -> lexpr IMPLIES lexpr
-- On COMPLETE reduce production lexpr -> lexpr IMPLIES lexpr
-- On COMMA reduce production lexpr -> lexpr IMPLIES lexpr
-- On COLON2 reduce production lexpr -> lexpr IMPLIES lexpr
-- On BREAKS reduce production lexpr -> lexpr IMPLIES lexpr
-- On BEHAVIOR reduce production lexpr -> lexpr IMPLIES lexpr
-- On ASSUMES reduce production lexpr -> lexpr IMPLIES lexpr
-- On ASSIGNS reduce production lexpr -> lexpr IMPLIES lexpr
-- On ALLOCATES reduce production lexpr -> lexpr IMPLIES lexpr

State 342:
## Known stack suffix:
## lexpr BIFF
## LR(1) items:
lexpr -> lexpr BIFF . lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 343
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 343:
## Known stack suffix:
## lexpr BIFF lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr BIFF lexpr . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On AMP shift to state 323
## Reductions:
-- On WRITES reduce production lexpr -> lexpr BIFF lexpr
-- On WITH reduce production lexpr -> lexpr BIFF lexpr
-- On SEMICOLON reduce production lexpr -> lexpr BIFF lexpr
-- On RSQUARE reduce production lexpr -> lexpr BIFF lexpr
-- On RPAR reduce production lexpr -> lexpr BIFF lexpr
-- On RETURNS reduce production lexpr -> lexpr BIFF lexpr
-- On REQUIRES reduce production lexpr -> lexpr BIFF lexpr
-- On READS reduce production lexpr -> lexpr BIFF lexpr
-- On RBRACE reduce production lexpr -> lexpr BIFF lexpr
-- On QUESTION reduce production lexpr -> lexpr BIFF lexpr
-- On PIPE reduce production lexpr -> lexpr BIFF lexpr
-- On OR reduce production lexpr -> lexpr BIFF lexpr
-- On IMPLIES reduce production lexpr -> lexpr BIFF lexpr
-- On IFF reduce production lexpr -> lexpr BIFF lexpr
-- On IDENTIFIER reduce production lexpr -> lexpr BIFF lexpr
-- On HATHAT reduce production lexpr -> lexpr BIFF lexpr
-- On FROM reduce production lexpr -> lexpr BIFF lexpr
-- On FREES reduce production lexpr -> lexpr BIFF lexpr
-- On FOR reduce production lexpr -> lexpr BIFF lexpr
-- On EXITS reduce production lexpr -> lexpr BIFF lexpr
-- On EOF reduce production lexpr -> lexpr BIFF lexpr
-- On ENSURES reduce production lexpr -> lexpr BIFF lexpr
-- On DOTDOT reduce production lexpr -> lexpr BIFF lexpr
-- On DISJOINT reduce production lexpr -> lexpr BIFF lexpr
-- On DECREASES reduce production lexpr -> lexpr BIFF lexpr
-- On CONTINUES reduce production lexpr -> lexpr BIFF lexpr
-- On COMPLETE reduce production lexpr -> lexpr BIFF lexpr
-- On COMMA reduce production lexpr -> lexpr BIFF lexpr
-- On COLON2 reduce production lexpr -> lexpr BIFF lexpr
-- On BREAKS reduce production lexpr -> lexpr BIFF lexpr
-- On BIFF reduce production lexpr -> lexpr BIFF lexpr
-- On BEHAVIOR reduce production lexpr -> lexpr BIFF lexpr
-- On ASSUMES reduce production lexpr -> lexpr BIFF lexpr
-- On ASSIGNS reduce production lexpr -> lexpr BIFF lexpr
-- On AND reduce production lexpr -> lexpr BIFF lexpr
-- On ALLOCATES reduce production lexpr -> lexpr BIFF lexpr

State 344:
## Known stack suffix:
## lexpr AND
## LR(1) items:
lexpr -> lexpr AND . lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 345
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 345:
## Known stack suffix:
## lexpr AND lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr AND lexpr . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On PIPE shift to state 319
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AMP shift to state 323
## Reductions:
-- On WRITES reduce production lexpr -> lexpr AND lexpr
-- On WITH reduce production lexpr -> lexpr AND lexpr
-- On SEMICOLON reduce production lexpr -> lexpr AND lexpr
-- On RSQUARE reduce production lexpr -> lexpr AND lexpr
-- On RPAR reduce production lexpr -> lexpr AND lexpr
-- On RETURNS reduce production lexpr -> lexpr AND lexpr
-- On REQUIRES reduce production lexpr -> lexpr AND lexpr
-- On READS reduce production lexpr -> lexpr AND lexpr
-- On RBRACE reduce production lexpr -> lexpr AND lexpr
-- On QUESTION reduce production lexpr -> lexpr AND lexpr
-- On OR reduce production lexpr -> lexpr AND lexpr
-- On IMPLIES reduce production lexpr -> lexpr AND lexpr
-- On IFF reduce production lexpr -> lexpr AND lexpr
-- On IDENTIFIER reduce production lexpr -> lexpr AND lexpr
-- On HATHAT reduce production lexpr -> lexpr AND lexpr
-- On FROM reduce production lexpr -> lexpr AND lexpr
-- On FREES reduce production lexpr -> lexpr AND lexpr
-- On FOR reduce production lexpr -> lexpr AND lexpr
-- On EXITS reduce production lexpr -> lexpr AND lexpr
-- On EOF reduce production lexpr -> lexpr AND lexpr
-- On ENSURES reduce production lexpr -> lexpr AND lexpr
-- On DOTDOT reduce production lexpr -> lexpr AND lexpr
-- On DISJOINT reduce production lexpr -> lexpr AND lexpr
-- On DECREASES reduce production lexpr -> lexpr AND lexpr
-- On CONTINUES reduce production lexpr -> lexpr AND lexpr
-- On COMPLETE reduce production lexpr -> lexpr AND lexpr
-- On COMMA reduce production lexpr -> lexpr AND lexpr
-- On COLON2 reduce production lexpr -> lexpr AND lexpr
-- On BREAKS reduce production lexpr -> lexpr AND lexpr
-- On BEHAVIOR reduce production lexpr -> lexpr AND lexpr
-- On ASSUMES reduce production lexpr -> lexpr AND lexpr
-- On ASSIGNS reduce production lexpr -> lexpr AND lexpr
-- On AND reduce production lexpr -> lexpr AND lexpr
-- On ALLOCATES reduce production lexpr -> lexpr AND lexpr

State 346:
## Known stack suffix:
## lexpr IFF
## LR(1) items:
lexpr -> lexpr IFF . lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 347
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 347:
## Known stack suffix:
## lexpr IFF lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr IFF lexpr . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On WRITES reduce production lexpr -> lexpr IFF lexpr
-- On WITH reduce production lexpr -> lexpr IFF lexpr
-- On SEMICOLON reduce production lexpr -> lexpr IFF lexpr
-- On RSQUARE reduce production lexpr -> lexpr IFF lexpr
-- On RPAR reduce production lexpr -> lexpr IFF lexpr
-- On RETURNS reduce production lexpr -> lexpr IFF lexpr
-- On REQUIRES reduce production lexpr -> lexpr IFF lexpr
-- On READS reduce production lexpr -> lexpr IFF lexpr
-- On RBRACE reduce production lexpr -> lexpr IFF lexpr
-- On QUESTION reduce production lexpr -> lexpr IFF lexpr
-- On IFF reduce production lexpr -> lexpr IFF lexpr
-- On IDENTIFIER reduce production lexpr -> lexpr IFF lexpr
-- On FROM reduce production lexpr -> lexpr IFF lexpr
-- On FREES reduce production lexpr -> lexpr IFF lexpr
-- On FOR reduce production lexpr -> lexpr IFF lexpr
-- On EXITS reduce production lexpr -> lexpr IFF lexpr
-- On EOF reduce production lexpr -> lexpr IFF lexpr
-- On ENSURES reduce production lexpr -> lexpr IFF lexpr
-- On DOTDOT reduce production lexpr -> lexpr IFF lexpr
-- On DISJOINT reduce production lexpr -> lexpr IFF lexpr
-- On DECREASES reduce production lexpr -> lexpr IFF lexpr
-- On CONTINUES reduce production lexpr -> lexpr IFF lexpr
-- On COMPLETE reduce production lexpr -> lexpr IFF lexpr
-- On COMMA reduce production lexpr -> lexpr IFF lexpr
-- On COLON2 reduce production lexpr -> lexpr IFF lexpr
-- On BREAKS reduce production lexpr -> lexpr IFF lexpr
-- On BEHAVIOR reduce production lexpr -> lexpr IFF lexpr
-- On ASSUMES reduce production lexpr -> lexpr IFF lexpr
-- On ASSIGNS reduce production lexpr -> lexpr IFF lexpr
-- On ALLOCATES reduce production lexpr -> lexpr IFF lexpr

State 348:
## Known stack suffix:
## lexpr COMMA
## LR(1) items:
ne_lexpr_list -> lexpr COMMA . ne_lexpr_list [ WRITES SEMICOLON RPAR RETURNS REQUIRES READS IDENTIFIER FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_lexpr_list shift to state 349
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 329
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 349:
## Known stack suffix:
## lexpr COMMA ne_lexpr_list
## LR(1) items:
ne_lexpr_list -> lexpr COMMA ne_lexpr_list . [ WRITES SEMICOLON RPAR RETURNS REQUIRES READS IDENTIFIER FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On SEMICOLON reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On RPAR reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On RETURNS reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On REQUIRES reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On READS reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On IDENTIFIER reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On FROM reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On FREES reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On EXITS reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On EOF reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On ENSURES reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On DISJOINT reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On DECREASES reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On CONTINUES reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On COMPLETE reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On BREAKS reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On BEHAVIOR reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On ASSUMES reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On ASSIGNS reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list
-- On ALLOCATES reduce production ne_lexpr_list -> lexpr COMMA ne_lexpr_list

State 350:
## Known stack suffix:
## identifier LBRACE
## LR(1) items:
lexpr_inner -> identifier LBRACE . ne_label_args RBRACE LPAR ne_lexpr_list RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> identifier LBRACE . ne_label_args RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On TYPENAME shift to state 10
-- On IDENTIFIER shift to state 39
-- On ne_label_args shift to state 351
-- On identifier_or_typename shift to state 356
## Reductions:

State 351:
## Known stack suffix:
## identifier LBRACE ne_label_args
## LR(1) items:
lexpr_inner -> identifier LBRACE ne_label_args . RBRACE LPAR ne_lexpr_list RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> identifier LBRACE ne_label_args . RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RBRACE shift to state 352
## Reductions:

State 352:
## Known stack suffix:
## identifier LBRACE ne_label_args RBRACE
## LR(1) items:
lexpr_inner -> identifier LBRACE ne_label_args RBRACE . LPAR ne_lexpr_list RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> identifier LBRACE ne_label_args RBRACE . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LPAR shift to state 353
## Reductions:
-- On WRITES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On WITH reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On STAR reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On SLASH reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On SEMICOLON reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On RSQUARE reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On RPAR reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On RETURNS reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On REQUIRES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On READS reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On RBRACE reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On QUESTION reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On PLUS reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On PIPE reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On PERCENT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On OR reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On NE reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On MINUS reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On LTLT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On LTCOLON reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On LT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On LSQUARE reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On LE reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On IMPLIES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On IFF reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On IDENTIFIER reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On HATHAT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On HAT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On GTGT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On GT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On GE reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On FROM reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On FREES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On FOR reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On EXITS reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On EQUAL reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On EQ reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On EOF reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On ENSURES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On DOTDOT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On DOT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On DISJOINT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On DECREASES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On CONTINUES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On COMPLETE reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On COMMA reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On COLONGT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On COLON2 reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On BREAKS reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On BIMPLIES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On BIFF reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On BEHAVIOR reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On ASSUMES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On ASSIGNS reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On ARROW reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On AND reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On AMP reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE
-- On ALLOCATES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE

State 353:
## Known stack suffix:
## identifier LBRACE ne_label_args RBRACE LPAR
## LR(1) items:
lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR . ne_lexpr_list RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_lexpr_list shift to state 354
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 329
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 354:
## Known stack suffix:
## identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list
## LR(1) items:
lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 355
## Reductions:

State 355:
## Known stack suffix:
## identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
## LR(1) items:
lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On WITH reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On STAR reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On SLASH reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On SEMICOLON reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On RSQUARE reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On RPAR reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On RETURNS reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On REQUIRES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On READS reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On RBRACE reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On QUESTION reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On PLUS reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On PIPE reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On PERCENT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On OR reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On NE reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On MINUS reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On LTLT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On LTCOLON reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On LT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On LSQUARE reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On LE reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On IMPLIES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On IFF reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On IDENTIFIER reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On HATHAT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On HAT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On GTGT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On GT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On GE reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On FROM reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On FREES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On FOR reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On EXITS reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On EQUAL reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On EQ reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On EOF reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On ENSURES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On DOTDOT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On DOT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On DISJOINT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On DECREASES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On CONTINUES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On COMPLETE reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On COMMA reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On COLONGT reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On COLON2 reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On BREAKS reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On BIMPLIES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On BIFF reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On BEHAVIOR reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On ASSUMES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On ASSIGNS reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On ARROW reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On AND reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On AMP reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR
-- On ALLOCATES reduce production lexpr_inner -> identifier LBRACE ne_label_args RBRACE LPAR ne_lexpr_list RPAR

State 356:
## Known stack suffix:
## identifier_or_typename
## LR(1) items:
ne_label_args -> identifier_or_typename . [ RBRACE ]
ne_label_args -> identifier_or_typename . COMMA ne_label_args [ RBRACE ]
## Transitions:
-- On COMMA shift to state 357
## Reductions:
-- On RBRACE reduce production ne_label_args -> identifier_or_typename

State 357:
## Known stack suffix:
## identifier_or_typename COMMA
## LR(1) items:
ne_label_args -> identifier_or_typename COMMA . ne_label_args [ RBRACE ]
## Transitions:
-- On TYPENAME shift to state 10
-- On IDENTIFIER shift to state 39
-- On ne_label_args shift to state 358
-- On identifier_or_typename shift to state 356
## Reductions:

State 358:
## Known stack suffix:
## identifier_or_typename COMMA ne_label_args
## LR(1) items:
ne_label_args -> identifier_or_typename COMMA ne_label_args . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production ne_label_args -> identifier_or_typename COMMA ne_label_args

State 359:
## Known stack suffix:
## lexpr QUESTION lexpr COLON2
## LR(1) items:
lexpr -> lexpr QUESTION lexpr COLON2 . lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 360
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 360:
## Known stack suffix:
## lexpr QUESTION lexpr COLON2 lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr QUESTION lexpr COLON2 lexpr . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On WRITES reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On WITH reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On SEMICOLON reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On RSQUARE reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On RPAR reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On RETURNS reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On REQUIRES reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On READS reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On RBRACE reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On IDENTIFIER reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On FROM reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On FREES reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On FOR reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On EXITS reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On EOF reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On ENSURES reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On DOTDOT reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On DISJOINT reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On DECREASES reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On CONTINUES reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On COMPLETE reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On COMMA reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On COLON2 reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On BREAKS reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On BEHAVIOR reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On ASSUMES reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On ASSIGNS reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr
-- On ALLOCATES reduce production lexpr -> lexpr QUESTION lexpr COLON2 lexpr

State 361:
## Known stack suffix:
## lexpr_inner LSQUARE lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr_inner -> lexpr_inner LSQUARE lexpr . RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_option -> lexpr . [ DOTDOT ]
## Transitions:
-- On RSQUARE shift to state 362
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On DOTDOT reduce production lexpr_option -> lexpr

State 362:
## Known stack suffix:
## lexpr_inner LSQUARE lexpr RSQUARE
## LR(1) items:
lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On WITH reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On STAR reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On SLASH reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On SEMICOLON reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On RSQUARE reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On RPAR reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On RETURNS reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On REQUIRES reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On READS reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On RBRACE reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On QUESTION reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On PLUS reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On PIPE reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On PERCENT reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On OR reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On NE reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On MINUS reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On LTLT reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On LTCOLON reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On LT reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On LSQUARE reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On LE reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On IMPLIES reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On IFF reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On IDENTIFIER reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On HATHAT reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On HAT reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On GTGT reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On GT reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On GE reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On FROM reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On FREES reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On FOR reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On EXITS reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On EQUAL reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On EQ reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On EOF reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On ENSURES reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On DOTDOT reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On DOT reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On DISJOINT reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On DECREASES reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On CONTINUES reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On COMPLETE reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On COMMA reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On COLONGT reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On COLON2 reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On BREAKS reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On BIMPLIES reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On BIFF reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On BEHAVIOR reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On ASSUMES reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On ASSIGNS reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On ARROW reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On AND reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On AMP reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE
-- On ALLOCATES reduce production lexpr_inner -> lexpr_inner LSQUARE lexpr RSQUARE

State 363:
## Known stack suffix:
## lexpr_inner DOT
## LR(1) items:
lexpr_inner -> lexpr_inner DOT . identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On TYPENAME shift to state 10
-- On IDENTIFIER shift to state 39
-- On identifier_or_typename shift to state 364
## Reductions:

State 364:
## Known stack suffix:
## lexpr_inner DOT identifier_or_typename
## LR(1) items:
lexpr_inner -> lexpr_inner DOT identifier_or_typename . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On WITH reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On STAR reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On SLASH reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On SEMICOLON reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On RSQUARE reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On RPAR reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On RETURNS reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On REQUIRES reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On READS reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On RBRACE reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On QUESTION reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On PLUS reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On PIPE reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On PERCENT reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On OR reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On NE reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On MINUS reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On LTLT reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On LTCOLON reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On LT reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On LSQUARE reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On LE reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On IMPLIES reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On IFF reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On IDENTIFIER reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On HATHAT reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On HAT reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On GTGT reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On GT reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On GE reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On FROM reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On FREES reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On FOR reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On EXITS reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On EQUAL reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On EQ reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On EOF reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On ENSURES reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On DOTDOT reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On DOT reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On DISJOINT reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On DECREASES reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On CONTINUES reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On COMPLETE reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On COMMA reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On COLONGT reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On COLON2 reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On BREAKS reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On BIMPLIES reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On BIFF reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On BEHAVIOR reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On ASSUMES reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On ASSIGNS reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On ARROW reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On AND reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On AMP reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename
-- On ALLOCATES reduce production lexpr_inner -> lexpr_inner DOT identifier_or_typename

State 365:
## Known stack suffix:
## lexpr_inner COLONGT
## LR(1) items:
lexpr_inner -> lexpr_inner COLONGT . logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner COLONGT . lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VOID shift to state 125
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 128
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRUCT shift to state 129
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On REAL shift to state 141
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 212
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LONG shift to state 142
-- On LBRACE shift to state 224
-- On INTER shift to state 249
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FLOAT shift to state 149
-- On FALSE shift to state 265
-- On ENUM shift to state 150
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 153
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CHAR shift to state 154
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On type_spec shift to state 157
-- On string shift to state 304
-- On logic_type shift to state 366
-- On lexpr_inner shift to state 367
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 366:
## Known stack suffix:
## lexpr_inner COLONGT logic_type
## LR(1) items:
lexpr_inner -> lexpr_inner COLONGT logic_type . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On WITH reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On STAR reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On SLASH reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On SEMICOLON reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On RSQUARE reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On RPAR reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On RETURNS reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On REQUIRES reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On READS reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On RBRACE reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On QUESTION reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On PLUS reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On PIPE reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On PERCENT reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On OR reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On NE reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On MINUS reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On LTLT reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On LTCOLON reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On LT reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On LSQUARE reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On LE reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On IMPLIES reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On IFF reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On IDENTIFIER reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On HATHAT reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On HAT reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On GTGT reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On GT reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On GE reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On FROM reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On FREES reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On FOR reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On EXITS reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On EQUAL reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On EQ reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On EOF reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On ENSURES reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On DOTDOT reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On DOT reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On DISJOINT reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On DECREASES reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On CONTINUES reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On COMPLETE reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On COMMA reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On COLONGT reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On COLON2 reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On BREAKS reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On BIMPLIES reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On BIFF reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On BEHAVIOR reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On ASSUMES reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On ASSIGNS reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On ARROW reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On AND reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On AMP reduce production lexpr_inner -> lexpr_inner COLONGT logic_type
-- On ALLOCATES reduce production lexpr_inner -> lexpr_inner COLONGT logic_type

State 367:
## Known stack suffix:
## lexpr_inner COLONGT lexpr_inner
## LR(1) items:
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner COLONGT lexpr_inner . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LTCOLON shift to state 306
-- On LSQUARE shift to state 308
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
## Reductions:
-- On WRITES reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On WITH reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On STAR reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On SLASH reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On SEMICOLON reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On RSQUARE reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On RPAR reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On RETURNS reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On REQUIRES reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On READS reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On RBRACE reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On QUESTION reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On PLUS reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On PIPE reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On PERCENT reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On OR reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On NE reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On MINUS reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On LTLT reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On LT reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On LE reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On IMPLIES reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On IFF reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On IDENTIFIER reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On HATHAT reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On HAT reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On GTGT reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On GT reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On GE reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On FROM reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On FREES reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On FOR reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On EXITS reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On EQUAL reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On EQ reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On EOF reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On ENSURES reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On DOTDOT reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On DISJOINT reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On DECREASES reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On CONTINUES reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On COMPLETE reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On COMMA reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On COLON2 reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On BREAKS reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On BIMPLIES reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On BIFF reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On BEHAVIOR reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On ASSUMES reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On ASSIGNS reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On AND reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On AMP reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner
-- On ALLOCATES reduce production lexpr_inner -> lexpr_inner COLONGT lexpr_inner

State 368:
## Known stack suffix:
## lexpr_inner ARROW
## LR(1) items:
lexpr_inner -> lexpr_inner ARROW . identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On TYPENAME shift to state 10
-- On IDENTIFIER shift to state 39
-- On identifier_or_typename shift to state 369
## Reductions:

State 369:
## Known stack suffix:
## lexpr_inner ARROW identifier_or_typename
## LR(1) items:
lexpr_inner -> lexpr_inner ARROW identifier_or_typename . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On WITH reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On STAR reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On SLASH reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On SEMICOLON reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On RSQUARE reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On RPAR reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On RETURNS reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On REQUIRES reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On READS reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On RBRACE reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On QUESTION reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On PLUS reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On PIPE reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On PERCENT reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On OR reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On NE reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On MINUS reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On LTLT reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On LTCOLON reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On LT reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On LSQUARE reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On LE reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On IMPLIES reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On IFF reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On IDENTIFIER reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On HATHAT reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On HAT reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On GTGT reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On GT reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On GE reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On FROM reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On FREES reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On FOR reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On EXITS reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On EQUAL reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On EQ reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On EOF reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On ENSURES reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On DOTDOT reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On DOT reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On DISJOINT reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On DECREASES reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On CONTINUES reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On COMPLETE reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On COMMA reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On COLONGT reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On COLON2 reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On BREAKS reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On BIMPLIES reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On BIFF reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On BEHAVIOR reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On ASSUMES reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On ASSIGNS reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On ARROW reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On AND reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On AMP reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename
-- On ALLOCATES reduce production lexpr_inner -> lexpr_inner ARROW identifier_or_typename

State 370:
## Known stack suffix:
## lexpr_inner SLASH
## LR(1) items:
lexpr_inner -> lexpr_inner SLASH . lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 212
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LBRACE shift to state 224
-- On INTER shift to state 249
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FALSE shift to state 265
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On string shift to state 304
-- On lexpr_inner shift to state 371
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 371:
## Known stack suffix:
## lexpr_inner SLASH lexpr_inner
## LR(1) items:
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner SLASH lexpr_inner . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LTCOLON shift to state 306
-- On LSQUARE shift to state 308
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
## Reductions:
-- On WRITES reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On WITH reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On STAR reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On SLASH reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On SEMICOLON reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On RSQUARE reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On RPAR reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On RETURNS reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On REQUIRES reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On READS reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On RBRACE reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On QUESTION reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On PLUS reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On PIPE reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On PERCENT reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On OR reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On NE reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On MINUS reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On LTLT reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On LT reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On LE reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On IMPLIES reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On IFF reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On IDENTIFIER reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On HATHAT reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On HAT reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On GTGT reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On GT reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On GE reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On FROM reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On FREES reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On FOR reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On EXITS reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On EQUAL reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On EQ reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On EOF reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On ENSURES reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On DOTDOT reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On DISJOINT reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On DECREASES reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On CONTINUES reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On COMPLETE reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On COMMA reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On COLON2 reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On BREAKS reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On BIMPLIES reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On BIFF reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On BEHAVIOR reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On ASSUMES reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On ASSIGNS reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On AND reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On AMP reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner
-- On ALLOCATES reduce production lexpr_inner -> lexpr_inner SLASH lexpr_inner

State 372:
## Known stack suffix:
## lexpr_inner PLUS
## LR(1) items:
lexpr_inner -> lexpr_inner PLUS . lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 212
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LBRACE shift to state 224
-- On INTER shift to state 249
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FALSE shift to state 265
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On string shift to state 304
-- On lexpr_inner shift to state 373
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 373:
## Known stack suffix:
## lexpr_inner PLUS lexpr_inner
## LR(1) items:
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner PLUS lexpr_inner . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On STAR shift to state 303
-- On SLASH shift to state 370
-- On PERCENT shift to state 374
-- On LTCOLON shift to state 306
-- On LSQUARE shift to state 308
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
## Reductions:
-- On WRITES reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On WITH reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On SEMICOLON reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On RSQUARE reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On RPAR reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On RETURNS reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On REQUIRES reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On READS reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On RBRACE reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On QUESTION reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On PLUS reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On PIPE reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On OR reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On NE reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On MINUS reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On LTLT reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On LT reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On LE reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On IMPLIES reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On IFF reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On IDENTIFIER reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On HATHAT reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On HAT reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On GTGT reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On GT reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On GE reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On FROM reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On FREES reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On FOR reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On EXITS reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On EQUAL reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On EQ reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On EOF reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On ENSURES reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On DOTDOT reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On DISJOINT reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On DECREASES reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On CONTINUES reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On COMPLETE reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On COMMA reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On COLON2 reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On BREAKS reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On BIMPLIES reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On BIFF reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On BEHAVIOR reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On ASSUMES reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On ASSIGNS reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On AND reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On AMP reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner
-- On ALLOCATES reduce production lexpr_inner -> lexpr_inner PLUS lexpr_inner

State 374:
## Known stack suffix:
## lexpr_inner PERCENT
## LR(1) items:
lexpr_inner -> lexpr_inner PERCENT . lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 212
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LBRACE shift to state 224
-- On INTER shift to state 249
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FALSE shift to state 265
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On string shift to state 304
-- On lexpr_inner shift to state 375
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 375:
## Known stack suffix:
## lexpr_inner PERCENT lexpr_inner
## LR(1) items:
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner PERCENT lexpr_inner . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LTCOLON shift to state 306
-- On LSQUARE shift to state 308
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
## Reductions:
-- On WRITES reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On WITH reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On STAR reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On SLASH reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On SEMICOLON reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On RSQUARE reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On RPAR reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On RETURNS reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On REQUIRES reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On READS reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On RBRACE reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On QUESTION reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On PLUS reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On PIPE reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On PERCENT reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On OR reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On NE reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On MINUS reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On LTLT reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On LT reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On LE reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On IMPLIES reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On IFF reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On IDENTIFIER reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On HATHAT reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On HAT reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On GTGT reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On GT reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On GE reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On FROM reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On FREES reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On FOR reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On EXITS reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On EQUAL reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On EQ reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On EOF reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On ENSURES reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On DOTDOT reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On DISJOINT reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On DECREASES reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On CONTINUES reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On COMPLETE reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On COMMA reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On COLON2 reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On BREAKS reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On BIMPLIES reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On BIFF reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On BEHAVIOR reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On ASSUMES reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On ASSIGNS reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On AND reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On AMP reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner
-- On ALLOCATES reduce production lexpr_inner -> lexpr_inner PERCENT lexpr_inner

State 376:
## Known stack suffix:
## NE
## LR(1) items:
relation -> NE . [ VALID_READ VALID_RANGE VALID_INDEX VALID UNALLOCATED TYPEOF TRUE TILDE STRING_LITERAL STATIC STAR SIZEOF SEPARATED RESULT REGISTER PLUS OLD OFFSET NULL NOT MINUS LPAR LET LBRACE LAMBDA INTER INITIALIZED IDENTIFIER FRESH FREEABLE FORALL FALSE EXISTS EMPTY DYNAMIC DANGLING CONSTANT10 CONSTANT BSUNION BSTYPE BLOCK_LENGTH BASE_ADDR AUTOMATIC AT AMP ALLOCATION ALLOCABLE ]
## Transitions:
## Reductions:
-- On VALID_READ reduce production relation -> NE
-- On VALID_RANGE reduce production relation -> NE
-- On VALID_INDEX reduce production relation -> NE
-- On VALID reduce production relation -> NE
-- On UNALLOCATED reduce production relation -> NE
-- On TYPEOF reduce production relation -> NE
-- On TRUE reduce production relation -> NE
-- On TILDE reduce production relation -> NE
-- On STRING_LITERAL reduce production relation -> NE
-- On STATIC reduce production relation -> NE
-- On STAR reduce production relation -> NE
-- On SIZEOF reduce production relation -> NE
-- On SEPARATED reduce production relation -> NE
-- On RESULT reduce production relation -> NE
-- On REGISTER reduce production relation -> NE
-- On PLUS reduce production relation -> NE
-- On OLD reduce production relation -> NE
-- On OFFSET reduce production relation -> NE
-- On NULL reduce production relation -> NE
-- On NOT reduce production relation -> NE
-- On MINUS reduce production relation -> NE
-- On LPAR reduce production relation -> NE
-- On LET reduce production relation -> NE
-- On LBRACE reduce production relation -> NE
-- On LAMBDA reduce production relation -> NE
-- On INTER reduce production relation -> NE
-- On INITIALIZED reduce production relation -> NE
-- On IDENTIFIER reduce production relation -> NE
-- On FRESH reduce production relation -> NE
-- On FREEABLE reduce production relation -> NE
-- On FORALL reduce production relation -> NE
-- On FALSE reduce production relation -> NE
-- On EXISTS reduce production relation -> NE
-- On EMPTY reduce production relation -> NE
-- On DYNAMIC reduce production relation -> NE
-- On DANGLING reduce production relation -> NE
-- On CONSTANT10 reduce production relation -> NE
-- On CONSTANT reduce production relation -> NE
-- On BSUNION reduce production relation -> NE
-- On BSTYPE reduce production relation -> NE
-- On BLOCK_LENGTH reduce production relation -> NE
-- On BASE_ADDR reduce production relation -> NE
-- On AUTOMATIC reduce production relation -> NE
-- On AT reduce production relation -> NE
-- On AMP reduce production relation -> NE
-- On ALLOCATION reduce production relation -> NE
-- On ALLOCABLE reduce production relation -> NE

State 377:
## Known stack suffix:
## lexpr_inner MINUS
## LR(1) items:
lexpr_inner -> lexpr_inner MINUS . lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 212
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LBRACE shift to state 224
-- On INTER shift to state 249
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FALSE shift to state 265
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On string shift to state 304
-- On lexpr_inner shift to state 378
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 378:
## Known stack suffix:
## lexpr_inner MINUS lexpr_inner
## LR(1) items:
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner MINUS lexpr_inner . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On STAR shift to state 303
-- On SLASH shift to state 370
-- On PERCENT shift to state 374
-- On LTCOLON shift to state 306
-- On LSQUARE shift to state 308
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
## Reductions:
-- On WRITES reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On WITH reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On SEMICOLON reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On RSQUARE reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On RPAR reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On RETURNS reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On REQUIRES reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On READS reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On RBRACE reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On QUESTION reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On PLUS reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On PIPE reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On OR reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On NE reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On MINUS reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On LTLT reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On LT reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On LE reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On IMPLIES reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On IFF reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On IDENTIFIER reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On HATHAT reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On HAT reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On GTGT reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On GT reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On GE reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On FROM reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On FREES reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On FOR reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On EXITS reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On EQUAL reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On EQ reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On EOF reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On ENSURES reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On DOTDOT reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On DISJOINT reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On DECREASES reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On CONTINUES reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On COMPLETE reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On COMMA reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On COLON2 reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On BREAKS reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On BIMPLIES reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On BIFF reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On BEHAVIOR reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On ASSUMES reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On ASSIGNS reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On AND reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On AMP reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner
-- On ALLOCATES reduce production lexpr_inner -> lexpr_inner MINUS lexpr_inner

State 379:
## Known stack suffix:
## lexpr_inner LTLT
## LR(1) items:
lexpr_inner -> lexpr_inner LTLT . lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 212
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LBRACE shift to state 224
-- On INTER shift to state 249
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FALSE shift to state 265
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On string shift to state 304
-- On lexpr_inner shift to state 380
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 380:
## Known stack suffix:
## lexpr_inner LTLT lexpr_inner
## LR(1) items:
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner LTLT lexpr_inner . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On STAR shift to state 303
-- On SLASH shift to state 370
-- On PLUS shift to state 372
-- On PERCENT shift to state 374
-- On MINUS shift to state 377
-- On LTCOLON shift to state 306
-- On LSQUARE shift to state 308
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
## Reductions:
-- On WRITES reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On WITH reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On SEMICOLON reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On RSQUARE reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On RPAR reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On RETURNS reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On REQUIRES reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On READS reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On RBRACE reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On QUESTION reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On PIPE reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On OR reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On NE reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On LTLT reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On LT reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On LE reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On IMPLIES reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On IFF reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On IDENTIFIER reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On HATHAT reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On HAT reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On GTGT reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On GT reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On GE reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On FROM reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On FREES reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On FOR reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On EXITS reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On EQUAL reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On EQ reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On EOF reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On ENSURES reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On DOTDOT reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On DISJOINT reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On DECREASES reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On CONTINUES reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On COMPLETE reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On COMMA reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On COLON2 reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On BREAKS reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On BIMPLIES reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On BIFF reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On BEHAVIOR reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On ASSUMES reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On ASSIGNS reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On AND reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On AMP reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner
-- On ALLOCATES reduce production lexpr_inner -> lexpr_inner LTLT lexpr_inner

State 381:
## Known stack suffix:
## LT
## LR(1) items:
relation -> LT . [ VALID_READ VALID_RANGE VALID_INDEX VALID UNALLOCATED TYPEOF TRUE TILDE STRING_LITERAL STATIC STAR SIZEOF SEPARATED RESULT REGISTER PLUS OLD OFFSET NULL NOT MINUS LPAR LET LBRACE LAMBDA INTER INITIALIZED IDENTIFIER FRESH FREEABLE FORALL FALSE EXISTS EMPTY DYNAMIC DANGLING CONSTANT10 CONSTANT BSUNION BSTYPE BLOCK_LENGTH BASE_ADDR AUTOMATIC AT AMP ALLOCATION ALLOCABLE ]
## Transitions:
## Reductions:
-- On VALID_READ reduce production relation -> LT
-- On VALID_RANGE reduce production relation -> LT
-- On VALID_INDEX reduce production relation -> LT
-- On VALID reduce production relation -> LT
-- On UNALLOCATED reduce production relation -> LT
-- On TYPEOF reduce production relation -> LT
-- On TRUE reduce production relation -> LT
-- On TILDE reduce production relation -> LT
-- On STRING_LITERAL reduce production relation -> LT
-- On STATIC reduce production relation -> LT
-- On STAR reduce production relation -> LT
-- On SIZEOF reduce production relation -> LT
-- On SEPARATED reduce production relation -> LT
-- On RESULT reduce production relation -> LT
-- On REGISTER reduce production relation -> LT
-- On PLUS reduce production relation -> LT
-- On OLD reduce production relation -> LT
-- On OFFSET reduce production relation -> LT
-- On NULL reduce production relation -> LT
-- On NOT reduce production relation -> LT
-- On MINUS reduce production relation -> LT
-- On LPAR reduce production relation -> LT
-- On LET reduce production relation -> LT
-- On LBRACE reduce production relation -> LT
-- On LAMBDA reduce production relation -> LT
-- On INTER reduce production relation -> LT
-- On INITIALIZED reduce production relation -> LT
-- On IDENTIFIER reduce production relation -> LT
-- On FRESH reduce production relation -> LT
-- On FREEABLE reduce production relation -> LT
-- On FORALL reduce production relation -> LT
-- On FALSE reduce production relation -> LT
-- On EXISTS reduce production relation -> LT
-- On EMPTY reduce production relation -> LT
-- On DYNAMIC reduce production relation -> LT
-- On DANGLING reduce production relation -> LT
-- On CONSTANT10 reduce production relation -> LT
-- On CONSTANT reduce production relation -> LT
-- On BSUNION reduce production relation -> LT
-- On BSTYPE reduce production relation -> LT
-- On BLOCK_LENGTH reduce production relation -> LT
-- On BASE_ADDR reduce production relation -> LT
-- On AUTOMATIC reduce production relation -> LT
-- On AT reduce production relation -> LT
-- On AMP reduce production relation -> LT
-- On ALLOCATION reduce production relation -> LT
-- On ALLOCABLE reduce production relation -> LT

State 382:
## Known stack suffix:
## LE
## LR(1) items:
relation -> LE . [ VALID_READ VALID_RANGE VALID_INDEX VALID UNALLOCATED TYPEOF TRUE TILDE STRING_LITERAL STATIC STAR SIZEOF SEPARATED RESULT REGISTER PLUS OLD OFFSET NULL NOT MINUS LPAR LET LBRACE LAMBDA INTER INITIALIZED IDENTIFIER FRESH FREEABLE FORALL FALSE EXISTS EMPTY DYNAMIC DANGLING CONSTANT10 CONSTANT BSUNION BSTYPE BLOCK_LENGTH BASE_ADDR AUTOMATIC AT AMP ALLOCATION ALLOCABLE ]
## Transitions:
## Reductions:
-- On VALID_READ reduce production relation -> LE
-- On VALID_RANGE reduce production relation -> LE
-- On VALID_INDEX reduce production relation -> LE
-- On VALID reduce production relation -> LE
-- On UNALLOCATED reduce production relation -> LE
-- On TYPEOF reduce production relation -> LE
-- On TRUE reduce production relation -> LE
-- On TILDE reduce production relation -> LE
-- On STRING_LITERAL reduce production relation -> LE
-- On STATIC reduce production relation -> LE
-- On STAR reduce production relation -> LE
-- On SIZEOF reduce production relation -> LE
-- On SEPARATED reduce production relation -> LE
-- On RESULT reduce production relation -> LE
-- On REGISTER reduce production relation -> LE
-- On PLUS reduce production relation -> LE
-- On OLD reduce production relation -> LE
-- On OFFSET reduce production relation -> LE
-- On NULL reduce production relation -> LE
-- On NOT reduce production relation -> LE
-- On MINUS reduce production relation -> LE
-- On LPAR reduce production relation -> LE
-- On LET reduce production relation -> LE
-- On LBRACE reduce production relation -> LE
-- On LAMBDA reduce production relation -> LE
-- On INTER reduce production relation -> LE
-- On INITIALIZED reduce production relation -> LE
-- On IDENTIFIER reduce production relation -> LE
-- On FRESH reduce production relation -> LE
-- On FREEABLE reduce production relation -> LE
-- On FORALL reduce production relation -> LE
-- On FALSE reduce production relation -> LE
-- On EXISTS reduce production relation -> LE
-- On EMPTY reduce production relation -> LE
-- On DYNAMIC reduce production relation -> LE
-- On DANGLING reduce production relation -> LE
-- On CONSTANT10 reduce production relation -> LE
-- On CONSTANT reduce production relation -> LE
-- On BSUNION reduce production relation -> LE
-- On BSTYPE reduce production relation -> LE
-- On BLOCK_LENGTH reduce production relation -> LE
-- On BASE_ADDR reduce production relation -> LE
-- On AUTOMATIC reduce production relation -> LE
-- On AT reduce production relation -> LE
-- On AMP reduce production relation -> LE
-- On ALLOCATION reduce production relation -> LE
-- On ALLOCABLE reduce production relation -> LE

State 383:
## Known stack suffix:
## lexpr_inner GTGT
## LR(1) items:
lexpr_inner -> lexpr_inner GTGT . lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 212
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LBRACE shift to state 224
-- On INTER shift to state 249
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FALSE shift to state 265
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On string shift to state 304
-- On lexpr_inner shift to state 384
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 384:
## Known stack suffix:
## lexpr_inner GTGT lexpr_inner
## LR(1) items:
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner GTGT lexpr_inner . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On STAR shift to state 303
-- On SLASH shift to state 370
-- On PLUS shift to state 372
-- On PERCENT shift to state 374
-- On MINUS shift to state 377
-- On LTCOLON shift to state 306
-- On LSQUARE shift to state 308
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
## Reductions:
-- On WRITES reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On WITH reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On SEMICOLON reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On RSQUARE reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On RPAR reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On RETURNS reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On REQUIRES reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On READS reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On RBRACE reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On QUESTION reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On PIPE reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On OR reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On NE reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On LTLT reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On LT reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On LE reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On IMPLIES reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On IFF reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On IDENTIFIER reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On HATHAT reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On HAT reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On GTGT reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On GT reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On GE reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On FROM reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On FREES reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On FOR reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On EXITS reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On EQUAL reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On EQ reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On EOF reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On ENSURES reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On DOTDOT reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On DISJOINT reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On DECREASES reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On CONTINUES reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On COMPLETE reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On COMMA reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On COLON2 reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On BREAKS reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On BIMPLIES reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On BIFF reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On BEHAVIOR reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On ASSUMES reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On ASSIGNS reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On AND reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On AMP reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner
-- On ALLOCATES reduce production lexpr_inner -> lexpr_inner GTGT lexpr_inner

State 385:
## Known stack suffix:
## GT
## LR(1) items:
relation -> GT . [ VALID_READ VALID_RANGE VALID_INDEX VALID UNALLOCATED TYPEOF TRUE TILDE STRING_LITERAL STATIC STAR SIZEOF SEPARATED RESULT REGISTER PLUS OLD OFFSET NULL NOT MINUS LPAR LET LBRACE LAMBDA INTER INITIALIZED IDENTIFIER FRESH FREEABLE FORALL FALSE EXISTS EMPTY DYNAMIC DANGLING CONSTANT10 CONSTANT BSUNION BSTYPE BLOCK_LENGTH BASE_ADDR AUTOMATIC AT AMP ALLOCATION ALLOCABLE ]
## Transitions:
## Reductions:
-- On VALID_READ reduce production relation -> GT
-- On VALID_RANGE reduce production relation -> GT
-- On VALID_INDEX reduce production relation -> GT
-- On VALID reduce production relation -> GT
-- On UNALLOCATED reduce production relation -> GT
-- On TYPEOF reduce production relation -> GT
-- On TRUE reduce production relation -> GT
-- On TILDE reduce production relation -> GT
-- On STRING_LITERAL reduce production relation -> GT
-- On STATIC reduce production relation -> GT
-- On STAR reduce production relation -> GT
-- On SIZEOF reduce production relation -> GT
-- On SEPARATED reduce production relation -> GT
-- On RESULT reduce production relation -> GT
-- On REGISTER reduce production relation -> GT
-- On PLUS reduce production relation -> GT
-- On OLD reduce production relation -> GT
-- On OFFSET reduce production relation -> GT
-- On NULL reduce production relation -> GT
-- On NOT reduce production relation -> GT
-- On MINUS reduce production relation -> GT
-- On LPAR reduce production relation -> GT
-- On LET reduce production relation -> GT
-- On LBRACE reduce production relation -> GT
-- On LAMBDA reduce production relation -> GT
-- On INTER reduce production relation -> GT
-- On INITIALIZED reduce production relation -> GT
-- On IDENTIFIER reduce production relation -> GT
-- On FRESH reduce production relation -> GT
-- On FREEABLE reduce production relation -> GT
-- On FORALL reduce production relation -> GT
-- On FALSE reduce production relation -> GT
-- On EXISTS reduce production relation -> GT
-- On EMPTY reduce production relation -> GT
-- On DYNAMIC reduce production relation -> GT
-- On DANGLING reduce production relation -> GT
-- On CONSTANT10 reduce production relation -> GT
-- On CONSTANT reduce production relation -> GT
-- On BSUNION reduce production relation -> GT
-- On BSTYPE reduce production relation -> GT
-- On BLOCK_LENGTH reduce production relation -> GT
-- On BASE_ADDR reduce production relation -> GT
-- On AUTOMATIC reduce production relation -> GT
-- On AT reduce production relation -> GT
-- On AMP reduce production relation -> GT
-- On ALLOCATION reduce production relation -> GT
-- On ALLOCABLE reduce production relation -> GT

State 386:
## Known stack suffix:
## GE
## LR(1) items:
relation -> GE . [ VALID_READ VALID_RANGE VALID_INDEX VALID UNALLOCATED TYPEOF TRUE TILDE STRING_LITERAL STATIC STAR SIZEOF SEPARATED RESULT REGISTER PLUS OLD OFFSET NULL NOT MINUS LPAR LET LBRACE LAMBDA INTER INITIALIZED IDENTIFIER FRESH FREEABLE FORALL FALSE EXISTS EMPTY DYNAMIC DANGLING CONSTANT10 CONSTANT BSUNION BSTYPE BLOCK_LENGTH BASE_ADDR AUTOMATIC AT AMP ALLOCATION ALLOCABLE ]
## Transitions:
## Reductions:
-- On VALID_READ reduce production relation -> GE
-- On VALID_RANGE reduce production relation -> GE
-- On VALID_INDEX reduce production relation -> GE
-- On VALID reduce production relation -> GE
-- On UNALLOCATED reduce production relation -> GE
-- On TYPEOF reduce production relation -> GE
-- On TRUE reduce production relation -> GE
-- On TILDE reduce production relation -> GE
-- On STRING_LITERAL reduce production relation -> GE
-- On STATIC reduce production relation -> GE
-- On STAR reduce production relation -> GE
-- On SIZEOF reduce production relation -> GE
-- On SEPARATED reduce production relation -> GE
-- On RESULT reduce production relation -> GE
-- On REGISTER reduce production relation -> GE
-- On PLUS reduce production relation -> GE
-- On OLD reduce production relation -> GE
-- On OFFSET reduce production relation -> GE
-- On NULL reduce production relation -> GE
-- On NOT reduce production relation -> GE
-- On MINUS reduce production relation -> GE
-- On LPAR reduce production relation -> GE
-- On LET reduce production relation -> GE
-- On LBRACE reduce production relation -> GE
-- On LAMBDA reduce production relation -> GE
-- On INTER reduce production relation -> GE
-- On INITIALIZED reduce production relation -> GE
-- On IDENTIFIER reduce production relation -> GE
-- On FRESH reduce production relation -> GE
-- On FREEABLE reduce production relation -> GE
-- On FORALL reduce production relation -> GE
-- On FALSE reduce production relation -> GE
-- On EXISTS reduce production relation -> GE
-- On EMPTY reduce production relation -> GE
-- On DYNAMIC reduce production relation -> GE
-- On DANGLING reduce production relation -> GE
-- On CONSTANT10 reduce production relation -> GE
-- On CONSTANT reduce production relation -> GE
-- On BSUNION reduce production relation -> GE
-- On BSTYPE reduce production relation -> GE
-- On BLOCK_LENGTH reduce production relation -> GE
-- On BASE_ADDR reduce production relation -> GE
-- On AUTOMATIC reduce production relation -> GE
-- On AT reduce production relation -> GE
-- On AMP reduce production relation -> GE
-- On ALLOCATION reduce production relation -> GE
-- On ALLOCABLE reduce production relation -> GE

State 387:
## Known stack suffix:
## EQUAL
## LR(1) items:
relation -> EQUAL . [ VALID_READ VALID_RANGE VALID_INDEX VALID UNALLOCATED TYPEOF TRUE TILDE STRING_LITERAL STATIC STAR SIZEOF SEPARATED RESULT REGISTER PLUS OLD OFFSET NULL NOT MINUS LPAR LET LBRACE LAMBDA INTER INITIALIZED IDENTIFIER FRESH FREEABLE FORALL FALSE EXISTS EMPTY DYNAMIC DANGLING CONSTANT10 CONSTANT BSUNION BSTYPE BLOCK_LENGTH BASE_ADDR AUTOMATIC AT AMP ALLOCATION ALLOCABLE ]
## Transitions:
## Reductions:
-- On VALID_READ reduce production relation -> EQUAL
-- On VALID_RANGE reduce production relation -> EQUAL
-- On VALID_INDEX reduce production relation -> EQUAL
-- On VALID reduce production relation -> EQUAL
-- On UNALLOCATED reduce production relation -> EQUAL
-- On TYPEOF reduce production relation -> EQUAL
-- On TRUE reduce production relation -> EQUAL
-- On TILDE reduce production relation -> EQUAL
-- On STRING_LITERAL reduce production relation -> EQUAL
-- On STATIC reduce production relation -> EQUAL
-- On STAR reduce production relation -> EQUAL
-- On SIZEOF reduce production relation -> EQUAL
-- On SEPARATED reduce production relation -> EQUAL
-- On RESULT reduce production relation -> EQUAL
-- On REGISTER reduce production relation -> EQUAL
-- On PLUS reduce production relation -> EQUAL
-- On OLD reduce production relation -> EQUAL
-- On OFFSET reduce production relation -> EQUAL
-- On NULL reduce production relation -> EQUAL
-- On NOT reduce production relation -> EQUAL
-- On MINUS reduce production relation -> EQUAL
-- On LPAR reduce production relation -> EQUAL
-- On LET reduce production relation -> EQUAL
-- On LBRACE reduce production relation -> EQUAL
-- On LAMBDA reduce production relation -> EQUAL
-- On INTER reduce production relation -> EQUAL
-- On INITIALIZED reduce production relation -> EQUAL
-- On IDENTIFIER reduce production relation -> EQUAL
-- On FRESH reduce production relation -> EQUAL
-- On FREEABLE reduce production relation -> EQUAL
-- On FORALL reduce production relation -> EQUAL
-- On FALSE reduce production relation -> EQUAL
-- On EXISTS reduce production relation -> EQUAL
-- On EMPTY reduce production relation -> EQUAL
-- On DYNAMIC reduce production relation -> EQUAL
-- On DANGLING reduce production relation -> EQUAL
-- On CONSTANT10 reduce production relation -> EQUAL
-- On CONSTANT reduce production relation -> EQUAL
-- On BSUNION reduce production relation -> EQUAL
-- On BSTYPE reduce production relation -> EQUAL
-- On BLOCK_LENGTH reduce production relation -> EQUAL
-- On BASE_ADDR reduce production relation -> EQUAL
-- On AUTOMATIC reduce production relation -> EQUAL
-- On AT reduce production relation -> EQUAL
-- On AMP reduce production relation -> EQUAL
-- On ALLOCATION reduce production relation -> EQUAL
-- On ALLOCABLE reduce production relation -> EQUAL

State 388:
## Known stack suffix:
## EQ
## LR(1) items:
relation -> EQ . [ VALID_READ VALID_RANGE VALID_INDEX VALID UNALLOCATED TYPEOF TRUE TILDE STRING_LITERAL STATIC STAR SIZEOF SEPARATED RESULT REGISTER PLUS OLD OFFSET NULL NOT MINUS LPAR LET LBRACE LAMBDA INTER INITIALIZED IDENTIFIER FRESH FREEABLE FORALL FALSE EXISTS EMPTY DYNAMIC DANGLING CONSTANT10 CONSTANT BSUNION BSTYPE BLOCK_LENGTH BASE_ADDR AUTOMATIC AT AMP ALLOCATION ALLOCABLE ]
## Transitions:
## Reductions:
-- On VALID_READ reduce production relation -> EQ
-- On VALID_RANGE reduce production relation -> EQ
-- On VALID_INDEX reduce production relation -> EQ
-- On VALID reduce production relation -> EQ
-- On UNALLOCATED reduce production relation -> EQ
-- On TYPEOF reduce production relation -> EQ
-- On TRUE reduce production relation -> EQ
-- On TILDE reduce production relation -> EQ
-- On STRING_LITERAL reduce production relation -> EQ
-- On STATIC reduce production relation -> EQ
-- On STAR reduce production relation -> EQ
-- On SIZEOF reduce production relation -> EQ
-- On SEPARATED reduce production relation -> EQ
-- On RESULT reduce production relation -> EQ
-- On REGISTER reduce production relation -> EQ
-- On PLUS reduce production relation -> EQ
-- On OLD reduce production relation -> EQ
-- On OFFSET reduce production relation -> EQ
-- On NULL reduce production relation -> EQ
-- On NOT reduce production relation -> EQ
-- On MINUS reduce production relation -> EQ
-- On LPAR reduce production relation -> EQ
-- On LET reduce production relation -> EQ
-- On LBRACE reduce production relation -> EQ
-- On LAMBDA reduce production relation -> EQ
-- On INTER reduce production relation -> EQ
-- On INITIALIZED reduce production relation -> EQ
-- On IDENTIFIER reduce production relation -> EQ
-- On FRESH reduce production relation -> EQ
-- On FREEABLE reduce production relation -> EQ
-- On FORALL reduce production relation -> EQ
-- On FALSE reduce production relation -> EQ
-- On EXISTS reduce production relation -> EQ
-- On EMPTY reduce production relation -> EQ
-- On DYNAMIC reduce production relation -> EQ
-- On DANGLING reduce production relation -> EQ
-- On CONSTANT10 reduce production relation -> EQ
-- On CONSTANT reduce production relation -> EQ
-- On BSUNION reduce production relation -> EQ
-- On BSTYPE reduce production relation -> EQ
-- On BLOCK_LENGTH reduce production relation -> EQ
-- On BASE_ADDR reduce production relation -> EQ
-- On AUTOMATIC reduce production relation -> EQ
-- On AT reduce production relation -> EQ
-- On AMP reduce production relation -> EQ
-- On ALLOCATION reduce production relation -> EQ
-- On ALLOCABLE reduce production relation -> EQ

State 389:
## Known stack suffix:
## relation
## LR(1) items:
rel_list -> relation . lexpr_end_rel [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
rel_list -> relation . lexpr_inner rel_list [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LET shift to state 218
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On INTER shift to state 249
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FALSE shift to state 265
-- On EXISTS shift to state 266
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On string shift to state 304
-- On lexpr_inner shift to state 390
-- On lexpr_end_rel shift to state 392
-- On lexpr_binder shift to state 315
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 390:
## Known stack suffix:
## relation lexpr_inner
## LR(1) items:
lexpr_end_rel -> lexpr_inner . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
rel_list -> relation lexpr_inner . rel_list [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On STAR shift to state 303
-- On SLASH shift to state 370
-- On PLUS shift to state 372
-- On PERCENT shift to state 374
-- On NE shift to state 376
-- On MINUS shift to state 377
-- On LTLT shift to state 379
-- On LTCOLON shift to state 306
-- On LT shift to state 381
-- On LSQUARE shift to state 308
-- On LE shift to state 382
-- On GTGT shift to state 383
-- On GT shift to state 385
-- On GE shift to state 386
-- On EQUAL shift to state 387
-- On EQ shift to state 388
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
-- On relation shift to state 389
-- On rel_list shift to state 391
## Reductions:
-- On WRITES reduce production lexpr_end_rel -> lexpr_inner
-- On WITH reduce production lexpr_end_rel -> lexpr_inner
-- On SEMICOLON reduce production lexpr_end_rel -> lexpr_inner
-- On RSQUARE reduce production lexpr_end_rel -> lexpr_inner
-- On RPAR reduce production lexpr_end_rel -> lexpr_inner
-- On RETURNS reduce production lexpr_end_rel -> lexpr_inner
-- On REQUIRES reduce production lexpr_end_rel -> lexpr_inner
-- On READS reduce production lexpr_end_rel -> lexpr_inner
-- On RBRACE reduce production lexpr_end_rel -> lexpr_inner
-- On QUESTION reduce production lexpr_end_rel -> lexpr_inner
-- On PIPE reduce production lexpr_end_rel -> lexpr_inner
-- On OR reduce production lexpr_end_rel -> lexpr_inner
-- On IMPLIES reduce production lexpr_end_rel -> lexpr_inner
-- On IFF reduce production lexpr_end_rel -> lexpr_inner
-- On IDENTIFIER reduce production lexpr_end_rel -> lexpr_inner
-- On HATHAT reduce production lexpr_end_rel -> lexpr_inner
-- On HAT reduce production lexpr_end_rel -> lexpr_inner
-- On FROM reduce production lexpr_end_rel -> lexpr_inner
-- On FREES reduce production lexpr_end_rel -> lexpr_inner
-- On FOR reduce production lexpr_end_rel -> lexpr_inner
-- On EXITS reduce production lexpr_end_rel -> lexpr_inner
-- On EOF reduce production lexpr_end_rel -> lexpr_inner
-- On ENSURES reduce production lexpr_end_rel -> lexpr_inner
-- On DOTDOT reduce production lexpr_end_rel -> lexpr_inner
-- On DISJOINT reduce production lexpr_end_rel -> lexpr_inner
-- On DECREASES reduce production lexpr_end_rel -> lexpr_inner
-- On CONTINUES reduce production lexpr_end_rel -> lexpr_inner
-- On COMPLETE reduce production lexpr_end_rel -> lexpr_inner
-- On COMMA reduce production lexpr_end_rel -> lexpr_inner
-- On COLON2 reduce production lexpr_end_rel -> lexpr_inner
-- On BREAKS reduce production lexpr_end_rel -> lexpr_inner
-- On BIMPLIES reduce production lexpr_end_rel -> lexpr_inner
-- On BIFF reduce production lexpr_end_rel -> lexpr_inner
-- On BEHAVIOR reduce production lexpr_end_rel -> lexpr_inner
-- On ASSUMES reduce production lexpr_end_rel -> lexpr_inner
-- On ASSIGNS reduce production lexpr_end_rel -> lexpr_inner
-- On AND reduce production lexpr_end_rel -> lexpr_inner
-- On AMP reduce production lexpr_end_rel -> lexpr_inner
-- On ALLOCATES reduce production lexpr_end_rel -> lexpr_inner

State 391:
## Known stack suffix:
## relation lexpr_inner rel_list
## LR(1) items:
rel_list -> relation lexpr_inner rel_list . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production rel_list -> relation lexpr_inner rel_list
-- On WITH reduce production rel_list -> relation lexpr_inner rel_list
-- On SEMICOLON reduce production rel_list -> relation lexpr_inner rel_list
-- On RSQUARE reduce production rel_list -> relation lexpr_inner rel_list
-- On RPAR reduce production rel_list -> relation lexpr_inner rel_list
-- On RETURNS reduce production rel_list -> relation lexpr_inner rel_list
-- On REQUIRES reduce production rel_list -> relation lexpr_inner rel_list
-- On READS reduce production rel_list -> relation lexpr_inner rel_list
-- On RBRACE reduce production rel_list -> relation lexpr_inner rel_list
-- On QUESTION reduce production rel_list -> relation lexpr_inner rel_list
-- On PIPE reduce production rel_list -> relation lexpr_inner rel_list
-- On OR reduce production rel_list -> relation lexpr_inner rel_list
-- On IMPLIES reduce production rel_list -> relation lexpr_inner rel_list
-- On IFF reduce production rel_list -> relation lexpr_inner rel_list
-- On IDENTIFIER reduce production rel_list -> relation lexpr_inner rel_list
-- On HATHAT reduce production rel_list -> relation lexpr_inner rel_list
-- On HAT reduce production rel_list -> relation lexpr_inner rel_list
-- On FROM reduce production rel_list -> relation lexpr_inner rel_list
-- On FREES reduce production rel_list -> relation lexpr_inner rel_list
-- On FOR reduce production rel_list -> relation lexpr_inner rel_list
-- On EXITS reduce production rel_list -> relation lexpr_inner rel_list
-- On EOF reduce production rel_list -> relation lexpr_inner rel_list
-- On ENSURES reduce production rel_list -> relation lexpr_inner rel_list
-- On DOTDOT reduce production rel_list -> relation lexpr_inner rel_list
-- On DISJOINT reduce production rel_list -> relation lexpr_inner rel_list
-- On DECREASES reduce production rel_list -> relation lexpr_inner rel_list
-- On CONTINUES reduce production rel_list -> relation lexpr_inner rel_list
-- On COMPLETE reduce production rel_list -> relation lexpr_inner rel_list
-- On COMMA reduce production rel_list -> relation lexpr_inner rel_list
-- On COLON2 reduce production rel_list -> relation lexpr_inner rel_list
-- On BREAKS reduce production rel_list -> relation lexpr_inner rel_list
-- On BIMPLIES reduce production rel_list -> relation lexpr_inner rel_list
-- On BIFF reduce production rel_list -> relation lexpr_inner rel_list
-- On BEHAVIOR reduce production rel_list -> relation lexpr_inner rel_list
-- On ASSUMES reduce production rel_list -> relation lexpr_inner rel_list
-- On ASSIGNS reduce production rel_list -> relation lexpr_inner rel_list
-- On AND reduce production rel_list -> relation lexpr_inner rel_list
-- On AMP reduce production rel_list -> relation lexpr_inner rel_list
-- On ALLOCATES reduce production rel_list -> relation lexpr_inner rel_list

State 392:
## Known stack suffix:
## relation lexpr_end_rel
## LR(1) items:
rel_list -> relation lexpr_end_rel . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production rel_list -> relation lexpr_end_rel
-- On WITH reduce production rel_list -> relation lexpr_end_rel
-- On SEMICOLON reduce production rel_list -> relation lexpr_end_rel
-- On RSQUARE reduce production rel_list -> relation lexpr_end_rel
-- On RPAR reduce production rel_list -> relation lexpr_end_rel
-- On RETURNS reduce production rel_list -> relation lexpr_end_rel
-- On REQUIRES reduce production rel_list -> relation lexpr_end_rel
-- On READS reduce production rel_list -> relation lexpr_end_rel
-- On RBRACE reduce production rel_list -> relation lexpr_end_rel
-- On QUESTION reduce production rel_list -> relation lexpr_end_rel
-- On PIPE reduce production rel_list -> relation lexpr_end_rel
-- On OR reduce production rel_list -> relation lexpr_end_rel
-- On IMPLIES reduce production rel_list -> relation lexpr_end_rel
-- On IFF reduce production rel_list -> relation lexpr_end_rel
-- On IDENTIFIER reduce production rel_list -> relation lexpr_end_rel
-- On HATHAT reduce production rel_list -> relation lexpr_end_rel
-- On HAT reduce production rel_list -> relation lexpr_end_rel
-- On FROM reduce production rel_list -> relation lexpr_end_rel
-- On FREES reduce production rel_list -> relation lexpr_end_rel
-- On FOR reduce production rel_list -> relation lexpr_end_rel
-- On EXITS reduce production rel_list -> relation lexpr_end_rel
-- On EOF reduce production rel_list -> relation lexpr_end_rel
-- On ENSURES reduce production rel_list -> relation lexpr_end_rel
-- On DOTDOT reduce production rel_list -> relation lexpr_end_rel
-- On DISJOINT reduce production rel_list -> relation lexpr_end_rel
-- On DECREASES reduce production rel_list -> relation lexpr_end_rel
-- On CONTINUES reduce production rel_list -> relation lexpr_end_rel
-- On COMPLETE reduce production rel_list -> relation lexpr_end_rel
-- On COMMA reduce production rel_list -> relation lexpr_end_rel
-- On COLON2 reduce production rel_list -> relation lexpr_end_rel
-- On BREAKS reduce production rel_list -> relation lexpr_end_rel
-- On BIMPLIES reduce production rel_list -> relation lexpr_end_rel
-- On BIFF reduce production rel_list -> relation lexpr_end_rel
-- On BEHAVIOR reduce production rel_list -> relation lexpr_end_rel
-- On ASSUMES reduce production rel_list -> relation lexpr_end_rel
-- On ASSIGNS reduce production rel_list -> relation lexpr_end_rel
-- On AND reduce production rel_list -> relation lexpr_end_rel
-- On AMP reduce production rel_list -> relation lexpr_end_rel
-- On ALLOCATES reduce production rel_list -> relation lexpr_end_rel

State 393:
## Known stack suffix:
## lexpr_inner rel_list
## LR(1) items:
lexpr_rel -> lexpr_inner rel_list . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_rel -> lexpr_inner rel_list
-- On WITH reduce production lexpr_rel -> lexpr_inner rel_list
-- On SEMICOLON reduce production lexpr_rel -> lexpr_inner rel_list
-- On RSQUARE reduce production lexpr_rel -> lexpr_inner rel_list
-- On RPAR reduce production lexpr_rel -> lexpr_inner rel_list
-- On RETURNS reduce production lexpr_rel -> lexpr_inner rel_list
-- On REQUIRES reduce production lexpr_rel -> lexpr_inner rel_list
-- On READS reduce production lexpr_rel -> lexpr_inner rel_list
-- On RBRACE reduce production lexpr_rel -> lexpr_inner rel_list
-- On QUESTION reduce production lexpr_rel -> lexpr_inner rel_list
-- On PIPE reduce production lexpr_rel -> lexpr_inner rel_list
-- On OR reduce production lexpr_rel -> lexpr_inner rel_list
-- On IMPLIES reduce production lexpr_rel -> lexpr_inner rel_list
-- On IFF reduce production lexpr_rel -> lexpr_inner rel_list
-- On IDENTIFIER reduce production lexpr_rel -> lexpr_inner rel_list
-- On HATHAT reduce production lexpr_rel -> lexpr_inner rel_list
-- On HAT reduce production lexpr_rel -> lexpr_inner rel_list
-- On FROM reduce production lexpr_rel -> lexpr_inner rel_list
-- On FREES reduce production lexpr_rel -> lexpr_inner rel_list
-- On FOR reduce production lexpr_rel -> lexpr_inner rel_list
-- On EXITS reduce production lexpr_rel -> lexpr_inner rel_list
-- On EOF reduce production lexpr_rel -> lexpr_inner rel_list
-- On ENSURES reduce production lexpr_rel -> lexpr_inner rel_list
-- On DOTDOT reduce production lexpr_rel -> lexpr_inner rel_list
-- On DISJOINT reduce production lexpr_rel -> lexpr_inner rel_list
-- On DECREASES reduce production lexpr_rel -> lexpr_inner rel_list
-- On CONTINUES reduce production lexpr_rel -> lexpr_inner rel_list
-- On COMPLETE reduce production lexpr_rel -> lexpr_inner rel_list
-- On COMMA reduce production lexpr_rel -> lexpr_inner rel_list
-- On COLON2 reduce production lexpr_rel -> lexpr_inner rel_list
-- On BREAKS reduce production lexpr_rel -> lexpr_inner rel_list
-- On BIMPLIES reduce production lexpr_rel -> lexpr_inner rel_list
-- On BIFF reduce production lexpr_rel -> lexpr_inner rel_list
-- On BEHAVIOR reduce production lexpr_rel -> lexpr_inner rel_list
-- On ASSUMES reduce production lexpr_rel -> lexpr_inner rel_list
-- On ASSIGNS reduce production lexpr_rel -> lexpr_inner rel_list
-- On AND reduce production lexpr_rel -> lexpr_inner rel_list
-- On AMP reduce production lexpr_rel -> lexpr_inner rel_list
-- On ALLOCATES reduce production lexpr_rel -> lexpr_inner rel_list

State 394:
## Known stack suffix:
## string COLON lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> string COLON lexpr . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On WRITES reduce production lexpr -> string COLON lexpr
-- On WITH reduce production lexpr -> string COLON lexpr
-- On SEMICOLON reduce production lexpr -> string COLON lexpr
-- On RSQUARE reduce production lexpr -> string COLON lexpr
-- On RPAR reduce production lexpr -> string COLON lexpr
-- On RETURNS reduce production lexpr -> string COLON lexpr
-- On REQUIRES reduce production lexpr -> string COLON lexpr
-- On READS reduce production lexpr -> string COLON lexpr
-- On RBRACE reduce production lexpr -> string COLON lexpr
-- On IDENTIFIER reduce production lexpr -> string COLON lexpr
-- On FROM reduce production lexpr -> string COLON lexpr
-- On FREES reduce production lexpr -> string COLON lexpr
-- On FOR reduce production lexpr -> string COLON lexpr
-- On EXITS reduce production lexpr -> string COLON lexpr
-- On EOF reduce production lexpr -> string COLON lexpr
-- On ENSURES reduce production lexpr -> string COLON lexpr
-- On DOTDOT reduce production lexpr -> string COLON lexpr
-- On DISJOINT reduce production lexpr -> string COLON lexpr
-- On DECREASES reduce production lexpr -> string COLON lexpr
-- On CONTINUES reduce production lexpr -> string COLON lexpr
-- On COMPLETE reduce production lexpr -> string COLON lexpr
-- On COMMA reduce production lexpr -> string COLON lexpr
-- On COLON2 reduce production lexpr -> string COLON lexpr
-- On BREAKS reduce production lexpr -> string COLON lexpr
-- On BEHAVIOR reduce production lexpr -> string COLON lexpr
-- On ASSUMES reduce production lexpr -> string COLON lexpr
-- On ASSIGNS reduce production lexpr -> string COLON lexpr
-- On ALLOCATES reduce production lexpr -> string COLON lexpr

State 395:
## Known stack suffix:
## ALLOCABLE opt_label_1 LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 396
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 396:
## Known stack suffix:
## ALLOCABLE opt_label_1 LPAR lexpr RPAR
## LR(1) items:
lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On WITH reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On STAR reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On SLASH reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On SEMICOLON reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On RSQUARE reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On RPAR reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On RETURNS reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On REQUIRES reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On READS reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On RBRACE reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On QUESTION reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On PLUS reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On PIPE reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On PERCENT reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On OR reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On NE reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On MINUS reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On LTLT reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On LTCOLON reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On LT reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On LSQUARE reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On LE reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On IMPLIES reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On IFF reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On IDENTIFIER reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On HATHAT reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On HAT reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On GTGT reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On GT reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On GE reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On FROM reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On FREES reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On FOR reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On EXITS reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On EQUAL reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On EQ reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On EOF reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On ENSURES reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On DOTDOT reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On DOT reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On DISJOINT reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On DECREASES reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On CONTINUES reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On COMPLETE reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On COMMA reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On COLONGT reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On COLON2 reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On BREAKS reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On BIMPLIES reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On BIFF reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On BEHAVIOR reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On ASSUMES reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On ASSIGNS reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On ARROW reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On AND reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On AMP reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR
-- On ALLOCATES reduce production lexpr_inner -> ALLOCABLE opt_label_1 LPAR lexpr RPAR

State 397:
## Known stack suffix:
## ALLOCATION opt_label_1 LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 398
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 398:
## Known stack suffix:
## ALLOCATION opt_label_1 LPAR lexpr RPAR
## LR(1) items:
lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On WITH reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On STAR reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On SLASH reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On SEMICOLON reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On RSQUARE reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On RPAR reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On RETURNS reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On REQUIRES reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On READS reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On RBRACE reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On QUESTION reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On PLUS reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On PIPE reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On PERCENT reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On OR reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On NE reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On MINUS reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On LTLT reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On LTCOLON reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On LT reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On LSQUARE reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On LE reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On IMPLIES reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On IFF reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On IDENTIFIER reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On HATHAT reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On HAT reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On GTGT reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On GT reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On GE reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On FROM reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On FREES reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On FOR reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On EXITS reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On EQUAL reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On EQ reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On EOF reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On ENSURES reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On DOTDOT reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On DOT reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On DISJOINT reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On DECREASES reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On CONTINUES reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On COMPLETE reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On COMMA reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On COLONGT reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On COLON2 reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On BREAKS reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On BIMPLIES reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On BIFF reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On BEHAVIOR reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On ASSUMES reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On ASSIGNS reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On ARROW reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On AND reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On AMP reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR
-- On ALLOCATES reduce production lexpr_inner -> ALLOCATION opt_label_1 LPAR lexpr RPAR

State 399:
## Known stack suffix:
## AMP lexpr_inner
## LR(1) items:
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> AMP lexpr_inner . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LTCOLON shift to state 306
-- On LSQUARE shift to state 308
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
## Reductions:
-- On WRITES reduce production lexpr_inner -> AMP lexpr_inner
-- On WITH reduce production lexpr_inner -> AMP lexpr_inner
-- On STAR reduce production lexpr_inner -> AMP lexpr_inner
-- On SLASH reduce production lexpr_inner -> AMP lexpr_inner
-- On SEMICOLON reduce production lexpr_inner -> AMP lexpr_inner
-- On RSQUARE reduce production lexpr_inner -> AMP lexpr_inner
-- On RPAR reduce production lexpr_inner -> AMP lexpr_inner
-- On RETURNS reduce production lexpr_inner -> AMP lexpr_inner
-- On REQUIRES reduce production lexpr_inner -> AMP lexpr_inner
-- On READS reduce production lexpr_inner -> AMP lexpr_inner
-- On RBRACE reduce production lexpr_inner -> AMP lexpr_inner
-- On QUESTION reduce production lexpr_inner -> AMP lexpr_inner
-- On PLUS reduce production lexpr_inner -> AMP lexpr_inner
-- On PIPE reduce production lexpr_inner -> AMP lexpr_inner
-- On PERCENT reduce production lexpr_inner -> AMP lexpr_inner
-- On OR reduce production lexpr_inner -> AMP lexpr_inner
-- On NE reduce production lexpr_inner -> AMP lexpr_inner
-- On MINUS reduce production lexpr_inner -> AMP lexpr_inner
-- On LTLT reduce production lexpr_inner -> AMP lexpr_inner
-- On LT reduce production lexpr_inner -> AMP lexpr_inner
-- On LE reduce production lexpr_inner -> AMP lexpr_inner
-- On IMPLIES reduce production lexpr_inner -> AMP lexpr_inner
-- On IFF reduce production lexpr_inner -> AMP lexpr_inner
-- On IDENTIFIER reduce production lexpr_inner -> AMP lexpr_inner
-- On HATHAT reduce production lexpr_inner -> AMP lexpr_inner
-- On HAT reduce production lexpr_inner -> AMP lexpr_inner
-- On GTGT reduce production lexpr_inner -> AMP lexpr_inner
-- On GT reduce production lexpr_inner -> AMP lexpr_inner
-- On GE reduce production lexpr_inner -> AMP lexpr_inner
-- On FROM reduce production lexpr_inner -> AMP lexpr_inner
-- On FREES reduce production lexpr_inner -> AMP lexpr_inner
-- On FOR reduce production lexpr_inner -> AMP lexpr_inner
-- On EXITS reduce production lexpr_inner -> AMP lexpr_inner
-- On EQUAL reduce production lexpr_inner -> AMP lexpr_inner
-- On EQ reduce production lexpr_inner -> AMP lexpr_inner
-- On EOF reduce production lexpr_inner -> AMP lexpr_inner
-- On ENSURES reduce production lexpr_inner -> AMP lexpr_inner
-- On DOTDOT reduce production lexpr_inner -> AMP lexpr_inner
-- On DISJOINT reduce production lexpr_inner -> AMP lexpr_inner
-- On DECREASES reduce production lexpr_inner -> AMP lexpr_inner
-- On CONTINUES reduce production lexpr_inner -> AMP lexpr_inner
-- On COMPLETE reduce production lexpr_inner -> AMP lexpr_inner
-- On COMMA reduce production lexpr_inner -> AMP lexpr_inner
-- On COLON2 reduce production lexpr_inner -> AMP lexpr_inner
-- On BREAKS reduce production lexpr_inner -> AMP lexpr_inner
-- On BIMPLIES reduce production lexpr_inner -> AMP lexpr_inner
-- On BIFF reduce production lexpr_inner -> AMP lexpr_inner
-- On BEHAVIOR reduce production lexpr_inner -> AMP lexpr_inner
-- On ASSUMES reduce production lexpr_inner -> AMP lexpr_inner
-- On ASSIGNS reduce production lexpr_inner -> AMP lexpr_inner
-- On AND reduce production lexpr_inner -> AMP lexpr_inner
-- On AMP reduce production lexpr_inner -> AMP lexpr_inner
-- On ALLOCATES reduce production lexpr_inner -> AMP lexpr_inner

State 400:
## Known stack suffix:
## AT LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr_inner -> AT LPAR lexpr . COMMA label_name RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On COMMA shift to state 401
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 401:
## Known stack suffix:
## AT LPAR lexpr COMMA
## LR(1) items:
lexpr_inner -> AT LPAR lexpr COMMA . label_name RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On label_name shift to state 402
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On any_identifier shift to state 86
-- On acsl_c_keyword shift to state 87
## Reductions:

State 402:
## Known stack suffix:
## AT LPAR lexpr COMMA label_name
## LR(1) items:
lexpr_inner -> AT LPAR lexpr COMMA label_name . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 403
## Reductions:

State 403:
## Known stack suffix:
## AT LPAR lexpr COMMA label_name RPAR
## LR(1) items:
lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On WITH reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On STAR reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On SLASH reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On SEMICOLON reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On RSQUARE reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On RPAR reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On RETURNS reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On REQUIRES reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On READS reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On RBRACE reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On QUESTION reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On PLUS reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On PIPE reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On PERCENT reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On OR reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On NE reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On MINUS reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On LTLT reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On LTCOLON reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On LT reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On LSQUARE reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On LE reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On IMPLIES reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On IFF reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On IDENTIFIER reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On HATHAT reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On HAT reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On GTGT reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On GT reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On GE reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On FROM reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On FREES reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On FOR reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On EXITS reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On EQUAL reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On EQ reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On EOF reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On ENSURES reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On DOTDOT reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On DOT reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On DISJOINT reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On DECREASES reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On CONTINUES reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On COMPLETE reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On COMMA reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On COLONGT reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On COLON2 reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On BREAKS reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On BIMPLIES reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On BIFF reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On BEHAVIOR reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On ASSUMES reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On ASSIGNS reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On ARROW reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On AND reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On AMP reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR
-- On ALLOCATES reduce production lexpr_inner -> AT LPAR lexpr COMMA label_name RPAR

State 404:
## Known stack suffix:
## BASE_ADDR opt_label_1 LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 405
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 405:
## Known stack suffix:
## BASE_ADDR opt_label_1 LPAR lexpr RPAR
## LR(1) items:
lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On WITH reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On STAR reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On SLASH reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On SEMICOLON reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On RSQUARE reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On RPAR reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On RETURNS reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On REQUIRES reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On READS reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On RBRACE reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On QUESTION reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On PLUS reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On PIPE reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On PERCENT reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On OR reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On NE reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On MINUS reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On LTLT reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On LTCOLON reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On LT reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On LSQUARE reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On LE reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On IMPLIES reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On IFF reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On IDENTIFIER reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On HATHAT reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On HAT reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On GTGT reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On GT reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On GE reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On FROM reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On FREES reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On FOR reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On EXITS reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On EQUAL reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On EQ reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On EOF reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On ENSURES reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On DOTDOT reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On DOT reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On DISJOINT reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On DECREASES reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On CONTINUES reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On COMPLETE reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On COMMA reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On COLONGT reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On COLON2 reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On BREAKS reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On BIMPLIES reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On BIFF reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On BEHAVIOR reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On ASSUMES reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On ASSIGNS reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On ARROW reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On AND reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On AMP reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR
-- On ALLOCATES reduce production lexpr_inner -> BASE_ADDR opt_label_1 LPAR lexpr RPAR

State 406:
## Known stack suffix:
## BLOCK_LENGTH opt_label_1 LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 407
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 407:
## Known stack suffix:
## BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
## LR(1) items:
lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On WITH reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On STAR reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On SLASH reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On SEMICOLON reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On RSQUARE reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On RPAR reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On RETURNS reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On REQUIRES reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On READS reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On RBRACE reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On QUESTION reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On PLUS reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On PIPE reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On PERCENT reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On OR reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On NE reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On MINUS reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On LTLT reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On LTCOLON reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On LT reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On LSQUARE reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On LE reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On IMPLIES reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On IFF reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On IDENTIFIER reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On HATHAT reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On HAT reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On GTGT reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On GT reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On GE reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On FROM reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On FREES reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On FOR reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On EXITS reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On EQUAL reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On EQ reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On EOF reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On ENSURES reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On DOTDOT reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On DOT reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On DISJOINT reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On DECREASES reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On CONTINUES reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On COMPLETE reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On COMMA reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On COLONGT reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On COLON2 reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On BREAKS reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On BIMPLIES reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On BIFF reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On BEHAVIOR reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On ASSUMES reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On ASSIGNS reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On ARROW reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On AND reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On AMP reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR
-- On ALLOCATES reduce production lexpr_inner -> BLOCK_LENGTH opt_label_1 LPAR lexpr RPAR

State 408:
## Known stack suffix:
## ne_lexpr_list
## LR(1) items:
lexpr_list -> ne_lexpr_list . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR reduce production lexpr_list -> ne_lexpr_list

State 409:
## Known stack suffix:
## BSUNION LPAR lexpr_list
## LR(1) items:
lexpr_inner -> BSUNION LPAR lexpr_list . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 410
## Reductions:

State 410:
## Known stack suffix:
## BSUNION LPAR lexpr_list RPAR
## LR(1) items:
lexpr_inner -> BSUNION LPAR lexpr_list RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On WITH reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On STAR reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On SLASH reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On SEMICOLON reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On RSQUARE reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On RPAR reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On RETURNS reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On REQUIRES reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On READS reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On RBRACE reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On QUESTION reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On PLUS reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On PIPE reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On PERCENT reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On OR reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On NE reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On MINUS reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On LTLT reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On LTCOLON reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On LT reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On LSQUARE reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On LE reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On IMPLIES reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On IFF reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On IDENTIFIER reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On HATHAT reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On HAT reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On GTGT reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On GT reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On GE reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On FROM reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On FREES reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On FOR reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On EXITS reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On EQUAL reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On EQ reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On EOF reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On ENSURES reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On DOTDOT reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On DOT reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On DISJOINT reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On DECREASES reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On CONTINUES reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On COMPLETE reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On COMMA reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On COLONGT reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On COLON2 reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On BREAKS reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On BIMPLIES reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On BIFF reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On BEHAVIOR reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On ASSUMES reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On ASSIGNS reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On ARROW reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On AND reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On AMP reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR
-- On ALLOCATES reduce production lexpr_inner -> BSUNION LPAR lexpr_list RPAR

State 411:
## Known stack suffix:
## DANGLING opt_label_1 LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> DANGLING opt_label_1 LPAR lexpr . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 412
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 412:
## Known stack suffix:
## DANGLING opt_label_1 LPAR lexpr RPAR
## LR(1) items:
lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On WITH reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On STAR reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On SLASH reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On SEMICOLON reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On RSQUARE reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On RPAR reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On RETURNS reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On REQUIRES reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On READS reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On RBRACE reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On QUESTION reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On PLUS reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On PIPE reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On PERCENT reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On OR reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On NE reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On MINUS reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On LTLT reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On LTCOLON reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On LT reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On LSQUARE reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On LE reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On IMPLIES reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On IFF reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On IDENTIFIER reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On HATHAT reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On HAT reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On GTGT reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On GT reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On GE reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On FROM reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On FREES reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On FOR reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On EXITS reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On EQUAL reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On EQ reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On EOF reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On ENSURES reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On DOTDOT reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On DOT reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On DISJOINT reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On DECREASES reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On CONTINUES reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On COMPLETE reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On COMMA reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On COLONGT reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On COLON2 reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On BREAKS reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On BIMPLIES reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On BIFF reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On BEHAVIOR reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On ASSUMES reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On ASSIGNS reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On ARROW reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On AND reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On AMP reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR
-- On ALLOCATES reduce production lexpr_inner -> DANGLING opt_label_1 LPAR lexpr RPAR

State 413:
## Known stack suffix:
## EXISTS binders SEMICOLON lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr_binder -> EXISTS binders SEMICOLON lexpr . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On WRITES reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On WITH reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On SEMICOLON reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On RSQUARE reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On RPAR reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On RETURNS reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On REQUIRES reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On READS reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On RBRACE reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On IDENTIFIER reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On FROM reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On FREES reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On FOR reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On EXITS reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On EOF reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On ENSURES reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On DOTDOT reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On DISJOINT reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On DECREASES reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On CONTINUES reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On COMPLETE reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On COMMA reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On COLON2 reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On BREAKS reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On BEHAVIOR reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On ASSUMES reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On ASSIGNS reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr
-- On ALLOCATES reduce production lexpr_binder -> EXISTS binders SEMICOLON lexpr

State 414:
## Known stack suffix:
## FORALL binders SEMICOLON lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr_binder -> FORALL binders SEMICOLON lexpr . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On WRITES reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On WITH reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On SEMICOLON reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On RSQUARE reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On RPAR reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On RETURNS reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On REQUIRES reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On READS reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On RBRACE reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On IDENTIFIER reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On FROM reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On FREES reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On FOR reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On EXITS reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On EOF reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On ENSURES reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On DOTDOT reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On DISJOINT reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On DECREASES reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On CONTINUES reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On COMPLETE reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On COMMA reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On COLON2 reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On BREAKS reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On BEHAVIOR reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On ASSUMES reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On ASSIGNS reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr
-- On ALLOCATES reduce production lexpr_binder -> FORALL binders SEMICOLON lexpr

State 415:
## Known stack suffix:
## FREEABLE opt_label_1 LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 416
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 416:
## Known stack suffix:
## FREEABLE opt_label_1 LPAR lexpr RPAR
## LR(1) items:
lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On WITH reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On STAR reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On SLASH reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On SEMICOLON reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On RSQUARE reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On RPAR reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On RETURNS reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On REQUIRES reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On READS reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On RBRACE reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On QUESTION reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On PLUS reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On PIPE reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On PERCENT reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On OR reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On NE reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On MINUS reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On LTLT reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On LTCOLON reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On LT reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On LSQUARE reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On LE reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On IMPLIES reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On IFF reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On IDENTIFIER reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On HATHAT reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On HAT reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On GTGT reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On GT reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On GE reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On FROM reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On FREES reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On FOR reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On EXITS reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On EQUAL reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On EQ reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On EOF reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On ENSURES reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On DOTDOT reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On DOT reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On DISJOINT reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On DECREASES reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On CONTINUES reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On COMPLETE reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On COMMA reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On COLONGT reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On COLON2 reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On BREAKS reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On BIMPLIES reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On BIFF reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On BEHAVIOR reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On ASSUMES reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On ASSIGNS reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On ARROW reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On AND reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On AMP reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR
-- On ALLOCATES reduce production lexpr_inner -> FREEABLE opt_label_1 LPAR lexpr RPAR

State 417:
## Known stack suffix:
## FRESH opt_label_2 LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr_inner -> FRESH opt_label_2 LPAR lexpr . COMMA lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On COMMA shift to state 418
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 418:
## Known stack suffix:
## FRESH opt_label_2 LPAR lexpr COMMA
## LR(1) items:
lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA . lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 419
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 419:
## Known stack suffix:
## FRESH opt_label_2 LPAR lexpr COMMA lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 420
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 420:
## Known stack suffix:
## FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
## LR(1) items:
lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On WITH reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On STAR reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On SLASH reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On SEMICOLON reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On RSQUARE reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On RPAR reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On RETURNS reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On REQUIRES reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On READS reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On RBRACE reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On QUESTION reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On PLUS reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On PIPE reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On PERCENT reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On OR reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On NE reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On MINUS reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On LTLT reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On LTCOLON reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On LT reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On LSQUARE reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On LE reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On IMPLIES reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On IFF reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On IDENTIFIER reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On HATHAT reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On HAT reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On GTGT reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On GT reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On GE reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On FROM reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On FREES reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On FOR reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On EXITS reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On EQUAL reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On EQ reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On EOF reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On ENSURES reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On DOTDOT reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On DOT reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On DISJOINT reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On DECREASES reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On CONTINUES reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On COMPLETE reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On COMMA reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On COLONGT reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On COLON2 reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On BREAKS reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On BIMPLIES reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On BIFF reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On BEHAVIOR reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On ASSUMES reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On ASSIGNS reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On ARROW reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On AND reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On AMP reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR
-- On ALLOCATES reduce production lexpr_inner -> FRESH opt_label_2 LPAR lexpr COMMA lexpr RPAR

State 421:
## Known stack suffix:
## INITIALIZED opt_label_1 LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 422
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 422:
## Known stack suffix:
## INITIALIZED opt_label_1 LPAR lexpr RPAR
## LR(1) items:
lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On WITH reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On STAR reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On SLASH reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On SEMICOLON reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On RSQUARE reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On RPAR reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On RETURNS reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On REQUIRES reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On READS reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On RBRACE reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On QUESTION reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On PLUS reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On PIPE reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On PERCENT reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On OR reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On NE reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On MINUS reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On LTLT reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On LTCOLON reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On LT reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On LSQUARE reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On LE reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On IMPLIES reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On IFF reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On IDENTIFIER reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On HATHAT reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On HAT reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On GTGT reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On GT reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On GE reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On FROM reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On FREES reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On FOR reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On EXITS reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On EQUAL reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On EQ reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On EOF reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On ENSURES reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On DOTDOT reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On DOT reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On DISJOINT reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On DECREASES reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On CONTINUES reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On COMPLETE reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On COMMA reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On COLONGT reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On COLON2 reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On BREAKS reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On BIMPLIES reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On BIFF reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On BEHAVIOR reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On ASSUMES reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On ASSIGNS reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On ARROW reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On AND reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On AMP reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR
-- On ALLOCATES reduce production lexpr_inner -> INITIALIZED opt_label_1 LPAR lexpr RPAR

State 423:
## Known stack suffix:
## INTER LPAR lexpr_list
## LR(1) items:
lexpr_inner -> INTER LPAR lexpr_list . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 424
## Reductions:

State 424:
## Known stack suffix:
## INTER LPAR lexpr_list RPAR
## LR(1) items:
lexpr_inner -> INTER LPAR lexpr_list RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On WITH reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On STAR reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On SLASH reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On SEMICOLON reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On RSQUARE reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On RPAR reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On RETURNS reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On REQUIRES reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On READS reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On RBRACE reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On QUESTION reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On PLUS reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On PIPE reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On PERCENT reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On OR reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On NE reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On MINUS reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On LTLT reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On LTCOLON reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On LT reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On LSQUARE reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On LE reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On IMPLIES reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On IFF reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On IDENTIFIER reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On HATHAT reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On HAT reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On GTGT reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On GT reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On GE reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On FROM reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On FREES reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On FOR reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On EXITS reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On EQUAL reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On EQ reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On EOF reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On ENSURES reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On DOTDOT reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On DOT reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On DISJOINT reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On DECREASES reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On CONTINUES reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On COMPLETE reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On COMMA reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On COLONGT reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On COLON2 reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On BREAKS reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On BIMPLIES reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On BIFF reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On BEHAVIOR reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On ASSUMES reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On ASSIGNS reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On ARROW reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On AND reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On AMP reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR
-- On ALLOCATES reduce production lexpr_inner -> INTER LPAR lexpr_list RPAR

State 425:
## Known stack suffix:
## LAMBDA binders SEMICOLON lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr_binder -> LAMBDA binders SEMICOLON lexpr . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On WRITES reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On WITH reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On SEMICOLON reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On RSQUARE reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On RPAR reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On RETURNS reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On REQUIRES reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On READS reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On RBRACE reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On IDENTIFIER reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On FROM reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On FREES reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On FOR reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On EXITS reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On EOF reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On ENSURES reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On DOTDOT reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On DISJOINT reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On DECREASES reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On CONTINUES reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On COMPLETE reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On COMMA reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On COLON2 reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On BREAKS reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On BEHAVIOR reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On ASSUMES reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On ASSIGNS reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr
-- On ALLOCATES reduce production lexpr_binder -> LAMBDA binders SEMICOLON lexpr

State 426:
## Known stack suffix:
## LSQUARE range
## LR(1) items:
array_path_elt -> LSQUARE range . RSQUARE [ LSQUARE EQUAL DOT ]
## Transitions:
-- On RSQUARE shift to state 427
## Reductions:

State 427:
## Known stack suffix:
## LSQUARE range RSQUARE
## LR(1) items:
array_path_elt -> LSQUARE range RSQUARE . [ LSQUARE EQUAL DOT ]
## Transitions:
## Reductions:
-- On LSQUARE reduce production array_path_elt -> LSQUARE range RSQUARE
-- On EQUAL reduce production array_path_elt -> LSQUARE range RSQUARE
-- On DOT reduce production array_path_elt -> LSQUARE range RSQUARE

State 428:
## Known stack suffix:
## LSQUARE lexpr
## LR(1) items:
array_path_elt -> LSQUARE lexpr . RSQUARE [ LSQUARE EQUAL DOT ]
lexpr -> lexpr . IMPLIES lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RSQUARE QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr_option -> lexpr . [ DOTDOT ]
## Transitions:
-- On RSQUARE shift to state 429
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On DOTDOT reduce production lexpr_option -> lexpr

State 429:
## Known stack suffix:
## LSQUARE lexpr RSQUARE
## LR(1) items:
array_path_elt -> LSQUARE lexpr RSQUARE . [ LSQUARE EQUAL DOT ]
## Transitions:
## Reductions:
-- On LSQUARE reduce production array_path_elt -> LSQUARE lexpr RSQUARE
-- On EQUAL reduce production array_path_elt -> LSQUARE lexpr RSQUARE
-- On DOT reduce production array_path_elt -> LSQUARE lexpr RSQUARE

State 430:
## Known stack suffix:
## DOT
## LR(1) items:
field_path_elt -> DOT . identifier_or_typename [ LSQUARE EQUAL DOT ]
## Transitions:
-- On TYPENAME shift to state 10
-- On IDENTIFIER shift to state 39
-- On identifier_or_typename shift to state 431
## Reductions:

State 431:
## Known stack suffix:
## DOT identifier_or_typename
## LR(1) items:
field_path_elt -> DOT identifier_or_typename . [ LSQUARE EQUAL DOT ]
## Transitions:
## Reductions:
-- On LSQUARE reduce production field_path_elt -> DOT identifier_or_typename
-- On EQUAL reduce production field_path_elt -> DOT identifier_or_typename
-- On DOT reduce production field_path_elt -> DOT identifier_or_typename

State 432:
## Known stack suffix:
## LBRACE lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WITH RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ WITH RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ WITH RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ WITH RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ WITH RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ WITH RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ WITH RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ WITH RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ WITH RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ WITH RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WITH RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> LBRACE lexpr . RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> LBRACE lexpr . PIPE binders RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> LBRACE lexpr . PIPE binders SEMICOLON lexpr RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> LBRACE lexpr . WITH update RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WITH shift to state 433
-- On RBRACE shift to state 466
-- On QUESTION shift to state 317
-- On PIPE shift to state 467
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 433:
## Known stack suffix:
## LBRACE lexpr WITH
## LR(1) items:
lexpr_inner -> LBRACE lexpr WITH . update RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LSQUARE shift to state 225
-- On DOT shift to state 430
-- On update_elt shift to state 434
-- On update shift to state 464
-- On path_elt shift to state 437
-- On path shift to state 441
-- On field_path_elt shift to state 439
-- On array_path_elt shift to state 440
## Reductions:

State 434:
## Known stack suffix:
## update_elt
## LR(1) items:
update -> update_elt . [ RBRACE ]
update -> update_elt . COMMA update [ RBRACE ]
## Transitions:
-- On COMMA shift to state 435
## Reductions:
-- On RBRACE reduce production update -> update_elt

State 435:
## Known stack suffix:
## update_elt COMMA
## LR(1) items:
update -> update_elt COMMA . update [ RBRACE ]
## Transitions:
-- On LSQUARE shift to state 225
-- On DOT shift to state 430
-- On update_elt shift to state 434
-- On update shift to state 436
-- On path_elt shift to state 437
-- On path shift to state 441
-- On field_path_elt shift to state 439
-- On array_path_elt shift to state 440
## Reductions:

State 436:
## Known stack suffix:
## update_elt COMMA update
## LR(1) items:
update -> update_elt COMMA update . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production update -> update_elt COMMA update

State 437:
## Known stack suffix:
## path_elt
## LR(1) items:
path -> path_elt . [ EQUAL ]
path -> path_elt . path [ EQUAL ]
## Transitions:
-- On LSQUARE shift to state 225
-- On DOT shift to state 430
-- On path_elt shift to state 437
-- On path shift to state 438
-- On field_path_elt shift to state 439
-- On array_path_elt shift to state 440
## Reductions:
-- On EQUAL reduce production path -> path_elt

State 438:
## Known stack suffix:
## path_elt path
## LR(1) items:
path -> path_elt path . [ EQUAL ]
## Transitions:
## Reductions:
-- On EQUAL reduce production path -> path_elt path

State 439:
## Known stack suffix:
## field_path_elt
## LR(1) items:
path_elt -> field_path_elt . [ LSQUARE EQUAL DOT ]
## Transitions:
## Reductions:
-- On LSQUARE reduce production path_elt -> field_path_elt
-- On EQUAL reduce production path_elt -> field_path_elt
-- On DOT reduce production path_elt -> field_path_elt

State 440:
## Known stack suffix:
## array_path_elt
## LR(1) items:
path_elt -> array_path_elt . [ LSQUARE EQUAL DOT ]
## Transitions:
## Reductions:
-- On LSQUARE reduce production path_elt -> array_path_elt
-- On EQUAL reduce production path_elt -> array_path_elt
-- On DOT reduce production path_elt -> array_path_elt

State 441:
## Known stack suffix:
## path
## LR(1) items:
update_elt -> path . EQUAL lexpr [ RBRACE COMMA ]
update_elt -> path . EQUAL LBRACE WITH update RBRACE [ RBRACE COMMA ]
## Transitions:
-- On EQUAL shift to state 442
## Reductions:

State 442:
## Known stack suffix:
## path EQUAL
## LR(1) items:
update_elt -> path EQUAL . lexpr [ RBRACE COMMA ]
update_elt -> path EQUAL . LBRACE WITH update RBRACE [ RBRACE COMMA ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 443
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 463
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 443:
## Known stack suffix:
## path EQUAL LBRACE
## LR(1) items:
lexpr_inner -> LBRACE . lexpr RBRACE [ STAR SLASH RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF HATHAT HAT GTGT GT GE EQUAL EQ DOT COMMA COLONGT BIMPLIES BIFF ARROW AND AMP ]
lexpr_inner -> LBRACE . lexpr PIPE binders RBRACE [ STAR SLASH RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF HATHAT HAT GTGT GT GE EQUAL EQ DOT COMMA COLONGT BIMPLIES BIFF ARROW AND AMP ]
lexpr_inner -> LBRACE . lexpr PIPE binders SEMICOLON lexpr RBRACE [ STAR SLASH RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF HATHAT HAT GTGT GT GE EQUAL EQ DOT COMMA COLONGT BIMPLIES BIFF ARROW AND AMP ]
lexpr_inner -> LBRACE . field_init RBRACE [ STAR SLASH RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF HATHAT HAT GTGT GT GE EQUAL EQ DOT COMMA COLONGT BIMPLIES BIFF ARROW AND AMP ]
lexpr_inner -> LBRACE . array_init RBRACE [ STAR SLASH RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF HATHAT HAT GTGT GT GE EQUAL EQ DOT COMMA COLONGT BIMPLIES BIFF ARROW AND AMP ]
lexpr_inner -> LBRACE . lexpr WITH update RBRACE [ STAR SLASH RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF HATHAT HAT GTGT GT GE EQUAL EQ DOT COMMA COLONGT BIMPLIES BIFF ARROW AND AMP ]
update_elt -> path EQUAL LBRACE . WITH update RBRACE [ RBRACE COMMA ]
## Transitions:
-- On WRITES shift to state 1
-- On WITH shift to state 444
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LSQUARE shift to state 225
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DOT shift to state 430
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 432
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On field_path_elt shift to state 447
-- On field_init_elt shift to state 450
-- On field_init shift to state 453
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On array_path_elt shift to state 455
-- On array_init_elt shift to state 458
-- On array_init shift to state 461
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 444:
## Known stack suffix:
## path EQUAL LBRACE WITH
## LR(1) items:
update_elt -> path EQUAL LBRACE WITH . update RBRACE [ RBRACE COMMA ]
## Transitions:
-- On LSQUARE shift to state 225
-- On DOT shift to state 430
-- On update_elt shift to state 434
-- On update shift to state 445
-- On path_elt shift to state 437
-- On path shift to state 441
-- On field_path_elt shift to state 439
-- On array_path_elt shift to state 440
## Reductions:

State 445:
## Known stack suffix:
## path EQUAL LBRACE WITH update
## LR(1) items:
update_elt -> path EQUAL LBRACE WITH update . RBRACE [ RBRACE COMMA ]
## Transitions:
-- On RBRACE shift to state 446
## Reductions:

State 446:
## Known stack suffix:
## path EQUAL LBRACE WITH update RBRACE
## LR(1) items:
update_elt -> path EQUAL LBRACE WITH update RBRACE . [ RBRACE COMMA ]
## Transitions:
## Reductions:
-- On RBRACE reduce production update_elt -> path EQUAL LBRACE WITH update RBRACE
-- On COMMA reduce production update_elt -> path EQUAL LBRACE WITH update RBRACE

State 447:
## Known stack suffix:
## field_path_elt
## LR(1) items:
field_init_elt -> field_path_elt . EQUAL lexpr [ RBRACE COMMA ]
## Transitions:
-- On EQUAL shift to state 448
## Reductions:

State 448:
## Known stack suffix:
## field_path_elt EQUAL
## LR(1) items:
field_init_elt -> field_path_elt EQUAL . lexpr [ RBRACE COMMA ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 449
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 449:
## Known stack suffix:
## field_path_elt EQUAL lexpr
## LR(1) items:
field_init_elt -> field_path_elt EQUAL lexpr . [ RBRACE COMMA ]
lexpr -> lexpr . IMPLIES lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On RBRACE reduce production field_init_elt -> field_path_elt EQUAL lexpr
-- On COMMA reduce production field_init_elt -> field_path_elt EQUAL lexpr

State 450:
## Known stack suffix:
## field_init_elt
## LR(1) items:
field_init -> field_init_elt . [ RBRACE ]
field_init -> field_init_elt . COMMA field_init [ RBRACE ]
## Transitions:
-- On COMMA shift to state 451
## Reductions:
-- On RBRACE reduce production field_init -> field_init_elt

State 451:
## Known stack suffix:
## field_init_elt COMMA
## LR(1) items:
field_init -> field_init_elt COMMA . field_init [ RBRACE ]
## Transitions:
-- On DOT shift to state 430
-- On field_path_elt shift to state 447
-- On field_init_elt shift to state 450
-- On field_init shift to state 452
## Reductions:

State 452:
## Known stack suffix:
## field_init_elt COMMA field_init
## LR(1) items:
field_init -> field_init_elt COMMA field_init . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production field_init -> field_init_elt COMMA field_init

State 453:
## Known stack suffix:
## LBRACE field_init
## LR(1) items:
lexpr_inner -> LBRACE field_init . RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RBRACE shift to state 454
## Reductions:

State 454:
## Known stack suffix:
## LBRACE field_init RBRACE
## LR(1) items:
lexpr_inner -> LBRACE field_init RBRACE . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On WITH reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On STAR reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On SLASH reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On SEMICOLON reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On RSQUARE reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On RPAR reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On RETURNS reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On REQUIRES reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On READS reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On RBRACE reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On QUESTION reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On PLUS reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On PIPE reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On PERCENT reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On OR reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On NE reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On MINUS reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On LTLT reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On LTCOLON reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On LT reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On LSQUARE reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On LE reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On IMPLIES reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On IFF reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On IDENTIFIER reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On HATHAT reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On HAT reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On GTGT reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On GT reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On GE reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On FROM reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On FREES reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On FOR reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On EXITS reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On EQUAL reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On EQ reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On EOF reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On ENSURES reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On DOTDOT reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On DOT reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On DISJOINT reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On DECREASES reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On CONTINUES reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On COMPLETE reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On COMMA reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On COLONGT reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On COLON2 reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On BREAKS reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On BIMPLIES reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On BIFF reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On BEHAVIOR reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On ASSUMES reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On ASSIGNS reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On ARROW reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On AND reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On AMP reduce production lexpr_inner -> LBRACE field_init RBRACE
-- On ALLOCATES reduce production lexpr_inner -> LBRACE field_init RBRACE

State 455:
## Known stack suffix:
## array_path_elt
## LR(1) items:
array_init_elt -> array_path_elt . EQUAL lexpr [ RBRACE COMMA ]
## Transitions:
-- On EQUAL shift to state 456
## Reductions:

State 456:
## Known stack suffix:
## array_path_elt EQUAL
## LR(1) items:
array_init_elt -> array_path_elt EQUAL . lexpr [ RBRACE COMMA ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 457
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 457:
## Known stack suffix:
## array_path_elt EQUAL lexpr
## LR(1) items:
array_init_elt -> array_path_elt EQUAL lexpr . [ RBRACE COMMA ]
lexpr -> lexpr . IMPLIES lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On RBRACE reduce production array_init_elt -> array_path_elt EQUAL lexpr
-- On COMMA reduce production array_init_elt -> array_path_elt EQUAL lexpr

State 458:
## Known stack suffix:
## array_init_elt
## LR(1) items:
array_init -> array_init_elt . [ RBRACE ]
array_init -> array_init_elt . COMMA array_init [ RBRACE ]
## Transitions:
-- On COMMA shift to state 459
## Reductions:
-- On RBRACE reduce production array_init -> array_init_elt

State 459:
## Known stack suffix:
## array_init_elt COMMA
## LR(1) items:
array_init -> array_init_elt COMMA . array_init [ RBRACE ]
## Transitions:
-- On LSQUARE shift to state 225
-- On array_path_elt shift to state 455
-- On array_init_elt shift to state 458
-- On array_init shift to state 460
## Reductions:

State 460:
## Known stack suffix:
## array_init_elt COMMA array_init
## LR(1) items:
array_init -> array_init_elt COMMA array_init . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production array_init -> array_init_elt COMMA array_init

State 461:
## Known stack suffix:
## LBRACE array_init
## LR(1) items:
lexpr_inner -> LBRACE array_init . RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RBRACE shift to state 462
## Reductions:

State 462:
## Known stack suffix:
## LBRACE array_init RBRACE
## LR(1) items:
lexpr_inner -> LBRACE array_init RBRACE . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On WITH reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On STAR reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On SLASH reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On SEMICOLON reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On RSQUARE reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On RPAR reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On RETURNS reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On REQUIRES reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On READS reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On RBRACE reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On QUESTION reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On PLUS reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On PIPE reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On PERCENT reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On OR reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On NE reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On MINUS reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On LTLT reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On LTCOLON reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On LT reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On LSQUARE reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On LE reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On IMPLIES reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On IFF reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On IDENTIFIER reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On HATHAT reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On HAT reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On GTGT reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On GT reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On GE reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On FROM reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On FREES reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On FOR reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On EXITS reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On EQUAL reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On EQ reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On EOF reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On ENSURES reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On DOTDOT reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On DOT reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On DISJOINT reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On DECREASES reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On CONTINUES reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On COMPLETE reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On COMMA reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On COLONGT reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On COLON2 reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On BREAKS reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On BIMPLIES reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On BIFF reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On BEHAVIOR reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On ASSUMES reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On ASSIGNS reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On ARROW reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On AND reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On AMP reduce production lexpr_inner -> LBRACE array_init RBRACE
-- On ALLOCATES reduce production lexpr_inner -> LBRACE array_init RBRACE

State 463:
## Known stack suffix:
## path EQUAL lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
update_elt -> path EQUAL lexpr . [ RBRACE COMMA ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On RBRACE reduce production update_elt -> path EQUAL lexpr
-- On COMMA reduce production update_elt -> path EQUAL lexpr

State 464:
## Known stack suffix:
## LBRACE lexpr WITH update
## LR(1) items:
lexpr_inner -> LBRACE lexpr WITH update . RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RBRACE shift to state 465
## Reductions:

State 465:
## Known stack suffix:
## LBRACE lexpr WITH update RBRACE
## LR(1) items:
lexpr_inner -> LBRACE lexpr WITH update RBRACE . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On WITH reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On STAR reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On SLASH reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On SEMICOLON reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On RSQUARE reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On RPAR reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On RETURNS reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On REQUIRES reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On READS reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On RBRACE reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On QUESTION reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On PLUS reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On PIPE reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On PERCENT reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On OR reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On NE reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On MINUS reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On LTLT reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On LTCOLON reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On LT reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On LSQUARE reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On LE reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On IMPLIES reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On IFF reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On IDENTIFIER reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On HATHAT reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On HAT reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On GTGT reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On GT reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On GE reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On FROM reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On FREES reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On FOR reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On EXITS reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On EQUAL reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On EQ reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On EOF reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On ENSURES reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On DOTDOT reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On DOT reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On DISJOINT reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On DECREASES reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On CONTINUES reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On COMPLETE reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On COMMA reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On COLONGT reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On COLON2 reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On BREAKS reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On BIMPLIES reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On BIFF reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On BEHAVIOR reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On ASSUMES reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On ASSIGNS reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On ARROW reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On AND reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On AMP reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE
-- On ALLOCATES reduce production lexpr_inner -> LBRACE lexpr WITH update RBRACE

State 466:
## Known stack suffix:
## LBRACE lexpr RBRACE
## LR(1) items:
lexpr_inner -> LBRACE lexpr RBRACE . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On WITH reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On STAR reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On SLASH reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On SEMICOLON reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On RSQUARE reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On RPAR reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On RETURNS reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On REQUIRES reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On READS reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On RBRACE reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On QUESTION reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On PLUS reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On PIPE reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On PERCENT reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On OR reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On NE reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On MINUS reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On LTLT reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On LTCOLON reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On LT reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On LSQUARE reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On LE reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On IMPLIES reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On IFF reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On IDENTIFIER reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On HATHAT reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On HAT reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On GTGT reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On GT reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On GE reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On FROM reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On FREES reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On FOR reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On EXITS reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On EQUAL reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On EQ reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On EOF reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On ENSURES reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On DOTDOT reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On DOT reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On DISJOINT reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On DECREASES reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On CONTINUES reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On COMPLETE reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On COMMA reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On COLONGT reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On COLON2 reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On BREAKS reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On BIMPLIES reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On BIFF reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On BEHAVIOR reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On ASSUMES reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On ASSIGNS reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On ARROW reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On AND reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On AMP reduce production lexpr_inner -> LBRACE lexpr RBRACE
-- On ALLOCATES reduce production lexpr_inner -> LBRACE lexpr RBRACE

State 467:
## Known stack suffix:
## LBRACE lexpr PIPE
## LR(1) items:
lexpr -> lexpr PIPE . lexpr [ WITH RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> LBRACE lexpr PIPE . binders RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> LBRACE lexpr PIPE . binders SEMICOLON lexpr RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 110
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 111
-- On UNION shift to state 119
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 122
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 195
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 198
-- On SHORT shift to state 199
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 216
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 217
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 468
-- On INT shift to state 469
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 470
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 471
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 472
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 473
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 474
-- On BOOL shift to state 475
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On type_spec shift to state 227
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 320
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On decl_spec shift to state 242
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On binders_reentrance shift to state 243
-- On binders shift to state 476
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 468:
## Known stack suffix:
## INTEGER
## LR(1) items:
is_acsl_other -> INTEGER . [ COLON ]
type_spec -> INTEGER . [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production type_spec -> INTEGER
-- On STAR reduce production type_spec -> INTEGER
-- On RPAR reduce production type_spec -> INTEGER
-- On LSQUARE reduce production type_spec -> INTEGER
-- On LPAR reduce production type_spec -> INTEGER
-- On IDENTIFIER reduce production type_spec -> INTEGER
-- On CONST reduce production type_spec -> INTEGER
-- On COLON reduce production is_acsl_other -> INTEGER

State 469:
## Known stack suffix:
## INT
## LR(1) items:
c_keyword -> INT . [ COLON ]
type_spec -> INT . [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production type_spec -> INT
-- On STAR reduce production type_spec -> INT
-- On RPAR reduce production type_spec -> INT
-- On LSQUARE reduce production type_spec -> INT
-- On LPAR reduce production type_spec -> INT
-- On IDENTIFIER reduce production type_spec -> INT
-- On CONST reduce production type_spec -> INT
-- On COLON reduce production c_keyword -> INT

State 470:
## Known stack suffix:
## FLOAT
## LR(1) items:
c_keyword -> FLOAT . [ COLON ]
type_spec -> FLOAT . [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production type_spec -> FLOAT
-- On STAR reduce production type_spec -> FLOAT
-- On RPAR reduce production type_spec -> FLOAT
-- On LSQUARE reduce production type_spec -> FLOAT
-- On LPAR reduce production type_spec -> FLOAT
-- On IDENTIFIER reduce production type_spec -> FLOAT
-- On CONST reduce production type_spec -> FLOAT
-- On COLON reduce production c_keyword -> FLOAT

State 471:
## Known stack suffix:
## ENUM
## LR(1) items:
c_keyword -> ENUM . [ COLON ]
type_spec -> ENUM . exit_rt_type identifier_or_typename [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
## Transitions:
-- On exit_rt_type shift to state 151
## Reductions:
-- On TYPENAME reduce production exit_rt_type ->
-- On IDENTIFIER reduce production exit_rt_type ->
-- On COLON reduce production c_keyword -> ENUM

State 472:
## Known stack suffix:
## DOUBLE
## LR(1) items:
c_keyword -> DOUBLE . [ COLON ]
type_spec -> DOUBLE . [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production type_spec -> DOUBLE
-- On STAR reduce production type_spec -> DOUBLE
-- On RPAR reduce production type_spec -> DOUBLE
-- On LSQUARE reduce production type_spec -> DOUBLE
-- On LPAR reduce production type_spec -> DOUBLE
-- On IDENTIFIER reduce production type_spec -> DOUBLE
-- On CONST reduce production type_spec -> DOUBLE
-- On COLON reduce production c_keyword -> DOUBLE

State 473:
## Known stack suffix:
## CHAR
## LR(1) items:
c_keyword -> CHAR . [ COLON ]
type_spec -> CHAR . [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production type_spec -> CHAR
-- On STAR reduce production type_spec -> CHAR
-- On RPAR reduce production type_spec -> CHAR
-- On LSQUARE reduce production type_spec -> CHAR
-- On LPAR reduce production type_spec -> CHAR
-- On IDENTIFIER reduce production type_spec -> CHAR
-- On CONST reduce production type_spec -> CHAR
-- On COLON reduce production c_keyword -> CHAR

State 474:
## Known stack suffix:
## BOOLEAN
## LR(1) items:
c_keyword -> BOOLEAN . [ COLON ]
type_spec -> BOOLEAN . [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production type_spec -> BOOLEAN
-- On STAR reduce production type_spec -> BOOLEAN
-- On RPAR reduce production type_spec -> BOOLEAN
-- On LSQUARE reduce production type_spec -> BOOLEAN
-- On LPAR reduce production type_spec -> BOOLEAN
-- On IDENTIFIER reduce production type_spec -> BOOLEAN
-- On CONST reduce production type_spec -> BOOLEAN
-- On COLON reduce production c_keyword -> BOOLEAN

State 475:
## Known stack suffix:
## BOOL
## LR(1) items:
c_keyword -> BOOL . [ COLON ]
type_spec -> BOOL . [ VOLATILE STAR RPAR LSQUARE LPAR IDENTIFIER CONST ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production type_spec -> BOOL
-- On STAR reduce production type_spec -> BOOL
-- On RPAR reduce production type_spec -> BOOL
-- On LSQUARE reduce production type_spec -> BOOL
-- On LPAR reduce production type_spec -> BOOL
-- On IDENTIFIER reduce production type_spec -> BOOL
-- On CONST reduce production type_spec -> BOOL
-- On COLON reduce production c_keyword -> BOOL

State 476:
## Known stack suffix:
## LBRACE lexpr PIPE binders
## LR(1) items:
lexpr_inner -> LBRACE lexpr PIPE binders . RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> LBRACE lexpr PIPE binders . SEMICOLON lexpr RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On SEMICOLON shift to state 477
-- On RBRACE shift to state 480
## Reductions:

State 477:
## Known stack suffix:
## LBRACE lexpr PIPE binders SEMICOLON
## LR(1) items:
lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON . lexpr RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 478
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 478:
## Known stack suffix:
## LBRACE lexpr PIPE binders SEMICOLON lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RBRACE QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr . RBRACE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RBRACE shift to state 479
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 479:
## Known stack suffix:
## LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
## LR(1) items:
lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On WITH reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On STAR reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On SLASH reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On SEMICOLON reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On RSQUARE reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On RPAR reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On RETURNS reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On REQUIRES reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On READS reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On RBRACE reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On QUESTION reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On PLUS reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On PIPE reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On PERCENT reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On OR reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On NE reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On MINUS reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On LTLT reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On LTCOLON reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On LT reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On LSQUARE reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On LE reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On IMPLIES reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On IFF reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On IDENTIFIER reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On HATHAT reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On HAT reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On GTGT reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On GT reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On GE reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On FROM reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On FREES reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On FOR reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On EXITS reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On EQUAL reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On EQ reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On EOF reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On ENSURES reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On DOTDOT reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On DOT reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On DISJOINT reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On DECREASES reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On CONTINUES reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On COMPLETE reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On COMMA reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On COLONGT reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On COLON2 reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On BREAKS reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On BIMPLIES reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On BIFF reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On BEHAVIOR reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On ASSUMES reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On ASSIGNS reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On ARROW reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On AND reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On AMP reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE
-- On ALLOCATES reduce production lexpr_inner -> LBRACE lexpr PIPE binders SEMICOLON lexpr RBRACE

State 480:
## Known stack suffix:
## LBRACE lexpr PIPE binders RBRACE
## LR(1) items:
lexpr_inner -> LBRACE lexpr PIPE binders RBRACE . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On WITH reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On STAR reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On SLASH reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On SEMICOLON reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On RSQUARE reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On RPAR reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On RETURNS reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On REQUIRES reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On READS reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On RBRACE reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On QUESTION reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On PLUS reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On PIPE reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On PERCENT reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On OR reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On NE reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On MINUS reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On LTLT reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On LTCOLON reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On LT reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On LSQUARE reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On LE reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On IMPLIES reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On IFF reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On IDENTIFIER reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On HATHAT reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On HAT reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On GTGT reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On GT reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On GE reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On FROM reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On FREES reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On FOR reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On EXITS reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On EQUAL reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On EQ reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On EOF reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On ENSURES reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On DOTDOT reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On DOT reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On DISJOINT reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On DECREASES reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On CONTINUES reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On COMPLETE reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On COMMA reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On COLONGT reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On COLON2 reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On BREAKS reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On BIMPLIES reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On BIFF reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On BEHAVIOR reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On ASSUMES reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On ASSIGNS reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On ARROW reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On AND reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On AMP reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE
-- On ALLOCATES reduce production lexpr_inner -> LBRACE lexpr PIPE binders RBRACE

State 481:
## Known stack suffix:
## LET bounded_var EQUAL lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ SEMICOLON QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ SEMICOLON QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ SEMICOLON QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ SEMICOLON QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ SEMICOLON QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ SEMICOLON QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ SEMICOLON QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ SEMICOLON QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ SEMICOLON QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ SEMICOLON QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ SEMICOLON QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_binder -> LET bounded_var EQUAL lexpr . SEMICOLON lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On SEMICOLON shift to state 482
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 482:
## Known stack suffix:
## LET bounded_var EQUAL lexpr SEMICOLON
## LR(1) items:
lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON . lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 483
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 483:
## Known stack suffix:
## LET bounded_var EQUAL lexpr SEMICOLON lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On WRITES reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On WITH reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On SEMICOLON reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On RSQUARE reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On RPAR reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On RETURNS reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On REQUIRES reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On READS reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On RBRACE reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On IDENTIFIER reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On FROM reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On FREES reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On FOR reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On EXITS reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On EOF reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On ENSURES reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On DOTDOT reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On DISJOINT reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On DECREASES reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On CONTINUES reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On COMPLETE reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On COMMA reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On COLON2 reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On BREAKS reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On BEHAVIOR reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On ASSUMES reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On ASSIGNS reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr
-- On ALLOCATES reduce production lexpr_binder -> LET bounded_var EQUAL lexpr SEMICOLON lexpr

State 484:
## Known stack suffix:
## CONST
## LR(1) items:
c_keyword -> CONST . [ COLON ]
cv -> CONST . [ VOID UNSIGNED UNION TYPENAME STRUCT SIGNED SHORT REAL LONG INTEGER INT FLOAT ENUM DOUBLE CHAR BOOLEAN BOOL ]
## Transitions:
## Reductions:
-- On VOID reduce production cv -> CONST
-- On UNSIGNED reduce production cv -> CONST
-- On UNION reduce production cv -> CONST
-- On TYPENAME reduce production cv -> CONST
-- On STRUCT reduce production cv -> CONST
-- On SIGNED reduce production cv -> CONST
-- On SHORT reduce production cv -> CONST
-- On REAL reduce production cv -> CONST
-- On LONG reduce production cv -> CONST
-- On INTEGER reduce production cv -> CONST
-- On INT reduce production cv -> CONST
-- On FLOAT reduce production cv -> CONST
-- On ENUM reduce production cv -> CONST
-- On DOUBLE reduce production cv -> CONST
-- On COLON reduce production c_keyword -> CONST
-- On CHAR reduce production cv -> CONST
-- On BOOLEAN reduce production cv -> CONST
-- On BOOL reduce production cv -> CONST

State 485:
## Known stack suffix:
## type_spec_cv
## LR(1) items:
cast_logic_type -> type_spec_cv . abs_spec_cv_option [ RPAR ]
## Transitions:
-- On STAR shift to state 486
-- On LSQUARE shift to state 159
-- On LPAR shift to state 490
-- On tabs shift to state 491
-- On stars_cv shift to state 492
-- On abs_spec_cv_option shift to state 505
-- On abs_spec_cv shift to state 506
-- On abs_spec_bis_cv shift to state 503
## Reductions:
-- On RPAR reduce production abs_spec_cv_option ->

State 486:
## Known stack suffix:
## STAR
## LR(1) items:
stars_cv -> STAR . [ STAR RPAR LSQUARE LPAR ]
stars_cv -> STAR . cv [ STAR RPAR LSQUARE LPAR ]
## Transitions:
-- On VOLATILE shift to state 487
-- On CONST shift to state 488
-- On cv shift to state 489
## Reductions:
-- On STAR reduce production stars_cv -> STAR
-- On RPAR reduce production stars_cv -> STAR
-- On LSQUARE reduce production stars_cv -> STAR
-- On LPAR reduce production stars_cv -> STAR

State 487:
## Known stack suffix:
## VOLATILE
## LR(1) items:
cv -> VOLATILE . [ STAR RPAR LSQUARE LPAR ]
## Transitions:
## Reductions:
-- On STAR reduce production cv -> VOLATILE
-- On RPAR reduce production cv -> VOLATILE
-- On LSQUARE reduce production cv -> VOLATILE
-- On LPAR reduce production cv -> VOLATILE

State 488:
## Known stack suffix:
## CONST
## LR(1) items:
cv -> CONST . [ STAR RPAR LSQUARE LPAR ]
## Transitions:
## Reductions:
-- On STAR reduce production cv -> CONST
-- On RPAR reduce production cv -> CONST
-- On LSQUARE reduce production cv -> CONST
-- On LPAR reduce production cv -> CONST

State 489:
## Known stack suffix:
## STAR cv
## LR(1) items:
stars_cv -> STAR cv . [ STAR RPAR LSQUARE LPAR ]
## Transitions:
## Reductions:
-- On STAR reduce production stars_cv -> STAR cv
-- On RPAR reduce production stars_cv -> STAR cv
-- On LSQUARE reduce production stars_cv -> STAR cv
-- On LPAR reduce production stars_cv -> STAR cv

State 490:
## Known stack suffix:
## LPAR
## LR(1) items:
abs_spec_bis_cv -> LPAR . abs_spec_cv RPAR [ RPAR LSQUARE LPAR ]
## Transitions:
-- On STAR shift to state 486
-- On LSQUARE shift to state 159
-- On LPAR shift to state 490
-- On tabs shift to state 491
-- On stars_cv shift to state 492
-- On abs_spec_cv shift to state 501
-- On abs_spec_bis_cv shift to state 503
## Reductions:

State 491:
## Known stack suffix:
## tabs
## LR(1) items:
abs_spec_cv -> tabs . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR reduce production abs_spec_cv -> tabs

State 492:
## Known stack suffix:
## stars_cv
## LR(1) items:
abs_spec_cv -> stars_cv . [ RPAR ]
abs_spec_cv -> stars_cv . tabs [ RPAR ]
abs_spec_cv -> stars_cv . abs_spec_bis_cv [ RPAR ]
abs_spec_cv -> stars_cv . abs_spec_bis_cv tabs [ RPAR ]
stars_cv -> stars_cv . STAR [ STAR RPAR LSQUARE LPAR ]
stars_cv -> stars_cv . STAR cv [ STAR RPAR LSQUARE LPAR ]
## Transitions:
-- On STAR shift to state 493
-- On LSQUARE shift to state 159
-- On LPAR shift to state 490
-- On tabs shift to state 495
-- On abs_spec_bis_cv shift to state 496
## Reductions:
-- On RPAR reduce production abs_spec_cv -> stars_cv

State 493:
## Known stack suffix:
## stars_cv STAR
## LR(1) items:
stars_cv -> stars_cv STAR . [ STAR RPAR LSQUARE LPAR ]
stars_cv -> stars_cv STAR . cv [ STAR RPAR LSQUARE LPAR ]
## Transitions:
-- On VOLATILE shift to state 487
-- On CONST shift to state 488
-- On cv shift to state 494
## Reductions:
-- On STAR reduce production stars_cv -> stars_cv STAR
-- On RPAR reduce production stars_cv -> stars_cv STAR
-- On LSQUARE reduce production stars_cv -> stars_cv STAR
-- On LPAR reduce production stars_cv -> stars_cv STAR

State 494:
## Known stack suffix:
## stars_cv STAR cv
## LR(1) items:
stars_cv -> stars_cv STAR cv . [ STAR RPAR LSQUARE LPAR ]
## Transitions:
## Reductions:
-- On STAR reduce production stars_cv -> stars_cv STAR cv
-- On RPAR reduce production stars_cv -> stars_cv STAR cv
-- On LSQUARE reduce production stars_cv -> stars_cv STAR cv
-- On LPAR reduce production stars_cv -> stars_cv STAR cv

State 495:
## Known stack suffix:
## stars_cv tabs
## LR(1) items:
abs_spec_cv -> stars_cv tabs . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR reduce production abs_spec_cv -> stars_cv tabs

State 496:
## Known stack suffix:
## stars_cv abs_spec_bis_cv
## LR(1) items:
abs_spec_bis_cv -> abs_spec_bis_cv . LPAR abs_param_type_list RPAR [ RPAR LSQUARE LPAR ]
abs_spec_cv -> stars_cv abs_spec_bis_cv . [ RPAR ]
abs_spec_cv -> stars_cv abs_spec_bis_cv . tabs [ RPAR ]
## Transitions:
-- On LSQUARE shift to state 159
-- On LPAR shift to state 497
-- On tabs shift to state 500
## Reductions:
-- On RPAR reduce production abs_spec_cv -> stars_cv abs_spec_bis_cv

State 497:
## Known stack suffix:
## abs_spec_bis_cv LPAR
## LR(1) items:
abs_spec_bis_cv -> abs_spec_bis_cv LPAR . abs_param_type_list RPAR [ RPAR LSQUARE LPAR ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 157
-- On logic_type shift to state 173
-- On abs_param_type_list shift to state 498
-- On abs_param_list shift to state 176
-- On abs_param shift to state 180
## Reductions:
-- On RPAR reduce production abs_param_type_list ->

State 498:
## Known stack suffix:
## abs_spec_bis_cv LPAR abs_param_type_list
## LR(1) items:
abs_spec_bis_cv -> abs_spec_bis_cv LPAR abs_param_type_list . RPAR [ RPAR LSQUARE LPAR ]
## Transitions:
-- On RPAR shift to state 499
## Reductions:

State 499:
## Known stack suffix:
## abs_spec_bis_cv LPAR abs_param_type_list RPAR
## LR(1) items:
abs_spec_bis_cv -> abs_spec_bis_cv LPAR abs_param_type_list RPAR . [ RPAR LSQUARE LPAR ]
## Transitions:
## Reductions:
-- On RPAR reduce production abs_spec_bis_cv -> abs_spec_bis_cv LPAR abs_param_type_list RPAR
-- On LSQUARE reduce production abs_spec_bis_cv -> abs_spec_bis_cv LPAR abs_param_type_list RPAR
-- On LPAR reduce production abs_spec_bis_cv -> abs_spec_bis_cv LPAR abs_param_type_list RPAR

State 500:
## Known stack suffix:
## stars_cv abs_spec_bis_cv tabs
## LR(1) items:
abs_spec_cv -> stars_cv abs_spec_bis_cv tabs . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR reduce production abs_spec_cv -> stars_cv abs_spec_bis_cv tabs

State 501:
## Known stack suffix:
## LPAR abs_spec_cv
## LR(1) items:
abs_spec_bis_cv -> LPAR abs_spec_cv . RPAR [ RPAR LSQUARE LPAR ]
## Transitions:
-- On RPAR shift to state 502
## Reductions:

State 502:
## Known stack suffix:
## LPAR abs_spec_cv RPAR
## LR(1) items:
abs_spec_bis_cv -> LPAR abs_spec_cv RPAR . [ RPAR LSQUARE LPAR ]
## Transitions:
## Reductions:
-- On RPAR reduce production abs_spec_bis_cv -> LPAR abs_spec_cv RPAR
-- On LSQUARE reduce production abs_spec_bis_cv -> LPAR abs_spec_cv RPAR
-- On LPAR reduce production abs_spec_bis_cv -> LPAR abs_spec_cv RPAR

State 503:
## Known stack suffix:
## abs_spec_bis_cv
## LR(1) items:
abs_spec_bis_cv -> abs_spec_bis_cv . LPAR abs_param_type_list RPAR [ RPAR LSQUARE LPAR ]
abs_spec_cv -> abs_spec_bis_cv . tabs [ RPAR ]
abs_spec_cv -> abs_spec_bis_cv . [ RPAR ]
## Transitions:
-- On LSQUARE shift to state 159
-- On LPAR shift to state 497
-- On tabs shift to state 504
## Reductions:
-- On RPAR reduce production abs_spec_cv -> abs_spec_bis_cv

State 504:
## Known stack suffix:
## abs_spec_bis_cv tabs
## LR(1) items:
abs_spec_cv -> abs_spec_bis_cv tabs . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR reduce production abs_spec_cv -> abs_spec_bis_cv tabs

State 505:
## Known stack suffix:
## type_spec_cv abs_spec_cv_option
## LR(1) items:
cast_logic_type -> type_spec_cv abs_spec_cv_option . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR reduce production cast_logic_type -> type_spec_cv abs_spec_cv_option

State 506:
## Known stack suffix:
## abs_spec_cv
## LR(1) items:
abs_spec_cv_option -> abs_spec_cv . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR reduce production abs_spec_cv_option -> abs_spec_cv

State 507:
## Known stack suffix:
## type_spec
## LR(1) items:
type_spec_cv -> type_spec . [ STAR RPAR LSQUARE LPAR ]
type_spec_cv -> type_spec . cv [ STAR RPAR LSQUARE LPAR ]
## Transitions:
-- On VOLATILE shift to state 487
-- On CONST shift to state 488
-- On cv shift to state 508
## Reductions:
-- On STAR reduce production type_spec_cv -> type_spec
-- On RPAR reduce production type_spec_cv -> type_spec
-- On LSQUARE reduce production type_spec_cv -> type_spec
-- On LPAR reduce production type_spec_cv -> type_spec

State 508:
## Known stack suffix:
## type_spec cv
## LR(1) items:
type_spec_cv -> type_spec cv . [ STAR RPAR LSQUARE LPAR ]
## Transitions:
## Reductions:
-- On STAR reduce production type_spec_cv -> type_spec cv
-- On RPAR reduce production type_spec_cv -> type_spec cv
-- On LSQUARE reduce production type_spec_cv -> type_spec cv
-- On LPAR reduce production type_spec_cv -> type_spec cv

State 509:
## Known stack suffix:
## LPAR range
## LR(1) items:
lexpr_inner -> LPAR range . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 510
## Reductions:

State 510:
## Known stack suffix:
## LPAR range RPAR
## LR(1) items:
lexpr_inner -> LPAR range RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> LPAR range RPAR
-- On WITH reduce production lexpr_inner -> LPAR range RPAR
-- On STAR reduce production lexpr_inner -> LPAR range RPAR
-- On SLASH reduce production lexpr_inner -> LPAR range RPAR
-- On SEMICOLON reduce production lexpr_inner -> LPAR range RPAR
-- On RSQUARE reduce production lexpr_inner -> LPAR range RPAR
-- On RPAR reduce production lexpr_inner -> LPAR range RPAR
-- On RETURNS reduce production lexpr_inner -> LPAR range RPAR
-- On REQUIRES reduce production lexpr_inner -> LPAR range RPAR
-- On READS reduce production lexpr_inner -> LPAR range RPAR
-- On RBRACE reduce production lexpr_inner -> LPAR range RPAR
-- On QUESTION reduce production lexpr_inner -> LPAR range RPAR
-- On PLUS reduce production lexpr_inner -> LPAR range RPAR
-- On PIPE reduce production lexpr_inner -> LPAR range RPAR
-- On PERCENT reduce production lexpr_inner -> LPAR range RPAR
-- On OR reduce production lexpr_inner -> LPAR range RPAR
-- On NE reduce production lexpr_inner -> LPAR range RPAR
-- On MINUS reduce production lexpr_inner -> LPAR range RPAR
-- On LTLT reduce production lexpr_inner -> LPAR range RPAR
-- On LTCOLON reduce production lexpr_inner -> LPAR range RPAR
-- On LT reduce production lexpr_inner -> LPAR range RPAR
-- On LSQUARE reduce production lexpr_inner -> LPAR range RPAR
-- On LE reduce production lexpr_inner -> LPAR range RPAR
-- On IMPLIES reduce production lexpr_inner -> LPAR range RPAR
-- On IFF reduce production lexpr_inner -> LPAR range RPAR
-- On IDENTIFIER reduce production lexpr_inner -> LPAR range RPAR
-- On HATHAT reduce production lexpr_inner -> LPAR range RPAR
-- On HAT reduce production lexpr_inner -> LPAR range RPAR
-- On GTGT reduce production lexpr_inner -> LPAR range RPAR
-- On GT reduce production lexpr_inner -> LPAR range RPAR
-- On GE reduce production lexpr_inner -> LPAR range RPAR
-- On FROM reduce production lexpr_inner -> LPAR range RPAR
-- On FREES reduce production lexpr_inner -> LPAR range RPAR
-- On FOR reduce production lexpr_inner -> LPAR range RPAR
-- On EXITS reduce production lexpr_inner -> LPAR range RPAR
-- On EQUAL reduce production lexpr_inner -> LPAR range RPAR
-- On EQ reduce production lexpr_inner -> LPAR range RPAR
-- On EOF reduce production lexpr_inner -> LPAR range RPAR
-- On ENSURES reduce production lexpr_inner -> LPAR range RPAR
-- On DOTDOT reduce production lexpr_inner -> LPAR range RPAR
-- On DOT reduce production lexpr_inner -> LPAR range RPAR
-- On DISJOINT reduce production lexpr_inner -> LPAR range RPAR
-- On DECREASES reduce production lexpr_inner -> LPAR range RPAR
-- On CONTINUES reduce production lexpr_inner -> LPAR range RPAR
-- On COMPLETE reduce production lexpr_inner -> LPAR range RPAR
-- On COMMA reduce production lexpr_inner -> LPAR range RPAR
-- On COLONGT reduce production lexpr_inner -> LPAR range RPAR
-- On COLON2 reduce production lexpr_inner -> LPAR range RPAR
-- On BREAKS reduce production lexpr_inner -> LPAR range RPAR
-- On BIMPLIES reduce production lexpr_inner -> LPAR range RPAR
-- On BIFF reduce production lexpr_inner -> LPAR range RPAR
-- On BEHAVIOR reduce production lexpr_inner -> LPAR range RPAR
-- On ASSUMES reduce production lexpr_inner -> LPAR range RPAR
-- On ASSIGNS reduce production lexpr_inner -> LPAR range RPAR
-- On ARROW reduce production lexpr_inner -> LPAR range RPAR
-- On AND reduce production lexpr_inner -> LPAR range RPAR
-- On AMP reduce production lexpr_inner -> LPAR range RPAR
-- On ALLOCATES reduce production lexpr_inner -> LPAR range RPAR

State 511:
## Known stack suffix:
## LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT DOTDOT BIMPLIES BIFF AND AMP ]
lexpr_inner -> LPAR lexpr . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_option -> lexpr . [ DOTDOT ]
## Transitions:
-- On RPAR shift to state 512
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On DOTDOT reduce production lexpr_option -> lexpr

State 512:
## Known stack suffix:
## LPAR lexpr RPAR
## LR(1) items:
lexpr_inner -> LPAR lexpr RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> LPAR lexpr RPAR
-- On WITH reduce production lexpr_inner -> LPAR lexpr RPAR
-- On STAR reduce production lexpr_inner -> LPAR lexpr RPAR
-- On SLASH reduce production lexpr_inner -> LPAR lexpr RPAR
-- On SEMICOLON reduce production lexpr_inner -> LPAR lexpr RPAR
-- On RSQUARE reduce production lexpr_inner -> LPAR lexpr RPAR
-- On RPAR reduce production lexpr_inner -> LPAR lexpr RPAR
-- On RETURNS reduce production lexpr_inner -> LPAR lexpr RPAR
-- On REQUIRES reduce production lexpr_inner -> LPAR lexpr RPAR
-- On READS reduce production lexpr_inner -> LPAR lexpr RPAR
-- On RBRACE reduce production lexpr_inner -> LPAR lexpr RPAR
-- On QUESTION reduce production lexpr_inner -> LPAR lexpr RPAR
-- On PLUS reduce production lexpr_inner -> LPAR lexpr RPAR
-- On PIPE reduce production lexpr_inner -> LPAR lexpr RPAR
-- On PERCENT reduce production lexpr_inner -> LPAR lexpr RPAR
-- On OR reduce production lexpr_inner -> LPAR lexpr RPAR
-- On NE reduce production lexpr_inner -> LPAR lexpr RPAR
-- On MINUS reduce production lexpr_inner -> LPAR lexpr RPAR
-- On LTLT reduce production lexpr_inner -> LPAR lexpr RPAR
-- On LTCOLON reduce production lexpr_inner -> LPAR lexpr RPAR
-- On LT reduce production lexpr_inner -> LPAR lexpr RPAR
-- On LSQUARE reduce production lexpr_inner -> LPAR lexpr RPAR
-- On LE reduce production lexpr_inner -> LPAR lexpr RPAR
-- On IMPLIES reduce production lexpr_inner -> LPAR lexpr RPAR
-- On IFF reduce production lexpr_inner -> LPAR lexpr RPAR
-- On IDENTIFIER reduce production lexpr_inner -> LPAR lexpr RPAR
-- On HATHAT reduce production lexpr_inner -> LPAR lexpr RPAR
-- On HAT reduce production lexpr_inner -> LPAR lexpr RPAR
-- On GTGT reduce production lexpr_inner -> LPAR lexpr RPAR
-- On GT reduce production lexpr_inner -> LPAR lexpr RPAR
-- On GE reduce production lexpr_inner -> LPAR lexpr RPAR
-- On FROM reduce production lexpr_inner -> LPAR lexpr RPAR
-- On FREES reduce production lexpr_inner -> LPAR lexpr RPAR
-- On FOR reduce production lexpr_inner -> LPAR lexpr RPAR
-- On EXITS reduce production lexpr_inner -> LPAR lexpr RPAR
-- On EQUAL reduce production lexpr_inner -> LPAR lexpr RPAR
-- On EQ reduce production lexpr_inner -> LPAR lexpr RPAR
-- On EOF reduce production lexpr_inner -> LPAR lexpr RPAR
-- On ENSURES reduce production lexpr_inner -> LPAR lexpr RPAR
-- On DOTDOT reduce production lexpr_inner -> LPAR lexpr RPAR
-- On DOT reduce production lexpr_inner -> LPAR lexpr RPAR
-- On DISJOINT reduce production lexpr_inner -> LPAR lexpr RPAR
-- On DECREASES reduce production lexpr_inner -> LPAR lexpr RPAR
-- On CONTINUES reduce production lexpr_inner -> LPAR lexpr RPAR
-- On COMPLETE reduce production lexpr_inner -> LPAR lexpr RPAR
-- On COMMA reduce production lexpr_inner -> LPAR lexpr RPAR
-- On COLONGT reduce production lexpr_inner -> LPAR lexpr RPAR
-- On COLON2 reduce production lexpr_inner -> LPAR lexpr RPAR
-- On BREAKS reduce production lexpr_inner -> LPAR lexpr RPAR
-- On BIMPLIES reduce production lexpr_inner -> LPAR lexpr RPAR
-- On BIFF reduce production lexpr_inner -> LPAR lexpr RPAR
-- On BEHAVIOR reduce production lexpr_inner -> LPAR lexpr RPAR
-- On ASSUMES reduce production lexpr_inner -> LPAR lexpr RPAR
-- On ASSIGNS reduce production lexpr_inner -> LPAR lexpr RPAR
-- On ARROW reduce production lexpr_inner -> LPAR lexpr RPAR
-- On AND reduce production lexpr_inner -> LPAR lexpr RPAR
-- On AMP reduce production lexpr_inner -> LPAR lexpr RPAR
-- On ALLOCATES reduce production lexpr_inner -> LPAR lexpr RPAR

State 513:
## Known stack suffix:
## cv
## LR(1) items:
type_spec_cv -> cv . type_spec [ STAR RPAR LSQUARE LPAR ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 514
## Reductions:

State 514:
## Known stack suffix:
## cv type_spec
## LR(1) items:
type_spec_cv -> cv type_spec . [ STAR RPAR LSQUARE LPAR ]
## Transitions:
## Reductions:
-- On STAR reduce production type_spec_cv -> cv type_spec
-- On RPAR reduce production type_spec_cv -> cv type_spec
-- On LSQUARE reduce production type_spec_cv -> cv type_spec
-- On LPAR reduce production type_spec_cv -> cv type_spec

State 515:
## Known stack suffix:
## LPAR cast_logic_type
## LR(1) items:
lexpr_inner -> LPAR cast_logic_type . RPAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 516
## Reductions:

State 516:
## Known stack suffix:
## LPAR cast_logic_type RPAR
## LR(1) items:
lexpr_inner -> LPAR cast_logic_type RPAR . lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 106
-- On STAR shift to state 107
-- On SIZEOF shift to state 108
-- On SEPARATED shift to state 200
-- On RESULT shift to state 202
-- On REGISTER shift to state 203
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 212
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LBRACE shift to state 224
-- On INTER shift to state 249
-- On INITIALIZED shift to state 251
-- On IDENTIFIER shift to state 220
-- On FRESH shift to state 255
-- On FREEABLE shift to state 259
-- On FALSE shift to state 265
-- On EMPTY shift to state 269
-- On DYNAMIC shift to state 270
-- On DANGLING shift to state 271
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BLOCK_LENGTH shift to state 282
-- On BASE_ADDR shift to state 285
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCABLE shift to state 295
-- On string shift to state 304
-- On lexpr_inner shift to state 517
-- On identifier shift to state 325
-- On constant shift to state 336
## Reductions:

State 517:
## Known stack suffix:
## LPAR cast_logic_type RPAR lexpr_inner
## LR(1) items:
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LTCOLON shift to state 306
-- On LSQUARE shift to state 308
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
## Reductions:
-- On WRITES reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On WITH reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On STAR reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On SLASH reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On SEMICOLON reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On RSQUARE reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On RPAR reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On RETURNS reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On REQUIRES reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On READS reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On RBRACE reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On QUESTION reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On PLUS reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On PIPE reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On PERCENT reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On OR reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On NE reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On MINUS reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On LTLT reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On LT reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On LE reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On IMPLIES reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On IFF reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On IDENTIFIER reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On HATHAT reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On HAT reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On GTGT reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On GT reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On GE reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On FROM reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On FREES reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On FOR reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On EXITS reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On EQUAL reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On EQ reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On EOF reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On ENSURES reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On DOTDOT reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On DISJOINT reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On DECREASES reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On CONTINUES reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On COMPLETE reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On COMMA reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On COLON2 reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On BREAKS reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On BIMPLIES reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On BIFF reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On BEHAVIOR reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On ASSUMES reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On ASSIGNS reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On AND reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On AMP reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner
-- On ALLOCATES reduce production lexpr_inner -> LPAR cast_logic_type RPAR lexpr_inner

State 518:
## Known stack suffix:
## MINUS lexpr_inner
## LR(1) items:
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> MINUS lexpr_inner . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LTCOLON shift to state 306
-- On LSQUARE shift to state 308
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
## Reductions:
-- On WRITES reduce production lexpr_inner -> MINUS lexpr_inner
-- On WITH reduce production lexpr_inner -> MINUS lexpr_inner
-- On STAR reduce production lexpr_inner -> MINUS lexpr_inner
-- On SLASH reduce production lexpr_inner -> MINUS lexpr_inner
-- On SEMICOLON reduce production lexpr_inner -> MINUS lexpr_inner
-- On RSQUARE reduce production lexpr_inner -> MINUS lexpr_inner
-- On RPAR reduce production lexpr_inner -> MINUS lexpr_inner
-- On RETURNS reduce production lexpr_inner -> MINUS lexpr_inner
-- On REQUIRES reduce production lexpr_inner -> MINUS lexpr_inner
-- On READS reduce production lexpr_inner -> MINUS lexpr_inner
-- On RBRACE reduce production lexpr_inner -> MINUS lexpr_inner
-- On QUESTION reduce production lexpr_inner -> MINUS lexpr_inner
-- On PLUS reduce production lexpr_inner -> MINUS lexpr_inner
-- On PIPE reduce production lexpr_inner -> MINUS lexpr_inner
-- On PERCENT reduce production lexpr_inner -> MINUS lexpr_inner
-- On OR reduce production lexpr_inner -> MINUS lexpr_inner
-- On NE reduce production lexpr_inner -> MINUS lexpr_inner
-- On MINUS reduce production lexpr_inner -> MINUS lexpr_inner
-- On LTLT reduce production lexpr_inner -> MINUS lexpr_inner
-- On LT reduce production lexpr_inner -> MINUS lexpr_inner
-- On LE reduce production lexpr_inner -> MINUS lexpr_inner
-- On IMPLIES reduce production lexpr_inner -> MINUS lexpr_inner
-- On IFF reduce production lexpr_inner -> MINUS lexpr_inner
-- On IDENTIFIER reduce production lexpr_inner -> MINUS lexpr_inner
-- On HATHAT reduce production lexpr_inner -> MINUS lexpr_inner
-- On HAT reduce production lexpr_inner -> MINUS lexpr_inner
-- On GTGT reduce production lexpr_inner -> MINUS lexpr_inner
-- On GT reduce production lexpr_inner -> MINUS lexpr_inner
-- On GE reduce production lexpr_inner -> MINUS lexpr_inner
-- On FROM reduce production lexpr_inner -> MINUS lexpr_inner
-- On FREES reduce production lexpr_inner -> MINUS lexpr_inner
-- On FOR reduce production lexpr_inner -> MINUS lexpr_inner
-- On EXITS reduce production lexpr_inner -> MINUS lexpr_inner
-- On EQUAL reduce production lexpr_inner -> MINUS lexpr_inner
-- On EQ reduce production lexpr_inner -> MINUS lexpr_inner
-- On EOF reduce production lexpr_inner -> MINUS lexpr_inner
-- On ENSURES reduce production lexpr_inner -> MINUS lexpr_inner
-- On DOTDOT reduce production lexpr_inner -> MINUS lexpr_inner
-- On DISJOINT reduce production lexpr_inner -> MINUS lexpr_inner
-- On DECREASES reduce production lexpr_inner -> MINUS lexpr_inner
-- On CONTINUES reduce production lexpr_inner -> MINUS lexpr_inner
-- On COMPLETE reduce production lexpr_inner -> MINUS lexpr_inner
-- On COMMA reduce production lexpr_inner -> MINUS lexpr_inner
-- On COLON2 reduce production lexpr_inner -> MINUS lexpr_inner
-- On BREAKS reduce production lexpr_inner -> MINUS lexpr_inner
-- On BIMPLIES reduce production lexpr_inner -> MINUS lexpr_inner
-- On BIFF reduce production lexpr_inner -> MINUS lexpr_inner
-- On BEHAVIOR reduce production lexpr_inner -> MINUS lexpr_inner
-- On ASSUMES reduce production lexpr_inner -> MINUS lexpr_inner
-- On ASSIGNS reduce production lexpr_inner -> MINUS lexpr_inner
-- On AND reduce production lexpr_inner -> MINUS lexpr_inner
-- On AMP reduce production lexpr_inner -> MINUS lexpr_inner
-- On ALLOCATES reduce production lexpr_inner -> MINUS lexpr_inner

State 519:
## Known stack suffix:
## NOT lexpr_inner
## LR(1) items:
lexpr_inner -> NOT lexpr_inner . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LTCOLON shift to state 306
-- On LSQUARE shift to state 308
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
## Reductions:
-- On WRITES reduce production lexpr_inner -> NOT lexpr_inner
-- On WITH reduce production lexpr_inner -> NOT lexpr_inner
-- On STAR reduce production lexpr_inner -> NOT lexpr_inner
-- On SLASH reduce production lexpr_inner -> NOT lexpr_inner
-- On SEMICOLON reduce production lexpr_inner -> NOT lexpr_inner
-- On RSQUARE reduce production lexpr_inner -> NOT lexpr_inner
-- On RPAR reduce production lexpr_inner -> NOT lexpr_inner
-- On RETURNS reduce production lexpr_inner -> NOT lexpr_inner
-- On REQUIRES reduce production lexpr_inner -> NOT lexpr_inner
-- On READS reduce production lexpr_inner -> NOT lexpr_inner
-- On RBRACE reduce production lexpr_inner -> NOT lexpr_inner
-- On QUESTION reduce production lexpr_inner -> NOT lexpr_inner
-- On PLUS reduce production lexpr_inner -> NOT lexpr_inner
-- On PIPE reduce production lexpr_inner -> NOT lexpr_inner
-- On PERCENT reduce production lexpr_inner -> NOT lexpr_inner
-- On OR reduce production lexpr_inner -> NOT lexpr_inner
-- On NE reduce production lexpr_inner -> NOT lexpr_inner
-- On MINUS reduce production lexpr_inner -> NOT lexpr_inner
-- On LTLT reduce production lexpr_inner -> NOT lexpr_inner
-- On LT reduce production lexpr_inner -> NOT lexpr_inner
-- On LE reduce production lexpr_inner -> NOT lexpr_inner
-- On IMPLIES reduce production lexpr_inner -> NOT lexpr_inner
-- On IFF reduce production lexpr_inner -> NOT lexpr_inner
-- On IDENTIFIER reduce production lexpr_inner -> NOT lexpr_inner
-- On HATHAT reduce production lexpr_inner -> NOT lexpr_inner
-- On HAT reduce production lexpr_inner -> NOT lexpr_inner
-- On GTGT reduce production lexpr_inner -> NOT lexpr_inner
-- On GT reduce production lexpr_inner -> NOT lexpr_inner
-- On GE reduce production lexpr_inner -> NOT lexpr_inner
-- On FROM reduce production lexpr_inner -> NOT lexpr_inner
-- On FREES reduce production lexpr_inner -> NOT lexpr_inner
-- On FOR reduce production lexpr_inner -> NOT lexpr_inner
-- On EXITS reduce production lexpr_inner -> NOT lexpr_inner
-- On EQUAL reduce production lexpr_inner -> NOT lexpr_inner
-- On EQ reduce production lexpr_inner -> NOT lexpr_inner
-- On EOF reduce production lexpr_inner -> NOT lexpr_inner
-- On ENSURES reduce production lexpr_inner -> NOT lexpr_inner
-- On DOTDOT reduce production lexpr_inner -> NOT lexpr_inner
-- On DISJOINT reduce production lexpr_inner -> NOT lexpr_inner
-- On DECREASES reduce production lexpr_inner -> NOT lexpr_inner
-- On CONTINUES reduce production lexpr_inner -> NOT lexpr_inner
-- On COMPLETE reduce production lexpr_inner -> NOT lexpr_inner
-- On COMMA reduce production lexpr_inner -> NOT lexpr_inner
-- On COLON2 reduce production lexpr_inner -> NOT lexpr_inner
-- On BREAKS reduce production lexpr_inner -> NOT lexpr_inner
-- On BIMPLIES reduce production lexpr_inner -> NOT lexpr_inner
-- On BIFF reduce production lexpr_inner -> NOT lexpr_inner
-- On BEHAVIOR reduce production lexpr_inner -> NOT lexpr_inner
-- On ASSUMES reduce production lexpr_inner -> NOT lexpr_inner
-- On ASSIGNS reduce production lexpr_inner -> NOT lexpr_inner
-- On AND reduce production lexpr_inner -> NOT lexpr_inner
-- On AMP reduce production lexpr_inner -> NOT lexpr_inner
-- On ALLOCATES reduce production lexpr_inner -> NOT lexpr_inner

State 520:
## Known stack suffix:
## NOT lexpr_binder
## LR(1) items:
lexpr_end_rel -> NOT lexpr_binder . [ WRITES WITH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FROM FREES FOR EXITS EOF ENSURES DOTDOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_end_rel -> NOT lexpr_binder
-- On WITH reduce production lexpr_end_rel -> NOT lexpr_binder
-- On SEMICOLON reduce production lexpr_end_rel -> NOT lexpr_binder
-- On RSQUARE reduce production lexpr_end_rel -> NOT lexpr_binder
-- On RPAR reduce production lexpr_end_rel -> NOT lexpr_binder
-- On RETURNS reduce production lexpr_end_rel -> NOT lexpr_binder
-- On REQUIRES reduce production lexpr_end_rel -> NOT lexpr_binder
-- On READS reduce production lexpr_end_rel -> NOT lexpr_binder
-- On RBRACE reduce production lexpr_end_rel -> NOT lexpr_binder
-- On QUESTION reduce production lexpr_end_rel -> NOT lexpr_binder
-- On PIPE reduce production lexpr_end_rel -> NOT lexpr_binder
-- On OR reduce production lexpr_end_rel -> NOT lexpr_binder
-- On IMPLIES reduce production lexpr_end_rel -> NOT lexpr_binder
-- On IFF reduce production lexpr_end_rel -> NOT lexpr_binder
-- On IDENTIFIER reduce production lexpr_end_rel -> NOT lexpr_binder
-- On HATHAT reduce production lexpr_end_rel -> NOT lexpr_binder
-- On HAT reduce production lexpr_end_rel -> NOT lexpr_binder
-- On FROM reduce production lexpr_end_rel -> NOT lexpr_binder
-- On FREES reduce production lexpr_end_rel -> NOT lexpr_binder
-- On FOR reduce production lexpr_end_rel -> NOT lexpr_binder
-- On EXITS reduce production lexpr_end_rel -> NOT lexpr_binder
-- On EOF reduce production lexpr_end_rel -> NOT lexpr_binder
-- On ENSURES reduce production lexpr_end_rel -> NOT lexpr_binder
-- On DOTDOT reduce production lexpr_end_rel -> NOT lexpr_binder
-- On DISJOINT reduce production lexpr_end_rel -> NOT lexpr_binder
-- On DECREASES reduce production lexpr_end_rel -> NOT lexpr_binder
-- On CONTINUES reduce production lexpr_end_rel -> NOT lexpr_binder
-- On COMPLETE reduce production lexpr_end_rel -> NOT lexpr_binder
-- On COMMA reduce production lexpr_end_rel -> NOT lexpr_binder
-- On COLON2 reduce production lexpr_end_rel -> NOT lexpr_binder
-- On BREAKS reduce production lexpr_end_rel -> NOT lexpr_binder
-- On BIMPLIES reduce production lexpr_end_rel -> NOT lexpr_binder
-- On BIFF reduce production lexpr_end_rel -> NOT lexpr_binder
-- On BEHAVIOR reduce production lexpr_end_rel -> NOT lexpr_binder
-- On ASSUMES reduce production lexpr_end_rel -> NOT lexpr_binder
-- On ASSIGNS reduce production lexpr_end_rel -> NOT lexpr_binder
-- On AND reduce production lexpr_end_rel -> NOT lexpr_binder
-- On AMP reduce production lexpr_end_rel -> NOT lexpr_binder
-- On ALLOCATES reduce production lexpr_end_rel -> NOT lexpr_binder

State 521:
## Known stack suffix:
## OFFSET opt_label_1 LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> OFFSET opt_label_1 LPAR lexpr . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 522
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 522:
## Known stack suffix:
## OFFSET opt_label_1 LPAR lexpr RPAR
## LR(1) items:
lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On WITH reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On STAR reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On SLASH reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On SEMICOLON reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On RSQUARE reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On RPAR reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On RETURNS reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On REQUIRES reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On READS reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On RBRACE reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On QUESTION reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On PLUS reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On PIPE reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On PERCENT reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On OR reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On NE reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On MINUS reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On LTLT reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On LTCOLON reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On LT reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On LSQUARE reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On LE reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On IMPLIES reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On IFF reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On IDENTIFIER reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On HATHAT reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On HAT reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On GTGT reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On GT reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On GE reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On FROM reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On FREES reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On FOR reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On EXITS reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On EQUAL reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On EQ reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On EOF reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On ENSURES reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On DOTDOT reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On DOT reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On DISJOINT reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On DECREASES reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On CONTINUES reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On COMPLETE reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On COMMA reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On COLONGT reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On COLON2 reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On BREAKS reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On BIMPLIES reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On BIFF reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On BEHAVIOR reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On ASSUMES reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On ASSIGNS reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On ARROW reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On AND reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On AMP reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR
-- On ALLOCATES reduce production lexpr_inner -> OFFSET opt_label_1 LPAR lexpr RPAR

State 523:
## Known stack suffix:
## OLD LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> OLD LPAR lexpr . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 524
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 524:
## Known stack suffix:
## OLD LPAR lexpr RPAR
## LR(1) items:
lexpr_inner -> OLD LPAR lexpr RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On WITH reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On STAR reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On SLASH reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On SEMICOLON reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On RSQUARE reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On RPAR reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On RETURNS reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On REQUIRES reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On READS reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On RBRACE reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On QUESTION reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On PLUS reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On PIPE reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On PERCENT reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On OR reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On NE reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On MINUS reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On LTLT reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On LTCOLON reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On LT reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On LSQUARE reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On LE reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On IMPLIES reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On IFF reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On IDENTIFIER reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On HATHAT reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On HAT reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On GTGT reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On GT reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On GE reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On FROM reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On FREES reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On FOR reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On EXITS reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On EQUAL reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On EQ reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On EOF reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On ENSURES reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On DOTDOT reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On DOT reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On DISJOINT reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On DECREASES reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On CONTINUES reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On COMPLETE reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On COMMA reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On COLONGT reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On COLON2 reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On BREAKS reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On BIMPLIES reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On BIFF reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On BEHAVIOR reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On ASSUMES reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On ASSIGNS reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On ARROW reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On AND reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On AMP reduce production lexpr_inner -> OLD LPAR lexpr RPAR
-- On ALLOCATES reduce production lexpr_inner -> OLD LPAR lexpr RPAR

State 525:
## Known stack suffix:
## PLUS lexpr_inner
## LR(1) items:
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> PLUS lexpr_inner . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LTCOLON shift to state 306
-- On LSQUARE shift to state 308
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
## Reductions:
-- On WRITES reduce production lexpr_inner -> PLUS lexpr_inner
-- On WITH reduce production lexpr_inner -> PLUS lexpr_inner
-- On STAR reduce production lexpr_inner -> PLUS lexpr_inner
-- On SLASH reduce production lexpr_inner -> PLUS lexpr_inner
-- On SEMICOLON reduce production lexpr_inner -> PLUS lexpr_inner
-- On RSQUARE reduce production lexpr_inner -> PLUS lexpr_inner
-- On RPAR reduce production lexpr_inner -> PLUS lexpr_inner
-- On RETURNS reduce production lexpr_inner -> PLUS lexpr_inner
-- On REQUIRES reduce production lexpr_inner -> PLUS lexpr_inner
-- On READS reduce production lexpr_inner -> PLUS lexpr_inner
-- On RBRACE reduce production lexpr_inner -> PLUS lexpr_inner
-- On QUESTION reduce production lexpr_inner -> PLUS lexpr_inner
-- On PLUS reduce production lexpr_inner -> PLUS lexpr_inner
-- On PIPE reduce production lexpr_inner -> PLUS lexpr_inner
-- On PERCENT reduce production lexpr_inner -> PLUS lexpr_inner
-- On OR reduce production lexpr_inner -> PLUS lexpr_inner
-- On NE reduce production lexpr_inner -> PLUS lexpr_inner
-- On MINUS reduce production lexpr_inner -> PLUS lexpr_inner
-- On LTLT reduce production lexpr_inner -> PLUS lexpr_inner
-- On LT reduce production lexpr_inner -> PLUS lexpr_inner
-- On LE reduce production lexpr_inner -> PLUS lexpr_inner
-- On IMPLIES reduce production lexpr_inner -> PLUS lexpr_inner
-- On IFF reduce production lexpr_inner -> PLUS lexpr_inner
-- On IDENTIFIER reduce production lexpr_inner -> PLUS lexpr_inner
-- On HATHAT reduce production lexpr_inner -> PLUS lexpr_inner
-- On HAT reduce production lexpr_inner -> PLUS lexpr_inner
-- On GTGT reduce production lexpr_inner -> PLUS lexpr_inner
-- On GT reduce production lexpr_inner -> PLUS lexpr_inner
-- On GE reduce production lexpr_inner -> PLUS lexpr_inner
-- On FROM reduce production lexpr_inner -> PLUS lexpr_inner
-- On FREES reduce production lexpr_inner -> PLUS lexpr_inner
-- On FOR reduce production lexpr_inner -> PLUS lexpr_inner
-- On EXITS reduce production lexpr_inner -> PLUS lexpr_inner
-- On EQUAL reduce production lexpr_inner -> PLUS lexpr_inner
-- On EQ reduce production lexpr_inner -> PLUS lexpr_inner
-- On EOF reduce production lexpr_inner -> PLUS lexpr_inner
-- On ENSURES reduce production lexpr_inner -> PLUS lexpr_inner
-- On DOTDOT reduce production lexpr_inner -> PLUS lexpr_inner
-- On DISJOINT reduce production lexpr_inner -> PLUS lexpr_inner
-- On DECREASES reduce production lexpr_inner -> PLUS lexpr_inner
-- On CONTINUES reduce production lexpr_inner -> PLUS lexpr_inner
-- On COMPLETE reduce production lexpr_inner -> PLUS lexpr_inner
-- On COMMA reduce production lexpr_inner -> PLUS lexpr_inner
-- On COLON2 reduce production lexpr_inner -> PLUS lexpr_inner
-- On BREAKS reduce production lexpr_inner -> PLUS lexpr_inner
-- On BIMPLIES reduce production lexpr_inner -> PLUS lexpr_inner
-- On BIFF reduce production lexpr_inner -> PLUS lexpr_inner
-- On BEHAVIOR reduce production lexpr_inner -> PLUS lexpr_inner
-- On ASSUMES reduce production lexpr_inner -> PLUS lexpr_inner
-- On ASSIGNS reduce production lexpr_inner -> PLUS lexpr_inner
-- On AND reduce production lexpr_inner -> PLUS lexpr_inner
-- On AMP reduce production lexpr_inner -> PLUS lexpr_inner
-- On ALLOCATES reduce production lexpr_inner -> PLUS lexpr_inner

State 526:
## Known stack suffix:
## SEPARATED LPAR ne_lexpr_list
## LR(1) items:
lexpr_inner -> SEPARATED LPAR ne_lexpr_list . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 527
## Reductions:

State 527:
## Known stack suffix:
## SEPARATED LPAR ne_lexpr_list RPAR
## LR(1) items:
lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On WITH reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On STAR reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On SLASH reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On SEMICOLON reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On RSQUARE reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On RPAR reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On RETURNS reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On REQUIRES reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On READS reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On RBRACE reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On QUESTION reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On PLUS reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On PIPE reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On PERCENT reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On OR reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On NE reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On MINUS reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On LTLT reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On LTCOLON reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On LT reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On LSQUARE reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On LE reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On IMPLIES reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On IFF reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On IDENTIFIER reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On HATHAT reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On HAT reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On GTGT reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On GT reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On GE reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On FROM reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On FREES reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On FOR reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On EXITS reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On EQUAL reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On EQ reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On EOF reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On ENSURES reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On DOTDOT reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On DOT reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On DISJOINT reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On DECREASES reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On CONTINUES reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On COMPLETE reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On COMMA reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On COLONGT reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On COLON2 reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On BREAKS reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On BIMPLIES reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On BIFF reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On BEHAVIOR reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On ASSUMES reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On ASSIGNS reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On ARROW reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On AND reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On AMP reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR
-- On ALLOCATES reduce production lexpr_inner -> SEPARATED LPAR ne_lexpr_list RPAR

State 528:
## Known stack suffix:
## SIZEOF LPAR logic_type
## LR(1) items:
lexpr_inner -> SIZEOF LPAR logic_type . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 529
## Reductions:

State 529:
## Known stack suffix:
## SIZEOF LPAR logic_type RPAR
## LR(1) items:
lexpr_inner -> SIZEOF LPAR logic_type RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On WITH reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On STAR reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On SLASH reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On SEMICOLON reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On RSQUARE reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On RPAR reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On RETURNS reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On REQUIRES reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On READS reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On RBRACE reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On QUESTION reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On PLUS reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On PIPE reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On PERCENT reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On OR reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On NE reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On MINUS reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On LTLT reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On LTCOLON reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On LT reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On LSQUARE reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On LE reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On IMPLIES reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On IFF reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On IDENTIFIER reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On HATHAT reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On HAT reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On GTGT reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On GT reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On GE reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On FROM reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On FREES reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On FOR reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On EXITS reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On EQUAL reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On EQ reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On EOF reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On ENSURES reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On DOTDOT reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On DOT reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On DISJOINT reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On DECREASES reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On CONTINUES reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On COMPLETE reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On COMMA reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On COLONGT reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On COLON2 reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On BREAKS reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On BIMPLIES reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On BIFF reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On BEHAVIOR reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On ASSUMES reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On ASSIGNS reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On ARROW reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On AND reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On AMP reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR
-- On ALLOCATES reduce production lexpr_inner -> SIZEOF LPAR logic_type RPAR

State 530:
## Known stack suffix:
## SIZEOF LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> SIZEOF LPAR lexpr . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 531
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 531:
## Known stack suffix:
## SIZEOF LPAR lexpr RPAR
## LR(1) items:
lexpr_inner -> SIZEOF LPAR lexpr RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On WITH reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On STAR reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On SLASH reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On SEMICOLON reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On RSQUARE reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On RPAR reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On RETURNS reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On REQUIRES reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On READS reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On RBRACE reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On QUESTION reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On PLUS reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On PIPE reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On PERCENT reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On OR reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On NE reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On MINUS reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On LTLT reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On LTCOLON reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On LT reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On LSQUARE reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On LE reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On IMPLIES reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On IFF reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On IDENTIFIER reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On HATHAT reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On HAT reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On GTGT reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On GT reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On GE reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On FROM reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On FREES reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On FOR reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On EXITS reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On EQUAL reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On EQ reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On EOF reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On ENSURES reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On DOTDOT reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On DOT reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On DISJOINT reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On DECREASES reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On CONTINUES reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On COMPLETE reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On COMMA reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On COLONGT reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On COLON2 reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On BREAKS reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On BIMPLIES reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On BIFF reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On BEHAVIOR reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On ASSUMES reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On ASSIGNS reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On ARROW reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On AND reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On AMP reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR
-- On ALLOCATES reduce production lexpr_inner -> SIZEOF LPAR lexpr RPAR

State 532:
## Known stack suffix:
## STAR lexpr_inner
## LR(1) items:
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> STAR lexpr_inner . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LTCOLON shift to state 306
-- On LSQUARE shift to state 308
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
## Reductions:
-- On WRITES reduce production lexpr_inner -> STAR lexpr_inner
-- On WITH reduce production lexpr_inner -> STAR lexpr_inner
-- On STAR reduce production lexpr_inner -> STAR lexpr_inner
-- On SLASH reduce production lexpr_inner -> STAR lexpr_inner
-- On SEMICOLON reduce production lexpr_inner -> STAR lexpr_inner
-- On RSQUARE reduce production lexpr_inner -> STAR lexpr_inner
-- On RPAR reduce production lexpr_inner -> STAR lexpr_inner
-- On RETURNS reduce production lexpr_inner -> STAR lexpr_inner
-- On REQUIRES reduce production lexpr_inner -> STAR lexpr_inner
-- On READS reduce production lexpr_inner -> STAR lexpr_inner
-- On RBRACE reduce production lexpr_inner -> STAR lexpr_inner
-- On QUESTION reduce production lexpr_inner -> STAR lexpr_inner
-- On PLUS reduce production lexpr_inner -> STAR lexpr_inner
-- On PIPE reduce production lexpr_inner -> STAR lexpr_inner
-- On PERCENT reduce production lexpr_inner -> STAR lexpr_inner
-- On OR reduce production lexpr_inner -> STAR lexpr_inner
-- On NE reduce production lexpr_inner -> STAR lexpr_inner
-- On MINUS reduce production lexpr_inner -> STAR lexpr_inner
-- On LTLT reduce production lexpr_inner -> STAR lexpr_inner
-- On LT reduce production lexpr_inner -> STAR lexpr_inner
-- On LE reduce production lexpr_inner -> STAR lexpr_inner
-- On IMPLIES reduce production lexpr_inner -> STAR lexpr_inner
-- On IFF reduce production lexpr_inner -> STAR lexpr_inner
-- On IDENTIFIER reduce production lexpr_inner -> STAR lexpr_inner
-- On HATHAT reduce production lexpr_inner -> STAR lexpr_inner
-- On HAT reduce production lexpr_inner -> STAR lexpr_inner
-- On GTGT reduce production lexpr_inner -> STAR lexpr_inner
-- On GT reduce production lexpr_inner -> STAR lexpr_inner
-- On GE reduce production lexpr_inner -> STAR lexpr_inner
-- On FROM reduce production lexpr_inner -> STAR lexpr_inner
-- On FREES reduce production lexpr_inner -> STAR lexpr_inner
-- On FOR reduce production lexpr_inner -> STAR lexpr_inner
-- On EXITS reduce production lexpr_inner -> STAR lexpr_inner
-- On EQUAL reduce production lexpr_inner -> STAR lexpr_inner
-- On EQ reduce production lexpr_inner -> STAR lexpr_inner
-- On EOF reduce production lexpr_inner -> STAR lexpr_inner
-- On ENSURES reduce production lexpr_inner -> STAR lexpr_inner
-- On DOTDOT reduce production lexpr_inner -> STAR lexpr_inner
-- On DISJOINT reduce production lexpr_inner -> STAR lexpr_inner
-- On DECREASES reduce production lexpr_inner -> STAR lexpr_inner
-- On CONTINUES reduce production lexpr_inner -> STAR lexpr_inner
-- On COMPLETE reduce production lexpr_inner -> STAR lexpr_inner
-- On COMMA reduce production lexpr_inner -> STAR lexpr_inner
-- On COLON2 reduce production lexpr_inner -> STAR lexpr_inner
-- On BREAKS reduce production lexpr_inner -> STAR lexpr_inner
-- On BIMPLIES reduce production lexpr_inner -> STAR lexpr_inner
-- On BIFF reduce production lexpr_inner -> STAR lexpr_inner
-- On BEHAVIOR reduce production lexpr_inner -> STAR lexpr_inner
-- On ASSUMES reduce production lexpr_inner -> STAR lexpr_inner
-- On ASSIGNS reduce production lexpr_inner -> STAR lexpr_inner
-- On AND reduce production lexpr_inner -> STAR lexpr_inner
-- On AMP reduce production lexpr_inner -> STAR lexpr_inner
-- On ALLOCATES reduce production lexpr_inner -> STAR lexpr_inner

State 533:
## Known stack suffix:
## TILDE lexpr_inner
## LR(1) items:
lexpr_inner -> lexpr_inner . PLUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . MINUS lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . STAR lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . SLASH lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . PERCENT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . ARROW identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . DOT identifier_or_typename [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE range RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LSQUARE lexpr RSQUARE [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> TILDE lexpr_inner . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . GTGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTLT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . LTCOLON lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT logic_type [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
lexpr_inner -> lexpr_inner . COLONGT lexpr_inner [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On LTCOLON shift to state 306
-- On LSQUARE shift to state 308
-- On DOT shift to state 363
-- On COLONGT shift to state 365
-- On ARROW shift to state 368
## Reductions:
-- On WRITES reduce production lexpr_inner -> TILDE lexpr_inner
-- On WITH reduce production lexpr_inner -> TILDE lexpr_inner
-- On STAR reduce production lexpr_inner -> TILDE lexpr_inner
-- On SLASH reduce production lexpr_inner -> TILDE lexpr_inner
-- On SEMICOLON reduce production lexpr_inner -> TILDE lexpr_inner
-- On RSQUARE reduce production lexpr_inner -> TILDE lexpr_inner
-- On RPAR reduce production lexpr_inner -> TILDE lexpr_inner
-- On RETURNS reduce production lexpr_inner -> TILDE lexpr_inner
-- On REQUIRES reduce production lexpr_inner -> TILDE lexpr_inner
-- On READS reduce production lexpr_inner -> TILDE lexpr_inner
-- On RBRACE reduce production lexpr_inner -> TILDE lexpr_inner
-- On QUESTION reduce production lexpr_inner -> TILDE lexpr_inner
-- On PLUS reduce production lexpr_inner -> TILDE lexpr_inner
-- On PIPE reduce production lexpr_inner -> TILDE lexpr_inner
-- On PERCENT reduce production lexpr_inner -> TILDE lexpr_inner
-- On OR reduce production lexpr_inner -> TILDE lexpr_inner
-- On NE reduce production lexpr_inner -> TILDE lexpr_inner
-- On MINUS reduce production lexpr_inner -> TILDE lexpr_inner
-- On LTLT reduce production lexpr_inner -> TILDE lexpr_inner
-- On LT reduce production lexpr_inner -> TILDE lexpr_inner
-- On LE reduce production lexpr_inner -> TILDE lexpr_inner
-- On IMPLIES reduce production lexpr_inner -> TILDE lexpr_inner
-- On IFF reduce production lexpr_inner -> TILDE lexpr_inner
-- On IDENTIFIER reduce production lexpr_inner -> TILDE lexpr_inner
-- On HATHAT reduce production lexpr_inner -> TILDE lexpr_inner
-- On HAT reduce production lexpr_inner -> TILDE lexpr_inner
-- On GTGT reduce production lexpr_inner -> TILDE lexpr_inner
-- On GT reduce production lexpr_inner -> TILDE lexpr_inner
-- On GE reduce production lexpr_inner -> TILDE lexpr_inner
-- On FROM reduce production lexpr_inner -> TILDE lexpr_inner
-- On FREES reduce production lexpr_inner -> TILDE lexpr_inner
-- On FOR reduce production lexpr_inner -> TILDE lexpr_inner
-- On EXITS reduce production lexpr_inner -> TILDE lexpr_inner
-- On EQUAL reduce production lexpr_inner -> TILDE lexpr_inner
-- On EQ reduce production lexpr_inner -> TILDE lexpr_inner
-- On EOF reduce production lexpr_inner -> TILDE lexpr_inner
-- On ENSURES reduce production lexpr_inner -> TILDE lexpr_inner
-- On DOTDOT reduce production lexpr_inner -> TILDE lexpr_inner
-- On DISJOINT reduce production lexpr_inner -> TILDE lexpr_inner
-- On DECREASES reduce production lexpr_inner -> TILDE lexpr_inner
-- On CONTINUES reduce production lexpr_inner -> TILDE lexpr_inner
-- On COMPLETE reduce production lexpr_inner -> TILDE lexpr_inner
-- On COMMA reduce production lexpr_inner -> TILDE lexpr_inner
-- On COLON2 reduce production lexpr_inner -> TILDE lexpr_inner
-- On BREAKS reduce production lexpr_inner -> TILDE lexpr_inner
-- On BIMPLIES reduce production lexpr_inner -> TILDE lexpr_inner
-- On BIFF reduce production lexpr_inner -> TILDE lexpr_inner
-- On BEHAVIOR reduce production lexpr_inner -> TILDE lexpr_inner
-- On ASSUMES reduce production lexpr_inner -> TILDE lexpr_inner
-- On ASSIGNS reduce production lexpr_inner -> TILDE lexpr_inner
-- On AND reduce production lexpr_inner -> TILDE lexpr_inner
-- On AMP reduce production lexpr_inner -> TILDE lexpr_inner
-- On ALLOCATES reduce production lexpr_inner -> TILDE lexpr_inner

State 534:
## Known stack suffix:
## TYPEOF LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> TYPEOF LPAR lexpr . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 535
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 535:
## Known stack suffix:
## TYPEOF LPAR lexpr RPAR
## LR(1) items:
lexpr_inner -> TYPEOF LPAR lexpr RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On WITH reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On STAR reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On SLASH reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On SEMICOLON reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On RSQUARE reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On RPAR reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On RETURNS reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On REQUIRES reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On READS reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On RBRACE reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On QUESTION reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On PLUS reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On PIPE reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On PERCENT reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On OR reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On NE reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On MINUS reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On LTLT reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On LTCOLON reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On LT reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On LSQUARE reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On LE reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On IMPLIES reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On IFF reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On IDENTIFIER reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On HATHAT reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On HAT reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On GTGT reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On GT reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On GE reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On FROM reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On FREES reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On FOR reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On EXITS reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On EQUAL reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On EQ reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On EOF reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On ENSURES reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On DOTDOT reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On DOT reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On DISJOINT reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On DECREASES reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On CONTINUES reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On COMPLETE reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On COMMA reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On COLONGT reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On COLON2 reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On BREAKS reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On BIMPLIES reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On BIFF reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On BEHAVIOR reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On ASSUMES reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On ASSIGNS reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On ARROW reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On AND reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On AMP reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR
-- On ALLOCATES reduce production lexpr_inner -> TYPEOF LPAR lexpr RPAR

State 536:
## Known stack suffix:
## VALID opt_label_1 LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> VALID opt_label_1 LPAR lexpr . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 537
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 537:
## Known stack suffix:
## VALID opt_label_1 LPAR lexpr RPAR
## LR(1) items:
lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On WITH reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On STAR reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On SLASH reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On SEMICOLON reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On RSQUARE reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On RPAR reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On RETURNS reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On REQUIRES reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On READS reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On RBRACE reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On QUESTION reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On PLUS reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On PIPE reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On PERCENT reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On OR reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On NE reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On MINUS reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On LTLT reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On LTCOLON reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On LT reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On LSQUARE reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On LE reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On IMPLIES reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On IFF reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On IDENTIFIER reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On HATHAT reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On HAT reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On GTGT reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On GT reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On GE reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On FROM reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On FREES reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On FOR reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On EXITS reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On EQUAL reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On EQ reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On EOF reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On ENSURES reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On DOTDOT reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On DOT reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On DISJOINT reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On DECREASES reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On CONTINUES reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On COMPLETE reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On COMMA reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On COLONGT reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On COLON2 reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On BREAKS reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On BIMPLIES reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On BIFF reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On BEHAVIOR reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On ASSUMES reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On ASSIGNS reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On ARROW reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On AND reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On AMP reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR
-- On ALLOCATES reduce production lexpr_inner -> VALID opt_label_1 LPAR lexpr RPAR

State 538:
## Known stack suffix:
## VALID_INDEX opt_label_1 LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr . COMMA lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On COMMA shift to state 539
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 539:
## Known stack suffix:
## VALID_INDEX opt_label_1 LPAR lexpr COMMA
## LR(1) items:
lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA . lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 540
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 540:
## Known stack suffix:
## VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 541
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 541:
## Known stack suffix:
## VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
## LR(1) items:
lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On WITH reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On STAR reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On SLASH reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On SEMICOLON reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On RSQUARE reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On RPAR reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On RETURNS reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On REQUIRES reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On READS reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On RBRACE reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On QUESTION reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On PLUS reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On PIPE reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On PERCENT reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On OR reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On NE reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On MINUS reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On LTLT reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On LTCOLON reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On LT reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On LSQUARE reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On LE reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On IMPLIES reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On IFF reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On IDENTIFIER reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On HATHAT reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On HAT reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On GTGT reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On GT reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On GE reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On FROM reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On FREES reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On FOR reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On EXITS reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On EQUAL reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On EQ reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On EOF reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On ENSURES reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On DOTDOT reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On DOT reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On DISJOINT reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On DECREASES reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On CONTINUES reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On COMPLETE reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On COMMA reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On COLONGT reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On COLON2 reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On BREAKS reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On BIMPLIES reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On BIFF reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On BEHAVIOR reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On ASSUMES reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On ASSIGNS reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On ARROW reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On AND reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On AMP reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR
-- On ALLOCATES reduce production lexpr_inner -> VALID_INDEX opt_label_1 LPAR lexpr COMMA lexpr RPAR

State 542:
## Known stack suffix:
## VALID_RANGE opt_label_1 LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr . COMMA lexpr COMMA lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On COMMA shift to state 543
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 543:
## Known stack suffix:
## VALID_RANGE opt_label_1 LPAR lexpr COMMA
## LR(1) items:
lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA . lexpr COMMA lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 544
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 544:
## Known stack suffix:
## VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ QUESTION PIPE OR IMPLIES IFF HATHAT HAT COMMA BIMPLIES BIFF AND AMP ]
lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr . COMMA lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On COMMA shift to state 545
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 545:
## Known stack suffix:
## VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA
## LR(1) items:
lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA . lexpr RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 546
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 546:
## Known stack suffix:
## VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 547
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 547:
## Known stack suffix:
## VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
## LR(1) items:
lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On WITH reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On STAR reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On SLASH reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On SEMICOLON reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On RSQUARE reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On RPAR reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On RETURNS reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On REQUIRES reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On READS reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On RBRACE reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On QUESTION reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On PLUS reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On PIPE reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On PERCENT reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On OR reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On NE reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On MINUS reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On LTLT reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On LTCOLON reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On LT reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On LSQUARE reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On LE reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On IMPLIES reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On IFF reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On IDENTIFIER reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On HATHAT reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On HAT reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On GTGT reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On GT reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On GE reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On FROM reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On FREES reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On FOR reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On EXITS reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On EQUAL reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On EQ reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On EOF reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On ENSURES reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On DOTDOT reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On DOT reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On DISJOINT reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On DECREASES reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On CONTINUES reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On COMPLETE reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On COMMA reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On COLONGT reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On COLON2 reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On BREAKS reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On BIMPLIES reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On BIFF reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On BEHAVIOR reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On ASSUMES reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On ASSIGNS reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On ARROW reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On AND reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On AMP reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR
-- On ALLOCATES reduce production lexpr_inner -> VALID_RANGE opt_label_1 LPAR lexpr COMMA lexpr COMMA lexpr RPAR

State 548:
## Known stack suffix:
## VALID_READ opt_label_1 LPAR lexpr
## LR(1) items:
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT BIMPLIES BIFF AND AMP ]
lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr . RPAR [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
-- On RPAR shift to state 549
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:

State 549:
## Known stack suffix:
## VALID_READ opt_label_1 LPAR lexpr RPAR
## LR(1) items:
lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR . [ WRITES WITH STAR SLASH SEMICOLON RSQUARE RPAR RETURNS REQUIRES READS RBRACE QUESTION PLUS PIPE PERCENT OR NE MINUS LTLT LTCOLON LT LSQUARE LE IMPLIES IFF IDENTIFIER HATHAT HAT GTGT GT GE FROM FREES FOR EXITS EQUAL EQ EOF ENSURES DOTDOT DOT DISJOINT DECREASES CONTINUES COMPLETE COMMA COLONGT COLON2 BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS ARROW AND AMP ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On WITH reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On STAR reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On SLASH reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On SEMICOLON reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On RSQUARE reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On RPAR reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On RETURNS reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On REQUIRES reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On READS reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On RBRACE reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On QUESTION reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On PLUS reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On PIPE reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On PERCENT reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On OR reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On NE reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On MINUS reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On LTLT reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On LTCOLON reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On LT reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On LSQUARE reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On LE reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On IMPLIES reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On IFF reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On IDENTIFIER reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On HATHAT reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On HAT reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On GTGT reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On GT reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On GE reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On FROM reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On FREES reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On FOR reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On EXITS reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On EQUAL reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On EQ reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On EOF reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On ENSURES reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On DOTDOT reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On DOT reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On DISJOINT reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On DECREASES reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On CONTINUES reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On COMPLETE reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On COMMA reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On COLONGT reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On COLON2 reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On BREAKS reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On BIMPLIES reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On BIFF reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On BEHAVIOR reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On ASSUMES reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On ASSIGNS reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On ARROW reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On AND reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On AMP reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR
-- On ALLOCATES reduce production lexpr_inner -> VALID_READ opt_label_1 LPAR lexpr RPAR

State 550:
## Known stack suffix:
## VOLATILE ne_zones
## LR(1) items:
decl -> VOLATILE ne_zones . volatile_opt SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On WRITES shift to state 551
-- On READS shift to state 553
-- On volatile_opt shift to state 557
## Reductions:
-- On SEMICOLON reduce production volatile_opt ->

State 551:
## Known stack suffix:
## WRITES
## LR(1) items:
volatile_opt -> WRITES . any_identifier volatile_opt [ SEMICOLON ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On any_identifier shift to state 552
-- On acsl_c_keyword shift to state 87
## Reductions:

State 552:
## Known stack suffix:
## WRITES any_identifier
## LR(1) items:
volatile_opt -> WRITES any_identifier . volatile_opt [ SEMICOLON ]
## Transitions:
-- On WRITES shift to state 551
-- On READS shift to state 553
-- On volatile_opt shift to state 556
## Reductions:
-- On SEMICOLON reduce production volatile_opt ->

State 553:
## Known stack suffix:
## READS
## LR(1) items:
volatile_opt -> READS . any_identifier volatile_opt [ SEMICOLON ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On any_identifier shift to state 554
-- On acsl_c_keyword shift to state 87
## Reductions:

State 554:
## Known stack suffix:
## READS any_identifier
## LR(1) items:
volatile_opt -> READS any_identifier . volatile_opt [ SEMICOLON ]
## Transitions:
-- On WRITES shift to state 551
-- On READS shift to state 553
-- On volatile_opt shift to state 555
## Reductions:
-- On SEMICOLON reduce production volatile_opt ->

State 555:
## Known stack suffix:
## READS any_identifier volatile_opt
## LR(1) items:
volatile_opt -> READS any_identifier volatile_opt . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production volatile_opt -> READS any_identifier volatile_opt

State 556:
## Known stack suffix:
## WRITES any_identifier volatile_opt
## LR(1) items:
volatile_opt -> WRITES any_identifier volatile_opt . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production volatile_opt -> WRITES any_identifier volatile_opt

State 557:
## Known stack suffix:
## VOLATILE ne_zones volatile_opt
## LR(1) items:
decl -> VOLATILE ne_zones volatile_opt . SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 558
## Reductions:

State 558:
## Known stack suffix:
## VOLATILE ne_zones volatile_opt SEMICOLON
## LR(1) items:
decl -> VOLATILE ne_zones volatile_opt SEMICOLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production decl -> VOLATILE ne_zones volatile_opt SEMICOLON
-- On TYPE reduce production decl -> VOLATILE ne_zones volatile_opt SEMICOLON
-- On PREDICATE reduce production decl -> VOLATILE ne_zones volatile_opt SEMICOLON
-- On MODULE reduce production decl -> VOLATILE ne_zones volatile_opt SEMICOLON
-- On MODEL reduce production decl -> VOLATILE ne_zones volatile_opt SEMICOLON
-- On LOGIC reduce production decl -> VOLATILE ne_zones volatile_opt SEMICOLON
-- On LEMMA reduce production decl -> VOLATILE ne_zones volatile_opt SEMICOLON
-- On INDUCTIVE reduce production decl -> VOLATILE ne_zones volatile_opt SEMICOLON
-- On INCLUDE reduce production decl -> VOLATILE ne_zones volatile_opt SEMICOLON
-- On GLOBAL reduce production decl -> VOLATILE ne_zones volatile_opt SEMICOLON
-- On FUNCTION reduce production decl -> VOLATILE ne_zones volatile_opt SEMICOLON
-- On EXT_LET reduce production decl -> VOLATILE ne_zones volatile_opt SEMICOLON
-- On EXT_AT reduce production decl -> VOLATILE ne_zones volatile_opt SEMICOLON
-- On EOF reduce production decl -> VOLATILE ne_zones volatile_opt SEMICOLON
-- On CONTRACT reduce production decl -> VOLATILE ne_zones volatile_opt SEMICOLON
-- On AXIOMATIC reduce production decl -> VOLATILE ne_zones volatile_opt SEMICOLON
-- On AXIOM reduce production decl -> VOLATILE ne_zones volatile_opt SEMICOLON

State 559:
## Known stack suffix:
## ne_lexpr_list
## LR(1) items:
ne_zones -> ne_lexpr_list . [ WRITES SEMICOLON RETURNS REQUIRES READS IDENTIFIER FROM FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production ne_zones -> ne_lexpr_list
-- On SEMICOLON reduce production ne_zones -> ne_lexpr_list
-- On RETURNS reduce production ne_zones -> ne_lexpr_list
-- On REQUIRES reduce production ne_zones -> ne_lexpr_list
-- On READS reduce production ne_zones -> ne_lexpr_list
-- On IDENTIFIER reduce production ne_zones -> ne_lexpr_list
-- On FROM reduce production ne_zones -> ne_lexpr_list
-- On FREES reduce production ne_zones -> ne_lexpr_list
-- On EXITS reduce production ne_zones -> ne_lexpr_list
-- On EOF reduce production ne_zones -> ne_lexpr_list
-- On ENSURES reduce production ne_zones -> ne_lexpr_list
-- On DISJOINT reduce production ne_zones -> ne_lexpr_list
-- On DECREASES reduce production ne_zones -> ne_lexpr_list
-- On CONTINUES reduce production ne_zones -> ne_lexpr_list
-- On COMPLETE reduce production ne_zones -> ne_lexpr_list
-- On BREAKS reduce production ne_zones -> ne_lexpr_list
-- On BEHAVIOR reduce production ne_zones -> ne_lexpr_list
-- On ASSUMES reduce production ne_zones -> ne_lexpr_list
-- On ASSIGNS reduce production ne_zones -> ne_lexpr_list
-- On ALLOCATES reduce production ne_zones -> ne_lexpr_list

State 560:
## Known stack suffix:
## TYPE
## LR(1) items:
deprecated_logic_decl -> TYPE . poly_id_type SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
logic_def -> TYPE . poly_id_type_add_typename EQUAL typedef SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
type_annot -> TYPE . INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On INVARIANT shift to state 561
-- On poly_id_type_add_typename shift to state 580
-- On poly_id_type shift to state 608
-- On full_identifier shift to state 610
-- On enter_kw_c_mode shift to state 593
## Reductions:
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 561:
## Known stack suffix:
## TYPE INVARIANT
## LR(1) items:
type_annot -> TYPE INVARIANT . any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On any_identifier shift to state 562
-- On acsl_c_keyword shift to state 87
## Reductions:

State 562:
## Known stack suffix:
## TYPE INVARIANT any_identifier
## LR(1) items:
type_annot -> TYPE INVARIANT any_identifier . LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On LPAR shift to state 563
## Reductions:

State 563:
## Known stack suffix:
## TYPE INVARIANT any_identifier LPAR
## LR(1) items:
type_annot -> TYPE INVARIANT any_identifier LPAR . full_parameter RPAR EQUAL full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On full_parameter shift to state 564
-- On enter_kw_c_mode shift to state 572
## Reductions:
-- On VOID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->

State 564:
## Known stack suffix:
## TYPE INVARIANT any_identifier LPAR full_parameter
## LR(1) items:
type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter . RPAR EQUAL full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On RPAR shift to state 565
## Reductions:

State 565:
## Known stack suffix:
## TYPE INVARIANT any_identifier LPAR full_parameter RPAR
## LR(1) items:
type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR . EQUAL full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On EQUAL shift to state 566
## Reductions:

State 566:
## Known stack suffix:
## TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL
## LR(1) items:
type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL . full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On full_lexpr shift to state 567
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 567:
## Known stack suffix:
## TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr
## LR(1) items:
type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr . SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 568
## Reductions:

State 568:
## Known stack suffix:
## TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON
## LR(1) items:
type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON
-- On TYPE reduce production type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON
-- On PREDICATE reduce production type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON
-- On MODULE reduce production type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON
-- On MODEL reduce production type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON
-- On LOGIC reduce production type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON
-- On LEMMA reduce production type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON
-- On INDUCTIVE reduce production type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON
-- On INCLUDE reduce production type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON
-- On GLOBAL reduce production type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON
-- On FUNCTION reduce production type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON
-- On EXT_LET reduce production type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON
-- On EXT_AT reduce production type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON
-- On EOF reduce production type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON
-- On CONTRACT reduce production type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON
-- On AXIOMATIC reduce production type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON
-- On AXIOM reduce production type_annot -> TYPE INVARIANT any_identifier LPAR full_parameter RPAR EQUAL full_lexpr SEMICOLON

State 569:
## Known stack suffix:
## enter_kw_c_mode
## LR(1) items:
full_lexpr -> enter_kw_c_mode . lexpr exit_kw_c_mode [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES FOR EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 570
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 570:
## Known stack suffix:
## enter_kw_c_mode lexpr
## LR(1) items:
full_lexpr -> enter_kw_c_mode lexpr . exit_kw_c_mode [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES FOR EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
lexpr -> lexpr . IMPLIES lexpr [ SEMICOLON RETURNS REQUIRES QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FREES FOR EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . IFF lexpr [ SEMICOLON RETURNS REQUIRES QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FREES FOR EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . OR lexpr [ SEMICOLON RETURNS REQUIRES QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FREES FOR EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AND lexpr [ SEMICOLON RETURNS REQUIRES QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FREES FOR EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HATHAT lexpr [ SEMICOLON RETURNS REQUIRES QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FREES FOR EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . AMP lexpr [ SEMICOLON RETURNS REQUIRES QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FREES FOR EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . PIPE lexpr [ SEMICOLON RETURNS REQUIRES QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FREES FOR EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . HAT lexpr [ SEMICOLON RETURNS REQUIRES QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FREES FOR EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIMPLIES lexpr [ SEMICOLON RETURNS REQUIRES QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FREES FOR EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . BIFF lexpr [ SEMICOLON RETURNS REQUIRES QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FREES FOR EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ SEMICOLON RETURNS REQUIRES QUESTION PIPE OR IMPLIES IFF IDENTIFIER HATHAT HAT FREES FOR EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BIMPLIES BIFF BEHAVIOR ASSUMES ASSIGNS AND AMP ALLOCATES ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
-- On exit_kw_c_mode shift to state 571
## Reductions:
-- On SEMICOLON reduce production exit_kw_c_mode ->
-- On RETURNS reduce production exit_kw_c_mode ->
-- On REQUIRES reduce production exit_kw_c_mode ->
-- On IDENTIFIER reduce production exit_kw_c_mode ->
-- On FREES reduce production exit_kw_c_mode ->
-- On FOR reduce production exit_kw_c_mode ->
-- On EXITS reduce production exit_kw_c_mode ->
-- On EOF reduce production exit_kw_c_mode ->
-- On ENSURES reduce production exit_kw_c_mode ->
-- On DISJOINT reduce production exit_kw_c_mode ->
-- On DECREASES reduce production exit_kw_c_mode ->
-- On CONTINUES reduce production exit_kw_c_mode ->
-- On COMPLETE reduce production exit_kw_c_mode ->
-- On BREAKS reduce production exit_kw_c_mode ->
-- On BEHAVIOR reduce production exit_kw_c_mode ->
-- On ASSUMES reduce production exit_kw_c_mode ->
-- On ASSIGNS reduce production exit_kw_c_mode ->
-- On ALLOCATES reduce production exit_kw_c_mode ->

State 571:
## Known stack suffix:
## enter_kw_c_mode lexpr exit_kw_c_mode
## LR(1) items:
full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode . [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES FOR EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode
-- On RETURNS reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode
-- On REQUIRES reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode
-- On IDENTIFIER reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode
-- On FREES reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode
-- On FOR reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode
-- On EXITS reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode
-- On EOF reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode
-- On ENSURES reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode
-- On DISJOINT reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode
-- On DECREASES reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode
-- On CONTINUES reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode
-- On COMPLETE reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode
-- On BREAKS reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode
-- On BEHAVIOR reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode
-- On ASSUMES reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode
-- On ASSIGNS reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode
-- On ALLOCATES reduce production full_lexpr -> enter_kw_c_mode lexpr exit_kw_c_mode

State 572:
## Known stack suffix:
## enter_kw_c_mode
## LR(1) items:
full_parameter -> enter_kw_c_mode . parameter exit_kw_c_mode [ SEMICOLON RPAR RBRACE ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On IDENTIFIER shift to state 220
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 573
-- On parameter shift to state 575
-- On identifier shift to state 577
-- On id_as_typename shift to state 578
## Reductions:

State 573:
## Known stack suffix:
## type_spec
## LR(1) items:
parameter -> type_spec . var_spec [ SEMICOLON RPAR RBRACE COMMA ]
## Transitions:
-- On STAR shift to state 158
-- On LPAR shift to state 228
-- On IDENTIFIER shift to state 220
-- On var_spec_bis shift to state 229
-- On var_spec shift to state 574
-- On stars shift to state 238
-- On identifier shift to state 240
## Reductions:

State 574:
## Known stack suffix:
## type_spec var_spec
## LR(1) items:
parameter -> type_spec var_spec . [ SEMICOLON RPAR RBRACE COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production parameter -> type_spec var_spec
-- On RPAR reduce production parameter -> type_spec var_spec
-- On RBRACE reduce production parameter -> type_spec var_spec
-- On COMMA reduce production parameter -> type_spec var_spec

State 575:
## Known stack suffix:
## enter_kw_c_mode parameter
## LR(1) items:
full_parameter -> enter_kw_c_mode parameter . exit_kw_c_mode [ SEMICOLON RPAR RBRACE ]
## Transitions:
-- On exit_kw_c_mode shift to state 576
## Reductions:
-- On SEMICOLON reduce production exit_kw_c_mode ->
-- On RPAR reduce production exit_kw_c_mode ->
-- On RBRACE reduce production exit_kw_c_mode ->

State 576:
## Known stack suffix:
## enter_kw_c_mode parameter exit_kw_c_mode
## LR(1) items:
full_parameter -> enter_kw_c_mode parameter exit_kw_c_mode . [ SEMICOLON RPAR RBRACE ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production full_parameter -> enter_kw_c_mode parameter exit_kw_c_mode
-- On RPAR reduce production full_parameter -> enter_kw_c_mode parameter exit_kw_c_mode
-- On RBRACE reduce production full_parameter -> enter_kw_c_mode parameter exit_kw_c_mode

State 577:
## Known stack suffix:
## identifier
## LR(1) items:
id_as_typename -> identifier . [ STAR LPAR IDENTIFIER ]
## Transitions:
## Reductions:
-- On STAR reduce production id_as_typename -> identifier
-- On LPAR reduce production id_as_typename -> identifier
-- On IDENTIFIER reduce production id_as_typename -> identifier

State 578:
## Known stack suffix:
## id_as_typename
## LR(1) items:
parameter -> id_as_typename . var_spec [ SEMICOLON RPAR RBRACE COMMA ]
## Transitions:
-- On STAR shift to state 158
-- On LPAR shift to state 228
-- On IDENTIFIER shift to state 220
-- On var_spec_bis shift to state 229
-- On var_spec shift to state 579
-- On stars shift to state 238
-- On identifier shift to state 240
## Reductions:

State 579:
## Known stack suffix:
## id_as_typename var_spec
## LR(1) items:
parameter -> id_as_typename var_spec . [ SEMICOLON RPAR RBRACE COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production parameter -> id_as_typename var_spec
-- On RPAR reduce production parameter -> id_as_typename var_spec
-- On RBRACE reduce production parameter -> id_as_typename var_spec
-- On COMMA reduce production parameter -> id_as_typename var_spec

State 580:
## Known stack suffix:
## TYPE poly_id_type_add_typename
## LR(1) items:
logic_def -> TYPE poly_id_type_add_typename . EQUAL typedef SEMICOLON [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On EQUAL shift to state 581
## Reductions:

State 581:
## Known stack suffix:
## TYPE poly_id_type_add_typename EQUAL
## LR(1) items:
logic_def -> TYPE poly_id_type_add_typename EQUAL . typedef SEMICOLON [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On PIPE shift to state 582
-- On typedef shift to state 601
-- On ne_datacons_list shift to state 603
-- On full_logic_type shift to state 604
-- On full_identifier shift to state 583
-- On enter_kw_c_mode shift to state 605
-- On datacons shift to state 606
## Reductions:
-- On VOID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->

State 582:
## Known stack suffix:
## PIPE
## LR(1) items:
ne_datacons_list -> PIPE . datacons datacons_list [ SEMICOLON ]
## Transitions:
-- On full_identifier shift to state 583
-- On enter_kw_c_mode shift to state 593
-- On datacons shift to state 596
## Reductions:
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 583:
## Known stack suffix:
## full_identifier
## LR(1) items:
datacons -> full_identifier . [ SEMICOLON PIPE ]
datacons -> full_identifier . LPAR ne_type_list RPAR [ SEMICOLON PIPE ]
## Transitions:
-- On LPAR shift to state 584
## Reductions:
-- On SEMICOLON reduce production datacons -> full_identifier
-- On PIPE reduce production datacons -> full_identifier

State 584:
## Known stack suffix:
## full_identifier LPAR
## LR(1) items:
datacons -> full_identifier LPAR . ne_type_list RPAR [ SEMICOLON PIPE ]
## Transitions:
-- On ne_type_list shift to state 585
-- On full_logic_type shift to state 587
-- On enter_kw_c_mode shift to state 590
## Reductions:
-- On VOID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->

State 585:
## Known stack suffix:
## full_identifier LPAR ne_type_list
## LR(1) items:
datacons -> full_identifier LPAR ne_type_list . RPAR [ SEMICOLON PIPE ]
## Transitions:
-- On RPAR shift to state 586
## Reductions:

State 586:
## Known stack suffix:
## full_identifier LPAR ne_type_list RPAR
## LR(1) items:
datacons -> full_identifier LPAR ne_type_list RPAR . [ SEMICOLON PIPE ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production datacons -> full_identifier LPAR ne_type_list RPAR
-- On PIPE reduce production datacons -> full_identifier LPAR ne_type_list RPAR

State 587:
## Known stack suffix:
## full_logic_type
## LR(1) items:
ne_type_list -> full_logic_type . [ RPAR ]
ne_type_list -> full_logic_type . COMMA ne_type_list [ RPAR ]
## Transitions:
-- On COMMA shift to state 588
## Reductions:
-- On RPAR reduce production ne_type_list -> full_logic_type

State 588:
## Known stack suffix:
## full_logic_type COMMA
## LR(1) items:
ne_type_list -> full_logic_type COMMA . ne_type_list [ RPAR ]
## Transitions:
-- On ne_type_list shift to state 589
-- On full_logic_type shift to state 587
-- On enter_kw_c_mode shift to state 590
## Reductions:
-- On VOID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->

State 589:
## Known stack suffix:
## full_logic_type COMMA ne_type_list
## LR(1) items:
ne_type_list -> full_logic_type COMMA ne_type_list . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR reduce production ne_type_list -> full_logic_type COMMA ne_type_list

State 590:
## Known stack suffix:
## enter_kw_c_mode
## LR(1) items:
full_logic_type -> enter_kw_c_mode . logic_type exit_kw_c_mode [ RPAR COMMA ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 157
-- On logic_type shift to state 591
## Reductions:

State 591:
## Known stack suffix:
## enter_kw_c_mode logic_type
## LR(1) items:
full_logic_type -> enter_kw_c_mode logic_type . exit_kw_c_mode [ SEMICOLON RPAR COMMA ]
## Transitions:
-- On exit_kw_c_mode shift to state 592
## Reductions:
-- On SEMICOLON reduce production exit_kw_c_mode ->
-- On RPAR reduce production exit_kw_c_mode ->
-- On COMMA reduce production exit_kw_c_mode ->

State 592:
## Known stack suffix:
## enter_kw_c_mode logic_type exit_kw_c_mode
## LR(1) items:
full_logic_type -> enter_kw_c_mode logic_type exit_kw_c_mode . [ SEMICOLON RPAR COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production full_logic_type -> enter_kw_c_mode logic_type exit_kw_c_mode
-- On RPAR reduce production full_logic_type -> enter_kw_c_mode logic_type exit_kw_c_mode
-- On COMMA reduce production full_logic_type -> enter_kw_c_mode logic_type exit_kw_c_mode

State 593:
## Known stack suffix:
## enter_kw_c_mode
## LR(1) items:
full_identifier -> enter_kw_c_mode . identifier exit_kw_c_mode [ SEMICOLON READS PIPE LT LPAR LBRACE GT EQUAL COMMA COLON ]
## Transitions:
-- On IDENTIFIER shift to state 220
-- On identifier shift to state 594
## Reductions:

State 594:
## Known stack suffix:
## enter_kw_c_mode identifier
## LR(1) items:
full_identifier -> enter_kw_c_mode identifier . exit_kw_c_mode [ SEMICOLON READS PIPE LT LPAR LBRACE GT EQUAL COMMA COLON ]
## Transitions:
-- On exit_kw_c_mode shift to state 595
## Reductions:
-- On SEMICOLON reduce production exit_kw_c_mode ->
-- On READS reduce production exit_kw_c_mode ->
-- On PIPE reduce production exit_kw_c_mode ->
-- On LT reduce production exit_kw_c_mode ->
-- On LPAR reduce production exit_kw_c_mode ->
-- On LBRACE reduce production exit_kw_c_mode ->
-- On GT reduce production exit_kw_c_mode ->
-- On EQUAL reduce production exit_kw_c_mode ->
-- On COMMA reduce production exit_kw_c_mode ->
-- On COLON reduce production exit_kw_c_mode ->

State 595:
## Known stack suffix:
## enter_kw_c_mode identifier exit_kw_c_mode
## LR(1) items:
full_identifier -> enter_kw_c_mode identifier exit_kw_c_mode . [ SEMICOLON READS PIPE LT LPAR LBRACE GT EQUAL COMMA COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production full_identifier -> enter_kw_c_mode identifier exit_kw_c_mode
-- On READS reduce production full_identifier -> enter_kw_c_mode identifier exit_kw_c_mode
-- On PIPE reduce production full_identifier -> enter_kw_c_mode identifier exit_kw_c_mode
-- On LT reduce production full_identifier -> enter_kw_c_mode identifier exit_kw_c_mode
-- On LPAR reduce production full_identifier -> enter_kw_c_mode identifier exit_kw_c_mode
-- On LBRACE reduce production full_identifier -> enter_kw_c_mode identifier exit_kw_c_mode
-- On GT reduce production full_identifier -> enter_kw_c_mode identifier exit_kw_c_mode
-- On EQUAL reduce production full_identifier -> enter_kw_c_mode identifier exit_kw_c_mode
-- On COMMA reduce production full_identifier -> enter_kw_c_mode identifier exit_kw_c_mode
-- On COLON reduce production full_identifier -> enter_kw_c_mode identifier exit_kw_c_mode

State 596:
## Known stack suffix:
## PIPE datacons
## LR(1) items:
ne_datacons_list -> PIPE datacons . datacons_list [ SEMICOLON ]
## Transitions:
-- On PIPE shift to state 597
-- On datacons_list shift to state 600
## Reductions:
-- On SEMICOLON reduce production datacons_list ->

State 597:
## Known stack suffix:
## PIPE
## LR(1) items:
datacons_list -> PIPE . datacons datacons_list [ SEMICOLON ]
## Transitions:
-- On full_identifier shift to state 583
-- On enter_kw_c_mode shift to state 593
-- On datacons shift to state 598
## Reductions:
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 598:
## Known stack suffix:
## PIPE datacons
## LR(1) items:
datacons_list -> PIPE datacons . datacons_list [ SEMICOLON ]
## Transitions:
-- On PIPE shift to state 597
-- On datacons_list shift to state 599
## Reductions:
-- On SEMICOLON reduce production datacons_list ->

State 599:
## Known stack suffix:
## PIPE datacons datacons_list
## LR(1) items:
datacons_list -> PIPE datacons datacons_list . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production datacons_list -> PIPE datacons datacons_list

State 600:
## Known stack suffix:
## PIPE datacons datacons_list
## LR(1) items:
ne_datacons_list -> PIPE datacons datacons_list . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production ne_datacons_list -> PIPE datacons datacons_list

State 601:
## Known stack suffix:
## TYPE poly_id_type_add_typename EQUAL typedef
## LR(1) items:
logic_def -> TYPE poly_id_type_add_typename EQUAL typedef . SEMICOLON [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 602
## Reductions:

State 602:
## Known stack suffix:
## TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
## LR(1) items:
logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON . [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
-- On TYPE reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
-- On RBRACE reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
-- On PREDICATE reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
-- On MODULE reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
-- On MODEL reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
-- On LOGIC reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
-- On LEMMA reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
-- On INDUCTIVE reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
-- On INCLUDE reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
-- On GLOBAL reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
-- On FUNCTION reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
-- On EXT_LET reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
-- On EXT_AT reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
-- On EOF reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
-- On CONTRACT reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
-- On AXIOMATIC reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON
-- On AXIOM reduce production logic_def -> TYPE poly_id_type_add_typename EQUAL typedef SEMICOLON

State 603:
## Known stack suffix:
## ne_datacons_list
## LR(1) items:
typedef -> ne_datacons_list . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production typedef -> ne_datacons_list

State 604:
## Known stack suffix:
## full_logic_type
## LR(1) items:
typedef -> full_logic_type . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production typedef -> full_logic_type

State 605:
## Known stack suffix:
## enter_kw_c_mode
## LR(1) items:
full_identifier -> enter_kw_c_mode . identifier exit_kw_c_mode [ SEMICOLON PIPE LPAR ]
full_logic_type -> enter_kw_c_mode . logic_type exit_kw_c_mode [ SEMICOLON ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On IDENTIFIER shift to state 220
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 157
-- On logic_type shift to state 591
-- On identifier shift to state 594
## Reductions:

State 606:
## Known stack suffix:
## datacons
## LR(1) items:
ne_datacons_list -> datacons . datacons_list [ SEMICOLON ]
## Transitions:
-- On PIPE shift to state 597
-- On datacons_list shift to state 607
## Reductions:
-- On SEMICOLON reduce production datacons_list ->

State 607:
## Known stack suffix:
## datacons datacons_list
## LR(1) items:
ne_datacons_list -> datacons datacons_list . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production ne_datacons_list -> datacons datacons_list

State 608:
## Known stack suffix:
## TYPE poly_id_type
## LR(1) items:
deprecated_logic_decl -> TYPE poly_id_type . SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
poly_id_type_add_typename -> poly_id_type . [ EQUAL ]
## Transitions:
-- On SEMICOLON shift to state 609
## Reductions:
-- On EQUAL reduce production poly_id_type_add_typename -> poly_id_type

State 609:
## Known stack suffix:
## TYPE poly_id_type SEMICOLON
## LR(1) items:
deprecated_logic_decl -> TYPE poly_id_type SEMICOLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production deprecated_logic_decl -> TYPE poly_id_type SEMICOLON
-- On TYPE reduce production deprecated_logic_decl -> TYPE poly_id_type SEMICOLON
-- On PREDICATE reduce production deprecated_logic_decl -> TYPE poly_id_type SEMICOLON
-- On MODULE reduce production deprecated_logic_decl -> TYPE poly_id_type SEMICOLON
-- On MODEL reduce production deprecated_logic_decl -> TYPE poly_id_type SEMICOLON
-- On LOGIC reduce production deprecated_logic_decl -> TYPE poly_id_type SEMICOLON
-- On LEMMA reduce production deprecated_logic_decl -> TYPE poly_id_type SEMICOLON
-- On INDUCTIVE reduce production deprecated_logic_decl -> TYPE poly_id_type SEMICOLON
-- On INCLUDE reduce production deprecated_logic_decl -> TYPE poly_id_type SEMICOLON
-- On GLOBAL reduce production deprecated_logic_decl -> TYPE poly_id_type SEMICOLON
-- On FUNCTION reduce production deprecated_logic_decl -> TYPE poly_id_type SEMICOLON
-- On EXT_LET reduce production deprecated_logic_decl -> TYPE poly_id_type SEMICOLON
-- On EXT_AT reduce production deprecated_logic_decl -> TYPE poly_id_type SEMICOLON
-- On EOF reduce production deprecated_logic_decl -> TYPE poly_id_type SEMICOLON
-- On CONTRACT reduce production deprecated_logic_decl -> TYPE poly_id_type SEMICOLON
-- On AXIOMATIC reduce production deprecated_logic_decl -> TYPE poly_id_type SEMICOLON
-- On AXIOM reduce production deprecated_logic_decl -> TYPE poly_id_type SEMICOLON

State 610:
## Known stack suffix:
## full_identifier
## LR(1) items:
poly_id_type -> full_identifier . [ SEMICOLON EQUAL ]
poly_id_type -> full_identifier . LT ne_tvar_list GT [ SEMICOLON EQUAL ]
## Transitions:
-- On LT shift to state 611
## Reductions:
-- On SEMICOLON reduce production poly_id_type -> full_identifier
-- On EQUAL reduce production poly_id_type -> full_identifier

State 611:
## Known stack suffix:
## full_identifier LT
## LR(1) items:
poly_id_type -> full_identifier LT . ne_tvar_list GT [ SEMICOLON READS LPAR EQUAL COLON ]
## Transitions:
-- On ne_tvar_list shift to state 612
-- On full_identifier shift to state 614
-- On enter_kw_c_mode shift to state 593
## Reductions:
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 612:
## Known stack suffix:
## full_identifier LT ne_tvar_list
## LR(1) items:
poly_id_type -> full_identifier LT ne_tvar_list . GT [ SEMICOLON READS LPAR EQUAL COLON ]
## Transitions:
-- On GT shift to state 613
## Reductions:

State 613:
## Known stack suffix:
## full_identifier LT ne_tvar_list GT
## LR(1) items:
poly_id_type -> full_identifier LT ne_tvar_list GT . [ SEMICOLON READS LPAR EQUAL COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production poly_id_type -> full_identifier LT ne_tvar_list GT
-- On READS reduce production poly_id_type -> full_identifier LT ne_tvar_list GT
-- On LPAR reduce production poly_id_type -> full_identifier LT ne_tvar_list GT
-- On EQUAL reduce production poly_id_type -> full_identifier LT ne_tvar_list GT
-- On COLON reduce production poly_id_type -> full_identifier LT ne_tvar_list GT

State 614:
## Known stack suffix:
## full_identifier
## LR(1) items:
ne_tvar_list -> full_identifier . [ GT ]
ne_tvar_list -> full_identifier . COMMA ne_tvar_list [ GT ]
## Transitions:
-- On COMMA shift to state 615
## Reductions:
-- On GT reduce production ne_tvar_list -> full_identifier

State 615:
## Known stack suffix:
## full_identifier COMMA
## LR(1) items:
ne_tvar_list -> full_identifier COMMA . ne_tvar_list [ GT ]
## Transitions:
-- On ne_tvar_list shift to state 616
-- On full_identifier shift to state 614
-- On enter_kw_c_mode shift to state 593
## Reductions:
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 616:
## Known stack suffix:
## full_identifier COMMA ne_tvar_list
## LR(1) items:
ne_tvar_list -> full_identifier COMMA ne_tvar_list . [ GT ]
## Transitions:
## Reductions:
-- On GT reduce production ne_tvar_list -> full_identifier COMMA ne_tvar_list

State 617:
## Known stack suffix:
## SLICE
## LR(1) items:
slice_pragma -> SLICE . PRAGMA any_identifier full_lexpr SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
slice_pragma -> SLICE . PRAGMA any_identifier SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
-- On PRAGMA shift to state 618
## Reductions:

State 618:
## Known stack suffix:
## SLICE PRAGMA
## LR(1) items:
slice_pragma -> SLICE PRAGMA . any_identifier full_lexpr SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
slice_pragma -> SLICE PRAGMA . any_identifier SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On any_identifier shift to state 619
-- On acsl_c_keyword shift to state 87
## Reductions:

State 619:
## Known stack suffix:
## SLICE PRAGMA any_identifier
## LR(1) items:
slice_pragma -> SLICE PRAGMA any_identifier . full_lexpr SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
slice_pragma -> SLICE PRAGMA any_identifier . SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
-- On SEMICOLON shift to state 620
-- On full_lexpr shift to state 621
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 620:
## Known stack suffix:
## SLICE PRAGMA any_identifier SEMICOLON
## LR(1) items:
slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON . [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On TYPE reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On SLICE reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On PREDICATE reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On MODULE reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On MODEL reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On LOGIC reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On LEMMA reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On INVARIANT reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On INDUCTIVE reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On INCLUDE reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On IMPACT reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On GLOBAL reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On FUNCTION reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On FOR reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On EXT_LET reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On EXT_AT reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On EOF reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On CONTRACT reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On AXIOMATIC reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On AXIOM reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON
-- On ASSERT reduce production slice_pragma -> SLICE PRAGMA any_identifier SEMICOLON

State 621:
## Known stack suffix:
## SLICE PRAGMA any_identifier full_lexpr
## LR(1) items:
slice_pragma -> SLICE PRAGMA any_identifier full_lexpr . SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
-- On SEMICOLON shift to state 622
## Reductions:

State 622:
## Known stack suffix:
## SLICE PRAGMA any_identifier full_lexpr SEMICOLON
## LR(1) items:
slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON . [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On TYPE reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On SLICE reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On PREDICATE reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On MODULE reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On MODEL reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On LOGIC reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On LEMMA reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On INVARIANT reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On INDUCTIVE reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On INCLUDE reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On IMPACT reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On GLOBAL reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On FUNCTION reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On FOR reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On EXT_LET reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On EXT_AT reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On EOF reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On CONTRACT reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On AXIOMATIC reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On AXIOM reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON
-- On ASSERT reduce production slice_pragma -> SLICE PRAGMA any_identifier full_lexpr SEMICOLON

State 623:
## Known stack suffix:
## PREDICATE
## LR(1) items:
deprecated_logic_decl -> PREDICATE . poly_id opt_parameters SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
logic_def -> PREDICATE . poly_id opt_parameters EQUAL full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On poly_id_type shift to state 624
-- On poly_id shift to state 625
-- On full_identifier shift to state 641
-- On enter_kw_c_mode shift to state 593
## Reductions:
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 624:
## Known stack suffix:
## poly_id_type
## LR(1) items:
poly_id -> poly_id_type . [ SEMICOLON READS LPAR EQUAL COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production poly_id -> poly_id_type
-- On READS reduce production poly_id -> poly_id_type
-- On LPAR reduce production poly_id -> poly_id_type
-- On EQUAL reduce production poly_id -> poly_id_type
-- On COLON reduce production poly_id -> poly_id_type

State 625:
## Known stack suffix:
## PREDICATE poly_id
## LR(1) items:
deprecated_logic_decl -> PREDICATE poly_id . opt_parameters SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
logic_def -> PREDICATE poly_id . opt_parameters EQUAL full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On LPAR shift to state 626
-- On parameters shift to state 635
-- On opt_parameters shift to state 636
## Reductions:
-- On SEMICOLON reduce production opt_parameters ->
-- On EQUAL reduce production opt_parameters ->

State 626:
## Known stack suffix:
## LPAR
## LR(1) items:
parameters -> LPAR . full_parameters RPAR [ SEMICOLON READS LBRACE EQUAL ]
## Transitions:
-- On full_parameters shift to state 627
-- On enter_kw_c_mode shift to state 629
## Reductions:
-- On VOID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->

State 627:
## Known stack suffix:
## LPAR full_parameters
## LR(1) items:
parameters -> LPAR full_parameters . RPAR [ SEMICOLON READS LBRACE EQUAL ]
## Transitions:
-- On RPAR shift to state 628
## Reductions:

State 628:
## Known stack suffix:
## LPAR full_parameters RPAR
## LR(1) items:
parameters -> LPAR full_parameters RPAR . [ SEMICOLON READS LBRACE EQUAL ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production parameters -> LPAR full_parameters RPAR
-- On READS reduce production parameters -> LPAR full_parameters RPAR
-- On LBRACE reduce production parameters -> LPAR full_parameters RPAR
-- On EQUAL reduce production parameters -> LPAR full_parameters RPAR

State 629:
## Known stack suffix:
## enter_kw_c_mode
## LR(1) items:
full_parameters -> enter_kw_c_mode . ne_parameters exit_kw_c_mode [ RPAR ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On IDENTIFIER shift to state 220
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 573
-- On parameter shift to state 630
-- On ne_parameters shift to state 633
-- On identifier shift to state 577
-- On id_as_typename shift to state 578
## Reductions:

State 630:
## Known stack suffix:
## parameter
## LR(1) items:
ne_parameters -> parameter . [ RPAR ]
ne_parameters -> parameter . COMMA ne_parameters [ RPAR ]
## Transitions:
-- On COMMA shift to state 631
## Reductions:
-- On RPAR reduce production ne_parameters -> parameter

State 631:
## Known stack suffix:
## parameter COMMA
## LR(1) items:
ne_parameters -> parameter COMMA . ne_parameters [ RPAR ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On IDENTIFIER shift to state 220
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 573
-- On parameter shift to state 630
-- On ne_parameters shift to state 632
-- On identifier shift to state 577
-- On id_as_typename shift to state 578
## Reductions:

State 632:
## Known stack suffix:
## parameter COMMA ne_parameters
## LR(1) items:
ne_parameters -> parameter COMMA ne_parameters . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR reduce production ne_parameters -> parameter COMMA ne_parameters

State 633:
## Known stack suffix:
## enter_kw_c_mode ne_parameters
## LR(1) items:
full_parameters -> enter_kw_c_mode ne_parameters . exit_kw_c_mode [ RPAR ]
## Transitions:
-- On exit_kw_c_mode shift to state 634
## Reductions:
-- On RPAR reduce production exit_kw_c_mode ->

State 634:
## Known stack suffix:
## enter_kw_c_mode ne_parameters exit_kw_c_mode
## LR(1) items:
full_parameters -> enter_kw_c_mode ne_parameters exit_kw_c_mode . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR reduce production full_parameters -> enter_kw_c_mode ne_parameters exit_kw_c_mode

State 635:
## Known stack suffix:
## parameters
## LR(1) items:
opt_parameters -> parameters . [ SEMICOLON READS EQUAL ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production opt_parameters -> parameters
-- On READS reduce production opt_parameters -> parameters
-- On EQUAL reduce production opt_parameters -> parameters

State 636:
## Known stack suffix:
## PREDICATE poly_id opt_parameters
## LR(1) items:
deprecated_logic_decl -> PREDICATE poly_id opt_parameters . SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
logic_def -> PREDICATE poly_id opt_parameters . EQUAL full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 637
-- On EQUAL shift to state 638
## Reductions:

State 637:
## Known stack suffix:
## PREDICATE poly_id opt_parameters SEMICOLON
## LR(1) items:
deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON
-- On TYPE reduce production deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON
-- On PREDICATE reduce production deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON
-- On MODULE reduce production deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON
-- On MODEL reduce production deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON
-- On LOGIC reduce production deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON
-- On LEMMA reduce production deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON
-- On INDUCTIVE reduce production deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON
-- On INCLUDE reduce production deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON
-- On GLOBAL reduce production deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON
-- On FUNCTION reduce production deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON
-- On EXT_LET reduce production deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON
-- On EXT_AT reduce production deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON
-- On EOF reduce production deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON
-- On CONTRACT reduce production deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON
-- On AXIOMATIC reduce production deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON
-- On AXIOM reduce production deprecated_logic_decl -> PREDICATE poly_id opt_parameters SEMICOLON

State 638:
## Known stack suffix:
## PREDICATE poly_id opt_parameters EQUAL
## LR(1) items:
logic_def -> PREDICATE poly_id opt_parameters EQUAL . full_lexpr SEMICOLON [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On full_lexpr shift to state 639
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 639:
## Known stack suffix:
## PREDICATE poly_id opt_parameters EQUAL full_lexpr
## LR(1) items:
logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr . SEMICOLON [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 640
## Reductions:

State 640:
## Known stack suffix:
## PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
## LR(1) items:
logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON . [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On TYPE reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On RBRACE reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On PREDICATE reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On MODULE reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On MODEL reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On LOGIC reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On LEMMA reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On INDUCTIVE reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On INCLUDE reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On GLOBAL reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On FUNCTION reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On EXT_LET reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On EXT_AT reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On EOF reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On CONTRACT reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On AXIOMATIC reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On AXIOM reduce production logic_def -> PREDICATE poly_id opt_parameters EQUAL full_lexpr SEMICOLON

State 641:
## Known stack suffix:
## full_identifier
## LR(1) items:
poly_id -> full_identifier . LBRACE ne_label_list RBRACE [ SEMICOLON READS LPAR EQUAL COLON ]
poly_id -> full_identifier . LBRACE ne_label_list RBRACE LT ne_tvar_list GT [ SEMICOLON READS LPAR EQUAL COLON ]
poly_id_type -> full_identifier . [ SEMICOLON READS LPAR EQUAL COLON ]
poly_id_type -> full_identifier . LT ne_tvar_list GT [ SEMICOLON READS LPAR EQUAL COLON ]
## Transitions:
-- On LT shift to state 611
-- On LBRACE shift to state 642
## Reductions:
-- On SEMICOLON reduce production poly_id_type -> full_identifier
-- On READS reduce production poly_id_type -> full_identifier
-- On LPAR reduce production poly_id_type -> full_identifier
-- On EQUAL reduce production poly_id_type -> full_identifier
-- On COLON reduce production poly_id_type -> full_identifier

State 642:
## Known stack suffix:
## full_identifier LBRACE
## LR(1) items:
poly_id -> full_identifier LBRACE . ne_label_list RBRACE [ SEMICOLON READS LPAR EQUAL COLON ]
poly_id -> full_identifier LBRACE . ne_label_list RBRACE LT ne_tvar_list GT [ SEMICOLON READS LPAR EQUAL COLON ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_label_list shift to state 643
-- On label_name shift to state 76
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On any_identifier shift to state 86
-- On acsl_c_keyword shift to state 87
## Reductions:

State 643:
## Known stack suffix:
## full_identifier LBRACE ne_label_list
## LR(1) items:
poly_id -> full_identifier LBRACE ne_label_list . RBRACE [ SEMICOLON READS LPAR EQUAL COLON ]
poly_id -> full_identifier LBRACE ne_label_list . RBRACE LT ne_tvar_list GT [ SEMICOLON READS LPAR EQUAL COLON ]
## Transitions:
-- On RBRACE shift to state 644
## Reductions:

State 644:
## Known stack suffix:
## full_identifier LBRACE ne_label_list RBRACE
## LR(1) items:
poly_id -> full_identifier LBRACE ne_label_list RBRACE . [ SEMICOLON READS LPAR EQUAL COLON ]
poly_id -> full_identifier LBRACE ne_label_list RBRACE . LT ne_tvar_list GT [ SEMICOLON READS LPAR EQUAL COLON ]
## Transitions:
-- On LT shift to state 645
## Reductions:
-- On SEMICOLON reduce production poly_id -> full_identifier LBRACE ne_label_list RBRACE
-- On READS reduce production poly_id -> full_identifier LBRACE ne_label_list RBRACE
-- On LPAR reduce production poly_id -> full_identifier LBRACE ne_label_list RBRACE
-- On EQUAL reduce production poly_id -> full_identifier LBRACE ne_label_list RBRACE
-- On COLON reduce production poly_id -> full_identifier LBRACE ne_label_list RBRACE

State 645:
## Known stack suffix:
## full_identifier LBRACE ne_label_list RBRACE LT
## LR(1) items:
poly_id -> full_identifier LBRACE ne_label_list RBRACE LT . ne_tvar_list GT [ SEMICOLON READS LPAR EQUAL COLON ]
## Transitions:
-- On ne_tvar_list shift to state 646
-- On full_identifier shift to state 614
-- On enter_kw_c_mode shift to state 593
## Reductions:
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 646:
## Known stack suffix:
## full_identifier LBRACE ne_label_list RBRACE LT ne_tvar_list
## LR(1) items:
poly_id -> full_identifier LBRACE ne_label_list RBRACE LT ne_tvar_list . GT [ SEMICOLON READS LPAR EQUAL COLON ]
## Transitions:
-- On GT shift to state 647
## Reductions:

State 647:
## Known stack suffix:
## full_identifier LBRACE ne_label_list RBRACE LT ne_tvar_list GT
## LR(1) items:
poly_id -> full_identifier LBRACE ne_label_list RBRACE LT ne_tvar_list GT . [ SEMICOLON READS LPAR EQUAL COLON ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production poly_id -> full_identifier LBRACE ne_label_list RBRACE LT ne_tvar_list GT
-- On READS reduce production poly_id -> full_identifier LBRACE ne_label_list RBRACE LT ne_tvar_list GT
-- On LPAR reduce production poly_id -> full_identifier LBRACE ne_label_list RBRACE LT ne_tvar_list GT
-- On EQUAL reduce production poly_id -> full_identifier LBRACE ne_label_list RBRACE LT ne_tvar_list GT
-- On COLON reduce production poly_id -> full_identifier LBRACE ne_label_list RBRACE LT ne_tvar_list GT

State 648:
## Known stack suffix:
## MODEL
## LR(1) items:
model_annot -> MODEL . type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 649
## Reductions:

State 649:
## Known stack suffix:
## MODEL type_spec
## LR(1) items:
model_annot -> MODEL type_spec . LBRACE full_parameter opt_semicolon RBRACE SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On LBRACE shift to state 650
## Reductions:

State 650:
## Known stack suffix:
## MODEL type_spec LBRACE
## LR(1) items:
model_annot -> MODEL type_spec LBRACE . full_parameter opt_semicolon RBRACE SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On full_parameter shift to state 651
-- On enter_kw_c_mode shift to state 572
## Reductions:
-- On VOID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->

State 651:
## Known stack suffix:
## MODEL type_spec LBRACE full_parameter
## LR(1) items:
model_annot -> MODEL type_spec LBRACE full_parameter . opt_semicolon RBRACE SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 652
-- On opt_semicolon shift to state 653
## Reductions:
-- On RBRACE reduce production opt_semicolon ->

State 652:
## Known stack suffix:
## SEMICOLON
## LR(1) items:
opt_semicolon -> SEMICOLON . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production opt_semicolon -> SEMICOLON

State 653:
## Known stack suffix:
## MODEL type_spec LBRACE full_parameter opt_semicolon
## LR(1) items:
model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon . RBRACE SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On RBRACE shift to state 654
## Reductions:

State 654:
## Known stack suffix:
## MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE
## LR(1) items:
model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE . SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 655
## Reductions:

State 655:
## Known stack suffix:
## MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON
## LR(1) items:
model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON
-- On TYPE reduce production model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON
-- On PREDICATE reduce production model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON
-- On MODULE reduce production model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON
-- On MODEL reduce production model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON
-- On LOGIC reduce production model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON
-- On LEMMA reduce production model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON
-- On INDUCTIVE reduce production model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON
-- On INCLUDE reduce production model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON
-- On GLOBAL reduce production model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON
-- On FUNCTION reduce production model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON
-- On EXT_LET reduce production model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON
-- On EXT_AT reduce production model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON
-- On EOF reduce production model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON
-- On CONTRACT reduce production model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON
-- On AXIOMATIC reduce production model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON
-- On AXIOM reduce production model_annot -> MODEL type_spec LBRACE full_parameter opt_semicolon RBRACE SEMICOLON

State 656:
## Known stack suffix:
## LOOP
## LR(1) items:
loop_allocation -> LOOP . allocation SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
loop_effects -> LOOP . ASSIGNS full_assigns SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
loop_grammar_extension -> LOOP . grammar_extension SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
loop_invariant -> LOOP . INVARIANT full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
loop_pragma -> LOOP . PRAGMA any_identifier full_ne_lexpr_list SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
loop_variant -> LOOP . VARIANT variant SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On WRITES shift to state 1
-- On VOID shift to state 4
-- On VARIANT shift to state 657
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PRAGMA shift to state 663
-- On LONG shift to state 28
-- On LABEL shift to state 31
-- On INVARIANT shift to state 670
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On IF shift to state 38
-- On FREES shift to state 673
-- On FLOAT shift to state 44
-- On ENUM shift to state 48
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On CONST shift to state 57
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On ASSIGNS shift to state 680
-- On ALLOCATES shift to state 690
-- On is_acsl_other shift to state 692
-- On grammar_extension_name shift to state 693
-- On grammar_extension shift to state 695
-- On full_identifier_or_typename shift to state 697
-- On enter_kw_c_mode shift to state 698
-- On c_keyword shift to state 701
-- On allocation shift to state 702
## Reductions:
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 657:
## Known stack suffix:
## LOOP VARIANT
## LR(1) items:
loop_variant -> LOOP VARIANT . variant SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On variant shift to state 658
-- On full_lexpr shift to state 660
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 658:
## Known stack suffix:
## LOOP VARIANT variant
## LR(1) items:
loop_variant -> LOOP VARIANT variant . SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 659
## Reductions:

State 659:
## Known stack suffix:
## LOOP VARIANT variant SEMICOLON
## LR(1) items:
loop_variant -> LOOP VARIANT variant SEMICOLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On TYPE reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On PREDICATE reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On MODULE reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On MODEL reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On LOOP reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On LOGIC reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On LEMMA reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On INDUCTIVE reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On INCLUDE reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On GLOBAL reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On FUNCTION reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On FOR reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On EXT_LET reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On EXT_AT reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On EOF reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On CONTRACT reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On AXIOMATIC reduce production loop_variant -> LOOP VARIANT variant SEMICOLON
-- On AXIOM reduce production loop_variant -> LOOP VARIANT variant SEMICOLON

State 660:
## Known stack suffix:
## full_lexpr
## LR(1) items:
variant -> full_lexpr . FOR any_identifier [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
variant -> full_lexpr . [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On FOR shift to state 661
## Reductions:
-- On SEMICOLON reduce production variant -> full_lexpr
-- On RETURNS reduce production variant -> full_lexpr
-- On REQUIRES reduce production variant -> full_lexpr
-- On IDENTIFIER reduce production variant -> full_lexpr
-- On FREES reduce production variant -> full_lexpr
-- On EXITS reduce production variant -> full_lexpr
-- On EOF reduce production variant -> full_lexpr
-- On ENSURES reduce production variant -> full_lexpr
-- On DISJOINT reduce production variant -> full_lexpr
-- On DECREASES reduce production variant -> full_lexpr
-- On CONTINUES reduce production variant -> full_lexpr
-- On COMPLETE reduce production variant -> full_lexpr
-- On BREAKS reduce production variant -> full_lexpr
-- On BEHAVIOR reduce production variant -> full_lexpr
-- On ASSUMES reduce production variant -> full_lexpr
-- On ASSIGNS reduce production variant -> full_lexpr
-- On ALLOCATES reduce production variant -> full_lexpr

State 661:
## Known stack suffix:
## full_lexpr FOR
## LR(1) items:
variant -> full_lexpr FOR . any_identifier [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On any_identifier shift to state 662
-- On acsl_c_keyword shift to state 87
## Reductions:

State 662:
## Known stack suffix:
## full_lexpr FOR any_identifier
## LR(1) items:
variant -> full_lexpr FOR any_identifier . [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production variant -> full_lexpr FOR any_identifier
-- On RETURNS reduce production variant -> full_lexpr FOR any_identifier
-- On REQUIRES reduce production variant -> full_lexpr FOR any_identifier
-- On IDENTIFIER reduce production variant -> full_lexpr FOR any_identifier
-- On FREES reduce production variant -> full_lexpr FOR any_identifier
-- On EXITS reduce production variant -> full_lexpr FOR any_identifier
-- On EOF reduce production variant -> full_lexpr FOR any_identifier
-- On ENSURES reduce production variant -> full_lexpr FOR any_identifier
-- On DISJOINT reduce production variant -> full_lexpr FOR any_identifier
-- On DECREASES reduce production variant -> full_lexpr FOR any_identifier
-- On CONTINUES reduce production variant -> full_lexpr FOR any_identifier
-- On COMPLETE reduce production variant -> full_lexpr FOR any_identifier
-- On BREAKS reduce production variant -> full_lexpr FOR any_identifier
-- On BEHAVIOR reduce production variant -> full_lexpr FOR any_identifier
-- On ASSUMES reduce production variant -> full_lexpr FOR any_identifier
-- On ASSIGNS reduce production variant -> full_lexpr FOR any_identifier
-- On ALLOCATES reduce production variant -> full_lexpr FOR any_identifier

State 663:
## Known stack suffix:
## LOOP PRAGMA
## LR(1) items:
loop_pragma -> LOOP PRAGMA . any_identifier full_ne_lexpr_list SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On any_identifier shift to state 664
-- On acsl_c_keyword shift to state 87
## Reductions:

State 664:
## Known stack suffix:
## LOOP PRAGMA any_identifier
## LR(1) items:
loop_pragma -> LOOP PRAGMA any_identifier . full_ne_lexpr_list SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On full_ne_lexpr_list shift to state 665
-- On enter_kw_c_mode shift to state 667
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 665:
## Known stack suffix:
## LOOP PRAGMA any_identifier full_ne_lexpr_list
## LR(1) items:
loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list . SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 666
## Reductions:

State 666:
## Known stack suffix:
## LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
## LR(1) items:
loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On TYPE reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On PREDICATE reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On MODULE reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On MODEL reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On LOOP reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On LOGIC reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On LEMMA reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On INDUCTIVE reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On INCLUDE reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On GLOBAL reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On FUNCTION reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On FOR reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On EXT_LET reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On EXT_AT reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On EOF reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On CONTRACT reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On AXIOMATIC reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON
-- On AXIOM reduce production loop_pragma -> LOOP PRAGMA any_identifier full_ne_lexpr_list SEMICOLON

State 667:
## Known stack suffix:
## enter_kw_c_mode
## LR(1) items:
full_ne_lexpr_list -> enter_kw_c_mode . ne_lexpr_list exit_kw_c_mode [ SEMICOLON ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_lexpr_list shift to state 668
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 329
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 668:
## Known stack suffix:
## enter_kw_c_mode ne_lexpr_list
## LR(1) items:
full_ne_lexpr_list -> enter_kw_c_mode ne_lexpr_list . exit_kw_c_mode [ SEMICOLON ]
## Transitions:
-- On exit_kw_c_mode shift to state 669
## Reductions:
-- On SEMICOLON reduce production exit_kw_c_mode ->

State 669:
## Known stack suffix:
## enter_kw_c_mode ne_lexpr_list exit_kw_c_mode
## LR(1) items:
full_ne_lexpr_list -> enter_kw_c_mode ne_lexpr_list exit_kw_c_mode . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production full_ne_lexpr_list -> enter_kw_c_mode ne_lexpr_list exit_kw_c_mode

State 670:
## Known stack suffix:
## LOOP INVARIANT
## LR(1) items:
loop_invariant -> LOOP INVARIANT . full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On full_lexpr shift to state 671
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 671:
## Known stack suffix:
## LOOP INVARIANT full_lexpr
## LR(1) items:
loop_invariant -> LOOP INVARIANT full_lexpr . SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 672
## Reductions:

State 672:
## Known stack suffix:
## LOOP INVARIANT full_lexpr SEMICOLON
## LR(1) items:
loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On TYPE reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On PREDICATE reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On MODULE reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On MODEL reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On LOOP reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On LOGIC reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On LEMMA reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On INDUCTIVE reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On INCLUDE reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On GLOBAL reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On FUNCTION reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On FOR reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On EXT_LET reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On EXT_AT reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On EOF reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On CONTRACT reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On AXIOMATIC reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON
-- On AXIOM reduce production loop_invariant -> LOOP INVARIANT full_lexpr SEMICOLON

State 673:
## Known stack suffix:
## FREES
## LR(1) items:
allocation -> FREES . full_zones [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On full_zones shift to state 674
-- On enter_kw_c_mode shift to state 675
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOTHING reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 674:
## Known stack suffix:
## FREES full_zones
## LR(1) items:
allocation -> FREES full_zones . [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production allocation -> FREES full_zones
-- On RETURNS reduce production allocation -> FREES full_zones
-- On REQUIRES reduce production allocation -> FREES full_zones
-- On IDENTIFIER reduce production allocation -> FREES full_zones
-- On FREES reduce production allocation -> FREES full_zones
-- On EXITS reduce production allocation -> FREES full_zones
-- On EOF reduce production allocation -> FREES full_zones
-- On ENSURES reduce production allocation -> FREES full_zones
-- On DISJOINT reduce production allocation -> FREES full_zones
-- On DECREASES reduce production allocation -> FREES full_zones
-- On CONTINUES reduce production allocation -> FREES full_zones
-- On COMPLETE reduce production allocation -> FREES full_zones
-- On BREAKS reduce production allocation -> FREES full_zones
-- On BEHAVIOR reduce production allocation -> FREES full_zones
-- On ASSUMES reduce production allocation -> FREES full_zones
-- On ASSIGNS reduce production allocation -> FREES full_zones
-- On ALLOCATES reduce production allocation -> FREES full_zones

State 675:
## Known stack suffix:
## enter_kw_c_mode
## LR(1) items:
full_zones -> enter_kw_c_mode . zones exit_kw_c_mode [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOTHING shift to state 676
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On zones shift to state 677
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_zones shift to state 679
-- On ne_lexpr_list shift to state 559
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 329
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 676:
## Known stack suffix:
## NOTHING
## LR(1) items:
zones -> NOTHING . [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production zones -> NOTHING
-- On RETURNS reduce production zones -> NOTHING
-- On REQUIRES reduce production zones -> NOTHING
-- On IDENTIFIER reduce production zones -> NOTHING
-- On FREES reduce production zones -> NOTHING
-- On EXITS reduce production zones -> NOTHING
-- On EOF reduce production zones -> NOTHING
-- On ENSURES reduce production zones -> NOTHING
-- On DISJOINT reduce production zones -> NOTHING
-- On DECREASES reduce production zones -> NOTHING
-- On CONTINUES reduce production zones -> NOTHING
-- On COMPLETE reduce production zones -> NOTHING
-- On BREAKS reduce production zones -> NOTHING
-- On BEHAVIOR reduce production zones -> NOTHING
-- On ASSUMES reduce production zones -> NOTHING
-- On ASSIGNS reduce production zones -> NOTHING
-- On ALLOCATES reduce production zones -> NOTHING

State 677:
## Known stack suffix:
## enter_kw_c_mode zones
## LR(1) items:
full_zones -> enter_kw_c_mode zones . exit_kw_c_mode [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On exit_kw_c_mode shift to state 678
## Reductions:
-- On SEMICOLON reduce production exit_kw_c_mode ->
-- On RETURNS reduce production exit_kw_c_mode ->
-- On REQUIRES reduce production exit_kw_c_mode ->
-- On IDENTIFIER reduce production exit_kw_c_mode ->
-- On FREES reduce production exit_kw_c_mode ->
-- On EXITS reduce production exit_kw_c_mode ->
-- On EOF reduce production exit_kw_c_mode ->
-- On ENSURES reduce production exit_kw_c_mode ->
-- On DISJOINT reduce production exit_kw_c_mode ->
-- On DECREASES reduce production exit_kw_c_mode ->
-- On CONTINUES reduce production exit_kw_c_mode ->
-- On COMPLETE reduce production exit_kw_c_mode ->
-- On BREAKS reduce production exit_kw_c_mode ->
-- On BEHAVIOR reduce production exit_kw_c_mode ->
-- On ASSUMES reduce production exit_kw_c_mode ->
-- On ASSIGNS reduce production exit_kw_c_mode ->
-- On ALLOCATES reduce production exit_kw_c_mode ->

State 678:
## Known stack suffix:
## enter_kw_c_mode zones exit_kw_c_mode
## LR(1) items:
full_zones -> enter_kw_c_mode zones exit_kw_c_mode . [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production full_zones -> enter_kw_c_mode zones exit_kw_c_mode
-- On RETURNS reduce production full_zones -> enter_kw_c_mode zones exit_kw_c_mode
-- On REQUIRES reduce production full_zones -> enter_kw_c_mode zones exit_kw_c_mode
-- On IDENTIFIER reduce production full_zones -> enter_kw_c_mode zones exit_kw_c_mode
-- On FREES reduce production full_zones -> enter_kw_c_mode zones exit_kw_c_mode
-- On EXITS reduce production full_zones -> enter_kw_c_mode zones exit_kw_c_mode
-- On EOF reduce production full_zones -> enter_kw_c_mode zones exit_kw_c_mode
-- On ENSURES reduce production full_zones -> enter_kw_c_mode zones exit_kw_c_mode
-- On DISJOINT reduce production full_zones -> enter_kw_c_mode zones exit_kw_c_mode
-- On DECREASES reduce production full_zones -> enter_kw_c_mode zones exit_kw_c_mode
-- On CONTINUES reduce production full_zones -> enter_kw_c_mode zones exit_kw_c_mode
-- On COMPLETE reduce production full_zones -> enter_kw_c_mode zones exit_kw_c_mode
-- On BREAKS reduce production full_zones -> enter_kw_c_mode zones exit_kw_c_mode
-- On BEHAVIOR reduce production full_zones -> enter_kw_c_mode zones exit_kw_c_mode
-- On ASSUMES reduce production full_zones -> enter_kw_c_mode zones exit_kw_c_mode
-- On ASSIGNS reduce production full_zones -> enter_kw_c_mode zones exit_kw_c_mode
-- On ALLOCATES reduce production full_zones -> enter_kw_c_mode zones exit_kw_c_mode

State 679:
## Known stack suffix:
## ne_zones
## LR(1) items:
zones -> ne_zones . [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production zones -> ne_zones
-- On RETURNS reduce production zones -> ne_zones
-- On REQUIRES reduce production zones -> ne_zones
-- On IDENTIFIER reduce production zones -> ne_zones
-- On FREES reduce production zones -> ne_zones
-- On EXITS reduce production zones -> ne_zones
-- On EOF reduce production zones -> ne_zones
-- On ENSURES reduce production zones -> ne_zones
-- On DISJOINT reduce production zones -> ne_zones
-- On DECREASES reduce production zones -> ne_zones
-- On CONTINUES reduce production zones -> ne_zones
-- On COMPLETE reduce production zones -> ne_zones
-- On BREAKS reduce production zones -> ne_zones
-- On BEHAVIOR reduce production zones -> ne_zones
-- On ASSUMES reduce production zones -> ne_zones
-- On ASSIGNS reduce production zones -> ne_zones
-- On ALLOCATES reduce production zones -> ne_zones

State 680:
## Known stack suffix:
## LOOP ASSIGNS
## LR(1) items:
loop_effects -> LOOP ASSIGNS . full_assigns SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On full_assigns shift to state 681
-- On enter_kw_c_mode shift to state 683
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOTHING reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 681:
## Known stack suffix:
## LOOP ASSIGNS full_assigns
## LR(1) items:
loop_effects -> LOOP ASSIGNS full_assigns . SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 682
## Reductions:

State 682:
## Known stack suffix:
## LOOP ASSIGNS full_assigns SEMICOLON
## LR(1) items:
loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On TYPE reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On PREDICATE reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On MODULE reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On MODEL reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On LOOP reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On LOGIC reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On LEMMA reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On INDUCTIVE reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On INCLUDE reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On GLOBAL reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On FUNCTION reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On FOR reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On EXT_LET reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On EXT_AT reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On EOF reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On CONTRACT reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On AXIOMATIC reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON
-- On AXIOM reduce production loop_effects -> LOOP ASSIGNS full_assigns SEMICOLON

State 683:
## Known stack suffix:
## enter_kw_c_mode
## LR(1) items:
full_assigns -> enter_kw_c_mode . assigns exit_kw_c_mode [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOTHING shift to state 676
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On zones shift to state 684
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_zones shift to state 685
-- On ne_lexpr_list shift to state 559
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 329
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On assigns shift to state 688
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 684:
## Known stack suffix:
## zones
## LR(1) items:
assigns -> zones . [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production assigns -> zones
-- On RETURNS reduce production assigns -> zones
-- On REQUIRES reduce production assigns -> zones
-- On IDENTIFIER reduce production assigns -> zones
-- On FREES reduce production assigns -> zones
-- On EXITS reduce production assigns -> zones
-- On EOF reduce production assigns -> zones
-- On ENSURES reduce production assigns -> zones
-- On DISJOINT reduce production assigns -> zones
-- On DECREASES reduce production assigns -> zones
-- On CONTINUES reduce production assigns -> zones
-- On COMPLETE reduce production assigns -> zones
-- On BREAKS reduce production assigns -> zones
-- On BEHAVIOR reduce production assigns -> zones
-- On ASSUMES reduce production assigns -> zones
-- On ASSIGNS reduce production assigns -> zones
-- On ALLOCATES reduce production assigns -> zones

State 685:
## Known stack suffix:
## ne_zones
## LR(1) items:
assigns -> ne_zones . FROM zones [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
zones -> ne_zones . [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On FROM shift to state 686
## Reductions:
-- On SEMICOLON reduce production zones -> ne_zones
-- On RETURNS reduce production zones -> ne_zones
-- On REQUIRES reduce production zones -> ne_zones
-- On IDENTIFIER reduce production zones -> ne_zones
-- On FREES reduce production zones -> ne_zones
-- On EXITS reduce production zones -> ne_zones
-- On EOF reduce production zones -> ne_zones
-- On ENSURES reduce production zones -> ne_zones
-- On DISJOINT reduce production zones -> ne_zones
-- On DECREASES reduce production zones -> ne_zones
-- On CONTINUES reduce production zones -> ne_zones
-- On COMPLETE reduce production zones -> ne_zones
-- On BREAKS reduce production zones -> ne_zones
-- On BEHAVIOR reduce production zones -> ne_zones
-- On ASSUMES reduce production zones -> ne_zones
-- On ASSIGNS reduce production zones -> ne_zones
-- On ALLOCATES reduce production zones -> ne_zones

State 686:
## Known stack suffix:
## ne_zones FROM
## LR(1) items:
assigns -> ne_zones FROM . zones [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOTHING shift to state 676
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On zones shift to state 687
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_zones shift to state 679
-- On ne_lexpr_list shift to state 559
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 329
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 687:
## Known stack suffix:
## ne_zones FROM zones
## LR(1) items:
assigns -> ne_zones FROM zones . [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production assigns -> ne_zones FROM zones
-- On RETURNS reduce production assigns -> ne_zones FROM zones
-- On REQUIRES reduce production assigns -> ne_zones FROM zones
-- On IDENTIFIER reduce production assigns -> ne_zones FROM zones
-- On FREES reduce production assigns -> ne_zones FROM zones
-- On EXITS reduce production assigns -> ne_zones FROM zones
-- On EOF reduce production assigns -> ne_zones FROM zones
-- On ENSURES reduce production assigns -> ne_zones FROM zones
-- On DISJOINT reduce production assigns -> ne_zones FROM zones
-- On DECREASES reduce production assigns -> ne_zones FROM zones
-- On CONTINUES reduce production assigns -> ne_zones FROM zones
-- On COMPLETE reduce production assigns -> ne_zones FROM zones
-- On BREAKS reduce production assigns -> ne_zones FROM zones
-- On BEHAVIOR reduce production assigns -> ne_zones FROM zones
-- On ASSUMES reduce production assigns -> ne_zones FROM zones
-- On ASSIGNS reduce production assigns -> ne_zones FROM zones
-- On ALLOCATES reduce production assigns -> ne_zones FROM zones

State 688:
## Known stack suffix:
## enter_kw_c_mode assigns
## LR(1) items:
full_assigns -> enter_kw_c_mode assigns . exit_kw_c_mode [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On exit_kw_c_mode shift to state 689
## Reductions:
-- On SEMICOLON reduce production exit_kw_c_mode ->
-- On RETURNS reduce production exit_kw_c_mode ->
-- On REQUIRES reduce production exit_kw_c_mode ->
-- On IDENTIFIER reduce production exit_kw_c_mode ->
-- On FREES reduce production exit_kw_c_mode ->
-- On EXITS reduce production exit_kw_c_mode ->
-- On EOF reduce production exit_kw_c_mode ->
-- On ENSURES reduce production exit_kw_c_mode ->
-- On DISJOINT reduce production exit_kw_c_mode ->
-- On DECREASES reduce production exit_kw_c_mode ->
-- On CONTINUES reduce production exit_kw_c_mode ->
-- On COMPLETE reduce production exit_kw_c_mode ->
-- On BREAKS reduce production exit_kw_c_mode ->
-- On BEHAVIOR reduce production exit_kw_c_mode ->
-- On ASSUMES reduce production exit_kw_c_mode ->
-- On ASSIGNS reduce production exit_kw_c_mode ->
-- On ALLOCATES reduce production exit_kw_c_mode ->

State 689:
## Known stack suffix:
## enter_kw_c_mode assigns exit_kw_c_mode
## LR(1) items:
full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode . [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode
-- On RETURNS reduce production full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode
-- On REQUIRES reduce production full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode
-- On IDENTIFIER reduce production full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode
-- On FREES reduce production full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode
-- On EXITS reduce production full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode
-- On EOF reduce production full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode
-- On ENSURES reduce production full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode
-- On DISJOINT reduce production full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode
-- On DECREASES reduce production full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode
-- On CONTINUES reduce production full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode
-- On COMPLETE reduce production full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode
-- On BREAKS reduce production full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode
-- On BEHAVIOR reduce production full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode
-- On ASSUMES reduce production full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode
-- On ASSIGNS reduce production full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode
-- On ALLOCATES reduce production full_assigns -> enter_kw_c_mode assigns exit_kw_c_mode

State 690:
## Known stack suffix:
## ALLOCATES
## LR(1) items:
allocation -> ALLOCATES . full_zones [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On full_zones shift to state 691
-- On enter_kw_c_mode shift to state 675
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOTHING reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 691:
## Known stack suffix:
## ALLOCATES full_zones
## LR(1) items:
allocation -> ALLOCATES full_zones . [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production allocation -> ALLOCATES full_zones
-- On RETURNS reduce production allocation -> ALLOCATES full_zones
-- On REQUIRES reduce production allocation -> ALLOCATES full_zones
-- On IDENTIFIER reduce production allocation -> ALLOCATES full_zones
-- On FREES reduce production allocation -> ALLOCATES full_zones
-- On EXITS reduce production allocation -> ALLOCATES full_zones
-- On EOF reduce production allocation -> ALLOCATES full_zones
-- On ENSURES reduce production allocation -> ALLOCATES full_zones
-- On DISJOINT reduce production allocation -> ALLOCATES full_zones
-- On DECREASES reduce production allocation -> ALLOCATES full_zones
-- On CONTINUES reduce production allocation -> ALLOCATES full_zones
-- On COMPLETE reduce production allocation -> ALLOCATES full_zones
-- On BREAKS reduce production allocation -> ALLOCATES full_zones
-- On BEHAVIOR reduce production allocation -> ALLOCATES full_zones
-- On ASSUMES reduce production allocation -> ALLOCATES full_zones
-- On ASSIGNS reduce production allocation -> ALLOCATES full_zones
-- On ALLOCATES reduce production allocation -> ALLOCATES full_zones

State 692:
## Known stack suffix:
## is_acsl_other
## LR(1) items:
grammar_extension_name -> is_acsl_other . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production grammar_extension_name -> is_acsl_other
-- On WITH reduce production grammar_extension_name -> is_acsl_other
-- On VOLATILE reduce production grammar_extension_name -> is_acsl_other
-- On VOID reduce production grammar_extension_name -> is_acsl_other
-- On VARIANT reduce production grammar_extension_name -> is_acsl_other
-- On VALID_READ reduce production grammar_extension_name -> is_acsl_other
-- On VALID_RANGE reduce production grammar_extension_name -> is_acsl_other
-- On VALID_INDEX reduce production grammar_extension_name -> is_acsl_other
-- On VALID reduce production grammar_extension_name -> is_acsl_other
-- On UNSIGNED reduce production grammar_extension_name -> is_acsl_other
-- On UNION reduce production grammar_extension_name -> is_acsl_other
-- On UNALLOCATED reduce production grammar_extension_name -> is_acsl_other
-- On TYPEOF reduce production grammar_extension_name -> is_acsl_other
-- On TYPENAME reduce production grammar_extension_name -> is_acsl_other
-- On TYPE reduce production grammar_extension_name -> is_acsl_other
-- On TRUE reduce production grammar_extension_name -> is_acsl_other
-- On TILDE reduce production grammar_extension_name -> is_acsl_other
-- On TERMINATES reduce production grammar_extension_name -> is_acsl_other
-- On STRUCT reduce production grammar_extension_name -> is_acsl_other
-- On STRING_LITERAL reduce production grammar_extension_name -> is_acsl_other
-- On STATIC reduce production grammar_extension_name -> is_acsl_other
-- On STAR reduce production grammar_extension_name -> is_acsl_other
-- On SLICE reduce production grammar_extension_name -> is_acsl_other
-- On SLASH reduce production grammar_extension_name -> is_acsl_other
-- On SIZEOF reduce production grammar_extension_name -> is_acsl_other
-- On SIGNED reduce production grammar_extension_name -> is_acsl_other
-- On SHORT reduce production grammar_extension_name -> is_acsl_other
-- On SEPARATED reduce production grammar_extension_name -> is_acsl_other
-- On SEMICOLON reduce production grammar_extension_name -> is_acsl_other
-- On RSQUARE reduce production grammar_extension_name -> is_acsl_other
-- On RPAR reduce production grammar_extension_name -> is_acsl_other
-- On RETURNS reduce production grammar_extension_name -> is_acsl_other
-- On RESULT reduce production grammar_extension_name -> is_acsl_other
-- On REQUIRES reduce production grammar_extension_name -> is_acsl_other
-- On REGISTER reduce production grammar_extension_name -> is_acsl_other
-- On REAL reduce production grammar_extension_name -> is_acsl_other
-- On READS reduce production grammar_extension_name -> is_acsl_other
-- On RBRACE reduce production grammar_extension_name -> is_acsl_other
-- On QUESTION reduce production grammar_extension_name -> is_acsl_other
-- On PREDICATE reduce production grammar_extension_name -> is_acsl_other
-- On PRAGMA reduce production grammar_extension_name -> is_acsl_other
-- On PLUS reduce production grammar_extension_name -> is_acsl_other
-- On PIPE reduce production grammar_extension_name -> is_acsl_other
-- On PERCENT reduce production grammar_extension_name -> is_acsl_other
-- On OR reduce production grammar_extension_name -> is_acsl_other
-- On OLD reduce production grammar_extension_name -> is_acsl_other
-- On OFFSET reduce production grammar_extension_name -> is_acsl_other
-- On NULL reduce production grammar_extension_name -> is_acsl_other
-- On NOTHING reduce production grammar_extension_name -> is_acsl_other
-- On NOT reduce production grammar_extension_name -> is_acsl_other
-- On NE reduce production grammar_extension_name -> is_acsl_other
-- On MODULE reduce production grammar_extension_name -> is_acsl_other
-- On MODEL reduce production grammar_extension_name -> is_acsl_other
-- On MINUS reduce production grammar_extension_name -> is_acsl_other
-- On LTLT reduce production grammar_extension_name -> is_acsl_other
-- On LTCOLON reduce production grammar_extension_name -> is_acsl_other
-- On LT reduce production grammar_extension_name -> is_acsl_other
-- On LSQUARE reduce production grammar_extension_name -> is_acsl_other
-- On LPAR reduce production grammar_extension_name -> is_acsl_other
-- On LOOP reduce production grammar_extension_name -> is_acsl_other
-- On LONG reduce production grammar_extension_name -> is_acsl_other
-- On LOGIC reduce production grammar_extension_name -> is_acsl_other
-- On LET reduce production grammar_extension_name -> is_acsl_other
-- On LEMMA reduce production grammar_extension_name -> is_acsl_other
-- On LE reduce production grammar_extension_name -> is_acsl_other
-- On LBRACE reduce production grammar_extension_name -> is_acsl_other
-- On LAMBDA reduce production grammar_extension_name -> is_acsl_other
-- On LABEL reduce production grammar_extension_name -> is_acsl_other
-- On INVARIANT reduce production grammar_extension_name -> is_acsl_other
-- On INTER reduce production grammar_extension_name -> is_acsl_other
-- On INTEGER reduce production grammar_extension_name -> is_acsl_other
-- On INT reduce production grammar_extension_name -> is_acsl_other
-- On INITIALIZED reduce production grammar_extension_name -> is_acsl_other
-- On INDUCTIVE reduce production grammar_extension_name -> is_acsl_other
-- On INCLUDE reduce production grammar_extension_name -> is_acsl_other
-- On IMPLIES reduce production grammar_extension_name -> is_acsl_other
-- On IMPACT reduce production grammar_extension_name -> is_acsl_other
-- On IFF reduce production grammar_extension_name -> is_acsl_other
-- On IF reduce production grammar_extension_name -> is_acsl_other
-- On IDENTIFIER reduce production grammar_extension_name -> is_acsl_other
-- On HATHAT reduce production grammar_extension_name -> is_acsl_other
-- On HAT reduce production grammar_extension_name -> is_acsl_other
-- On GTGT reduce production grammar_extension_name -> is_acsl_other
-- On GT reduce production grammar_extension_name -> is_acsl_other
-- On GLOBAL reduce production grammar_extension_name -> is_acsl_other
-- On GHOST reduce production grammar_extension_name -> is_acsl_other
-- On GE reduce production grammar_extension_name -> is_acsl_other
-- On FUNCTION reduce production grammar_extension_name -> is_acsl_other
-- On FROM reduce production grammar_extension_name -> is_acsl_other
-- On FRESH reduce production grammar_extension_name -> is_acsl_other
-- On FREES reduce production grammar_extension_name -> is_acsl_other
-- On FREEABLE reduce production grammar_extension_name -> is_acsl_other
-- On FORALL reduce production grammar_extension_name -> is_acsl_other
-- On FOR reduce production grammar_extension_name -> is_acsl_other
-- On FLOAT reduce production grammar_extension_name -> is_acsl_other
-- On FALSE reduce production grammar_extension_name -> is_acsl_other
-- On EXT_LET reduce production grammar_extension_name -> is_acsl_other
-- On EXT_AT reduce production grammar_extension_name -> is_acsl_other
-- On EXITS reduce production grammar_extension_name -> is_acsl_other
-- On EXISTS reduce production grammar_extension_name -> is_acsl_other
-- On EQUAL reduce production grammar_extension_name -> is_acsl_other
-- On EQ reduce production grammar_extension_name -> is_acsl_other
-- On ENUM reduce production grammar_extension_name -> is_acsl_other
-- On ENSURES reduce production grammar_extension_name -> is_acsl_other
-- On EMPTY reduce production grammar_extension_name -> is_acsl_other
-- On ELSE reduce production grammar_extension_name -> is_acsl_other
-- On DYNAMIC reduce production grammar_extension_name -> is_acsl_other
-- On DOUBLE reduce production grammar_extension_name -> is_acsl_other
-- On DOTDOTDOT reduce production grammar_extension_name -> is_acsl_other
-- On DOTDOT reduce production grammar_extension_name -> is_acsl_other
-- On DOT reduce production grammar_extension_name -> is_acsl_other
-- On DOLLAR reduce production grammar_extension_name -> is_acsl_other
-- On DISJOINT reduce production grammar_extension_name -> is_acsl_other
-- On DECREASES reduce production grammar_extension_name -> is_acsl_other
-- On DANGLING reduce production grammar_extension_name -> is_acsl_other
-- On CUSTOM reduce production grammar_extension_name -> is_acsl_other
-- On CONTRACT reduce production grammar_extension_name -> is_acsl_other
-- On CONTINUES reduce production grammar_extension_name -> is_acsl_other
-- On CONSTANT10 reduce production grammar_extension_name -> is_acsl_other
-- On CONSTANT reduce production grammar_extension_name -> is_acsl_other
-- On CONST reduce production grammar_extension_name -> is_acsl_other
-- On COMPLETE reduce production grammar_extension_name -> is_acsl_other
-- On COMMA reduce production grammar_extension_name -> is_acsl_other
-- On COLONGT reduce production grammar_extension_name -> is_acsl_other
-- On COLONCOLON reduce production grammar_extension_name -> is_acsl_other
-- On COLON2 reduce production grammar_extension_name -> is_acsl_other
-- On COLON reduce production grammar_extension_name -> is_acsl_other
-- On CHAR reduce production grammar_extension_name -> is_acsl_other
-- On CASE reduce production grammar_extension_name -> is_acsl_other
-- On BSUNION reduce production grammar_extension_name -> is_acsl_other
-- On BSTYPE reduce production grammar_extension_name -> is_acsl_other
-- On BREAKS reduce production grammar_extension_name -> is_acsl_other
-- On BOOLEAN reduce production grammar_extension_name -> is_acsl_other
-- On BOOL reduce production grammar_extension_name -> is_acsl_other
-- On BLOCK_LENGTH reduce production grammar_extension_name -> is_acsl_other
-- On BIMPLIES reduce production grammar_extension_name -> is_acsl_other
-- On BIFF reduce production grammar_extension_name -> is_acsl_other
-- On BEHAVIORS reduce production grammar_extension_name -> is_acsl_other
-- On BEHAVIOR reduce production grammar_extension_name -> is_acsl_other
-- On BASE_ADDR reduce production grammar_extension_name -> is_acsl_other
-- On AXIOMATIC reduce production grammar_extension_name -> is_acsl_other
-- On AXIOM reduce production grammar_extension_name -> is_acsl_other
-- On AUTOMATIC reduce production grammar_extension_name -> is_acsl_other
-- On AT reduce production grammar_extension_name -> is_acsl_other
-- On ASSUMES reduce production grammar_extension_name -> is_acsl_other
-- On ASSIGNS reduce production grammar_extension_name -> is_acsl_other
-- On ASSERT reduce production grammar_extension_name -> is_acsl_other
-- On ARROW reduce production grammar_extension_name -> is_acsl_other
-- On AND reduce production grammar_extension_name -> is_acsl_other
-- On AMP reduce production grammar_extension_name -> is_acsl_other
-- On ALLOCATION reduce production grammar_extension_name -> is_acsl_other
-- On ALLOCATES reduce production grammar_extension_name -> is_acsl_other
-- On ALLOCABLE reduce production grammar_extension_name -> is_acsl_other

State 693:
## Known stack suffix:
## grammar_extension_name
## LR(1) items:
grammar_extension -> grammar_extension_name . full_zones [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On full_zones shift to state 694
-- On enter_kw_c_mode shift to state 675
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOTHING reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 694:
## Known stack suffix:
## grammar_extension_name full_zones
## LR(1) items:
grammar_extension -> grammar_extension_name full_zones . [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production grammar_extension -> grammar_extension_name full_zones
-- On RETURNS reduce production grammar_extension -> grammar_extension_name full_zones
-- On REQUIRES reduce production grammar_extension -> grammar_extension_name full_zones
-- On IDENTIFIER reduce production grammar_extension -> grammar_extension_name full_zones
-- On FREES reduce production grammar_extension -> grammar_extension_name full_zones
-- On EXITS reduce production grammar_extension -> grammar_extension_name full_zones
-- On EOF reduce production grammar_extension -> grammar_extension_name full_zones
-- On ENSURES reduce production grammar_extension -> grammar_extension_name full_zones
-- On DISJOINT reduce production grammar_extension -> grammar_extension_name full_zones
-- On DECREASES reduce production grammar_extension -> grammar_extension_name full_zones
-- On CONTINUES reduce production grammar_extension -> grammar_extension_name full_zones
-- On COMPLETE reduce production grammar_extension -> grammar_extension_name full_zones
-- On BREAKS reduce production grammar_extension -> grammar_extension_name full_zones
-- On BEHAVIOR reduce production grammar_extension -> grammar_extension_name full_zones
-- On ASSUMES reduce production grammar_extension -> grammar_extension_name full_zones
-- On ASSIGNS reduce production grammar_extension -> grammar_extension_name full_zones
-- On ALLOCATES reduce production grammar_extension -> grammar_extension_name full_zones

State 695:
## Known stack suffix:
## LOOP grammar_extension
## LR(1) items:
loop_grammar_extension -> LOOP grammar_extension . SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 696
## Reductions:

State 696:
## Known stack suffix:
## LOOP grammar_extension SEMICOLON
## LR(1) items:
loop_grammar_extension -> LOOP grammar_extension SEMICOLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On TYPE reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On PREDICATE reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On MODULE reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On MODEL reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On LOOP reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On LOGIC reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On LEMMA reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On INDUCTIVE reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On INCLUDE reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On GLOBAL reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On FUNCTION reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On FOR reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On EXT_LET reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On EXT_AT reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On EOF reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On CONTRACT reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On AXIOMATIC reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON
-- On AXIOM reduce production loop_grammar_extension -> LOOP grammar_extension SEMICOLON

State 697:
## Known stack suffix:
## full_identifier_or_typename
## LR(1) items:
grammar_extension_name -> full_identifier_or_typename . [ WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOTHING NOT MODULE MODEL MINUS LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production grammar_extension_name -> full_identifier_or_typename
-- On VOLATILE reduce production grammar_extension_name -> full_identifier_or_typename
-- On VOID reduce production grammar_extension_name -> full_identifier_or_typename
-- On VARIANT reduce production grammar_extension_name -> full_identifier_or_typename
-- On VALID_READ reduce production grammar_extension_name -> full_identifier_or_typename
-- On VALID_RANGE reduce production grammar_extension_name -> full_identifier_or_typename
-- On VALID_INDEX reduce production grammar_extension_name -> full_identifier_or_typename
-- On VALID reduce production grammar_extension_name -> full_identifier_or_typename
-- On UNSIGNED reduce production grammar_extension_name -> full_identifier_or_typename
-- On UNION reduce production grammar_extension_name -> full_identifier_or_typename
-- On UNALLOCATED reduce production grammar_extension_name -> full_identifier_or_typename
-- On TYPEOF reduce production grammar_extension_name -> full_identifier_or_typename
-- On TYPENAME reduce production grammar_extension_name -> full_identifier_or_typename
-- On TYPE reduce production grammar_extension_name -> full_identifier_or_typename
-- On TRUE reduce production grammar_extension_name -> full_identifier_or_typename
-- On TILDE reduce production grammar_extension_name -> full_identifier_or_typename
-- On TERMINATES reduce production grammar_extension_name -> full_identifier_or_typename
-- On STRUCT reduce production grammar_extension_name -> full_identifier_or_typename
-- On STRING_LITERAL reduce production grammar_extension_name -> full_identifier_or_typename
-- On STATIC reduce production grammar_extension_name -> full_identifier_or_typename
-- On STAR reduce production grammar_extension_name -> full_identifier_or_typename
-- On SLICE reduce production grammar_extension_name -> full_identifier_or_typename
-- On SIZEOF reduce production grammar_extension_name -> full_identifier_or_typename
-- On SIGNED reduce production grammar_extension_name -> full_identifier_or_typename
-- On SHORT reduce production grammar_extension_name -> full_identifier_or_typename
-- On SEPARATED reduce production grammar_extension_name -> full_identifier_or_typename
-- On RETURNS reduce production grammar_extension_name -> full_identifier_or_typename
-- On RESULT reduce production grammar_extension_name -> full_identifier_or_typename
-- On REQUIRES reduce production grammar_extension_name -> full_identifier_or_typename
-- On REGISTER reduce production grammar_extension_name -> full_identifier_or_typename
-- On REAL reduce production grammar_extension_name -> full_identifier_or_typename
-- On READS reduce production grammar_extension_name -> full_identifier_or_typename
-- On PREDICATE reduce production grammar_extension_name -> full_identifier_or_typename
-- On PRAGMA reduce production grammar_extension_name -> full_identifier_or_typename
-- On PLUS reduce production grammar_extension_name -> full_identifier_or_typename
-- On OLD reduce production grammar_extension_name -> full_identifier_or_typename
-- On OFFSET reduce production grammar_extension_name -> full_identifier_or_typename
-- On NULL reduce production grammar_extension_name -> full_identifier_or_typename
-- On NOTHING reduce production grammar_extension_name -> full_identifier_or_typename
-- On NOT reduce production grammar_extension_name -> full_identifier_or_typename
-- On MODULE reduce production grammar_extension_name -> full_identifier_or_typename
-- On MODEL reduce production grammar_extension_name -> full_identifier_or_typename
-- On MINUS reduce production grammar_extension_name -> full_identifier_or_typename
-- On LPAR reduce production grammar_extension_name -> full_identifier_or_typename
-- On LOOP reduce production grammar_extension_name -> full_identifier_or_typename
-- On LONG reduce production grammar_extension_name -> full_identifier_or_typename
-- On LOGIC reduce production grammar_extension_name -> full_identifier_or_typename
-- On LET reduce production grammar_extension_name -> full_identifier_or_typename
-- On LEMMA reduce production grammar_extension_name -> full_identifier_or_typename
-- On LBRACE reduce production grammar_extension_name -> full_identifier_or_typename
-- On LAMBDA reduce production grammar_extension_name -> full_identifier_or_typename
-- On LABEL reduce production grammar_extension_name -> full_identifier_or_typename
-- On INVARIANT reduce production grammar_extension_name -> full_identifier_or_typename
-- On INTER reduce production grammar_extension_name -> full_identifier_or_typename
-- On INTEGER reduce production grammar_extension_name -> full_identifier_or_typename
-- On INT reduce production grammar_extension_name -> full_identifier_or_typename
-- On INITIALIZED reduce production grammar_extension_name -> full_identifier_or_typename
-- On INDUCTIVE reduce production grammar_extension_name -> full_identifier_or_typename
-- On INCLUDE reduce production grammar_extension_name -> full_identifier_or_typename
-- On IMPACT reduce production grammar_extension_name -> full_identifier_or_typename
-- On IF reduce production grammar_extension_name -> full_identifier_or_typename
-- On IDENTIFIER reduce production grammar_extension_name -> full_identifier_or_typename
-- On GLOBAL reduce production grammar_extension_name -> full_identifier_or_typename
-- On FUNCTION reduce production grammar_extension_name -> full_identifier_or_typename
-- On FRESH reduce production grammar_extension_name -> full_identifier_or_typename
-- On FREES reduce production grammar_extension_name -> full_identifier_or_typename
-- On FREEABLE reduce production grammar_extension_name -> full_identifier_or_typename
-- On FORALL reduce production grammar_extension_name -> full_identifier_or_typename
-- On FOR reduce production grammar_extension_name -> full_identifier_or_typename
-- On FLOAT reduce production grammar_extension_name -> full_identifier_or_typename
-- On FALSE reduce production grammar_extension_name -> full_identifier_or_typename
-- On EXT_LET reduce production grammar_extension_name -> full_identifier_or_typename
-- On EXT_AT reduce production grammar_extension_name -> full_identifier_or_typename
-- On EXITS reduce production grammar_extension_name -> full_identifier_or_typename
-- On EXISTS reduce production grammar_extension_name -> full_identifier_or_typename
-- On ENUM reduce production grammar_extension_name -> full_identifier_or_typename
-- On ENSURES reduce production grammar_extension_name -> full_identifier_or_typename
-- On EMPTY reduce production grammar_extension_name -> full_identifier_or_typename
-- On ELSE reduce production grammar_extension_name -> full_identifier_or_typename
-- On DYNAMIC reduce production grammar_extension_name -> full_identifier_or_typename
-- On DOUBLE reduce production grammar_extension_name -> full_identifier_or_typename
-- On DISJOINT reduce production grammar_extension_name -> full_identifier_or_typename
-- On DECREASES reduce production grammar_extension_name -> full_identifier_or_typename
-- On DANGLING reduce production grammar_extension_name -> full_identifier_or_typename
-- On CUSTOM reduce production grammar_extension_name -> full_identifier_or_typename
-- On CONTRACT reduce production grammar_extension_name -> full_identifier_or_typename
-- On CONTINUES reduce production grammar_extension_name -> full_identifier_or_typename
-- On CONSTANT10 reduce production grammar_extension_name -> full_identifier_or_typename
-- On CONSTANT reduce production grammar_extension_name -> full_identifier_or_typename
-- On CONST reduce production grammar_extension_name -> full_identifier_or_typename
-- On COMPLETE reduce production grammar_extension_name -> full_identifier_or_typename
-- On CHAR reduce production grammar_extension_name -> full_identifier_or_typename
-- On CASE reduce production grammar_extension_name -> full_identifier_or_typename
-- On BSUNION reduce production grammar_extension_name -> full_identifier_or_typename
-- On BSTYPE reduce production grammar_extension_name -> full_identifier_or_typename
-- On BREAKS reduce production grammar_extension_name -> full_identifier_or_typename
-- On BOOLEAN reduce production grammar_extension_name -> full_identifier_or_typename
-- On BOOL reduce production grammar_extension_name -> full_identifier_or_typename
-- On BLOCK_LENGTH reduce production grammar_extension_name -> full_identifier_or_typename
-- On BEHAVIORS reduce production grammar_extension_name -> full_identifier_or_typename
-- On BEHAVIOR reduce production grammar_extension_name -> full_identifier_or_typename
-- On BASE_ADDR reduce production grammar_extension_name -> full_identifier_or_typename
-- On AXIOMATIC reduce production grammar_extension_name -> full_identifier_or_typename
-- On AXIOM reduce production grammar_extension_name -> full_identifier_or_typename
-- On AUTOMATIC reduce production grammar_extension_name -> full_identifier_or_typename
-- On AT reduce production grammar_extension_name -> full_identifier_or_typename
-- On ASSUMES reduce production grammar_extension_name -> full_identifier_or_typename
-- On ASSIGNS reduce production grammar_extension_name -> full_identifier_or_typename
-- On ASSERT reduce production grammar_extension_name -> full_identifier_or_typename
-- On AMP reduce production grammar_extension_name -> full_identifier_or_typename
-- On ALLOCATION reduce production grammar_extension_name -> full_identifier_or_typename
-- On ALLOCATES reduce production grammar_extension_name -> full_identifier_or_typename
-- On ALLOCABLE reduce production grammar_extension_name -> full_identifier_or_typename

State 698:
## Known stack suffix:
## enter_kw_c_mode
## LR(1) items:
full_identifier_or_typename -> enter_kw_c_mode . identifier_or_typename exit_kw_c_mode [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
-- On TYPENAME shift to state 10
-- On IDENTIFIER shift to state 39
-- On identifier_or_typename shift to state 699
## Reductions:

State 699:
## Known stack suffix:
## enter_kw_c_mode identifier_or_typename
## LR(1) items:
full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename . exit_kw_c_mode [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
-- On exit_kw_c_mode shift to state 700
## Reductions:
-- On WRITES reduce production exit_kw_c_mode ->
-- On WITH reduce production exit_kw_c_mode ->
-- On VOLATILE reduce production exit_kw_c_mode ->
-- On VOID reduce production exit_kw_c_mode ->
-- On VARIANT reduce production exit_kw_c_mode ->
-- On VALID_READ reduce production exit_kw_c_mode ->
-- On VALID_RANGE reduce production exit_kw_c_mode ->
-- On VALID_INDEX reduce production exit_kw_c_mode ->
-- On VALID reduce production exit_kw_c_mode ->
-- On UNSIGNED reduce production exit_kw_c_mode ->
-- On UNION reduce production exit_kw_c_mode ->
-- On UNALLOCATED reduce production exit_kw_c_mode ->
-- On TYPEOF reduce production exit_kw_c_mode ->
-- On TYPENAME reduce production exit_kw_c_mode ->
-- On TYPE reduce production exit_kw_c_mode ->
-- On TRUE reduce production exit_kw_c_mode ->
-- On TILDE reduce production exit_kw_c_mode ->
-- On TERMINATES reduce production exit_kw_c_mode ->
-- On STRUCT reduce production exit_kw_c_mode ->
-- On STRING_LITERAL reduce production exit_kw_c_mode ->
-- On STATIC reduce production exit_kw_c_mode ->
-- On STAR reduce production exit_kw_c_mode ->
-- On SLICE reduce production exit_kw_c_mode ->
-- On SLASH reduce production exit_kw_c_mode ->
-- On SIZEOF reduce production exit_kw_c_mode ->
-- On SIGNED reduce production exit_kw_c_mode ->
-- On SHORT reduce production exit_kw_c_mode ->
-- On SEPARATED reduce production exit_kw_c_mode ->
-- On SEMICOLON reduce production exit_kw_c_mode ->
-- On RSQUARE reduce production exit_kw_c_mode ->
-- On RPAR reduce production exit_kw_c_mode ->
-- On RETURNS reduce production exit_kw_c_mode ->
-- On RESULT reduce production exit_kw_c_mode ->
-- On REQUIRES reduce production exit_kw_c_mode ->
-- On REGISTER reduce production exit_kw_c_mode ->
-- On REAL reduce production exit_kw_c_mode ->
-- On READS reduce production exit_kw_c_mode ->
-- On RBRACE reduce production exit_kw_c_mode ->
-- On QUESTION reduce production exit_kw_c_mode ->
-- On PREDICATE reduce production exit_kw_c_mode ->
-- On PRAGMA reduce production exit_kw_c_mode ->
-- On PLUS reduce production exit_kw_c_mode ->
-- On PIPE reduce production exit_kw_c_mode ->
-- On PERCENT reduce production exit_kw_c_mode ->
-- On OR reduce production exit_kw_c_mode ->
-- On OLD reduce production exit_kw_c_mode ->
-- On OFFSET reduce production exit_kw_c_mode ->
-- On NULL reduce production exit_kw_c_mode ->
-- On NOTHING reduce production exit_kw_c_mode ->
-- On NOT reduce production exit_kw_c_mode ->
-- On NE reduce production exit_kw_c_mode ->
-- On MODULE reduce production exit_kw_c_mode ->
-- On MODEL reduce production exit_kw_c_mode ->
-- On MINUS reduce production exit_kw_c_mode ->
-- On LTLT reduce production exit_kw_c_mode ->
-- On LTCOLON reduce production exit_kw_c_mode ->
-- On LT reduce production exit_kw_c_mode ->
-- On LSQUARE reduce production exit_kw_c_mode ->
-- On LPAR reduce production exit_kw_c_mode ->
-- On LOOP reduce production exit_kw_c_mode ->
-- On LONG reduce production exit_kw_c_mode ->
-- On LOGIC reduce production exit_kw_c_mode ->
-- On LET reduce production exit_kw_c_mode ->
-- On LEMMA reduce production exit_kw_c_mode ->
-- On LE reduce production exit_kw_c_mode ->
-- On LBRACE reduce production exit_kw_c_mode ->
-- On LAMBDA reduce production exit_kw_c_mode ->
-- On LABEL reduce production exit_kw_c_mode ->
-- On INVARIANT reduce production exit_kw_c_mode ->
-- On INTER reduce production exit_kw_c_mode ->
-- On INTEGER reduce production exit_kw_c_mode ->
-- On INT reduce production exit_kw_c_mode ->
-- On INITIALIZED reduce production exit_kw_c_mode ->
-- On INDUCTIVE reduce production exit_kw_c_mode ->
-- On INCLUDE reduce production exit_kw_c_mode ->
-- On IMPLIES reduce production exit_kw_c_mode ->
-- On IMPACT reduce production exit_kw_c_mode ->
-- On IFF reduce production exit_kw_c_mode ->
-- On IF reduce production exit_kw_c_mode ->
-- On IDENTIFIER reduce production exit_kw_c_mode ->
-- On HATHAT reduce production exit_kw_c_mode ->
-- On HAT reduce production exit_kw_c_mode ->
-- On GTGT reduce production exit_kw_c_mode ->
-- On GT reduce production exit_kw_c_mode ->
-- On GLOBAL reduce production exit_kw_c_mode ->
-- On GHOST reduce production exit_kw_c_mode ->
-- On GE reduce production exit_kw_c_mode ->
-- On FUNCTION reduce production exit_kw_c_mode ->
-- On FROM reduce production exit_kw_c_mode ->
-- On FRESH reduce production exit_kw_c_mode ->
-- On FREES reduce production exit_kw_c_mode ->
-- On FREEABLE reduce production exit_kw_c_mode ->
-- On FORALL reduce production exit_kw_c_mode ->
-- On FOR reduce production exit_kw_c_mode ->
-- On FLOAT reduce production exit_kw_c_mode ->
-- On FALSE reduce production exit_kw_c_mode ->
-- On EXT_LET reduce production exit_kw_c_mode ->
-- On EXT_AT reduce production exit_kw_c_mode ->
-- On EXITS reduce production exit_kw_c_mode ->
-- On EXISTS reduce production exit_kw_c_mode ->
-- On EQUAL reduce production exit_kw_c_mode ->
-- On EQ reduce production exit_kw_c_mode ->
-- On EOF reduce production exit_kw_c_mode ->
-- On ENUM reduce production exit_kw_c_mode ->
-- On ENSURES reduce production exit_kw_c_mode ->
-- On EMPTY reduce production exit_kw_c_mode ->
-- On ELSE reduce production exit_kw_c_mode ->
-- On DYNAMIC reduce production exit_kw_c_mode ->
-- On DOUBLE reduce production exit_kw_c_mode ->
-- On DOTDOTDOT reduce production exit_kw_c_mode ->
-- On DOTDOT reduce production exit_kw_c_mode ->
-- On DOT reduce production exit_kw_c_mode ->
-- On DOLLAR reduce production exit_kw_c_mode ->
-- On DISJOINT reduce production exit_kw_c_mode ->
-- On DECREASES reduce production exit_kw_c_mode ->
-- On DANGLING reduce production exit_kw_c_mode ->
-- On CUSTOM reduce production exit_kw_c_mode ->
-- On CONTRACT reduce production exit_kw_c_mode ->
-- On CONTINUES reduce production exit_kw_c_mode ->
-- On CONSTANT10 reduce production exit_kw_c_mode ->
-- On CONSTANT reduce production exit_kw_c_mode ->
-- On CONST reduce production exit_kw_c_mode ->
-- On COMPLETE reduce production exit_kw_c_mode ->
-- On COMMA reduce production exit_kw_c_mode ->
-- On COLONGT reduce production exit_kw_c_mode ->
-- On COLONCOLON reduce production exit_kw_c_mode ->
-- On COLON2 reduce production exit_kw_c_mode ->
-- On COLON reduce production exit_kw_c_mode ->
-- On CHAR reduce production exit_kw_c_mode ->
-- On CASE reduce production exit_kw_c_mode ->
-- On BSUNION reduce production exit_kw_c_mode ->
-- On BSTYPE reduce production exit_kw_c_mode ->
-- On BREAKS reduce production exit_kw_c_mode ->
-- On BOOLEAN reduce production exit_kw_c_mode ->
-- On BOOL reduce production exit_kw_c_mode ->
-- On BLOCK_LENGTH reduce production exit_kw_c_mode ->
-- On BIMPLIES reduce production exit_kw_c_mode ->
-- On BIFF reduce production exit_kw_c_mode ->
-- On BEHAVIORS reduce production exit_kw_c_mode ->
-- On BEHAVIOR reduce production exit_kw_c_mode ->
-- On BASE_ADDR reduce production exit_kw_c_mode ->
-- On AXIOMATIC reduce production exit_kw_c_mode ->
-- On AXIOM reduce production exit_kw_c_mode ->
-- On AUTOMATIC reduce production exit_kw_c_mode ->
-- On AT reduce production exit_kw_c_mode ->
-- On ASSUMES reduce production exit_kw_c_mode ->
-- On ASSIGNS reduce production exit_kw_c_mode ->
-- On ASSERT reduce production exit_kw_c_mode ->
-- On ARROW reduce production exit_kw_c_mode ->
-- On AND reduce production exit_kw_c_mode ->
-- On AMP reduce production exit_kw_c_mode ->
-- On ALLOCATION reduce production exit_kw_c_mode ->
-- On ALLOCATES reduce production exit_kw_c_mode ->
-- On ALLOCABLE reduce production exit_kw_c_mode ->

State 700:
## Known stack suffix:
## enter_kw_c_mode identifier_or_typename exit_kw_c_mode
## LR(1) items:
full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On WITH reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On VOLATILE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On VOID reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On VARIANT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On VALID_READ reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On VALID_RANGE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On VALID_INDEX reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On VALID reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On UNSIGNED reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On UNION reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On UNALLOCATED reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On TYPEOF reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On TYPENAME reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On TYPE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On TRUE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On TILDE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On TERMINATES reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On STRUCT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On STRING_LITERAL reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On STATIC reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On STAR reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On SLICE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On SLASH reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On SIZEOF reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On SIGNED reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On SHORT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On SEPARATED reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On SEMICOLON reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On RSQUARE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On RPAR reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On RETURNS reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On RESULT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On REQUIRES reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On REGISTER reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On REAL reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On READS reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On RBRACE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On QUESTION reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On PREDICATE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On PRAGMA reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On PLUS reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On PIPE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On PERCENT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On OR reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On OLD reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On OFFSET reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On NULL reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On NOTHING reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On NOT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On NE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On MODULE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On MODEL reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On MINUS reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On LTLT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On LTCOLON reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On LT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On LSQUARE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On LPAR reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On LOOP reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On LONG reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On LOGIC reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On LET reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On LEMMA reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On LE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On LBRACE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On LAMBDA reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On LABEL reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On INVARIANT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On INTER reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On INTEGER reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On INT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On INITIALIZED reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On INDUCTIVE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On INCLUDE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On IMPLIES reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On IMPACT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On IFF reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On IF reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On IDENTIFIER reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On HATHAT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On HAT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On GTGT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On GT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On GLOBAL reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On GHOST reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On GE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On FUNCTION reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On FROM reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On FRESH reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On FREES reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On FREEABLE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On FORALL reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On FOR reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On FLOAT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On FALSE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On EXT_LET reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On EXT_AT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On EXITS reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On EXISTS reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On EQUAL reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On EQ reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On EOF reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On ENUM reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On ENSURES reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On EMPTY reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On ELSE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On DYNAMIC reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On DOUBLE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On DOTDOTDOT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On DOTDOT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On DOT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On DOLLAR reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On DISJOINT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On DECREASES reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On DANGLING reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On CUSTOM reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On CONTRACT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On CONTINUES reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On CONSTANT10 reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On CONSTANT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On CONST reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On COMPLETE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On COMMA reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On COLONGT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On COLONCOLON reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On COLON2 reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On COLON reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On CHAR reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On CASE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On BSUNION reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On BSTYPE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On BREAKS reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On BOOLEAN reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On BOOL reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On BLOCK_LENGTH reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On BIMPLIES reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On BIFF reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On BEHAVIORS reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On BEHAVIOR reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On BASE_ADDR reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On AXIOMATIC reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On AXIOM reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On AUTOMATIC reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On AT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On ASSUMES reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On ASSIGNS reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On ASSERT reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On ARROW reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On AND reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On AMP reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On ALLOCATION reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On ALLOCATES reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode
-- On ALLOCABLE reduce production full_identifier_or_typename -> enter_kw_c_mode identifier_or_typename exit_kw_c_mode

State 701:
## Known stack suffix:
## c_keyword
## LR(1) items:
grammar_extension_name -> c_keyword . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production grammar_extension_name -> c_keyword
-- On WITH reduce production grammar_extension_name -> c_keyword
-- On VOLATILE reduce production grammar_extension_name -> c_keyword
-- On VOID reduce production grammar_extension_name -> c_keyword
-- On VARIANT reduce production grammar_extension_name -> c_keyword
-- On VALID_READ reduce production grammar_extension_name -> c_keyword
-- On VALID_RANGE reduce production grammar_extension_name -> c_keyword
-- On VALID_INDEX reduce production grammar_extension_name -> c_keyword
-- On VALID reduce production grammar_extension_name -> c_keyword
-- On UNSIGNED reduce production grammar_extension_name -> c_keyword
-- On UNION reduce production grammar_extension_name -> c_keyword
-- On UNALLOCATED reduce production grammar_extension_name -> c_keyword
-- On TYPEOF reduce production grammar_extension_name -> c_keyword
-- On TYPENAME reduce production grammar_extension_name -> c_keyword
-- On TYPE reduce production grammar_extension_name -> c_keyword
-- On TRUE reduce production grammar_extension_name -> c_keyword
-- On TILDE reduce production grammar_extension_name -> c_keyword
-- On TERMINATES reduce production grammar_extension_name -> c_keyword
-- On STRUCT reduce production grammar_extension_name -> c_keyword
-- On STRING_LITERAL reduce production grammar_extension_name -> c_keyword
-- On STATIC reduce production grammar_extension_name -> c_keyword
-- On STAR reduce production grammar_extension_name -> c_keyword
-- On SLICE reduce production grammar_extension_name -> c_keyword
-- On SLASH reduce production grammar_extension_name -> c_keyword
-- On SIZEOF reduce production grammar_extension_name -> c_keyword
-- On SIGNED reduce production grammar_extension_name -> c_keyword
-- On SHORT reduce production grammar_extension_name -> c_keyword
-- On SEPARATED reduce production grammar_extension_name -> c_keyword
-- On SEMICOLON reduce production grammar_extension_name -> c_keyword
-- On RSQUARE reduce production grammar_extension_name -> c_keyword
-- On RPAR reduce production grammar_extension_name -> c_keyword
-- On RETURNS reduce production grammar_extension_name -> c_keyword
-- On RESULT reduce production grammar_extension_name -> c_keyword
-- On REQUIRES reduce production grammar_extension_name -> c_keyword
-- On REGISTER reduce production grammar_extension_name -> c_keyword
-- On REAL reduce production grammar_extension_name -> c_keyword
-- On READS reduce production grammar_extension_name -> c_keyword
-- On RBRACE reduce production grammar_extension_name -> c_keyword
-- On QUESTION reduce production grammar_extension_name -> c_keyword
-- On PREDICATE reduce production grammar_extension_name -> c_keyword
-- On PRAGMA reduce production grammar_extension_name -> c_keyword
-- On PLUS reduce production grammar_extension_name -> c_keyword
-- On PIPE reduce production grammar_extension_name -> c_keyword
-- On PERCENT reduce production grammar_extension_name -> c_keyword
-- On OR reduce production grammar_extension_name -> c_keyword
-- On OLD reduce production grammar_extension_name -> c_keyword
-- On OFFSET reduce production grammar_extension_name -> c_keyword
-- On NULL reduce production grammar_extension_name -> c_keyword
-- On NOTHING reduce production grammar_extension_name -> c_keyword
-- On NOT reduce production grammar_extension_name -> c_keyword
-- On NE reduce production grammar_extension_name -> c_keyword
-- On MODULE reduce production grammar_extension_name -> c_keyword
-- On MODEL reduce production grammar_extension_name -> c_keyword
-- On MINUS reduce production grammar_extension_name -> c_keyword
-- On LTLT reduce production grammar_extension_name -> c_keyword
-- On LTCOLON reduce production grammar_extension_name -> c_keyword
-- On LT reduce production grammar_extension_name -> c_keyword
-- On LSQUARE reduce production grammar_extension_name -> c_keyword
-- On LPAR reduce production grammar_extension_name -> c_keyword
-- On LOOP reduce production grammar_extension_name -> c_keyword
-- On LONG reduce production grammar_extension_name -> c_keyword
-- On LOGIC reduce production grammar_extension_name -> c_keyword
-- On LET reduce production grammar_extension_name -> c_keyword
-- On LEMMA reduce production grammar_extension_name -> c_keyword
-- On LE reduce production grammar_extension_name -> c_keyword
-- On LBRACE reduce production grammar_extension_name -> c_keyword
-- On LAMBDA reduce production grammar_extension_name -> c_keyword
-- On LABEL reduce production grammar_extension_name -> c_keyword
-- On INVARIANT reduce production grammar_extension_name -> c_keyword
-- On INTER reduce production grammar_extension_name -> c_keyword
-- On INTEGER reduce production grammar_extension_name -> c_keyword
-- On INT reduce production grammar_extension_name -> c_keyword
-- On INITIALIZED reduce production grammar_extension_name -> c_keyword
-- On INDUCTIVE reduce production grammar_extension_name -> c_keyword
-- On INCLUDE reduce production grammar_extension_name -> c_keyword
-- On IMPLIES reduce production grammar_extension_name -> c_keyword
-- On IMPACT reduce production grammar_extension_name -> c_keyword
-- On IFF reduce production grammar_extension_name -> c_keyword
-- On IF reduce production grammar_extension_name -> c_keyword
-- On IDENTIFIER reduce production grammar_extension_name -> c_keyword
-- On HATHAT reduce production grammar_extension_name -> c_keyword
-- On HAT reduce production grammar_extension_name -> c_keyword
-- On GTGT reduce production grammar_extension_name -> c_keyword
-- On GT reduce production grammar_extension_name -> c_keyword
-- On GLOBAL reduce production grammar_extension_name -> c_keyword
-- On GHOST reduce production grammar_extension_name -> c_keyword
-- On GE reduce production grammar_extension_name -> c_keyword
-- On FUNCTION reduce production grammar_extension_name -> c_keyword
-- On FROM reduce production grammar_extension_name -> c_keyword
-- On FRESH reduce production grammar_extension_name -> c_keyword
-- On FREES reduce production grammar_extension_name -> c_keyword
-- On FREEABLE reduce production grammar_extension_name -> c_keyword
-- On FORALL reduce production grammar_extension_name -> c_keyword
-- On FOR reduce production grammar_extension_name -> c_keyword
-- On FLOAT reduce production grammar_extension_name -> c_keyword
-- On FALSE reduce production grammar_extension_name -> c_keyword
-- On EXT_LET reduce production grammar_extension_name -> c_keyword
-- On EXT_AT reduce production grammar_extension_name -> c_keyword
-- On EXITS reduce production grammar_extension_name -> c_keyword
-- On EXISTS reduce production grammar_extension_name -> c_keyword
-- On EQUAL reduce production grammar_extension_name -> c_keyword
-- On EQ reduce production grammar_extension_name -> c_keyword
-- On ENUM reduce production grammar_extension_name -> c_keyword
-- On ENSURES reduce production grammar_extension_name -> c_keyword
-- On EMPTY reduce production grammar_extension_name -> c_keyword
-- On ELSE reduce production grammar_extension_name -> c_keyword
-- On DYNAMIC reduce production grammar_extension_name -> c_keyword
-- On DOUBLE reduce production grammar_extension_name -> c_keyword
-- On DOTDOTDOT reduce production grammar_extension_name -> c_keyword
-- On DOTDOT reduce production grammar_extension_name -> c_keyword
-- On DOT reduce production grammar_extension_name -> c_keyword
-- On DOLLAR reduce production grammar_extension_name -> c_keyword
-- On DISJOINT reduce production grammar_extension_name -> c_keyword
-- On DECREASES reduce production grammar_extension_name -> c_keyword
-- On DANGLING reduce production grammar_extension_name -> c_keyword
-- On CUSTOM reduce production grammar_extension_name -> c_keyword
-- On CONTRACT reduce production grammar_extension_name -> c_keyword
-- On CONTINUES reduce production grammar_extension_name -> c_keyword
-- On CONSTANT10 reduce production grammar_extension_name -> c_keyword
-- On CONSTANT reduce production grammar_extension_name -> c_keyword
-- On CONST reduce production grammar_extension_name -> c_keyword
-- On COMPLETE reduce production grammar_extension_name -> c_keyword
-- On COMMA reduce production grammar_extension_name -> c_keyword
-- On COLONGT reduce production grammar_extension_name -> c_keyword
-- On COLONCOLON reduce production grammar_extension_name -> c_keyword
-- On COLON2 reduce production grammar_extension_name -> c_keyword
-- On COLON reduce production grammar_extension_name -> c_keyword
-- On CHAR reduce production grammar_extension_name -> c_keyword
-- On CASE reduce production grammar_extension_name -> c_keyword
-- On BSUNION reduce production grammar_extension_name -> c_keyword
-- On BSTYPE reduce production grammar_extension_name -> c_keyword
-- On BREAKS reduce production grammar_extension_name -> c_keyword
-- On BOOLEAN reduce production grammar_extension_name -> c_keyword
-- On BOOL reduce production grammar_extension_name -> c_keyword
-- On BLOCK_LENGTH reduce production grammar_extension_name -> c_keyword
-- On BIMPLIES reduce production grammar_extension_name -> c_keyword
-- On BIFF reduce production grammar_extension_name -> c_keyword
-- On BEHAVIORS reduce production grammar_extension_name -> c_keyword
-- On BEHAVIOR reduce production grammar_extension_name -> c_keyword
-- On BASE_ADDR reduce production grammar_extension_name -> c_keyword
-- On AXIOMATIC reduce production grammar_extension_name -> c_keyword
-- On AXIOM reduce production grammar_extension_name -> c_keyword
-- On AUTOMATIC reduce production grammar_extension_name -> c_keyword
-- On AT reduce production grammar_extension_name -> c_keyword
-- On ASSUMES reduce production grammar_extension_name -> c_keyword
-- On ASSIGNS reduce production grammar_extension_name -> c_keyword
-- On ASSERT reduce production grammar_extension_name -> c_keyword
-- On ARROW reduce production grammar_extension_name -> c_keyword
-- On AND reduce production grammar_extension_name -> c_keyword
-- On AMP reduce production grammar_extension_name -> c_keyword
-- On ALLOCATION reduce production grammar_extension_name -> c_keyword
-- On ALLOCATES reduce production grammar_extension_name -> c_keyword
-- On ALLOCABLE reduce production grammar_extension_name -> c_keyword

State 702:
## Known stack suffix:
## LOOP allocation
## LR(1) items:
loop_allocation -> LOOP allocation . SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 703
## Reductions:

State 703:
## Known stack suffix:
## LOOP allocation SEMICOLON
## LR(1) items:
loop_allocation -> LOOP allocation SEMICOLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOOP LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On TYPE reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On PREDICATE reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On MODULE reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On MODEL reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On LOOP reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On LOGIC reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On LEMMA reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On INDUCTIVE reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On INCLUDE reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On GLOBAL reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On FUNCTION reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On FOR reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On EXT_LET reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On EXT_AT reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On EOF reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On CONTRACT reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On AXIOMATIC reduce production loop_allocation -> LOOP allocation SEMICOLON
-- On AXIOM reduce production loop_allocation -> LOOP allocation SEMICOLON

State 704:
## Known stack suffix:
## LOGIC
## LR(1) items:
deprecated_logic_decl -> LOGIC . full_logic_rt_type poly_id opt_parameters SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
logic_def -> LOGIC . full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On full_logic_rt_type shift to state 705
-- On enter_kw_c_mode shift to state 712
## Reductions:
-- On VOID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->

State 705:
## Known stack suffix:
## LOGIC full_logic_rt_type
## LR(1) items:
deprecated_logic_decl -> LOGIC full_logic_rt_type . poly_id opt_parameters SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
logic_def -> LOGIC full_logic_rt_type . poly_id opt_parameters EQUAL full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On poly_id_type shift to state 624
-- On poly_id shift to state 706
-- On full_identifier shift to state 641
-- On enter_kw_c_mode shift to state 593
## Reductions:
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 706:
## Known stack suffix:
## LOGIC full_logic_rt_type poly_id
## LR(1) items:
deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id . opt_parameters SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
logic_def -> LOGIC full_logic_rt_type poly_id . opt_parameters EQUAL full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On LPAR shift to state 626
-- On parameters shift to state 635
-- On opt_parameters shift to state 707
## Reductions:
-- On SEMICOLON reduce production opt_parameters ->
-- On EQUAL reduce production opt_parameters ->

State 707:
## Known stack suffix:
## LOGIC full_logic_rt_type poly_id opt_parameters
## LR(1) items:
deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters . SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters . EQUAL full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 708
-- On EQUAL shift to state 709
## Reductions:

State 708:
## Known stack suffix:
## LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON
## LR(1) items:
deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON
-- On TYPE reduce production deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON
-- On PREDICATE reduce production deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON
-- On MODULE reduce production deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON
-- On MODEL reduce production deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON
-- On LOGIC reduce production deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON
-- On LEMMA reduce production deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON
-- On INDUCTIVE reduce production deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON
-- On INCLUDE reduce production deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON
-- On GLOBAL reduce production deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON
-- On FUNCTION reduce production deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON
-- On EXT_LET reduce production deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON
-- On EXT_AT reduce production deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON
-- On EOF reduce production deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON
-- On CONTRACT reduce production deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON
-- On AXIOMATIC reduce production deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON
-- On AXIOM reduce production deprecated_logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters SEMICOLON

State 709:
## Known stack suffix:
## LOGIC full_logic_rt_type poly_id opt_parameters EQUAL
## LR(1) items:
logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL . full_lexpr SEMICOLON [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On full_lexpr shift to state 710
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 710:
## Known stack suffix:
## LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr
## LR(1) items:
logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr . SEMICOLON [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 711
## Reductions:

State 711:
## Known stack suffix:
## LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
## LR(1) items:
logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON . [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On TYPE reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On RBRACE reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On PREDICATE reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On MODULE reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On MODEL reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On LOGIC reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On LEMMA reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On INDUCTIVE reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On INCLUDE reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On GLOBAL reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On FUNCTION reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On EXT_LET reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On EXT_AT reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On EOF reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On CONTRACT reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On AXIOMATIC reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON
-- On AXIOM reduce production logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON

State 712:
## Known stack suffix:
## enter_kw_c_mode
## LR(1) items:
full_logic_rt_type -> enter_kw_c_mode . logic_rt_type exit_kw_c_mode [ IDENTIFIER ]
## Transitions:
-- On IDENTIFIER shift to state 220
-- On logic_rt_type shift to state 713
-- On identifier shift to state 577
-- On id_as_typename shift to state 715
-- On begin_rt_type shift to state 716
## Reductions:
-- On VOID reduce production begin_rt_type ->
-- On UNSIGNED reduce production begin_rt_type ->
-- On UNION reduce production begin_rt_type ->
-- On TYPENAME reduce production begin_rt_type ->
-- On STRUCT reduce production begin_rt_type ->
-- On SIGNED reduce production begin_rt_type ->
-- On SHORT reduce production begin_rt_type ->
-- On REAL reduce production begin_rt_type ->
-- On LONG reduce production begin_rt_type ->
-- On INTEGER reduce production begin_rt_type ->
-- On INT reduce production begin_rt_type ->
-- On FLOAT reduce production begin_rt_type ->
-- On ENUM reduce production begin_rt_type ->
-- On DOUBLE reduce production begin_rt_type ->
-- On CHAR reduce production begin_rt_type ->
-- On BOOLEAN reduce production begin_rt_type ->
-- On BOOL reduce production begin_rt_type ->

State 713:
## Known stack suffix:
## enter_kw_c_mode logic_rt_type
## LR(1) items:
full_logic_rt_type -> enter_kw_c_mode logic_rt_type . exit_kw_c_mode [ IDENTIFIER ]
## Transitions:
-- On exit_kw_c_mode shift to state 714
## Reductions:
-- On IDENTIFIER reduce production exit_kw_c_mode ->

State 714:
## Known stack suffix:
## enter_kw_c_mode logic_rt_type exit_kw_c_mode
## LR(1) items:
full_logic_rt_type -> enter_kw_c_mode logic_rt_type exit_kw_c_mode . [ IDENTIFIER ]
## Transitions:
## Reductions:
-- On IDENTIFIER reduce production full_logic_rt_type -> enter_kw_c_mode logic_rt_type exit_kw_c_mode

State 715:
## Known stack suffix:
## id_as_typename
## LR(1) items:
logic_rt_type -> id_as_typename . [ IDENTIFIER ]
## Transitions:
## Reductions:
-- On IDENTIFIER reduce production logic_rt_type -> id_as_typename

State 716:
## Known stack suffix:
## begin_rt_type
## LR(1) items:
logic_rt_type -> begin_rt_type . logic_type end_rt_type [ IDENTIFIER ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 157
-- On logic_type shift to state 717
## Reductions:

State 717:
## Known stack suffix:
## begin_rt_type logic_type
## LR(1) items:
logic_rt_type -> begin_rt_type logic_type . end_rt_type [ IDENTIFIER ]
## Transitions:
-- On end_rt_type shift to state 718
## Reductions:
-- On IDENTIFIER reduce production end_rt_type ->

State 718:
## Known stack suffix:
## begin_rt_type logic_type end_rt_type
## LR(1) items:
logic_rt_type -> begin_rt_type logic_type end_rt_type . [ IDENTIFIER ]
## Transitions:
## Reductions:
-- On IDENTIFIER reduce production logic_rt_type -> begin_rt_type logic_type end_rt_type

State 719:
## Known stack suffix:
## LEMMA
## LR(1) items:
logic_def -> LEMMA . poly_id COLON full_lexpr SEMICOLON [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On poly_id_type shift to state 624
-- On poly_id shift to state 720
-- On full_identifier shift to state 641
-- On enter_kw_c_mode shift to state 593
## Reductions:
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 720:
## Known stack suffix:
## LEMMA poly_id
## LR(1) items:
logic_def -> LEMMA poly_id . COLON full_lexpr SEMICOLON [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On COLON shift to state 721
## Reductions:

State 721:
## Known stack suffix:
## LEMMA poly_id COLON
## LR(1) items:
logic_def -> LEMMA poly_id COLON . full_lexpr SEMICOLON [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On full_lexpr shift to state 722
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 722:
## Known stack suffix:
## LEMMA poly_id COLON full_lexpr
## LR(1) items:
logic_def -> LEMMA poly_id COLON full_lexpr . SEMICOLON [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 723
## Reductions:

State 723:
## Known stack suffix:
## LEMMA poly_id COLON full_lexpr SEMICOLON
## LR(1) items:
logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON . [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON
-- On TYPE reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON
-- On RBRACE reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON
-- On PREDICATE reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON
-- On MODULE reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON
-- On MODEL reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON
-- On LOGIC reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON
-- On LEMMA reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON
-- On INDUCTIVE reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON
-- On INCLUDE reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON
-- On GLOBAL reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON
-- On FUNCTION reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON
-- On EXT_LET reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON
-- On EXT_AT reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON
-- On EOF reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON
-- On CONTRACT reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON
-- On AXIOMATIC reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON
-- On AXIOM reduce production logic_def -> LEMMA poly_id COLON full_lexpr SEMICOLON

State 724:
## Known stack suffix:
## INVARIANT
## LR(1) items:
code_annotation -> INVARIANT . full_lexpr SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
-- On full_lexpr shift to state 725
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 725:
## Known stack suffix:
## INVARIANT full_lexpr
## LR(1) items:
code_annotation -> INVARIANT full_lexpr . SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
-- On SEMICOLON shift to state 726
## Reductions:

State 726:
## Known stack suffix:
## INVARIANT full_lexpr SEMICOLON
## LR(1) items:
code_annotation -> INVARIANT full_lexpr SEMICOLON . [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On TYPE reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On SLICE reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On PREDICATE reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On MODULE reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On MODEL reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On LOGIC reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On LEMMA reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On INVARIANT reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On INDUCTIVE reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On INCLUDE reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On IMPACT reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On GLOBAL reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On FUNCTION reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On FOR reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On EXT_LET reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On EXT_AT reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On EOF reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On CONTRACT reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On AXIOMATIC reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On AXIOM reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON
-- On ASSERT reduce production code_annotation -> INVARIANT full_lexpr SEMICOLON

State 727:
## Known stack suffix:
## INDUCTIVE
## LR(1) items:
logic_def -> INDUCTIVE . poly_id parameters LBRACE indcases RBRACE [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On poly_id_type shift to state 624
-- On poly_id shift to state 728
-- On full_identifier shift to state 641
-- On enter_kw_c_mode shift to state 593
## Reductions:
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 728:
## Known stack suffix:
## INDUCTIVE poly_id
## LR(1) items:
logic_def -> INDUCTIVE poly_id . parameters LBRACE indcases RBRACE [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On LPAR shift to state 626
-- On parameters shift to state 729
## Reductions:

State 729:
## Known stack suffix:
## INDUCTIVE poly_id parameters
## LR(1) items:
logic_def -> INDUCTIVE poly_id parameters . LBRACE indcases RBRACE [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On LBRACE shift to state 730
## Reductions:

State 730:
## Known stack suffix:
## INDUCTIVE poly_id parameters LBRACE
## LR(1) items:
logic_def -> INDUCTIVE poly_id parameters LBRACE . indcases RBRACE [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On CASE shift to state 731
-- On indcases shift to state 737
## Reductions:
-- On RBRACE reduce production indcases ->

State 731:
## Known stack suffix:
## CASE
## LR(1) items:
indcases -> CASE . poly_id COLON full_lexpr SEMICOLON indcases [ RBRACE ]
## Transitions:
-- On poly_id_type shift to state 624
-- On poly_id shift to state 732
-- On full_identifier shift to state 641
-- On enter_kw_c_mode shift to state 593
## Reductions:
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 732:
## Known stack suffix:
## CASE poly_id
## LR(1) items:
indcases -> CASE poly_id . COLON full_lexpr SEMICOLON indcases [ RBRACE ]
## Transitions:
-- On COLON shift to state 733
## Reductions:

State 733:
## Known stack suffix:
## CASE poly_id COLON
## LR(1) items:
indcases -> CASE poly_id COLON . full_lexpr SEMICOLON indcases [ RBRACE ]
## Transitions:
-- On full_lexpr shift to state 734
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 734:
## Known stack suffix:
## CASE poly_id COLON full_lexpr
## LR(1) items:
indcases -> CASE poly_id COLON full_lexpr . SEMICOLON indcases [ RBRACE ]
## Transitions:
-- On SEMICOLON shift to state 735
## Reductions:

State 735:
## Known stack suffix:
## CASE poly_id COLON full_lexpr SEMICOLON
## LR(1) items:
indcases -> CASE poly_id COLON full_lexpr SEMICOLON . indcases [ RBRACE ]
## Transitions:
-- On CASE shift to state 731
-- On indcases shift to state 736
## Reductions:
-- On RBRACE reduce production indcases ->

State 736:
## Known stack suffix:
## CASE poly_id COLON full_lexpr SEMICOLON indcases
## LR(1) items:
indcases -> CASE poly_id COLON full_lexpr SEMICOLON indcases . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production indcases -> CASE poly_id COLON full_lexpr SEMICOLON indcases

State 737:
## Known stack suffix:
## INDUCTIVE poly_id parameters LBRACE indcases
## LR(1) items:
logic_def -> INDUCTIVE poly_id parameters LBRACE indcases . RBRACE [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On RBRACE shift to state 738
## Reductions:

State 738:
## Known stack suffix:
## INDUCTIVE poly_id parameters LBRACE indcases RBRACE
## LR(1) items:
logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE . [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE
-- On TYPE reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE
-- On RBRACE reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE
-- On PREDICATE reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE
-- On MODULE reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE
-- On MODEL reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE
-- On LOGIC reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE
-- On LEMMA reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE
-- On INDUCTIVE reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE
-- On INCLUDE reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE
-- On GLOBAL reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE
-- On FUNCTION reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE
-- On EXT_LET reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE
-- On EXT_AT reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE
-- On EOF reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE
-- On CONTRACT reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE
-- On AXIOMATIC reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE
-- On AXIOM reduce production logic_def -> INDUCTIVE poly_id parameters LBRACE indcases RBRACE

State 739:
## Known stack suffix:
## IMPACT
## LR(1) items:
impact_pragma -> IMPACT . PRAGMA any_identifier full_lexpr SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
impact_pragma -> IMPACT . PRAGMA any_identifier SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
-- On PRAGMA shift to state 740
## Reductions:

State 740:
## Known stack suffix:
## IMPACT PRAGMA
## LR(1) items:
impact_pragma -> IMPACT PRAGMA . any_identifier full_lexpr SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
impact_pragma -> IMPACT PRAGMA . any_identifier SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On any_identifier shift to state 741
-- On acsl_c_keyword shift to state 87
## Reductions:

State 741:
## Known stack suffix:
## IMPACT PRAGMA any_identifier
## LR(1) items:
impact_pragma -> IMPACT PRAGMA any_identifier . full_lexpr SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
impact_pragma -> IMPACT PRAGMA any_identifier . SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
-- On SEMICOLON shift to state 742
-- On full_lexpr shift to state 743
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 742:
## Known stack suffix:
## IMPACT PRAGMA any_identifier SEMICOLON
## LR(1) items:
impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON . [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On TYPE reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On SLICE reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On PREDICATE reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On MODULE reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On MODEL reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On LOGIC reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On LEMMA reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On INVARIANT reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On INDUCTIVE reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On INCLUDE reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On IMPACT reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On GLOBAL reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On FUNCTION reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On FOR reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On EXT_LET reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On EXT_AT reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On EOF reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On CONTRACT reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On AXIOMATIC reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On AXIOM reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON
-- On ASSERT reduce production impact_pragma -> IMPACT PRAGMA any_identifier SEMICOLON

State 743:
## Known stack suffix:
## IMPACT PRAGMA any_identifier full_lexpr
## LR(1) items:
impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr . SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
-- On SEMICOLON shift to state 744
## Reductions:

State 744:
## Known stack suffix:
## IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
## LR(1) items:
impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON . [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On TYPE reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On SLICE reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On PREDICATE reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On MODULE reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On MODEL reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On LOGIC reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On LEMMA reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On INVARIANT reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On INDUCTIVE reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On INCLUDE reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On IMPACT reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On GLOBAL reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On FUNCTION reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On FOR reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On EXT_LET reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On EXT_AT reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On EOF reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On CONTRACT reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On AXIOMATIC reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On AXIOM reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON
-- On ASSERT reduce production impact_pragma -> IMPACT PRAGMA any_identifier full_lexpr SEMICOLON

State 745:
## Known stack suffix:
## GLOBAL
## LR(1) items:
decl -> GLOBAL . INVARIANT any_identifier COLON full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On INVARIANT shift to state 746
## Reductions:

State 746:
## Known stack suffix:
## GLOBAL INVARIANT
## LR(1) items:
decl -> GLOBAL INVARIANT . any_identifier COLON full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On any_identifier shift to state 747
-- On acsl_c_keyword shift to state 87
## Reductions:

State 747:
## Known stack suffix:
## GLOBAL INVARIANT any_identifier
## LR(1) items:
decl -> GLOBAL INVARIANT any_identifier . COLON full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On COLON shift to state 748
## Reductions:

State 748:
## Known stack suffix:
## GLOBAL INVARIANT any_identifier COLON
## LR(1) items:
decl -> GLOBAL INVARIANT any_identifier COLON . full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On full_lexpr shift to state 749
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 749:
## Known stack suffix:
## GLOBAL INVARIANT any_identifier COLON full_lexpr
## LR(1) items:
decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr . SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 750
## Reductions:

State 750:
## Known stack suffix:
## GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON
## LR(1) items:
decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON
-- On TYPE reduce production decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON
-- On PREDICATE reduce production decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON
-- On MODULE reduce production decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON
-- On MODEL reduce production decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON
-- On LOGIC reduce production decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON
-- On LEMMA reduce production decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON
-- On INDUCTIVE reduce production decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON
-- On INCLUDE reduce production decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON
-- On GLOBAL reduce production decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON
-- On FUNCTION reduce production decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON
-- On EXT_LET reduce production decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON
-- On EXT_AT reduce production decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON
-- On EOF reduce production decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON
-- On CONTRACT reduce production decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON
-- On AXIOMATIC reduce production decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON
-- On AXIOM reduce production decl -> GLOBAL INVARIANT any_identifier COLON full_lexpr SEMICOLON

State 751:
## Known stack suffix:
## FOR
## LR(1) items:
annotation -> FOR . ne_behavior_name_list COLON contract [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
code_annotation -> FOR . ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
code_annotation -> FOR . ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
loop_annot_stack -> FOR . ne_behavior_name_list COLON loop_annot_stack [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_behavior_name_list shift to state 752
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On behavior_name shift to state 792
-- On any_identifier shift to state 795
-- On acsl_c_keyword shift to state 87
## Reductions:

State 752:
## Known stack suffix:
## FOR ne_behavior_name_list
## LR(1) items:
annotation -> FOR ne_behavior_name_list . COLON contract [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
code_annotation -> FOR ne_behavior_name_list . COLON ASSERT full_lexpr SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
code_annotation -> FOR ne_behavior_name_list . COLON INVARIANT full_lexpr SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
loop_annot_stack -> FOR ne_behavior_name_list . COLON loop_annot_stack [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On COLON shift to state 753
## Reductions:

State 753:
## Known stack suffix:
## FOR ne_behavior_name_list COLON
## LR(1) items:
annotation -> FOR ne_behavior_name_list COLON . contract [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
code_annotation -> FOR ne_behavior_name_list COLON . ASSERT full_lexpr SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
code_annotation -> FOR ne_behavior_name_list COLON . INVARIANT full_lexpr SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
loop_annot_stack -> FOR ne_behavior_name_list COLON . loop_annot_stack [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On REQUIRES shift to state 754
-- On LOOP shift to state 656
-- On INVARIANT shift to state 772
-- On FOR shift to state 775
-- On ASSERT shift to state 796
-- On requires shift to state 799
-- On ne_requires shift to state 758
-- On loop_variant shift to state 778
-- On loop_pragma shift to state 779
-- On loop_invariant shift to state 780
-- On loop_grammar_extension shift to state 781
-- On loop_effects shift to state 782
-- On loop_annot_stack shift to state 791
-- On loop_allocation shift to state 785
-- On contract shift to state 888
## Reductions:
-- On WRITES reduce production requires ->
-- On VOLATILE reduce production requires ->
-- On VOID reduce production requires ->
-- On UNSIGNED reduce production requires ->
-- On UNION reduce production requires ->
-- On TYPENAME reduce production requires ->
-- On TYPE reduce production requires ->
-- On TERMINATES reduce production requires ->
-- On STRUCT reduce production requires ->
-- On STATIC reduce production requires ->
-- On SIZEOF reduce production requires ->
-- On SIGNED reduce production requires ->
-- On SHORT reduce production requires ->
-- On RETURNS reduce production requires ->
-- On REAL reduce production requires ->
-- On READS reduce production requires ->
-- On PREDICATE reduce production requires ->
-- On MODULE reduce production requires ->
-- On MODEL reduce production requires ->
-- On LONG reduce production requires ->
-- On LOGIC reduce production requires ->
-- On LEMMA reduce production requires ->
-- On LABEL reduce production requires ->
-- On INTEGER reduce production requires ->
-- On INT reduce production requires ->
-- On INDUCTIVE reduce production requires ->
-- On INCLUDE reduce production requires ->
-- On IF reduce production requires ->
-- On IDENTIFIER reduce production requires ->
-- On GLOBAL reduce production requires ->
-- On FUNCTION reduce production requires ->
-- On FREES reduce production requires ->
-- On FLOAT reduce production requires ->
-- On EXT_LET reduce production requires ->
-- On EXT_AT reduce production requires ->
-- On EXITS reduce production requires ->
-- On EOF reduce production requires ->
-- On ENUM reduce production requires ->
-- On ENSURES reduce production requires ->
-- On ELSE reduce production requires ->
-- On DOUBLE reduce production requires ->
-- On DISJOINT reduce production requires ->
-- On DECREASES reduce production requires ->
-- On CONTRACT reduce production requires ->
-- On CONTINUES reduce production requires ->
-- On CONST reduce production requires ->
-- On COMPLETE reduce production requires ->
-- On CHAR reduce production requires ->
-- On CASE reduce production requires ->
-- On BREAKS reduce production requires ->
-- On BOOLEAN reduce production requires ->
-- On BOOL reduce production requires ->
-- On BEHAVIORS reduce production requires ->
-- On BEHAVIOR reduce production requires ->
-- On AXIOMATIC reduce production requires ->
-- On AXIOM reduce production requires ->
-- On ASSIGNS reduce production requires ->
-- On ALLOCATES reduce production requires ->

State 754:
## Known stack suffix:
## REQUIRES
## LR(1) items:
ne_requires -> REQUIRES . full_lexpr SEMICOLON requires [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
ne_requires -> REQUIRES . full_lexpr clause_kw [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On full_lexpr shift to state 755
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 755:
## Known stack suffix:
## REQUIRES full_lexpr
## LR(1) items:
ne_requires -> REQUIRES full_lexpr . SEMICOLON requires [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
ne_requires -> REQUIRES full_lexpr . clause_kw [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On SEMICOLON shift to state 756
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 759
-- On IDENTIFIER shift to state 760
-- On FREES shift to state 761
-- On EXITS shift to state 47
-- On EOF shift to state 762
-- On ENSURES shift to state 49
-- On DISJOINT shift to state 763
-- On DECREASES shift to state 764
-- On CONTINUES shift to state 56
-- On COMPLETE shift to state 765
-- On BREAKS shift to state 61
-- On BEHAVIOR shift to state 766
-- On ASSUMES shift to state 767
-- On ASSIGNS shift to state 768
-- On ALLOCATES shift to state 769
-- On post_cond shift to state 770
-- On clause_kw shift to state 771
## Reductions:

State 756:
## Known stack suffix:
## REQUIRES full_lexpr SEMICOLON
## LR(1) items:
ne_requires -> REQUIRES full_lexpr SEMICOLON . requires [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On REQUIRES shift to state 754
-- On requires shift to state 757
-- On ne_requires shift to state 758
## Reductions:
-- On WRITES reduce production requires ->
-- On VOLATILE reduce production requires ->
-- On VOID reduce production requires ->
-- On UNSIGNED reduce production requires ->
-- On UNION reduce production requires ->
-- On TYPENAME reduce production requires ->
-- On TYPE reduce production requires ->
-- On TERMINATES reduce production requires ->
-- On STRUCT reduce production requires ->
-- On STATIC reduce production requires ->
-- On SIZEOF reduce production requires ->
-- On SIGNED reduce production requires ->
-- On SHORT reduce production requires ->
-- On RETURNS reduce production requires ->
-- On REAL reduce production requires ->
-- On READS reduce production requires ->
-- On PREDICATE reduce production requires ->
-- On MODULE reduce production requires ->
-- On MODEL reduce production requires ->
-- On LONG reduce production requires ->
-- On LOGIC reduce production requires ->
-- On LEMMA reduce production requires ->
-- On LABEL reduce production requires ->
-- On INTEGER reduce production requires ->
-- On INT reduce production requires ->
-- On INDUCTIVE reduce production requires ->
-- On INCLUDE reduce production requires ->
-- On IF reduce production requires ->
-- On IDENTIFIER reduce production requires ->
-- On GLOBAL reduce production requires ->
-- On FUNCTION reduce production requires ->
-- On FREES reduce production requires ->
-- On FLOAT reduce production requires ->
-- On EXT_LET reduce production requires ->
-- On EXT_AT reduce production requires ->
-- On EXITS reduce production requires ->
-- On EOF reduce production requires ->
-- On ENUM reduce production requires ->
-- On ENSURES reduce production requires ->
-- On ELSE reduce production requires ->
-- On DOUBLE reduce production requires ->
-- On DISJOINT reduce production requires ->
-- On DECREASES reduce production requires ->
-- On CONTRACT reduce production requires ->
-- On CONTINUES reduce production requires ->
-- On CONST reduce production requires ->
-- On COMPLETE reduce production requires ->
-- On CHAR reduce production requires ->
-- On CASE reduce production requires ->
-- On BREAKS reduce production requires ->
-- On BOOLEAN reduce production requires ->
-- On BOOL reduce production requires ->
-- On BEHAVIORS reduce production requires ->
-- On BEHAVIOR reduce production requires ->
-- On AXIOMATIC reduce production requires ->
-- On AXIOM reduce production requires ->
-- On ASSUMES reduce production requires ->
-- On ASSIGNS reduce production requires ->
-- On ALLOCATES reduce production requires ->

State 757:
## Known stack suffix:
## REQUIRES full_lexpr SEMICOLON requires
## LR(1) items:
ne_requires -> REQUIRES full_lexpr SEMICOLON requires . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On VOLATILE reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On VOID reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On UNSIGNED reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On UNION reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On TYPENAME reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On TYPE reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On TERMINATES reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On STRUCT reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On STATIC reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On SIZEOF reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On SIGNED reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On SHORT reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On RETURNS reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On REAL reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On READS reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On PREDICATE reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On MODULE reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On MODEL reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On LONG reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On LOGIC reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On LEMMA reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On LABEL reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On INTEGER reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On INT reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On INDUCTIVE reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On INCLUDE reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On IF reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On IDENTIFIER reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On GLOBAL reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On FUNCTION reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On FREES reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On FLOAT reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On EXT_LET reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On EXT_AT reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On EXITS reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On EOF reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On ENUM reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On ENSURES reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On ELSE reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On DOUBLE reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On DISJOINT reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On DECREASES reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On CONTRACT reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On CONTINUES reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On CONST reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On COMPLETE reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On CHAR reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On CASE reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On BREAKS reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On BOOLEAN reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On BOOL reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On BEHAVIORS reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On BEHAVIOR reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On AXIOMATIC reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On AXIOM reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On ASSUMES reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On ASSIGNS reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires
-- On ALLOCATES reduce production ne_requires -> REQUIRES full_lexpr SEMICOLON requires

State 758:
## Known stack suffix:
## ne_requires
## LR(1) items:
requires -> ne_requires . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production requires -> ne_requires
-- On VOLATILE reduce production requires -> ne_requires
-- On VOID reduce production requires -> ne_requires
-- On UNSIGNED reduce production requires -> ne_requires
-- On UNION reduce production requires -> ne_requires
-- On TYPENAME reduce production requires -> ne_requires
-- On TYPE reduce production requires -> ne_requires
-- On TERMINATES reduce production requires -> ne_requires
-- On STRUCT reduce production requires -> ne_requires
-- On STATIC reduce production requires -> ne_requires
-- On SIZEOF reduce production requires -> ne_requires
-- On SIGNED reduce production requires -> ne_requires
-- On SHORT reduce production requires -> ne_requires
-- On RETURNS reduce production requires -> ne_requires
-- On REAL reduce production requires -> ne_requires
-- On READS reduce production requires -> ne_requires
-- On PREDICATE reduce production requires -> ne_requires
-- On MODULE reduce production requires -> ne_requires
-- On MODEL reduce production requires -> ne_requires
-- On LONG reduce production requires -> ne_requires
-- On LOGIC reduce production requires -> ne_requires
-- On LEMMA reduce production requires -> ne_requires
-- On LABEL reduce production requires -> ne_requires
-- On INTEGER reduce production requires -> ne_requires
-- On INT reduce production requires -> ne_requires
-- On INDUCTIVE reduce production requires -> ne_requires
-- On INCLUDE reduce production requires -> ne_requires
-- On IF reduce production requires -> ne_requires
-- On IDENTIFIER reduce production requires -> ne_requires
-- On GLOBAL reduce production requires -> ne_requires
-- On FUNCTION reduce production requires -> ne_requires
-- On FREES reduce production requires -> ne_requires
-- On FLOAT reduce production requires -> ne_requires
-- On EXT_LET reduce production requires -> ne_requires
-- On EXT_AT reduce production requires -> ne_requires
-- On EXITS reduce production requires -> ne_requires
-- On EOF reduce production requires -> ne_requires
-- On ENUM reduce production requires -> ne_requires
-- On ENSURES reduce production requires -> ne_requires
-- On ELSE reduce production requires -> ne_requires
-- On DOUBLE reduce production requires -> ne_requires
-- On DISJOINT reduce production requires -> ne_requires
-- On DECREASES reduce production requires -> ne_requires
-- On CONTRACT reduce production requires -> ne_requires
-- On CONTINUES reduce production requires -> ne_requires
-- On CONST reduce production requires -> ne_requires
-- On COMPLETE reduce production requires -> ne_requires
-- On CHAR reduce production requires -> ne_requires
-- On CASE reduce production requires -> ne_requires
-- On BREAKS reduce production requires -> ne_requires
-- On BOOLEAN reduce production requires -> ne_requires
-- On BOOL reduce production requires -> ne_requires
-- On BEHAVIORS reduce production requires -> ne_requires
-- On BEHAVIOR reduce production requires -> ne_requires
-- On AXIOMATIC reduce production requires -> ne_requires
-- On AXIOM reduce production requires -> ne_requires
-- On ASSUMES reduce production requires -> ne_requires
-- On ASSIGNS reduce production requires -> ne_requires
-- On ALLOCATES reduce production requires -> ne_requires

State 759:
## Known stack suffix:
## REQUIRES
## LR(1) items:
clause_kw -> REQUIRES . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production clause_kw -> REQUIRES
-- On VOLATILE reduce production clause_kw -> REQUIRES
-- On VOID reduce production clause_kw -> REQUIRES
-- On UNSIGNED reduce production clause_kw -> REQUIRES
-- On UNION reduce production clause_kw -> REQUIRES
-- On TYPENAME reduce production clause_kw -> REQUIRES
-- On TYPE reduce production clause_kw -> REQUIRES
-- On TERMINATES reduce production clause_kw -> REQUIRES
-- On STRUCT reduce production clause_kw -> REQUIRES
-- On STATIC reduce production clause_kw -> REQUIRES
-- On SIZEOF reduce production clause_kw -> REQUIRES
-- On SIGNED reduce production clause_kw -> REQUIRES
-- On SHORT reduce production clause_kw -> REQUIRES
-- On RETURNS reduce production clause_kw -> REQUIRES
-- On REQUIRES reduce production clause_kw -> REQUIRES
-- On REAL reduce production clause_kw -> REQUIRES
-- On READS reduce production clause_kw -> REQUIRES
-- On PREDICATE reduce production clause_kw -> REQUIRES
-- On MODULE reduce production clause_kw -> REQUIRES
-- On MODEL reduce production clause_kw -> REQUIRES
-- On LONG reduce production clause_kw -> REQUIRES
-- On LOGIC reduce production clause_kw -> REQUIRES
-- On LEMMA reduce production clause_kw -> REQUIRES
-- On LABEL reduce production clause_kw -> REQUIRES
-- On INTEGER reduce production clause_kw -> REQUIRES
-- On INT reduce production clause_kw -> REQUIRES
-- On INDUCTIVE reduce production clause_kw -> REQUIRES
-- On INCLUDE reduce production clause_kw -> REQUIRES
-- On IF reduce production clause_kw -> REQUIRES
-- On IDENTIFIER reduce production clause_kw -> REQUIRES
-- On GLOBAL reduce production clause_kw -> REQUIRES
-- On FUNCTION reduce production clause_kw -> REQUIRES
-- On FREES reduce production clause_kw -> REQUIRES
-- On FLOAT reduce production clause_kw -> REQUIRES
-- On EXT_LET reduce production clause_kw -> REQUIRES
-- On EXT_AT reduce production clause_kw -> REQUIRES
-- On EXITS reduce production clause_kw -> REQUIRES
-- On EOF reduce production clause_kw -> REQUIRES
-- On ENUM reduce production clause_kw -> REQUIRES
-- On ENSURES reduce production clause_kw -> REQUIRES
-- On ELSE reduce production clause_kw -> REQUIRES
-- On DOUBLE reduce production clause_kw -> REQUIRES
-- On DISJOINT reduce production clause_kw -> REQUIRES
-- On DECREASES reduce production clause_kw -> REQUIRES
-- On CONTRACT reduce production clause_kw -> REQUIRES
-- On CONTINUES reduce production clause_kw -> REQUIRES
-- On CONST reduce production clause_kw -> REQUIRES
-- On COMPLETE reduce production clause_kw -> REQUIRES
-- On CHAR reduce production clause_kw -> REQUIRES
-- On CASE reduce production clause_kw -> REQUIRES
-- On BREAKS reduce production clause_kw -> REQUIRES
-- On BOOLEAN reduce production clause_kw -> REQUIRES
-- On BOOL reduce production clause_kw -> REQUIRES
-- On BEHAVIORS reduce production clause_kw -> REQUIRES
-- On BEHAVIOR reduce production clause_kw -> REQUIRES
-- On AXIOMATIC reduce production clause_kw -> REQUIRES
-- On AXIOM reduce production clause_kw -> REQUIRES
-- On ASSUMES reduce production clause_kw -> REQUIRES
-- On ASSIGNS reduce production clause_kw -> REQUIRES
-- On ALLOCATES reduce production clause_kw -> REQUIRES

State 760:
## Known stack suffix:
## IDENTIFIER
## LR(1) items:
clause_kw -> IDENTIFIER . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production clause_kw -> IDENTIFIER
-- On VOLATILE reduce production clause_kw -> IDENTIFIER
-- On VOID reduce production clause_kw -> IDENTIFIER
-- On UNSIGNED reduce production clause_kw -> IDENTIFIER
-- On UNION reduce production clause_kw -> IDENTIFIER
-- On TYPENAME reduce production clause_kw -> IDENTIFIER
-- On TYPE reduce production clause_kw -> IDENTIFIER
-- On TERMINATES reduce production clause_kw -> IDENTIFIER
-- On STRUCT reduce production clause_kw -> IDENTIFIER
-- On STATIC reduce production clause_kw -> IDENTIFIER
-- On SIZEOF reduce production clause_kw -> IDENTIFIER
-- On SIGNED reduce production clause_kw -> IDENTIFIER
-- On SHORT reduce production clause_kw -> IDENTIFIER
-- On RETURNS reduce production clause_kw -> IDENTIFIER
-- On REQUIRES reduce production clause_kw -> IDENTIFIER
-- On REAL reduce production clause_kw -> IDENTIFIER
-- On READS reduce production clause_kw -> IDENTIFIER
-- On PREDICATE reduce production clause_kw -> IDENTIFIER
-- On MODULE reduce production clause_kw -> IDENTIFIER
-- On MODEL reduce production clause_kw -> IDENTIFIER
-- On LONG reduce production clause_kw -> IDENTIFIER
-- On LOGIC reduce production clause_kw -> IDENTIFIER
-- On LEMMA reduce production clause_kw -> IDENTIFIER
-- On LABEL reduce production clause_kw -> IDENTIFIER
-- On INTEGER reduce production clause_kw -> IDENTIFIER
-- On INT reduce production clause_kw -> IDENTIFIER
-- On INDUCTIVE reduce production clause_kw -> IDENTIFIER
-- On INCLUDE reduce production clause_kw -> IDENTIFIER
-- On IF reduce production clause_kw -> IDENTIFIER
-- On IDENTIFIER reduce production clause_kw -> IDENTIFIER
-- On GLOBAL reduce production clause_kw -> IDENTIFIER
-- On FUNCTION reduce production clause_kw -> IDENTIFIER
-- On FREES reduce production clause_kw -> IDENTIFIER
-- On FLOAT reduce production clause_kw -> IDENTIFIER
-- On EXT_LET reduce production clause_kw -> IDENTIFIER
-- On EXT_AT reduce production clause_kw -> IDENTIFIER
-- On EXITS reduce production clause_kw -> IDENTIFIER
-- On EOF reduce production clause_kw -> IDENTIFIER
-- On ENUM reduce production clause_kw -> IDENTIFIER
-- On ENSURES reduce production clause_kw -> IDENTIFIER
-- On ELSE reduce production clause_kw -> IDENTIFIER
-- On DOUBLE reduce production clause_kw -> IDENTIFIER
-- On DISJOINT reduce production clause_kw -> IDENTIFIER
-- On DECREASES reduce production clause_kw -> IDENTIFIER
-- On CONTRACT reduce production clause_kw -> IDENTIFIER
-- On CONTINUES reduce production clause_kw -> IDENTIFIER
-- On CONST reduce production clause_kw -> IDENTIFIER
-- On COMPLETE reduce production clause_kw -> IDENTIFIER
-- On CHAR reduce production clause_kw -> IDENTIFIER
-- On CASE reduce production clause_kw -> IDENTIFIER
-- On BREAKS reduce production clause_kw -> IDENTIFIER
-- On BOOLEAN reduce production clause_kw -> IDENTIFIER
-- On BOOL reduce production clause_kw -> IDENTIFIER
-- On BEHAVIORS reduce production clause_kw -> IDENTIFIER
-- On BEHAVIOR reduce production clause_kw -> IDENTIFIER
-- On AXIOMATIC reduce production clause_kw -> IDENTIFIER
-- On AXIOM reduce production clause_kw -> IDENTIFIER
-- On ASSUMES reduce production clause_kw -> IDENTIFIER
-- On ASSIGNS reduce production clause_kw -> IDENTIFIER
-- On ALLOCATES reduce production clause_kw -> IDENTIFIER

State 761:
## Known stack suffix:
## FREES
## LR(1) items:
clause_kw -> FREES . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production clause_kw -> FREES
-- On VOLATILE reduce production clause_kw -> FREES
-- On VOID reduce production clause_kw -> FREES
-- On UNSIGNED reduce production clause_kw -> FREES
-- On UNION reduce production clause_kw -> FREES
-- On TYPENAME reduce production clause_kw -> FREES
-- On TYPE reduce production clause_kw -> FREES
-- On TERMINATES reduce production clause_kw -> FREES
-- On STRUCT reduce production clause_kw -> FREES
-- On STATIC reduce production clause_kw -> FREES
-- On SIZEOF reduce production clause_kw -> FREES
-- On SIGNED reduce production clause_kw -> FREES
-- On SHORT reduce production clause_kw -> FREES
-- On RETURNS reduce production clause_kw -> FREES
-- On REQUIRES reduce production clause_kw -> FREES
-- On REAL reduce production clause_kw -> FREES
-- On READS reduce production clause_kw -> FREES
-- On PREDICATE reduce production clause_kw -> FREES
-- On MODULE reduce production clause_kw -> FREES
-- On MODEL reduce production clause_kw -> FREES
-- On LONG reduce production clause_kw -> FREES
-- On LOGIC reduce production clause_kw -> FREES
-- On LEMMA reduce production clause_kw -> FREES
-- On LABEL reduce production clause_kw -> FREES
-- On INTEGER reduce production clause_kw -> FREES
-- On INT reduce production clause_kw -> FREES
-- On INDUCTIVE reduce production clause_kw -> FREES
-- On INCLUDE reduce production clause_kw -> FREES
-- On IF reduce production clause_kw -> FREES
-- On IDENTIFIER reduce production clause_kw -> FREES
-- On GLOBAL reduce production clause_kw -> FREES
-- On FUNCTION reduce production clause_kw -> FREES
-- On FREES reduce production clause_kw -> FREES
-- On FLOAT reduce production clause_kw -> FREES
-- On EXT_LET reduce production clause_kw -> FREES
-- On EXT_AT reduce production clause_kw -> FREES
-- On EXITS reduce production clause_kw -> FREES
-- On EOF reduce production clause_kw -> FREES
-- On ENUM reduce production clause_kw -> FREES
-- On ENSURES reduce production clause_kw -> FREES
-- On ELSE reduce production clause_kw -> FREES
-- On DOUBLE reduce production clause_kw -> FREES
-- On DISJOINT reduce production clause_kw -> FREES
-- On DECREASES reduce production clause_kw -> FREES
-- On CONTRACT reduce production clause_kw -> FREES
-- On CONTINUES reduce production clause_kw -> FREES
-- On CONST reduce production clause_kw -> FREES
-- On COMPLETE reduce production clause_kw -> FREES
-- On CHAR reduce production clause_kw -> FREES
-- On CASE reduce production clause_kw -> FREES
-- On BREAKS reduce production clause_kw -> FREES
-- On BOOLEAN reduce production clause_kw -> FREES
-- On BOOL reduce production clause_kw -> FREES
-- On BEHAVIORS reduce production clause_kw -> FREES
-- On BEHAVIOR reduce production clause_kw -> FREES
-- On AXIOMATIC reduce production clause_kw -> FREES
-- On AXIOM reduce production clause_kw -> FREES
-- On ASSUMES reduce production clause_kw -> FREES
-- On ASSIGNS reduce production clause_kw -> FREES
-- On ALLOCATES reduce production clause_kw -> FREES

State 762:
## Known stack suffix:
## EOF
## LR(1) items:
clause_kw -> EOF . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production clause_kw -> EOF
-- On VOLATILE reduce production clause_kw -> EOF
-- On VOID reduce production clause_kw -> EOF
-- On UNSIGNED reduce production clause_kw -> EOF
-- On UNION reduce production clause_kw -> EOF
-- On TYPENAME reduce production clause_kw -> EOF
-- On TYPE reduce production clause_kw -> EOF
-- On TERMINATES reduce production clause_kw -> EOF
-- On STRUCT reduce production clause_kw -> EOF
-- On STATIC reduce production clause_kw -> EOF
-- On SIZEOF reduce production clause_kw -> EOF
-- On SIGNED reduce production clause_kw -> EOF
-- On SHORT reduce production clause_kw -> EOF
-- On RETURNS reduce production clause_kw -> EOF
-- On REQUIRES reduce production clause_kw -> EOF
-- On REAL reduce production clause_kw -> EOF
-- On READS reduce production clause_kw -> EOF
-- On PREDICATE reduce production clause_kw -> EOF
-- On MODULE reduce production clause_kw -> EOF
-- On MODEL reduce production clause_kw -> EOF
-- On LONG reduce production clause_kw -> EOF
-- On LOGIC reduce production clause_kw -> EOF
-- On LEMMA reduce production clause_kw -> EOF
-- On LABEL reduce production clause_kw -> EOF
-- On INTEGER reduce production clause_kw -> EOF
-- On INT reduce production clause_kw -> EOF
-- On INDUCTIVE reduce production clause_kw -> EOF
-- On INCLUDE reduce production clause_kw -> EOF
-- On IF reduce production clause_kw -> EOF
-- On IDENTIFIER reduce production clause_kw -> EOF
-- On GLOBAL reduce production clause_kw -> EOF
-- On FUNCTION reduce production clause_kw -> EOF
-- On FREES reduce production clause_kw -> EOF
-- On FLOAT reduce production clause_kw -> EOF
-- On EXT_LET reduce production clause_kw -> EOF
-- On EXT_AT reduce production clause_kw -> EOF
-- On EXITS reduce production clause_kw -> EOF
-- On EOF reduce production clause_kw -> EOF
-- On ENUM reduce production clause_kw -> EOF
-- On ENSURES reduce production clause_kw -> EOF
-- On ELSE reduce production clause_kw -> EOF
-- On DOUBLE reduce production clause_kw -> EOF
-- On DISJOINT reduce production clause_kw -> EOF
-- On DECREASES reduce production clause_kw -> EOF
-- On CONTRACT reduce production clause_kw -> EOF
-- On CONTINUES reduce production clause_kw -> EOF
-- On CONST reduce production clause_kw -> EOF
-- On COMPLETE reduce production clause_kw -> EOF
-- On CHAR reduce production clause_kw -> EOF
-- On CASE reduce production clause_kw -> EOF
-- On BREAKS reduce production clause_kw -> EOF
-- On BOOLEAN reduce production clause_kw -> EOF
-- On BOOL reduce production clause_kw -> EOF
-- On BEHAVIORS reduce production clause_kw -> EOF
-- On BEHAVIOR reduce production clause_kw -> EOF
-- On AXIOMATIC reduce production clause_kw -> EOF
-- On AXIOM reduce production clause_kw -> EOF
-- On ASSUMES reduce production clause_kw -> EOF
-- On ASSIGNS reduce production clause_kw -> EOF
-- On ALLOCATES reduce production clause_kw -> EOF

State 763:
## Known stack suffix:
## DISJOINT
## LR(1) items:
clause_kw -> DISJOINT . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production clause_kw -> DISJOINT
-- On VOLATILE reduce production clause_kw -> DISJOINT
-- On VOID reduce production clause_kw -> DISJOINT
-- On UNSIGNED reduce production clause_kw -> DISJOINT
-- On UNION reduce production clause_kw -> DISJOINT
-- On TYPENAME reduce production clause_kw -> DISJOINT
-- On TYPE reduce production clause_kw -> DISJOINT
-- On TERMINATES reduce production clause_kw -> DISJOINT
-- On STRUCT reduce production clause_kw -> DISJOINT
-- On STATIC reduce production clause_kw -> DISJOINT
-- On SIZEOF reduce production clause_kw -> DISJOINT
-- On SIGNED reduce production clause_kw -> DISJOINT
-- On SHORT reduce production clause_kw -> DISJOINT
-- On RETURNS reduce production clause_kw -> DISJOINT
-- On REQUIRES reduce production clause_kw -> DISJOINT
-- On REAL reduce production clause_kw -> DISJOINT
-- On READS reduce production clause_kw -> DISJOINT
-- On PREDICATE reduce production clause_kw -> DISJOINT
-- On MODULE reduce production clause_kw -> DISJOINT
-- On MODEL reduce production clause_kw -> DISJOINT
-- On LONG reduce production clause_kw -> DISJOINT
-- On LOGIC reduce production clause_kw -> DISJOINT
-- On LEMMA reduce production clause_kw -> DISJOINT
-- On LABEL reduce production clause_kw -> DISJOINT
-- On INTEGER reduce production clause_kw -> DISJOINT
-- On INT reduce production clause_kw -> DISJOINT
-- On INDUCTIVE reduce production clause_kw -> DISJOINT
-- On INCLUDE reduce production clause_kw -> DISJOINT
-- On IF reduce production clause_kw -> DISJOINT
-- On IDENTIFIER reduce production clause_kw -> DISJOINT
-- On GLOBAL reduce production clause_kw -> DISJOINT
-- On FUNCTION reduce production clause_kw -> DISJOINT
-- On FREES reduce production clause_kw -> DISJOINT
-- On FLOAT reduce production clause_kw -> DISJOINT
-- On EXT_LET reduce production clause_kw -> DISJOINT
-- On EXT_AT reduce production clause_kw -> DISJOINT
-- On EXITS reduce production clause_kw -> DISJOINT
-- On EOF reduce production clause_kw -> DISJOINT
-- On ENUM reduce production clause_kw -> DISJOINT
-- On ENSURES reduce production clause_kw -> DISJOINT
-- On ELSE reduce production clause_kw -> DISJOINT
-- On DOUBLE reduce production clause_kw -> DISJOINT
-- On DISJOINT reduce production clause_kw -> DISJOINT
-- On DECREASES reduce production clause_kw -> DISJOINT
-- On CONTRACT reduce production clause_kw -> DISJOINT
-- On CONTINUES reduce production clause_kw -> DISJOINT
-- On CONST reduce production clause_kw -> DISJOINT
-- On COMPLETE reduce production clause_kw -> DISJOINT
-- On CHAR reduce production clause_kw -> DISJOINT
-- On CASE reduce production clause_kw -> DISJOINT
-- On BREAKS reduce production clause_kw -> DISJOINT
-- On BOOLEAN reduce production clause_kw -> DISJOINT
-- On BOOL reduce production clause_kw -> DISJOINT
-- On BEHAVIORS reduce production clause_kw -> DISJOINT
-- On BEHAVIOR reduce production clause_kw -> DISJOINT
-- On AXIOMATIC reduce production clause_kw -> DISJOINT
-- On AXIOM reduce production clause_kw -> DISJOINT
-- On ASSUMES reduce production clause_kw -> DISJOINT
-- On ASSIGNS reduce production clause_kw -> DISJOINT
-- On ALLOCATES reduce production clause_kw -> DISJOINT

State 764:
## Known stack suffix:
## DECREASES
## LR(1) items:
clause_kw -> DECREASES . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production clause_kw -> DECREASES
-- On VOLATILE reduce production clause_kw -> DECREASES
-- On VOID reduce production clause_kw -> DECREASES
-- On UNSIGNED reduce production clause_kw -> DECREASES
-- On UNION reduce production clause_kw -> DECREASES
-- On TYPENAME reduce production clause_kw -> DECREASES
-- On TYPE reduce production clause_kw -> DECREASES
-- On TERMINATES reduce production clause_kw -> DECREASES
-- On STRUCT reduce production clause_kw -> DECREASES
-- On STATIC reduce production clause_kw -> DECREASES
-- On SIZEOF reduce production clause_kw -> DECREASES
-- On SIGNED reduce production clause_kw -> DECREASES
-- On SHORT reduce production clause_kw -> DECREASES
-- On RETURNS reduce production clause_kw -> DECREASES
-- On REQUIRES reduce production clause_kw -> DECREASES
-- On REAL reduce production clause_kw -> DECREASES
-- On READS reduce production clause_kw -> DECREASES
-- On PREDICATE reduce production clause_kw -> DECREASES
-- On MODULE reduce production clause_kw -> DECREASES
-- On MODEL reduce production clause_kw -> DECREASES
-- On LONG reduce production clause_kw -> DECREASES
-- On LOGIC reduce production clause_kw -> DECREASES
-- On LEMMA reduce production clause_kw -> DECREASES
-- On LABEL reduce production clause_kw -> DECREASES
-- On INTEGER reduce production clause_kw -> DECREASES
-- On INT reduce production clause_kw -> DECREASES
-- On INDUCTIVE reduce production clause_kw -> DECREASES
-- On INCLUDE reduce production clause_kw -> DECREASES
-- On IF reduce production clause_kw -> DECREASES
-- On IDENTIFIER reduce production clause_kw -> DECREASES
-- On GLOBAL reduce production clause_kw -> DECREASES
-- On FUNCTION reduce production clause_kw -> DECREASES
-- On FREES reduce production clause_kw -> DECREASES
-- On FLOAT reduce production clause_kw -> DECREASES
-- On EXT_LET reduce production clause_kw -> DECREASES
-- On EXT_AT reduce production clause_kw -> DECREASES
-- On EXITS reduce production clause_kw -> DECREASES
-- On EOF reduce production clause_kw -> DECREASES
-- On ENUM reduce production clause_kw -> DECREASES
-- On ENSURES reduce production clause_kw -> DECREASES
-- On ELSE reduce production clause_kw -> DECREASES
-- On DOUBLE reduce production clause_kw -> DECREASES
-- On DISJOINT reduce production clause_kw -> DECREASES
-- On DECREASES reduce production clause_kw -> DECREASES
-- On CONTRACT reduce production clause_kw -> DECREASES
-- On CONTINUES reduce production clause_kw -> DECREASES
-- On CONST reduce production clause_kw -> DECREASES
-- On COMPLETE reduce production clause_kw -> DECREASES
-- On CHAR reduce production clause_kw -> DECREASES
-- On CASE reduce production clause_kw -> DECREASES
-- On BREAKS reduce production clause_kw -> DECREASES
-- On BOOLEAN reduce production clause_kw -> DECREASES
-- On BOOL reduce production clause_kw -> DECREASES
-- On BEHAVIORS reduce production clause_kw -> DECREASES
-- On BEHAVIOR reduce production clause_kw -> DECREASES
-- On AXIOMATIC reduce production clause_kw -> DECREASES
-- On AXIOM reduce production clause_kw -> DECREASES
-- On ASSUMES reduce production clause_kw -> DECREASES
-- On ASSIGNS reduce production clause_kw -> DECREASES
-- On ALLOCATES reduce production clause_kw -> DECREASES

State 765:
## Known stack suffix:
## COMPLETE
## LR(1) items:
clause_kw -> COMPLETE . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production clause_kw -> COMPLETE
-- On VOLATILE reduce production clause_kw -> COMPLETE
-- On VOID reduce production clause_kw -> COMPLETE
-- On UNSIGNED reduce production clause_kw -> COMPLETE
-- On UNION reduce production clause_kw -> COMPLETE
-- On TYPENAME reduce production clause_kw -> COMPLETE
-- On TYPE reduce production clause_kw -> COMPLETE
-- On TERMINATES reduce production clause_kw -> COMPLETE
-- On STRUCT reduce production clause_kw -> COMPLETE
-- On STATIC reduce production clause_kw -> COMPLETE
-- On SIZEOF reduce production clause_kw -> COMPLETE
-- On SIGNED reduce production clause_kw -> COMPLETE
-- On SHORT reduce production clause_kw -> COMPLETE
-- On RETURNS reduce production clause_kw -> COMPLETE
-- On REQUIRES reduce production clause_kw -> COMPLETE
-- On REAL reduce production clause_kw -> COMPLETE
-- On READS reduce production clause_kw -> COMPLETE
-- On PREDICATE reduce production clause_kw -> COMPLETE
-- On MODULE reduce production clause_kw -> COMPLETE
-- On MODEL reduce production clause_kw -> COMPLETE
-- On LONG reduce production clause_kw -> COMPLETE
-- On LOGIC reduce production clause_kw -> COMPLETE
-- On LEMMA reduce production clause_kw -> COMPLETE
-- On LABEL reduce production clause_kw -> COMPLETE
-- On INTEGER reduce production clause_kw -> COMPLETE
-- On INT reduce production clause_kw -> COMPLETE
-- On INDUCTIVE reduce production clause_kw -> COMPLETE
-- On INCLUDE reduce production clause_kw -> COMPLETE
-- On IF reduce production clause_kw -> COMPLETE
-- On IDENTIFIER reduce production clause_kw -> COMPLETE
-- On GLOBAL reduce production clause_kw -> COMPLETE
-- On FUNCTION reduce production clause_kw -> COMPLETE
-- On FREES reduce production clause_kw -> COMPLETE
-- On FLOAT reduce production clause_kw -> COMPLETE
-- On EXT_LET reduce production clause_kw -> COMPLETE
-- On EXT_AT reduce production clause_kw -> COMPLETE
-- On EXITS reduce production clause_kw -> COMPLETE
-- On EOF reduce production clause_kw -> COMPLETE
-- On ENUM reduce production clause_kw -> COMPLETE
-- On ENSURES reduce production clause_kw -> COMPLETE
-- On ELSE reduce production clause_kw -> COMPLETE
-- On DOUBLE reduce production clause_kw -> COMPLETE
-- On DISJOINT reduce production clause_kw -> COMPLETE
-- On DECREASES reduce production clause_kw -> COMPLETE
-- On CONTRACT reduce production clause_kw -> COMPLETE
-- On CONTINUES reduce production clause_kw -> COMPLETE
-- On CONST reduce production clause_kw -> COMPLETE
-- On COMPLETE reduce production clause_kw -> COMPLETE
-- On CHAR reduce production clause_kw -> COMPLETE
-- On CASE reduce production clause_kw -> COMPLETE
-- On BREAKS reduce production clause_kw -> COMPLETE
-- On BOOLEAN reduce production clause_kw -> COMPLETE
-- On BOOL reduce production clause_kw -> COMPLETE
-- On BEHAVIORS reduce production clause_kw -> COMPLETE
-- On BEHAVIOR reduce production clause_kw -> COMPLETE
-- On AXIOMATIC reduce production clause_kw -> COMPLETE
-- On AXIOM reduce production clause_kw -> COMPLETE
-- On ASSUMES reduce production clause_kw -> COMPLETE
-- On ASSIGNS reduce production clause_kw -> COMPLETE
-- On ALLOCATES reduce production clause_kw -> COMPLETE

State 766:
## Known stack suffix:
## BEHAVIOR
## LR(1) items:
clause_kw -> BEHAVIOR . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production clause_kw -> BEHAVIOR
-- On VOLATILE reduce production clause_kw -> BEHAVIOR
-- On VOID reduce production clause_kw -> BEHAVIOR
-- On UNSIGNED reduce production clause_kw -> BEHAVIOR
-- On UNION reduce production clause_kw -> BEHAVIOR
-- On TYPENAME reduce production clause_kw -> BEHAVIOR
-- On TYPE reduce production clause_kw -> BEHAVIOR
-- On TERMINATES reduce production clause_kw -> BEHAVIOR
-- On STRUCT reduce production clause_kw -> BEHAVIOR
-- On STATIC reduce production clause_kw -> BEHAVIOR
-- On SIZEOF reduce production clause_kw -> BEHAVIOR
-- On SIGNED reduce production clause_kw -> BEHAVIOR
-- On SHORT reduce production clause_kw -> BEHAVIOR
-- On RETURNS reduce production clause_kw -> BEHAVIOR
-- On REQUIRES reduce production clause_kw -> BEHAVIOR
-- On REAL reduce production clause_kw -> BEHAVIOR
-- On READS reduce production clause_kw -> BEHAVIOR
-- On PREDICATE reduce production clause_kw -> BEHAVIOR
-- On MODULE reduce production clause_kw -> BEHAVIOR
-- On MODEL reduce production clause_kw -> BEHAVIOR
-- On LONG reduce production clause_kw -> BEHAVIOR
-- On LOGIC reduce production clause_kw -> BEHAVIOR
-- On LEMMA reduce production clause_kw -> BEHAVIOR
-- On LABEL reduce production clause_kw -> BEHAVIOR
-- On INTEGER reduce production clause_kw -> BEHAVIOR
-- On INT reduce production clause_kw -> BEHAVIOR
-- On INDUCTIVE reduce production clause_kw -> BEHAVIOR
-- On INCLUDE reduce production clause_kw -> BEHAVIOR
-- On IF reduce production clause_kw -> BEHAVIOR
-- On IDENTIFIER reduce production clause_kw -> BEHAVIOR
-- On GLOBAL reduce production clause_kw -> BEHAVIOR
-- On FUNCTION reduce production clause_kw -> BEHAVIOR
-- On FREES reduce production clause_kw -> BEHAVIOR
-- On FLOAT reduce production clause_kw -> BEHAVIOR
-- On EXT_LET reduce production clause_kw -> BEHAVIOR
-- On EXT_AT reduce production clause_kw -> BEHAVIOR
-- On EXITS reduce production clause_kw -> BEHAVIOR
-- On EOF reduce production clause_kw -> BEHAVIOR
-- On ENUM reduce production clause_kw -> BEHAVIOR
-- On ENSURES reduce production clause_kw -> BEHAVIOR
-- On ELSE reduce production clause_kw -> BEHAVIOR
-- On DOUBLE reduce production clause_kw -> BEHAVIOR
-- On DISJOINT reduce production clause_kw -> BEHAVIOR
-- On DECREASES reduce production clause_kw -> BEHAVIOR
-- On CONTRACT reduce production clause_kw -> BEHAVIOR
-- On CONTINUES reduce production clause_kw -> BEHAVIOR
-- On CONST reduce production clause_kw -> BEHAVIOR
-- On COMPLETE reduce production clause_kw -> BEHAVIOR
-- On CHAR reduce production clause_kw -> BEHAVIOR
-- On CASE reduce production clause_kw -> BEHAVIOR
-- On BREAKS reduce production clause_kw -> BEHAVIOR
-- On BOOLEAN reduce production clause_kw -> BEHAVIOR
-- On BOOL reduce production clause_kw -> BEHAVIOR
-- On BEHAVIORS reduce production clause_kw -> BEHAVIOR
-- On BEHAVIOR reduce production clause_kw -> BEHAVIOR
-- On AXIOMATIC reduce production clause_kw -> BEHAVIOR
-- On AXIOM reduce production clause_kw -> BEHAVIOR
-- On ASSUMES reduce production clause_kw -> BEHAVIOR
-- On ASSIGNS reduce production clause_kw -> BEHAVIOR
-- On ALLOCATES reduce production clause_kw -> BEHAVIOR

State 767:
## Known stack suffix:
## ASSUMES
## LR(1) items:
clause_kw -> ASSUMES . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production clause_kw -> ASSUMES
-- On VOLATILE reduce production clause_kw -> ASSUMES
-- On VOID reduce production clause_kw -> ASSUMES
-- On UNSIGNED reduce production clause_kw -> ASSUMES
-- On UNION reduce production clause_kw -> ASSUMES
-- On TYPENAME reduce production clause_kw -> ASSUMES
-- On TYPE reduce production clause_kw -> ASSUMES
-- On TERMINATES reduce production clause_kw -> ASSUMES
-- On STRUCT reduce production clause_kw -> ASSUMES
-- On STATIC reduce production clause_kw -> ASSUMES
-- On SIZEOF reduce production clause_kw -> ASSUMES
-- On SIGNED reduce production clause_kw -> ASSUMES
-- On SHORT reduce production clause_kw -> ASSUMES
-- On RETURNS reduce production clause_kw -> ASSUMES
-- On REQUIRES reduce production clause_kw -> ASSUMES
-- On REAL reduce production clause_kw -> ASSUMES
-- On READS reduce production clause_kw -> ASSUMES
-- On PREDICATE reduce production clause_kw -> ASSUMES
-- On MODULE reduce production clause_kw -> ASSUMES
-- On MODEL reduce production clause_kw -> ASSUMES
-- On LONG reduce production clause_kw -> ASSUMES
-- On LOGIC reduce production clause_kw -> ASSUMES
-- On LEMMA reduce production clause_kw -> ASSUMES
-- On LABEL reduce production clause_kw -> ASSUMES
-- On INTEGER reduce production clause_kw -> ASSUMES
-- On INT reduce production clause_kw -> ASSUMES
-- On INDUCTIVE reduce production clause_kw -> ASSUMES
-- On INCLUDE reduce production clause_kw -> ASSUMES
-- On IF reduce production clause_kw -> ASSUMES
-- On IDENTIFIER reduce production clause_kw -> ASSUMES
-- On GLOBAL reduce production clause_kw -> ASSUMES
-- On FUNCTION reduce production clause_kw -> ASSUMES
-- On FREES reduce production clause_kw -> ASSUMES
-- On FLOAT reduce production clause_kw -> ASSUMES
-- On EXT_LET reduce production clause_kw -> ASSUMES
-- On EXT_AT reduce production clause_kw -> ASSUMES
-- On EXITS reduce production clause_kw -> ASSUMES
-- On EOF reduce production clause_kw -> ASSUMES
-- On ENUM reduce production clause_kw -> ASSUMES
-- On ENSURES reduce production clause_kw -> ASSUMES
-- On ELSE reduce production clause_kw -> ASSUMES
-- On DOUBLE reduce production clause_kw -> ASSUMES
-- On DISJOINT reduce production clause_kw -> ASSUMES
-- On DECREASES reduce production clause_kw -> ASSUMES
-- On CONTRACT reduce production clause_kw -> ASSUMES
-- On CONTINUES reduce production clause_kw -> ASSUMES
-- On CONST reduce production clause_kw -> ASSUMES
-- On COMPLETE reduce production clause_kw -> ASSUMES
-- On CHAR reduce production clause_kw -> ASSUMES
-- On CASE reduce production clause_kw -> ASSUMES
-- On BREAKS reduce production clause_kw -> ASSUMES
-- On BOOLEAN reduce production clause_kw -> ASSUMES
-- On BOOL reduce production clause_kw -> ASSUMES
-- On BEHAVIORS reduce production clause_kw -> ASSUMES
-- On BEHAVIOR reduce production clause_kw -> ASSUMES
-- On AXIOMATIC reduce production clause_kw -> ASSUMES
-- On AXIOM reduce production clause_kw -> ASSUMES
-- On ASSUMES reduce production clause_kw -> ASSUMES
-- On ASSIGNS reduce production clause_kw -> ASSUMES
-- On ALLOCATES reduce production clause_kw -> ASSUMES

State 768:
## Known stack suffix:
## ASSIGNS
## LR(1) items:
clause_kw -> ASSIGNS . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production clause_kw -> ASSIGNS
-- On VOLATILE reduce production clause_kw -> ASSIGNS
-- On VOID reduce production clause_kw -> ASSIGNS
-- On UNSIGNED reduce production clause_kw -> ASSIGNS
-- On UNION reduce production clause_kw -> ASSIGNS
-- On TYPENAME reduce production clause_kw -> ASSIGNS
-- On TYPE reduce production clause_kw -> ASSIGNS
-- On TERMINATES reduce production clause_kw -> ASSIGNS
-- On STRUCT reduce production clause_kw -> ASSIGNS
-- On STATIC reduce production clause_kw -> ASSIGNS
-- On SIZEOF reduce production clause_kw -> ASSIGNS
-- On SIGNED reduce production clause_kw -> ASSIGNS
-- On SHORT reduce production clause_kw -> ASSIGNS
-- On RETURNS reduce production clause_kw -> ASSIGNS
-- On REQUIRES reduce production clause_kw -> ASSIGNS
-- On REAL reduce production clause_kw -> ASSIGNS
-- On READS reduce production clause_kw -> ASSIGNS
-- On PREDICATE reduce production clause_kw -> ASSIGNS
-- On MODULE reduce production clause_kw -> ASSIGNS
-- On MODEL reduce production clause_kw -> ASSIGNS
-- On LONG reduce production clause_kw -> ASSIGNS
-- On LOGIC reduce production clause_kw -> ASSIGNS
-- On LEMMA reduce production clause_kw -> ASSIGNS
-- On LABEL reduce production clause_kw -> ASSIGNS
-- On INTEGER reduce production clause_kw -> ASSIGNS
-- On INT reduce production clause_kw -> ASSIGNS
-- On INDUCTIVE reduce production clause_kw -> ASSIGNS
-- On INCLUDE reduce production clause_kw -> ASSIGNS
-- On IF reduce production clause_kw -> ASSIGNS
-- On IDENTIFIER reduce production clause_kw -> ASSIGNS
-- On GLOBAL reduce production clause_kw -> ASSIGNS
-- On FUNCTION reduce production clause_kw -> ASSIGNS
-- On FREES reduce production clause_kw -> ASSIGNS
-- On FLOAT reduce production clause_kw -> ASSIGNS
-- On EXT_LET reduce production clause_kw -> ASSIGNS
-- On EXT_AT reduce production clause_kw -> ASSIGNS
-- On EXITS reduce production clause_kw -> ASSIGNS
-- On EOF reduce production clause_kw -> ASSIGNS
-- On ENUM reduce production clause_kw -> ASSIGNS
-- On ENSURES reduce production clause_kw -> ASSIGNS
-- On ELSE reduce production clause_kw -> ASSIGNS
-- On DOUBLE reduce production clause_kw -> ASSIGNS
-- On DISJOINT reduce production clause_kw -> ASSIGNS
-- On DECREASES reduce production clause_kw -> ASSIGNS
-- On CONTRACT reduce production clause_kw -> ASSIGNS
-- On CONTINUES reduce production clause_kw -> ASSIGNS
-- On CONST reduce production clause_kw -> ASSIGNS
-- On COMPLETE reduce production clause_kw -> ASSIGNS
-- On CHAR reduce production clause_kw -> ASSIGNS
-- On CASE reduce production clause_kw -> ASSIGNS
-- On BREAKS reduce production clause_kw -> ASSIGNS
-- On BOOLEAN reduce production clause_kw -> ASSIGNS
-- On BOOL reduce production clause_kw -> ASSIGNS
-- On BEHAVIORS reduce production clause_kw -> ASSIGNS
-- On BEHAVIOR reduce production clause_kw -> ASSIGNS
-- On AXIOMATIC reduce production clause_kw -> ASSIGNS
-- On AXIOM reduce production clause_kw -> ASSIGNS
-- On ASSUMES reduce production clause_kw -> ASSIGNS
-- On ASSIGNS reduce production clause_kw -> ASSIGNS
-- On ALLOCATES reduce production clause_kw -> ASSIGNS

State 769:
## Known stack suffix:
## ALLOCATES
## LR(1) items:
clause_kw -> ALLOCATES . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production clause_kw -> ALLOCATES
-- On VOLATILE reduce production clause_kw -> ALLOCATES
-- On VOID reduce production clause_kw -> ALLOCATES
-- On UNSIGNED reduce production clause_kw -> ALLOCATES
-- On UNION reduce production clause_kw -> ALLOCATES
-- On TYPENAME reduce production clause_kw -> ALLOCATES
-- On TYPE reduce production clause_kw -> ALLOCATES
-- On TERMINATES reduce production clause_kw -> ALLOCATES
-- On STRUCT reduce production clause_kw -> ALLOCATES
-- On STATIC reduce production clause_kw -> ALLOCATES
-- On SIZEOF reduce production clause_kw -> ALLOCATES
-- On SIGNED reduce production clause_kw -> ALLOCATES
-- On SHORT reduce production clause_kw -> ALLOCATES
-- On RETURNS reduce production clause_kw -> ALLOCATES
-- On REQUIRES reduce production clause_kw -> ALLOCATES
-- On REAL reduce production clause_kw -> ALLOCATES
-- On READS reduce production clause_kw -> ALLOCATES
-- On PREDICATE reduce production clause_kw -> ALLOCATES
-- On MODULE reduce production clause_kw -> ALLOCATES
-- On MODEL reduce production clause_kw -> ALLOCATES
-- On LONG reduce production clause_kw -> ALLOCATES
-- On LOGIC reduce production clause_kw -> ALLOCATES
-- On LEMMA reduce production clause_kw -> ALLOCATES
-- On LABEL reduce production clause_kw -> ALLOCATES
-- On INTEGER reduce production clause_kw -> ALLOCATES
-- On INT reduce production clause_kw -> ALLOCATES
-- On INDUCTIVE reduce production clause_kw -> ALLOCATES
-- On INCLUDE reduce production clause_kw -> ALLOCATES
-- On IF reduce production clause_kw -> ALLOCATES
-- On IDENTIFIER reduce production clause_kw -> ALLOCATES
-- On GLOBAL reduce production clause_kw -> ALLOCATES
-- On FUNCTION reduce production clause_kw -> ALLOCATES
-- On FREES reduce production clause_kw -> ALLOCATES
-- On FLOAT reduce production clause_kw -> ALLOCATES
-- On EXT_LET reduce production clause_kw -> ALLOCATES
-- On EXT_AT reduce production clause_kw -> ALLOCATES
-- On EXITS reduce production clause_kw -> ALLOCATES
-- On EOF reduce production clause_kw -> ALLOCATES
-- On ENUM reduce production clause_kw -> ALLOCATES
-- On ENSURES reduce production clause_kw -> ALLOCATES
-- On ELSE reduce production clause_kw -> ALLOCATES
-- On DOUBLE reduce production clause_kw -> ALLOCATES
-- On DISJOINT reduce production clause_kw -> ALLOCATES
-- On DECREASES reduce production clause_kw -> ALLOCATES
-- On CONTRACT reduce production clause_kw -> ALLOCATES
-- On CONTINUES reduce production clause_kw -> ALLOCATES
-- On CONST reduce production clause_kw -> ALLOCATES
-- On COMPLETE reduce production clause_kw -> ALLOCATES
-- On CHAR reduce production clause_kw -> ALLOCATES
-- On CASE reduce production clause_kw -> ALLOCATES
-- On BREAKS reduce production clause_kw -> ALLOCATES
-- On BOOLEAN reduce production clause_kw -> ALLOCATES
-- On BOOL reduce production clause_kw -> ALLOCATES
-- On BEHAVIORS reduce production clause_kw -> ALLOCATES
-- On BEHAVIOR reduce production clause_kw -> ALLOCATES
-- On AXIOMATIC reduce production clause_kw -> ALLOCATES
-- On AXIOM reduce production clause_kw -> ALLOCATES
-- On ASSUMES reduce production clause_kw -> ALLOCATES
-- On ASSIGNS reduce production clause_kw -> ALLOCATES
-- On ALLOCATES reduce production clause_kw -> ALLOCATES

State 770:
## Known stack suffix:
## post_cond
## LR(1) items:
clause_kw -> post_cond . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production clause_kw -> post_cond
-- On VOLATILE reduce production clause_kw -> post_cond
-- On VOID reduce production clause_kw -> post_cond
-- On UNSIGNED reduce production clause_kw -> post_cond
-- On UNION reduce production clause_kw -> post_cond
-- On TYPENAME reduce production clause_kw -> post_cond
-- On TYPE reduce production clause_kw -> post_cond
-- On TERMINATES reduce production clause_kw -> post_cond
-- On STRUCT reduce production clause_kw -> post_cond
-- On STATIC reduce production clause_kw -> post_cond
-- On SIZEOF reduce production clause_kw -> post_cond
-- On SIGNED reduce production clause_kw -> post_cond
-- On SHORT reduce production clause_kw -> post_cond
-- On RETURNS reduce production clause_kw -> post_cond
-- On REQUIRES reduce production clause_kw -> post_cond
-- On REAL reduce production clause_kw -> post_cond
-- On READS reduce production clause_kw -> post_cond
-- On PREDICATE reduce production clause_kw -> post_cond
-- On MODULE reduce production clause_kw -> post_cond
-- On MODEL reduce production clause_kw -> post_cond
-- On LONG reduce production clause_kw -> post_cond
-- On LOGIC reduce production clause_kw -> post_cond
-- On LEMMA reduce production clause_kw -> post_cond
-- On LABEL reduce production clause_kw -> post_cond
-- On INTEGER reduce production clause_kw -> post_cond
-- On INT reduce production clause_kw -> post_cond
-- On INDUCTIVE reduce production clause_kw -> post_cond
-- On INCLUDE reduce production clause_kw -> post_cond
-- On IF reduce production clause_kw -> post_cond
-- On IDENTIFIER reduce production clause_kw -> post_cond
-- On GLOBAL reduce production clause_kw -> post_cond
-- On FUNCTION reduce production clause_kw -> post_cond
-- On FREES reduce production clause_kw -> post_cond
-- On FLOAT reduce production clause_kw -> post_cond
-- On EXT_LET reduce production clause_kw -> post_cond
-- On EXT_AT reduce production clause_kw -> post_cond
-- On EXITS reduce production clause_kw -> post_cond
-- On EOF reduce production clause_kw -> post_cond
-- On ENUM reduce production clause_kw -> post_cond
-- On ENSURES reduce production clause_kw -> post_cond
-- On ELSE reduce production clause_kw -> post_cond
-- On DOUBLE reduce production clause_kw -> post_cond
-- On DISJOINT reduce production clause_kw -> post_cond
-- On DECREASES reduce production clause_kw -> post_cond
-- On CONTRACT reduce production clause_kw -> post_cond
-- On CONTINUES reduce production clause_kw -> post_cond
-- On CONST reduce production clause_kw -> post_cond
-- On COMPLETE reduce production clause_kw -> post_cond
-- On CHAR reduce production clause_kw -> post_cond
-- On CASE reduce production clause_kw -> post_cond
-- On BREAKS reduce production clause_kw -> post_cond
-- On BOOLEAN reduce production clause_kw -> post_cond
-- On BOOL reduce production clause_kw -> post_cond
-- On BEHAVIORS reduce production clause_kw -> post_cond
-- On BEHAVIOR reduce production clause_kw -> post_cond
-- On AXIOMATIC reduce production clause_kw -> post_cond
-- On AXIOM reduce production clause_kw -> post_cond
-- On ASSUMES reduce production clause_kw -> post_cond
-- On ASSIGNS reduce production clause_kw -> post_cond
-- On ALLOCATES reduce production clause_kw -> post_cond

State 771:
## Known stack suffix:
## REQUIRES full_lexpr clause_kw
## LR(1) items:
ne_requires -> REQUIRES full_lexpr clause_kw . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On VOLATILE reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On VOID reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On UNSIGNED reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On UNION reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On TYPENAME reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On TYPE reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On TERMINATES reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On STRUCT reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On STATIC reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On SIZEOF reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On SIGNED reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On SHORT reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On RETURNS reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On REAL reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On READS reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On PREDICATE reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On MODULE reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On MODEL reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On LONG reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On LOGIC reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On LEMMA reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On LABEL reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On INTEGER reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On INT reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On INDUCTIVE reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On INCLUDE reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On IF reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On IDENTIFIER reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On GLOBAL reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On FUNCTION reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On FREES reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On FLOAT reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On EXT_LET reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On EXT_AT reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On EXITS reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On EOF reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On ENUM reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On ENSURES reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On ELSE reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On DOUBLE reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On DISJOINT reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On DECREASES reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On CONTRACT reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On CONTINUES reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On CONST reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On COMPLETE reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On CHAR reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On CASE reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On BREAKS reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On BOOLEAN reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On BOOL reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On BEHAVIORS reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On BEHAVIOR reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On AXIOMATIC reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On AXIOM reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On ASSUMES reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On ASSIGNS reduce production ne_requires -> REQUIRES full_lexpr clause_kw
-- On ALLOCATES reduce production ne_requires -> REQUIRES full_lexpr clause_kw

State 772:
## Known stack suffix:
## FOR ne_behavior_name_list COLON INVARIANT
## LR(1) items:
code_annotation -> FOR ne_behavior_name_list COLON INVARIANT . full_lexpr SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
-- On full_lexpr shift to state 773
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 773:
## Known stack suffix:
## FOR ne_behavior_name_list COLON INVARIANT full_lexpr
## LR(1) items:
code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr . SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
-- On SEMICOLON shift to state 774
## Reductions:

State 774:
## Known stack suffix:
## FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
## LR(1) items:
code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON . [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On TYPE reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On SLICE reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On PREDICATE reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On MODULE reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On MODEL reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On LOGIC reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On LEMMA reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On INVARIANT reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On INDUCTIVE reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On INCLUDE reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On IMPACT reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On GLOBAL reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On FUNCTION reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On FOR reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On EXT_LET reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On EXT_AT reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On EOF reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On CONTRACT reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On AXIOMATIC reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On AXIOM reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON
-- On ASSERT reduce production code_annotation -> FOR ne_behavior_name_list COLON INVARIANT full_lexpr SEMICOLON

State 775:
## Known stack suffix:
## FOR
## LR(1) items:
loop_annot_stack -> FOR . ne_behavior_name_list COLON loop_annot_stack [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_behavior_name_list shift to state 776
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On behavior_name shift to state 792
-- On any_identifier shift to state 795
-- On acsl_c_keyword shift to state 87
## Reductions:

State 776:
## Known stack suffix:
## FOR ne_behavior_name_list
## LR(1) items:
loop_annot_stack -> FOR ne_behavior_name_list . COLON loop_annot_stack [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On COLON shift to state 777
## Reductions:

State 777:
## Known stack suffix:
## FOR ne_behavior_name_list COLON
## LR(1) items:
loop_annot_stack -> FOR ne_behavior_name_list COLON . loop_annot_stack [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On LOOP shift to state 656
-- On FOR shift to state 775
-- On loop_variant shift to state 778
-- On loop_pragma shift to state 779
-- On loop_invariant shift to state 780
-- On loop_grammar_extension shift to state 781
-- On loop_effects shift to state 782
-- On loop_annot_stack shift to state 791
-- On loop_allocation shift to state 785
## Reductions:

State 778:
## Known stack suffix:
## loop_variant
## LR(1) items:
loop_annot_stack -> loop_variant . loop_annot_opt [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On LOOP shift to state 656
-- On FOR shift to state 775
-- On loop_variant shift to state 778
-- On loop_pragma shift to state 779
-- On loop_invariant shift to state 780
-- On loop_grammar_extension shift to state 781
-- On loop_effects shift to state 782
-- On loop_annot_stack shift to state 783
-- On loop_annot_opt shift to state 790
-- On loop_allocation shift to state 785
## Reductions:
-- On VOLATILE reduce production loop_annot_opt ->
-- On TYPE reduce production loop_annot_opt ->
-- On PREDICATE reduce production loop_annot_opt ->
-- On MODULE reduce production loop_annot_opt ->
-- On MODEL reduce production loop_annot_opt ->
-- On LOGIC reduce production loop_annot_opt ->
-- On LEMMA reduce production loop_annot_opt ->
-- On INDUCTIVE reduce production loop_annot_opt ->
-- On INCLUDE reduce production loop_annot_opt ->
-- On GLOBAL reduce production loop_annot_opt ->
-- On FUNCTION reduce production loop_annot_opt ->
-- On EXT_LET reduce production loop_annot_opt ->
-- On EXT_AT reduce production loop_annot_opt ->
-- On EOF reduce production loop_annot_opt ->
-- On CONTRACT reduce production loop_annot_opt ->
-- On AXIOMATIC reduce production loop_annot_opt ->
-- On AXIOM reduce production loop_annot_opt ->

State 779:
## Known stack suffix:
## loop_pragma
## LR(1) items:
loop_annot_stack -> loop_pragma . loop_annot_opt [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On LOOP shift to state 656
-- On FOR shift to state 775
-- On loop_variant shift to state 778
-- On loop_pragma shift to state 779
-- On loop_invariant shift to state 780
-- On loop_grammar_extension shift to state 781
-- On loop_effects shift to state 782
-- On loop_annot_stack shift to state 783
-- On loop_annot_opt shift to state 789
-- On loop_allocation shift to state 785
## Reductions:
-- On VOLATILE reduce production loop_annot_opt ->
-- On TYPE reduce production loop_annot_opt ->
-- On PREDICATE reduce production loop_annot_opt ->
-- On MODULE reduce production loop_annot_opt ->
-- On MODEL reduce production loop_annot_opt ->
-- On LOGIC reduce production loop_annot_opt ->
-- On LEMMA reduce production loop_annot_opt ->
-- On INDUCTIVE reduce production loop_annot_opt ->
-- On INCLUDE reduce production loop_annot_opt ->
-- On GLOBAL reduce production loop_annot_opt ->
-- On FUNCTION reduce production loop_annot_opt ->
-- On EXT_LET reduce production loop_annot_opt ->
-- On EXT_AT reduce production loop_annot_opt ->
-- On EOF reduce production loop_annot_opt ->
-- On CONTRACT reduce production loop_annot_opt ->
-- On AXIOMATIC reduce production loop_annot_opt ->
-- On AXIOM reduce production loop_annot_opt ->

State 780:
## Known stack suffix:
## loop_invariant
## LR(1) items:
loop_annot_stack -> loop_invariant . loop_annot_opt [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On LOOP shift to state 656
-- On FOR shift to state 775
-- On loop_variant shift to state 778
-- On loop_pragma shift to state 779
-- On loop_invariant shift to state 780
-- On loop_grammar_extension shift to state 781
-- On loop_effects shift to state 782
-- On loop_annot_stack shift to state 783
-- On loop_annot_opt shift to state 788
-- On loop_allocation shift to state 785
## Reductions:
-- On VOLATILE reduce production loop_annot_opt ->
-- On TYPE reduce production loop_annot_opt ->
-- On PREDICATE reduce production loop_annot_opt ->
-- On MODULE reduce production loop_annot_opt ->
-- On MODEL reduce production loop_annot_opt ->
-- On LOGIC reduce production loop_annot_opt ->
-- On LEMMA reduce production loop_annot_opt ->
-- On INDUCTIVE reduce production loop_annot_opt ->
-- On INCLUDE reduce production loop_annot_opt ->
-- On GLOBAL reduce production loop_annot_opt ->
-- On FUNCTION reduce production loop_annot_opt ->
-- On EXT_LET reduce production loop_annot_opt ->
-- On EXT_AT reduce production loop_annot_opt ->
-- On EOF reduce production loop_annot_opt ->
-- On CONTRACT reduce production loop_annot_opt ->
-- On AXIOMATIC reduce production loop_annot_opt ->
-- On AXIOM reduce production loop_annot_opt ->

State 781:
## Known stack suffix:
## loop_grammar_extension
## LR(1) items:
loop_annot_stack -> loop_grammar_extension . loop_annot_opt [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On LOOP shift to state 656
-- On FOR shift to state 775
-- On loop_variant shift to state 778
-- On loop_pragma shift to state 779
-- On loop_invariant shift to state 780
-- On loop_grammar_extension shift to state 781
-- On loop_effects shift to state 782
-- On loop_annot_stack shift to state 783
-- On loop_annot_opt shift to state 787
-- On loop_allocation shift to state 785
## Reductions:
-- On VOLATILE reduce production loop_annot_opt ->
-- On TYPE reduce production loop_annot_opt ->
-- On PREDICATE reduce production loop_annot_opt ->
-- On MODULE reduce production loop_annot_opt ->
-- On MODEL reduce production loop_annot_opt ->
-- On LOGIC reduce production loop_annot_opt ->
-- On LEMMA reduce production loop_annot_opt ->
-- On INDUCTIVE reduce production loop_annot_opt ->
-- On INCLUDE reduce production loop_annot_opt ->
-- On GLOBAL reduce production loop_annot_opt ->
-- On FUNCTION reduce production loop_annot_opt ->
-- On EXT_LET reduce production loop_annot_opt ->
-- On EXT_AT reduce production loop_annot_opt ->
-- On EOF reduce production loop_annot_opt ->
-- On CONTRACT reduce production loop_annot_opt ->
-- On AXIOMATIC reduce production loop_annot_opt ->
-- On AXIOM reduce production loop_annot_opt ->

State 782:
## Known stack suffix:
## loop_effects
## LR(1) items:
loop_annot_stack -> loop_effects . loop_annot_opt [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On LOOP shift to state 656
-- On FOR shift to state 775
-- On loop_variant shift to state 778
-- On loop_pragma shift to state 779
-- On loop_invariant shift to state 780
-- On loop_grammar_extension shift to state 781
-- On loop_effects shift to state 782
-- On loop_annot_stack shift to state 783
-- On loop_annot_opt shift to state 784
-- On loop_allocation shift to state 785
## Reductions:
-- On VOLATILE reduce production loop_annot_opt ->
-- On TYPE reduce production loop_annot_opt ->
-- On PREDICATE reduce production loop_annot_opt ->
-- On MODULE reduce production loop_annot_opt ->
-- On MODEL reduce production loop_annot_opt ->
-- On LOGIC reduce production loop_annot_opt ->
-- On LEMMA reduce production loop_annot_opt ->
-- On INDUCTIVE reduce production loop_annot_opt ->
-- On INCLUDE reduce production loop_annot_opt ->
-- On GLOBAL reduce production loop_annot_opt ->
-- On FUNCTION reduce production loop_annot_opt ->
-- On EXT_LET reduce production loop_annot_opt ->
-- On EXT_AT reduce production loop_annot_opt ->
-- On EOF reduce production loop_annot_opt ->
-- On CONTRACT reduce production loop_annot_opt ->
-- On AXIOMATIC reduce production loop_annot_opt ->
-- On AXIOM reduce production loop_annot_opt ->

State 783:
## Known stack suffix:
## loop_annot_stack
## LR(1) items:
loop_annot_opt -> loop_annot_stack . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production loop_annot_opt -> loop_annot_stack
-- On TYPE reduce production loop_annot_opt -> loop_annot_stack
-- On PREDICATE reduce production loop_annot_opt -> loop_annot_stack
-- On MODULE reduce production loop_annot_opt -> loop_annot_stack
-- On MODEL reduce production loop_annot_opt -> loop_annot_stack
-- On LOGIC reduce production loop_annot_opt -> loop_annot_stack
-- On LEMMA reduce production loop_annot_opt -> loop_annot_stack
-- On INDUCTIVE reduce production loop_annot_opt -> loop_annot_stack
-- On INCLUDE reduce production loop_annot_opt -> loop_annot_stack
-- On GLOBAL reduce production loop_annot_opt -> loop_annot_stack
-- On FUNCTION reduce production loop_annot_opt -> loop_annot_stack
-- On EXT_LET reduce production loop_annot_opt -> loop_annot_stack
-- On EXT_AT reduce production loop_annot_opt -> loop_annot_stack
-- On EOF reduce production loop_annot_opt -> loop_annot_stack
-- On CONTRACT reduce production loop_annot_opt -> loop_annot_stack
-- On AXIOMATIC reduce production loop_annot_opt -> loop_annot_stack
-- On AXIOM reduce production loop_annot_opt -> loop_annot_stack

State 784:
## Known stack suffix:
## loop_effects loop_annot_opt
## LR(1) items:
loop_annot_stack -> loop_effects loop_annot_opt . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production loop_annot_stack -> loop_effects loop_annot_opt
-- On TYPE reduce production loop_annot_stack -> loop_effects loop_annot_opt
-- On PREDICATE reduce production loop_annot_stack -> loop_effects loop_annot_opt
-- On MODULE reduce production loop_annot_stack -> loop_effects loop_annot_opt
-- On MODEL reduce production loop_annot_stack -> loop_effects loop_annot_opt
-- On LOGIC reduce production loop_annot_stack -> loop_effects loop_annot_opt
-- On LEMMA reduce production loop_annot_stack -> loop_effects loop_annot_opt
-- On INDUCTIVE reduce production loop_annot_stack -> loop_effects loop_annot_opt
-- On INCLUDE reduce production loop_annot_stack -> loop_effects loop_annot_opt
-- On GLOBAL reduce production loop_annot_stack -> loop_effects loop_annot_opt
-- On FUNCTION reduce production loop_annot_stack -> loop_effects loop_annot_opt
-- On EXT_LET reduce production loop_annot_stack -> loop_effects loop_annot_opt
-- On EXT_AT reduce production loop_annot_stack -> loop_effects loop_annot_opt
-- On EOF reduce production loop_annot_stack -> loop_effects loop_annot_opt
-- On CONTRACT reduce production loop_annot_stack -> loop_effects loop_annot_opt
-- On AXIOMATIC reduce production loop_annot_stack -> loop_effects loop_annot_opt
-- On AXIOM reduce production loop_annot_stack -> loop_effects loop_annot_opt

State 785:
## Known stack suffix:
## loop_allocation
## LR(1) items:
loop_annot_stack -> loop_allocation . loop_annot_opt [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On LOOP shift to state 656
-- On FOR shift to state 775
-- On loop_variant shift to state 778
-- On loop_pragma shift to state 779
-- On loop_invariant shift to state 780
-- On loop_grammar_extension shift to state 781
-- On loop_effects shift to state 782
-- On loop_annot_stack shift to state 783
-- On loop_annot_opt shift to state 786
-- On loop_allocation shift to state 785
## Reductions:
-- On VOLATILE reduce production loop_annot_opt ->
-- On TYPE reduce production loop_annot_opt ->
-- On PREDICATE reduce production loop_annot_opt ->
-- On MODULE reduce production loop_annot_opt ->
-- On MODEL reduce production loop_annot_opt ->
-- On LOGIC reduce production loop_annot_opt ->
-- On LEMMA reduce production loop_annot_opt ->
-- On INDUCTIVE reduce production loop_annot_opt ->
-- On INCLUDE reduce production loop_annot_opt ->
-- On GLOBAL reduce production loop_annot_opt ->
-- On FUNCTION reduce production loop_annot_opt ->
-- On EXT_LET reduce production loop_annot_opt ->
-- On EXT_AT reduce production loop_annot_opt ->
-- On EOF reduce production loop_annot_opt ->
-- On CONTRACT reduce production loop_annot_opt ->
-- On AXIOMATIC reduce production loop_annot_opt ->
-- On AXIOM reduce production loop_annot_opt ->

State 786:
## Known stack suffix:
## loop_allocation loop_annot_opt
## LR(1) items:
loop_annot_stack -> loop_allocation loop_annot_opt . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production loop_annot_stack -> loop_allocation loop_annot_opt
-- On TYPE reduce production loop_annot_stack -> loop_allocation loop_annot_opt
-- On PREDICATE reduce production loop_annot_stack -> loop_allocation loop_annot_opt
-- On MODULE reduce production loop_annot_stack -> loop_allocation loop_annot_opt
-- On MODEL reduce production loop_annot_stack -> loop_allocation loop_annot_opt
-- On LOGIC reduce production loop_annot_stack -> loop_allocation loop_annot_opt
-- On LEMMA reduce production loop_annot_stack -> loop_allocation loop_annot_opt
-- On INDUCTIVE reduce production loop_annot_stack -> loop_allocation loop_annot_opt
-- On INCLUDE reduce production loop_annot_stack -> loop_allocation loop_annot_opt
-- On GLOBAL reduce production loop_annot_stack -> loop_allocation loop_annot_opt
-- On FUNCTION reduce production loop_annot_stack -> loop_allocation loop_annot_opt
-- On EXT_LET reduce production loop_annot_stack -> loop_allocation loop_annot_opt
-- On EXT_AT reduce production loop_annot_stack -> loop_allocation loop_annot_opt
-- On EOF reduce production loop_annot_stack -> loop_allocation loop_annot_opt
-- On CONTRACT reduce production loop_annot_stack -> loop_allocation loop_annot_opt
-- On AXIOMATIC reduce production loop_annot_stack -> loop_allocation loop_annot_opt
-- On AXIOM reduce production loop_annot_stack -> loop_allocation loop_annot_opt

State 787:
## Known stack suffix:
## loop_grammar_extension loop_annot_opt
## LR(1) items:
loop_annot_stack -> loop_grammar_extension loop_annot_opt . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production loop_annot_stack -> loop_grammar_extension loop_annot_opt
-- On TYPE reduce production loop_annot_stack -> loop_grammar_extension loop_annot_opt
-- On PREDICATE reduce production loop_annot_stack -> loop_grammar_extension loop_annot_opt
-- On MODULE reduce production loop_annot_stack -> loop_grammar_extension loop_annot_opt
-- On MODEL reduce production loop_annot_stack -> loop_grammar_extension loop_annot_opt
-- On LOGIC reduce production loop_annot_stack -> loop_grammar_extension loop_annot_opt
-- On LEMMA reduce production loop_annot_stack -> loop_grammar_extension loop_annot_opt
-- On INDUCTIVE reduce production loop_annot_stack -> loop_grammar_extension loop_annot_opt
-- On INCLUDE reduce production loop_annot_stack -> loop_grammar_extension loop_annot_opt
-- On GLOBAL reduce production loop_annot_stack -> loop_grammar_extension loop_annot_opt
-- On FUNCTION reduce production loop_annot_stack -> loop_grammar_extension loop_annot_opt
-- On EXT_LET reduce production loop_annot_stack -> loop_grammar_extension loop_annot_opt
-- On EXT_AT reduce production loop_annot_stack -> loop_grammar_extension loop_annot_opt
-- On EOF reduce production loop_annot_stack -> loop_grammar_extension loop_annot_opt
-- On CONTRACT reduce production loop_annot_stack -> loop_grammar_extension loop_annot_opt
-- On AXIOMATIC reduce production loop_annot_stack -> loop_grammar_extension loop_annot_opt
-- On AXIOM reduce production loop_annot_stack -> loop_grammar_extension loop_annot_opt

State 788:
## Known stack suffix:
## loop_invariant loop_annot_opt
## LR(1) items:
loop_annot_stack -> loop_invariant loop_annot_opt . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production loop_annot_stack -> loop_invariant loop_annot_opt
-- On TYPE reduce production loop_annot_stack -> loop_invariant loop_annot_opt
-- On PREDICATE reduce production loop_annot_stack -> loop_invariant loop_annot_opt
-- On MODULE reduce production loop_annot_stack -> loop_invariant loop_annot_opt
-- On MODEL reduce production loop_annot_stack -> loop_invariant loop_annot_opt
-- On LOGIC reduce production loop_annot_stack -> loop_invariant loop_annot_opt
-- On LEMMA reduce production loop_annot_stack -> loop_invariant loop_annot_opt
-- On INDUCTIVE reduce production loop_annot_stack -> loop_invariant loop_annot_opt
-- On INCLUDE reduce production loop_annot_stack -> loop_invariant loop_annot_opt
-- On GLOBAL reduce production loop_annot_stack -> loop_invariant loop_annot_opt
-- On FUNCTION reduce production loop_annot_stack -> loop_invariant loop_annot_opt
-- On EXT_LET reduce production loop_annot_stack -> loop_invariant loop_annot_opt
-- On EXT_AT reduce production loop_annot_stack -> loop_invariant loop_annot_opt
-- On EOF reduce production loop_annot_stack -> loop_invariant loop_annot_opt
-- On CONTRACT reduce production loop_annot_stack -> loop_invariant loop_annot_opt
-- On AXIOMATIC reduce production loop_annot_stack -> loop_invariant loop_annot_opt
-- On AXIOM reduce production loop_annot_stack -> loop_invariant loop_annot_opt

State 789:
## Known stack suffix:
## loop_pragma loop_annot_opt
## LR(1) items:
loop_annot_stack -> loop_pragma loop_annot_opt . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production loop_annot_stack -> loop_pragma loop_annot_opt
-- On TYPE reduce production loop_annot_stack -> loop_pragma loop_annot_opt
-- On PREDICATE reduce production loop_annot_stack -> loop_pragma loop_annot_opt
-- On MODULE reduce production loop_annot_stack -> loop_pragma loop_annot_opt
-- On MODEL reduce production loop_annot_stack -> loop_pragma loop_annot_opt
-- On LOGIC reduce production loop_annot_stack -> loop_pragma loop_annot_opt
-- On LEMMA reduce production loop_annot_stack -> loop_pragma loop_annot_opt
-- On INDUCTIVE reduce production loop_annot_stack -> loop_pragma loop_annot_opt
-- On INCLUDE reduce production loop_annot_stack -> loop_pragma loop_annot_opt
-- On GLOBAL reduce production loop_annot_stack -> loop_pragma loop_annot_opt
-- On FUNCTION reduce production loop_annot_stack -> loop_pragma loop_annot_opt
-- On EXT_LET reduce production loop_annot_stack -> loop_pragma loop_annot_opt
-- On EXT_AT reduce production loop_annot_stack -> loop_pragma loop_annot_opt
-- On EOF reduce production loop_annot_stack -> loop_pragma loop_annot_opt
-- On CONTRACT reduce production loop_annot_stack -> loop_pragma loop_annot_opt
-- On AXIOMATIC reduce production loop_annot_stack -> loop_pragma loop_annot_opt
-- On AXIOM reduce production loop_annot_stack -> loop_pragma loop_annot_opt

State 790:
## Known stack suffix:
## loop_variant loop_annot_opt
## LR(1) items:
loop_annot_stack -> loop_variant loop_annot_opt . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production loop_annot_stack -> loop_variant loop_annot_opt
-- On TYPE reduce production loop_annot_stack -> loop_variant loop_annot_opt
-- On PREDICATE reduce production loop_annot_stack -> loop_variant loop_annot_opt
-- On MODULE reduce production loop_annot_stack -> loop_variant loop_annot_opt
-- On MODEL reduce production loop_annot_stack -> loop_variant loop_annot_opt
-- On LOGIC reduce production loop_annot_stack -> loop_variant loop_annot_opt
-- On LEMMA reduce production loop_annot_stack -> loop_variant loop_annot_opt
-- On INDUCTIVE reduce production loop_annot_stack -> loop_variant loop_annot_opt
-- On INCLUDE reduce production loop_annot_stack -> loop_variant loop_annot_opt
-- On GLOBAL reduce production loop_annot_stack -> loop_variant loop_annot_opt
-- On FUNCTION reduce production loop_annot_stack -> loop_variant loop_annot_opt
-- On EXT_LET reduce production loop_annot_stack -> loop_variant loop_annot_opt
-- On EXT_AT reduce production loop_annot_stack -> loop_variant loop_annot_opt
-- On EOF reduce production loop_annot_stack -> loop_variant loop_annot_opt
-- On CONTRACT reduce production loop_annot_stack -> loop_variant loop_annot_opt
-- On AXIOMATIC reduce production loop_annot_stack -> loop_variant loop_annot_opt
-- On AXIOM reduce production loop_annot_stack -> loop_variant loop_annot_opt

State 791:
## Known stack suffix:
## FOR ne_behavior_name_list COLON loop_annot_stack
## LR(1) items:
loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack
-- On TYPE reduce production loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack
-- On PREDICATE reduce production loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack
-- On MODULE reduce production loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack
-- On MODEL reduce production loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack
-- On LOGIC reduce production loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack
-- On LEMMA reduce production loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack
-- On INDUCTIVE reduce production loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack
-- On INCLUDE reduce production loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack
-- On GLOBAL reduce production loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack
-- On FUNCTION reduce production loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack
-- On EXT_LET reduce production loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack
-- On EXT_AT reduce production loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack
-- On EOF reduce production loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack
-- On CONTRACT reduce production loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack
-- On AXIOMATIC reduce production loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack
-- On AXIOM reduce production loop_annot_stack -> FOR ne_behavior_name_list COLON loop_annot_stack

State 792:
## Known stack suffix:
## behavior_name
## LR(1) items:
ne_behavior_name_list -> behavior_name . [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COLON BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
ne_behavior_name_list -> behavior_name . COMMA ne_behavior_name_list [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COLON BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On COMMA shift to state 793
## Reductions:
-- On SEMICOLON reduce production ne_behavior_name_list -> behavior_name
-- On RETURNS reduce production ne_behavior_name_list -> behavior_name
-- On REQUIRES reduce production ne_behavior_name_list -> behavior_name
-- On IDENTIFIER reduce production ne_behavior_name_list -> behavior_name
-- On FREES reduce production ne_behavior_name_list -> behavior_name
-- On EXITS reduce production ne_behavior_name_list -> behavior_name
-- On EOF reduce production ne_behavior_name_list -> behavior_name
-- On ENSURES reduce production ne_behavior_name_list -> behavior_name
-- On DISJOINT reduce production ne_behavior_name_list -> behavior_name
-- On DECREASES reduce production ne_behavior_name_list -> behavior_name
-- On CONTINUES reduce production ne_behavior_name_list -> behavior_name
-- On COMPLETE reduce production ne_behavior_name_list -> behavior_name
-- On COLON reduce production ne_behavior_name_list -> behavior_name
-- On BREAKS reduce production ne_behavior_name_list -> behavior_name
-- On BEHAVIOR reduce production ne_behavior_name_list -> behavior_name
-- On ASSUMES reduce production ne_behavior_name_list -> behavior_name
-- On ASSIGNS reduce production ne_behavior_name_list -> behavior_name
-- On ALLOCATES reduce production ne_behavior_name_list -> behavior_name

State 793:
## Known stack suffix:
## behavior_name COMMA
## LR(1) items:
ne_behavior_name_list -> behavior_name COMMA . ne_behavior_name_list [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COLON BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_behavior_name_list shift to state 794
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On behavior_name shift to state 792
-- On any_identifier shift to state 795
-- On acsl_c_keyword shift to state 87
## Reductions:

State 794:
## Known stack suffix:
## behavior_name COMMA ne_behavior_name_list
## LR(1) items:
ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list . [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COLON BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list
-- On RETURNS reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list
-- On REQUIRES reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list
-- On IDENTIFIER reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list
-- On FREES reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list
-- On EXITS reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list
-- On EOF reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list
-- On ENSURES reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list
-- On DISJOINT reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list
-- On DECREASES reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list
-- On CONTINUES reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list
-- On COMPLETE reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list
-- On COLON reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list
-- On BREAKS reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list
-- On BEHAVIOR reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list
-- On ASSUMES reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list
-- On ASSIGNS reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list
-- On ALLOCATES reduce production ne_behavior_name_list -> behavior_name COMMA ne_behavior_name_list

State 795:
## Known stack suffix:
## any_identifier
## LR(1) items:
behavior_name -> any_identifier . [ SEMICOLON RETURNS REQUIRES IDENTIFIER FREES EXITS EOF ENSURES DISJOINT DECREASES CONTINUES COMPLETE COMMA COLON BREAKS BEHAVIOR ASSUMES ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production behavior_name -> any_identifier
-- On RETURNS reduce production behavior_name -> any_identifier
-- On REQUIRES reduce production behavior_name -> any_identifier
-- On IDENTIFIER reduce production behavior_name -> any_identifier
-- On FREES reduce production behavior_name -> any_identifier
-- On EXITS reduce production behavior_name -> any_identifier
-- On EOF reduce production behavior_name -> any_identifier
-- On ENSURES reduce production behavior_name -> any_identifier
-- On DISJOINT reduce production behavior_name -> any_identifier
-- On DECREASES reduce production behavior_name -> any_identifier
-- On CONTINUES reduce production behavior_name -> any_identifier
-- On COMPLETE reduce production behavior_name -> any_identifier
-- On COMMA reduce production behavior_name -> any_identifier
-- On COLON reduce production behavior_name -> any_identifier
-- On BREAKS reduce production behavior_name -> any_identifier
-- On BEHAVIOR reduce production behavior_name -> any_identifier
-- On ASSUMES reduce production behavior_name -> any_identifier
-- On ASSIGNS reduce production behavior_name -> any_identifier
-- On ALLOCATES reduce production behavior_name -> any_identifier

State 796:
## Known stack suffix:
## FOR ne_behavior_name_list COLON ASSERT
## LR(1) items:
code_annotation -> FOR ne_behavior_name_list COLON ASSERT . full_lexpr SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
-- On full_lexpr shift to state 797
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 797:
## Known stack suffix:
## FOR ne_behavior_name_list COLON ASSERT full_lexpr
## LR(1) items:
code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr . SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
-- On SEMICOLON shift to state 798
## Reductions:

State 798:
## Known stack suffix:
## FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
## LR(1) items:
code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON . [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On TYPE reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On SLICE reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On PREDICATE reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On MODULE reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On MODEL reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On LOGIC reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On LEMMA reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On INVARIANT reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On INDUCTIVE reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On INCLUDE reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On IMPACT reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On GLOBAL reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On FUNCTION reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On FOR reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On EXT_LET reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On EXT_AT reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On EOF reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On CONTRACT reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On AXIOMATIC reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On AXIOM reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON
-- On ASSERT reduce production code_annotation -> FOR ne_behavior_name_list COLON ASSERT full_lexpr SEMICOLON

State 799:
## Known stack suffix:
## requires
## LR(1) items:
contract -> requires . terminates decreases simple_clauses behaviors complete_or_disjoint [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires . ne_terminates REQUIRES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires . terminates ne_decreases REQUIRES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires . terminates ne_decreases TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires . terminates decreases ne_simple_clauses REQUIRES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires . terminates decreases ne_simple_clauses TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires . terminates decreases ne_simple_clauses DECREASES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires . terminates decreases simple_clauses ne_behaviors TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires . terminates decreases simple_clauses ne_behaviors DECREASES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires . terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires . terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires . terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires . terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires . terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires . terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires . terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires . terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On TERMINATES shift to state 800
-- On terminates shift to state 804
-- On ne_terminates shift to state 886
## Reductions:
-- On WRITES reduce production terminates ->
-- On VOLATILE reduce production terminates ->
-- On VOID reduce production terminates ->
-- On UNSIGNED reduce production terminates ->
-- On UNION reduce production terminates ->
-- On TYPENAME reduce production terminates ->
-- On TYPE reduce production terminates ->
-- On STRUCT reduce production terminates ->
-- On STATIC reduce production terminates ->
-- On SIZEOF reduce production terminates ->
-- On SIGNED reduce production terminates ->
-- On SHORT reduce production terminates ->
-- On RETURNS reduce production terminates ->
-- On REAL reduce production terminates ->
-- On READS reduce production terminates ->
-- On PREDICATE reduce production terminates ->
-- On MODULE reduce production terminates ->
-- On MODEL reduce production terminates ->
-- On LONG reduce production terminates ->
-- On LOGIC reduce production terminates ->
-- On LEMMA reduce production terminates ->
-- On LABEL reduce production terminates ->
-- On INTEGER reduce production terminates ->
-- On INT reduce production terminates ->
-- On INDUCTIVE reduce production terminates ->
-- On INCLUDE reduce production terminates ->
-- On IF reduce production terminates ->
-- On IDENTIFIER reduce production terminates ->
-- On GLOBAL reduce production terminates ->
-- On FUNCTION reduce production terminates ->
-- On FREES reduce production terminates ->
-- On FLOAT reduce production terminates ->
-- On EXT_LET reduce production terminates ->
-- On EXT_AT reduce production terminates ->
-- On EXITS reduce production terminates ->
-- On EOF reduce production terminates ->
-- On ENUM reduce production terminates ->
-- On ENSURES reduce production terminates ->
-- On ELSE reduce production terminates ->
-- On DOUBLE reduce production terminates ->
-- On DISJOINT reduce production terminates ->
-- On DECREASES reduce production terminates ->
-- On CONTRACT reduce production terminates ->
-- On CONTINUES reduce production terminates ->
-- On CONST reduce production terminates ->
-- On COMPLETE reduce production terminates ->
-- On CHAR reduce production terminates ->
-- On CASE reduce production terminates ->
-- On BREAKS reduce production terminates ->
-- On BOOLEAN reduce production terminates ->
-- On BOOL reduce production terminates ->
-- On BEHAVIORS reduce production terminates ->
-- On BEHAVIOR reduce production terminates ->
-- On AXIOMATIC reduce production terminates ->
-- On AXIOM reduce production terminates ->
-- On ASSIGNS reduce production terminates ->
-- On ALLOCATES reduce production terminates ->

State 800:
## Known stack suffix:
## TERMINATES
## LR(1) items:
ne_terminates -> TERMINATES . full_lexpr SEMICOLON [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
ne_terminates -> TERMINATES . full_lexpr clause_kw [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On full_lexpr shift to state 801
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 801:
## Known stack suffix:
## TERMINATES full_lexpr
## LR(1) items:
ne_terminates -> TERMINATES full_lexpr . SEMICOLON [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
ne_terminates -> TERMINATES full_lexpr . clause_kw [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On SEMICOLON shift to state 802
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 759
-- On IDENTIFIER shift to state 760
-- On FREES shift to state 761
-- On EXITS shift to state 47
-- On EOF shift to state 762
-- On ENSURES shift to state 49
-- On DISJOINT shift to state 763
-- On DECREASES shift to state 764
-- On CONTINUES shift to state 56
-- On COMPLETE shift to state 765
-- On BREAKS shift to state 61
-- On BEHAVIOR shift to state 766
-- On ASSUMES shift to state 767
-- On ASSIGNS shift to state 768
-- On ALLOCATES shift to state 769
-- On post_cond shift to state 770
-- On clause_kw shift to state 803
## Reductions:

State 802:
## Known stack suffix:
## TERMINATES full_lexpr SEMICOLON
## LR(1) items:
ne_terminates -> TERMINATES full_lexpr SEMICOLON . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On VOLATILE reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On VOID reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On UNSIGNED reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On UNION reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On TYPENAME reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On TYPE reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On STRUCT reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On STATIC reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On SIZEOF reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On SIGNED reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On SHORT reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On RETURNS reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On REQUIRES reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On REAL reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On READS reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On PREDICATE reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On MODULE reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On MODEL reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On LONG reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On LOGIC reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On LEMMA reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On LABEL reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On INTEGER reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On INT reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On INDUCTIVE reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On INCLUDE reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On IF reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On IDENTIFIER reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On GLOBAL reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On FUNCTION reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On FREES reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On FLOAT reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On EXT_LET reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On EXT_AT reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On EXITS reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On EOF reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On ENUM reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On ENSURES reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On ELSE reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On DOUBLE reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On DISJOINT reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On DECREASES reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On CONTRACT reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On CONTINUES reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On CONST reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On COMPLETE reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On CHAR reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On CASE reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On BREAKS reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On BOOLEAN reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On BOOL reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On BEHAVIORS reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On BEHAVIOR reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On AXIOMATIC reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On AXIOM reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On ASSIGNS reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON
-- On ALLOCATES reduce production ne_terminates -> TERMINATES full_lexpr SEMICOLON

State 803:
## Known stack suffix:
## TERMINATES full_lexpr clause_kw
## LR(1) items:
ne_terminates -> TERMINATES full_lexpr clause_kw . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On VOLATILE reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On VOID reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On UNSIGNED reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On UNION reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On TYPENAME reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On TYPE reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On STRUCT reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On STATIC reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On SIZEOF reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On SIGNED reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On SHORT reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On RETURNS reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On REQUIRES reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On REAL reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On READS reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On PREDICATE reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On MODULE reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On MODEL reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On LONG reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On LOGIC reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On LEMMA reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On LABEL reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On INTEGER reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On INT reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On INDUCTIVE reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On INCLUDE reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On IF reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On IDENTIFIER reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On GLOBAL reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On FUNCTION reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On FREES reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On FLOAT reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On EXT_LET reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On EXT_AT reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On EXITS reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On EOF reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On ENUM reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On ENSURES reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On ELSE reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On DOUBLE reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On DISJOINT reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On DECREASES reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On CONTRACT reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On CONTINUES reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On CONST reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On COMPLETE reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On CHAR reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On CASE reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On BREAKS reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On BOOLEAN reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On BOOL reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On BEHAVIORS reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On BEHAVIOR reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On AXIOMATIC reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On AXIOM reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On ASSIGNS reduce production ne_terminates -> TERMINATES full_lexpr clause_kw
-- On ALLOCATES reduce production ne_terminates -> TERMINATES full_lexpr clause_kw

State 804:
## Known stack suffix:
## requires terminates
## LR(1) items:
contract -> requires terminates . decreases simple_clauses behaviors complete_or_disjoint [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates . ne_decreases REQUIRES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates . ne_decreases TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates . decreases ne_simple_clauses REQUIRES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates . decreases ne_simple_clauses TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates . decreases ne_simple_clauses DECREASES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates . decreases simple_clauses ne_behaviors TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates . decreases simple_clauses ne_behaviors DECREASES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates . decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates . decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates . decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates . decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates . decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates . decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates . decreases simple_clauses behaviors ne_complete_or_disjoint FREES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates . decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On DECREASES shift to state 805
-- On ne_decreases shift to state 809
-- On decreases shift to state 812
## Reductions:
-- On WRITES reduce production decreases ->
-- On VOLATILE reduce production decreases ->
-- On VOID reduce production decreases ->
-- On UNSIGNED reduce production decreases ->
-- On UNION reduce production decreases ->
-- On TYPENAME reduce production decreases ->
-- On TYPE reduce production decreases ->
-- On STRUCT reduce production decreases ->
-- On STATIC reduce production decreases ->
-- On SIZEOF reduce production decreases ->
-- On SIGNED reduce production decreases ->
-- On SHORT reduce production decreases ->
-- On RETURNS reduce production decreases ->
-- On REAL reduce production decreases ->
-- On READS reduce production decreases ->
-- On PREDICATE reduce production decreases ->
-- On MODULE reduce production decreases ->
-- On MODEL reduce production decreases ->
-- On LONG reduce production decreases ->
-- On LOGIC reduce production decreases ->
-- On LEMMA reduce production decreases ->
-- On LABEL reduce production decreases ->
-- On INTEGER reduce production decreases ->
-- On INT reduce production decreases ->
-- On INDUCTIVE reduce production decreases ->
-- On INCLUDE reduce production decreases ->
-- On IF reduce production decreases ->
-- On IDENTIFIER reduce production decreases ->
-- On GLOBAL reduce production decreases ->
-- On FUNCTION reduce production decreases ->
-- On FREES reduce production decreases ->
-- On FLOAT reduce production decreases ->
-- On EXT_LET reduce production decreases ->
-- On EXT_AT reduce production decreases ->
-- On EXITS reduce production decreases ->
-- On EOF reduce production decreases ->
-- On ENUM reduce production decreases ->
-- On ENSURES reduce production decreases ->
-- On ELSE reduce production decreases ->
-- On DOUBLE reduce production decreases ->
-- On DISJOINT reduce production decreases ->
-- On CONTRACT reduce production decreases ->
-- On CONTINUES reduce production decreases ->
-- On CONST reduce production decreases ->
-- On COMPLETE reduce production decreases ->
-- On CHAR reduce production decreases ->
-- On CASE reduce production decreases ->
-- On BREAKS reduce production decreases ->
-- On BOOLEAN reduce production decreases ->
-- On BOOL reduce production decreases ->
-- On BEHAVIORS reduce production decreases ->
-- On BEHAVIOR reduce production decreases ->
-- On AXIOMATIC reduce production decreases ->
-- On AXIOM reduce production decreases ->
-- On ASSIGNS reduce production decreases ->
-- On ALLOCATES reduce production decreases ->

State 805:
## Known stack suffix:
## DECREASES
## LR(1) items:
ne_decreases -> DECREASES . variant SEMICOLON [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
ne_decreases -> DECREASES . variant clause_kw [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On variant shift to state 806
-- On full_lexpr shift to state 660
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 806:
## Known stack suffix:
## DECREASES variant
## LR(1) items:
ne_decreases -> DECREASES variant . SEMICOLON [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
ne_decreases -> DECREASES variant . clause_kw [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On SEMICOLON shift to state 807
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 759
-- On IDENTIFIER shift to state 760
-- On FREES shift to state 761
-- On EXITS shift to state 47
-- On EOF shift to state 762
-- On ENSURES shift to state 49
-- On DISJOINT shift to state 763
-- On DECREASES shift to state 764
-- On CONTINUES shift to state 56
-- On COMPLETE shift to state 765
-- On BREAKS shift to state 61
-- On BEHAVIOR shift to state 766
-- On ASSUMES shift to state 767
-- On ASSIGNS shift to state 768
-- On ALLOCATES shift to state 769
-- On post_cond shift to state 770
-- On clause_kw shift to state 808
## Reductions:

State 807:
## Known stack suffix:
## DECREASES variant SEMICOLON
## LR(1) items:
ne_decreases -> DECREASES variant SEMICOLON . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On VOLATILE reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On VOID reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On UNSIGNED reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On UNION reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On TYPENAME reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On TYPE reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On TERMINATES reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On STRUCT reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On STATIC reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On SIZEOF reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On SIGNED reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On SHORT reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On RETURNS reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On REQUIRES reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On REAL reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On READS reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On PREDICATE reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On MODULE reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On MODEL reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On LONG reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On LOGIC reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On LEMMA reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On LABEL reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On INTEGER reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On INT reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On INDUCTIVE reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On INCLUDE reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On IF reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On IDENTIFIER reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On GLOBAL reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On FUNCTION reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On FREES reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On FLOAT reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On EXT_LET reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On EXT_AT reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On EXITS reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On EOF reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On ENUM reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On ENSURES reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On ELSE reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On DOUBLE reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On DISJOINT reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On CONTRACT reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On CONTINUES reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On CONST reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On COMPLETE reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On CHAR reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On CASE reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On BREAKS reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On BOOLEAN reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On BOOL reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On BEHAVIORS reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On BEHAVIOR reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On AXIOMATIC reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On AXIOM reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On ASSIGNS reduce production ne_decreases -> DECREASES variant SEMICOLON
-- On ALLOCATES reduce production ne_decreases -> DECREASES variant SEMICOLON

State 808:
## Known stack suffix:
## DECREASES variant clause_kw
## LR(1) items:
ne_decreases -> DECREASES variant clause_kw . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production ne_decreases -> DECREASES variant clause_kw
-- On VOLATILE reduce production ne_decreases -> DECREASES variant clause_kw
-- On VOID reduce production ne_decreases -> DECREASES variant clause_kw
-- On UNSIGNED reduce production ne_decreases -> DECREASES variant clause_kw
-- On UNION reduce production ne_decreases -> DECREASES variant clause_kw
-- On TYPENAME reduce production ne_decreases -> DECREASES variant clause_kw
-- On TYPE reduce production ne_decreases -> DECREASES variant clause_kw
-- On TERMINATES reduce production ne_decreases -> DECREASES variant clause_kw
-- On STRUCT reduce production ne_decreases -> DECREASES variant clause_kw
-- On STATIC reduce production ne_decreases -> DECREASES variant clause_kw
-- On SIZEOF reduce production ne_decreases -> DECREASES variant clause_kw
-- On SIGNED reduce production ne_decreases -> DECREASES variant clause_kw
-- On SHORT reduce production ne_decreases -> DECREASES variant clause_kw
-- On RETURNS reduce production ne_decreases -> DECREASES variant clause_kw
-- On REQUIRES reduce production ne_decreases -> DECREASES variant clause_kw
-- On REAL reduce production ne_decreases -> DECREASES variant clause_kw
-- On READS reduce production ne_decreases -> DECREASES variant clause_kw
-- On PREDICATE reduce production ne_decreases -> DECREASES variant clause_kw
-- On MODULE reduce production ne_decreases -> DECREASES variant clause_kw
-- On MODEL reduce production ne_decreases -> DECREASES variant clause_kw
-- On LONG reduce production ne_decreases -> DECREASES variant clause_kw
-- On LOGIC reduce production ne_decreases -> DECREASES variant clause_kw
-- On LEMMA reduce production ne_decreases -> DECREASES variant clause_kw
-- On LABEL reduce production ne_decreases -> DECREASES variant clause_kw
-- On INTEGER reduce production ne_decreases -> DECREASES variant clause_kw
-- On INT reduce production ne_decreases -> DECREASES variant clause_kw
-- On INDUCTIVE reduce production ne_decreases -> DECREASES variant clause_kw
-- On INCLUDE reduce production ne_decreases -> DECREASES variant clause_kw
-- On IF reduce production ne_decreases -> DECREASES variant clause_kw
-- On IDENTIFIER reduce production ne_decreases -> DECREASES variant clause_kw
-- On GLOBAL reduce production ne_decreases -> DECREASES variant clause_kw
-- On FUNCTION reduce production ne_decreases -> DECREASES variant clause_kw
-- On FREES reduce production ne_decreases -> DECREASES variant clause_kw
-- On FLOAT reduce production ne_decreases -> DECREASES variant clause_kw
-- On EXT_LET reduce production ne_decreases -> DECREASES variant clause_kw
-- On EXT_AT reduce production ne_decreases -> DECREASES variant clause_kw
-- On EXITS reduce production ne_decreases -> DECREASES variant clause_kw
-- On EOF reduce production ne_decreases -> DECREASES variant clause_kw
-- On ENUM reduce production ne_decreases -> DECREASES variant clause_kw
-- On ENSURES reduce production ne_decreases -> DECREASES variant clause_kw
-- On ELSE reduce production ne_decreases -> DECREASES variant clause_kw
-- On DOUBLE reduce production ne_decreases -> DECREASES variant clause_kw
-- On DISJOINT reduce production ne_decreases -> DECREASES variant clause_kw
-- On CONTRACT reduce production ne_decreases -> DECREASES variant clause_kw
-- On CONTINUES reduce production ne_decreases -> DECREASES variant clause_kw
-- On CONST reduce production ne_decreases -> DECREASES variant clause_kw
-- On COMPLETE reduce production ne_decreases -> DECREASES variant clause_kw
-- On CHAR reduce production ne_decreases -> DECREASES variant clause_kw
-- On CASE reduce production ne_decreases -> DECREASES variant clause_kw
-- On BREAKS reduce production ne_decreases -> DECREASES variant clause_kw
-- On BOOLEAN reduce production ne_decreases -> DECREASES variant clause_kw
-- On BOOL reduce production ne_decreases -> DECREASES variant clause_kw
-- On BEHAVIORS reduce production ne_decreases -> DECREASES variant clause_kw
-- On BEHAVIOR reduce production ne_decreases -> DECREASES variant clause_kw
-- On AXIOMATIC reduce production ne_decreases -> DECREASES variant clause_kw
-- On AXIOM reduce production ne_decreases -> DECREASES variant clause_kw
-- On ASSIGNS reduce production ne_decreases -> DECREASES variant clause_kw
-- On ALLOCATES reduce production ne_decreases -> DECREASES variant clause_kw

State 809:
## Known stack suffix:
## requires terminates ne_decreases
## LR(1) items:
contract -> requires terminates ne_decreases . REQUIRES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates ne_decreases . TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
decreases -> ne_decreases . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On TERMINATES shift to state 810
-- On REQUIRES shift to state 811
## Reductions:
-- On WRITES reduce production decreases -> ne_decreases
-- On VOLATILE reduce production decreases -> ne_decreases
-- On VOID reduce production decreases -> ne_decreases
-- On UNSIGNED reduce production decreases -> ne_decreases
-- On UNION reduce production decreases -> ne_decreases
-- On TYPENAME reduce production decreases -> ne_decreases
-- On TYPE reduce production decreases -> ne_decreases
-- On STRUCT reduce production decreases -> ne_decreases
-- On STATIC reduce production decreases -> ne_decreases
-- On SIZEOF reduce production decreases -> ne_decreases
-- On SIGNED reduce production decreases -> ne_decreases
-- On SHORT reduce production decreases -> ne_decreases
-- On RETURNS reduce production decreases -> ne_decreases
-- On REAL reduce production decreases -> ne_decreases
-- On READS reduce production decreases -> ne_decreases
-- On PREDICATE reduce production decreases -> ne_decreases
-- On MODULE reduce production decreases -> ne_decreases
-- On MODEL reduce production decreases -> ne_decreases
-- On LONG reduce production decreases -> ne_decreases
-- On LOGIC reduce production decreases -> ne_decreases
-- On LEMMA reduce production decreases -> ne_decreases
-- On LABEL reduce production decreases -> ne_decreases
-- On INTEGER reduce production decreases -> ne_decreases
-- On INT reduce production decreases -> ne_decreases
-- On INDUCTIVE reduce production decreases -> ne_decreases
-- On INCLUDE reduce production decreases -> ne_decreases
-- On IF reduce production decreases -> ne_decreases
-- On IDENTIFIER reduce production decreases -> ne_decreases
-- On GLOBAL reduce production decreases -> ne_decreases
-- On FUNCTION reduce production decreases -> ne_decreases
-- On FREES reduce production decreases -> ne_decreases
-- On FLOAT reduce production decreases -> ne_decreases
-- On EXT_LET reduce production decreases -> ne_decreases
-- On EXT_AT reduce production decreases -> ne_decreases
-- On EXITS reduce production decreases -> ne_decreases
-- On EOF reduce production decreases -> ne_decreases
-- On ENUM reduce production decreases -> ne_decreases
-- On ENSURES reduce production decreases -> ne_decreases
-- On ELSE reduce production decreases -> ne_decreases
-- On DOUBLE reduce production decreases -> ne_decreases
-- On DISJOINT reduce production decreases -> ne_decreases
-- On CONTRACT reduce production decreases -> ne_decreases
-- On CONTINUES reduce production decreases -> ne_decreases
-- On CONST reduce production decreases -> ne_decreases
-- On COMPLETE reduce production decreases -> ne_decreases
-- On CHAR reduce production decreases -> ne_decreases
-- On CASE reduce production decreases -> ne_decreases
-- On BREAKS reduce production decreases -> ne_decreases
-- On BOOLEAN reduce production decreases -> ne_decreases
-- On BOOL reduce production decreases -> ne_decreases
-- On BEHAVIORS reduce production decreases -> ne_decreases
-- On BEHAVIOR reduce production decreases -> ne_decreases
-- On AXIOMATIC reduce production decreases -> ne_decreases
-- On AXIOM reduce production decreases -> ne_decreases
-- On ASSIGNS reduce production decreases -> ne_decreases
-- On ALLOCATES reduce production decreases -> ne_decreases

State 810:
## Known stack suffix:
## requires terminates ne_decreases TERMINATES
## LR(1) items:
contract -> requires terminates ne_decreases TERMINATES . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production contract -> requires terminates ne_decreases TERMINATES
-- On TYPE reduce production contract -> requires terminates ne_decreases TERMINATES
-- On PREDICATE reduce production contract -> requires terminates ne_decreases TERMINATES
-- On MODULE reduce production contract -> requires terminates ne_decreases TERMINATES
-- On MODEL reduce production contract -> requires terminates ne_decreases TERMINATES
-- On LOGIC reduce production contract -> requires terminates ne_decreases TERMINATES
-- On LEMMA reduce production contract -> requires terminates ne_decreases TERMINATES
-- On INDUCTIVE reduce production contract -> requires terminates ne_decreases TERMINATES
-- On INCLUDE reduce production contract -> requires terminates ne_decreases TERMINATES
-- On GLOBAL reduce production contract -> requires terminates ne_decreases TERMINATES
-- On FUNCTION reduce production contract -> requires terminates ne_decreases TERMINATES
-- On EXT_LET reduce production contract -> requires terminates ne_decreases TERMINATES
-- On EXT_AT reduce production contract -> requires terminates ne_decreases TERMINATES
-- On EOF reduce production contract -> requires terminates ne_decreases TERMINATES
-- On CONTRACT reduce production contract -> requires terminates ne_decreases TERMINATES
-- On AXIOMATIC reduce production contract -> requires terminates ne_decreases TERMINATES
-- On AXIOM reduce production contract -> requires terminates ne_decreases TERMINATES

State 811:
## Known stack suffix:
## requires terminates ne_decreases REQUIRES
## LR(1) items:
contract -> requires terminates ne_decreases REQUIRES . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production contract -> requires terminates ne_decreases REQUIRES
-- On TYPE reduce production contract -> requires terminates ne_decreases REQUIRES
-- On PREDICATE reduce production contract -> requires terminates ne_decreases REQUIRES
-- On MODULE reduce production contract -> requires terminates ne_decreases REQUIRES
-- On MODEL reduce production contract -> requires terminates ne_decreases REQUIRES
-- On LOGIC reduce production contract -> requires terminates ne_decreases REQUIRES
-- On LEMMA reduce production contract -> requires terminates ne_decreases REQUIRES
-- On INDUCTIVE reduce production contract -> requires terminates ne_decreases REQUIRES
-- On INCLUDE reduce production contract -> requires terminates ne_decreases REQUIRES
-- On GLOBAL reduce production contract -> requires terminates ne_decreases REQUIRES
-- On FUNCTION reduce production contract -> requires terminates ne_decreases REQUIRES
-- On EXT_LET reduce production contract -> requires terminates ne_decreases REQUIRES
-- On EXT_AT reduce production contract -> requires terminates ne_decreases REQUIRES
-- On EOF reduce production contract -> requires terminates ne_decreases REQUIRES
-- On CONTRACT reduce production contract -> requires terminates ne_decreases REQUIRES
-- On AXIOMATIC reduce production contract -> requires terminates ne_decreases REQUIRES
-- On AXIOM reduce production contract -> requires terminates ne_decreases REQUIRES

State 812:
## Known stack suffix:
## requires terminates decreases
## LR(1) items:
contract -> requires terminates decreases . simple_clauses behaviors complete_or_disjoint [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases . ne_simple_clauses REQUIRES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases . ne_simple_clauses TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases . ne_simple_clauses DECREASES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases . simple_clauses ne_behaviors TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases . simple_clauses ne_behaviors DECREASES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases . simple_clauses behaviors ne_complete_or_disjoint REQUIRES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases . simple_clauses behaviors ne_complete_or_disjoint TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases . simple_clauses behaviors ne_complete_or_disjoint DECREASES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases . simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases . simple_clauses behaviors ne_complete_or_disjoint ASSIGNS [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases . simple_clauses behaviors ne_complete_or_disjoint ALLOCATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases . simple_clauses behaviors ne_complete_or_disjoint FREES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases . simple_clauses behaviors ne_complete_or_disjoint post_cond_kind [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On WRITES shift to state 1
-- On VOID shift to state 4
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REAL shift to state 21
-- On READS shift to state 22
-- On LONG shift to state 28
-- On LABEL shift to state 31
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On IF shift to state 38
-- On FREES shift to state 673
-- On FLOAT shift to state 44
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On ASSIGNS shift to state 813
-- On ALLOCATES shift to state 690
-- On simple_clauses shift to state 833
-- On post_cond_kind shift to state 817
-- On post_cond shift to state 821
-- On ne_simple_clauses shift to state 882
-- On is_acsl_other shift to state 692
-- On grammar_extension_name shift to state 693
-- On grammar_extension shift to state 823
-- On full_identifier_or_typename shift to state 697
-- On enter_kw_c_mode shift to state 698
-- On c_keyword shift to state 701
-- On allocation shift to state 826
## Reductions:
-- On VOLATILE reduce production simple_clauses ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production simple_clauses ->
-- On PREDICATE reduce production simple_clauses ->
-- On MODULE reduce production simple_clauses ->
-- On MODEL reduce production simple_clauses ->
-- On LOGIC reduce production simple_clauses ->
-- On LEMMA reduce production simple_clauses ->
-- On INDUCTIVE reduce production simple_clauses ->
-- On INCLUDE reduce production simple_clauses ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production simple_clauses ->
-- On FUNCTION reduce production simple_clauses ->
-- On EXT_LET reduce production simple_clauses ->
-- On EXT_AT reduce production simple_clauses ->
-- On EOF reduce production simple_clauses ->
-- On DISJOINT reduce production simple_clauses ->
-- On CONTRACT reduce production simple_clauses ->
-- On COMPLETE reduce production simple_clauses ->
-- On BEHAVIOR reduce production simple_clauses ->
-- On AXIOMATIC reduce production simple_clauses ->
-- On AXIOM reduce production simple_clauses ->

State 813:
## Known stack suffix:
## ASSIGNS
## LR(1) items:
ne_simple_clauses -> ASSIGNS . full_assigns SEMICOLON simple_clauses [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
ne_simple_clauses -> ASSIGNS . full_assigns clause_kw [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
-- On full_assigns shift to state 814
-- On enter_kw_c_mode shift to state 683
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOTHING reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 814:
## Known stack suffix:
## ASSIGNS full_assigns
## LR(1) items:
ne_simple_clauses -> ASSIGNS full_assigns . SEMICOLON simple_clauses [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
ne_simple_clauses -> ASSIGNS full_assigns . clause_kw [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
-- On SEMICOLON shift to state 815
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 759
-- On IDENTIFIER shift to state 760
-- On FREES shift to state 761
-- On EXITS shift to state 47
-- On EOF shift to state 762
-- On ENSURES shift to state 49
-- On DISJOINT shift to state 763
-- On DECREASES shift to state 764
-- On CONTINUES shift to state 56
-- On COMPLETE shift to state 765
-- On BREAKS shift to state 61
-- On BEHAVIOR shift to state 766
-- On ASSUMES shift to state 767
-- On ASSIGNS shift to state 768
-- On ALLOCATES shift to state 769
-- On post_cond shift to state 770
-- On clause_kw shift to state 832
## Reductions:

State 815:
## Known stack suffix:
## ASSIGNS full_assigns SEMICOLON
## LR(1) items:
ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON . simple_clauses [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOID shift to state 4
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REAL shift to state 21
-- On READS shift to state 22
-- On LONG shift to state 28
-- On LABEL shift to state 31
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On IF shift to state 38
-- On FREES shift to state 673
-- On FLOAT shift to state 44
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On ASSIGNS shift to state 813
-- On ALLOCATES shift to state 690
-- On simple_clauses shift to state 816
-- On post_cond_kind shift to state 817
-- On post_cond shift to state 821
-- On ne_simple_clauses shift to state 822
-- On is_acsl_other shift to state 692
-- On grammar_extension_name shift to state 693
-- On grammar_extension shift to state 823
-- On full_identifier_or_typename shift to state 697
-- On enter_kw_c_mode shift to state 698
-- On c_keyword shift to state 701
-- On allocation shift to state 826
## Reductions:
-- On VOLATILE reduce production simple_clauses ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production simple_clauses ->
-- On TERMINATES reduce production simple_clauses ->
-- On REQUIRES reduce production simple_clauses ->
-- On PREDICATE reduce production simple_clauses ->
-- On MODULE reduce production simple_clauses ->
-- On MODEL reduce production simple_clauses ->
-- On LOGIC reduce production simple_clauses ->
-- On LEMMA reduce production simple_clauses ->
-- On INDUCTIVE reduce production simple_clauses ->
-- On INCLUDE reduce production simple_clauses ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production simple_clauses ->
-- On FUNCTION reduce production simple_clauses ->
-- On EXT_LET reduce production simple_clauses ->
-- On EXT_AT reduce production simple_clauses ->
-- On EOF reduce production simple_clauses ->
-- On DISJOINT reduce production simple_clauses ->
-- On DECREASES reduce production simple_clauses ->
-- On CONTRACT reduce production simple_clauses ->
-- On COMPLETE reduce production simple_clauses ->
-- On BEHAVIOR reduce production simple_clauses ->
-- On AXIOMATIC reduce production simple_clauses ->
-- On AXIOM reduce production simple_clauses ->
-- On ASSUMES reduce production simple_clauses ->

State 816:
## Known stack suffix:
## ASSIGNS full_assigns SEMICOLON simple_clauses
## LR(1) items:
ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses . [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On TYPE reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On TERMINATES reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On REQUIRES reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On PREDICATE reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On MODULE reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On MODEL reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On LOGIC reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On LEMMA reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On INDUCTIVE reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On INCLUDE reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On GLOBAL reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On FUNCTION reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On EXT_LET reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On EXT_AT reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On EOF reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On DISJOINT reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On DECREASES reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On CONTRACT reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On COMPLETE reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On BEHAVIOR reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On AXIOMATIC reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On AXIOM reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses
-- On ASSUMES reduce production ne_simple_clauses -> ASSIGNS full_assigns SEMICOLON simple_clauses

State 817:
## Known stack suffix:
## post_cond_kind
## LR(1) items:
ne_simple_clauses -> post_cond_kind . full_lexpr SEMICOLON simple_clauses [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
ne_simple_clauses -> post_cond_kind . full_lexpr clause_kw [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
-- On full_lexpr shift to state 818
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 818:
## Known stack suffix:
## post_cond_kind full_lexpr
## LR(1) items:
ne_simple_clauses -> post_cond_kind full_lexpr . SEMICOLON simple_clauses [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
ne_simple_clauses -> post_cond_kind full_lexpr . clause_kw [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
-- On SEMICOLON shift to state 819
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 759
-- On IDENTIFIER shift to state 760
-- On FREES shift to state 761
-- On EXITS shift to state 47
-- On EOF shift to state 762
-- On ENSURES shift to state 49
-- On DISJOINT shift to state 763
-- On DECREASES shift to state 764
-- On CONTINUES shift to state 56
-- On COMPLETE shift to state 765
-- On BREAKS shift to state 61
-- On BEHAVIOR shift to state 766
-- On ASSUMES shift to state 767
-- On ASSIGNS shift to state 768
-- On ALLOCATES shift to state 769
-- On post_cond shift to state 770
-- On clause_kw shift to state 831
## Reductions:

State 819:
## Known stack suffix:
## post_cond_kind full_lexpr SEMICOLON
## LR(1) items:
ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON . simple_clauses [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOID shift to state 4
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REAL shift to state 21
-- On READS shift to state 22
-- On LONG shift to state 28
-- On LABEL shift to state 31
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On IF shift to state 38
-- On FREES shift to state 673
-- On FLOAT shift to state 44
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On ASSIGNS shift to state 813
-- On ALLOCATES shift to state 690
-- On simple_clauses shift to state 820
-- On post_cond_kind shift to state 817
-- On post_cond shift to state 821
-- On ne_simple_clauses shift to state 822
-- On is_acsl_other shift to state 692
-- On grammar_extension_name shift to state 693
-- On grammar_extension shift to state 823
-- On full_identifier_or_typename shift to state 697
-- On enter_kw_c_mode shift to state 698
-- On c_keyword shift to state 701
-- On allocation shift to state 826
## Reductions:
-- On VOLATILE reduce production simple_clauses ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production simple_clauses ->
-- On TERMINATES reduce production simple_clauses ->
-- On REQUIRES reduce production simple_clauses ->
-- On PREDICATE reduce production simple_clauses ->
-- On MODULE reduce production simple_clauses ->
-- On MODEL reduce production simple_clauses ->
-- On LOGIC reduce production simple_clauses ->
-- On LEMMA reduce production simple_clauses ->
-- On INDUCTIVE reduce production simple_clauses ->
-- On INCLUDE reduce production simple_clauses ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production simple_clauses ->
-- On FUNCTION reduce production simple_clauses ->
-- On EXT_LET reduce production simple_clauses ->
-- On EXT_AT reduce production simple_clauses ->
-- On EOF reduce production simple_clauses ->
-- On DISJOINT reduce production simple_clauses ->
-- On DECREASES reduce production simple_clauses ->
-- On CONTRACT reduce production simple_clauses ->
-- On COMPLETE reduce production simple_clauses ->
-- On BEHAVIOR reduce production simple_clauses ->
-- On AXIOMATIC reduce production simple_clauses ->
-- On AXIOM reduce production simple_clauses ->
-- On ASSUMES reduce production simple_clauses ->

State 820:
## Known stack suffix:
## post_cond_kind full_lexpr SEMICOLON simple_clauses
## LR(1) items:
ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses . [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On TYPE reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On TERMINATES reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On REQUIRES reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On PREDICATE reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On MODULE reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On MODEL reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On LOGIC reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On LEMMA reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On INDUCTIVE reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On INCLUDE reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On GLOBAL reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On FUNCTION reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On EXT_LET reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On EXT_AT reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On EOF reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On DISJOINT reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On DECREASES reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On CONTRACT reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On COMPLETE reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On BEHAVIOR reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On AXIOMATIC reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On AXIOM reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses
-- On ASSUMES reduce production ne_simple_clauses -> post_cond_kind full_lexpr SEMICOLON simple_clauses

State 821:
## Known stack suffix:
## post_cond
## LR(1) items:
post_cond_kind -> post_cond . [ WRITES VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SIZEOF SIGNED SHORT SEPARATED RETURNS RESULT REQUIRES REGISTER REAL READS PREDICATE PRAGMA PLUS OLD OFFSET NULL NOT MODULE MODEL MINUS LPAR LOOP LONG LOGIC LET LEMMA LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPACT IF IDENTIFIER GLOBAL FUNCTION FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production post_cond_kind -> post_cond
-- On VOLATILE reduce production post_cond_kind -> post_cond
-- On VOID reduce production post_cond_kind -> post_cond
-- On VARIANT reduce production post_cond_kind -> post_cond
-- On VALID_READ reduce production post_cond_kind -> post_cond
-- On VALID_RANGE reduce production post_cond_kind -> post_cond
-- On VALID_INDEX reduce production post_cond_kind -> post_cond
-- On VALID reduce production post_cond_kind -> post_cond
-- On UNSIGNED reduce production post_cond_kind -> post_cond
-- On UNION reduce production post_cond_kind -> post_cond
-- On UNALLOCATED reduce production post_cond_kind -> post_cond
-- On TYPEOF reduce production post_cond_kind -> post_cond
-- On TYPENAME reduce production post_cond_kind -> post_cond
-- On TYPE reduce production post_cond_kind -> post_cond
-- On TRUE reduce production post_cond_kind -> post_cond
-- On TILDE reduce production post_cond_kind -> post_cond
-- On TERMINATES reduce production post_cond_kind -> post_cond
-- On STRUCT reduce production post_cond_kind -> post_cond
-- On STRING_LITERAL reduce production post_cond_kind -> post_cond
-- On STATIC reduce production post_cond_kind -> post_cond
-- On STAR reduce production post_cond_kind -> post_cond
-- On SLICE reduce production post_cond_kind -> post_cond
-- On SIZEOF reduce production post_cond_kind -> post_cond
-- On SIGNED reduce production post_cond_kind -> post_cond
-- On SHORT reduce production post_cond_kind -> post_cond
-- On SEPARATED reduce production post_cond_kind -> post_cond
-- On RETURNS reduce production post_cond_kind -> post_cond
-- On RESULT reduce production post_cond_kind -> post_cond
-- On REQUIRES reduce production post_cond_kind -> post_cond
-- On REGISTER reduce production post_cond_kind -> post_cond
-- On REAL reduce production post_cond_kind -> post_cond
-- On READS reduce production post_cond_kind -> post_cond
-- On PREDICATE reduce production post_cond_kind -> post_cond
-- On PRAGMA reduce production post_cond_kind -> post_cond
-- On PLUS reduce production post_cond_kind -> post_cond
-- On OLD reduce production post_cond_kind -> post_cond
-- On OFFSET reduce production post_cond_kind -> post_cond
-- On NULL reduce production post_cond_kind -> post_cond
-- On NOT reduce production post_cond_kind -> post_cond
-- On MODULE reduce production post_cond_kind -> post_cond
-- On MODEL reduce production post_cond_kind -> post_cond
-- On MINUS reduce production post_cond_kind -> post_cond
-- On LPAR reduce production post_cond_kind -> post_cond
-- On LOOP reduce production post_cond_kind -> post_cond
-- On LONG reduce production post_cond_kind -> post_cond
-- On LOGIC reduce production post_cond_kind -> post_cond
-- On LET reduce production post_cond_kind -> post_cond
-- On LEMMA reduce production post_cond_kind -> post_cond
-- On LBRACE reduce production post_cond_kind -> post_cond
-- On LAMBDA reduce production post_cond_kind -> post_cond
-- On LABEL reduce production post_cond_kind -> post_cond
-- On INVARIANT reduce production post_cond_kind -> post_cond
-- On INTER reduce production post_cond_kind -> post_cond
-- On INTEGER reduce production post_cond_kind -> post_cond
-- On INT reduce production post_cond_kind -> post_cond
-- On INITIALIZED reduce production post_cond_kind -> post_cond
-- On INDUCTIVE reduce production post_cond_kind -> post_cond
-- On INCLUDE reduce production post_cond_kind -> post_cond
-- On IMPACT reduce production post_cond_kind -> post_cond
-- On IF reduce production post_cond_kind -> post_cond
-- On IDENTIFIER reduce production post_cond_kind -> post_cond
-- On GLOBAL reduce production post_cond_kind -> post_cond
-- On FUNCTION reduce production post_cond_kind -> post_cond
-- On FRESH reduce production post_cond_kind -> post_cond
-- On FREES reduce production post_cond_kind -> post_cond
-- On FREEABLE reduce production post_cond_kind -> post_cond
-- On FORALL reduce production post_cond_kind -> post_cond
-- On FOR reduce production post_cond_kind -> post_cond
-- On FLOAT reduce production post_cond_kind -> post_cond
-- On FALSE reduce production post_cond_kind -> post_cond
-- On EXT_LET reduce production post_cond_kind -> post_cond
-- On EXT_AT reduce production post_cond_kind -> post_cond
-- On EXITS reduce production post_cond_kind -> post_cond
-- On EXISTS reduce production post_cond_kind -> post_cond
-- On EOF reduce production post_cond_kind -> post_cond
-- On ENUM reduce production post_cond_kind -> post_cond
-- On ENSURES reduce production post_cond_kind -> post_cond
-- On EMPTY reduce production post_cond_kind -> post_cond
-- On ELSE reduce production post_cond_kind -> post_cond
-- On DYNAMIC reduce production post_cond_kind -> post_cond
-- On DOUBLE reduce production post_cond_kind -> post_cond
-- On DISJOINT reduce production post_cond_kind -> post_cond
-- On DECREASES reduce production post_cond_kind -> post_cond
-- On DANGLING reduce production post_cond_kind -> post_cond
-- On CUSTOM reduce production post_cond_kind -> post_cond
-- On CONTRACT reduce production post_cond_kind -> post_cond
-- On CONTINUES reduce production post_cond_kind -> post_cond
-- On CONSTANT10 reduce production post_cond_kind -> post_cond
-- On CONSTANT reduce production post_cond_kind -> post_cond
-- On CONST reduce production post_cond_kind -> post_cond
-- On COMPLETE reduce production post_cond_kind -> post_cond
-- On CHAR reduce production post_cond_kind -> post_cond
-- On CASE reduce production post_cond_kind -> post_cond
-- On BSUNION reduce production post_cond_kind -> post_cond
-- On BSTYPE reduce production post_cond_kind -> post_cond
-- On BREAKS reduce production post_cond_kind -> post_cond
-- On BOOLEAN reduce production post_cond_kind -> post_cond
-- On BOOL reduce production post_cond_kind -> post_cond
-- On BLOCK_LENGTH reduce production post_cond_kind -> post_cond
-- On BEHAVIORS reduce production post_cond_kind -> post_cond
-- On BEHAVIOR reduce production post_cond_kind -> post_cond
-- On BASE_ADDR reduce production post_cond_kind -> post_cond
-- On AXIOMATIC reduce production post_cond_kind -> post_cond
-- On AXIOM reduce production post_cond_kind -> post_cond
-- On AUTOMATIC reduce production post_cond_kind -> post_cond
-- On AT reduce production post_cond_kind -> post_cond
-- On ASSUMES reduce production post_cond_kind -> post_cond
-- On ASSIGNS reduce production post_cond_kind -> post_cond
-- On ASSERT reduce production post_cond_kind -> post_cond
-- On AMP reduce production post_cond_kind -> post_cond
-- On ALLOCATION reduce production post_cond_kind -> post_cond
-- On ALLOCATES reduce production post_cond_kind -> post_cond
-- On ALLOCABLE reduce production post_cond_kind -> post_cond

State 822:
## Known stack suffix:
## ne_simple_clauses
## LR(1) items:
simple_clauses -> ne_simple_clauses . [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production simple_clauses -> ne_simple_clauses
-- On TYPE reduce production simple_clauses -> ne_simple_clauses
-- On TERMINATES reduce production simple_clauses -> ne_simple_clauses
-- On REQUIRES reduce production simple_clauses -> ne_simple_clauses
-- On PREDICATE reduce production simple_clauses -> ne_simple_clauses
-- On MODULE reduce production simple_clauses -> ne_simple_clauses
-- On MODEL reduce production simple_clauses -> ne_simple_clauses
-- On LOGIC reduce production simple_clauses -> ne_simple_clauses
-- On LEMMA reduce production simple_clauses -> ne_simple_clauses
-- On INDUCTIVE reduce production simple_clauses -> ne_simple_clauses
-- On INCLUDE reduce production simple_clauses -> ne_simple_clauses
-- On GLOBAL reduce production simple_clauses -> ne_simple_clauses
-- On FUNCTION reduce production simple_clauses -> ne_simple_clauses
-- On EXT_LET reduce production simple_clauses -> ne_simple_clauses
-- On EXT_AT reduce production simple_clauses -> ne_simple_clauses
-- On EOF reduce production simple_clauses -> ne_simple_clauses
-- On DISJOINT reduce production simple_clauses -> ne_simple_clauses
-- On DECREASES reduce production simple_clauses -> ne_simple_clauses
-- On CONTRACT reduce production simple_clauses -> ne_simple_clauses
-- On COMPLETE reduce production simple_clauses -> ne_simple_clauses
-- On BEHAVIOR reduce production simple_clauses -> ne_simple_clauses
-- On AXIOMATIC reduce production simple_clauses -> ne_simple_clauses
-- On AXIOM reduce production simple_clauses -> ne_simple_clauses
-- On ASSUMES reduce production simple_clauses -> ne_simple_clauses

State 823:
## Known stack suffix:
## grammar_extension
## LR(1) items:
ne_simple_clauses -> grammar_extension . SEMICOLON simple_clauses [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
ne_simple_clauses -> grammar_extension . clause_kw [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
-- On SEMICOLON shift to state 824
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 759
-- On IDENTIFIER shift to state 760
-- On FREES shift to state 761
-- On EXITS shift to state 47
-- On EOF shift to state 762
-- On ENSURES shift to state 49
-- On DISJOINT shift to state 763
-- On DECREASES shift to state 764
-- On CONTINUES shift to state 56
-- On COMPLETE shift to state 765
-- On BREAKS shift to state 61
-- On BEHAVIOR shift to state 766
-- On ASSUMES shift to state 767
-- On ASSIGNS shift to state 768
-- On ALLOCATES shift to state 769
-- On post_cond shift to state 770
-- On clause_kw shift to state 830
## Reductions:

State 824:
## Known stack suffix:
## grammar_extension SEMICOLON
## LR(1) items:
ne_simple_clauses -> grammar_extension SEMICOLON . simple_clauses [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOID shift to state 4
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REAL shift to state 21
-- On READS shift to state 22
-- On LONG shift to state 28
-- On LABEL shift to state 31
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On IF shift to state 38
-- On FREES shift to state 673
-- On FLOAT shift to state 44
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On ASSIGNS shift to state 813
-- On ALLOCATES shift to state 690
-- On simple_clauses shift to state 825
-- On post_cond_kind shift to state 817
-- On post_cond shift to state 821
-- On ne_simple_clauses shift to state 822
-- On is_acsl_other shift to state 692
-- On grammar_extension_name shift to state 693
-- On grammar_extension shift to state 823
-- On full_identifier_or_typename shift to state 697
-- On enter_kw_c_mode shift to state 698
-- On c_keyword shift to state 701
-- On allocation shift to state 826
## Reductions:
-- On VOLATILE reduce production simple_clauses ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production simple_clauses ->
-- On TERMINATES reduce production simple_clauses ->
-- On REQUIRES reduce production simple_clauses ->
-- On PREDICATE reduce production simple_clauses ->
-- On MODULE reduce production simple_clauses ->
-- On MODEL reduce production simple_clauses ->
-- On LOGIC reduce production simple_clauses ->
-- On LEMMA reduce production simple_clauses ->
-- On INDUCTIVE reduce production simple_clauses ->
-- On INCLUDE reduce production simple_clauses ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production simple_clauses ->
-- On FUNCTION reduce production simple_clauses ->
-- On EXT_LET reduce production simple_clauses ->
-- On EXT_AT reduce production simple_clauses ->
-- On EOF reduce production simple_clauses ->
-- On DISJOINT reduce production simple_clauses ->
-- On DECREASES reduce production simple_clauses ->
-- On CONTRACT reduce production simple_clauses ->
-- On COMPLETE reduce production simple_clauses ->
-- On BEHAVIOR reduce production simple_clauses ->
-- On AXIOMATIC reduce production simple_clauses ->
-- On AXIOM reduce production simple_clauses ->
-- On ASSUMES reduce production simple_clauses ->

State 825:
## Known stack suffix:
## grammar_extension SEMICOLON simple_clauses
## LR(1) items:
ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses . [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On TYPE reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On TERMINATES reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On REQUIRES reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On PREDICATE reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On MODULE reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On MODEL reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On LOGIC reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On LEMMA reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On INDUCTIVE reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On INCLUDE reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On GLOBAL reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On FUNCTION reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On EXT_LET reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On EXT_AT reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On EOF reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On DISJOINT reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On DECREASES reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On CONTRACT reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On COMPLETE reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On BEHAVIOR reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On AXIOMATIC reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On AXIOM reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses
-- On ASSUMES reduce production ne_simple_clauses -> grammar_extension SEMICOLON simple_clauses

State 826:
## Known stack suffix:
## allocation
## LR(1) items:
ne_simple_clauses -> allocation . SEMICOLON simple_clauses [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
ne_simple_clauses -> allocation . clause_kw [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
-- On SEMICOLON shift to state 827
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 759
-- On IDENTIFIER shift to state 760
-- On FREES shift to state 761
-- On EXITS shift to state 47
-- On EOF shift to state 762
-- On ENSURES shift to state 49
-- On DISJOINT shift to state 763
-- On DECREASES shift to state 764
-- On CONTINUES shift to state 56
-- On COMPLETE shift to state 765
-- On BREAKS shift to state 61
-- On BEHAVIOR shift to state 766
-- On ASSUMES shift to state 767
-- On ASSIGNS shift to state 768
-- On ALLOCATES shift to state 769
-- On post_cond shift to state 770
-- On clause_kw shift to state 829
## Reductions:

State 827:
## Known stack suffix:
## allocation SEMICOLON
## LR(1) items:
ne_simple_clauses -> allocation SEMICOLON . simple_clauses [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOID shift to state 4
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REAL shift to state 21
-- On READS shift to state 22
-- On LONG shift to state 28
-- On LABEL shift to state 31
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On IF shift to state 38
-- On FREES shift to state 673
-- On FLOAT shift to state 44
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On ASSIGNS shift to state 813
-- On ALLOCATES shift to state 690
-- On simple_clauses shift to state 828
-- On post_cond_kind shift to state 817
-- On post_cond shift to state 821
-- On ne_simple_clauses shift to state 822
-- On is_acsl_other shift to state 692
-- On grammar_extension_name shift to state 693
-- On grammar_extension shift to state 823
-- On full_identifier_or_typename shift to state 697
-- On enter_kw_c_mode shift to state 698
-- On c_keyword shift to state 701
-- On allocation shift to state 826
## Reductions:
-- On VOLATILE reduce production simple_clauses ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production simple_clauses ->
-- On TERMINATES reduce production simple_clauses ->
-- On REQUIRES reduce production simple_clauses ->
-- On PREDICATE reduce production simple_clauses ->
-- On MODULE reduce production simple_clauses ->
-- On MODEL reduce production simple_clauses ->
-- On LOGIC reduce production simple_clauses ->
-- On LEMMA reduce production simple_clauses ->
-- On INDUCTIVE reduce production simple_clauses ->
-- On INCLUDE reduce production simple_clauses ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production simple_clauses ->
-- On FUNCTION reduce production simple_clauses ->
-- On EXT_LET reduce production simple_clauses ->
-- On EXT_AT reduce production simple_clauses ->
-- On EOF reduce production simple_clauses ->
-- On DISJOINT reduce production simple_clauses ->
-- On DECREASES reduce production simple_clauses ->
-- On CONTRACT reduce production simple_clauses ->
-- On COMPLETE reduce production simple_clauses ->
-- On BEHAVIOR reduce production simple_clauses ->
-- On AXIOMATIC reduce production simple_clauses ->
-- On AXIOM reduce production simple_clauses ->
-- On ASSUMES reduce production simple_clauses ->

State 828:
## Known stack suffix:
## allocation SEMICOLON simple_clauses
## LR(1) items:
ne_simple_clauses -> allocation SEMICOLON simple_clauses . [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On TYPE reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On TERMINATES reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On REQUIRES reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On PREDICATE reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On MODULE reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On MODEL reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On LOGIC reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On LEMMA reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On INDUCTIVE reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On INCLUDE reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On GLOBAL reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On FUNCTION reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On EXT_LET reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On EXT_AT reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On EOF reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On DISJOINT reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On DECREASES reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On CONTRACT reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On COMPLETE reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On BEHAVIOR reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On AXIOMATIC reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On AXIOM reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses
-- On ASSUMES reduce production ne_simple_clauses -> allocation SEMICOLON simple_clauses

State 829:
## Known stack suffix:
## allocation clause_kw
## LR(1) items:
ne_simple_clauses -> allocation clause_kw . [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ne_simple_clauses -> allocation clause_kw
-- On TYPE reduce production ne_simple_clauses -> allocation clause_kw
-- On TERMINATES reduce production ne_simple_clauses -> allocation clause_kw
-- On REQUIRES reduce production ne_simple_clauses -> allocation clause_kw
-- On PREDICATE reduce production ne_simple_clauses -> allocation clause_kw
-- On MODULE reduce production ne_simple_clauses -> allocation clause_kw
-- On MODEL reduce production ne_simple_clauses -> allocation clause_kw
-- On LOGIC reduce production ne_simple_clauses -> allocation clause_kw
-- On LEMMA reduce production ne_simple_clauses -> allocation clause_kw
-- On INDUCTIVE reduce production ne_simple_clauses -> allocation clause_kw
-- On INCLUDE reduce production ne_simple_clauses -> allocation clause_kw
-- On GLOBAL reduce production ne_simple_clauses -> allocation clause_kw
-- On FUNCTION reduce production ne_simple_clauses -> allocation clause_kw
-- On EXT_LET reduce production ne_simple_clauses -> allocation clause_kw
-- On EXT_AT reduce production ne_simple_clauses -> allocation clause_kw
-- On EOF reduce production ne_simple_clauses -> allocation clause_kw
-- On DISJOINT reduce production ne_simple_clauses -> allocation clause_kw
-- On DECREASES reduce production ne_simple_clauses -> allocation clause_kw
-- On CONTRACT reduce production ne_simple_clauses -> allocation clause_kw
-- On COMPLETE reduce production ne_simple_clauses -> allocation clause_kw
-- On BEHAVIOR reduce production ne_simple_clauses -> allocation clause_kw
-- On AXIOMATIC reduce production ne_simple_clauses -> allocation clause_kw
-- On AXIOM reduce production ne_simple_clauses -> allocation clause_kw
-- On ASSUMES reduce production ne_simple_clauses -> allocation clause_kw

State 830:
## Known stack suffix:
## grammar_extension clause_kw
## LR(1) items:
ne_simple_clauses -> grammar_extension clause_kw . [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On TYPE reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On TERMINATES reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On REQUIRES reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On PREDICATE reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On MODULE reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On MODEL reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On LOGIC reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On LEMMA reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On INDUCTIVE reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On INCLUDE reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On GLOBAL reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On FUNCTION reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On EXT_LET reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On EXT_AT reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On EOF reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On DISJOINT reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On DECREASES reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On CONTRACT reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On COMPLETE reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On BEHAVIOR reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On AXIOMATIC reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On AXIOM reduce production ne_simple_clauses -> grammar_extension clause_kw
-- On ASSUMES reduce production ne_simple_clauses -> grammar_extension clause_kw

State 831:
## Known stack suffix:
## post_cond_kind full_lexpr clause_kw
## LR(1) items:
ne_simple_clauses -> post_cond_kind full_lexpr clause_kw . [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On TYPE reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On TERMINATES reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On REQUIRES reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On PREDICATE reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On MODULE reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On MODEL reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On LOGIC reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On LEMMA reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On INDUCTIVE reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On INCLUDE reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On GLOBAL reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On FUNCTION reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On EXT_LET reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On EXT_AT reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On EOF reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On DISJOINT reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On DECREASES reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On CONTRACT reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On COMPLETE reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On BEHAVIOR reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On AXIOMATIC reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On AXIOM reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw
-- On ASSUMES reduce production ne_simple_clauses -> post_cond_kind full_lexpr clause_kw

State 832:
## Known stack suffix:
## ASSIGNS full_assigns clause_kw
## LR(1) items:
ne_simple_clauses -> ASSIGNS full_assigns clause_kw . [ VOLATILE TYPE TERMINATES REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ASSUMES ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On TYPE reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On TERMINATES reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On REQUIRES reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On PREDICATE reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On MODULE reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On MODEL reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On LOGIC reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On LEMMA reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On INDUCTIVE reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On INCLUDE reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On GLOBAL reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On FUNCTION reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On EXT_LET reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On EXT_AT reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On EOF reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On DISJOINT reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On DECREASES reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On CONTRACT reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On COMPLETE reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On BEHAVIOR reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On AXIOMATIC reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On AXIOM reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw
-- On ASSUMES reduce production ne_simple_clauses -> ASSIGNS full_assigns clause_kw

State 833:
## Known stack suffix:
## requires terminates decreases simple_clauses
## LR(1) items:
contract -> requires terminates decreases simple_clauses . behaviors complete_or_disjoint [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses . ne_behaviors TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses . ne_behaviors DECREASES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses . behaviors ne_complete_or_disjoint REQUIRES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses . behaviors ne_complete_or_disjoint TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses . behaviors ne_complete_or_disjoint DECREASES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses . behaviors ne_complete_or_disjoint BEHAVIOR [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses . behaviors ne_complete_or_disjoint ASSIGNS [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses . behaviors ne_complete_or_disjoint ALLOCATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses . behaviors ne_complete_or_disjoint FREES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses . behaviors ne_complete_or_disjoint post_cond_kind [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On BEHAVIOR shift to state 834
-- On ne_behaviors shift to state 853
-- On behaviors shift to state 856
## Reductions:
-- On VOLATILE reduce production behaviors ->
-- On TYPE reduce production behaviors ->
-- On PREDICATE reduce production behaviors ->
-- On MODULE reduce production behaviors ->
-- On MODEL reduce production behaviors ->
-- On LOGIC reduce production behaviors ->
-- On LEMMA reduce production behaviors ->
-- On INDUCTIVE reduce production behaviors ->
-- On INCLUDE reduce production behaviors ->
-- On GLOBAL reduce production behaviors ->
-- On FUNCTION reduce production behaviors ->
-- On EXT_LET reduce production behaviors ->
-- On EXT_AT reduce production behaviors ->
-- On EOF reduce production behaviors ->
-- On DISJOINT reduce production behaviors ->
-- On CONTRACT reduce production behaviors ->
-- On COMPLETE reduce production behaviors ->
-- On AXIOMATIC reduce production behaviors ->
-- On AXIOM reduce production behaviors ->

State 834:
## Known stack suffix:
## BEHAVIOR
## LR(1) items:
ne_behaviors -> BEHAVIOR . behavior_name COLON behavior_body behaviors [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE AXIOMATIC AXIOM ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On behavior_name shift to state 835
-- On any_identifier shift to state 795
-- On acsl_c_keyword shift to state 87
## Reductions:

State 835:
## Known stack suffix:
## BEHAVIOR behavior_name
## LR(1) items:
ne_behaviors -> BEHAVIOR behavior_name . COLON behavior_body behaviors [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE AXIOMATIC AXIOM ]
## Transitions:
-- On COLON shift to state 836
## Reductions:

State 836:
## Known stack suffix:
## BEHAVIOR behavior_name COLON
## LR(1) items:
ne_behaviors -> BEHAVIOR behavior_name COLON . behavior_body behaviors [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE AXIOMATIC AXIOM ]
## Transitions:
-- On ASSUMES shift to state 837
-- On behavior_body shift to state 842
-- On assumes shift to state 845
## Reductions:
-- On WRITES reduce production assumes ->
-- On VOLATILE reduce production assumes ->
-- On VOID reduce production assumes ->
-- On UNSIGNED reduce production assumes ->
-- On UNION reduce production assumes ->
-- On TYPENAME reduce production assumes ->
-- On TYPE reduce production assumes ->
-- On TERMINATES reduce production assumes ->
-- On STRUCT reduce production assumes ->
-- On STATIC reduce production assumes ->
-- On SIZEOF reduce production assumes ->
-- On SIGNED reduce production assumes ->
-- On SHORT reduce production assumes ->
-- On RETURNS reduce production assumes ->
-- On REQUIRES reduce production assumes ->
-- On REAL reduce production assumes ->
-- On READS reduce production assumes ->
-- On PREDICATE reduce production assumes ->
-- On MODULE reduce production assumes ->
-- On MODEL reduce production assumes ->
-- On LONG reduce production assumes ->
-- On LOGIC reduce production assumes ->
-- On LEMMA reduce production assumes ->
-- On LABEL reduce production assumes ->
-- On INTEGER reduce production assumes ->
-- On INT reduce production assumes ->
-- On INDUCTIVE reduce production assumes ->
-- On INCLUDE reduce production assumes ->
-- On IF reduce production assumes ->
-- On IDENTIFIER reduce production assumes ->
-- On GLOBAL reduce production assumes ->
-- On FUNCTION reduce production assumes ->
-- On FREES reduce production assumes ->
-- On FLOAT reduce production assumes ->
-- On EXT_LET reduce production assumes ->
-- On EXT_AT reduce production assumes ->
-- On EXITS reduce production assumes ->
-- On EOF reduce production assumes ->
-- On ENUM reduce production assumes ->
-- On ENSURES reduce production assumes ->
-- On ELSE reduce production assumes ->
-- On DOUBLE reduce production assumes ->
-- On DISJOINT reduce production assumes ->
-- On DECREASES reduce production assumes ->
-- On CONTRACT reduce production assumes ->
-- On CONTINUES reduce production assumes ->
-- On CONST reduce production assumes ->
-- On COMPLETE reduce production assumes ->
-- On CHAR reduce production assumes ->
-- On CASE reduce production assumes ->
-- On BREAKS reduce production assumes ->
-- On BOOLEAN reduce production assumes ->
-- On BOOL reduce production assumes ->
-- On BEHAVIORS reduce production assumes ->
-- On BEHAVIOR reduce production assumes ->
-- On AXIOMATIC reduce production assumes ->
-- On AXIOM reduce production assumes ->
-- On ASSIGNS reduce production assumes ->
-- On ALLOCATES reduce production assumes ->

State 837:
## Known stack suffix:
## ASSUMES
## LR(1) items:
assumes -> ASSUMES . full_lexpr SEMICOLON assumes [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
assumes -> ASSUMES . full_lexpr clause_kw [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On full_lexpr shift to state 838
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 838:
## Known stack suffix:
## ASSUMES full_lexpr
## LR(1) items:
assumes -> ASSUMES full_lexpr . SEMICOLON assumes [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
assumes -> ASSUMES full_lexpr . clause_kw [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On SEMICOLON shift to state 839
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 759
-- On IDENTIFIER shift to state 760
-- On FREES shift to state 761
-- On EXITS shift to state 47
-- On EOF shift to state 762
-- On ENSURES shift to state 49
-- On DISJOINT shift to state 763
-- On DECREASES shift to state 764
-- On CONTINUES shift to state 56
-- On COMPLETE shift to state 765
-- On BREAKS shift to state 61
-- On BEHAVIOR shift to state 766
-- On ASSUMES shift to state 767
-- On ASSIGNS shift to state 768
-- On ALLOCATES shift to state 769
-- On post_cond shift to state 770
-- On clause_kw shift to state 841
## Reductions:

State 839:
## Known stack suffix:
## ASSUMES full_lexpr SEMICOLON
## LR(1) items:
assumes -> ASSUMES full_lexpr SEMICOLON . assumes [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On ASSUMES shift to state 837
-- On assumes shift to state 840
## Reductions:
-- On WRITES reduce production assumes ->
-- On VOLATILE reduce production assumes ->
-- On VOID reduce production assumes ->
-- On UNSIGNED reduce production assumes ->
-- On UNION reduce production assumes ->
-- On TYPENAME reduce production assumes ->
-- On TYPE reduce production assumes ->
-- On TERMINATES reduce production assumes ->
-- On STRUCT reduce production assumes ->
-- On STATIC reduce production assumes ->
-- On SIZEOF reduce production assumes ->
-- On SIGNED reduce production assumes ->
-- On SHORT reduce production assumes ->
-- On RETURNS reduce production assumes ->
-- On REQUIRES reduce production assumes ->
-- On REAL reduce production assumes ->
-- On READS reduce production assumes ->
-- On PREDICATE reduce production assumes ->
-- On MODULE reduce production assumes ->
-- On MODEL reduce production assumes ->
-- On LONG reduce production assumes ->
-- On LOGIC reduce production assumes ->
-- On LEMMA reduce production assumes ->
-- On LABEL reduce production assumes ->
-- On INTEGER reduce production assumes ->
-- On INT reduce production assumes ->
-- On INDUCTIVE reduce production assumes ->
-- On INCLUDE reduce production assumes ->
-- On IF reduce production assumes ->
-- On IDENTIFIER reduce production assumes ->
-- On GLOBAL reduce production assumes ->
-- On FUNCTION reduce production assumes ->
-- On FREES reduce production assumes ->
-- On FLOAT reduce production assumes ->
-- On EXT_LET reduce production assumes ->
-- On EXT_AT reduce production assumes ->
-- On EXITS reduce production assumes ->
-- On EOF reduce production assumes ->
-- On ENUM reduce production assumes ->
-- On ENSURES reduce production assumes ->
-- On ELSE reduce production assumes ->
-- On DOUBLE reduce production assumes ->
-- On DISJOINT reduce production assumes ->
-- On DECREASES reduce production assumes ->
-- On CONTRACT reduce production assumes ->
-- On CONTINUES reduce production assumes ->
-- On CONST reduce production assumes ->
-- On COMPLETE reduce production assumes ->
-- On CHAR reduce production assumes ->
-- On CASE reduce production assumes ->
-- On BREAKS reduce production assumes ->
-- On BOOLEAN reduce production assumes ->
-- On BOOL reduce production assumes ->
-- On BEHAVIORS reduce production assumes ->
-- On BEHAVIOR reduce production assumes ->
-- On AXIOMATIC reduce production assumes ->
-- On AXIOM reduce production assumes ->
-- On ASSIGNS reduce production assumes ->
-- On ALLOCATES reduce production assumes ->

State 840:
## Known stack suffix:
## ASSUMES full_lexpr SEMICOLON assumes
## LR(1) items:
assumes -> ASSUMES full_lexpr SEMICOLON assumes . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On VOLATILE reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On VOID reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On UNSIGNED reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On UNION reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On TYPENAME reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On TYPE reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On TERMINATES reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On STRUCT reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On STATIC reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On SIZEOF reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On SIGNED reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On SHORT reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On RETURNS reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On REQUIRES reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On REAL reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On READS reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On PREDICATE reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On MODULE reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On MODEL reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On LONG reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On LOGIC reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On LEMMA reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On LABEL reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On INTEGER reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On INT reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On INDUCTIVE reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On INCLUDE reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On IF reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On IDENTIFIER reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On GLOBAL reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On FUNCTION reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On FREES reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On FLOAT reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On EXT_LET reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On EXT_AT reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On EXITS reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On EOF reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On ENUM reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On ENSURES reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On ELSE reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On DOUBLE reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On DISJOINT reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On DECREASES reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On CONTRACT reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On CONTINUES reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On CONST reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On COMPLETE reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On CHAR reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On CASE reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On BREAKS reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On BOOLEAN reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On BOOL reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On BEHAVIORS reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On BEHAVIOR reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On AXIOMATIC reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On AXIOM reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On ASSIGNS reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes
-- On ALLOCATES reduce production assumes -> ASSUMES full_lexpr SEMICOLON assumes

State 841:
## Known stack suffix:
## ASSUMES full_lexpr clause_kw
## LR(1) items:
assumes -> ASSUMES full_lexpr clause_kw . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On VOLATILE reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On VOID reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On UNSIGNED reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On UNION reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On TYPENAME reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On TYPE reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On TERMINATES reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On STRUCT reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On STATIC reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On SIZEOF reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On SIGNED reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On SHORT reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On RETURNS reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On REQUIRES reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On REAL reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On READS reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On PREDICATE reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On MODULE reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On MODEL reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On LONG reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On LOGIC reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On LEMMA reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On LABEL reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On INTEGER reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On INT reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On INDUCTIVE reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On INCLUDE reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On IF reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On IDENTIFIER reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On GLOBAL reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On FUNCTION reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On FREES reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On FLOAT reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On EXT_LET reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On EXT_AT reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On EXITS reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On EOF reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On ENUM reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On ENSURES reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On ELSE reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On DOUBLE reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On DISJOINT reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On DECREASES reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On CONTRACT reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On CONTINUES reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On CONST reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On COMPLETE reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On CHAR reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On CASE reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On BREAKS reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On BOOLEAN reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On BOOL reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On BEHAVIORS reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On BEHAVIOR reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On AXIOMATIC reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On AXIOM reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On ASSIGNS reduce production assumes -> ASSUMES full_lexpr clause_kw
-- On ALLOCATES reduce production assumes -> ASSUMES full_lexpr clause_kw

State 842:
## Known stack suffix:
## BEHAVIOR behavior_name COLON behavior_body
## LR(1) items:
ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body . behaviors [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE AXIOMATIC AXIOM ]
## Transitions:
-- On BEHAVIOR shift to state 834
-- On ne_behaviors shift to state 843
-- On behaviors shift to state 844
## Reductions:
-- On VOLATILE reduce production behaviors ->
-- On TYPE reduce production behaviors ->
-- On TERMINATES reduce production behaviors ->
-- On PREDICATE reduce production behaviors ->
-- On MODULE reduce production behaviors ->
-- On MODEL reduce production behaviors ->
-- On LOGIC reduce production behaviors ->
-- On LEMMA reduce production behaviors ->
-- On INDUCTIVE reduce production behaviors ->
-- On INCLUDE reduce production behaviors ->
-- On GLOBAL reduce production behaviors ->
-- On FUNCTION reduce production behaviors ->
-- On EXT_LET reduce production behaviors ->
-- On EXT_AT reduce production behaviors ->
-- On EOF reduce production behaviors ->
-- On DISJOINT reduce production behaviors ->
-- On DECREASES reduce production behaviors ->
-- On CONTRACT reduce production behaviors ->
-- On COMPLETE reduce production behaviors ->
-- On AXIOMATIC reduce production behaviors ->
-- On AXIOM reduce production behaviors ->

State 843:
## Known stack suffix:
## ne_behaviors
## LR(1) items:
behaviors -> ne_behaviors . [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production behaviors -> ne_behaviors
-- On TYPE reduce production behaviors -> ne_behaviors
-- On TERMINATES reduce production behaviors -> ne_behaviors
-- On PREDICATE reduce production behaviors -> ne_behaviors
-- On MODULE reduce production behaviors -> ne_behaviors
-- On MODEL reduce production behaviors -> ne_behaviors
-- On LOGIC reduce production behaviors -> ne_behaviors
-- On LEMMA reduce production behaviors -> ne_behaviors
-- On INDUCTIVE reduce production behaviors -> ne_behaviors
-- On INCLUDE reduce production behaviors -> ne_behaviors
-- On GLOBAL reduce production behaviors -> ne_behaviors
-- On FUNCTION reduce production behaviors -> ne_behaviors
-- On EXT_LET reduce production behaviors -> ne_behaviors
-- On EXT_AT reduce production behaviors -> ne_behaviors
-- On EOF reduce production behaviors -> ne_behaviors
-- On DISJOINT reduce production behaviors -> ne_behaviors
-- On DECREASES reduce production behaviors -> ne_behaviors
-- On CONTRACT reduce production behaviors -> ne_behaviors
-- On COMPLETE reduce production behaviors -> ne_behaviors
-- On AXIOMATIC reduce production behaviors -> ne_behaviors
-- On AXIOM reduce production behaviors -> ne_behaviors

State 844:
## Known stack suffix:
## BEHAVIOR behavior_name COLON behavior_body behaviors
## LR(1) items:
ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors . [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On TYPE reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On TERMINATES reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On PREDICATE reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On MODULE reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On MODEL reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On LOGIC reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On LEMMA reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On INDUCTIVE reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On INCLUDE reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On GLOBAL reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On FUNCTION reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On EXT_LET reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On EXT_AT reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On EOF reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On DISJOINT reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On DECREASES reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On CONTRACT reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On COMPLETE reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On AXIOMATIC reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors
-- On AXIOM reduce production ne_behaviors -> BEHAVIOR behavior_name COLON behavior_body behaviors

State 845:
## Known stack suffix:
## assumes
## LR(1) items:
behavior_body -> assumes . requires simple_clauses [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ]
behavior_body -> assumes . ne_requires ASSUMES [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ]
behavior_body -> assumes . requires ne_simple_clauses ASSUMES [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ]
behavior_body -> assumes . requires ne_simple_clauses REQUIRES [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ]
## Transitions:
-- On REQUIRES shift to state 754
-- On requires shift to state 846
-- On ne_requires shift to state 851
## Reductions:
-- On WRITES reduce production requires ->
-- On VOLATILE reduce production requires ->
-- On VOID reduce production requires ->
-- On UNSIGNED reduce production requires ->
-- On UNION reduce production requires ->
-- On TYPENAME reduce production requires ->
-- On TYPE reduce production requires ->
-- On TERMINATES reduce production requires ->
-- On STRUCT reduce production requires ->
-- On STATIC reduce production requires ->
-- On SIZEOF reduce production requires ->
-- On SIGNED reduce production requires ->
-- On SHORT reduce production requires ->
-- On RETURNS reduce production requires ->
-- On REAL reduce production requires ->
-- On READS reduce production requires ->
-- On PREDICATE reduce production requires ->
-- On MODULE reduce production requires ->
-- On MODEL reduce production requires ->
-- On LONG reduce production requires ->
-- On LOGIC reduce production requires ->
-- On LEMMA reduce production requires ->
-- On LABEL reduce production requires ->
-- On INTEGER reduce production requires ->
-- On INT reduce production requires ->
-- On INDUCTIVE reduce production requires ->
-- On INCLUDE reduce production requires ->
-- On IF reduce production requires ->
-- On IDENTIFIER reduce production requires ->
-- On GLOBAL reduce production requires ->
-- On FUNCTION reduce production requires ->
-- On FREES reduce production requires ->
-- On FLOAT reduce production requires ->
-- On EXT_LET reduce production requires ->
-- On EXT_AT reduce production requires ->
-- On EXITS reduce production requires ->
-- On EOF reduce production requires ->
-- On ENUM reduce production requires ->
-- On ENSURES reduce production requires ->
-- On ELSE reduce production requires ->
-- On DOUBLE reduce production requires ->
-- On DISJOINT reduce production requires ->
-- On DECREASES reduce production requires ->
-- On CONTRACT reduce production requires ->
-- On CONTINUES reduce production requires ->
-- On CONST reduce production requires ->
-- On COMPLETE reduce production requires ->
-- On CHAR reduce production requires ->
-- On CASE reduce production requires ->
-- On BREAKS reduce production requires ->
-- On BOOLEAN reduce production requires ->
-- On BOOL reduce production requires ->
-- On BEHAVIORS reduce production requires ->
-- On BEHAVIOR reduce production requires ->
-- On AXIOMATIC reduce production requires ->
-- On AXIOM reduce production requires ->
-- On ASSIGNS reduce production requires ->
-- On ALLOCATES reduce production requires ->

State 846:
## Known stack suffix:
## assumes requires
## LR(1) items:
behavior_body -> assumes requires . simple_clauses [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ]
behavior_body -> assumes requires . ne_simple_clauses ASSUMES [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ]
behavior_body -> assumes requires . ne_simple_clauses REQUIRES [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ]
## Transitions:
-- On WRITES shift to state 1
-- On VOID shift to state 4
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REAL shift to state 21
-- On READS shift to state 22
-- On LONG shift to state 28
-- On LABEL shift to state 31
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On IF shift to state 38
-- On FREES shift to state 673
-- On FLOAT shift to state 44
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On ASSIGNS shift to state 813
-- On ALLOCATES shift to state 690
-- On simple_clauses shift to state 847
-- On post_cond_kind shift to state 817
-- On post_cond shift to state 821
-- On ne_simple_clauses shift to state 848
-- On is_acsl_other shift to state 692
-- On grammar_extension_name shift to state 693
-- On grammar_extension shift to state 823
-- On full_identifier_or_typename shift to state 697
-- On enter_kw_c_mode shift to state 698
-- On c_keyword shift to state 701
-- On allocation shift to state 826
## Reductions:
-- On VOLATILE reduce production simple_clauses ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production simple_clauses ->
-- On TERMINATES reduce production simple_clauses ->
-- On PREDICATE reduce production simple_clauses ->
-- On MODULE reduce production simple_clauses ->
-- On MODEL reduce production simple_clauses ->
-- On LOGIC reduce production simple_clauses ->
-- On LEMMA reduce production simple_clauses ->
-- On INDUCTIVE reduce production simple_clauses ->
-- On INCLUDE reduce production simple_clauses ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production simple_clauses ->
-- On FUNCTION reduce production simple_clauses ->
-- On EXT_LET reduce production simple_clauses ->
-- On EXT_AT reduce production simple_clauses ->
-- On EOF reduce production simple_clauses ->
-- On DISJOINT reduce production simple_clauses ->
-- On DECREASES reduce production simple_clauses ->
-- On CONTRACT reduce production simple_clauses ->
-- On COMPLETE reduce production simple_clauses ->
-- On BEHAVIOR reduce production simple_clauses ->
-- On AXIOMATIC reduce production simple_clauses ->
-- On AXIOM reduce production simple_clauses ->

State 847:
## Known stack suffix:
## assumes requires simple_clauses
## LR(1) items:
behavior_body -> assumes requires simple_clauses . [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production behavior_body -> assumes requires simple_clauses
-- On TYPE reduce production behavior_body -> assumes requires simple_clauses
-- On TERMINATES reduce production behavior_body -> assumes requires simple_clauses
-- On PREDICATE reduce production behavior_body -> assumes requires simple_clauses
-- On MODULE reduce production behavior_body -> assumes requires simple_clauses
-- On MODEL reduce production behavior_body -> assumes requires simple_clauses
-- On LOGIC reduce production behavior_body -> assumes requires simple_clauses
-- On LEMMA reduce production behavior_body -> assumes requires simple_clauses
-- On INDUCTIVE reduce production behavior_body -> assumes requires simple_clauses
-- On INCLUDE reduce production behavior_body -> assumes requires simple_clauses
-- On GLOBAL reduce production behavior_body -> assumes requires simple_clauses
-- On FUNCTION reduce production behavior_body -> assumes requires simple_clauses
-- On EXT_LET reduce production behavior_body -> assumes requires simple_clauses
-- On EXT_AT reduce production behavior_body -> assumes requires simple_clauses
-- On EOF reduce production behavior_body -> assumes requires simple_clauses
-- On DISJOINT reduce production behavior_body -> assumes requires simple_clauses
-- On DECREASES reduce production behavior_body -> assumes requires simple_clauses
-- On CONTRACT reduce production behavior_body -> assumes requires simple_clauses
-- On COMPLETE reduce production behavior_body -> assumes requires simple_clauses
-- On BEHAVIOR reduce production behavior_body -> assumes requires simple_clauses
-- On AXIOMATIC reduce production behavior_body -> assumes requires simple_clauses
-- On AXIOM reduce production behavior_body -> assumes requires simple_clauses

State 848:
## Known stack suffix:
## assumes requires ne_simple_clauses
## LR(1) items:
behavior_body -> assumes requires ne_simple_clauses . ASSUMES [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ]
behavior_body -> assumes requires ne_simple_clauses . REQUIRES [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ]
simple_clauses -> ne_simple_clauses . [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ]
## Transitions:
-- On REQUIRES shift to state 849
-- On ASSUMES shift to state 850
## Reductions:
-- On VOLATILE reduce production simple_clauses -> ne_simple_clauses
-- On TYPE reduce production simple_clauses -> ne_simple_clauses
-- On TERMINATES reduce production simple_clauses -> ne_simple_clauses
-- On PREDICATE reduce production simple_clauses -> ne_simple_clauses
-- On MODULE reduce production simple_clauses -> ne_simple_clauses
-- On MODEL reduce production simple_clauses -> ne_simple_clauses
-- On LOGIC reduce production simple_clauses -> ne_simple_clauses
-- On LEMMA reduce production simple_clauses -> ne_simple_clauses
-- On INDUCTIVE reduce production simple_clauses -> ne_simple_clauses
-- On INCLUDE reduce production simple_clauses -> ne_simple_clauses
-- On GLOBAL reduce production simple_clauses -> ne_simple_clauses
-- On FUNCTION reduce production simple_clauses -> ne_simple_clauses
-- On EXT_LET reduce production simple_clauses -> ne_simple_clauses
-- On EXT_AT reduce production simple_clauses -> ne_simple_clauses
-- On EOF reduce production simple_clauses -> ne_simple_clauses
-- On DISJOINT reduce production simple_clauses -> ne_simple_clauses
-- On DECREASES reduce production simple_clauses -> ne_simple_clauses
-- On CONTRACT reduce production simple_clauses -> ne_simple_clauses
-- On COMPLETE reduce production simple_clauses -> ne_simple_clauses
-- On BEHAVIOR reduce production simple_clauses -> ne_simple_clauses
-- On AXIOMATIC reduce production simple_clauses -> ne_simple_clauses
-- On AXIOM reduce production simple_clauses -> ne_simple_clauses

State 849:
## Known stack suffix:
## assumes requires ne_simple_clauses REQUIRES
## LR(1) items:
behavior_body -> assumes requires ne_simple_clauses REQUIRES . [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On TYPE reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On TERMINATES reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On PREDICATE reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On MODULE reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On MODEL reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On LOGIC reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On LEMMA reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On INDUCTIVE reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On INCLUDE reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On GLOBAL reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On FUNCTION reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On EXT_LET reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On EXT_AT reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On EOF reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On DISJOINT reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On DECREASES reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On CONTRACT reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On COMPLETE reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On BEHAVIOR reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On AXIOMATIC reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES
-- On AXIOM reduce production behavior_body -> assumes requires ne_simple_clauses REQUIRES

State 850:
## Known stack suffix:
## assumes requires ne_simple_clauses ASSUMES
## LR(1) items:
behavior_body -> assumes requires ne_simple_clauses ASSUMES . [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On TYPE reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On TERMINATES reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On PREDICATE reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On MODULE reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On MODEL reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On LOGIC reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On LEMMA reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On INDUCTIVE reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On INCLUDE reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On GLOBAL reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On FUNCTION reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On EXT_LET reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On EXT_AT reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On EOF reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On DISJOINT reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On DECREASES reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On CONTRACT reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On COMPLETE reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On BEHAVIOR reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On AXIOMATIC reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES
-- On AXIOM reduce production behavior_body -> assumes requires ne_simple_clauses ASSUMES

State 851:
## Known stack suffix:
## assumes ne_requires
## LR(1) items:
behavior_body -> assumes ne_requires . ASSUMES [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ]
requires -> ne_requires . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On ASSUMES shift to state 852
## Reductions:
-- On WRITES reduce production requires -> ne_requires
-- On VOLATILE reduce production requires -> ne_requires
-- On VOID reduce production requires -> ne_requires
-- On UNSIGNED reduce production requires -> ne_requires
-- On UNION reduce production requires -> ne_requires
-- On TYPENAME reduce production requires -> ne_requires
-- On TYPE reduce production requires -> ne_requires
-- On TERMINATES reduce production requires -> ne_requires
-- On STRUCT reduce production requires -> ne_requires
-- On STATIC reduce production requires -> ne_requires
-- On SIZEOF reduce production requires -> ne_requires
-- On SIGNED reduce production requires -> ne_requires
-- On SHORT reduce production requires -> ne_requires
-- On RETURNS reduce production requires -> ne_requires
-- On REAL reduce production requires -> ne_requires
-- On READS reduce production requires -> ne_requires
-- On PREDICATE reduce production requires -> ne_requires
-- On MODULE reduce production requires -> ne_requires
-- On MODEL reduce production requires -> ne_requires
-- On LONG reduce production requires -> ne_requires
-- On LOGIC reduce production requires -> ne_requires
-- On LEMMA reduce production requires -> ne_requires
-- On LABEL reduce production requires -> ne_requires
-- On INTEGER reduce production requires -> ne_requires
-- On INT reduce production requires -> ne_requires
-- On INDUCTIVE reduce production requires -> ne_requires
-- On INCLUDE reduce production requires -> ne_requires
-- On IF reduce production requires -> ne_requires
-- On IDENTIFIER reduce production requires -> ne_requires
-- On GLOBAL reduce production requires -> ne_requires
-- On FUNCTION reduce production requires -> ne_requires
-- On FREES reduce production requires -> ne_requires
-- On FLOAT reduce production requires -> ne_requires
-- On EXT_LET reduce production requires -> ne_requires
-- On EXT_AT reduce production requires -> ne_requires
-- On EXITS reduce production requires -> ne_requires
-- On EOF reduce production requires -> ne_requires
-- On ENUM reduce production requires -> ne_requires
-- On ENSURES reduce production requires -> ne_requires
-- On ELSE reduce production requires -> ne_requires
-- On DOUBLE reduce production requires -> ne_requires
-- On DISJOINT reduce production requires -> ne_requires
-- On DECREASES reduce production requires -> ne_requires
-- On CONTRACT reduce production requires -> ne_requires
-- On CONTINUES reduce production requires -> ne_requires
-- On CONST reduce production requires -> ne_requires
-- On COMPLETE reduce production requires -> ne_requires
-- On CHAR reduce production requires -> ne_requires
-- On CASE reduce production requires -> ne_requires
-- On BREAKS reduce production requires -> ne_requires
-- On BOOLEAN reduce production requires -> ne_requires
-- On BOOL reduce production requires -> ne_requires
-- On BEHAVIORS reduce production requires -> ne_requires
-- On BEHAVIOR reduce production requires -> ne_requires
-- On AXIOMATIC reduce production requires -> ne_requires
-- On AXIOM reduce production requires -> ne_requires
-- On ASSIGNS reduce production requires -> ne_requires
-- On ALLOCATES reduce production requires -> ne_requires

State 852:
## Known stack suffix:
## assumes ne_requires ASSUMES
## LR(1) items:
behavior_body -> assumes ne_requires ASSUMES . [ VOLATILE TYPE TERMINATES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT DECREASES CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production behavior_body -> assumes ne_requires ASSUMES
-- On TYPE reduce production behavior_body -> assumes ne_requires ASSUMES
-- On TERMINATES reduce production behavior_body -> assumes ne_requires ASSUMES
-- On PREDICATE reduce production behavior_body -> assumes ne_requires ASSUMES
-- On MODULE reduce production behavior_body -> assumes ne_requires ASSUMES
-- On MODEL reduce production behavior_body -> assumes ne_requires ASSUMES
-- On LOGIC reduce production behavior_body -> assumes ne_requires ASSUMES
-- On LEMMA reduce production behavior_body -> assumes ne_requires ASSUMES
-- On INDUCTIVE reduce production behavior_body -> assumes ne_requires ASSUMES
-- On INCLUDE reduce production behavior_body -> assumes ne_requires ASSUMES
-- On GLOBAL reduce production behavior_body -> assumes ne_requires ASSUMES
-- On FUNCTION reduce production behavior_body -> assumes ne_requires ASSUMES
-- On EXT_LET reduce production behavior_body -> assumes ne_requires ASSUMES
-- On EXT_AT reduce production behavior_body -> assumes ne_requires ASSUMES
-- On EOF reduce production behavior_body -> assumes ne_requires ASSUMES
-- On DISJOINT reduce production behavior_body -> assumes ne_requires ASSUMES
-- On DECREASES reduce production behavior_body -> assumes ne_requires ASSUMES
-- On CONTRACT reduce production behavior_body -> assumes ne_requires ASSUMES
-- On COMPLETE reduce production behavior_body -> assumes ne_requires ASSUMES
-- On BEHAVIOR reduce production behavior_body -> assumes ne_requires ASSUMES
-- On AXIOMATIC reduce production behavior_body -> assumes ne_requires ASSUMES
-- On AXIOM reduce production behavior_body -> assumes ne_requires ASSUMES

State 853:
## Known stack suffix:
## requires terminates decreases simple_clauses ne_behaviors
## LR(1) items:
behaviors -> ne_behaviors . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT CONTRACT COMPLETE AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses ne_behaviors . TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses ne_behaviors . DECREASES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On TERMINATES shift to state 854
-- On DECREASES shift to state 855
## Reductions:
-- On VOLATILE reduce production behaviors -> ne_behaviors
-- On TYPE reduce production behaviors -> ne_behaviors
-- On PREDICATE reduce production behaviors -> ne_behaviors
-- On MODULE reduce production behaviors -> ne_behaviors
-- On MODEL reduce production behaviors -> ne_behaviors
-- On LOGIC reduce production behaviors -> ne_behaviors
-- On LEMMA reduce production behaviors -> ne_behaviors
-- On INDUCTIVE reduce production behaviors -> ne_behaviors
-- On INCLUDE reduce production behaviors -> ne_behaviors
-- On GLOBAL reduce production behaviors -> ne_behaviors
-- On FUNCTION reduce production behaviors -> ne_behaviors
-- On EXT_LET reduce production behaviors -> ne_behaviors
-- On EXT_AT reduce production behaviors -> ne_behaviors
-- On EOF reduce production behaviors -> ne_behaviors
-- On DISJOINT reduce production behaviors -> ne_behaviors
-- On CONTRACT reduce production behaviors -> ne_behaviors
-- On COMPLETE reduce production behaviors -> ne_behaviors
-- On AXIOMATIC reduce production behaviors -> ne_behaviors
-- On AXIOM reduce production behaviors -> ne_behaviors

State 854:
## Known stack suffix:
## requires terminates decreases simple_clauses ne_behaviors TERMINATES
## LR(1) items:
contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES
-- On TYPE reduce production contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES
-- On PREDICATE reduce production contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES
-- On MODULE reduce production contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES
-- On MODEL reduce production contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES
-- On LOGIC reduce production contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES
-- On LEMMA reduce production contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES
-- On INDUCTIVE reduce production contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES
-- On INCLUDE reduce production contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES
-- On GLOBAL reduce production contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES
-- On FUNCTION reduce production contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES
-- On EXT_LET reduce production contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES
-- On EXT_AT reduce production contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES
-- On EOF reduce production contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES
-- On CONTRACT reduce production contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES
-- On AXIOMATIC reduce production contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES
-- On AXIOM reduce production contract -> requires terminates decreases simple_clauses ne_behaviors TERMINATES

State 855:
## Known stack suffix:
## requires terminates decreases simple_clauses ne_behaviors DECREASES
## LR(1) items:
contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES
-- On TYPE reduce production contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES
-- On PREDICATE reduce production contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES
-- On MODULE reduce production contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES
-- On MODEL reduce production contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES
-- On LOGIC reduce production contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES
-- On LEMMA reduce production contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES
-- On INDUCTIVE reduce production contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES
-- On INCLUDE reduce production contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES
-- On GLOBAL reduce production contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES
-- On FUNCTION reduce production contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES
-- On EXT_LET reduce production contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES
-- On EXT_AT reduce production contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES
-- On EOF reduce production contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES
-- On CONTRACT reduce production contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES
-- On AXIOMATIC reduce production contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES
-- On AXIOM reduce production contract -> requires terminates decreases simple_clauses ne_behaviors DECREASES

State 856:
## Known stack suffix:
## requires terminates decreases simple_clauses behaviors
## LR(1) items:
contract -> requires terminates decreases simple_clauses behaviors . complete_or_disjoint [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses behaviors . ne_complete_or_disjoint REQUIRES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses behaviors . ne_complete_or_disjoint TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses behaviors . ne_complete_or_disjoint DECREASES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses behaviors . ne_complete_or_disjoint BEHAVIOR [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses behaviors . ne_complete_or_disjoint ASSIGNS [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses behaviors . ne_complete_or_disjoint ALLOCATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses behaviors . ne_complete_or_disjoint FREES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses behaviors . ne_complete_or_disjoint post_cond_kind [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On DISJOINT shift to state 857
-- On COMPLETE shift to state 863
-- On ne_complete_or_disjoint shift to state 872
-- On complete_or_disjoint shift to state 881
## Reductions:
-- On VOLATILE reduce production complete_or_disjoint ->
-- On TYPE reduce production complete_or_disjoint ->
-- On PREDICATE reduce production complete_or_disjoint ->
-- On MODULE reduce production complete_or_disjoint ->
-- On MODEL reduce production complete_or_disjoint ->
-- On LOGIC reduce production complete_or_disjoint ->
-- On LEMMA reduce production complete_or_disjoint ->
-- On INDUCTIVE reduce production complete_or_disjoint ->
-- On INCLUDE reduce production complete_or_disjoint ->
-- On GLOBAL reduce production complete_or_disjoint ->
-- On FUNCTION reduce production complete_or_disjoint ->
-- On EXT_LET reduce production complete_or_disjoint ->
-- On EXT_AT reduce production complete_or_disjoint ->
-- On EOF reduce production complete_or_disjoint ->
-- On CONTRACT reduce production complete_or_disjoint ->
-- On AXIOMATIC reduce production complete_or_disjoint ->
-- On AXIOM reduce production complete_or_disjoint ->

State 857:
## Known stack suffix:
## DISJOINT
## LR(1) items:
ne_complete_or_disjoint -> DISJOINT . BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
ne_complete_or_disjoint -> DISJOINT . BEHAVIORS ne_behavior_name_list clause_kw [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On BEHAVIORS shift to state 858
## Reductions:

State 858:
## Known stack suffix:
## DISJOINT BEHAVIORS
## LR(1) items:
ne_complete_or_disjoint -> DISJOINT BEHAVIORS . behavior_name_list SEMICOLON complete_or_disjoint [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
ne_complete_or_disjoint -> DISJOINT BEHAVIORS . ne_behavior_name_list clause_kw [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_behavior_name_list shift to state 859
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On behavior_name_list shift to state 861
-- On behavior_name shift to state 792
-- On any_identifier shift to state 795
-- On acsl_c_keyword shift to state 87
## Reductions:
-- On SEMICOLON reduce production behavior_name_list ->

State 859:
## Known stack suffix:
## DISJOINT BEHAVIORS ne_behavior_name_list
## LR(1) items:
behavior_name_list -> ne_behavior_name_list . [ SEMICOLON ]
ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list . clause_kw [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 759
-- On IDENTIFIER shift to state 760
-- On FREES shift to state 761
-- On EXITS shift to state 47
-- On EOF shift to state 762
-- On ENSURES shift to state 49
-- On DISJOINT shift to state 763
-- On DECREASES shift to state 764
-- On CONTINUES shift to state 56
-- On COMPLETE shift to state 765
-- On BREAKS shift to state 61
-- On BEHAVIOR shift to state 766
-- On ASSUMES shift to state 767
-- On ASSIGNS shift to state 768
-- On ALLOCATES shift to state 769
-- On post_cond shift to state 770
-- On clause_kw shift to state 860
## Reductions:
-- On SEMICOLON reduce production behavior_name_list -> ne_behavior_name_list

State 860:
## Known stack suffix:
## DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
## LR(1) items:
ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw . [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On TYPE reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On TERMINATES reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On RETURNS reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On REQUIRES reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On PREDICATE reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On MODULE reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On MODEL reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On LOGIC reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On LEMMA reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On INDUCTIVE reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On INCLUDE reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On GLOBAL reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On FUNCTION reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On FREES reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On EXT_LET reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On EXT_AT reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On EXITS reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On EOF reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On ENSURES reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On DECREASES reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On CONTRACT reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On CONTINUES reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On BREAKS reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On BEHAVIOR reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On AXIOMATIC reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On AXIOM reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On ASSIGNS reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw
-- On ALLOCATES reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS ne_behavior_name_list clause_kw

State 861:
## Known stack suffix:
## DISJOINT BEHAVIORS behavior_name_list
## LR(1) items:
ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list . SEMICOLON complete_or_disjoint [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On SEMICOLON shift to state 862
## Reductions:

State 862:
## Known stack suffix:
## DISJOINT BEHAVIORS behavior_name_list SEMICOLON
## LR(1) items:
ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON . complete_or_disjoint [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On DISJOINT shift to state 857
-- On COMPLETE shift to state 863
-- On ne_complete_or_disjoint shift to state 869
-- On complete_or_disjoint shift to state 871
## Reductions:
-- On VOLATILE reduce production complete_or_disjoint ->
-- On TYPE reduce production complete_or_disjoint ->
-- On TERMINATES reduce production complete_or_disjoint ->
-- On RETURNS reduce production complete_or_disjoint ->
-- On REQUIRES reduce production complete_or_disjoint ->
-- On PREDICATE reduce production complete_or_disjoint ->
-- On MODULE reduce production complete_or_disjoint ->
-- On MODEL reduce production complete_or_disjoint ->
-- On LOGIC reduce production complete_or_disjoint ->
-- On LEMMA reduce production complete_or_disjoint ->
-- On INDUCTIVE reduce production complete_or_disjoint ->
-- On INCLUDE reduce production complete_or_disjoint ->
-- On GLOBAL reduce production complete_or_disjoint ->
-- On FUNCTION reduce production complete_or_disjoint ->
-- On FREES reduce production complete_or_disjoint ->
-- On EXT_LET reduce production complete_or_disjoint ->
-- On EXT_AT reduce production complete_or_disjoint ->
-- On EXITS reduce production complete_or_disjoint ->
-- On EOF reduce production complete_or_disjoint ->
-- On ENSURES reduce production complete_or_disjoint ->
-- On DECREASES reduce production complete_or_disjoint ->
-- On CONTRACT reduce production complete_or_disjoint ->
-- On CONTINUES reduce production complete_or_disjoint ->
-- On BREAKS reduce production complete_or_disjoint ->
-- On BEHAVIOR reduce production complete_or_disjoint ->
-- On AXIOMATIC reduce production complete_or_disjoint ->
-- On AXIOM reduce production complete_or_disjoint ->
-- On ASSIGNS reduce production complete_or_disjoint ->
-- On ALLOCATES reduce production complete_or_disjoint ->

State 863:
## Known stack suffix:
## COMPLETE
## LR(1) items:
ne_complete_or_disjoint -> COMPLETE . BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
ne_complete_or_disjoint -> COMPLETE . BEHAVIORS ne_behavior_name_list clause_kw [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On BEHAVIORS shift to state 864
## Reductions:

State 864:
## Known stack suffix:
## COMPLETE BEHAVIORS
## LR(1) items:
ne_complete_or_disjoint -> COMPLETE BEHAVIORS . behavior_name_list SEMICOLON complete_or_disjoint [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
ne_complete_or_disjoint -> COMPLETE BEHAVIORS . ne_behavior_name_list clause_kw [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_behavior_name_list shift to state 865
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On behavior_name_list shift to state 867
-- On behavior_name shift to state 792
-- On any_identifier shift to state 795
-- On acsl_c_keyword shift to state 87
## Reductions:
-- On SEMICOLON reduce production behavior_name_list ->

State 865:
## Known stack suffix:
## COMPLETE BEHAVIORS ne_behavior_name_list
## LR(1) items:
behavior_name_list -> ne_behavior_name_list . [ SEMICOLON ]
ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list . clause_kw [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 759
-- On IDENTIFIER shift to state 760
-- On FREES shift to state 761
-- On EXITS shift to state 47
-- On EOF shift to state 762
-- On ENSURES shift to state 49
-- On DISJOINT shift to state 763
-- On DECREASES shift to state 764
-- On CONTINUES shift to state 56
-- On COMPLETE shift to state 765
-- On BREAKS shift to state 61
-- On BEHAVIOR shift to state 766
-- On ASSUMES shift to state 767
-- On ASSIGNS shift to state 768
-- On ALLOCATES shift to state 769
-- On post_cond shift to state 770
-- On clause_kw shift to state 866
## Reductions:
-- On SEMICOLON reduce production behavior_name_list -> ne_behavior_name_list

State 866:
## Known stack suffix:
## COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
## LR(1) items:
ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw . [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On TYPE reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On TERMINATES reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On RETURNS reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On REQUIRES reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On PREDICATE reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On MODULE reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On MODEL reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On LOGIC reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On LEMMA reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On INDUCTIVE reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On INCLUDE reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On GLOBAL reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On FUNCTION reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On FREES reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On EXT_LET reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On EXT_AT reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On EXITS reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On EOF reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On ENSURES reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On DECREASES reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On CONTRACT reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On CONTINUES reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On BREAKS reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On BEHAVIOR reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On AXIOMATIC reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On AXIOM reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On ASSIGNS reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw
-- On ALLOCATES reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS ne_behavior_name_list clause_kw

State 867:
## Known stack suffix:
## COMPLETE BEHAVIORS behavior_name_list
## LR(1) items:
ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list . SEMICOLON complete_or_disjoint [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On SEMICOLON shift to state 868
## Reductions:

State 868:
## Known stack suffix:
## COMPLETE BEHAVIORS behavior_name_list SEMICOLON
## LR(1) items:
ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON . complete_or_disjoint [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On DISJOINT shift to state 857
-- On COMPLETE shift to state 863
-- On ne_complete_or_disjoint shift to state 869
-- On complete_or_disjoint shift to state 870
## Reductions:
-- On VOLATILE reduce production complete_or_disjoint ->
-- On TYPE reduce production complete_or_disjoint ->
-- On TERMINATES reduce production complete_or_disjoint ->
-- On RETURNS reduce production complete_or_disjoint ->
-- On REQUIRES reduce production complete_or_disjoint ->
-- On PREDICATE reduce production complete_or_disjoint ->
-- On MODULE reduce production complete_or_disjoint ->
-- On MODEL reduce production complete_or_disjoint ->
-- On LOGIC reduce production complete_or_disjoint ->
-- On LEMMA reduce production complete_or_disjoint ->
-- On INDUCTIVE reduce production complete_or_disjoint ->
-- On INCLUDE reduce production complete_or_disjoint ->
-- On GLOBAL reduce production complete_or_disjoint ->
-- On FUNCTION reduce production complete_or_disjoint ->
-- On FREES reduce production complete_or_disjoint ->
-- On EXT_LET reduce production complete_or_disjoint ->
-- On EXT_AT reduce production complete_or_disjoint ->
-- On EXITS reduce production complete_or_disjoint ->
-- On EOF reduce production complete_or_disjoint ->
-- On ENSURES reduce production complete_or_disjoint ->
-- On DECREASES reduce production complete_or_disjoint ->
-- On CONTRACT reduce production complete_or_disjoint ->
-- On CONTINUES reduce production complete_or_disjoint ->
-- On BREAKS reduce production complete_or_disjoint ->
-- On BEHAVIOR reduce production complete_or_disjoint ->
-- On AXIOMATIC reduce production complete_or_disjoint ->
-- On AXIOM reduce production complete_or_disjoint ->
-- On ASSIGNS reduce production complete_or_disjoint ->
-- On ALLOCATES reduce production complete_or_disjoint ->

State 869:
## Known stack suffix:
## ne_complete_or_disjoint
## LR(1) items:
complete_or_disjoint -> ne_complete_or_disjoint . [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On TYPE reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On TERMINATES reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On RETURNS reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On REQUIRES reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On PREDICATE reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On MODULE reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On MODEL reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On LOGIC reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On LEMMA reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On INDUCTIVE reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On INCLUDE reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On GLOBAL reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On FUNCTION reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On FREES reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On EXT_LET reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On EXT_AT reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On EXITS reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On EOF reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On ENSURES reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On DECREASES reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On CONTRACT reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On CONTINUES reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On BREAKS reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On BEHAVIOR reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On AXIOMATIC reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On AXIOM reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On ASSIGNS reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On ALLOCATES reduce production complete_or_disjoint -> ne_complete_or_disjoint

State 870:
## Known stack suffix:
## COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
## LR(1) items:
ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint . [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On TYPE reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On TERMINATES reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On RETURNS reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On REQUIRES reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On PREDICATE reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On MODULE reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On MODEL reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On LOGIC reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On LEMMA reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On INDUCTIVE reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On INCLUDE reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On GLOBAL reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On FUNCTION reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On FREES reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On EXT_LET reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On EXT_AT reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On EXITS reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On EOF reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On ENSURES reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On DECREASES reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On CONTRACT reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On CONTINUES reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On BREAKS reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On BEHAVIOR reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On AXIOMATIC reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On AXIOM reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On ASSIGNS reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On ALLOCATES reduce production ne_complete_or_disjoint -> COMPLETE BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint

State 871:
## Known stack suffix:
## DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
## LR(1) items:
ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint . [ VOLATILE TYPE TERMINATES RETURNS REQUIRES PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION FREES EXT_LET EXT_AT EXITS EOF ENSURES DECREASES CONTRACT CONTINUES BREAKS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On TYPE reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On TERMINATES reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On RETURNS reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On REQUIRES reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On PREDICATE reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On MODULE reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On MODEL reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On LOGIC reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On LEMMA reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On INDUCTIVE reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On INCLUDE reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On GLOBAL reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On FUNCTION reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On FREES reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On EXT_LET reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On EXT_AT reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On EXITS reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On EOF reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On ENSURES reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On DECREASES reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On CONTRACT reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On CONTINUES reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On BREAKS reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On BEHAVIOR reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On AXIOMATIC reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On AXIOM reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On ASSIGNS reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint
-- On ALLOCATES reduce production ne_complete_or_disjoint -> DISJOINT BEHAVIORS behavior_name_list SEMICOLON complete_or_disjoint

State 872:
## Known stack suffix:
## requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint
## LR(1) items:
complete_or_disjoint -> ne_complete_or_disjoint . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint . REQUIRES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint . TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint . DECREASES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint . BEHAVIOR [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint . ASSIGNS [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint . ALLOCATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint . FREES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint . post_cond_kind [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On TERMINATES shift to state 873
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 874
-- On FREES shift to state 875
-- On EXITS shift to state 47
-- On ENSURES shift to state 49
-- On DECREASES shift to state 876
-- On CONTINUES shift to state 56
-- On BREAKS shift to state 61
-- On BEHAVIOR shift to state 877
-- On ASSIGNS shift to state 878
-- On ALLOCATES shift to state 879
-- On post_cond_kind shift to state 880
-- On post_cond shift to state 821
## Reductions:
-- On VOLATILE reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On TYPE reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On PREDICATE reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On MODULE reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On MODEL reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On LOGIC reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On LEMMA reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On INDUCTIVE reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On INCLUDE reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On GLOBAL reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On FUNCTION reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On EXT_LET reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On EXT_AT reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On EOF reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On CONTRACT reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On AXIOMATIC reduce production complete_or_disjoint -> ne_complete_or_disjoint
-- On AXIOM reduce production complete_or_disjoint -> ne_complete_or_disjoint

State 873:
## Known stack suffix:
## requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES
## LR(1) items:
contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES
-- On TYPE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES
-- On PREDICATE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES
-- On MODULE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES
-- On MODEL reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES
-- On LOGIC reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES
-- On LEMMA reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES
-- On INDUCTIVE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES
-- On INCLUDE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES
-- On GLOBAL reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES
-- On FUNCTION reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES
-- On EXT_LET reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES
-- On EXT_AT reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES
-- On EOF reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES
-- On CONTRACT reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES
-- On AXIOMATIC reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES
-- On AXIOM reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint TERMINATES

State 874:
## Known stack suffix:
## requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES
## LR(1) items:
contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES
-- On TYPE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES
-- On PREDICATE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES
-- On MODULE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES
-- On MODEL reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES
-- On LOGIC reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES
-- On LEMMA reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES
-- On INDUCTIVE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES
-- On INCLUDE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES
-- On GLOBAL reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES
-- On FUNCTION reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES
-- On EXT_LET reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES
-- On EXT_AT reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES
-- On EOF reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES
-- On CONTRACT reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES
-- On AXIOMATIC reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES
-- On AXIOM reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint REQUIRES

State 875:
## Known stack suffix:
## requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES
## LR(1) items:
contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES
-- On TYPE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES
-- On PREDICATE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES
-- On MODULE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES
-- On MODEL reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES
-- On LOGIC reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES
-- On LEMMA reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES
-- On INDUCTIVE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES
-- On INCLUDE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES
-- On GLOBAL reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES
-- On FUNCTION reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES
-- On EXT_LET reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES
-- On EXT_AT reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES
-- On EOF reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES
-- On CONTRACT reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES
-- On AXIOMATIC reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES
-- On AXIOM reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint FREES

State 876:
## Known stack suffix:
## requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES
## LR(1) items:
contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES
-- On TYPE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES
-- On PREDICATE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES
-- On MODULE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES
-- On MODEL reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES
-- On LOGIC reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES
-- On LEMMA reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES
-- On INDUCTIVE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES
-- On INCLUDE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES
-- On GLOBAL reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES
-- On FUNCTION reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES
-- On EXT_LET reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES
-- On EXT_AT reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES
-- On EOF reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES
-- On CONTRACT reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES
-- On AXIOMATIC reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES
-- On AXIOM reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint DECREASES

State 877:
## Known stack suffix:
## requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR
## LR(1) items:
contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR
-- On TYPE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR
-- On PREDICATE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR
-- On MODULE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR
-- On MODEL reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR
-- On LOGIC reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR
-- On LEMMA reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR
-- On INDUCTIVE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR
-- On INCLUDE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR
-- On GLOBAL reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR
-- On FUNCTION reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR
-- On EXT_LET reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR
-- On EXT_AT reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR
-- On EOF reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR
-- On CONTRACT reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR
-- On AXIOMATIC reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR
-- On AXIOM reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint BEHAVIOR

State 878:
## Known stack suffix:
## requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS
## LR(1) items:
contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS
-- On TYPE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS
-- On PREDICATE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS
-- On MODULE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS
-- On MODEL reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS
-- On LOGIC reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS
-- On LEMMA reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS
-- On INDUCTIVE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS
-- On INCLUDE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS
-- On GLOBAL reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS
-- On FUNCTION reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS
-- On EXT_LET reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS
-- On EXT_AT reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS
-- On EOF reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS
-- On CONTRACT reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS
-- On AXIOMATIC reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS
-- On AXIOM reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ASSIGNS

State 879:
## Known stack suffix:
## requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES
## LR(1) items:
contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES
-- On TYPE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES
-- On PREDICATE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES
-- On MODULE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES
-- On MODEL reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES
-- On LOGIC reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES
-- On LEMMA reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES
-- On INDUCTIVE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES
-- On INCLUDE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES
-- On GLOBAL reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES
-- On FUNCTION reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES
-- On EXT_LET reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES
-- On EXT_AT reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES
-- On EOF reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES
-- On CONTRACT reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES
-- On AXIOMATIC reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES
-- On AXIOM reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint ALLOCATES

State 880:
## Known stack suffix:
## requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind
## LR(1) items:
contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind
-- On TYPE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind
-- On PREDICATE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind
-- On MODULE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind
-- On MODEL reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind
-- On LOGIC reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind
-- On LEMMA reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind
-- On INDUCTIVE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind
-- On INCLUDE reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind
-- On GLOBAL reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind
-- On FUNCTION reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind
-- On EXT_LET reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind
-- On EXT_AT reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind
-- On EOF reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind
-- On CONTRACT reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind
-- On AXIOMATIC reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind
-- On AXIOM reduce production contract -> requires terminates decreases simple_clauses behaviors ne_complete_or_disjoint post_cond_kind

State 881:
## Known stack suffix:
## requires terminates decreases simple_clauses behaviors complete_or_disjoint
## LR(1) items:
contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint
-- On TYPE reduce production contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint
-- On PREDICATE reduce production contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint
-- On MODULE reduce production contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint
-- On MODEL reduce production contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint
-- On LOGIC reduce production contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint
-- On LEMMA reduce production contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint
-- On INDUCTIVE reduce production contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint
-- On INCLUDE reduce production contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint
-- On GLOBAL reduce production contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint
-- On FUNCTION reduce production contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint
-- On EXT_LET reduce production contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint
-- On EXT_AT reduce production contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint
-- On EOF reduce production contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint
-- On CONTRACT reduce production contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint
-- On AXIOMATIC reduce production contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint
-- On AXIOM reduce production contract -> requires terminates decreases simple_clauses behaviors complete_or_disjoint

State 882:
## Known stack suffix:
## requires terminates decreases ne_simple_clauses
## LR(1) items:
contract -> requires terminates decreases ne_simple_clauses . REQUIRES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases ne_simple_clauses . TERMINATES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
contract -> requires terminates decreases ne_simple_clauses . DECREASES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
simple_clauses -> ne_simple_clauses . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF DISJOINT CONTRACT COMPLETE BEHAVIOR AXIOMATIC AXIOM ]
## Transitions:
-- On TERMINATES shift to state 883
-- On REQUIRES shift to state 884
-- On DECREASES shift to state 885
## Reductions:
-- On VOLATILE reduce production simple_clauses -> ne_simple_clauses
-- On TYPE reduce production simple_clauses -> ne_simple_clauses
-- On PREDICATE reduce production simple_clauses -> ne_simple_clauses
-- On MODULE reduce production simple_clauses -> ne_simple_clauses
-- On MODEL reduce production simple_clauses -> ne_simple_clauses
-- On LOGIC reduce production simple_clauses -> ne_simple_clauses
-- On LEMMA reduce production simple_clauses -> ne_simple_clauses
-- On INDUCTIVE reduce production simple_clauses -> ne_simple_clauses
-- On INCLUDE reduce production simple_clauses -> ne_simple_clauses
-- On GLOBAL reduce production simple_clauses -> ne_simple_clauses
-- On FUNCTION reduce production simple_clauses -> ne_simple_clauses
-- On EXT_LET reduce production simple_clauses -> ne_simple_clauses
-- On EXT_AT reduce production simple_clauses -> ne_simple_clauses
-- On EOF reduce production simple_clauses -> ne_simple_clauses
-- On DISJOINT reduce production simple_clauses -> ne_simple_clauses
-- On CONTRACT reduce production simple_clauses -> ne_simple_clauses
-- On COMPLETE reduce production simple_clauses -> ne_simple_clauses
-- On BEHAVIOR reduce production simple_clauses -> ne_simple_clauses
-- On AXIOMATIC reduce production simple_clauses -> ne_simple_clauses
-- On AXIOM reduce production simple_clauses -> ne_simple_clauses

State 883:
## Known stack suffix:
## requires terminates decreases ne_simple_clauses TERMINATES
## LR(1) items:
contract -> requires terminates decreases ne_simple_clauses TERMINATES . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production contract -> requires terminates decreases ne_simple_clauses TERMINATES
-- On TYPE reduce production contract -> requires terminates decreases ne_simple_clauses TERMINATES
-- On PREDICATE reduce production contract -> requires terminates decreases ne_simple_clauses TERMINATES
-- On MODULE reduce production contract -> requires terminates decreases ne_simple_clauses TERMINATES
-- On MODEL reduce production contract -> requires terminates decreases ne_simple_clauses TERMINATES
-- On LOGIC reduce production contract -> requires terminates decreases ne_simple_clauses TERMINATES
-- On LEMMA reduce production contract -> requires terminates decreases ne_simple_clauses TERMINATES
-- On INDUCTIVE reduce production contract -> requires terminates decreases ne_simple_clauses TERMINATES
-- On INCLUDE reduce production contract -> requires terminates decreases ne_simple_clauses TERMINATES
-- On GLOBAL reduce production contract -> requires terminates decreases ne_simple_clauses TERMINATES
-- On FUNCTION reduce production contract -> requires terminates decreases ne_simple_clauses TERMINATES
-- On EXT_LET reduce production contract -> requires terminates decreases ne_simple_clauses TERMINATES
-- On EXT_AT reduce production contract -> requires terminates decreases ne_simple_clauses TERMINATES
-- On EOF reduce production contract -> requires terminates decreases ne_simple_clauses TERMINATES
-- On CONTRACT reduce production contract -> requires terminates decreases ne_simple_clauses TERMINATES
-- On AXIOMATIC reduce production contract -> requires terminates decreases ne_simple_clauses TERMINATES
-- On AXIOM reduce production contract -> requires terminates decreases ne_simple_clauses TERMINATES

State 884:
## Known stack suffix:
## requires terminates decreases ne_simple_clauses REQUIRES
## LR(1) items:
contract -> requires terminates decreases ne_simple_clauses REQUIRES . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production contract -> requires terminates decreases ne_simple_clauses REQUIRES
-- On TYPE reduce production contract -> requires terminates decreases ne_simple_clauses REQUIRES
-- On PREDICATE reduce production contract -> requires terminates decreases ne_simple_clauses REQUIRES
-- On MODULE reduce production contract -> requires terminates decreases ne_simple_clauses REQUIRES
-- On MODEL reduce production contract -> requires terminates decreases ne_simple_clauses REQUIRES
-- On LOGIC reduce production contract -> requires terminates decreases ne_simple_clauses REQUIRES
-- On LEMMA reduce production contract -> requires terminates decreases ne_simple_clauses REQUIRES
-- On INDUCTIVE reduce production contract -> requires terminates decreases ne_simple_clauses REQUIRES
-- On INCLUDE reduce production contract -> requires terminates decreases ne_simple_clauses REQUIRES
-- On GLOBAL reduce production contract -> requires terminates decreases ne_simple_clauses REQUIRES
-- On FUNCTION reduce production contract -> requires terminates decreases ne_simple_clauses REQUIRES
-- On EXT_LET reduce production contract -> requires terminates decreases ne_simple_clauses REQUIRES
-- On EXT_AT reduce production contract -> requires terminates decreases ne_simple_clauses REQUIRES
-- On EOF reduce production contract -> requires terminates decreases ne_simple_clauses REQUIRES
-- On CONTRACT reduce production contract -> requires terminates decreases ne_simple_clauses REQUIRES
-- On AXIOMATIC reduce production contract -> requires terminates decreases ne_simple_clauses REQUIRES
-- On AXIOM reduce production contract -> requires terminates decreases ne_simple_clauses REQUIRES

State 885:
## Known stack suffix:
## requires terminates decreases ne_simple_clauses DECREASES
## LR(1) items:
contract -> requires terminates decreases ne_simple_clauses DECREASES . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production contract -> requires terminates decreases ne_simple_clauses DECREASES
-- On TYPE reduce production contract -> requires terminates decreases ne_simple_clauses DECREASES
-- On PREDICATE reduce production contract -> requires terminates decreases ne_simple_clauses DECREASES
-- On MODULE reduce production contract -> requires terminates decreases ne_simple_clauses DECREASES
-- On MODEL reduce production contract -> requires terminates decreases ne_simple_clauses DECREASES
-- On LOGIC reduce production contract -> requires terminates decreases ne_simple_clauses DECREASES
-- On LEMMA reduce production contract -> requires terminates decreases ne_simple_clauses DECREASES
-- On INDUCTIVE reduce production contract -> requires terminates decreases ne_simple_clauses DECREASES
-- On INCLUDE reduce production contract -> requires terminates decreases ne_simple_clauses DECREASES
-- On GLOBAL reduce production contract -> requires terminates decreases ne_simple_clauses DECREASES
-- On FUNCTION reduce production contract -> requires terminates decreases ne_simple_clauses DECREASES
-- On EXT_LET reduce production contract -> requires terminates decreases ne_simple_clauses DECREASES
-- On EXT_AT reduce production contract -> requires terminates decreases ne_simple_clauses DECREASES
-- On EOF reduce production contract -> requires terminates decreases ne_simple_clauses DECREASES
-- On CONTRACT reduce production contract -> requires terminates decreases ne_simple_clauses DECREASES
-- On AXIOMATIC reduce production contract -> requires terminates decreases ne_simple_clauses DECREASES
-- On AXIOM reduce production contract -> requires terminates decreases ne_simple_clauses DECREASES

State 886:
## Known stack suffix:
## requires ne_terminates
## LR(1) items:
contract -> requires ne_terminates . REQUIRES [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
terminates -> ne_terminates . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On REQUIRES shift to state 887
## Reductions:
-- On WRITES reduce production terminates -> ne_terminates
-- On VOLATILE reduce production terminates -> ne_terminates
-- On VOID reduce production terminates -> ne_terminates
-- On UNSIGNED reduce production terminates -> ne_terminates
-- On UNION reduce production terminates -> ne_terminates
-- On TYPENAME reduce production terminates -> ne_terminates
-- On TYPE reduce production terminates -> ne_terminates
-- On STRUCT reduce production terminates -> ne_terminates
-- On STATIC reduce production terminates -> ne_terminates
-- On SIZEOF reduce production terminates -> ne_terminates
-- On SIGNED reduce production terminates -> ne_terminates
-- On SHORT reduce production terminates -> ne_terminates
-- On RETURNS reduce production terminates -> ne_terminates
-- On REAL reduce production terminates -> ne_terminates
-- On READS reduce production terminates -> ne_terminates
-- On PREDICATE reduce production terminates -> ne_terminates
-- On MODULE reduce production terminates -> ne_terminates
-- On MODEL reduce production terminates -> ne_terminates
-- On LONG reduce production terminates -> ne_terminates
-- On LOGIC reduce production terminates -> ne_terminates
-- On LEMMA reduce production terminates -> ne_terminates
-- On LABEL reduce production terminates -> ne_terminates
-- On INTEGER reduce production terminates -> ne_terminates
-- On INT reduce production terminates -> ne_terminates
-- On INDUCTIVE reduce production terminates -> ne_terminates
-- On INCLUDE reduce production terminates -> ne_terminates
-- On IF reduce production terminates -> ne_terminates
-- On IDENTIFIER reduce production terminates -> ne_terminates
-- On GLOBAL reduce production terminates -> ne_terminates
-- On FUNCTION reduce production terminates -> ne_terminates
-- On FREES reduce production terminates -> ne_terminates
-- On FLOAT reduce production terminates -> ne_terminates
-- On EXT_LET reduce production terminates -> ne_terminates
-- On EXT_AT reduce production terminates -> ne_terminates
-- On EXITS reduce production terminates -> ne_terminates
-- On EOF reduce production terminates -> ne_terminates
-- On ENUM reduce production terminates -> ne_terminates
-- On ENSURES reduce production terminates -> ne_terminates
-- On ELSE reduce production terminates -> ne_terminates
-- On DOUBLE reduce production terminates -> ne_terminates
-- On DISJOINT reduce production terminates -> ne_terminates
-- On DECREASES reduce production terminates -> ne_terminates
-- On CONTRACT reduce production terminates -> ne_terminates
-- On CONTINUES reduce production terminates -> ne_terminates
-- On CONST reduce production terminates -> ne_terminates
-- On COMPLETE reduce production terminates -> ne_terminates
-- On CHAR reduce production terminates -> ne_terminates
-- On CASE reduce production terminates -> ne_terminates
-- On BREAKS reduce production terminates -> ne_terminates
-- On BOOLEAN reduce production terminates -> ne_terminates
-- On BOOL reduce production terminates -> ne_terminates
-- On BEHAVIORS reduce production terminates -> ne_terminates
-- On BEHAVIOR reduce production terminates -> ne_terminates
-- On AXIOMATIC reduce production terminates -> ne_terminates
-- On AXIOM reduce production terminates -> ne_terminates
-- On ASSIGNS reduce production terminates -> ne_terminates
-- On ALLOCATES reduce production terminates -> ne_terminates

State 887:
## Known stack suffix:
## requires ne_terminates REQUIRES
## LR(1) items:
contract -> requires ne_terminates REQUIRES . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production contract -> requires ne_terminates REQUIRES
-- On TYPE reduce production contract -> requires ne_terminates REQUIRES
-- On PREDICATE reduce production contract -> requires ne_terminates REQUIRES
-- On MODULE reduce production contract -> requires ne_terminates REQUIRES
-- On MODEL reduce production contract -> requires ne_terminates REQUIRES
-- On LOGIC reduce production contract -> requires ne_terminates REQUIRES
-- On LEMMA reduce production contract -> requires ne_terminates REQUIRES
-- On INDUCTIVE reduce production contract -> requires ne_terminates REQUIRES
-- On INCLUDE reduce production contract -> requires ne_terminates REQUIRES
-- On GLOBAL reduce production contract -> requires ne_terminates REQUIRES
-- On FUNCTION reduce production contract -> requires ne_terminates REQUIRES
-- On EXT_LET reduce production contract -> requires ne_terminates REQUIRES
-- On EXT_AT reduce production contract -> requires ne_terminates REQUIRES
-- On EOF reduce production contract -> requires ne_terminates REQUIRES
-- On CONTRACT reduce production contract -> requires ne_terminates REQUIRES
-- On AXIOMATIC reduce production contract -> requires ne_terminates REQUIRES
-- On AXIOM reduce production contract -> requires ne_terminates REQUIRES

State 888:
## Known stack suffix:
## FOR ne_behavior_name_list COLON contract
## LR(1) items:
annotation -> FOR ne_behavior_name_list COLON contract . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production annotation -> FOR ne_behavior_name_list COLON contract
-- On TYPE reduce production annotation -> FOR ne_behavior_name_list COLON contract
-- On PREDICATE reduce production annotation -> FOR ne_behavior_name_list COLON contract
-- On MODULE reduce production annotation -> FOR ne_behavior_name_list COLON contract
-- On MODEL reduce production annotation -> FOR ne_behavior_name_list COLON contract
-- On LOGIC reduce production annotation -> FOR ne_behavior_name_list COLON contract
-- On LEMMA reduce production annotation -> FOR ne_behavior_name_list COLON contract
-- On INDUCTIVE reduce production annotation -> FOR ne_behavior_name_list COLON contract
-- On INCLUDE reduce production annotation -> FOR ne_behavior_name_list COLON contract
-- On GLOBAL reduce production annotation -> FOR ne_behavior_name_list COLON contract
-- On FUNCTION reduce production annotation -> FOR ne_behavior_name_list COLON contract
-- On EXT_LET reduce production annotation -> FOR ne_behavior_name_list COLON contract
-- On EXT_AT reduce production annotation -> FOR ne_behavior_name_list COLON contract
-- On EOF reduce production annotation -> FOR ne_behavior_name_list COLON contract
-- On CONTRACT reduce production annotation -> FOR ne_behavior_name_list COLON contract
-- On AXIOMATIC reduce production annotation -> FOR ne_behavior_name_list COLON contract
-- On AXIOM reduce production annotation -> FOR ne_behavior_name_list COLON contract

State 889:
## Known stack suffix:
## CUSTOM
## LR(1) items:
annot -> CUSTOM . any_identifier COLON custom_tree EOF [ # ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On any_identifier shift to state 890
-- On acsl_c_keyword shift to state 87
## Reductions:

State 890:
## Known stack suffix:
## CUSTOM any_identifier
## LR(1) items:
annot -> CUSTOM any_identifier . COLON custom_tree EOF [ # ]
## Transitions:
-- On COLON shift to state 891
## Reductions:

State 891:
## Known stack suffix:
## CUSTOM any_identifier COLON
## LR(1) items:
annot -> CUSTOM any_identifier COLON . custom_tree EOF [ # ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 892
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 894
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 896
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 897
-- On custom_tree shift to state 898
-- On c_keyword shift to state 85
-- On any_identifier_non_logic shift to state 900
-- On acsl_c_keyword shift to state 87
## Reductions:

State 892:
## Known stack suffix:
## TYPE
## LR(1) items:
custom_tree -> TYPE . type_spec [ RPAR EOF COMMA ]
is_acsl_decl_or_code_annot -> TYPE . [ RPAR LPAR EOF COMMA ]
## Transitions:
-- On VOID shift to state 125
-- On UNSIGNED shift to state 126
-- On UNION shift to state 127
-- On TYPENAME shift to state 128
-- On STRUCT shift to state 129
-- On SIGNED shift to state 132
-- On SHORT shift to state 140
-- On REAL shift to state 141
-- On LONG shift to state 142
-- On INTEGER shift to state 147
-- On INT shift to state 148
-- On FLOAT shift to state 149
-- On ENUM shift to state 150
-- On DOUBLE shift to state 153
-- On CHAR shift to state 154
-- On BOOLEAN shift to state 155
-- On BOOL shift to state 156
-- On type_spec shift to state 893
## Reductions:
-- On RPAR reduce production is_acsl_decl_or_code_annot -> TYPE
-- On LPAR reduce production is_acsl_decl_or_code_annot -> TYPE
-- On EOF reduce production is_acsl_decl_or_code_annot -> TYPE
-- On COMMA reduce production is_acsl_decl_or_code_annot -> TYPE

State 893:
## Known stack suffix:
## TYPE type_spec
## LR(1) items:
custom_tree -> TYPE type_spec . [ RPAR EOF COMMA ]
## Transitions:
## Reductions:
-- On RPAR reduce production custom_tree -> TYPE type_spec
-- On EOF reduce production custom_tree -> TYPE type_spec
-- On COMMA reduce production custom_tree -> TYPE type_spec

State 894:
## Known stack suffix:
## LOGIC
## LR(1) items:
custom_tree -> LOGIC . lexpr [ RPAR EOF COMMA ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 895
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 895:
## Known stack suffix:
## LOGIC lexpr
## LR(1) items:
custom_tree -> LOGIC lexpr . [ RPAR EOF COMMA ]
lexpr -> lexpr . IMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT EOF COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . IFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT EOF COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . OR lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT EOF COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AND lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT EOF COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HATHAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT EOF COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . AMP lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT EOF COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . PIPE lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT EOF COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . HAT lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT EOF COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIMPLIES lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT EOF COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . BIFF lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT EOF COMMA BIMPLIES BIFF AND AMP ]
lexpr -> lexpr . QUESTION lexpr COLON2 lexpr [ RPAR QUESTION PIPE OR IMPLIES IFF HATHAT HAT EOF COMMA BIMPLIES BIFF AND AMP ]
## Transitions:
-- On QUESTION shift to state 317
-- On PIPE shift to state 319
-- On OR shift to state 330
-- On IMPLIES shift to state 340
-- On IFF shift to state 346
-- On HATHAT shift to state 332
-- On HAT shift to state 321
-- On BIMPLIES shift to state 334
-- On BIFF shift to state 342
-- On AND shift to state 344
-- On AMP shift to state 323
## Reductions:
-- On RPAR reduce production custom_tree -> LOGIC lexpr
-- On EOF reduce production custom_tree -> LOGIC lexpr
-- On COMMA reduce production custom_tree -> LOGIC lexpr

State 896:
## Known stack suffix:
## non_logic_keyword
## LR(1) items:
any_identifier_non_logic -> non_logic_keyword . [ RPAR LPAR EOF COMMA ]
## Transitions:
## Reductions:
-- On RPAR reduce production any_identifier_non_logic -> non_logic_keyword
-- On LPAR reduce production any_identifier_non_logic -> non_logic_keyword
-- On EOF reduce production any_identifier_non_logic -> non_logic_keyword
-- On COMMA reduce production any_identifier_non_logic -> non_logic_keyword

State 897:
## Known stack suffix:
## identifier_or_typename
## LR(1) items:
any_identifier_non_logic -> identifier_or_typename . [ RPAR LPAR EOF COMMA ]
## Transitions:
## Reductions:
-- On RPAR reduce production any_identifier_non_logic -> identifier_or_typename
-- On LPAR reduce production any_identifier_non_logic -> identifier_or_typename
-- On EOF reduce production any_identifier_non_logic -> identifier_or_typename
-- On COMMA reduce production any_identifier_non_logic -> identifier_or_typename

State 898:
## Known stack suffix:
## CUSTOM any_identifier COLON custom_tree
## LR(1) items:
annot -> CUSTOM any_identifier COLON custom_tree . EOF [ # ]
## Transitions:
-- On EOF shift to state 899
## Reductions:

State 899:
## Known stack suffix:
## CUSTOM any_identifier COLON custom_tree EOF
## LR(1) items:
annot -> CUSTOM any_identifier COLON custom_tree EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production annot -> CUSTOM any_identifier COLON custom_tree EOF

State 900:
## Known stack suffix:
## any_identifier_non_logic
## LR(1) items:
custom_tree -> any_identifier_non_logic . [ RPAR EOF COMMA ]
custom_tree -> any_identifier_non_logic . LPAR custom_tree_list RPAR [ RPAR EOF COMMA ]
## Transitions:
-- On LPAR shift to state 901
## Reductions:
-- On RPAR reduce production custom_tree -> any_identifier_non_logic
-- On EOF reduce production custom_tree -> any_identifier_non_logic
-- On COMMA reduce production custom_tree -> any_identifier_non_logic

State 901:
## Known stack suffix:
## any_identifier_non_logic LPAR
## LR(1) items:
custom_tree -> any_identifier_non_logic LPAR . custom_tree_list RPAR [ RPAR EOF COMMA ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 892
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 894
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 896
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 897
-- On custom_tree_list shift to state 902
-- On custom_tree shift to state 904
-- On c_keyword shift to state 85
-- On any_identifier_non_logic shift to state 900
-- On acsl_c_keyword shift to state 87
## Reductions:

State 902:
## Known stack suffix:
## any_identifier_non_logic LPAR custom_tree_list
## LR(1) items:
custom_tree -> any_identifier_non_logic LPAR custom_tree_list . RPAR [ RPAR EOF COMMA ]
## Transitions:
-- On RPAR shift to state 903
## Reductions:

State 903:
## Known stack suffix:
## any_identifier_non_logic LPAR custom_tree_list RPAR
## LR(1) items:
custom_tree -> any_identifier_non_logic LPAR custom_tree_list RPAR . [ RPAR EOF COMMA ]
## Transitions:
## Reductions:
-- On RPAR reduce production custom_tree -> any_identifier_non_logic LPAR custom_tree_list RPAR
-- On EOF reduce production custom_tree -> any_identifier_non_logic LPAR custom_tree_list RPAR
-- On COMMA reduce production custom_tree -> any_identifier_non_logic LPAR custom_tree_list RPAR

State 904:
## Known stack suffix:
## custom_tree
## LR(1) items:
custom_tree_list -> custom_tree . [ RPAR ]
custom_tree_list -> custom_tree . COMMA custom_tree_list [ RPAR ]
## Transitions:
-- On COMMA shift to state 905
## Reductions:
-- On RPAR reduce production custom_tree_list -> custom_tree

State 905:
## Known stack suffix:
## custom_tree COMMA
## LR(1) items:
custom_tree_list -> custom_tree COMMA . custom_tree_list [ RPAR ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 892
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 894
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 896
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 897
-- On custom_tree_list shift to state 906
-- On custom_tree shift to state 904
-- On c_keyword shift to state 85
-- On any_identifier_non_logic shift to state 900
-- On acsl_c_keyword shift to state 87
## Reductions:

State 906:
## Known stack suffix:
## custom_tree COMMA custom_tree_list
## LR(1) items:
custom_tree_list -> custom_tree COMMA custom_tree_list . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR reduce production custom_tree_list -> custom_tree COMMA custom_tree_list

State 907:
## Known stack suffix:
## AXIOMATIC
## LR(1) items:
logic_def -> AXIOMATIC . any_identifier LBRACE logic_decls RBRACE [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On any_identifier shift to state 908
-- On acsl_c_keyword shift to state 87
## Reductions:

State 908:
## Known stack suffix:
## AXIOMATIC any_identifier
## LR(1) items:
logic_def -> AXIOMATIC any_identifier . LBRACE logic_decls RBRACE [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On LBRACE shift to state 909
## Reductions:

State 909:
## Known stack suffix:
## AXIOMATIC any_identifier LBRACE
## LR(1) items:
logic_def -> AXIOMATIC any_identifier LBRACE . logic_decls RBRACE [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On TYPE shift to state 910
-- On PREDICATE shift to state 913
-- On LOGIC shift to state 920
-- On LEMMA shift to state 719
-- On INDUCTIVE shift to state 727
-- On AXIOMATIC shift to state 907
-- On AXIOM shift to state 926
-- On logic_def shift to state 931
-- On logic_decls shift to state 932
-- On logic_decl_loc shift to state 934
-- On logic_decl shift to state 936
## Reductions:
-- On RBRACE reduce production logic_decls ->

State 910:
## Known stack suffix:
## TYPE
## LR(1) items:
logic_decl -> TYPE . poly_id_type SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
logic_def -> TYPE . poly_id_type_add_typename EQUAL typedef SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
-- On poly_id_type_add_typename shift to state 580
-- On poly_id_type shift to state 911
-- On full_identifier shift to state 610
-- On enter_kw_c_mode shift to state 593
## Reductions:
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 911:
## Known stack suffix:
## TYPE poly_id_type
## LR(1) items:
logic_decl -> TYPE poly_id_type . SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
poly_id_type_add_typename -> poly_id_type . [ EQUAL ]
## Transitions:
-- On SEMICOLON shift to state 912
## Reductions:
-- On EQUAL reduce production poly_id_type_add_typename -> poly_id_type

State 912:
## Known stack suffix:
## TYPE poly_id_type SEMICOLON
## LR(1) items:
logic_decl -> TYPE poly_id_type SEMICOLON . [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On TYPE reduce production logic_decl -> TYPE poly_id_type SEMICOLON
-- On RBRACE reduce production logic_decl -> TYPE poly_id_type SEMICOLON
-- On PREDICATE reduce production logic_decl -> TYPE poly_id_type SEMICOLON
-- On LOGIC reduce production logic_decl -> TYPE poly_id_type SEMICOLON
-- On LEMMA reduce production logic_decl -> TYPE poly_id_type SEMICOLON
-- On INDUCTIVE reduce production logic_decl -> TYPE poly_id_type SEMICOLON
-- On AXIOMATIC reduce production logic_decl -> TYPE poly_id_type SEMICOLON
-- On AXIOM reduce production logic_decl -> TYPE poly_id_type SEMICOLON

State 913:
## Known stack suffix:
## PREDICATE
## LR(1) items:
logic_decl -> PREDICATE . poly_id opt_parameters reads_clause SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
logic_def -> PREDICATE . poly_id opt_parameters EQUAL full_lexpr SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
-- On poly_id_type shift to state 624
-- On poly_id shift to state 914
-- On full_identifier shift to state 641
-- On enter_kw_c_mode shift to state 593
## Reductions:
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 914:
## Known stack suffix:
## PREDICATE poly_id
## LR(1) items:
logic_decl -> PREDICATE poly_id . opt_parameters reads_clause SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
logic_def -> PREDICATE poly_id . opt_parameters EQUAL full_lexpr SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
-- On LPAR shift to state 626
-- On parameters shift to state 635
-- On opt_parameters shift to state 915
## Reductions:
-- On SEMICOLON reduce production opt_parameters ->
-- On READS reduce production opt_parameters ->
-- On EQUAL reduce production opt_parameters ->

State 915:
## Known stack suffix:
## PREDICATE poly_id opt_parameters
## LR(1) items:
logic_decl -> PREDICATE poly_id opt_parameters . reads_clause SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
logic_def -> PREDICATE poly_id opt_parameters . EQUAL full_lexpr SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
-- On READS shift to state 916
-- On EQUAL shift to state 638
-- On reads_clause shift to state 918
## Reductions:
-- On SEMICOLON reduce production reads_clause ->

State 916:
## Known stack suffix:
## READS
## LR(1) items:
reads_clause -> READS . zones [ SEMICOLON ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 6
-- On VALID_RANGE shift to state 91
-- On VALID_INDEX shift to state 94
-- On VALID shift to state 97
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 100
-- On TYPEOF shift to state 101
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 103
-- On TILDE shift to state 104
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 105
-- On STATIC shift to state 196
-- On STAR shift to state 107
-- On SLICE shift to state 15
-- On SIZEOF shift to state 197
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 200
-- On RETURNS shift to state 19
-- On RESULT shift to state 202
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 203
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 204
-- On OLD shift to state 205
-- On OFFSET shift to state 207
-- On NULL shift to state 210
-- On NOTHING shift to state 676
-- On NOT shift to state 211
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 213
-- On LPAR shift to state 214
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 218
-- On LEMMA shift to state 30
-- On LBRACE shift to state 224
-- On LAMBDA shift to state 226
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 249
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 251
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 254
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FRESH shift to state 255
-- On FREES shift to state 42
-- On FREEABLE shift to state 259
-- On FORALL shift to state 262
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 265
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 266
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 269
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 270
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 271
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 160
-- On CONSTANT shift to state 161
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 274
-- On BSTYPE shift to state 276
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 282
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 285
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 288
-- On AT shift to state 289
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On AMP shift to state 291
-- On ALLOCATION shift to state 292
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 295
-- On zones shift to state 917
-- On string shift to state 298
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On ne_zones shift to state 679
-- On ne_lexpr_list shift to state 559
-- On lexpr_rel shift to state 301
-- On lexpr_inner shift to state 302
-- On lexpr_end_rel shift to state 314
-- On lexpr_binder shift to state 315
-- On lexpr shift to state 329
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On identifier shift to state 325
-- On constant shift to state 336
-- On c_keyword shift to state 85
-- On any_identifier shift to state 337
-- On acsl_c_keyword shift to state 87
## Reductions:

State 917:
## Known stack suffix:
## READS zones
## LR(1) items:
reads_clause -> READS zones . [ SEMICOLON ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production reads_clause -> READS zones

State 918:
## Known stack suffix:
## PREDICATE poly_id opt_parameters reads_clause
## LR(1) items:
logic_decl -> PREDICATE poly_id opt_parameters reads_clause . SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 919
## Reductions:

State 919:
## Known stack suffix:
## PREDICATE poly_id opt_parameters reads_clause SEMICOLON
## LR(1) items:
logic_decl -> PREDICATE poly_id opt_parameters reads_clause SEMICOLON . [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On TYPE reduce production logic_decl -> PREDICATE poly_id opt_parameters reads_clause SEMICOLON
-- On RBRACE reduce production logic_decl -> PREDICATE poly_id opt_parameters reads_clause SEMICOLON
-- On PREDICATE reduce production logic_decl -> PREDICATE poly_id opt_parameters reads_clause SEMICOLON
-- On LOGIC reduce production logic_decl -> PREDICATE poly_id opt_parameters reads_clause SEMICOLON
-- On LEMMA reduce production logic_decl -> PREDICATE poly_id opt_parameters reads_clause SEMICOLON
-- On INDUCTIVE reduce production logic_decl -> PREDICATE poly_id opt_parameters reads_clause SEMICOLON
-- On AXIOMATIC reduce production logic_decl -> PREDICATE poly_id opt_parameters reads_clause SEMICOLON
-- On AXIOM reduce production logic_decl -> PREDICATE poly_id opt_parameters reads_clause SEMICOLON

State 920:
## Known stack suffix:
## LOGIC
## LR(1) items:
logic_decl -> LOGIC . full_logic_rt_type poly_id opt_parameters reads_clause SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
logic_def -> LOGIC . full_logic_rt_type poly_id opt_parameters EQUAL full_lexpr SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
-- On full_logic_rt_type shift to state 921
-- On enter_kw_c_mode shift to state 712
## Reductions:
-- On VOID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->

State 921:
## Known stack suffix:
## LOGIC full_logic_rt_type
## LR(1) items:
logic_decl -> LOGIC full_logic_rt_type . poly_id opt_parameters reads_clause SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
logic_def -> LOGIC full_logic_rt_type . poly_id opt_parameters EQUAL full_lexpr SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
-- On poly_id_type shift to state 624
-- On poly_id shift to state 922
-- On full_identifier shift to state 641
-- On enter_kw_c_mode shift to state 593
## Reductions:
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 922:
## Known stack suffix:
## LOGIC full_logic_rt_type poly_id
## LR(1) items:
logic_decl -> LOGIC full_logic_rt_type poly_id . opt_parameters reads_clause SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
logic_def -> LOGIC full_logic_rt_type poly_id . opt_parameters EQUAL full_lexpr SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
-- On LPAR shift to state 626
-- On parameters shift to state 635
-- On opt_parameters shift to state 923
## Reductions:
-- On SEMICOLON reduce production opt_parameters ->
-- On READS reduce production opt_parameters ->
-- On EQUAL reduce production opt_parameters ->

State 923:
## Known stack suffix:
## LOGIC full_logic_rt_type poly_id opt_parameters
## LR(1) items:
logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters . reads_clause SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
logic_def -> LOGIC full_logic_rt_type poly_id opt_parameters . EQUAL full_lexpr SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
-- On READS shift to state 916
-- On EQUAL shift to state 709
-- On reads_clause shift to state 924
## Reductions:
-- On SEMICOLON reduce production reads_clause ->

State 924:
## Known stack suffix:
## LOGIC full_logic_rt_type poly_id opt_parameters reads_clause
## LR(1) items:
logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters reads_clause . SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 925
## Reductions:

State 925:
## Known stack suffix:
## LOGIC full_logic_rt_type poly_id opt_parameters reads_clause SEMICOLON
## LR(1) items:
logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters reads_clause SEMICOLON . [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On TYPE reduce production logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters reads_clause SEMICOLON
-- On RBRACE reduce production logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters reads_clause SEMICOLON
-- On PREDICATE reduce production logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters reads_clause SEMICOLON
-- On LOGIC reduce production logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters reads_clause SEMICOLON
-- On LEMMA reduce production logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters reads_clause SEMICOLON
-- On INDUCTIVE reduce production logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters reads_clause SEMICOLON
-- On AXIOMATIC reduce production logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters reads_clause SEMICOLON
-- On AXIOM reduce production logic_decl -> LOGIC full_logic_rt_type poly_id opt_parameters reads_clause SEMICOLON

State 926:
## Known stack suffix:
## AXIOM
## LR(1) items:
logic_decl -> AXIOM . poly_id COLON full_lexpr SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
-- On poly_id_type shift to state 624
-- On poly_id shift to state 927
-- On full_identifier shift to state 641
-- On enter_kw_c_mode shift to state 593
## Reductions:
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 927:
## Known stack suffix:
## AXIOM poly_id
## LR(1) items:
logic_decl -> AXIOM poly_id . COLON full_lexpr SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
-- On COLON shift to state 928
## Reductions:

State 928:
## Known stack suffix:
## AXIOM poly_id COLON
## LR(1) items:
logic_decl -> AXIOM poly_id COLON . full_lexpr SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
-- On full_lexpr shift to state 929
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 929:
## Known stack suffix:
## AXIOM poly_id COLON full_lexpr
## LR(1) items:
logic_decl -> AXIOM poly_id COLON full_lexpr . SEMICOLON [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 930
## Reductions:

State 930:
## Known stack suffix:
## AXIOM poly_id COLON full_lexpr SEMICOLON
## LR(1) items:
logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON . [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On TYPE reduce production logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On RBRACE reduce production logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On PREDICATE reduce production logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On LOGIC reduce production logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On LEMMA reduce production logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On INDUCTIVE reduce production logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On AXIOMATIC reduce production logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On AXIOM reduce production logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON

State 931:
## Known stack suffix:
## logic_def
## LR(1) items:
logic_decl -> logic_def . [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On TYPE reduce production logic_decl -> logic_def
-- On RBRACE reduce production logic_decl -> logic_def
-- On PREDICATE reduce production logic_decl -> logic_def
-- On LOGIC reduce production logic_decl -> logic_def
-- On LEMMA reduce production logic_decl -> logic_def
-- On INDUCTIVE reduce production logic_decl -> logic_def
-- On AXIOMATIC reduce production logic_decl -> logic_def
-- On AXIOM reduce production logic_decl -> logic_def

State 932:
## Known stack suffix:
## AXIOMATIC any_identifier LBRACE logic_decls
## LR(1) items:
logic_def -> AXIOMATIC any_identifier LBRACE logic_decls . RBRACE [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On RBRACE shift to state 933
## Reductions:

State 933:
## Known stack suffix:
## AXIOMATIC any_identifier LBRACE logic_decls RBRACE
## LR(1) items:
logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE . [ VOLATILE TYPE RBRACE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE
-- On TYPE reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE
-- On RBRACE reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE
-- On PREDICATE reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE
-- On MODULE reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE
-- On MODEL reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE
-- On LOGIC reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE
-- On LEMMA reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE
-- On INDUCTIVE reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE
-- On INCLUDE reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE
-- On GLOBAL reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE
-- On FUNCTION reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE
-- On EXT_LET reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE
-- On EXT_AT reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE
-- On EOF reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE
-- On CONTRACT reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE
-- On AXIOMATIC reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE
-- On AXIOM reduce production logic_def -> AXIOMATIC any_identifier LBRACE logic_decls RBRACE

State 934:
## Known stack suffix:
## logic_decl_loc
## LR(1) items:
logic_decls -> logic_decl_loc . logic_decls [ RBRACE ]
## Transitions:
-- On TYPE shift to state 910
-- On PREDICATE shift to state 913
-- On LOGIC shift to state 920
-- On LEMMA shift to state 719
-- On INDUCTIVE shift to state 727
-- On AXIOMATIC shift to state 907
-- On AXIOM shift to state 926
-- On logic_def shift to state 931
-- On logic_decls shift to state 935
-- On logic_decl_loc shift to state 934
-- On logic_decl shift to state 936
## Reductions:
-- On RBRACE reduce production logic_decls ->

State 935:
## Known stack suffix:
## logic_decl_loc logic_decls
## LR(1) items:
logic_decls -> logic_decl_loc logic_decls . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production logic_decls -> logic_decl_loc logic_decls

State 936:
## Known stack suffix:
## logic_decl
## LR(1) items:
logic_decl_loc -> logic_decl . [ TYPE RBRACE PREDICATE LOGIC LEMMA INDUCTIVE AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On TYPE reduce production logic_decl_loc -> logic_decl
-- On RBRACE reduce production logic_decl_loc -> logic_decl
-- On PREDICATE reduce production logic_decl_loc -> logic_decl
-- On LOGIC reduce production logic_decl_loc -> logic_decl
-- On LEMMA reduce production logic_decl_loc -> logic_decl
-- On INDUCTIVE reduce production logic_decl_loc -> logic_decl
-- On AXIOMATIC reduce production logic_decl_loc -> logic_decl
-- On AXIOM reduce production logic_decl_loc -> logic_decl

State 937:
## Known stack suffix:
## AXIOM
## LR(1) items:
deprecated_logic_decl -> AXIOM . poly_id COLON full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On poly_id_type shift to state 624
-- On poly_id shift to state 938
-- On full_identifier shift to state 641
-- On enter_kw_c_mode shift to state 593
## Reductions:
-- On IDENTIFIER reduce production enter_kw_c_mode ->

State 938:
## Known stack suffix:
## AXIOM poly_id
## LR(1) items:
deprecated_logic_decl -> AXIOM poly_id . COLON full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On COLON shift to state 939
## Reductions:

State 939:
## Known stack suffix:
## AXIOM poly_id COLON
## LR(1) items:
deprecated_logic_decl -> AXIOM poly_id COLON . full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On full_lexpr shift to state 940
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 940:
## Known stack suffix:
## AXIOM poly_id COLON full_lexpr
## LR(1) items:
deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr . SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 941
## Reductions:

State 941:
## Known stack suffix:
## AXIOM poly_id COLON full_lexpr SEMICOLON
## LR(1) items:
deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On TYPE reduce production deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On PREDICATE reduce production deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On MODULE reduce production deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On MODEL reduce production deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On LOGIC reduce production deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On LEMMA reduce production deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On INDUCTIVE reduce production deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On INCLUDE reduce production deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On GLOBAL reduce production deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On FUNCTION reduce production deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On EXT_LET reduce production deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On EXT_AT reduce production deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On EOF reduce production deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On CONTRACT reduce production deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On AXIOMATIC reduce production deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON
-- On AXIOM reduce production deprecated_logic_decl -> AXIOM poly_id COLON full_lexpr SEMICOLON

State 942:
## Known stack suffix:
## ASSERT
## LR(1) items:
code_annotation -> ASSERT . full_lexpr SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
-- On full_lexpr shift to state 943
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 943:
## Known stack suffix:
## ASSERT full_lexpr
## LR(1) items:
code_annotation -> ASSERT full_lexpr . SEMICOLON [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
-- On SEMICOLON shift to state 944
## Reductions:

State 944:
## Known stack suffix:
## ASSERT full_lexpr SEMICOLON
## LR(1) items:
code_annotation -> ASSERT full_lexpr SEMICOLON . [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On TYPE reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On SLICE reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On PREDICATE reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On MODULE reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On MODEL reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On LOGIC reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On LEMMA reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On INVARIANT reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On INDUCTIVE reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On INCLUDE reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On IMPACT reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On GLOBAL reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On FUNCTION reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On FOR reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On EXT_LET reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On EXT_AT reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On EOF reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On CONTRACT reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On AXIOMATIC reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On AXIOM reduce production code_annotation -> ASSERT full_lexpr SEMICOLON
-- On ASSERT reduce production code_annotation -> ASSERT full_lexpr SEMICOLON

State 945:
## Known stack suffix:
## type_annot
## LR(1) items:
decl -> type_annot . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production decl -> type_annot
-- On TYPE reduce production decl -> type_annot
-- On PREDICATE reduce production decl -> type_annot
-- On MODULE reduce production decl -> type_annot
-- On MODEL reduce production decl -> type_annot
-- On LOGIC reduce production decl -> type_annot
-- On LEMMA reduce production decl -> type_annot
-- On INDUCTIVE reduce production decl -> type_annot
-- On INCLUDE reduce production decl -> type_annot
-- On GLOBAL reduce production decl -> type_annot
-- On FUNCTION reduce production decl -> type_annot
-- On EXT_LET reduce production decl -> type_annot
-- On EXT_AT reduce production decl -> type_annot
-- On EOF reduce production decl -> type_annot
-- On CONTRACT reduce production decl -> type_annot
-- On AXIOMATIC reduce production decl -> type_annot
-- On AXIOM reduce production decl -> type_annot

State 946:
## Known stack suffix:
## slice_pragma
## LR(1) items:
code_annotation -> slice_pragma . [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production code_annotation -> slice_pragma
-- On TYPE reduce production code_annotation -> slice_pragma
-- On SLICE reduce production code_annotation -> slice_pragma
-- On PREDICATE reduce production code_annotation -> slice_pragma
-- On MODULE reduce production code_annotation -> slice_pragma
-- On MODEL reduce production code_annotation -> slice_pragma
-- On LOGIC reduce production code_annotation -> slice_pragma
-- On LEMMA reduce production code_annotation -> slice_pragma
-- On INVARIANT reduce production code_annotation -> slice_pragma
-- On INDUCTIVE reduce production code_annotation -> slice_pragma
-- On INCLUDE reduce production code_annotation -> slice_pragma
-- On IMPACT reduce production code_annotation -> slice_pragma
-- On GLOBAL reduce production code_annotation -> slice_pragma
-- On FUNCTION reduce production code_annotation -> slice_pragma
-- On FOR reduce production code_annotation -> slice_pragma
-- On EXT_LET reduce production code_annotation -> slice_pragma
-- On EXT_AT reduce production code_annotation -> slice_pragma
-- On EOF reduce production code_annotation -> slice_pragma
-- On CONTRACT reduce production code_annotation -> slice_pragma
-- On AXIOMATIC reduce production code_annotation -> slice_pragma
-- On AXIOM reduce production code_annotation -> slice_pragma
-- On ASSERT reduce production code_annotation -> slice_pragma

State 947:
## Known stack suffix:
## model_annot
## LR(1) items:
decl -> model_annot . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production decl -> model_annot
-- On TYPE reduce production decl -> model_annot
-- On PREDICATE reduce production decl -> model_annot
-- On MODULE reduce production decl -> model_annot
-- On MODEL reduce production decl -> model_annot
-- On LOGIC reduce production decl -> model_annot
-- On LEMMA reduce production decl -> model_annot
-- On INDUCTIVE reduce production decl -> model_annot
-- On INCLUDE reduce production decl -> model_annot
-- On GLOBAL reduce production decl -> model_annot
-- On FUNCTION reduce production decl -> model_annot
-- On EXT_LET reduce production decl -> model_annot
-- On EXT_AT reduce production decl -> model_annot
-- On EOF reduce production decl -> model_annot
-- On CONTRACT reduce production decl -> model_annot
-- On AXIOMATIC reduce production decl -> model_annot
-- On AXIOM reduce production decl -> model_annot

State 948:
## Known stack suffix:
## loop_annotations
## LR(1) items:
annotation -> loop_annotations . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production annotation -> loop_annotations
-- On TYPE reduce production annotation -> loop_annotations
-- On PREDICATE reduce production annotation -> loop_annotations
-- On MODULE reduce production annotation -> loop_annotations
-- On MODEL reduce production annotation -> loop_annotations
-- On LOGIC reduce production annotation -> loop_annotations
-- On LEMMA reduce production annotation -> loop_annotations
-- On INDUCTIVE reduce production annotation -> loop_annotations
-- On INCLUDE reduce production annotation -> loop_annotations
-- On GLOBAL reduce production annotation -> loop_annotations
-- On FUNCTION reduce production annotation -> loop_annotations
-- On EXT_LET reduce production annotation -> loop_annotations
-- On EXT_AT reduce production annotation -> loop_annotations
-- On EOF reduce production annotation -> loop_annotations
-- On CONTRACT reduce production annotation -> loop_annotations
-- On AXIOMATIC reduce production annotation -> loop_annotations
-- On AXIOM reduce production annotation -> loop_annotations

State 949:
## Known stack suffix:
## loop_annot_stack
## LR(1) items:
loop_annotations -> loop_annot_stack . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production loop_annotations -> loop_annot_stack
-- On TYPE reduce production loop_annotations -> loop_annot_stack
-- On PREDICATE reduce production loop_annotations -> loop_annot_stack
-- On MODULE reduce production loop_annotations -> loop_annot_stack
-- On MODEL reduce production loop_annotations -> loop_annot_stack
-- On LOGIC reduce production loop_annotations -> loop_annot_stack
-- On LEMMA reduce production loop_annotations -> loop_annot_stack
-- On INDUCTIVE reduce production loop_annotations -> loop_annot_stack
-- On INCLUDE reduce production loop_annotations -> loop_annot_stack
-- On GLOBAL reduce production loop_annotations -> loop_annot_stack
-- On FUNCTION reduce production loop_annotations -> loop_annot_stack
-- On EXT_LET reduce production loop_annotations -> loop_annot_stack
-- On EXT_AT reduce production loop_annotations -> loop_annot_stack
-- On EOF reduce production loop_annotations -> loop_annot_stack
-- On CONTRACT reduce production loop_annotations -> loop_annot_stack
-- On AXIOMATIC reduce production loop_annotations -> loop_annot_stack
-- On AXIOM reduce production loop_annotations -> loop_annot_stack

State 950:
## Known stack suffix:
## logic_def
## LR(1) items:
decl -> logic_def . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production decl -> logic_def
-- On TYPE reduce production decl -> logic_def
-- On PREDICATE reduce production decl -> logic_def
-- On MODULE reduce production decl -> logic_def
-- On MODEL reduce production decl -> logic_def
-- On LOGIC reduce production decl -> logic_def
-- On LEMMA reduce production decl -> logic_def
-- On INDUCTIVE reduce production decl -> logic_def
-- On INCLUDE reduce production decl -> logic_def
-- On GLOBAL reduce production decl -> logic_def
-- On FUNCTION reduce production decl -> logic_def
-- On EXT_LET reduce production decl -> logic_def
-- On EXT_AT reduce production decl -> logic_def
-- On EOF reduce production decl -> logic_def
-- On CONTRACT reduce production decl -> logic_def
-- On AXIOMATIC reduce production decl -> logic_def
-- On AXIOM reduce production decl -> logic_def

State 951:
## Known stack suffix:
## is_spec
## LR(1) items:
annot -> is_spec . any EOF [ # ]
## Transitions:
-- On WRITES shift to state 1
-- On WITH shift to state 952
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 953
-- On VALID_RANGE shift to state 954
-- On VALID_INDEX shift to state 955
-- On VALID shift to state 956
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 957
-- On TYPEOF shift to state 958
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 959
-- On TILDE shift to state 960
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 961
-- On STATIC shift to state 14
-- On STAR shift to state 962
-- On SLICE shift to state 15
-- On SLASH shift to state 963
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 964
-- On SEMICOLON shift to state 965
-- On RSQUARE shift to state 966
-- On RPAR shift to state 967
-- On RETURNS shift to state 19
-- On RESULT shift to state 968
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 969
-- On REAL shift to state 21
-- On READS shift to state 22
-- On RBRACE shift to state 970
-- On QUESTION shift to state 971
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 972
-- On PIPE shift to state 973
-- On PERCENT shift to state 974
-- On OR shift to state 975
-- On OLD shift to state 976
-- On OFFSET shift to state 977
-- On NULL shift to state 978
-- On NOTHING shift to state 979
-- On NOT shift to state 980
-- On NE shift to state 981
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 982
-- On LTLT shift to state 983
-- On LTCOLON shift to state 984
-- On LT shift to state 985
-- On LSQUARE shift to state 986
-- On LPAR shift to state 987
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 988
-- On LEMMA shift to state 30
-- On LE shift to state 989
-- On LBRACE shift to state 990
-- On LAMBDA shift to state 991
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 992
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 993
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPLIES shift to state 994
-- On IMPACT shift to state 37
-- On IFF shift to state 995
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On HATHAT shift to state 996
-- On HAT shift to state 997
-- On GTGT shift to state 998
-- On GT shift to state 999
-- On GLOBAL shift to state 40
-- On GHOST shift to state 1000
-- On GE shift to state 1001
-- On FUNCTION shift to state 41
-- On FROM shift to state 1002
-- On FRESH shift to state 1003
-- On FREES shift to state 42
-- On FREEABLE shift to state 1004
-- On FORALL shift to state 1005
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 1006
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 1007
-- On EQUAL shift to state 1008
-- On EQ shift to state 1009
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 1010
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 1011
-- On DOUBLE shift to state 51
-- On DOTDOTDOT shift to state 1012
-- On DOTDOT shift to state 1013
-- On DOT shift to state 1014
-- On DOLLAR shift to state 1015
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 1016
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 1017
-- On CONSTANT shift to state 1018
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On COMMA shift to state 1019
-- On COLONGT shift to state 1020
-- On COLONCOLON shift to state 1021
-- On COLON2 shift to state 1022
-- On COLON shift to state 1023
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 1024
-- On BSTYPE shift to state 1025
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 1026
-- On BIMPLIES shift to state 1027
-- On BIFF shift to state 1028
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 1029
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 1030
-- On AT shift to state 1031
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ARROW shift to state 1032
-- On AND shift to state 1033
-- On AMP shift to state 1034
-- On ALLOCATION shift to state 1035
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 1036
-- On wildcard shift to state 1037
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On bs_keyword shift to state 1038
-- On any_identifier shift to state 1039
-- On any shift to state 1041
-- On acsl_c_keyword shift to state 87
## Reductions:

State 952:
## Known stack suffix:
## WITH
## LR(1) items:
bs_keyword -> WITH . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> WITH
-- On WITH reduce production bs_keyword -> WITH
-- On VOLATILE reduce production bs_keyword -> WITH
-- On VOID reduce production bs_keyword -> WITH
-- On VARIANT reduce production bs_keyword -> WITH
-- On VALID_READ reduce production bs_keyword -> WITH
-- On VALID_RANGE reduce production bs_keyword -> WITH
-- On VALID_INDEX reduce production bs_keyword -> WITH
-- On VALID reduce production bs_keyword -> WITH
-- On UNSIGNED reduce production bs_keyword -> WITH
-- On UNION reduce production bs_keyword -> WITH
-- On UNALLOCATED reduce production bs_keyword -> WITH
-- On TYPEOF reduce production bs_keyword -> WITH
-- On TYPENAME reduce production bs_keyword -> WITH
-- On TYPE reduce production bs_keyword -> WITH
-- On TRUE reduce production bs_keyword -> WITH
-- On TILDE reduce production bs_keyword -> WITH
-- On TERMINATES reduce production bs_keyword -> WITH
-- On STRUCT reduce production bs_keyword -> WITH
-- On STRING_LITERAL reduce production bs_keyword -> WITH
-- On STATIC reduce production bs_keyword -> WITH
-- On STAR reduce production bs_keyword -> WITH
-- On SLICE reduce production bs_keyword -> WITH
-- On SLASH reduce production bs_keyword -> WITH
-- On SIZEOF reduce production bs_keyword -> WITH
-- On SIGNED reduce production bs_keyword -> WITH
-- On SHORT reduce production bs_keyword -> WITH
-- On SEPARATED reduce production bs_keyword -> WITH
-- On SEMICOLON reduce production bs_keyword -> WITH
-- On RSQUARE reduce production bs_keyword -> WITH
-- On RPAR reduce production bs_keyword -> WITH
-- On RETURNS reduce production bs_keyword -> WITH
-- On RESULT reduce production bs_keyword -> WITH
-- On REQUIRES reduce production bs_keyword -> WITH
-- On REGISTER reduce production bs_keyword -> WITH
-- On REAL reduce production bs_keyword -> WITH
-- On READS reduce production bs_keyword -> WITH
-- On RBRACE reduce production bs_keyword -> WITH
-- On QUESTION reduce production bs_keyword -> WITH
-- On PREDICATE reduce production bs_keyword -> WITH
-- On PRAGMA reduce production bs_keyword -> WITH
-- On PLUS reduce production bs_keyword -> WITH
-- On PIPE reduce production bs_keyword -> WITH
-- On PERCENT reduce production bs_keyword -> WITH
-- On OR reduce production bs_keyword -> WITH
-- On OLD reduce production bs_keyword -> WITH
-- On OFFSET reduce production bs_keyword -> WITH
-- On NULL reduce production bs_keyword -> WITH
-- On NOTHING reduce production bs_keyword -> WITH
-- On NOT reduce production bs_keyword -> WITH
-- On NE reduce production bs_keyword -> WITH
-- On MODULE reduce production bs_keyword -> WITH
-- On MODEL reduce production bs_keyword -> WITH
-- On MINUS reduce production bs_keyword -> WITH
-- On LTLT reduce production bs_keyword -> WITH
-- On LTCOLON reduce production bs_keyword -> WITH
-- On LT reduce production bs_keyword -> WITH
-- On LSQUARE reduce production bs_keyword -> WITH
-- On LPAR reduce production bs_keyword -> WITH
-- On LOOP reduce production bs_keyword -> WITH
-- On LONG reduce production bs_keyword -> WITH
-- On LOGIC reduce production bs_keyword -> WITH
-- On LET reduce production bs_keyword -> WITH
-- On LEMMA reduce production bs_keyword -> WITH
-- On LE reduce production bs_keyword -> WITH
-- On LBRACE reduce production bs_keyword -> WITH
-- On LAMBDA reduce production bs_keyword -> WITH
-- On LABEL reduce production bs_keyword -> WITH
-- On INVARIANT reduce production bs_keyword -> WITH
-- On INTER reduce production bs_keyword -> WITH
-- On INTEGER reduce production bs_keyword -> WITH
-- On INT reduce production bs_keyword -> WITH
-- On INITIALIZED reduce production bs_keyword -> WITH
-- On INDUCTIVE reduce production bs_keyword -> WITH
-- On INCLUDE reduce production bs_keyword -> WITH
-- On IMPLIES reduce production bs_keyword -> WITH
-- On IMPACT reduce production bs_keyword -> WITH
-- On IFF reduce production bs_keyword -> WITH
-- On IF reduce production bs_keyword -> WITH
-- On IDENTIFIER reduce production bs_keyword -> WITH
-- On HATHAT reduce production bs_keyword -> WITH
-- On HAT reduce production bs_keyword -> WITH
-- On GTGT reduce production bs_keyword -> WITH
-- On GT reduce production bs_keyword -> WITH
-- On GLOBAL reduce production bs_keyword -> WITH
-- On GHOST reduce production bs_keyword -> WITH
-- On GE reduce production bs_keyword -> WITH
-- On FUNCTION reduce production bs_keyword -> WITH
-- On FROM reduce production bs_keyword -> WITH
-- On FRESH reduce production bs_keyword -> WITH
-- On FREES reduce production bs_keyword -> WITH
-- On FREEABLE reduce production bs_keyword -> WITH
-- On FORALL reduce production bs_keyword -> WITH
-- On FOR reduce production bs_keyword -> WITH
-- On FLOAT reduce production bs_keyword -> WITH
-- On FALSE reduce production bs_keyword -> WITH
-- On EXT_LET reduce production bs_keyword -> WITH
-- On EXT_AT reduce production bs_keyword -> WITH
-- On EXITS reduce production bs_keyword -> WITH
-- On EXISTS reduce production bs_keyword -> WITH
-- On EQUAL reduce production bs_keyword -> WITH
-- On EQ reduce production bs_keyword -> WITH
-- On EOF reduce production bs_keyword -> WITH
-- On ENUM reduce production bs_keyword -> WITH
-- On ENSURES reduce production bs_keyword -> WITH
-- On EMPTY reduce production bs_keyword -> WITH
-- On ELSE reduce production bs_keyword -> WITH
-- On DYNAMIC reduce production bs_keyword -> WITH
-- On DOUBLE reduce production bs_keyword -> WITH
-- On DOTDOTDOT reduce production bs_keyword -> WITH
-- On DOTDOT reduce production bs_keyword -> WITH
-- On DOT reduce production bs_keyword -> WITH
-- On DOLLAR reduce production bs_keyword -> WITH
-- On DISJOINT reduce production bs_keyword -> WITH
-- On DECREASES reduce production bs_keyword -> WITH
-- On DANGLING reduce production bs_keyword -> WITH
-- On CUSTOM reduce production bs_keyword -> WITH
-- On CONTRACT reduce production bs_keyword -> WITH
-- On CONTINUES reduce production bs_keyword -> WITH
-- On CONSTANT10 reduce production bs_keyword -> WITH
-- On CONSTANT reduce production bs_keyword -> WITH
-- On CONST reduce production bs_keyword -> WITH
-- On COMPLETE reduce production bs_keyword -> WITH
-- On COMMA reduce production bs_keyword -> WITH
-- On COLONGT reduce production bs_keyword -> WITH
-- On COLONCOLON reduce production bs_keyword -> WITH
-- On COLON2 reduce production bs_keyword -> WITH
-- On COLON reduce production bs_keyword -> WITH
-- On CHAR reduce production bs_keyword -> WITH
-- On CASE reduce production bs_keyword -> WITH
-- On BSUNION reduce production bs_keyword -> WITH
-- On BSTYPE reduce production bs_keyword -> WITH
-- On BREAKS reduce production bs_keyword -> WITH
-- On BOOLEAN reduce production bs_keyword -> WITH
-- On BOOL reduce production bs_keyword -> WITH
-- On BLOCK_LENGTH reduce production bs_keyword -> WITH
-- On BIMPLIES reduce production bs_keyword -> WITH
-- On BIFF reduce production bs_keyword -> WITH
-- On BEHAVIORS reduce production bs_keyword -> WITH
-- On BEHAVIOR reduce production bs_keyword -> WITH
-- On BASE_ADDR reduce production bs_keyword -> WITH
-- On AXIOMATIC reduce production bs_keyword -> WITH
-- On AXIOM reduce production bs_keyword -> WITH
-- On AUTOMATIC reduce production bs_keyword -> WITH
-- On AT reduce production bs_keyword -> WITH
-- On ASSUMES reduce production bs_keyword -> WITH
-- On ASSIGNS reduce production bs_keyword -> WITH
-- On ASSERT reduce production bs_keyword -> WITH
-- On ARROW reduce production bs_keyword -> WITH
-- On AND reduce production bs_keyword -> WITH
-- On AMP reduce production bs_keyword -> WITH
-- On ALLOCATION reduce production bs_keyword -> WITH
-- On ALLOCATES reduce production bs_keyword -> WITH
-- On ALLOCABLE reduce production bs_keyword -> WITH

State 953:
## Known stack suffix:
## VALID_READ
## LR(1) items:
bs_keyword -> VALID_READ . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> VALID_READ
-- On WITH reduce production bs_keyword -> VALID_READ
-- On VOLATILE reduce production bs_keyword -> VALID_READ
-- On VOID reduce production bs_keyword -> VALID_READ
-- On VARIANT reduce production bs_keyword -> VALID_READ
-- On VALID_READ reduce production bs_keyword -> VALID_READ
-- On VALID_RANGE reduce production bs_keyword -> VALID_READ
-- On VALID_INDEX reduce production bs_keyword -> VALID_READ
-- On VALID reduce production bs_keyword -> VALID_READ
-- On UNSIGNED reduce production bs_keyword -> VALID_READ
-- On UNION reduce production bs_keyword -> VALID_READ
-- On UNALLOCATED reduce production bs_keyword -> VALID_READ
-- On TYPEOF reduce production bs_keyword -> VALID_READ
-- On TYPENAME reduce production bs_keyword -> VALID_READ
-- On TYPE reduce production bs_keyword -> VALID_READ
-- On TRUE reduce production bs_keyword -> VALID_READ
-- On TILDE reduce production bs_keyword -> VALID_READ
-- On TERMINATES reduce production bs_keyword -> VALID_READ
-- On STRUCT reduce production bs_keyword -> VALID_READ
-- On STRING_LITERAL reduce production bs_keyword -> VALID_READ
-- On STATIC reduce production bs_keyword -> VALID_READ
-- On STAR reduce production bs_keyword -> VALID_READ
-- On SLICE reduce production bs_keyword -> VALID_READ
-- On SLASH reduce production bs_keyword -> VALID_READ
-- On SIZEOF reduce production bs_keyword -> VALID_READ
-- On SIGNED reduce production bs_keyword -> VALID_READ
-- On SHORT reduce production bs_keyword -> VALID_READ
-- On SEPARATED reduce production bs_keyword -> VALID_READ
-- On SEMICOLON reduce production bs_keyword -> VALID_READ
-- On RSQUARE reduce production bs_keyword -> VALID_READ
-- On RPAR reduce production bs_keyword -> VALID_READ
-- On RETURNS reduce production bs_keyword -> VALID_READ
-- On RESULT reduce production bs_keyword -> VALID_READ
-- On REQUIRES reduce production bs_keyword -> VALID_READ
-- On REGISTER reduce production bs_keyword -> VALID_READ
-- On REAL reduce production bs_keyword -> VALID_READ
-- On READS reduce production bs_keyword -> VALID_READ
-- On RBRACE reduce production bs_keyword -> VALID_READ
-- On QUESTION reduce production bs_keyword -> VALID_READ
-- On PREDICATE reduce production bs_keyword -> VALID_READ
-- On PRAGMA reduce production bs_keyword -> VALID_READ
-- On PLUS reduce production bs_keyword -> VALID_READ
-- On PIPE reduce production bs_keyword -> VALID_READ
-- On PERCENT reduce production bs_keyword -> VALID_READ
-- On OR reduce production bs_keyword -> VALID_READ
-- On OLD reduce production bs_keyword -> VALID_READ
-- On OFFSET reduce production bs_keyword -> VALID_READ
-- On NULL reduce production bs_keyword -> VALID_READ
-- On NOTHING reduce production bs_keyword -> VALID_READ
-- On NOT reduce production bs_keyword -> VALID_READ
-- On NE reduce production bs_keyword -> VALID_READ
-- On MODULE reduce production bs_keyword -> VALID_READ
-- On MODEL reduce production bs_keyword -> VALID_READ
-- On MINUS reduce production bs_keyword -> VALID_READ
-- On LTLT reduce production bs_keyword -> VALID_READ
-- On LTCOLON reduce production bs_keyword -> VALID_READ
-- On LT reduce production bs_keyword -> VALID_READ
-- On LSQUARE reduce production bs_keyword -> VALID_READ
-- On LPAR reduce production bs_keyword -> VALID_READ
-- On LOOP reduce production bs_keyword -> VALID_READ
-- On LONG reduce production bs_keyword -> VALID_READ
-- On LOGIC reduce production bs_keyword -> VALID_READ
-- On LET reduce production bs_keyword -> VALID_READ
-- On LEMMA reduce production bs_keyword -> VALID_READ
-- On LE reduce production bs_keyword -> VALID_READ
-- On LBRACE reduce production bs_keyword -> VALID_READ
-- On LAMBDA reduce production bs_keyword -> VALID_READ
-- On LABEL reduce production bs_keyword -> VALID_READ
-- On INVARIANT reduce production bs_keyword -> VALID_READ
-- On INTER reduce production bs_keyword -> VALID_READ
-- On INTEGER reduce production bs_keyword -> VALID_READ
-- On INT reduce production bs_keyword -> VALID_READ
-- On INITIALIZED reduce production bs_keyword -> VALID_READ
-- On INDUCTIVE reduce production bs_keyword -> VALID_READ
-- On INCLUDE reduce production bs_keyword -> VALID_READ
-- On IMPLIES reduce production bs_keyword -> VALID_READ
-- On IMPACT reduce production bs_keyword -> VALID_READ
-- On IFF reduce production bs_keyword -> VALID_READ
-- On IF reduce production bs_keyword -> VALID_READ
-- On IDENTIFIER reduce production bs_keyword -> VALID_READ
-- On HATHAT reduce production bs_keyword -> VALID_READ
-- On HAT reduce production bs_keyword -> VALID_READ
-- On GTGT reduce production bs_keyword -> VALID_READ
-- On GT reduce production bs_keyword -> VALID_READ
-- On GLOBAL reduce production bs_keyword -> VALID_READ
-- On GHOST reduce production bs_keyword -> VALID_READ
-- On GE reduce production bs_keyword -> VALID_READ
-- On FUNCTION reduce production bs_keyword -> VALID_READ
-- On FROM reduce production bs_keyword -> VALID_READ
-- On FRESH reduce production bs_keyword -> VALID_READ
-- On FREES reduce production bs_keyword -> VALID_READ
-- On FREEABLE reduce production bs_keyword -> VALID_READ
-- On FORALL reduce production bs_keyword -> VALID_READ
-- On FOR reduce production bs_keyword -> VALID_READ
-- On FLOAT reduce production bs_keyword -> VALID_READ
-- On FALSE reduce production bs_keyword -> VALID_READ
-- On EXT_LET reduce production bs_keyword -> VALID_READ
-- On EXT_AT reduce production bs_keyword -> VALID_READ
-- On EXITS reduce production bs_keyword -> VALID_READ
-- On EXISTS reduce production bs_keyword -> VALID_READ
-- On EQUAL reduce production bs_keyword -> VALID_READ
-- On EQ reduce production bs_keyword -> VALID_READ
-- On EOF reduce production bs_keyword -> VALID_READ
-- On ENUM reduce production bs_keyword -> VALID_READ
-- On ENSURES reduce production bs_keyword -> VALID_READ
-- On EMPTY reduce production bs_keyword -> VALID_READ
-- On ELSE reduce production bs_keyword -> VALID_READ
-- On DYNAMIC reduce production bs_keyword -> VALID_READ
-- On DOUBLE reduce production bs_keyword -> VALID_READ
-- On DOTDOTDOT reduce production bs_keyword -> VALID_READ
-- On DOTDOT reduce production bs_keyword -> VALID_READ
-- On DOT reduce production bs_keyword -> VALID_READ
-- On DOLLAR reduce production bs_keyword -> VALID_READ
-- On DISJOINT reduce production bs_keyword -> VALID_READ
-- On DECREASES reduce production bs_keyword -> VALID_READ
-- On DANGLING reduce production bs_keyword -> VALID_READ
-- On CUSTOM reduce production bs_keyword -> VALID_READ
-- On CONTRACT reduce production bs_keyword -> VALID_READ
-- On CONTINUES reduce production bs_keyword -> VALID_READ
-- On CONSTANT10 reduce production bs_keyword -> VALID_READ
-- On CONSTANT reduce production bs_keyword -> VALID_READ
-- On CONST reduce production bs_keyword -> VALID_READ
-- On COMPLETE reduce production bs_keyword -> VALID_READ
-- On COMMA reduce production bs_keyword -> VALID_READ
-- On COLONGT reduce production bs_keyword -> VALID_READ
-- On COLONCOLON reduce production bs_keyword -> VALID_READ
-- On COLON2 reduce production bs_keyword -> VALID_READ
-- On COLON reduce production bs_keyword -> VALID_READ
-- On CHAR reduce production bs_keyword -> VALID_READ
-- On CASE reduce production bs_keyword -> VALID_READ
-- On BSUNION reduce production bs_keyword -> VALID_READ
-- On BSTYPE reduce production bs_keyword -> VALID_READ
-- On BREAKS reduce production bs_keyword -> VALID_READ
-- On BOOLEAN reduce production bs_keyword -> VALID_READ
-- On BOOL reduce production bs_keyword -> VALID_READ
-- On BLOCK_LENGTH reduce production bs_keyword -> VALID_READ
-- On BIMPLIES reduce production bs_keyword -> VALID_READ
-- On BIFF reduce production bs_keyword -> VALID_READ
-- On BEHAVIORS reduce production bs_keyword -> VALID_READ
-- On BEHAVIOR reduce production bs_keyword -> VALID_READ
-- On BASE_ADDR reduce production bs_keyword -> VALID_READ
-- On AXIOMATIC reduce production bs_keyword -> VALID_READ
-- On AXIOM reduce production bs_keyword -> VALID_READ
-- On AUTOMATIC reduce production bs_keyword -> VALID_READ
-- On AT reduce production bs_keyword -> VALID_READ
-- On ASSUMES reduce production bs_keyword -> VALID_READ
-- On ASSIGNS reduce production bs_keyword -> VALID_READ
-- On ASSERT reduce production bs_keyword -> VALID_READ
-- On ARROW reduce production bs_keyword -> VALID_READ
-- On AND reduce production bs_keyword -> VALID_READ
-- On AMP reduce production bs_keyword -> VALID_READ
-- On ALLOCATION reduce production bs_keyword -> VALID_READ
-- On ALLOCATES reduce production bs_keyword -> VALID_READ
-- On ALLOCABLE reduce production bs_keyword -> VALID_READ

State 954:
## Known stack suffix:
## VALID_RANGE
## LR(1) items:
bs_keyword -> VALID_RANGE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> VALID_RANGE
-- On WITH reduce production bs_keyword -> VALID_RANGE
-- On VOLATILE reduce production bs_keyword -> VALID_RANGE
-- On VOID reduce production bs_keyword -> VALID_RANGE
-- On VARIANT reduce production bs_keyword -> VALID_RANGE
-- On VALID_READ reduce production bs_keyword -> VALID_RANGE
-- On VALID_RANGE reduce production bs_keyword -> VALID_RANGE
-- On VALID_INDEX reduce production bs_keyword -> VALID_RANGE
-- On VALID reduce production bs_keyword -> VALID_RANGE
-- On UNSIGNED reduce production bs_keyword -> VALID_RANGE
-- On UNION reduce production bs_keyword -> VALID_RANGE
-- On UNALLOCATED reduce production bs_keyword -> VALID_RANGE
-- On TYPEOF reduce production bs_keyword -> VALID_RANGE
-- On TYPENAME reduce production bs_keyword -> VALID_RANGE
-- On TYPE reduce production bs_keyword -> VALID_RANGE
-- On TRUE reduce production bs_keyword -> VALID_RANGE
-- On TILDE reduce production bs_keyword -> VALID_RANGE
-- On TERMINATES reduce production bs_keyword -> VALID_RANGE
-- On STRUCT reduce production bs_keyword -> VALID_RANGE
-- On STRING_LITERAL reduce production bs_keyword -> VALID_RANGE
-- On STATIC reduce production bs_keyword -> VALID_RANGE
-- On STAR reduce production bs_keyword -> VALID_RANGE
-- On SLICE reduce production bs_keyword -> VALID_RANGE
-- On SLASH reduce production bs_keyword -> VALID_RANGE
-- On SIZEOF reduce production bs_keyword -> VALID_RANGE
-- On SIGNED reduce production bs_keyword -> VALID_RANGE
-- On SHORT reduce production bs_keyword -> VALID_RANGE
-- On SEPARATED reduce production bs_keyword -> VALID_RANGE
-- On SEMICOLON reduce production bs_keyword -> VALID_RANGE
-- On RSQUARE reduce production bs_keyword -> VALID_RANGE
-- On RPAR reduce production bs_keyword -> VALID_RANGE
-- On RETURNS reduce production bs_keyword -> VALID_RANGE
-- On RESULT reduce production bs_keyword -> VALID_RANGE
-- On REQUIRES reduce production bs_keyword -> VALID_RANGE
-- On REGISTER reduce production bs_keyword -> VALID_RANGE
-- On REAL reduce production bs_keyword -> VALID_RANGE
-- On READS reduce production bs_keyword -> VALID_RANGE
-- On RBRACE reduce production bs_keyword -> VALID_RANGE
-- On QUESTION reduce production bs_keyword -> VALID_RANGE
-- On PREDICATE reduce production bs_keyword -> VALID_RANGE
-- On PRAGMA reduce production bs_keyword -> VALID_RANGE
-- On PLUS reduce production bs_keyword -> VALID_RANGE
-- On PIPE reduce production bs_keyword -> VALID_RANGE
-- On PERCENT reduce production bs_keyword -> VALID_RANGE
-- On OR reduce production bs_keyword -> VALID_RANGE
-- On OLD reduce production bs_keyword -> VALID_RANGE
-- On OFFSET reduce production bs_keyword -> VALID_RANGE
-- On NULL reduce production bs_keyword -> VALID_RANGE
-- On NOTHING reduce production bs_keyword -> VALID_RANGE
-- On NOT reduce production bs_keyword -> VALID_RANGE
-- On NE reduce production bs_keyword -> VALID_RANGE
-- On MODULE reduce production bs_keyword -> VALID_RANGE
-- On MODEL reduce production bs_keyword -> VALID_RANGE
-- On MINUS reduce production bs_keyword -> VALID_RANGE
-- On LTLT reduce production bs_keyword -> VALID_RANGE
-- On LTCOLON reduce production bs_keyword -> VALID_RANGE
-- On LT reduce production bs_keyword -> VALID_RANGE
-- On LSQUARE reduce production bs_keyword -> VALID_RANGE
-- On LPAR reduce production bs_keyword -> VALID_RANGE
-- On LOOP reduce production bs_keyword -> VALID_RANGE
-- On LONG reduce production bs_keyword -> VALID_RANGE
-- On LOGIC reduce production bs_keyword -> VALID_RANGE
-- On LET reduce production bs_keyword -> VALID_RANGE
-- On LEMMA reduce production bs_keyword -> VALID_RANGE
-- On LE reduce production bs_keyword -> VALID_RANGE
-- On LBRACE reduce production bs_keyword -> VALID_RANGE
-- On LAMBDA reduce production bs_keyword -> VALID_RANGE
-- On LABEL reduce production bs_keyword -> VALID_RANGE
-- On INVARIANT reduce production bs_keyword -> VALID_RANGE
-- On INTER reduce production bs_keyword -> VALID_RANGE
-- On INTEGER reduce production bs_keyword -> VALID_RANGE
-- On INT reduce production bs_keyword -> VALID_RANGE
-- On INITIALIZED reduce production bs_keyword -> VALID_RANGE
-- On INDUCTIVE reduce production bs_keyword -> VALID_RANGE
-- On INCLUDE reduce production bs_keyword -> VALID_RANGE
-- On IMPLIES reduce production bs_keyword -> VALID_RANGE
-- On IMPACT reduce production bs_keyword -> VALID_RANGE
-- On IFF reduce production bs_keyword -> VALID_RANGE
-- On IF reduce production bs_keyword -> VALID_RANGE
-- On IDENTIFIER reduce production bs_keyword -> VALID_RANGE
-- On HATHAT reduce production bs_keyword -> VALID_RANGE
-- On HAT reduce production bs_keyword -> VALID_RANGE
-- On GTGT reduce production bs_keyword -> VALID_RANGE
-- On GT reduce production bs_keyword -> VALID_RANGE
-- On GLOBAL reduce production bs_keyword -> VALID_RANGE
-- On GHOST reduce production bs_keyword -> VALID_RANGE
-- On GE reduce production bs_keyword -> VALID_RANGE
-- On FUNCTION reduce production bs_keyword -> VALID_RANGE
-- On FROM reduce production bs_keyword -> VALID_RANGE
-- On FRESH reduce production bs_keyword -> VALID_RANGE
-- On FREES reduce production bs_keyword -> VALID_RANGE
-- On FREEABLE reduce production bs_keyword -> VALID_RANGE
-- On FORALL reduce production bs_keyword -> VALID_RANGE
-- On FOR reduce production bs_keyword -> VALID_RANGE
-- On FLOAT reduce production bs_keyword -> VALID_RANGE
-- On FALSE reduce production bs_keyword -> VALID_RANGE
-- On EXT_LET reduce production bs_keyword -> VALID_RANGE
-- On EXT_AT reduce production bs_keyword -> VALID_RANGE
-- On EXITS reduce production bs_keyword -> VALID_RANGE
-- On EXISTS reduce production bs_keyword -> VALID_RANGE
-- On EQUAL reduce production bs_keyword -> VALID_RANGE
-- On EQ reduce production bs_keyword -> VALID_RANGE
-- On EOF reduce production bs_keyword -> VALID_RANGE
-- On ENUM reduce production bs_keyword -> VALID_RANGE
-- On ENSURES reduce production bs_keyword -> VALID_RANGE
-- On EMPTY reduce production bs_keyword -> VALID_RANGE
-- On ELSE reduce production bs_keyword -> VALID_RANGE
-- On DYNAMIC reduce production bs_keyword -> VALID_RANGE
-- On DOUBLE reduce production bs_keyword -> VALID_RANGE
-- On DOTDOTDOT reduce production bs_keyword -> VALID_RANGE
-- On DOTDOT reduce production bs_keyword -> VALID_RANGE
-- On DOT reduce production bs_keyword -> VALID_RANGE
-- On DOLLAR reduce production bs_keyword -> VALID_RANGE
-- On DISJOINT reduce production bs_keyword -> VALID_RANGE
-- On DECREASES reduce production bs_keyword -> VALID_RANGE
-- On DANGLING reduce production bs_keyword -> VALID_RANGE
-- On CUSTOM reduce production bs_keyword -> VALID_RANGE
-- On CONTRACT reduce production bs_keyword -> VALID_RANGE
-- On CONTINUES reduce production bs_keyword -> VALID_RANGE
-- On CONSTANT10 reduce production bs_keyword -> VALID_RANGE
-- On CONSTANT reduce production bs_keyword -> VALID_RANGE
-- On CONST reduce production bs_keyword -> VALID_RANGE
-- On COMPLETE reduce production bs_keyword -> VALID_RANGE
-- On COMMA reduce production bs_keyword -> VALID_RANGE
-- On COLONGT reduce production bs_keyword -> VALID_RANGE
-- On COLONCOLON reduce production bs_keyword -> VALID_RANGE
-- On COLON2 reduce production bs_keyword -> VALID_RANGE
-- On COLON reduce production bs_keyword -> VALID_RANGE
-- On CHAR reduce production bs_keyword -> VALID_RANGE
-- On CASE reduce production bs_keyword -> VALID_RANGE
-- On BSUNION reduce production bs_keyword -> VALID_RANGE
-- On BSTYPE reduce production bs_keyword -> VALID_RANGE
-- On BREAKS reduce production bs_keyword -> VALID_RANGE
-- On BOOLEAN reduce production bs_keyword -> VALID_RANGE
-- On BOOL reduce production bs_keyword -> VALID_RANGE
-- On BLOCK_LENGTH reduce production bs_keyword -> VALID_RANGE
-- On BIMPLIES reduce production bs_keyword -> VALID_RANGE
-- On BIFF reduce production bs_keyword -> VALID_RANGE
-- On BEHAVIORS reduce production bs_keyword -> VALID_RANGE
-- On BEHAVIOR reduce production bs_keyword -> VALID_RANGE
-- On BASE_ADDR reduce production bs_keyword -> VALID_RANGE
-- On AXIOMATIC reduce production bs_keyword -> VALID_RANGE
-- On AXIOM reduce production bs_keyword -> VALID_RANGE
-- On AUTOMATIC reduce production bs_keyword -> VALID_RANGE
-- On AT reduce production bs_keyword -> VALID_RANGE
-- On ASSUMES reduce production bs_keyword -> VALID_RANGE
-- On ASSIGNS reduce production bs_keyword -> VALID_RANGE
-- On ASSERT reduce production bs_keyword -> VALID_RANGE
-- On ARROW reduce production bs_keyword -> VALID_RANGE
-- On AND reduce production bs_keyword -> VALID_RANGE
-- On AMP reduce production bs_keyword -> VALID_RANGE
-- On ALLOCATION reduce production bs_keyword -> VALID_RANGE
-- On ALLOCATES reduce production bs_keyword -> VALID_RANGE
-- On ALLOCABLE reduce production bs_keyword -> VALID_RANGE

State 955:
## Known stack suffix:
## VALID_INDEX
## LR(1) items:
bs_keyword -> VALID_INDEX . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> VALID_INDEX
-- On WITH reduce production bs_keyword -> VALID_INDEX
-- On VOLATILE reduce production bs_keyword -> VALID_INDEX
-- On VOID reduce production bs_keyword -> VALID_INDEX
-- On VARIANT reduce production bs_keyword -> VALID_INDEX
-- On VALID_READ reduce production bs_keyword -> VALID_INDEX
-- On VALID_RANGE reduce production bs_keyword -> VALID_INDEX
-- On VALID_INDEX reduce production bs_keyword -> VALID_INDEX
-- On VALID reduce production bs_keyword -> VALID_INDEX
-- On UNSIGNED reduce production bs_keyword -> VALID_INDEX
-- On UNION reduce production bs_keyword -> VALID_INDEX
-- On UNALLOCATED reduce production bs_keyword -> VALID_INDEX
-- On TYPEOF reduce production bs_keyword -> VALID_INDEX
-- On TYPENAME reduce production bs_keyword -> VALID_INDEX
-- On TYPE reduce production bs_keyword -> VALID_INDEX
-- On TRUE reduce production bs_keyword -> VALID_INDEX
-- On TILDE reduce production bs_keyword -> VALID_INDEX
-- On TERMINATES reduce production bs_keyword -> VALID_INDEX
-- On STRUCT reduce production bs_keyword -> VALID_INDEX
-- On STRING_LITERAL reduce production bs_keyword -> VALID_INDEX
-- On STATIC reduce production bs_keyword -> VALID_INDEX
-- On STAR reduce production bs_keyword -> VALID_INDEX
-- On SLICE reduce production bs_keyword -> VALID_INDEX
-- On SLASH reduce production bs_keyword -> VALID_INDEX
-- On SIZEOF reduce production bs_keyword -> VALID_INDEX
-- On SIGNED reduce production bs_keyword -> VALID_INDEX
-- On SHORT reduce production bs_keyword -> VALID_INDEX
-- On SEPARATED reduce production bs_keyword -> VALID_INDEX
-- On SEMICOLON reduce production bs_keyword -> VALID_INDEX
-- On RSQUARE reduce production bs_keyword -> VALID_INDEX
-- On RPAR reduce production bs_keyword -> VALID_INDEX
-- On RETURNS reduce production bs_keyword -> VALID_INDEX
-- On RESULT reduce production bs_keyword -> VALID_INDEX
-- On REQUIRES reduce production bs_keyword -> VALID_INDEX
-- On REGISTER reduce production bs_keyword -> VALID_INDEX
-- On REAL reduce production bs_keyword -> VALID_INDEX
-- On READS reduce production bs_keyword -> VALID_INDEX
-- On RBRACE reduce production bs_keyword -> VALID_INDEX
-- On QUESTION reduce production bs_keyword -> VALID_INDEX
-- On PREDICATE reduce production bs_keyword -> VALID_INDEX
-- On PRAGMA reduce production bs_keyword -> VALID_INDEX
-- On PLUS reduce production bs_keyword -> VALID_INDEX
-- On PIPE reduce production bs_keyword -> VALID_INDEX
-- On PERCENT reduce production bs_keyword -> VALID_INDEX
-- On OR reduce production bs_keyword -> VALID_INDEX
-- On OLD reduce production bs_keyword -> VALID_INDEX
-- On OFFSET reduce production bs_keyword -> VALID_INDEX
-- On NULL reduce production bs_keyword -> VALID_INDEX
-- On NOTHING reduce production bs_keyword -> VALID_INDEX
-- On NOT reduce production bs_keyword -> VALID_INDEX
-- On NE reduce production bs_keyword -> VALID_INDEX
-- On MODULE reduce production bs_keyword -> VALID_INDEX
-- On MODEL reduce production bs_keyword -> VALID_INDEX
-- On MINUS reduce production bs_keyword -> VALID_INDEX
-- On LTLT reduce production bs_keyword -> VALID_INDEX
-- On LTCOLON reduce production bs_keyword -> VALID_INDEX
-- On LT reduce production bs_keyword -> VALID_INDEX
-- On LSQUARE reduce production bs_keyword -> VALID_INDEX
-- On LPAR reduce production bs_keyword -> VALID_INDEX
-- On LOOP reduce production bs_keyword -> VALID_INDEX
-- On LONG reduce production bs_keyword -> VALID_INDEX
-- On LOGIC reduce production bs_keyword -> VALID_INDEX
-- On LET reduce production bs_keyword -> VALID_INDEX
-- On LEMMA reduce production bs_keyword -> VALID_INDEX
-- On LE reduce production bs_keyword -> VALID_INDEX
-- On LBRACE reduce production bs_keyword -> VALID_INDEX
-- On LAMBDA reduce production bs_keyword -> VALID_INDEX
-- On LABEL reduce production bs_keyword -> VALID_INDEX
-- On INVARIANT reduce production bs_keyword -> VALID_INDEX
-- On INTER reduce production bs_keyword -> VALID_INDEX
-- On INTEGER reduce production bs_keyword -> VALID_INDEX
-- On INT reduce production bs_keyword -> VALID_INDEX
-- On INITIALIZED reduce production bs_keyword -> VALID_INDEX
-- On INDUCTIVE reduce production bs_keyword -> VALID_INDEX
-- On INCLUDE reduce production bs_keyword -> VALID_INDEX
-- On IMPLIES reduce production bs_keyword -> VALID_INDEX
-- On IMPACT reduce production bs_keyword -> VALID_INDEX
-- On IFF reduce production bs_keyword -> VALID_INDEX
-- On IF reduce production bs_keyword -> VALID_INDEX
-- On IDENTIFIER reduce production bs_keyword -> VALID_INDEX
-- On HATHAT reduce production bs_keyword -> VALID_INDEX
-- On HAT reduce production bs_keyword -> VALID_INDEX
-- On GTGT reduce production bs_keyword -> VALID_INDEX
-- On GT reduce production bs_keyword -> VALID_INDEX
-- On GLOBAL reduce production bs_keyword -> VALID_INDEX
-- On GHOST reduce production bs_keyword -> VALID_INDEX
-- On GE reduce production bs_keyword -> VALID_INDEX
-- On FUNCTION reduce production bs_keyword -> VALID_INDEX
-- On FROM reduce production bs_keyword -> VALID_INDEX
-- On FRESH reduce production bs_keyword -> VALID_INDEX
-- On FREES reduce production bs_keyword -> VALID_INDEX
-- On FREEABLE reduce production bs_keyword -> VALID_INDEX
-- On FORALL reduce production bs_keyword -> VALID_INDEX
-- On FOR reduce production bs_keyword -> VALID_INDEX
-- On FLOAT reduce production bs_keyword -> VALID_INDEX
-- On FALSE reduce production bs_keyword -> VALID_INDEX
-- On EXT_LET reduce production bs_keyword -> VALID_INDEX
-- On EXT_AT reduce production bs_keyword -> VALID_INDEX
-- On EXITS reduce production bs_keyword -> VALID_INDEX
-- On EXISTS reduce production bs_keyword -> VALID_INDEX
-- On EQUAL reduce production bs_keyword -> VALID_INDEX
-- On EQ reduce production bs_keyword -> VALID_INDEX
-- On EOF reduce production bs_keyword -> VALID_INDEX
-- On ENUM reduce production bs_keyword -> VALID_INDEX
-- On ENSURES reduce production bs_keyword -> VALID_INDEX
-- On EMPTY reduce production bs_keyword -> VALID_INDEX
-- On ELSE reduce production bs_keyword -> VALID_INDEX
-- On DYNAMIC reduce production bs_keyword -> VALID_INDEX
-- On DOUBLE reduce production bs_keyword -> VALID_INDEX
-- On DOTDOTDOT reduce production bs_keyword -> VALID_INDEX
-- On DOTDOT reduce production bs_keyword -> VALID_INDEX
-- On DOT reduce production bs_keyword -> VALID_INDEX
-- On DOLLAR reduce production bs_keyword -> VALID_INDEX
-- On DISJOINT reduce production bs_keyword -> VALID_INDEX
-- On DECREASES reduce production bs_keyword -> VALID_INDEX
-- On DANGLING reduce production bs_keyword -> VALID_INDEX
-- On CUSTOM reduce production bs_keyword -> VALID_INDEX
-- On CONTRACT reduce production bs_keyword -> VALID_INDEX
-- On CONTINUES reduce production bs_keyword -> VALID_INDEX
-- On CONSTANT10 reduce production bs_keyword -> VALID_INDEX
-- On CONSTANT reduce production bs_keyword -> VALID_INDEX
-- On CONST reduce production bs_keyword -> VALID_INDEX
-- On COMPLETE reduce production bs_keyword -> VALID_INDEX
-- On COMMA reduce production bs_keyword -> VALID_INDEX
-- On COLONGT reduce production bs_keyword -> VALID_INDEX
-- On COLONCOLON reduce production bs_keyword -> VALID_INDEX
-- On COLON2 reduce production bs_keyword -> VALID_INDEX
-- On COLON reduce production bs_keyword -> VALID_INDEX
-- On CHAR reduce production bs_keyword -> VALID_INDEX
-- On CASE reduce production bs_keyword -> VALID_INDEX
-- On BSUNION reduce production bs_keyword -> VALID_INDEX
-- On BSTYPE reduce production bs_keyword -> VALID_INDEX
-- On BREAKS reduce production bs_keyword -> VALID_INDEX
-- On BOOLEAN reduce production bs_keyword -> VALID_INDEX
-- On BOOL reduce production bs_keyword -> VALID_INDEX
-- On BLOCK_LENGTH reduce production bs_keyword -> VALID_INDEX
-- On BIMPLIES reduce production bs_keyword -> VALID_INDEX
-- On BIFF reduce production bs_keyword -> VALID_INDEX
-- On BEHAVIORS reduce production bs_keyword -> VALID_INDEX
-- On BEHAVIOR reduce production bs_keyword -> VALID_INDEX
-- On BASE_ADDR reduce production bs_keyword -> VALID_INDEX
-- On AXIOMATIC reduce production bs_keyword -> VALID_INDEX
-- On AXIOM reduce production bs_keyword -> VALID_INDEX
-- On AUTOMATIC reduce production bs_keyword -> VALID_INDEX
-- On AT reduce production bs_keyword -> VALID_INDEX
-- On ASSUMES reduce production bs_keyword -> VALID_INDEX
-- On ASSIGNS reduce production bs_keyword -> VALID_INDEX
-- On ASSERT reduce production bs_keyword -> VALID_INDEX
-- On ARROW reduce production bs_keyword -> VALID_INDEX
-- On AND reduce production bs_keyword -> VALID_INDEX
-- On AMP reduce production bs_keyword -> VALID_INDEX
-- On ALLOCATION reduce production bs_keyword -> VALID_INDEX
-- On ALLOCATES reduce production bs_keyword -> VALID_INDEX
-- On ALLOCABLE reduce production bs_keyword -> VALID_INDEX

State 956:
## Known stack suffix:
## VALID
## LR(1) items:
bs_keyword -> VALID . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> VALID
-- On WITH reduce production bs_keyword -> VALID
-- On VOLATILE reduce production bs_keyword -> VALID
-- On VOID reduce production bs_keyword -> VALID
-- On VARIANT reduce production bs_keyword -> VALID
-- On VALID_READ reduce production bs_keyword -> VALID
-- On VALID_RANGE reduce production bs_keyword -> VALID
-- On VALID_INDEX reduce production bs_keyword -> VALID
-- On VALID reduce production bs_keyword -> VALID
-- On UNSIGNED reduce production bs_keyword -> VALID
-- On UNION reduce production bs_keyword -> VALID
-- On UNALLOCATED reduce production bs_keyword -> VALID
-- On TYPEOF reduce production bs_keyword -> VALID
-- On TYPENAME reduce production bs_keyword -> VALID
-- On TYPE reduce production bs_keyword -> VALID
-- On TRUE reduce production bs_keyword -> VALID
-- On TILDE reduce production bs_keyword -> VALID
-- On TERMINATES reduce production bs_keyword -> VALID
-- On STRUCT reduce production bs_keyword -> VALID
-- On STRING_LITERAL reduce production bs_keyword -> VALID
-- On STATIC reduce production bs_keyword -> VALID
-- On STAR reduce production bs_keyword -> VALID
-- On SLICE reduce production bs_keyword -> VALID
-- On SLASH reduce production bs_keyword -> VALID
-- On SIZEOF reduce production bs_keyword -> VALID
-- On SIGNED reduce production bs_keyword -> VALID
-- On SHORT reduce production bs_keyword -> VALID
-- On SEPARATED reduce production bs_keyword -> VALID
-- On SEMICOLON reduce production bs_keyword -> VALID
-- On RSQUARE reduce production bs_keyword -> VALID
-- On RPAR reduce production bs_keyword -> VALID
-- On RETURNS reduce production bs_keyword -> VALID
-- On RESULT reduce production bs_keyword -> VALID
-- On REQUIRES reduce production bs_keyword -> VALID
-- On REGISTER reduce production bs_keyword -> VALID
-- On REAL reduce production bs_keyword -> VALID
-- On READS reduce production bs_keyword -> VALID
-- On RBRACE reduce production bs_keyword -> VALID
-- On QUESTION reduce production bs_keyword -> VALID
-- On PREDICATE reduce production bs_keyword -> VALID
-- On PRAGMA reduce production bs_keyword -> VALID
-- On PLUS reduce production bs_keyword -> VALID
-- On PIPE reduce production bs_keyword -> VALID
-- On PERCENT reduce production bs_keyword -> VALID
-- On OR reduce production bs_keyword -> VALID
-- On OLD reduce production bs_keyword -> VALID
-- On OFFSET reduce production bs_keyword -> VALID
-- On NULL reduce production bs_keyword -> VALID
-- On NOTHING reduce production bs_keyword -> VALID
-- On NOT reduce production bs_keyword -> VALID
-- On NE reduce production bs_keyword -> VALID
-- On MODULE reduce production bs_keyword -> VALID
-- On MODEL reduce production bs_keyword -> VALID
-- On MINUS reduce production bs_keyword -> VALID
-- On LTLT reduce production bs_keyword -> VALID
-- On LTCOLON reduce production bs_keyword -> VALID
-- On LT reduce production bs_keyword -> VALID
-- On LSQUARE reduce production bs_keyword -> VALID
-- On LPAR reduce production bs_keyword -> VALID
-- On LOOP reduce production bs_keyword -> VALID
-- On LONG reduce production bs_keyword -> VALID
-- On LOGIC reduce production bs_keyword -> VALID
-- On LET reduce production bs_keyword -> VALID
-- On LEMMA reduce production bs_keyword -> VALID
-- On LE reduce production bs_keyword -> VALID
-- On LBRACE reduce production bs_keyword -> VALID
-- On LAMBDA reduce production bs_keyword -> VALID
-- On LABEL reduce production bs_keyword -> VALID
-- On INVARIANT reduce production bs_keyword -> VALID
-- On INTER reduce production bs_keyword -> VALID
-- On INTEGER reduce production bs_keyword -> VALID
-- On INT reduce production bs_keyword -> VALID
-- On INITIALIZED reduce production bs_keyword -> VALID
-- On INDUCTIVE reduce production bs_keyword -> VALID
-- On INCLUDE reduce production bs_keyword -> VALID
-- On IMPLIES reduce production bs_keyword -> VALID
-- On IMPACT reduce production bs_keyword -> VALID
-- On IFF reduce production bs_keyword -> VALID
-- On IF reduce production bs_keyword -> VALID
-- On IDENTIFIER reduce production bs_keyword -> VALID
-- On HATHAT reduce production bs_keyword -> VALID
-- On HAT reduce production bs_keyword -> VALID
-- On GTGT reduce production bs_keyword -> VALID
-- On GT reduce production bs_keyword -> VALID
-- On GLOBAL reduce production bs_keyword -> VALID
-- On GHOST reduce production bs_keyword -> VALID
-- On GE reduce production bs_keyword -> VALID
-- On FUNCTION reduce production bs_keyword -> VALID
-- On FROM reduce production bs_keyword -> VALID
-- On FRESH reduce production bs_keyword -> VALID
-- On FREES reduce production bs_keyword -> VALID
-- On FREEABLE reduce production bs_keyword -> VALID
-- On FORALL reduce production bs_keyword -> VALID
-- On FOR reduce production bs_keyword -> VALID
-- On FLOAT reduce production bs_keyword -> VALID
-- On FALSE reduce production bs_keyword -> VALID
-- On EXT_LET reduce production bs_keyword -> VALID
-- On EXT_AT reduce production bs_keyword -> VALID
-- On EXITS reduce production bs_keyword -> VALID
-- On EXISTS reduce production bs_keyword -> VALID
-- On EQUAL reduce production bs_keyword -> VALID
-- On EQ reduce production bs_keyword -> VALID
-- On EOF reduce production bs_keyword -> VALID
-- On ENUM reduce production bs_keyword -> VALID
-- On ENSURES reduce production bs_keyword -> VALID
-- On EMPTY reduce production bs_keyword -> VALID
-- On ELSE reduce production bs_keyword -> VALID
-- On DYNAMIC reduce production bs_keyword -> VALID
-- On DOUBLE reduce production bs_keyword -> VALID
-- On DOTDOTDOT reduce production bs_keyword -> VALID
-- On DOTDOT reduce production bs_keyword -> VALID
-- On DOT reduce production bs_keyword -> VALID
-- On DOLLAR reduce production bs_keyword -> VALID
-- On DISJOINT reduce production bs_keyword -> VALID
-- On DECREASES reduce production bs_keyword -> VALID
-- On DANGLING reduce production bs_keyword -> VALID
-- On CUSTOM reduce production bs_keyword -> VALID
-- On CONTRACT reduce production bs_keyword -> VALID
-- On CONTINUES reduce production bs_keyword -> VALID
-- On CONSTANT10 reduce production bs_keyword -> VALID
-- On CONSTANT reduce production bs_keyword -> VALID
-- On CONST reduce production bs_keyword -> VALID
-- On COMPLETE reduce production bs_keyword -> VALID
-- On COMMA reduce production bs_keyword -> VALID
-- On COLONGT reduce production bs_keyword -> VALID
-- On COLONCOLON reduce production bs_keyword -> VALID
-- On COLON2 reduce production bs_keyword -> VALID
-- On COLON reduce production bs_keyword -> VALID
-- On CHAR reduce production bs_keyword -> VALID
-- On CASE reduce production bs_keyword -> VALID
-- On BSUNION reduce production bs_keyword -> VALID
-- On BSTYPE reduce production bs_keyword -> VALID
-- On BREAKS reduce production bs_keyword -> VALID
-- On BOOLEAN reduce production bs_keyword -> VALID
-- On BOOL reduce production bs_keyword -> VALID
-- On BLOCK_LENGTH reduce production bs_keyword -> VALID
-- On BIMPLIES reduce production bs_keyword -> VALID
-- On BIFF reduce production bs_keyword -> VALID
-- On BEHAVIORS reduce production bs_keyword -> VALID
-- On BEHAVIOR reduce production bs_keyword -> VALID
-- On BASE_ADDR reduce production bs_keyword -> VALID
-- On AXIOMATIC reduce production bs_keyword -> VALID
-- On AXIOM reduce production bs_keyword -> VALID
-- On AUTOMATIC reduce production bs_keyword -> VALID
-- On AT reduce production bs_keyword -> VALID
-- On ASSUMES reduce production bs_keyword -> VALID
-- On ASSIGNS reduce production bs_keyword -> VALID
-- On ASSERT reduce production bs_keyword -> VALID
-- On ARROW reduce production bs_keyword -> VALID
-- On AND reduce production bs_keyword -> VALID
-- On AMP reduce production bs_keyword -> VALID
-- On ALLOCATION reduce production bs_keyword -> VALID
-- On ALLOCATES reduce production bs_keyword -> VALID
-- On ALLOCABLE reduce production bs_keyword -> VALID

State 957:
## Known stack suffix:
## UNALLOCATED
## LR(1) items:
bs_keyword -> UNALLOCATED . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> UNALLOCATED
-- On WITH reduce production bs_keyword -> UNALLOCATED
-- On VOLATILE reduce production bs_keyword -> UNALLOCATED
-- On VOID reduce production bs_keyword -> UNALLOCATED
-- On VARIANT reduce production bs_keyword -> UNALLOCATED
-- On VALID_READ reduce production bs_keyword -> UNALLOCATED
-- On VALID_RANGE reduce production bs_keyword -> UNALLOCATED
-- On VALID_INDEX reduce production bs_keyword -> UNALLOCATED
-- On VALID reduce production bs_keyword -> UNALLOCATED
-- On UNSIGNED reduce production bs_keyword -> UNALLOCATED
-- On UNION reduce production bs_keyword -> UNALLOCATED
-- On UNALLOCATED reduce production bs_keyword -> UNALLOCATED
-- On TYPEOF reduce production bs_keyword -> UNALLOCATED
-- On TYPENAME reduce production bs_keyword -> UNALLOCATED
-- On TYPE reduce production bs_keyword -> UNALLOCATED
-- On TRUE reduce production bs_keyword -> UNALLOCATED
-- On TILDE reduce production bs_keyword -> UNALLOCATED
-- On TERMINATES reduce production bs_keyword -> UNALLOCATED
-- On STRUCT reduce production bs_keyword -> UNALLOCATED
-- On STRING_LITERAL reduce production bs_keyword -> UNALLOCATED
-- On STATIC reduce production bs_keyword -> UNALLOCATED
-- On STAR reduce production bs_keyword -> UNALLOCATED
-- On SLICE reduce production bs_keyword -> UNALLOCATED
-- On SLASH reduce production bs_keyword -> UNALLOCATED
-- On SIZEOF reduce production bs_keyword -> UNALLOCATED
-- On SIGNED reduce production bs_keyword -> UNALLOCATED
-- On SHORT reduce production bs_keyword -> UNALLOCATED
-- On SEPARATED reduce production bs_keyword -> UNALLOCATED
-- On SEMICOLON reduce production bs_keyword -> UNALLOCATED
-- On RSQUARE reduce production bs_keyword -> UNALLOCATED
-- On RPAR reduce production bs_keyword -> UNALLOCATED
-- On RETURNS reduce production bs_keyword -> UNALLOCATED
-- On RESULT reduce production bs_keyword -> UNALLOCATED
-- On REQUIRES reduce production bs_keyword -> UNALLOCATED
-- On REGISTER reduce production bs_keyword -> UNALLOCATED
-- On REAL reduce production bs_keyword -> UNALLOCATED
-- On READS reduce production bs_keyword -> UNALLOCATED
-- On RBRACE reduce production bs_keyword -> UNALLOCATED
-- On QUESTION reduce production bs_keyword -> UNALLOCATED
-- On PREDICATE reduce production bs_keyword -> UNALLOCATED
-- On PRAGMA reduce production bs_keyword -> UNALLOCATED
-- On PLUS reduce production bs_keyword -> UNALLOCATED
-- On PIPE reduce production bs_keyword -> UNALLOCATED
-- On PERCENT reduce production bs_keyword -> UNALLOCATED
-- On OR reduce production bs_keyword -> UNALLOCATED
-- On OLD reduce production bs_keyword -> UNALLOCATED
-- On OFFSET reduce production bs_keyword -> UNALLOCATED
-- On NULL reduce production bs_keyword -> UNALLOCATED
-- On NOTHING reduce production bs_keyword -> UNALLOCATED
-- On NOT reduce production bs_keyword -> UNALLOCATED
-- On NE reduce production bs_keyword -> UNALLOCATED
-- On MODULE reduce production bs_keyword -> UNALLOCATED
-- On MODEL reduce production bs_keyword -> UNALLOCATED
-- On MINUS reduce production bs_keyword -> UNALLOCATED
-- On LTLT reduce production bs_keyword -> UNALLOCATED
-- On LTCOLON reduce production bs_keyword -> UNALLOCATED
-- On LT reduce production bs_keyword -> UNALLOCATED
-- On LSQUARE reduce production bs_keyword -> UNALLOCATED
-- On LPAR reduce production bs_keyword -> UNALLOCATED
-- On LOOP reduce production bs_keyword -> UNALLOCATED
-- On LONG reduce production bs_keyword -> UNALLOCATED
-- On LOGIC reduce production bs_keyword -> UNALLOCATED
-- On LET reduce production bs_keyword -> UNALLOCATED
-- On LEMMA reduce production bs_keyword -> UNALLOCATED
-- On LE reduce production bs_keyword -> UNALLOCATED
-- On LBRACE reduce production bs_keyword -> UNALLOCATED
-- On LAMBDA reduce production bs_keyword -> UNALLOCATED
-- On LABEL reduce production bs_keyword -> UNALLOCATED
-- On INVARIANT reduce production bs_keyword -> UNALLOCATED
-- On INTER reduce production bs_keyword -> UNALLOCATED
-- On INTEGER reduce production bs_keyword -> UNALLOCATED
-- On INT reduce production bs_keyword -> UNALLOCATED
-- On INITIALIZED reduce production bs_keyword -> UNALLOCATED
-- On INDUCTIVE reduce production bs_keyword -> UNALLOCATED
-- On INCLUDE reduce production bs_keyword -> UNALLOCATED
-- On IMPLIES reduce production bs_keyword -> UNALLOCATED
-- On IMPACT reduce production bs_keyword -> UNALLOCATED
-- On IFF reduce production bs_keyword -> UNALLOCATED
-- On IF reduce production bs_keyword -> UNALLOCATED
-- On IDENTIFIER reduce production bs_keyword -> UNALLOCATED
-- On HATHAT reduce production bs_keyword -> UNALLOCATED
-- On HAT reduce production bs_keyword -> UNALLOCATED
-- On GTGT reduce production bs_keyword -> UNALLOCATED
-- On GT reduce production bs_keyword -> UNALLOCATED
-- On GLOBAL reduce production bs_keyword -> UNALLOCATED
-- On GHOST reduce production bs_keyword -> UNALLOCATED
-- On GE reduce production bs_keyword -> UNALLOCATED
-- On FUNCTION reduce production bs_keyword -> UNALLOCATED
-- On FROM reduce production bs_keyword -> UNALLOCATED
-- On FRESH reduce production bs_keyword -> UNALLOCATED
-- On FREES reduce production bs_keyword -> UNALLOCATED
-- On FREEABLE reduce production bs_keyword -> UNALLOCATED
-- On FORALL reduce production bs_keyword -> UNALLOCATED
-- On FOR reduce production bs_keyword -> UNALLOCATED
-- On FLOAT reduce production bs_keyword -> UNALLOCATED
-- On FALSE reduce production bs_keyword -> UNALLOCATED
-- On EXT_LET reduce production bs_keyword -> UNALLOCATED
-- On EXT_AT reduce production bs_keyword -> UNALLOCATED
-- On EXITS reduce production bs_keyword -> UNALLOCATED
-- On EXISTS reduce production bs_keyword -> UNALLOCATED
-- On EQUAL reduce production bs_keyword -> UNALLOCATED
-- On EQ reduce production bs_keyword -> UNALLOCATED
-- On EOF reduce production bs_keyword -> UNALLOCATED
-- On ENUM reduce production bs_keyword -> UNALLOCATED
-- On ENSURES reduce production bs_keyword -> UNALLOCATED
-- On EMPTY reduce production bs_keyword -> UNALLOCATED
-- On ELSE reduce production bs_keyword -> UNALLOCATED
-- On DYNAMIC reduce production bs_keyword -> UNALLOCATED
-- On DOUBLE reduce production bs_keyword -> UNALLOCATED
-- On DOTDOTDOT reduce production bs_keyword -> UNALLOCATED
-- On DOTDOT reduce production bs_keyword -> UNALLOCATED
-- On DOT reduce production bs_keyword -> UNALLOCATED
-- On DOLLAR reduce production bs_keyword -> UNALLOCATED
-- On DISJOINT reduce production bs_keyword -> UNALLOCATED
-- On DECREASES reduce production bs_keyword -> UNALLOCATED
-- On DANGLING reduce production bs_keyword -> UNALLOCATED
-- On CUSTOM reduce production bs_keyword -> UNALLOCATED
-- On CONTRACT reduce production bs_keyword -> UNALLOCATED
-- On CONTINUES reduce production bs_keyword -> UNALLOCATED
-- On CONSTANT10 reduce production bs_keyword -> UNALLOCATED
-- On CONSTANT reduce production bs_keyword -> UNALLOCATED
-- On CONST reduce production bs_keyword -> UNALLOCATED
-- On COMPLETE reduce production bs_keyword -> UNALLOCATED
-- On COMMA reduce production bs_keyword -> UNALLOCATED
-- On COLONGT reduce production bs_keyword -> UNALLOCATED
-- On COLONCOLON reduce production bs_keyword -> UNALLOCATED
-- On COLON2 reduce production bs_keyword -> UNALLOCATED
-- On COLON reduce production bs_keyword -> UNALLOCATED
-- On CHAR reduce production bs_keyword -> UNALLOCATED
-- On CASE reduce production bs_keyword -> UNALLOCATED
-- On BSUNION reduce production bs_keyword -> UNALLOCATED
-- On BSTYPE reduce production bs_keyword -> UNALLOCATED
-- On BREAKS reduce production bs_keyword -> UNALLOCATED
-- On BOOLEAN reduce production bs_keyword -> UNALLOCATED
-- On BOOL reduce production bs_keyword -> UNALLOCATED
-- On BLOCK_LENGTH reduce production bs_keyword -> UNALLOCATED
-- On BIMPLIES reduce production bs_keyword -> UNALLOCATED
-- On BIFF reduce production bs_keyword -> UNALLOCATED
-- On BEHAVIORS reduce production bs_keyword -> UNALLOCATED
-- On BEHAVIOR reduce production bs_keyword -> UNALLOCATED
-- On BASE_ADDR reduce production bs_keyword -> UNALLOCATED
-- On AXIOMATIC reduce production bs_keyword -> UNALLOCATED
-- On AXIOM reduce production bs_keyword -> UNALLOCATED
-- On AUTOMATIC reduce production bs_keyword -> UNALLOCATED
-- On AT reduce production bs_keyword -> UNALLOCATED
-- On ASSUMES reduce production bs_keyword -> UNALLOCATED
-- On ASSIGNS reduce production bs_keyword -> UNALLOCATED
-- On ASSERT reduce production bs_keyword -> UNALLOCATED
-- On ARROW reduce production bs_keyword -> UNALLOCATED
-- On AND reduce production bs_keyword -> UNALLOCATED
-- On AMP reduce production bs_keyword -> UNALLOCATED
-- On ALLOCATION reduce production bs_keyword -> UNALLOCATED
-- On ALLOCATES reduce production bs_keyword -> UNALLOCATED
-- On ALLOCABLE reduce production bs_keyword -> UNALLOCATED

State 958:
## Known stack suffix:
## TYPEOF
## LR(1) items:
bs_keyword -> TYPEOF . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> TYPEOF
-- On WITH reduce production bs_keyword -> TYPEOF
-- On VOLATILE reduce production bs_keyword -> TYPEOF
-- On VOID reduce production bs_keyword -> TYPEOF
-- On VARIANT reduce production bs_keyword -> TYPEOF
-- On VALID_READ reduce production bs_keyword -> TYPEOF
-- On VALID_RANGE reduce production bs_keyword -> TYPEOF
-- On VALID_INDEX reduce production bs_keyword -> TYPEOF
-- On VALID reduce production bs_keyword -> TYPEOF
-- On UNSIGNED reduce production bs_keyword -> TYPEOF
-- On UNION reduce production bs_keyword -> TYPEOF
-- On UNALLOCATED reduce production bs_keyword -> TYPEOF
-- On TYPEOF reduce production bs_keyword -> TYPEOF
-- On TYPENAME reduce production bs_keyword -> TYPEOF
-- On TYPE reduce production bs_keyword -> TYPEOF
-- On TRUE reduce production bs_keyword -> TYPEOF
-- On TILDE reduce production bs_keyword -> TYPEOF
-- On TERMINATES reduce production bs_keyword -> TYPEOF
-- On STRUCT reduce production bs_keyword -> TYPEOF
-- On STRING_LITERAL reduce production bs_keyword -> TYPEOF
-- On STATIC reduce production bs_keyword -> TYPEOF
-- On STAR reduce production bs_keyword -> TYPEOF
-- On SLICE reduce production bs_keyword -> TYPEOF
-- On SLASH reduce production bs_keyword -> TYPEOF
-- On SIZEOF reduce production bs_keyword -> TYPEOF
-- On SIGNED reduce production bs_keyword -> TYPEOF
-- On SHORT reduce production bs_keyword -> TYPEOF
-- On SEPARATED reduce production bs_keyword -> TYPEOF
-- On SEMICOLON reduce production bs_keyword -> TYPEOF
-- On RSQUARE reduce production bs_keyword -> TYPEOF
-- On RPAR reduce production bs_keyword -> TYPEOF
-- On RETURNS reduce production bs_keyword -> TYPEOF
-- On RESULT reduce production bs_keyword -> TYPEOF
-- On REQUIRES reduce production bs_keyword -> TYPEOF
-- On REGISTER reduce production bs_keyword -> TYPEOF
-- On REAL reduce production bs_keyword -> TYPEOF
-- On READS reduce production bs_keyword -> TYPEOF
-- On RBRACE reduce production bs_keyword -> TYPEOF
-- On QUESTION reduce production bs_keyword -> TYPEOF
-- On PREDICATE reduce production bs_keyword -> TYPEOF
-- On PRAGMA reduce production bs_keyword -> TYPEOF
-- On PLUS reduce production bs_keyword -> TYPEOF
-- On PIPE reduce production bs_keyword -> TYPEOF
-- On PERCENT reduce production bs_keyword -> TYPEOF
-- On OR reduce production bs_keyword -> TYPEOF
-- On OLD reduce production bs_keyword -> TYPEOF
-- On OFFSET reduce production bs_keyword -> TYPEOF
-- On NULL reduce production bs_keyword -> TYPEOF
-- On NOTHING reduce production bs_keyword -> TYPEOF
-- On NOT reduce production bs_keyword -> TYPEOF
-- On NE reduce production bs_keyword -> TYPEOF
-- On MODULE reduce production bs_keyword -> TYPEOF
-- On MODEL reduce production bs_keyword -> TYPEOF
-- On MINUS reduce production bs_keyword -> TYPEOF
-- On LTLT reduce production bs_keyword -> TYPEOF
-- On LTCOLON reduce production bs_keyword -> TYPEOF
-- On LT reduce production bs_keyword -> TYPEOF
-- On LSQUARE reduce production bs_keyword -> TYPEOF
-- On LPAR reduce production bs_keyword -> TYPEOF
-- On LOOP reduce production bs_keyword -> TYPEOF
-- On LONG reduce production bs_keyword -> TYPEOF
-- On LOGIC reduce production bs_keyword -> TYPEOF
-- On LET reduce production bs_keyword -> TYPEOF
-- On LEMMA reduce production bs_keyword -> TYPEOF
-- On LE reduce production bs_keyword -> TYPEOF
-- On LBRACE reduce production bs_keyword -> TYPEOF
-- On LAMBDA reduce production bs_keyword -> TYPEOF
-- On LABEL reduce production bs_keyword -> TYPEOF
-- On INVARIANT reduce production bs_keyword -> TYPEOF
-- On INTER reduce production bs_keyword -> TYPEOF
-- On INTEGER reduce production bs_keyword -> TYPEOF
-- On INT reduce production bs_keyword -> TYPEOF
-- On INITIALIZED reduce production bs_keyword -> TYPEOF
-- On INDUCTIVE reduce production bs_keyword -> TYPEOF
-- On INCLUDE reduce production bs_keyword -> TYPEOF
-- On IMPLIES reduce production bs_keyword -> TYPEOF
-- On IMPACT reduce production bs_keyword -> TYPEOF
-- On IFF reduce production bs_keyword -> TYPEOF
-- On IF reduce production bs_keyword -> TYPEOF
-- On IDENTIFIER reduce production bs_keyword -> TYPEOF
-- On HATHAT reduce production bs_keyword -> TYPEOF
-- On HAT reduce production bs_keyword -> TYPEOF
-- On GTGT reduce production bs_keyword -> TYPEOF
-- On GT reduce production bs_keyword -> TYPEOF
-- On GLOBAL reduce production bs_keyword -> TYPEOF
-- On GHOST reduce production bs_keyword -> TYPEOF
-- On GE reduce production bs_keyword -> TYPEOF
-- On FUNCTION reduce production bs_keyword -> TYPEOF
-- On FROM reduce production bs_keyword -> TYPEOF
-- On FRESH reduce production bs_keyword -> TYPEOF
-- On FREES reduce production bs_keyword -> TYPEOF
-- On FREEABLE reduce production bs_keyword -> TYPEOF
-- On FORALL reduce production bs_keyword -> TYPEOF
-- On FOR reduce production bs_keyword -> TYPEOF
-- On FLOAT reduce production bs_keyword -> TYPEOF
-- On FALSE reduce production bs_keyword -> TYPEOF
-- On EXT_LET reduce production bs_keyword -> TYPEOF
-- On EXT_AT reduce production bs_keyword -> TYPEOF
-- On EXITS reduce production bs_keyword -> TYPEOF
-- On EXISTS reduce production bs_keyword -> TYPEOF
-- On EQUAL reduce production bs_keyword -> TYPEOF
-- On EQ reduce production bs_keyword -> TYPEOF
-- On EOF reduce production bs_keyword -> TYPEOF
-- On ENUM reduce production bs_keyword -> TYPEOF
-- On ENSURES reduce production bs_keyword -> TYPEOF
-- On EMPTY reduce production bs_keyword -> TYPEOF
-- On ELSE reduce production bs_keyword -> TYPEOF
-- On DYNAMIC reduce production bs_keyword -> TYPEOF
-- On DOUBLE reduce production bs_keyword -> TYPEOF
-- On DOTDOTDOT reduce production bs_keyword -> TYPEOF
-- On DOTDOT reduce production bs_keyword -> TYPEOF
-- On DOT reduce production bs_keyword -> TYPEOF
-- On DOLLAR reduce production bs_keyword -> TYPEOF
-- On DISJOINT reduce production bs_keyword -> TYPEOF
-- On DECREASES reduce production bs_keyword -> TYPEOF
-- On DANGLING reduce production bs_keyword -> TYPEOF
-- On CUSTOM reduce production bs_keyword -> TYPEOF
-- On CONTRACT reduce production bs_keyword -> TYPEOF
-- On CONTINUES reduce production bs_keyword -> TYPEOF
-- On CONSTANT10 reduce production bs_keyword -> TYPEOF
-- On CONSTANT reduce production bs_keyword -> TYPEOF
-- On CONST reduce production bs_keyword -> TYPEOF
-- On COMPLETE reduce production bs_keyword -> TYPEOF
-- On COMMA reduce production bs_keyword -> TYPEOF
-- On COLONGT reduce production bs_keyword -> TYPEOF
-- On COLONCOLON reduce production bs_keyword -> TYPEOF
-- On COLON2 reduce production bs_keyword -> TYPEOF
-- On COLON reduce production bs_keyword -> TYPEOF
-- On CHAR reduce production bs_keyword -> TYPEOF
-- On CASE reduce production bs_keyword -> TYPEOF
-- On BSUNION reduce production bs_keyword -> TYPEOF
-- On BSTYPE reduce production bs_keyword -> TYPEOF
-- On BREAKS reduce production bs_keyword -> TYPEOF
-- On BOOLEAN reduce production bs_keyword -> TYPEOF
-- On BOOL reduce production bs_keyword -> TYPEOF
-- On BLOCK_LENGTH reduce production bs_keyword -> TYPEOF
-- On BIMPLIES reduce production bs_keyword -> TYPEOF
-- On BIFF reduce production bs_keyword -> TYPEOF
-- On BEHAVIORS reduce production bs_keyword -> TYPEOF
-- On BEHAVIOR reduce production bs_keyword -> TYPEOF
-- On BASE_ADDR reduce production bs_keyword -> TYPEOF
-- On AXIOMATIC reduce production bs_keyword -> TYPEOF
-- On AXIOM reduce production bs_keyword -> TYPEOF
-- On AUTOMATIC reduce production bs_keyword -> TYPEOF
-- On AT reduce production bs_keyword -> TYPEOF
-- On ASSUMES reduce production bs_keyword -> TYPEOF
-- On ASSIGNS reduce production bs_keyword -> TYPEOF
-- On ASSERT reduce production bs_keyword -> TYPEOF
-- On ARROW reduce production bs_keyword -> TYPEOF
-- On AND reduce production bs_keyword -> TYPEOF
-- On AMP reduce production bs_keyword -> TYPEOF
-- On ALLOCATION reduce production bs_keyword -> TYPEOF
-- On ALLOCATES reduce production bs_keyword -> TYPEOF
-- On ALLOCABLE reduce production bs_keyword -> TYPEOF

State 959:
## Known stack suffix:
## TRUE
## LR(1) items:
bs_keyword -> TRUE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> TRUE
-- On WITH reduce production bs_keyword -> TRUE
-- On VOLATILE reduce production bs_keyword -> TRUE
-- On VOID reduce production bs_keyword -> TRUE
-- On VARIANT reduce production bs_keyword -> TRUE
-- On VALID_READ reduce production bs_keyword -> TRUE
-- On VALID_RANGE reduce production bs_keyword -> TRUE
-- On VALID_INDEX reduce production bs_keyword -> TRUE
-- On VALID reduce production bs_keyword -> TRUE
-- On UNSIGNED reduce production bs_keyword -> TRUE
-- On UNION reduce production bs_keyword -> TRUE
-- On UNALLOCATED reduce production bs_keyword -> TRUE
-- On TYPEOF reduce production bs_keyword -> TRUE
-- On TYPENAME reduce production bs_keyword -> TRUE
-- On TYPE reduce production bs_keyword -> TRUE
-- On TRUE reduce production bs_keyword -> TRUE
-- On TILDE reduce production bs_keyword -> TRUE
-- On TERMINATES reduce production bs_keyword -> TRUE
-- On STRUCT reduce production bs_keyword -> TRUE
-- On STRING_LITERAL reduce production bs_keyword -> TRUE
-- On STATIC reduce production bs_keyword -> TRUE
-- On STAR reduce production bs_keyword -> TRUE
-- On SLICE reduce production bs_keyword -> TRUE
-- On SLASH reduce production bs_keyword -> TRUE
-- On SIZEOF reduce production bs_keyword -> TRUE
-- On SIGNED reduce production bs_keyword -> TRUE
-- On SHORT reduce production bs_keyword -> TRUE
-- On SEPARATED reduce production bs_keyword -> TRUE
-- On SEMICOLON reduce production bs_keyword -> TRUE
-- On RSQUARE reduce production bs_keyword -> TRUE
-- On RPAR reduce production bs_keyword -> TRUE
-- On RETURNS reduce production bs_keyword -> TRUE
-- On RESULT reduce production bs_keyword -> TRUE
-- On REQUIRES reduce production bs_keyword -> TRUE
-- On REGISTER reduce production bs_keyword -> TRUE
-- On REAL reduce production bs_keyword -> TRUE
-- On READS reduce production bs_keyword -> TRUE
-- On RBRACE reduce production bs_keyword -> TRUE
-- On QUESTION reduce production bs_keyword -> TRUE
-- On PREDICATE reduce production bs_keyword -> TRUE
-- On PRAGMA reduce production bs_keyword -> TRUE
-- On PLUS reduce production bs_keyword -> TRUE
-- On PIPE reduce production bs_keyword -> TRUE
-- On PERCENT reduce production bs_keyword -> TRUE
-- On OR reduce production bs_keyword -> TRUE
-- On OLD reduce production bs_keyword -> TRUE
-- On OFFSET reduce production bs_keyword -> TRUE
-- On NULL reduce production bs_keyword -> TRUE
-- On NOTHING reduce production bs_keyword -> TRUE
-- On NOT reduce production bs_keyword -> TRUE
-- On NE reduce production bs_keyword -> TRUE
-- On MODULE reduce production bs_keyword -> TRUE
-- On MODEL reduce production bs_keyword -> TRUE
-- On MINUS reduce production bs_keyword -> TRUE
-- On LTLT reduce production bs_keyword -> TRUE
-- On LTCOLON reduce production bs_keyword -> TRUE
-- On LT reduce production bs_keyword -> TRUE
-- On LSQUARE reduce production bs_keyword -> TRUE
-- On LPAR reduce production bs_keyword -> TRUE
-- On LOOP reduce production bs_keyword -> TRUE
-- On LONG reduce production bs_keyword -> TRUE
-- On LOGIC reduce production bs_keyword -> TRUE
-- On LET reduce production bs_keyword -> TRUE
-- On LEMMA reduce production bs_keyword -> TRUE
-- On LE reduce production bs_keyword -> TRUE
-- On LBRACE reduce production bs_keyword -> TRUE
-- On LAMBDA reduce production bs_keyword -> TRUE
-- On LABEL reduce production bs_keyword -> TRUE
-- On INVARIANT reduce production bs_keyword -> TRUE
-- On INTER reduce production bs_keyword -> TRUE
-- On INTEGER reduce production bs_keyword -> TRUE
-- On INT reduce production bs_keyword -> TRUE
-- On INITIALIZED reduce production bs_keyword -> TRUE
-- On INDUCTIVE reduce production bs_keyword -> TRUE
-- On INCLUDE reduce production bs_keyword -> TRUE
-- On IMPLIES reduce production bs_keyword -> TRUE
-- On IMPACT reduce production bs_keyword -> TRUE
-- On IFF reduce production bs_keyword -> TRUE
-- On IF reduce production bs_keyword -> TRUE
-- On IDENTIFIER reduce production bs_keyword -> TRUE
-- On HATHAT reduce production bs_keyword -> TRUE
-- On HAT reduce production bs_keyword -> TRUE
-- On GTGT reduce production bs_keyword -> TRUE
-- On GT reduce production bs_keyword -> TRUE
-- On GLOBAL reduce production bs_keyword -> TRUE
-- On GHOST reduce production bs_keyword -> TRUE
-- On GE reduce production bs_keyword -> TRUE
-- On FUNCTION reduce production bs_keyword -> TRUE
-- On FROM reduce production bs_keyword -> TRUE
-- On FRESH reduce production bs_keyword -> TRUE
-- On FREES reduce production bs_keyword -> TRUE
-- On FREEABLE reduce production bs_keyword -> TRUE
-- On FORALL reduce production bs_keyword -> TRUE
-- On FOR reduce production bs_keyword -> TRUE
-- On FLOAT reduce production bs_keyword -> TRUE
-- On FALSE reduce production bs_keyword -> TRUE
-- On EXT_LET reduce production bs_keyword -> TRUE
-- On EXT_AT reduce production bs_keyword -> TRUE
-- On EXITS reduce production bs_keyword -> TRUE
-- On EXISTS reduce production bs_keyword -> TRUE
-- On EQUAL reduce production bs_keyword -> TRUE
-- On EQ reduce production bs_keyword -> TRUE
-- On EOF reduce production bs_keyword -> TRUE
-- On ENUM reduce production bs_keyword -> TRUE
-- On ENSURES reduce production bs_keyword -> TRUE
-- On EMPTY reduce production bs_keyword -> TRUE
-- On ELSE reduce production bs_keyword -> TRUE
-- On DYNAMIC reduce production bs_keyword -> TRUE
-- On DOUBLE reduce production bs_keyword -> TRUE
-- On DOTDOTDOT reduce production bs_keyword -> TRUE
-- On DOTDOT reduce production bs_keyword -> TRUE
-- On DOT reduce production bs_keyword -> TRUE
-- On DOLLAR reduce production bs_keyword -> TRUE
-- On DISJOINT reduce production bs_keyword -> TRUE
-- On DECREASES reduce production bs_keyword -> TRUE
-- On DANGLING reduce production bs_keyword -> TRUE
-- On CUSTOM reduce production bs_keyword -> TRUE
-- On CONTRACT reduce production bs_keyword -> TRUE
-- On CONTINUES reduce production bs_keyword -> TRUE
-- On CONSTANT10 reduce production bs_keyword -> TRUE
-- On CONSTANT reduce production bs_keyword -> TRUE
-- On CONST reduce production bs_keyword -> TRUE
-- On COMPLETE reduce production bs_keyword -> TRUE
-- On COMMA reduce production bs_keyword -> TRUE
-- On COLONGT reduce production bs_keyword -> TRUE
-- On COLONCOLON reduce production bs_keyword -> TRUE
-- On COLON2 reduce production bs_keyword -> TRUE
-- On COLON reduce production bs_keyword -> TRUE
-- On CHAR reduce production bs_keyword -> TRUE
-- On CASE reduce production bs_keyword -> TRUE
-- On BSUNION reduce production bs_keyword -> TRUE
-- On BSTYPE reduce production bs_keyword -> TRUE
-- On BREAKS reduce production bs_keyword -> TRUE
-- On BOOLEAN reduce production bs_keyword -> TRUE
-- On BOOL reduce production bs_keyword -> TRUE
-- On BLOCK_LENGTH reduce production bs_keyword -> TRUE
-- On BIMPLIES reduce production bs_keyword -> TRUE
-- On BIFF reduce production bs_keyword -> TRUE
-- On BEHAVIORS reduce production bs_keyword -> TRUE
-- On BEHAVIOR reduce production bs_keyword -> TRUE
-- On BASE_ADDR reduce production bs_keyword -> TRUE
-- On AXIOMATIC reduce production bs_keyword -> TRUE
-- On AXIOM reduce production bs_keyword -> TRUE
-- On AUTOMATIC reduce production bs_keyword -> TRUE
-- On AT reduce production bs_keyword -> TRUE
-- On ASSUMES reduce production bs_keyword -> TRUE
-- On ASSIGNS reduce production bs_keyword -> TRUE
-- On ASSERT reduce production bs_keyword -> TRUE
-- On ARROW reduce production bs_keyword -> TRUE
-- On AND reduce production bs_keyword -> TRUE
-- On AMP reduce production bs_keyword -> TRUE
-- On ALLOCATION reduce production bs_keyword -> TRUE
-- On ALLOCATES reduce production bs_keyword -> TRUE
-- On ALLOCABLE reduce production bs_keyword -> TRUE

State 960:
## Known stack suffix:
## TILDE
## LR(1) items:
wildcard -> TILDE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> TILDE
-- On WITH reduce production wildcard -> TILDE
-- On VOLATILE reduce production wildcard -> TILDE
-- On VOID reduce production wildcard -> TILDE
-- On VARIANT reduce production wildcard -> TILDE
-- On VALID_READ reduce production wildcard -> TILDE
-- On VALID_RANGE reduce production wildcard -> TILDE
-- On VALID_INDEX reduce production wildcard -> TILDE
-- On VALID reduce production wildcard -> TILDE
-- On UNSIGNED reduce production wildcard -> TILDE
-- On UNION reduce production wildcard -> TILDE
-- On UNALLOCATED reduce production wildcard -> TILDE
-- On TYPEOF reduce production wildcard -> TILDE
-- On TYPENAME reduce production wildcard -> TILDE
-- On TYPE reduce production wildcard -> TILDE
-- On TRUE reduce production wildcard -> TILDE
-- On TILDE reduce production wildcard -> TILDE
-- On TERMINATES reduce production wildcard -> TILDE
-- On STRUCT reduce production wildcard -> TILDE
-- On STRING_LITERAL reduce production wildcard -> TILDE
-- On STATIC reduce production wildcard -> TILDE
-- On STAR reduce production wildcard -> TILDE
-- On SLICE reduce production wildcard -> TILDE
-- On SLASH reduce production wildcard -> TILDE
-- On SIZEOF reduce production wildcard -> TILDE
-- On SIGNED reduce production wildcard -> TILDE
-- On SHORT reduce production wildcard -> TILDE
-- On SEPARATED reduce production wildcard -> TILDE
-- On SEMICOLON reduce production wildcard -> TILDE
-- On RSQUARE reduce production wildcard -> TILDE
-- On RPAR reduce production wildcard -> TILDE
-- On RETURNS reduce production wildcard -> TILDE
-- On RESULT reduce production wildcard -> TILDE
-- On REQUIRES reduce production wildcard -> TILDE
-- On REGISTER reduce production wildcard -> TILDE
-- On REAL reduce production wildcard -> TILDE
-- On READS reduce production wildcard -> TILDE
-- On RBRACE reduce production wildcard -> TILDE
-- On QUESTION reduce production wildcard -> TILDE
-- On PREDICATE reduce production wildcard -> TILDE
-- On PRAGMA reduce production wildcard -> TILDE
-- On PLUS reduce production wildcard -> TILDE
-- On PIPE reduce production wildcard -> TILDE
-- On PERCENT reduce production wildcard -> TILDE
-- On OR reduce production wildcard -> TILDE
-- On OLD reduce production wildcard -> TILDE
-- On OFFSET reduce production wildcard -> TILDE
-- On NULL reduce production wildcard -> TILDE
-- On NOTHING reduce production wildcard -> TILDE
-- On NOT reduce production wildcard -> TILDE
-- On NE reduce production wildcard -> TILDE
-- On MODULE reduce production wildcard -> TILDE
-- On MODEL reduce production wildcard -> TILDE
-- On MINUS reduce production wildcard -> TILDE
-- On LTLT reduce production wildcard -> TILDE
-- On LTCOLON reduce production wildcard -> TILDE
-- On LT reduce production wildcard -> TILDE
-- On LSQUARE reduce production wildcard -> TILDE
-- On LPAR reduce production wildcard -> TILDE
-- On LOOP reduce production wildcard -> TILDE
-- On LONG reduce production wildcard -> TILDE
-- On LOGIC reduce production wildcard -> TILDE
-- On LET reduce production wildcard -> TILDE
-- On LEMMA reduce production wildcard -> TILDE
-- On LE reduce production wildcard -> TILDE
-- On LBRACE reduce production wildcard -> TILDE
-- On LAMBDA reduce production wildcard -> TILDE
-- On LABEL reduce production wildcard -> TILDE
-- On INVARIANT reduce production wildcard -> TILDE
-- On INTER reduce production wildcard -> TILDE
-- On INTEGER reduce production wildcard -> TILDE
-- On INT reduce production wildcard -> TILDE
-- On INITIALIZED reduce production wildcard -> TILDE
-- On INDUCTIVE reduce production wildcard -> TILDE
-- On INCLUDE reduce production wildcard -> TILDE
-- On IMPLIES reduce production wildcard -> TILDE
-- On IMPACT reduce production wildcard -> TILDE
-- On IFF reduce production wildcard -> TILDE
-- On IF reduce production wildcard -> TILDE
-- On IDENTIFIER reduce production wildcard -> TILDE
-- On HATHAT reduce production wildcard -> TILDE
-- On HAT reduce production wildcard -> TILDE
-- On GTGT reduce production wildcard -> TILDE
-- On GT reduce production wildcard -> TILDE
-- On GLOBAL reduce production wildcard -> TILDE
-- On GHOST reduce production wildcard -> TILDE
-- On GE reduce production wildcard -> TILDE
-- On FUNCTION reduce production wildcard -> TILDE
-- On FROM reduce production wildcard -> TILDE
-- On FRESH reduce production wildcard -> TILDE
-- On FREES reduce production wildcard -> TILDE
-- On FREEABLE reduce production wildcard -> TILDE
-- On FORALL reduce production wildcard -> TILDE
-- On FOR reduce production wildcard -> TILDE
-- On FLOAT reduce production wildcard -> TILDE
-- On FALSE reduce production wildcard -> TILDE
-- On EXT_LET reduce production wildcard -> TILDE
-- On EXT_AT reduce production wildcard -> TILDE
-- On EXITS reduce production wildcard -> TILDE
-- On EXISTS reduce production wildcard -> TILDE
-- On EQUAL reduce production wildcard -> TILDE
-- On EQ reduce production wildcard -> TILDE
-- On EOF reduce production wildcard -> TILDE
-- On ENUM reduce production wildcard -> TILDE
-- On ENSURES reduce production wildcard -> TILDE
-- On EMPTY reduce production wildcard -> TILDE
-- On ELSE reduce production wildcard -> TILDE
-- On DYNAMIC reduce production wildcard -> TILDE
-- On DOUBLE reduce production wildcard -> TILDE
-- On DOTDOTDOT reduce production wildcard -> TILDE
-- On DOTDOT reduce production wildcard -> TILDE
-- On DOT reduce production wildcard -> TILDE
-- On DOLLAR reduce production wildcard -> TILDE
-- On DISJOINT reduce production wildcard -> TILDE
-- On DECREASES reduce production wildcard -> TILDE
-- On DANGLING reduce production wildcard -> TILDE
-- On CUSTOM reduce production wildcard -> TILDE
-- On CONTRACT reduce production wildcard -> TILDE
-- On CONTINUES reduce production wildcard -> TILDE
-- On CONSTANT10 reduce production wildcard -> TILDE
-- On CONSTANT reduce production wildcard -> TILDE
-- On CONST reduce production wildcard -> TILDE
-- On COMPLETE reduce production wildcard -> TILDE
-- On COMMA reduce production wildcard -> TILDE
-- On COLONGT reduce production wildcard -> TILDE
-- On COLONCOLON reduce production wildcard -> TILDE
-- On COLON2 reduce production wildcard -> TILDE
-- On COLON reduce production wildcard -> TILDE
-- On CHAR reduce production wildcard -> TILDE
-- On CASE reduce production wildcard -> TILDE
-- On BSUNION reduce production wildcard -> TILDE
-- On BSTYPE reduce production wildcard -> TILDE
-- On BREAKS reduce production wildcard -> TILDE
-- On BOOLEAN reduce production wildcard -> TILDE
-- On BOOL reduce production wildcard -> TILDE
-- On BLOCK_LENGTH reduce production wildcard -> TILDE
-- On BIMPLIES reduce production wildcard -> TILDE
-- On BIFF reduce production wildcard -> TILDE
-- On BEHAVIORS reduce production wildcard -> TILDE
-- On BEHAVIOR reduce production wildcard -> TILDE
-- On BASE_ADDR reduce production wildcard -> TILDE
-- On AXIOMATIC reduce production wildcard -> TILDE
-- On AXIOM reduce production wildcard -> TILDE
-- On AUTOMATIC reduce production wildcard -> TILDE
-- On AT reduce production wildcard -> TILDE
-- On ASSUMES reduce production wildcard -> TILDE
-- On ASSIGNS reduce production wildcard -> TILDE
-- On ASSERT reduce production wildcard -> TILDE
-- On ARROW reduce production wildcard -> TILDE
-- On AND reduce production wildcard -> TILDE
-- On AMP reduce production wildcard -> TILDE
-- On ALLOCATION reduce production wildcard -> TILDE
-- On ALLOCATES reduce production wildcard -> TILDE
-- On ALLOCABLE reduce production wildcard -> TILDE

State 961:
## Known stack suffix:
## STRING_LITERAL
## LR(1) items:
wildcard -> STRING_LITERAL . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> STRING_LITERAL
-- On WITH reduce production wildcard -> STRING_LITERAL
-- On VOLATILE reduce production wildcard -> STRING_LITERAL
-- On VOID reduce production wildcard -> STRING_LITERAL
-- On VARIANT reduce production wildcard -> STRING_LITERAL
-- On VALID_READ reduce production wildcard -> STRING_LITERAL
-- On VALID_RANGE reduce production wildcard -> STRING_LITERAL
-- On VALID_INDEX reduce production wildcard -> STRING_LITERAL
-- On VALID reduce production wildcard -> STRING_LITERAL
-- On UNSIGNED reduce production wildcard -> STRING_LITERAL
-- On UNION reduce production wildcard -> STRING_LITERAL
-- On UNALLOCATED reduce production wildcard -> STRING_LITERAL
-- On TYPEOF reduce production wildcard -> STRING_LITERAL
-- On TYPENAME reduce production wildcard -> STRING_LITERAL
-- On TYPE reduce production wildcard -> STRING_LITERAL
-- On TRUE reduce production wildcard -> STRING_LITERAL
-- On TILDE reduce production wildcard -> STRING_LITERAL
-- On TERMINATES reduce production wildcard -> STRING_LITERAL
-- On STRUCT reduce production wildcard -> STRING_LITERAL
-- On STRING_LITERAL reduce production wildcard -> STRING_LITERAL
-- On STATIC reduce production wildcard -> STRING_LITERAL
-- On STAR reduce production wildcard -> STRING_LITERAL
-- On SLICE reduce production wildcard -> STRING_LITERAL
-- On SLASH reduce production wildcard -> STRING_LITERAL
-- On SIZEOF reduce production wildcard -> STRING_LITERAL
-- On SIGNED reduce production wildcard -> STRING_LITERAL
-- On SHORT reduce production wildcard -> STRING_LITERAL
-- On SEPARATED reduce production wildcard -> STRING_LITERAL
-- On SEMICOLON reduce production wildcard -> STRING_LITERAL
-- On RSQUARE reduce production wildcard -> STRING_LITERAL
-- On RPAR reduce production wildcard -> STRING_LITERAL
-- On RETURNS reduce production wildcard -> STRING_LITERAL
-- On RESULT reduce production wildcard -> STRING_LITERAL
-- On REQUIRES reduce production wildcard -> STRING_LITERAL
-- On REGISTER reduce production wildcard -> STRING_LITERAL
-- On REAL reduce production wildcard -> STRING_LITERAL
-- On READS reduce production wildcard -> STRING_LITERAL
-- On RBRACE reduce production wildcard -> STRING_LITERAL
-- On QUESTION reduce production wildcard -> STRING_LITERAL
-- On PREDICATE reduce production wildcard -> STRING_LITERAL
-- On PRAGMA reduce production wildcard -> STRING_LITERAL
-- On PLUS reduce production wildcard -> STRING_LITERAL
-- On PIPE reduce production wildcard -> STRING_LITERAL
-- On PERCENT reduce production wildcard -> STRING_LITERAL
-- On OR reduce production wildcard -> STRING_LITERAL
-- On OLD reduce production wildcard -> STRING_LITERAL
-- On OFFSET reduce production wildcard -> STRING_LITERAL
-- On NULL reduce production wildcard -> STRING_LITERAL
-- On NOTHING reduce production wildcard -> STRING_LITERAL
-- On NOT reduce production wildcard -> STRING_LITERAL
-- On NE reduce production wildcard -> STRING_LITERAL
-- On MODULE reduce production wildcard -> STRING_LITERAL
-- On MODEL reduce production wildcard -> STRING_LITERAL
-- On MINUS reduce production wildcard -> STRING_LITERAL
-- On LTLT reduce production wildcard -> STRING_LITERAL
-- On LTCOLON reduce production wildcard -> STRING_LITERAL
-- On LT reduce production wildcard -> STRING_LITERAL
-- On LSQUARE reduce production wildcard -> STRING_LITERAL
-- On LPAR reduce production wildcard -> STRING_LITERAL
-- On LOOP reduce production wildcard -> STRING_LITERAL
-- On LONG reduce production wildcard -> STRING_LITERAL
-- On LOGIC reduce production wildcard -> STRING_LITERAL
-- On LET reduce production wildcard -> STRING_LITERAL
-- On LEMMA reduce production wildcard -> STRING_LITERAL
-- On LE reduce production wildcard -> STRING_LITERAL
-- On LBRACE reduce production wildcard -> STRING_LITERAL
-- On LAMBDA reduce production wildcard -> STRING_LITERAL
-- On LABEL reduce production wildcard -> STRING_LITERAL
-- On INVARIANT reduce production wildcard -> STRING_LITERAL
-- On INTER reduce production wildcard -> STRING_LITERAL
-- On INTEGER reduce production wildcard -> STRING_LITERAL
-- On INT reduce production wildcard -> STRING_LITERAL
-- On INITIALIZED reduce production wildcard -> STRING_LITERAL
-- On INDUCTIVE reduce production wildcard -> STRING_LITERAL
-- On INCLUDE reduce production wildcard -> STRING_LITERAL
-- On IMPLIES reduce production wildcard -> STRING_LITERAL
-- On IMPACT reduce production wildcard -> STRING_LITERAL
-- On IFF reduce production wildcard -> STRING_LITERAL
-- On IF reduce production wildcard -> STRING_LITERAL
-- On IDENTIFIER reduce production wildcard -> STRING_LITERAL
-- On HATHAT reduce production wildcard -> STRING_LITERAL
-- On HAT reduce production wildcard -> STRING_LITERAL
-- On GTGT reduce production wildcard -> STRING_LITERAL
-- On GT reduce production wildcard -> STRING_LITERAL
-- On GLOBAL reduce production wildcard -> STRING_LITERAL
-- On GHOST reduce production wildcard -> STRING_LITERAL
-- On GE reduce production wildcard -> STRING_LITERAL
-- On FUNCTION reduce production wildcard -> STRING_LITERAL
-- On FROM reduce production wildcard -> STRING_LITERAL
-- On FRESH reduce production wildcard -> STRING_LITERAL
-- On FREES reduce production wildcard -> STRING_LITERAL
-- On FREEABLE reduce production wildcard -> STRING_LITERAL
-- On FORALL reduce production wildcard -> STRING_LITERAL
-- On FOR reduce production wildcard -> STRING_LITERAL
-- On FLOAT reduce production wildcard -> STRING_LITERAL
-- On FALSE reduce production wildcard -> STRING_LITERAL
-- On EXT_LET reduce production wildcard -> STRING_LITERAL
-- On EXT_AT reduce production wildcard -> STRING_LITERAL
-- On EXITS reduce production wildcard -> STRING_LITERAL
-- On EXISTS reduce production wildcard -> STRING_LITERAL
-- On EQUAL reduce production wildcard -> STRING_LITERAL
-- On EQ reduce production wildcard -> STRING_LITERAL
-- On EOF reduce production wildcard -> STRING_LITERAL
-- On ENUM reduce production wildcard -> STRING_LITERAL
-- On ENSURES reduce production wildcard -> STRING_LITERAL
-- On EMPTY reduce production wildcard -> STRING_LITERAL
-- On ELSE reduce production wildcard -> STRING_LITERAL
-- On DYNAMIC reduce production wildcard -> STRING_LITERAL
-- On DOUBLE reduce production wildcard -> STRING_LITERAL
-- On DOTDOTDOT reduce production wildcard -> STRING_LITERAL
-- On DOTDOT reduce production wildcard -> STRING_LITERAL
-- On DOT reduce production wildcard -> STRING_LITERAL
-- On DOLLAR reduce production wildcard -> STRING_LITERAL
-- On DISJOINT reduce production wildcard -> STRING_LITERAL
-- On DECREASES reduce production wildcard -> STRING_LITERAL
-- On DANGLING reduce production wildcard -> STRING_LITERAL
-- On CUSTOM reduce production wildcard -> STRING_LITERAL
-- On CONTRACT reduce production wildcard -> STRING_LITERAL
-- On CONTINUES reduce production wildcard -> STRING_LITERAL
-- On CONSTANT10 reduce production wildcard -> STRING_LITERAL
-- On CONSTANT reduce production wildcard -> STRING_LITERAL
-- On CONST reduce production wildcard -> STRING_LITERAL
-- On COMPLETE reduce production wildcard -> STRING_LITERAL
-- On COMMA reduce production wildcard -> STRING_LITERAL
-- On COLONGT reduce production wildcard -> STRING_LITERAL
-- On COLONCOLON reduce production wildcard -> STRING_LITERAL
-- On COLON2 reduce production wildcard -> STRING_LITERAL
-- On COLON reduce production wildcard -> STRING_LITERAL
-- On CHAR reduce production wildcard -> STRING_LITERAL
-- On CASE reduce production wildcard -> STRING_LITERAL
-- On BSUNION reduce production wildcard -> STRING_LITERAL
-- On BSTYPE reduce production wildcard -> STRING_LITERAL
-- On BREAKS reduce production wildcard -> STRING_LITERAL
-- On BOOLEAN reduce production wildcard -> STRING_LITERAL
-- On BOOL reduce production wildcard -> STRING_LITERAL
-- On BLOCK_LENGTH reduce production wildcard -> STRING_LITERAL
-- On BIMPLIES reduce production wildcard -> STRING_LITERAL
-- On BIFF reduce production wildcard -> STRING_LITERAL
-- On BEHAVIORS reduce production wildcard -> STRING_LITERAL
-- On BEHAVIOR reduce production wildcard -> STRING_LITERAL
-- On BASE_ADDR reduce production wildcard -> STRING_LITERAL
-- On AXIOMATIC reduce production wildcard -> STRING_LITERAL
-- On AXIOM reduce production wildcard -> STRING_LITERAL
-- On AUTOMATIC reduce production wildcard -> STRING_LITERAL
-- On AT reduce production wildcard -> STRING_LITERAL
-- On ASSUMES reduce production wildcard -> STRING_LITERAL
-- On ASSIGNS reduce production wildcard -> STRING_LITERAL
-- On ASSERT reduce production wildcard -> STRING_LITERAL
-- On ARROW reduce production wildcard -> STRING_LITERAL
-- On AND reduce production wildcard -> STRING_LITERAL
-- On AMP reduce production wildcard -> STRING_LITERAL
-- On ALLOCATION reduce production wildcard -> STRING_LITERAL
-- On ALLOCATES reduce production wildcard -> STRING_LITERAL
-- On ALLOCABLE reduce production wildcard -> STRING_LITERAL

State 962:
## Known stack suffix:
## STAR
## LR(1) items:
wildcard -> STAR . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> STAR
-- On WITH reduce production wildcard -> STAR
-- On VOLATILE reduce production wildcard -> STAR
-- On VOID reduce production wildcard -> STAR
-- On VARIANT reduce production wildcard -> STAR
-- On VALID_READ reduce production wildcard -> STAR
-- On VALID_RANGE reduce production wildcard -> STAR
-- On VALID_INDEX reduce production wildcard -> STAR
-- On VALID reduce production wildcard -> STAR
-- On UNSIGNED reduce production wildcard -> STAR
-- On UNION reduce production wildcard -> STAR
-- On UNALLOCATED reduce production wildcard -> STAR
-- On TYPEOF reduce production wildcard -> STAR
-- On TYPENAME reduce production wildcard -> STAR
-- On TYPE reduce production wildcard -> STAR
-- On TRUE reduce production wildcard -> STAR
-- On TILDE reduce production wildcard -> STAR
-- On TERMINATES reduce production wildcard -> STAR
-- On STRUCT reduce production wildcard -> STAR
-- On STRING_LITERAL reduce production wildcard -> STAR
-- On STATIC reduce production wildcard -> STAR
-- On STAR reduce production wildcard -> STAR
-- On SLICE reduce production wildcard -> STAR
-- On SLASH reduce production wildcard -> STAR
-- On SIZEOF reduce production wildcard -> STAR
-- On SIGNED reduce production wildcard -> STAR
-- On SHORT reduce production wildcard -> STAR
-- On SEPARATED reduce production wildcard -> STAR
-- On SEMICOLON reduce production wildcard -> STAR
-- On RSQUARE reduce production wildcard -> STAR
-- On RPAR reduce production wildcard -> STAR
-- On RETURNS reduce production wildcard -> STAR
-- On RESULT reduce production wildcard -> STAR
-- On REQUIRES reduce production wildcard -> STAR
-- On REGISTER reduce production wildcard -> STAR
-- On REAL reduce production wildcard -> STAR
-- On READS reduce production wildcard -> STAR
-- On RBRACE reduce production wildcard -> STAR
-- On QUESTION reduce production wildcard -> STAR
-- On PREDICATE reduce production wildcard -> STAR
-- On PRAGMA reduce production wildcard -> STAR
-- On PLUS reduce production wildcard -> STAR
-- On PIPE reduce production wildcard -> STAR
-- On PERCENT reduce production wildcard -> STAR
-- On OR reduce production wildcard -> STAR
-- On OLD reduce production wildcard -> STAR
-- On OFFSET reduce production wildcard -> STAR
-- On NULL reduce production wildcard -> STAR
-- On NOTHING reduce production wildcard -> STAR
-- On NOT reduce production wildcard -> STAR
-- On NE reduce production wildcard -> STAR
-- On MODULE reduce production wildcard -> STAR
-- On MODEL reduce production wildcard -> STAR
-- On MINUS reduce production wildcard -> STAR
-- On LTLT reduce production wildcard -> STAR
-- On LTCOLON reduce production wildcard -> STAR
-- On LT reduce production wildcard -> STAR
-- On LSQUARE reduce production wildcard -> STAR
-- On LPAR reduce production wildcard -> STAR
-- On LOOP reduce production wildcard -> STAR
-- On LONG reduce production wildcard -> STAR
-- On LOGIC reduce production wildcard -> STAR
-- On LET reduce production wildcard -> STAR
-- On LEMMA reduce production wildcard -> STAR
-- On LE reduce production wildcard -> STAR
-- On LBRACE reduce production wildcard -> STAR
-- On LAMBDA reduce production wildcard -> STAR
-- On LABEL reduce production wildcard -> STAR
-- On INVARIANT reduce production wildcard -> STAR
-- On INTER reduce production wildcard -> STAR
-- On INTEGER reduce production wildcard -> STAR
-- On INT reduce production wildcard -> STAR
-- On INITIALIZED reduce production wildcard -> STAR
-- On INDUCTIVE reduce production wildcard -> STAR
-- On INCLUDE reduce production wildcard -> STAR
-- On IMPLIES reduce production wildcard -> STAR
-- On IMPACT reduce production wildcard -> STAR
-- On IFF reduce production wildcard -> STAR
-- On IF reduce production wildcard -> STAR
-- On IDENTIFIER reduce production wildcard -> STAR
-- On HATHAT reduce production wildcard -> STAR
-- On HAT reduce production wildcard -> STAR
-- On GTGT reduce production wildcard -> STAR
-- On GT reduce production wildcard -> STAR
-- On GLOBAL reduce production wildcard -> STAR
-- On GHOST reduce production wildcard -> STAR
-- On GE reduce production wildcard -> STAR
-- On FUNCTION reduce production wildcard -> STAR
-- On FROM reduce production wildcard -> STAR
-- On FRESH reduce production wildcard -> STAR
-- On FREES reduce production wildcard -> STAR
-- On FREEABLE reduce production wildcard -> STAR
-- On FORALL reduce production wildcard -> STAR
-- On FOR reduce production wildcard -> STAR
-- On FLOAT reduce production wildcard -> STAR
-- On FALSE reduce production wildcard -> STAR
-- On EXT_LET reduce production wildcard -> STAR
-- On EXT_AT reduce production wildcard -> STAR
-- On EXITS reduce production wildcard -> STAR
-- On EXISTS reduce production wildcard -> STAR
-- On EQUAL reduce production wildcard -> STAR
-- On EQ reduce production wildcard -> STAR
-- On EOF reduce production wildcard -> STAR
-- On ENUM reduce production wildcard -> STAR
-- On ENSURES reduce production wildcard -> STAR
-- On EMPTY reduce production wildcard -> STAR
-- On ELSE reduce production wildcard -> STAR
-- On DYNAMIC reduce production wildcard -> STAR
-- On DOUBLE reduce production wildcard -> STAR
-- On DOTDOTDOT reduce production wildcard -> STAR
-- On DOTDOT reduce production wildcard -> STAR
-- On DOT reduce production wildcard -> STAR
-- On DOLLAR reduce production wildcard -> STAR
-- On DISJOINT reduce production wildcard -> STAR
-- On DECREASES reduce production wildcard -> STAR
-- On DANGLING reduce production wildcard -> STAR
-- On CUSTOM reduce production wildcard -> STAR
-- On CONTRACT reduce production wildcard -> STAR
-- On CONTINUES reduce production wildcard -> STAR
-- On CONSTANT10 reduce production wildcard -> STAR
-- On CONSTANT reduce production wildcard -> STAR
-- On CONST reduce production wildcard -> STAR
-- On COMPLETE reduce production wildcard -> STAR
-- On COMMA reduce production wildcard -> STAR
-- On COLONGT reduce production wildcard -> STAR
-- On COLONCOLON reduce production wildcard -> STAR
-- On COLON2 reduce production wildcard -> STAR
-- On COLON reduce production wildcard -> STAR
-- On CHAR reduce production wildcard -> STAR
-- On CASE reduce production wildcard -> STAR
-- On BSUNION reduce production wildcard -> STAR
-- On BSTYPE reduce production wildcard -> STAR
-- On BREAKS reduce production wildcard -> STAR
-- On BOOLEAN reduce production wildcard -> STAR
-- On BOOL reduce production wildcard -> STAR
-- On BLOCK_LENGTH reduce production wildcard -> STAR
-- On BIMPLIES reduce production wildcard -> STAR
-- On BIFF reduce production wildcard -> STAR
-- On BEHAVIORS reduce production wildcard -> STAR
-- On BEHAVIOR reduce production wildcard -> STAR
-- On BASE_ADDR reduce production wildcard -> STAR
-- On AXIOMATIC reduce production wildcard -> STAR
-- On AXIOM reduce production wildcard -> STAR
-- On AUTOMATIC reduce production wildcard -> STAR
-- On AT reduce production wildcard -> STAR
-- On ASSUMES reduce production wildcard -> STAR
-- On ASSIGNS reduce production wildcard -> STAR
-- On ASSERT reduce production wildcard -> STAR
-- On ARROW reduce production wildcard -> STAR
-- On AND reduce production wildcard -> STAR
-- On AMP reduce production wildcard -> STAR
-- On ALLOCATION reduce production wildcard -> STAR
-- On ALLOCATES reduce production wildcard -> STAR
-- On ALLOCABLE reduce production wildcard -> STAR

State 963:
## Known stack suffix:
## SLASH
## LR(1) items:
wildcard -> SLASH . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> SLASH
-- On WITH reduce production wildcard -> SLASH
-- On VOLATILE reduce production wildcard -> SLASH
-- On VOID reduce production wildcard -> SLASH
-- On VARIANT reduce production wildcard -> SLASH
-- On VALID_READ reduce production wildcard -> SLASH
-- On VALID_RANGE reduce production wildcard -> SLASH
-- On VALID_INDEX reduce production wildcard -> SLASH
-- On VALID reduce production wildcard -> SLASH
-- On UNSIGNED reduce production wildcard -> SLASH
-- On UNION reduce production wildcard -> SLASH
-- On UNALLOCATED reduce production wildcard -> SLASH
-- On TYPEOF reduce production wildcard -> SLASH
-- On TYPENAME reduce production wildcard -> SLASH
-- On TYPE reduce production wildcard -> SLASH
-- On TRUE reduce production wildcard -> SLASH
-- On TILDE reduce production wildcard -> SLASH
-- On TERMINATES reduce production wildcard -> SLASH
-- On STRUCT reduce production wildcard -> SLASH
-- On STRING_LITERAL reduce production wildcard -> SLASH
-- On STATIC reduce production wildcard -> SLASH
-- On STAR reduce production wildcard -> SLASH
-- On SLICE reduce production wildcard -> SLASH
-- On SLASH reduce production wildcard -> SLASH
-- On SIZEOF reduce production wildcard -> SLASH
-- On SIGNED reduce production wildcard -> SLASH
-- On SHORT reduce production wildcard -> SLASH
-- On SEPARATED reduce production wildcard -> SLASH
-- On SEMICOLON reduce production wildcard -> SLASH
-- On RSQUARE reduce production wildcard -> SLASH
-- On RPAR reduce production wildcard -> SLASH
-- On RETURNS reduce production wildcard -> SLASH
-- On RESULT reduce production wildcard -> SLASH
-- On REQUIRES reduce production wildcard -> SLASH
-- On REGISTER reduce production wildcard -> SLASH
-- On REAL reduce production wildcard -> SLASH
-- On READS reduce production wildcard -> SLASH
-- On RBRACE reduce production wildcard -> SLASH
-- On QUESTION reduce production wildcard -> SLASH
-- On PREDICATE reduce production wildcard -> SLASH
-- On PRAGMA reduce production wildcard -> SLASH
-- On PLUS reduce production wildcard -> SLASH
-- On PIPE reduce production wildcard -> SLASH
-- On PERCENT reduce production wildcard -> SLASH
-- On OR reduce production wildcard -> SLASH
-- On OLD reduce production wildcard -> SLASH
-- On OFFSET reduce production wildcard -> SLASH
-- On NULL reduce production wildcard -> SLASH
-- On NOTHING reduce production wildcard -> SLASH
-- On NOT reduce production wildcard -> SLASH
-- On NE reduce production wildcard -> SLASH
-- On MODULE reduce production wildcard -> SLASH
-- On MODEL reduce production wildcard -> SLASH
-- On MINUS reduce production wildcard -> SLASH
-- On LTLT reduce production wildcard -> SLASH
-- On LTCOLON reduce production wildcard -> SLASH
-- On LT reduce production wildcard -> SLASH
-- On LSQUARE reduce production wildcard -> SLASH
-- On LPAR reduce production wildcard -> SLASH
-- On LOOP reduce production wildcard -> SLASH
-- On LONG reduce production wildcard -> SLASH
-- On LOGIC reduce production wildcard -> SLASH
-- On LET reduce production wildcard -> SLASH
-- On LEMMA reduce production wildcard -> SLASH
-- On LE reduce production wildcard -> SLASH
-- On LBRACE reduce production wildcard -> SLASH
-- On LAMBDA reduce production wildcard -> SLASH
-- On LABEL reduce production wildcard -> SLASH
-- On INVARIANT reduce production wildcard -> SLASH
-- On INTER reduce production wildcard -> SLASH
-- On INTEGER reduce production wildcard -> SLASH
-- On INT reduce production wildcard -> SLASH
-- On INITIALIZED reduce production wildcard -> SLASH
-- On INDUCTIVE reduce production wildcard -> SLASH
-- On INCLUDE reduce production wildcard -> SLASH
-- On IMPLIES reduce production wildcard -> SLASH
-- On IMPACT reduce production wildcard -> SLASH
-- On IFF reduce production wildcard -> SLASH
-- On IF reduce production wildcard -> SLASH
-- On IDENTIFIER reduce production wildcard -> SLASH
-- On HATHAT reduce production wildcard -> SLASH
-- On HAT reduce production wildcard -> SLASH
-- On GTGT reduce production wildcard -> SLASH
-- On GT reduce production wildcard -> SLASH
-- On GLOBAL reduce production wildcard -> SLASH
-- On GHOST reduce production wildcard -> SLASH
-- On GE reduce production wildcard -> SLASH
-- On FUNCTION reduce production wildcard -> SLASH
-- On FROM reduce production wildcard -> SLASH
-- On FRESH reduce production wildcard -> SLASH
-- On FREES reduce production wildcard -> SLASH
-- On FREEABLE reduce production wildcard -> SLASH
-- On FORALL reduce production wildcard -> SLASH
-- On FOR reduce production wildcard -> SLASH
-- On FLOAT reduce production wildcard -> SLASH
-- On FALSE reduce production wildcard -> SLASH
-- On EXT_LET reduce production wildcard -> SLASH
-- On EXT_AT reduce production wildcard -> SLASH
-- On EXITS reduce production wildcard -> SLASH
-- On EXISTS reduce production wildcard -> SLASH
-- On EQUAL reduce production wildcard -> SLASH
-- On EQ reduce production wildcard -> SLASH
-- On EOF reduce production wildcard -> SLASH
-- On ENUM reduce production wildcard -> SLASH
-- On ENSURES reduce production wildcard -> SLASH
-- On EMPTY reduce production wildcard -> SLASH
-- On ELSE reduce production wildcard -> SLASH
-- On DYNAMIC reduce production wildcard -> SLASH
-- On DOUBLE reduce production wildcard -> SLASH
-- On DOTDOTDOT reduce production wildcard -> SLASH
-- On DOTDOT reduce production wildcard -> SLASH
-- On DOT reduce production wildcard -> SLASH
-- On DOLLAR reduce production wildcard -> SLASH
-- On DISJOINT reduce production wildcard -> SLASH
-- On DECREASES reduce production wildcard -> SLASH
-- On DANGLING reduce production wildcard -> SLASH
-- On CUSTOM reduce production wildcard -> SLASH
-- On CONTRACT reduce production wildcard -> SLASH
-- On CONTINUES reduce production wildcard -> SLASH
-- On CONSTANT10 reduce production wildcard -> SLASH
-- On CONSTANT reduce production wildcard -> SLASH
-- On CONST reduce production wildcard -> SLASH
-- On COMPLETE reduce production wildcard -> SLASH
-- On COMMA reduce production wildcard -> SLASH
-- On COLONGT reduce production wildcard -> SLASH
-- On COLONCOLON reduce production wildcard -> SLASH
-- On COLON2 reduce production wildcard -> SLASH
-- On COLON reduce production wildcard -> SLASH
-- On CHAR reduce production wildcard -> SLASH
-- On CASE reduce production wildcard -> SLASH
-- On BSUNION reduce production wildcard -> SLASH
-- On BSTYPE reduce production wildcard -> SLASH
-- On BREAKS reduce production wildcard -> SLASH
-- On BOOLEAN reduce production wildcard -> SLASH
-- On BOOL reduce production wildcard -> SLASH
-- On BLOCK_LENGTH reduce production wildcard -> SLASH
-- On BIMPLIES reduce production wildcard -> SLASH
-- On BIFF reduce production wildcard -> SLASH
-- On BEHAVIORS reduce production wildcard -> SLASH
-- On BEHAVIOR reduce production wildcard -> SLASH
-- On BASE_ADDR reduce production wildcard -> SLASH
-- On AXIOMATIC reduce production wildcard -> SLASH
-- On AXIOM reduce production wildcard -> SLASH
-- On AUTOMATIC reduce production wildcard -> SLASH
-- On AT reduce production wildcard -> SLASH
-- On ASSUMES reduce production wildcard -> SLASH
-- On ASSIGNS reduce production wildcard -> SLASH
-- On ASSERT reduce production wildcard -> SLASH
-- On ARROW reduce production wildcard -> SLASH
-- On AND reduce production wildcard -> SLASH
-- On AMP reduce production wildcard -> SLASH
-- On ALLOCATION reduce production wildcard -> SLASH
-- On ALLOCATES reduce production wildcard -> SLASH
-- On ALLOCABLE reduce production wildcard -> SLASH

State 964:
## Known stack suffix:
## SEPARATED
## LR(1) items:
bs_keyword -> SEPARATED . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> SEPARATED
-- On WITH reduce production bs_keyword -> SEPARATED
-- On VOLATILE reduce production bs_keyword -> SEPARATED
-- On VOID reduce production bs_keyword -> SEPARATED
-- On VARIANT reduce production bs_keyword -> SEPARATED
-- On VALID_READ reduce production bs_keyword -> SEPARATED
-- On VALID_RANGE reduce production bs_keyword -> SEPARATED
-- On VALID_INDEX reduce production bs_keyword -> SEPARATED
-- On VALID reduce production bs_keyword -> SEPARATED
-- On UNSIGNED reduce production bs_keyword -> SEPARATED
-- On UNION reduce production bs_keyword -> SEPARATED
-- On UNALLOCATED reduce production bs_keyword -> SEPARATED
-- On TYPEOF reduce production bs_keyword -> SEPARATED
-- On TYPENAME reduce production bs_keyword -> SEPARATED
-- On TYPE reduce production bs_keyword -> SEPARATED
-- On TRUE reduce production bs_keyword -> SEPARATED
-- On TILDE reduce production bs_keyword -> SEPARATED
-- On TERMINATES reduce production bs_keyword -> SEPARATED
-- On STRUCT reduce production bs_keyword -> SEPARATED
-- On STRING_LITERAL reduce production bs_keyword -> SEPARATED
-- On STATIC reduce production bs_keyword -> SEPARATED
-- On STAR reduce production bs_keyword -> SEPARATED
-- On SLICE reduce production bs_keyword -> SEPARATED
-- On SLASH reduce production bs_keyword -> SEPARATED
-- On SIZEOF reduce production bs_keyword -> SEPARATED
-- On SIGNED reduce production bs_keyword -> SEPARATED
-- On SHORT reduce production bs_keyword -> SEPARATED
-- On SEPARATED reduce production bs_keyword -> SEPARATED
-- On SEMICOLON reduce production bs_keyword -> SEPARATED
-- On RSQUARE reduce production bs_keyword -> SEPARATED
-- On RPAR reduce production bs_keyword -> SEPARATED
-- On RETURNS reduce production bs_keyword -> SEPARATED
-- On RESULT reduce production bs_keyword -> SEPARATED
-- On REQUIRES reduce production bs_keyword -> SEPARATED
-- On REGISTER reduce production bs_keyword -> SEPARATED
-- On REAL reduce production bs_keyword -> SEPARATED
-- On READS reduce production bs_keyword -> SEPARATED
-- On RBRACE reduce production bs_keyword -> SEPARATED
-- On QUESTION reduce production bs_keyword -> SEPARATED
-- On PREDICATE reduce production bs_keyword -> SEPARATED
-- On PRAGMA reduce production bs_keyword -> SEPARATED
-- On PLUS reduce production bs_keyword -> SEPARATED
-- On PIPE reduce production bs_keyword -> SEPARATED
-- On PERCENT reduce production bs_keyword -> SEPARATED
-- On OR reduce production bs_keyword -> SEPARATED
-- On OLD reduce production bs_keyword -> SEPARATED
-- On OFFSET reduce production bs_keyword -> SEPARATED
-- On NULL reduce production bs_keyword -> SEPARATED
-- On NOTHING reduce production bs_keyword -> SEPARATED
-- On NOT reduce production bs_keyword -> SEPARATED
-- On NE reduce production bs_keyword -> SEPARATED
-- On MODULE reduce production bs_keyword -> SEPARATED
-- On MODEL reduce production bs_keyword -> SEPARATED
-- On MINUS reduce production bs_keyword -> SEPARATED
-- On LTLT reduce production bs_keyword -> SEPARATED
-- On LTCOLON reduce production bs_keyword -> SEPARATED
-- On LT reduce production bs_keyword -> SEPARATED
-- On LSQUARE reduce production bs_keyword -> SEPARATED
-- On LPAR reduce production bs_keyword -> SEPARATED
-- On LOOP reduce production bs_keyword -> SEPARATED
-- On LONG reduce production bs_keyword -> SEPARATED
-- On LOGIC reduce production bs_keyword -> SEPARATED
-- On LET reduce production bs_keyword -> SEPARATED
-- On LEMMA reduce production bs_keyword -> SEPARATED
-- On LE reduce production bs_keyword -> SEPARATED
-- On LBRACE reduce production bs_keyword -> SEPARATED
-- On LAMBDA reduce production bs_keyword -> SEPARATED
-- On LABEL reduce production bs_keyword -> SEPARATED
-- On INVARIANT reduce production bs_keyword -> SEPARATED
-- On INTER reduce production bs_keyword -> SEPARATED
-- On INTEGER reduce production bs_keyword -> SEPARATED
-- On INT reduce production bs_keyword -> SEPARATED
-- On INITIALIZED reduce production bs_keyword -> SEPARATED
-- On INDUCTIVE reduce production bs_keyword -> SEPARATED
-- On INCLUDE reduce production bs_keyword -> SEPARATED
-- On IMPLIES reduce production bs_keyword -> SEPARATED
-- On IMPACT reduce production bs_keyword -> SEPARATED
-- On IFF reduce production bs_keyword -> SEPARATED
-- On IF reduce production bs_keyword -> SEPARATED
-- On IDENTIFIER reduce production bs_keyword -> SEPARATED
-- On HATHAT reduce production bs_keyword -> SEPARATED
-- On HAT reduce production bs_keyword -> SEPARATED
-- On GTGT reduce production bs_keyword -> SEPARATED
-- On GT reduce production bs_keyword -> SEPARATED
-- On GLOBAL reduce production bs_keyword -> SEPARATED
-- On GHOST reduce production bs_keyword -> SEPARATED
-- On GE reduce production bs_keyword -> SEPARATED
-- On FUNCTION reduce production bs_keyword -> SEPARATED
-- On FROM reduce production bs_keyword -> SEPARATED
-- On FRESH reduce production bs_keyword -> SEPARATED
-- On FREES reduce production bs_keyword -> SEPARATED
-- On FREEABLE reduce production bs_keyword -> SEPARATED
-- On FORALL reduce production bs_keyword -> SEPARATED
-- On FOR reduce production bs_keyword -> SEPARATED
-- On FLOAT reduce production bs_keyword -> SEPARATED
-- On FALSE reduce production bs_keyword -> SEPARATED
-- On EXT_LET reduce production bs_keyword -> SEPARATED
-- On EXT_AT reduce production bs_keyword -> SEPARATED
-- On EXITS reduce production bs_keyword -> SEPARATED
-- On EXISTS reduce production bs_keyword -> SEPARATED
-- On EQUAL reduce production bs_keyword -> SEPARATED
-- On EQ reduce production bs_keyword -> SEPARATED
-- On EOF reduce production bs_keyword -> SEPARATED
-- On ENUM reduce production bs_keyword -> SEPARATED
-- On ENSURES reduce production bs_keyword -> SEPARATED
-- On EMPTY reduce production bs_keyword -> SEPARATED
-- On ELSE reduce production bs_keyword -> SEPARATED
-- On DYNAMIC reduce production bs_keyword -> SEPARATED
-- On DOUBLE reduce production bs_keyword -> SEPARATED
-- On DOTDOTDOT reduce production bs_keyword -> SEPARATED
-- On DOTDOT reduce production bs_keyword -> SEPARATED
-- On DOT reduce production bs_keyword -> SEPARATED
-- On DOLLAR reduce production bs_keyword -> SEPARATED
-- On DISJOINT reduce production bs_keyword -> SEPARATED
-- On DECREASES reduce production bs_keyword -> SEPARATED
-- On DANGLING reduce production bs_keyword -> SEPARATED
-- On CUSTOM reduce production bs_keyword -> SEPARATED
-- On CONTRACT reduce production bs_keyword -> SEPARATED
-- On CONTINUES reduce production bs_keyword -> SEPARATED
-- On CONSTANT10 reduce production bs_keyword -> SEPARATED
-- On CONSTANT reduce production bs_keyword -> SEPARATED
-- On CONST reduce production bs_keyword -> SEPARATED
-- On COMPLETE reduce production bs_keyword -> SEPARATED
-- On COMMA reduce production bs_keyword -> SEPARATED
-- On COLONGT reduce production bs_keyword -> SEPARATED
-- On COLONCOLON reduce production bs_keyword -> SEPARATED
-- On COLON2 reduce production bs_keyword -> SEPARATED
-- On COLON reduce production bs_keyword -> SEPARATED
-- On CHAR reduce production bs_keyword -> SEPARATED
-- On CASE reduce production bs_keyword -> SEPARATED
-- On BSUNION reduce production bs_keyword -> SEPARATED
-- On BSTYPE reduce production bs_keyword -> SEPARATED
-- On BREAKS reduce production bs_keyword -> SEPARATED
-- On BOOLEAN reduce production bs_keyword -> SEPARATED
-- On BOOL reduce production bs_keyword -> SEPARATED
-- On BLOCK_LENGTH reduce production bs_keyword -> SEPARATED
-- On BIMPLIES reduce production bs_keyword -> SEPARATED
-- On BIFF reduce production bs_keyword -> SEPARATED
-- On BEHAVIORS reduce production bs_keyword -> SEPARATED
-- On BEHAVIOR reduce production bs_keyword -> SEPARATED
-- On BASE_ADDR reduce production bs_keyword -> SEPARATED
-- On AXIOMATIC reduce production bs_keyword -> SEPARATED
-- On AXIOM reduce production bs_keyword -> SEPARATED
-- On AUTOMATIC reduce production bs_keyword -> SEPARATED
-- On AT reduce production bs_keyword -> SEPARATED
-- On ASSUMES reduce production bs_keyword -> SEPARATED
-- On ASSIGNS reduce production bs_keyword -> SEPARATED
-- On ASSERT reduce production bs_keyword -> SEPARATED
-- On ARROW reduce production bs_keyword -> SEPARATED
-- On AND reduce production bs_keyword -> SEPARATED
-- On AMP reduce production bs_keyword -> SEPARATED
-- On ALLOCATION reduce production bs_keyword -> SEPARATED
-- On ALLOCATES reduce production bs_keyword -> SEPARATED
-- On ALLOCABLE reduce production bs_keyword -> SEPARATED

State 965:
## Known stack suffix:
## SEMICOLON
## LR(1) items:
wildcard -> SEMICOLON . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> SEMICOLON
-- On WITH reduce production wildcard -> SEMICOLON
-- On VOLATILE reduce production wildcard -> SEMICOLON
-- On VOID reduce production wildcard -> SEMICOLON
-- On VARIANT reduce production wildcard -> SEMICOLON
-- On VALID_READ reduce production wildcard -> SEMICOLON
-- On VALID_RANGE reduce production wildcard -> SEMICOLON
-- On VALID_INDEX reduce production wildcard -> SEMICOLON
-- On VALID reduce production wildcard -> SEMICOLON
-- On UNSIGNED reduce production wildcard -> SEMICOLON
-- On UNION reduce production wildcard -> SEMICOLON
-- On UNALLOCATED reduce production wildcard -> SEMICOLON
-- On TYPEOF reduce production wildcard -> SEMICOLON
-- On TYPENAME reduce production wildcard -> SEMICOLON
-- On TYPE reduce production wildcard -> SEMICOLON
-- On TRUE reduce production wildcard -> SEMICOLON
-- On TILDE reduce production wildcard -> SEMICOLON
-- On TERMINATES reduce production wildcard -> SEMICOLON
-- On STRUCT reduce production wildcard -> SEMICOLON
-- On STRING_LITERAL reduce production wildcard -> SEMICOLON
-- On STATIC reduce production wildcard -> SEMICOLON
-- On STAR reduce production wildcard -> SEMICOLON
-- On SLICE reduce production wildcard -> SEMICOLON
-- On SLASH reduce production wildcard -> SEMICOLON
-- On SIZEOF reduce production wildcard -> SEMICOLON
-- On SIGNED reduce production wildcard -> SEMICOLON
-- On SHORT reduce production wildcard -> SEMICOLON
-- On SEPARATED reduce production wildcard -> SEMICOLON
-- On SEMICOLON reduce production wildcard -> SEMICOLON
-- On RSQUARE reduce production wildcard -> SEMICOLON
-- On RPAR reduce production wildcard -> SEMICOLON
-- On RETURNS reduce production wildcard -> SEMICOLON
-- On RESULT reduce production wildcard -> SEMICOLON
-- On REQUIRES reduce production wildcard -> SEMICOLON
-- On REGISTER reduce production wildcard -> SEMICOLON
-- On REAL reduce production wildcard -> SEMICOLON
-- On READS reduce production wildcard -> SEMICOLON
-- On RBRACE reduce production wildcard -> SEMICOLON
-- On QUESTION reduce production wildcard -> SEMICOLON
-- On PREDICATE reduce production wildcard -> SEMICOLON
-- On PRAGMA reduce production wildcard -> SEMICOLON
-- On PLUS reduce production wildcard -> SEMICOLON
-- On PIPE reduce production wildcard -> SEMICOLON
-- On PERCENT reduce production wildcard -> SEMICOLON
-- On OR reduce production wildcard -> SEMICOLON
-- On OLD reduce production wildcard -> SEMICOLON
-- On OFFSET reduce production wildcard -> SEMICOLON
-- On NULL reduce production wildcard -> SEMICOLON
-- On NOTHING reduce production wildcard -> SEMICOLON
-- On NOT reduce production wildcard -> SEMICOLON
-- On NE reduce production wildcard -> SEMICOLON
-- On MODULE reduce production wildcard -> SEMICOLON
-- On MODEL reduce production wildcard -> SEMICOLON
-- On MINUS reduce production wildcard -> SEMICOLON
-- On LTLT reduce production wildcard -> SEMICOLON
-- On LTCOLON reduce production wildcard -> SEMICOLON
-- On LT reduce production wildcard -> SEMICOLON
-- On LSQUARE reduce production wildcard -> SEMICOLON
-- On LPAR reduce production wildcard -> SEMICOLON
-- On LOOP reduce production wildcard -> SEMICOLON
-- On LONG reduce production wildcard -> SEMICOLON
-- On LOGIC reduce production wildcard -> SEMICOLON
-- On LET reduce production wildcard -> SEMICOLON
-- On LEMMA reduce production wildcard -> SEMICOLON
-- On LE reduce production wildcard -> SEMICOLON
-- On LBRACE reduce production wildcard -> SEMICOLON
-- On LAMBDA reduce production wildcard -> SEMICOLON
-- On LABEL reduce production wildcard -> SEMICOLON
-- On INVARIANT reduce production wildcard -> SEMICOLON
-- On INTER reduce production wildcard -> SEMICOLON
-- On INTEGER reduce production wildcard -> SEMICOLON
-- On INT reduce production wildcard -> SEMICOLON
-- On INITIALIZED reduce production wildcard -> SEMICOLON
-- On INDUCTIVE reduce production wildcard -> SEMICOLON
-- On INCLUDE reduce production wildcard -> SEMICOLON
-- On IMPLIES reduce production wildcard -> SEMICOLON
-- On IMPACT reduce production wildcard -> SEMICOLON
-- On IFF reduce production wildcard -> SEMICOLON
-- On IF reduce production wildcard -> SEMICOLON
-- On IDENTIFIER reduce production wildcard -> SEMICOLON
-- On HATHAT reduce production wildcard -> SEMICOLON
-- On HAT reduce production wildcard -> SEMICOLON
-- On GTGT reduce production wildcard -> SEMICOLON
-- On GT reduce production wildcard -> SEMICOLON
-- On GLOBAL reduce production wildcard -> SEMICOLON
-- On GHOST reduce production wildcard -> SEMICOLON
-- On GE reduce production wildcard -> SEMICOLON
-- On FUNCTION reduce production wildcard -> SEMICOLON
-- On FROM reduce production wildcard -> SEMICOLON
-- On FRESH reduce production wildcard -> SEMICOLON
-- On FREES reduce production wildcard -> SEMICOLON
-- On FREEABLE reduce production wildcard -> SEMICOLON
-- On FORALL reduce production wildcard -> SEMICOLON
-- On FOR reduce production wildcard -> SEMICOLON
-- On FLOAT reduce production wildcard -> SEMICOLON
-- On FALSE reduce production wildcard -> SEMICOLON
-- On EXT_LET reduce production wildcard -> SEMICOLON
-- On EXT_AT reduce production wildcard -> SEMICOLON
-- On EXITS reduce production wildcard -> SEMICOLON
-- On EXISTS reduce production wildcard -> SEMICOLON
-- On EQUAL reduce production wildcard -> SEMICOLON
-- On EQ reduce production wildcard -> SEMICOLON
-- On EOF reduce production wildcard -> SEMICOLON
-- On ENUM reduce production wildcard -> SEMICOLON
-- On ENSURES reduce production wildcard -> SEMICOLON
-- On EMPTY reduce production wildcard -> SEMICOLON
-- On ELSE reduce production wildcard -> SEMICOLON
-- On DYNAMIC reduce production wildcard -> SEMICOLON
-- On DOUBLE reduce production wildcard -> SEMICOLON
-- On DOTDOTDOT reduce production wildcard -> SEMICOLON
-- On DOTDOT reduce production wildcard -> SEMICOLON
-- On DOT reduce production wildcard -> SEMICOLON
-- On DOLLAR reduce production wildcard -> SEMICOLON
-- On DISJOINT reduce production wildcard -> SEMICOLON
-- On DECREASES reduce production wildcard -> SEMICOLON
-- On DANGLING reduce production wildcard -> SEMICOLON
-- On CUSTOM reduce production wildcard -> SEMICOLON
-- On CONTRACT reduce production wildcard -> SEMICOLON
-- On CONTINUES reduce production wildcard -> SEMICOLON
-- On CONSTANT10 reduce production wildcard -> SEMICOLON
-- On CONSTANT reduce production wildcard -> SEMICOLON
-- On CONST reduce production wildcard -> SEMICOLON
-- On COMPLETE reduce production wildcard -> SEMICOLON
-- On COMMA reduce production wildcard -> SEMICOLON
-- On COLONGT reduce production wildcard -> SEMICOLON
-- On COLONCOLON reduce production wildcard -> SEMICOLON
-- On COLON2 reduce production wildcard -> SEMICOLON
-- On COLON reduce production wildcard -> SEMICOLON
-- On CHAR reduce production wildcard -> SEMICOLON
-- On CASE reduce production wildcard -> SEMICOLON
-- On BSUNION reduce production wildcard -> SEMICOLON
-- On BSTYPE reduce production wildcard -> SEMICOLON
-- On BREAKS reduce production wildcard -> SEMICOLON
-- On BOOLEAN reduce production wildcard -> SEMICOLON
-- On BOOL reduce production wildcard -> SEMICOLON
-- On BLOCK_LENGTH reduce production wildcard -> SEMICOLON
-- On BIMPLIES reduce production wildcard -> SEMICOLON
-- On BIFF reduce production wildcard -> SEMICOLON
-- On BEHAVIORS reduce production wildcard -> SEMICOLON
-- On BEHAVIOR reduce production wildcard -> SEMICOLON
-- On BASE_ADDR reduce production wildcard -> SEMICOLON
-- On AXIOMATIC reduce production wildcard -> SEMICOLON
-- On AXIOM reduce production wildcard -> SEMICOLON
-- On AUTOMATIC reduce production wildcard -> SEMICOLON
-- On AT reduce production wildcard -> SEMICOLON
-- On ASSUMES reduce production wildcard -> SEMICOLON
-- On ASSIGNS reduce production wildcard -> SEMICOLON
-- On ASSERT reduce production wildcard -> SEMICOLON
-- On ARROW reduce production wildcard -> SEMICOLON
-- On AND reduce production wildcard -> SEMICOLON
-- On AMP reduce production wildcard -> SEMICOLON
-- On ALLOCATION reduce production wildcard -> SEMICOLON
-- On ALLOCATES reduce production wildcard -> SEMICOLON
-- On ALLOCABLE reduce production wildcard -> SEMICOLON

State 966:
## Known stack suffix:
## RSQUARE
## LR(1) items:
wildcard -> RSQUARE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> RSQUARE
-- On WITH reduce production wildcard -> RSQUARE
-- On VOLATILE reduce production wildcard -> RSQUARE
-- On VOID reduce production wildcard -> RSQUARE
-- On VARIANT reduce production wildcard -> RSQUARE
-- On VALID_READ reduce production wildcard -> RSQUARE
-- On VALID_RANGE reduce production wildcard -> RSQUARE
-- On VALID_INDEX reduce production wildcard -> RSQUARE
-- On VALID reduce production wildcard -> RSQUARE
-- On UNSIGNED reduce production wildcard -> RSQUARE
-- On UNION reduce production wildcard -> RSQUARE
-- On UNALLOCATED reduce production wildcard -> RSQUARE
-- On TYPEOF reduce production wildcard -> RSQUARE
-- On TYPENAME reduce production wildcard -> RSQUARE
-- On TYPE reduce production wildcard -> RSQUARE
-- On TRUE reduce production wildcard -> RSQUARE
-- On TILDE reduce production wildcard -> RSQUARE
-- On TERMINATES reduce production wildcard -> RSQUARE
-- On STRUCT reduce production wildcard -> RSQUARE
-- On STRING_LITERAL reduce production wildcard -> RSQUARE
-- On STATIC reduce production wildcard -> RSQUARE
-- On STAR reduce production wildcard -> RSQUARE
-- On SLICE reduce production wildcard -> RSQUARE
-- On SLASH reduce production wildcard -> RSQUARE
-- On SIZEOF reduce production wildcard -> RSQUARE
-- On SIGNED reduce production wildcard -> RSQUARE
-- On SHORT reduce production wildcard -> RSQUARE
-- On SEPARATED reduce production wildcard -> RSQUARE
-- On SEMICOLON reduce production wildcard -> RSQUARE
-- On RSQUARE reduce production wildcard -> RSQUARE
-- On RPAR reduce production wildcard -> RSQUARE
-- On RETURNS reduce production wildcard -> RSQUARE
-- On RESULT reduce production wildcard -> RSQUARE
-- On REQUIRES reduce production wildcard -> RSQUARE
-- On REGISTER reduce production wildcard -> RSQUARE
-- On REAL reduce production wildcard -> RSQUARE
-- On READS reduce production wildcard -> RSQUARE
-- On RBRACE reduce production wildcard -> RSQUARE
-- On QUESTION reduce production wildcard -> RSQUARE
-- On PREDICATE reduce production wildcard -> RSQUARE
-- On PRAGMA reduce production wildcard -> RSQUARE
-- On PLUS reduce production wildcard -> RSQUARE
-- On PIPE reduce production wildcard -> RSQUARE
-- On PERCENT reduce production wildcard -> RSQUARE
-- On OR reduce production wildcard -> RSQUARE
-- On OLD reduce production wildcard -> RSQUARE
-- On OFFSET reduce production wildcard -> RSQUARE
-- On NULL reduce production wildcard -> RSQUARE
-- On NOTHING reduce production wildcard -> RSQUARE
-- On NOT reduce production wildcard -> RSQUARE
-- On NE reduce production wildcard -> RSQUARE
-- On MODULE reduce production wildcard -> RSQUARE
-- On MODEL reduce production wildcard -> RSQUARE
-- On MINUS reduce production wildcard -> RSQUARE
-- On LTLT reduce production wildcard -> RSQUARE
-- On LTCOLON reduce production wildcard -> RSQUARE
-- On LT reduce production wildcard -> RSQUARE
-- On LSQUARE reduce production wildcard -> RSQUARE
-- On LPAR reduce production wildcard -> RSQUARE
-- On LOOP reduce production wildcard -> RSQUARE
-- On LONG reduce production wildcard -> RSQUARE
-- On LOGIC reduce production wildcard -> RSQUARE
-- On LET reduce production wildcard -> RSQUARE
-- On LEMMA reduce production wildcard -> RSQUARE
-- On LE reduce production wildcard -> RSQUARE
-- On LBRACE reduce production wildcard -> RSQUARE
-- On LAMBDA reduce production wildcard -> RSQUARE
-- On LABEL reduce production wildcard -> RSQUARE
-- On INVARIANT reduce production wildcard -> RSQUARE
-- On INTER reduce production wildcard -> RSQUARE
-- On INTEGER reduce production wildcard -> RSQUARE
-- On INT reduce production wildcard -> RSQUARE
-- On INITIALIZED reduce production wildcard -> RSQUARE
-- On INDUCTIVE reduce production wildcard -> RSQUARE
-- On INCLUDE reduce production wildcard -> RSQUARE
-- On IMPLIES reduce production wildcard -> RSQUARE
-- On IMPACT reduce production wildcard -> RSQUARE
-- On IFF reduce production wildcard -> RSQUARE
-- On IF reduce production wildcard -> RSQUARE
-- On IDENTIFIER reduce production wildcard -> RSQUARE
-- On HATHAT reduce production wildcard -> RSQUARE
-- On HAT reduce production wildcard -> RSQUARE
-- On GTGT reduce production wildcard -> RSQUARE
-- On GT reduce production wildcard -> RSQUARE
-- On GLOBAL reduce production wildcard -> RSQUARE
-- On GHOST reduce production wildcard -> RSQUARE
-- On GE reduce production wildcard -> RSQUARE
-- On FUNCTION reduce production wildcard -> RSQUARE
-- On FROM reduce production wildcard -> RSQUARE
-- On FRESH reduce production wildcard -> RSQUARE
-- On FREES reduce production wildcard -> RSQUARE
-- On FREEABLE reduce production wildcard -> RSQUARE
-- On FORALL reduce production wildcard -> RSQUARE
-- On FOR reduce production wildcard -> RSQUARE
-- On FLOAT reduce production wildcard -> RSQUARE
-- On FALSE reduce production wildcard -> RSQUARE
-- On EXT_LET reduce production wildcard -> RSQUARE
-- On EXT_AT reduce production wildcard -> RSQUARE
-- On EXITS reduce production wildcard -> RSQUARE
-- On EXISTS reduce production wildcard -> RSQUARE
-- On EQUAL reduce production wildcard -> RSQUARE
-- On EQ reduce production wildcard -> RSQUARE
-- On EOF reduce production wildcard -> RSQUARE
-- On ENUM reduce production wildcard -> RSQUARE
-- On ENSURES reduce production wildcard -> RSQUARE
-- On EMPTY reduce production wildcard -> RSQUARE
-- On ELSE reduce production wildcard -> RSQUARE
-- On DYNAMIC reduce production wildcard -> RSQUARE
-- On DOUBLE reduce production wildcard -> RSQUARE
-- On DOTDOTDOT reduce production wildcard -> RSQUARE
-- On DOTDOT reduce production wildcard -> RSQUARE
-- On DOT reduce production wildcard -> RSQUARE
-- On DOLLAR reduce production wildcard -> RSQUARE
-- On DISJOINT reduce production wildcard -> RSQUARE
-- On DECREASES reduce production wildcard -> RSQUARE
-- On DANGLING reduce production wildcard -> RSQUARE
-- On CUSTOM reduce production wildcard -> RSQUARE
-- On CONTRACT reduce production wildcard -> RSQUARE
-- On CONTINUES reduce production wildcard -> RSQUARE
-- On CONSTANT10 reduce production wildcard -> RSQUARE
-- On CONSTANT reduce production wildcard -> RSQUARE
-- On CONST reduce production wildcard -> RSQUARE
-- On COMPLETE reduce production wildcard -> RSQUARE
-- On COMMA reduce production wildcard -> RSQUARE
-- On COLONGT reduce production wildcard -> RSQUARE
-- On COLONCOLON reduce production wildcard -> RSQUARE
-- On COLON2 reduce production wildcard -> RSQUARE
-- On COLON reduce production wildcard -> RSQUARE
-- On CHAR reduce production wildcard -> RSQUARE
-- On CASE reduce production wildcard -> RSQUARE
-- On BSUNION reduce production wildcard -> RSQUARE
-- On BSTYPE reduce production wildcard -> RSQUARE
-- On BREAKS reduce production wildcard -> RSQUARE
-- On BOOLEAN reduce production wildcard -> RSQUARE
-- On BOOL reduce production wildcard -> RSQUARE
-- On BLOCK_LENGTH reduce production wildcard -> RSQUARE
-- On BIMPLIES reduce production wildcard -> RSQUARE
-- On BIFF reduce production wildcard -> RSQUARE
-- On BEHAVIORS reduce production wildcard -> RSQUARE
-- On BEHAVIOR reduce production wildcard -> RSQUARE
-- On BASE_ADDR reduce production wildcard -> RSQUARE
-- On AXIOMATIC reduce production wildcard -> RSQUARE
-- On AXIOM reduce production wildcard -> RSQUARE
-- On AUTOMATIC reduce production wildcard -> RSQUARE
-- On AT reduce production wildcard -> RSQUARE
-- On ASSUMES reduce production wildcard -> RSQUARE
-- On ASSIGNS reduce production wildcard -> RSQUARE
-- On ASSERT reduce production wildcard -> RSQUARE
-- On ARROW reduce production wildcard -> RSQUARE
-- On AND reduce production wildcard -> RSQUARE
-- On AMP reduce production wildcard -> RSQUARE
-- On ALLOCATION reduce production wildcard -> RSQUARE
-- On ALLOCATES reduce production wildcard -> RSQUARE
-- On ALLOCABLE reduce production wildcard -> RSQUARE

State 967:
## Known stack suffix:
## RPAR
## LR(1) items:
wildcard -> RPAR . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> RPAR
-- On WITH reduce production wildcard -> RPAR
-- On VOLATILE reduce production wildcard -> RPAR
-- On VOID reduce production wildcard -> RPAR
-- On VARIANT reduce production wildcard -> RPAR
-- On VALID_READ reduce production wildcard -> RPAR
-- On VALID_RANGE reduce production wildcard -> RPAR
-- On VALID_INDEX reduce production wildcard -> RPAR
-- On VALID reduce production wildcard -> RPAR
-- On UNSIGNED reduce production wildcard -> RPAR
-- On UNION reduce production wildcard -> RPAR
-- On UNALLOCATED reduce production wildcard -> RPAR
-- On TYPEOF reduce production wildcard -> RPAR
-- On TYPENAME reduce production wildcard -> RPAR
-- On TYPE reduce production wildcard -> RPAR
-- On TRUE reduce production wildcard -> RPAR
-- On TILDE reduce production wildcard -> RPAR
-- On TERMINATES reduce production wildcard -> RPAR
-- On STRUCT reduce production wildcard -> RPAR
-- On STRING_LITERAL reduce production wildcard -> RPAR
-- On STATIC reduce production wildcard -> RPAR
-- On STAR reduce production wildcard -> RPAR
-- On SLICE reduce production wildcard -> RPAR
-- On SLASH reduce production wildcard -> RPAR
-- On SIZEOF reduce production wildcard -> RPAR
-- On SIGNED reduce production wildcard -> RPAR
-- On SHORT reduce production wildcard -> RPAR
-- On SEPARATED reduce production wildcard -> RPAR
-- On SEMICOLON reduce production wildcard -> RPAR
-- On RSQUARE reduce production wildcard -> RPAR
-- On RPAR reduce production wildcard -> RPAR
-- On RETURNS reduce production wildcard -> RPAR
-- On RESULT reduce production wildcard -> RPAR
-- On REQUIRES reduce production wildcard -> RPAR
-- On REGISTER reduce production wildcard -> RPAR
-- On REAL reduce production wildcard -> RPAR
-- On READS reduce production wildcard -> RPAR
-- On RBRACE reduce production wildcard -> RPAR
-- On QUESTION reduce production wildcard -> RPAR
-- On PREDICATE reduce production wildcard -> RPAR
-- On PRAGMA reduce production wildcard -> RPAR
-- On PLUS reduce production wildcard -> RPAR
-- On PIPE reduce production wildcard -> RPAR
-- On PERCENT reduce production wildcard -> RPAR
-- On OR reduce production wildcard -> RPAR
-- On OLD reduce production wildcard -> RPAR
-- On OFFSET reduce production wildcard -> RPAR
-- On NULL reduce production wildcard -> RPAR
-- On NOTHING reduce production wildcard -> RPAR
-- On NOT reduce production wildcard -> RPAR
-- On NE reduce production wildcard -> RPAR
-- On MODULE reduce production wildcard -> RPAR
-- On MODEL reduce production wildcard -> RPAR
-- On MINUS reduce production wildcard -> RPAR
-- On LTLT reduce production wildcard -> RPAR
-- On LTCOLON reduce production wildcard -> RPAR
-- On LT reduce production wildcard -> RPAR
-- On LSQUARE reduce production wildcard -> RPAR
-- On LPAR reduce production wildcard -> RPAR
-- On LOOP reduce production wildcard -> RPAR
-- On LONG reduce production wildcard -> RPAR
-- On LOGIC reduce production wildcard -> RPAR
-- On LET reduce production wildcard -> RPAR
-- On LEMMA reduce production wildcard -> RPAR
-- On LE reduce production wildcard -> RPAR
-- On LBRACE reduce production wildcard -> RPAR
-- On LAMBDA reduce production wildcard -> RPAR
-- On LABEL reduce production wildcard -> RPAR
-- On INVARIANT reduce production wildcard -> RPAR
-- On INTER reduce production wildcard -> RPAR
-- On INTEGER reduce production wildcard -> RPAR
-- On INT reduce production wildcard -> RPAR
-- On INITIALIZED reduce production wildcard -> RPAR
-- On INDUCTIVE reduce production wildcard -> RPAR
-- On INCLUDE reduce production wildcard -> RPAR
-- On IMPLIES reduce production wildcard -> RPAR
-- On IMPACT reduce production wildcard -> RPAR
-- On IFF reduce production wildcard -> RPAR
-- On IF reduce production wildcard -> RPAR
-- On IDENTIFIER reduce production wildcard -> RPAR
-- On HATHAT reduce production wildcard -> RPAR
-- On HAT reduce production wildcard -> RPAR
-- On GTGT reduce production wildcard -> RPAR
-- On GT reduce production wildcard -> RPAR
-- On GLOBAL reduce production wildcard -> RPAR
-- On GHOST reduce production wildcard -> RPAR
-- On GE reduce production wildcard -> RPAR
-- On FUNCTION reduce production wildcard -> RPAR
-- On FROM reduce production wildcard -> RPAR
-- On FRESH reduce production wildcard -> RPAR
-- On FREES reduce production wildcard -> RPAR
-- On FREEABLE reduce production wildcard -> RPAR
-- On FORALL reduce production wildcard -> RPAR
-- On FOR reduce production wildcard -> RPAR
-- On FLOAT reduce production wildcard -> RPAR
-- On FALSE reduce production wildcard -> RPAR
-- On EXT_LET reduce production wildcard -> RPAR
-- On EXT_AT reduce production wildcard -> RPAR
-- On EXITS reduce production wildcard -> RPAR
-- On EXISTS reduce production wildcard -> RPAR
-- On EQUAL reduce production wildcard -> RPAR
-- On EQ reduce production wildcard -> RPAR
-- On EOF reduce production wildcard -> RPAR
-- On ENUM reduce production wildcard -> RPAR
-- On ENSURES reduce production wildcard -> RPAR
-- On EMPTY reduce production wildcard -> RPAR
-- On ELSE reduce production wildcard -> RPAR
-- On DYNAMIC reduce production wildcard -> RPAR
-- On DOUBLE reduce production wildcard -> RPAR
-- On DOTDOTDOT reduce production wildcard -> RPAR
-- On DOTDOT reduce production wildcard -> RPAR
-- On DOT reduce production wildcard -> RPAR
-- On DOLLAR reduce production wildcard -> RPAR
-- On DISJOINT reduce production wildcard -> RPAR
-- On DECREASES reduce production wildcard -> RPAR
-- On DANGLING reduce production wildcard -> RPAR
-- On CUSTOM reduce production wildcard -> RPAR
-- On CONTRACT reduce production wildcard -> RPAR
-- On CONTINUES reduce production wildcard -> RPAR
-- On CONSTANT10 reduce production wildcard -> RPAR
-- On CONSTANT reduce production wildcard -> RPAR
-- On CONST reduce production wildcard -> RPAR
-- On COMPLETE reduce production wildcard -> RPAR
-- On COMMA reduce production wildcard -> RPAR
-- On COLONGT reduce production wildcard -> RPAR
-- On COLONCOLON reduce production wildcard -> RPAR
-- On COLON2 reduce production wildcard -> RPAR
-- On COLON reduce production wildcard -> RPAR
-- On CHAR reduce production wildcard -> RPAR
-- On CASE reduce production wildcard -> RPAR
-- On BSUNION reduce production wildcard -> RPAR
-- On BSTYPE reduce production wildcard -> RPAR
-- On BREAKS reduce production wildcard -> RPAR
-- On BOOLEAN reduce production wildcard -> RPAR
-- On BOOL reduce production wildcard -> RPAR
-- On BLOCK_LENGTH reduce production wildcard -> RPAR
-- On BIMPLIES reduce production wildcard -> RPAR
-- On BIFF reduce production wildcard -> RPAR
-- On BEHAVIORS reduce production wildcard -> RPAR
-- On BEHAVIOR reduce production wildcard -> RPAR
-- On BASE_ADDR reduce production wildcard -> RPAR
-- On AXIOMATIC reduce production wildcard -> RPAR
-- On AXIOM reduce production wildcard -> RPAR
-- On AUTOMATIC reduce production wildcard -> RPAR
-- On AT reduce production wildcard -> RPAR
-- On ASSUMES reduce production wildcard -> RPAR
-- On ASSIGNS reduce production wildcard -> RPAR
-- On ASSERT reduce production wildcard -> RPAR
-- On ARROW reduce production wildcard -> RPAR
-- On AND reduce production wildcard -> RPAR
-- On AMP reduce production wildcard -> RPAR
-- On ALLOCATION reduce production wildcard -> RPAR
-- On ALLOCATES reduce production wildcard -> RPAR
-- On ALLOCABLE reduce production wildcard -> RPAR

State 968:
## Known stack suffix:
## RESULT
## LR(1) items:
bs_keyword -> RESULT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> RESULT
-- On WITH reduce production bs_keyword -> RESULT
-- On VOLATILE reduce production bs_keyword -> RESULT
-- On VOID reduce production bs_keyword -> RESULT
-- On VARIANT reduce production bs_keyword -> RESULT
-- On VALID_READ reduce production bs_keyword -> RESULT
-- On VALID_RANGE reduce production bs_keyword -> RESULT
-- On VALID_INDEX reduce production bs_keyword -> RESULT
-- On VALID reduce production bs_keyword -> RESULT
-- On UNSIGNED reduce production bs_keyword -> RESULT
-- On UNION reduce production bs_keyword -> RESULT
-- On UNALLOCATED reduce production bs_keyword -> RESULT
-- On TYPEOF reduce production bs_keyword -> RESULT
-- On TYPENAME reduce production bs_keyword -> RESULT
-- On TYPE reduce production bs_keyword -> RESULT
-- On TRUE reduce production bs_keyword -> RESULT
-- On TILDE reduce production bs_keyword -> RESULT
-- On TERMINATES reduce production bs_keyword -> RESULT
-- On STRUCT reduce production bs_keyword -> RESULT
-- On STRING_LITERAL reduce production bs_keyword -> RESULT
-- On STATIC reduce production bs_keyword -> RESULT
-- On STAR reduce production bs_keyword -> RESULT
-- On SLICE reduce production bs_keyword -> RESULT
-- On SLASH reduce production bs_keyword -> RESULT
-- On SIZEOF reduce production bs_keyword -> RESULT
-- On SIGNED reduce production bs_keyword -> RESULT
-- On SHORT reduce production bs_keyword -> RESULT
-- On SEPARATED reduce production bs_keyword -> RESULT
-- On SEMICOLON reduce production bs_keyword -> RESULT
-- On RSQUARE reduce production bs_keyword -> RESULT
-- On RPAR reduce production bs_keyword -> RESULT
-- On RETURNS reduce production bs_keyword -> RESULT
-- On RESULT reduce production bs_keyword -> RESULT
-- On REQUIRES reduce production bs_keyword -> RESULT
-- On REGISTER reduce production bs_keyword -> RESULT
-- On REAL reduce production bs_keyword -> RESULT
-- On READS reduce production bs_keyword -> RESULT
-- On RBRACE reduce production bs_keyword -> RESULT
-- On QUESTION reduce production bs_keyword -> RESULT
-- On PREDICATE reduce production bs_keyword -> RESULT
-- On PRAGMA reduce production bs_keyword -> RESULT
-- On PLUS reduce production bs_keyword -> RESULT
-- On PIPE reduce production bs_keyword -> RESULT
-- On PERCENT reduce production bs_keyword -> RESULT
-- On OR reduce production bs_keyword -> RESULT
-- On OLD reduce production bs_keyword -> RESULT
-- On OFFSET reduce production bs_keyword -> RESULT
-- On NULL reduce production bs_keyword -> RESULT
-- On NOTHING reduce production bs_keyword -> RESULT
-- On NOT reduce production bs_keyword -> RESULT
-- On NE reduce production bs_keyword -> RESULT
-- On MODULE reduce production bs_keyword -> RESULT
-- On MODEL reduce production bs_keyword -> RESULT
-- On MINUS reduce production bs_keyword -> RESULT
-- On LTLT reduce production bs_keyword -> RESULT
-- On LTCOLON reduce production bs_keyword -> RESULT
-- On LT reduce production bs_keyword -> RESULT
-- On LSQUARE reduce production bs_keyword -> RESULT
-- On LPAR reduce production bs_keyword -> RESULT
-- On LOOP reduce production bs_keyword -> RESULT
-- On LONG reduce production bs_keyword -> RESULT
-- On LOGIC reduce production bs_keyword -> RESULT
-- On LET reduce production bs_keyword -> RESULT
-- On LEMMA reduce production bs_keyword -> RESULT
-- On LE reduce production bs_keyword -> RESULT
-- On LBRACE reduce production bs_keyword -> RESULT
-- On LAMBDA reduce production bs_keyword -> RESULT
-- On LABEL reduce production bs_keyword -> RESULT
-- On INVARIANT reduce production bs_keyword -> RESULT
-- On INTER reduce production bs_keyword -> RESULT
-- On INTEGER reduce production bs_keyword -> RESULT
-- On INT reduce production bs_keyword -> RESULT
-- On INITIALIZED reduce production bs_keyword -> RESULT
-- On INDUCTIVE reduce production bs_keyword -> RESULT
-- On INCLUDE reduce production bs_keyword -> RESULT
-- On IMPLIES reduce production bs_keyword -> RESULT
-- On IMPACT reduce production bs_keyword -> RESULT
-- On IFF reduce production bs_keyword -> RESULT
-- On IF reduce production bs_keyword -> RESULT
-- On IDENTIFIER reduce production bs_keyword -> RESULT
-- On HATHAT reduce production bs_keyword -> RESULT
-- On HAT reduce production bs_keyword -> RESULT
-- On GTGT reduce production bs_keyword -> RESULT
-- On GT reduce production bs_keyword -> RESULT
-- On GLOBAL reduce production bs_keyword -> RESULT
-- On GHOST reduce production bs_keyword -> RESULT
-- On GE reduce production bs_keyword -> RESULT
-- On FUNCTION reduce production bs_keyword -> RESULT
-- On FROM reduce production bs_keyword -> RESULT
-- On FRESH reduce production bs_keyword -> RESULT
-- On FREES reduce production bs_keyword -> RESULT
-- On FREEABLE reduce production bs_keyword -> RESULT
-- On FORALL reduce production bs_keyword -> RESULT
-- On FOR reduce production bs_keyword -> RESULT
-- On FLOAT reduce production bs_keyword -> RESULT
-- On FALSE reduce production bs_keyword -> RESULT
-- On EXT_LET reduce production bs_keyword -> RESULT
-- On EXT_AT reduce production bs_keyword -> RESULT
-- On EXITS reduce production bs_keyword -> RESULT
-- On EXISTS reduce production bs_keyword -> RESULT
-- On EQUAL reduce production bs_keyword -> RESULT
-- On EQ reduce production bs_keyword -> RESULT
-- On EOF reduce production bs_keyword -> RESULT
-- On ENUM reduce production bs_keyword -> RESULT
-- On ENSURES reduce production bs_keyword -> RESULT
-- On EMPTY reduce production bs_keyword -> RESULT
-- On ELSE reduce production bs_keyword -> RESULT
-- On DYNAMIC reduce production bs_keyword -> RESULT
-- On DOUBLE reduce production bs_keyword -> RESULT
-- On DOTDOTDOT reduce production bs_keyword -> RESULT
-- On DOTDOT reduce production bs_keyword -> RESULT
-- On DOT reduce production bs_keyword -> RESULT
-- On DOLLAR reduce production bs_keyword -> RESULT
-- On DISJOINT reduce production bs_keyword -> RESULT
-- On DECREASES reduce production bs_keyword -> RESULT
-- On DANGLING reduce production bs_keyword -> RESULT
-- On CUSTOM reduce production bs_keyword -> RESULT
-- On CONTRACT reduce production bs_keyword -> RESULT
-- On CONTINUES reduce production bs_keyword -> RESULT
-- On CONSTANT10 reduce production bs_keyword -> RESULT
-- On CONSTANT reduce production bs_keyword -> RESULT
-- On CONST reduce production bs_keyword -> RESULT
-- On COMPLETE reduce production bs_keyword -> RESULT
-- On COMMA reduce production bs_keyword -> RESULT
-- On COLONGT reduce production bs_keyword -> RESULT
-- On COLONCOLON reduce production bs_keyword -> RESULT
-- On COLON2 reduce production bs_keyword -> RESULT
-- On COLON reduce production bs_keyword -> RESULT
-- On CHAR reduce production bs_keyword -> RESULT
-- On CASE reduce production bs_keyword -> RESULT
-- On BSUNION reduce production bs_keyword -> RESULT
-- On BSTYPE reduce production bs_keyword -> RESULT
-- On BREAKS reduce production bs_keyword -> RESULT
-- On BOOLEAN reduce production bs_keyword -> RESULT
-- On BOOL reduce production bs_keyword -> RESULT
-- On BLOCK_LENGTH reduce production bs_keyword -> RESULT
-- On BIMPLIES reduce production bs_keyword -> RESULT
-- On BIFF reduce production bs_keyword -> RESULT
-- On BEHAVIORS reduce production bs_keyword -> RESULT
-- On BEHAVIOR reduce production bs_keyword -> RESULT
-- On BASE_ADDR reduce production bs_keyword -> RESULT
-- On AXIOMATIC reduce production bs_keyword -> RESULT
-- On AXIOM reduce production bs_keyword -> RESULT
-- On AUTOMATIC reduce production bs_keyword -> RESULT
-- On AT reduce production bs_keyword -> RESULT
-- On ASSUMES reduce production bs_keyword -> RESULT
-- On ASSIGNS reduce production bs_keyword -> RESULT
-- On ASSERT reduce production bs_keyword -> RESULT
-- On ARROW reduce production bs_keyword -> RESULT
-- On AND reduce production bs_keyword -> RESULT
-- On AMP reduce production bs_keyword -> RESULT
-- On ALLOCATION reduce production bs_keyword -> RESULT
-- On ALLOCATES reduce production bs_keyword -> RESULT
-- On ALLOCABLE reduce production bs_keyword -> RESULT

State 969:
## Known stack suffix:
## REGISTER
## LR(1) items:
bs_keyword -> REGISTER . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> REGISTER
-- On WITH reduce production bs_keyword -> REGISTER
-- On VOLATILE reduce production bs_keyword -> REGISTER
-- On VOID reduce production bs_keyword -> REGISTER
-- On VARIANT reduce production bs_keyword -> REGISTER
-- On VALID_READ reduce production bs_keyword -> REGISTER
-- On VALID_RANGE reduce production bs_keyword -> REGISTER
-- On VALID_INDEX reduce production bs_keyword -> REGISTER
-- On VALID reduce production bs_keyword -> REGISTER
-- On UNSIGNED reduce production bs_keyword -> REGISTER
-- On UNION reduce production bs_keyword -> REGISTER
-- On UNALLOCATED reduce production bs_keyword -> REGISTER
-- On TYPEOF reduce production bs_keyword -> REGISTER
-- On TYPENAME reduce production bs_keyword -> REGISTER
-- On TYPE reduce production bs_keyword -> REGISTER
-- On TRUE reduce production bs_keyword -> REGISTER
-- On TILDE reduce production bs_keyword -> REGISTER
-- On TERMINATES reduce production bs_keyword -> REGISTER
-- On STRUCT reduce production bs_keyword -> REGISTER
-- On STRING_LITERAL reduce production bs_keyword -> REGISTER
-- On STATIC reduce production bs_keyword -> REGISTER
-- On STAR reduce production bs_keyword -> REGISTER
-- On SLICE reduce production bs_keyword -> REGISTER
-- On SLASH reduce production bs_keyword -> REGISTER
-- On SIZEOF reduce production bs_keyword -> REGISTER
-- On SIGNED reduce production bs_keyword -> REGISTER
-- On SHORT reduce production bs_keyword -> REGISTER
-- On SEPARATED reduce production bs_keyword -> REGISTER
-- On SEMICOLON reduce production bs_keyword -> REGISTER
-- On RSQUARE reduce production bs_keyword -> REGISTER
-- On RPAR reduce production bs_keyword -> REGISTER
-- On RETURNS reduce production bs_keyword -> REGISTER
-- On RESULT reduce production bs_keyword -> REGISTER
-- On REQUIRES reduce production bs_keyword -> REGISTER
-- On REGISTER reduce production bs_keyword -> REGISTER
-- On REAL reduce production bs_keyword -> REGISTER
-- On READS reduce production bs_keyword -> REGISTER
-- On RBRACE reduce production bs_keyword -> REGISTER
-- On QUESTION reduce production bs_keyword -> REGISTER
-- On PREDICATE reduce production bs_keyword -> REGISTER
-- On PRAGMA reduce production bs_keyword -> REGISTER
-- On PLUS reduce production bs_keyword -> REGISTER
-- On PIPE reduce production bs_keyword -> REGISTER
-- On PERCENT reduce production bs_keyword -> REGISTER
-- On OR reduce production bs_keyword -> REGISTER
-- On OLD reduce production bs_keyword -> REGISTER
-- On OFFSET reduce production bs_keyword -> REGISTER
-- On NULL reduce production bs_keyword -> REGISTER
-- On NOTHING reduce production bs_keyword -> REGISTER
-- On NOT reduce production bs_keyword -> REGISTER
-- On NE reduce production bs_keyword -> REGISTER
-- On MODULE reduce production bs_keyword -> REGISTER
-- On MODEL reduce production bs_keyword -> REGISTER
-- On MINUS reduce production bs_keyword -> REGISTER
-- On LTLT reduce production bs_keyword -> REGISTER
-- On LTCOLON reduce production bs_keyword -> REGISTER
-- On LT reduce production bs_keyword -> REGISTER
-- On LSQUARE reduce production bs_keyword -> REGISTER
-- On LPAR reduce production bs_keyword -> REGISTER
-- On LOOP reduce production bs_keyword -> REGISTER
-- On LONG reduce production bs_keyword -> REGISTER
-- On LOGIC reduce production bs_keyword -> REGISTER
-- On LET reduce production bs_keyword -> REGISTER
-- On LEMMA reduce production bs_keyword -> REGISTER
-- On LE reduce production bs_keyword -> REGISTER
-- On LBRACE reduce production bs_keyword -> REGISTER
-- On LAMBDA reduce production bs_keyword -> REGISTER
-- On LABEL reduce production bs_keyword -> REGISTER
-- On INVARIANT reduce production bs_keyword -> REGISTER
-- On INTER reduce production bs_keyword -> REGISTER
-- On INTEGER reduce production bs_keyword -> REGISTER
-- On INT reduce production bs_keyword -> REGISTER
-- On INITIALIZED reduce production bs_keyword -> REGISTER
-- On INDUCTIVE reduce production bs_keyword -> REGISTER
-- On INCLUDE reduce production bs_keyword -> REGISTER
-- On IMPLIES reduce production bs_keyword -> REGISTER
-- On IMPACT reduce production bs_keyword -> REGISTER
-- On IFF reduce production bs_keyword -> REGISTER
-- On IF reduce production bs_keyword -> REGISTER
-- On IDENTIFIER reduce production bs_keyword -> REGISTER
-- On HATHAT reduce production bs_keyword -> REGISTER
-- On HAT reduce production bs_keyword -> REGISTER
-- On GTGT reduce production bs_keyword -> REGISTER
-- On GT reduce production bs_keyword -> REGISTER
-- On GLOBAL reduce production bs_keyword -> REGISTER
-- On GHOST reduce production bs_keyword -> REGISTER
-- On GE reduce production bs_keyword -> REGISTER
-- On FUNCTION reduce production bs_keyword -> REGISTER
-- On FROM reduce production bs_keyword -> REGISTER
-- On FRESH reduce production bs_keyword -> REGISTER
-- On FREES reduce production bs_keyword -> REGISTER
-- On FREEABLE reduce production bs_keyword -> REGISTER
-- On FORALL reduce production bs_keyword -> REGISTER
-- On FOR reduce production bs_keyword -> REGISTER
-- On FLOAT reduce production bs_keyword -> REGISTER
-- On FALSE reduce production bs_keyword -> REGISTER
-- On EXT_LET reduce production bs_keyword -> REGISTER
-- On EXT_AT reduce production bs_keyword -> REGISTER
-- On EXITS reduce production bs_keyword -> REGISTER
-- On EXISTS reduce production bs_keyword -> REGISTER
-- On EQUAL reduce production bs_keyword -> REGISTER
-- On EQ reduce production bs_keyword -> REGISTER
-- On EOF reduce production bs_keyword -> REGISTER
-- On ENUM reduce production bs_keyword -> REGISTER
-- On ENSURES reduce production bs_keyword -> REGISTER
-- On EMPTY reduce production bs_keyword -> REGISTER
-- On ELSE reduce production bs_keyword -> REGISTER
-- On DYNAMIC reduce production bs_keyword -> REGISTER
-- On DOUBLE reduce production bs_keyword -> REGISTER
-- On DOTDOTDOT reduce production bs_keyword -> REGISTER
-- On DOTDOT reduce production bs_keyword -> REGISTER
-- On DOT reduce production bs_keyword -> REGISTER
-- On DOLLAR reduce production bs_keyword -> REGISTER
-- On DISJOINT reduce production bs_keyword -> REGISTER
-- On DECREASES reduce production bs_keyword -> REGISTER
-- On DANGLING reduce production bs_keyword -> REGISTER
-- On CUSTOM reduce production bs_keyword -> REGISTER
-- On CONTRACT reduce production bs_keyword -> REGISTER
-- On CONTINUES reduce production bs_keyword -> REGISTER
-- On CONSTANT10 reduce production bs_keyword -> REGISTER
-- On CONSTANT reduce production bs_keyword -> REGISTER
-- On CONST reduce production bs_keyword -> REGISTER
-- On COMPLETE reduce production bs_keyword -> REGISTER
-- On COMMA reduce production bs_keyword -> REGISTER
-- On COLONGT reduce production bs_keyword -> REGISTER
-- On COLONCOLON reduce production bs_keyword -> REGISTER
-- On COLON2 reduce production bs_keyword -> REGISTER
-- On COLON reduce production bs_keyword -> REGISTER
-- On CHAR reduce production bs_keyword -> REGISTER
-- On CASE reduce production bs_keyword -> REGISTER
-- On BSUNION reduce production bs_keyword -> REGISTER
-- On BSTYPE reduce production bs_keyword -> REGISTER
-- On BREAKS reduce production bs_keyword -> REGISTER
-- On BOOLEAN reduce production bs_keyword -> REGISTER
-- On BOOL reduce production bs_keyword -> REGISTER
-- On BLOCK_LENGTH reduce production bs_keyword -> REGISTER
-- On BIMPLIES reduce production bs_keyword -> REGISTER
-- On BIFF reduce production bs_keyword -> REGISTER
-- On BEHAVIORS reduce production bs_keyword -> REGISTER
-- On BEHAVIOR reduce production bs_keyword -> REGISTER
-- On BASE_ADDR reduce production bs_keyword -> REGISTER
-- On AXIOMATIC reduce production bs_keyword -> REGISTER
-- On AXIOM reduce production bs_keyword -> REGISTER
-- On AUTOMATIC reduce production bs_keyword -> REGISTER
-- On AT reduce production bs_keyword -> REGISTER
-- On ASSUMES reduce production bs_keyword -> REGISTER
-- On ASSIGNS reduce production bs_keyword -> REGISTER
-- On ASSERT reduce production bs_keyword -> REGISTER
-- On ARROW reduce production bs_keyword -> REGISTER
-- On AND reduce production bs_keyword -> REGISTER
-- On AMP reduce production bs_keyword -> REGISTER
-- On ALLOCATION reduce production bs_keyword -> REGISTER
-- On ALLOCATES reduce production bs_keyword -> REGISTER
-- On ALLOCABLE reduce production bs_keyword -> REGISTER

State 970:
## Known stack suffix:
## RBRACE
## LR(1) items:
wildcard -> RBRACE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> RBRACE
-- On WITH reduce production wildcard -> RBRACE
-- On VOLATILE reduce production wildcard -> RBRACE
-- On VOID reduce production wildcard -> RBRACE
-- On VARIANT reduce production wildcard -> RBRACE
-- On VALID_READ reduce production wildcard -> RBRACE
-- On VALID_RANGE reduce production wildcard -> RBRACE
-- On VALID_INDEX reduce production wildcard -> RBRACE
-- On VALID reduce production wildcard -> RBRACE
-- On UNSIGNED reduce production wildcard -> RBRACE
-- On UNION reduce production wildcard -> RBRACE
-- On UNALLOCATED reduce production wildcard -> RBRACE
-- On TYPEOF reduce production wildcard -> RBRACE
-- On TYPENAME reduce production wildcard -> RBRACE
-- On TYPE reduce production wildcard -> RBRACE
-- On TRUE reduce production wildcard -> RBRACE
-- On TILDE reduce production wildcard -> RBRACE
-- On TERMINATES reduce production wildcard -> RBRACE
-- On STRUCT reduce production wildcard -> RBRACE
-- On STRING_LITERAL reduce production wildcard -> RBRACE
-- On STATIC reduce production wildcard -> RBRACE
-- On STAR reduce production wildcard -> RBRACE
-- On SLICE reduce production wildcard -> RBRACE
-- On SLASH reduce production wildcard -> RBRACE
-- On SIZEOF reduce production wildcard -> RBRACE
-- On SIGNED reduce production wildcard -> RBRACE
-- On SHORT reduce production wildcard -> RBRACE
-- On SEPARATED reduce production wildcard -> RBRACE
-- On SEMICOLON reduce production wildcard -> RBRACE
-- On RSQUARE reduce production wildcard -> RBRACE
-- On RPAR reduce production wildcard -> RBRACE
-- On RETURNS reduce production wildcard -> RBRACE
-- On RESULT reduce production wildcard -> RBRACE
-- On REQUIRES reduce production wildcard -> RBRACE
-- On REGISTER reduce production wildcard -> RBRACE
-- On REAL reduce production wildcard -> RBRACE
-- On READS reduce production wildcard -> RBRACE
-- On RBRACE reduce production wildcard -> RBRACE
-- On QUESTION reduce production wildcard -> RBRACE
-- On PREDICATE reduce production wildcard -> RBRACE
-- On PRAGMA reduce production wildcard -> RBRACE
-- On PLUS reduce production wildcard -> RBRACE
-- On PIPE reduce production wildcard -> RBRACE
-- On PERCENT reduce production wildcard -> RBRACE
-- On OR reduce production wildcard -> RBRACE
-- On OLD reduce production wildcard -> RBRACE
-- On OFFSET reduce production wildcard -> RBRACE
-- On NULL reduce production wildcard -> RBRACE
-- On NOTHING reduce production wildcard -> RBRACE
-- On NOT reduce production wildcard -> RBRACE
-- On NE reduce production wildcard -> RBRACE
-- On MODULE reduce production wildcard -> RBRACE
-- On MODEL reduce production wildcard -> RBRACE
-- On MINUS reduce production wildcard -> RBRACE
-- On LTLT reduce production wildcard -> RBRACE
-- On LTCOLON reduce production wildcard -> RBRACE
-- On LT reduce production wildcard -> RBRACE
-- On LSQUARE reduce production wildcard -> RBRACE
-- On LPAR reduce production wildcard -> RBRACE
-- On LOOP reduce production wildcard -> RBRACE
-- On LONG reduce production wildcard -> RBRACE
-- On LOGIC reduce production wildcard -> RBRACE
-- On LET reduce production wildcard -> RBRACE
-- On LEMMA reduce production wildcard -> RBRACE
-- On LE reduce production wildcard -> RBRACE
-- On LBRACE reduce production wildcard -> RBRACE
-- On LAMBDA reduce production wildcard -> RBRACE
-- On LABEL reduce production wildcard -> RBRACE
-- On INVARIANT reduce production wildcard -> RBRACE
-- On INTER reduce production wildcard -> RBRACE
-- On INTEGER reduce production wildcard -> RBRACE
-- On INT reduce production wildcard -> RBRACE
-- On INITIALIZED reduce production wildcard -> RBRACE
-- On INDUCTIVE reduce production wildcard -> RBRACE
-- On INCLUDE reduce production wildcard -> RBRACE
-- On IMPLIES reduce production wildcard -> RBRACE
-- On IMPACT reduce production wildcard -> RBRACE
-- On IFF reduce production wildcard -> RBRACE
-- On IF reduce production wildcard -> RBRACE
-- On IDENTIFIER reduce production wildcard -> RBRACE
-- On HATHAT reduce production wildcard -> RBRACE
-- On HAT reduce production wildcard -> RBRACE
-- On GTGT reduce production wildcard -> RBRACE
-- On GT reduce production wildcard -> RBRACE
-- On GLOBAL reduce production wildcard -> RBRACE
-- On GHOST reduce production wildcard -> RBRACE
-- On GE reduce production wildcard -> RBRACE
-- On FUNCTION reduce production wildcard -> RBRACE
-- On FROM reduce production wildcard -> RBRACE
-- On FRESH reduce production wildcard -> RBRACE
-- On FREES reduce production wildcard -> RBRACE
-- On FREEABLE reduce production wildcard -> RBRACE
-- On FORALL reduce production wildcard -> RBRACE
-- On FOR reduce production wildcard -> RBRACE
-- On FLOAT reduce production wildcard -> RBRACE
-- On FALSE reduce production wildcard -> RBRACE
-- On EXT_LET reduce production wildcard -> RBRACE
-- On EXT_AT reduce production wildcard -> RBRACE
-- On EXITS reduce production wildcard -> RBRACE
-- On EXISTS reduce production wildcard -> RBRACE
-- On EQUAL reduce production wildcard -> RBRACE
-- On EQ reduce production wildcard -> RBRACE
-- On EOF reduce production wildcard -> RBRACE
-- On ENUM reduce production wildcard -> RBRACE
-- On ENSURES reduce production wildcard -> RBRACE
-- On EMPTY reduce production wildcard -> RBRACE
-- On ELSE reduce production wildcard -> RBRACE
-- On DYNAMIC reduce production wildcard -> RBRACE
-- On DOUBLE reduce production wildcard -> RBRACE
-- On DOTDOTDOT reduce production wildcard -> RBRACE
-- On DOTDOT reduce production wildcard -> RBRACE
-- On DOT reduce production wildcard -> RBRACE
-- On DOLLAR reduce production wildcard -> RBRACE
-- On DISJOINT reduce production wildcard -> RBRACE
-- On DECREASES reduce production wildcard -> RBRACE
-- On DANGLING reduce production wildcard -> RBRACE
-- On CUSTOM reduce production wildcard -> RBRACE
-- On CONTRACT reduce production wildcard -> RBRACE
-- On CONTINUES reduce production wildcard -> RBRACE
-- On CONSTANT10 reduce production wildcard -> RBRACE
-- On CONSTANT reduce production wildcard -> RBRACE
-- On CONST reduce production wildcard -> RBRACE
-- On COMPLETE reduce production wildcard -> RBRACE
-- On COMMA reduce production wildcard -> RBRACE
-- On COLONGT reduce production wildcard -> RBRACE
-- On COLONCOLON reduce production wildcard -> RBRACE
-- On COLON2 reduce production wildcard -> RBRACE
-- On COLON reduce production wildcard -> RBRACE
-- On CHAR reduce production wildcard -> RBRACE
-- On CASE reduce production wildcard -> RBRACE
-- On BSUNION reduce production wildcard -> RBRACE
-- On BSTYPE reduce production wildcard -> RBRACE
-- On BREAKS reduce production wildcard -> RBRACE
-- On BOOLEAN reduce production wildcard -> RBRACE
-- On BOOL reduce production wildcard -> RBRACE
-- On BLOCK_LENGTH reduce production wildcard -> RBRACE
-- On BIMPLIES reduce production wildcard -> RBRACE
-- On BIFF reduce production wildcard -> RBRACE
-- On BEHAVIORS reduce production wildcard -> RBRACE
-- On BEHAVIOR reduce production wildcard -> RBRACE
-- On BASE_ADDR reduce production wildcard -> RBRACE
-- On AXIOMATIC reduce production wildcard -> RBRACE
-- On AXIOM reduce production wildcard -> RBRACE
-- On AUTOMATIC reduce production wildcard -> RBRACE
-- On AT reduce production wildcard -> RBRACE
-- On ASSUMES reduce production wildcard -> RBRACE
-- On ASSIGNS reduce production wildcard -> RBRACE
-- On ASSERT reduce production wildcard -> RBRACE
-- On ARROW reduce production wildcard -> RBRACE
-- On AND reduce production wildcard -> RBRACE
-- On AMP reduce production wildcard -> RBRACE
-- On ALLOCATION reduce production wildcard -> RBRACE
-- On ALLOCATES reduce production wildcard -> RBRACE
-- On ALLOCABLE reduce production wildcard -> RBRACE

State 971:
## Known stack suffix:
## QUESTION
## LR(1) items:
wildcard -> QUESTION . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> QUESTION
-- On WITH reduce production wildcard -> QUESTION
-- On VOLATILE reduce production wildcard -> QUESTION
-- On VOID reduce production wildcard -> QUESTION
-- On VARIANT reduce production wildcard -> QUESTION
-- On VALID_READ reduce production wildcard -> QUESTION
-- On VALID_RANGE reduce production wildcard -> QUESTION
-- On VALID_INDEX reduce production wildcard -> QUESTION
-- On VALID reduce production wildcard -> QUESTION
-- On UNSIGNED reduce production wildcard -> QUESTION
-- On UNION reduce production wildcard -> QUESTION
-- On UNALLOCATED reduce production wildcard -> QUESTION
-- On TYPEOF reduce production wildcard -> QUESTION
-- On TYPENAME reduce production wildcard -> QUESTION
-- On TYPE reduce production wildcard -> QUESTION
-- On TRUE reduce production wildcard -> QUESTION
-- On TILDE reduce production wildcard -> QUESTION
-- On TERMINATES reduce production wildcard -> QUESTION
-- On STRUCT reduce production wildcard -> QUESTION
-- On STRING_LITERAL reduce production wildcard -> QUESTION
-- On STATIC reduce production wildcard -> QUESTION
-- On STAR reduce production wildcard -> QUESTION
-- On SLICE reduce production wildcard -> QUESTION
-- On SLASH reduce production wildcard -> QUESTION
-- On SIZEOF reduce production wildcard -> QUESTION
-- On SIGNED reduce production wildcard -> QUESTION
-- On SHORT reduce production wildcard -> QUESTION
-- On SEPARATED reduce production wildcard -> QUESTION
-- On SEMICOLON reduce production wildcard -> QUESTION
-- On RSQUARE reduce production wildcard -> QUESTION
-- On RPAR reduce production wildcard -> QUESTION
-- On RETURNS reduce production wildcard -> QUESTION
-- On RESULT reduce production wildcard -> QUESTION
-- On REQUIRES reduce production wildcard -> QUESTION
-- On REGISTER reduce production wildcard -> QUESTION
-- On REAL reduce production wildcard -> QUESTION
-- On READS reduce production wildcard -> QUESTION
-- On RBRACE reduce production wildcard -> QUESTION
-- On QUESTION reduce production wildcard -> QUESTION
-- On PREDICATE reduce production wildcard -> QUESTION
-- On PRAGMA reduce production wildcard -> QUESTION
-- On PLUS reduce production wildcard -> QUESTION
-- On PIPE reduce production wildcard -> QUESTION
-- On PERCENT reduce production wildcard -> QUESTION
-- On OR reduce production wildcard -> QUESTION
-- On OLD reduce production wildcard -> QUESTION
-- On OFFSET reduce production wildcard -> QUESTION
-- On NULL reduce production wildcard -> QUESTION
-- On NOTHING reduce production wildcard -> QUESTION
-- On NOT reduce production wildcard -> QUESTION
-- On NE reduce production wildcard -> QUESTION
-- On MODULE reduce production wildcard -> QUESTION
-- On MODEL reduce production wildcard -> QUESTION
-- On MINUS reduce production wildcard -> QUESTION
-- On LTLT reduce production wildcard -> QUESTION
-- On LTCOLON reduce production wildcard -> QUESTION
-- On LT reduce production wildcard -> QUESTION
-- On LSQUARE reduce production wildcard -> QUESTION
-- On LPAR reduce production wildcard -> QUESTION
-- On LOOP reduce production wildcard -> QUESTION
-- On LONG reduce production wildcard -> QUESTION
-- On LOGIC reduce production wildcard -> QUESTION
-- On LET reduce production wildcard -> QUESTION
-- On LEMMA reduce production wildcard -> QUESTION
-- On LE reduce production wildcard -> QUESTION
-- On LBRACE reduce production wildcard -> QUESTION
-- On LAMBDA reduce production wildcard -> QUESTION
-- On LABEL reduce production wildcard -> QUESTION
-- On INVARIANT reduce production wildcard -> QUESTION
-- On INTER reduce production wildcard -> QUESTION
-- On INTEGER reduce production wildcard -> QUESTION
-- On INT reduce production wildcard -> QUESTION
-- On INITIALIZED reduce production wildcard -> QUESTION
-- On INDUCTIVE reduce production wildcard -> QUESTION
-- On INCLUDE reduce production wildcard -> QUESTION
-- On IMPLIES reduce production wildcard -> QUESTION
-- On IMPACT reduce production wildcard -> QUESTION
-- On IFF reduce production wildcard -> QUESTION
-- On IF reduce production wildcard -> QUESTION
-- On IDENTIFIER reduce production wildcard -> QUESTION
-- On HATHAT reduce production wildcard -> QUESTION
-- On HAT reduce production wildcard -> QUESTION
-- On GTGT reduce production wildcard -> QUESTION
-- On GT reduce production wildcard -> QUESTION
-- On GLOBAL reduce production wildcard -> QUESTION
-- On GHOST reduce production wildcard -> QUESTION
-- On GE reduce production wildcard -> QUESTION
-- On FUNCTION reduce production wildcard -> QUESTION
-- On FROM reduce production wildcard -> QUESTION
-- On FRESH reduce production wildcard -> QUESTION
-- On FREES reduce production wildcard -> QUESTION
-- On FREEABLE reduce production wildcard -> QUESTION
-- On FORALL reduce production wildcard -> QUESTION
-- On FOR reduce production wildcard -> QUESTION
-- On FLOAT reduce production wildcard -> QUESTION
-- On FALSE reduce production wildcard -> QUESTION
-- On EXT_LET reduce production wildcard -> QUESTION
-- On EXT_AT reduce production wildcard -> QUESTION
-- On EXITS reduce production wildcard -> QUESTION
-- On EXISTS reduce production wildcard -> QUESTION
-- On EQUAL reduce production wildcard -> QUESTION
-- On EQ reduce production wildcard -> QUESTION
-- On EOF reduce production wildcard -> QUESTION
-- On ENUM reduce production wildcard -> QUESTION
-- On ENSURES reduce production wildcard -> QUESTION
-- On EMPTY reduce production wildcard -> QUESTION
-- On ELSE reduce production wildcard -> QUESTION
-- On DYNAMIC reduce production wildcard -> QUESTION
-- On DOUBLE reduce production wildcard -> QUESTION
-- On DOTDOTDOT reduce production wildcard -> QUESTION
-- On DOTDOT reduce production wildcard -> QUESTION
-- On DOT reduce production wildcard -> QUESTION
-- On DOLLAR reduce production wildcard -> QUESTION
-- On DISJOINT reduce production wildcard -> QUESTION
-- On DECREASES reduce production wildcard -> QUESTION
-- On DANGLING reduce production wildcard -> QUESTION
-- On CUSTOM reduce production wildcard -> QUESTION
-- On CONTRACT reduce production wildcard -> QUESTION
-- On CONTINUES reduce production wildcard -> QUESTION
-- On CONSTANT10 reduce production wildcard -> QUESTION
-- On CONSTANT reduce production wildcard -> QUESTION
-- On CONST reduce production wildcard -> QUESTION
-- On COMPLETE reduce production wildcard -> QUESTION
-- On COMMA reduce production wildcard -> QUESTION
-- On COLONGT reduce production wildcard -> QUESTION
-- On COLONCOLON reduce production wildcard -> QUESTION
-- On COLON2 reduce production wildcard -> QUESTION
-- On COLON reduce production wildcard -> QUESTION
-- On CHAR reduce production wildcard -> QUESTION
-- On CASE reduce production wildcard -> QUESTION
-- On BSUNION reduce production wildcard -> QUESTION
-- On BSTYPE reduce production wildcard -> QUESTION
-- On BREAKS reduce production wildcard -> QUESTION
-- On BOOLEAN reduce production wildcard -> QUESTION
-- On BOOL reduce production wildcard -> QUESTION
-- On BLOCK_LENGTH reduce production wildcard -> QUESTION
-- On BIMPLIES reduce production wildcard -> QUESTION
-- On BIFF reduce production wildcard -> QUESTION
-- On BEHAVIORS reduce production wildcard -> QUESTION
-- On BEHAVIOR reduce production wildcard -> QUESTION
-- On BASE_ADDR reduce production wildcard -> QUESTION
-- On AXIOMATIC reduce production wildcard -> QUESTION
-- On AXIOM reduce production wildcard -> QUESTION
-- On AUTOMATIC reduce production wildcard -> QUESTION
-- On AT reduce production wildcard -> QUESTION
-- On ASSUMES reduce production wildcard -> QUESTION
-- On ASSIGNS reduce production wildcard -> QUESTION
-- On ASSERT reduce production wildcard -> QUESTION
-- On ARROW reduce production wildcard -> QUESTION
-- On AND reduce production wildcard -> QUESTION
-- On AMP reduce production wildcard -> QUESTION
-- On ALLOCATION reduce production wildcard -> QUESTION
-- On ALLOCATES reduce production wildcard -> QUESTION
-- On ALLOCABLE reduce production wildcard -> QUESTION

State 972:
## Known stack suffix:
## PLUS
## LR(1) items:
wildcard -> PLUS . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> PLUS
-- On WITH reduce production wildcard -> PLUS
-- On VOLATILE reduce production wildcard -> PLUS
-- On VOID reduce production wildcard -> PLUS
-- On VARIANT reduce production wildcard -> PLUS
-- On VALID_READ reduce production wildcard -> PLUS
-- On VALID_RANGE reduce production wildcard -> PLUS
-- On VALID_INDEX reduce production wildcard -> PLUS
-- On VALID reduce production wildcard -> PLUS
-- On UNSIGNED reduce production wildcard -> PLUS
-- On UNION reduce production wildcard -> PLUS
-- On UNALLOCATED reduce production wildcard -> PLUS
-- On TYPEOF reduce production wildcard -> PLUS
-- On TYPENAME reduce production wildcard -> PLUS
-- On TYPE reduce production wildcard -> PLUS
-- On TRUE reduce production wildcard -> PLUS
-- On TILDE reduce production wildcard -> PLUS
-- On TERMINATES reduce production wildcard -> PLUS
-- On STRUCT reduce production wildcard -> PLUS
-- On STRING_LITERAL reduce production wildcard -> PLUS
-- On STATIC reduce production wildcard -> PLUS
-- On STAR reduce production wildcard -> PLUS
-- On SLICE reduce production wildcard -> PLUS
-- On SLASH reduce production wildcard -> PLUS
-- On SIZEOF reduce production wildcard -> PLUS
-- On SIGNED reduce production wildcard -> PLUS
-- On SHORT reduce production wildcard -> PLUS
-- On SEPARATED reduce production wildcard -> PLUS
-- On SEMICOLON reduce production wildcard -> PLUS
-- On RSQUARE reduce production wildcard -> PLUS
-- On RPAR reduce production wildcard -> PLUS
-- On RETURNS reduce production wildcard -> PLUS
-- On RESULT reduce production wildcard -> PLUS
-- On REQUIRES reduce production wildcard -> PLUS
-- On REGISTER reduce production wildcard -> PLUS
-- On REAL reduce production wildcard -> PLUS
-- On READS reduce production wildcard -> PLUS
-- On RBRACE reduce production wildcard -> PLUS
-- On QUESTION reduce production wildcard -> PLUS
-- On PREDICATE reduce production wildcard -> PLUS
-- On PRAGMA reduce production wildcard -> PLUS
-- On PLUS reduce production wildcard -> PLUS
-- On PIPE reduce production wildcard -> PLUS
-- On PERCENT reduce production wildcard -> PLUS
-- On OR reduce production wildcard -> PLUS
-- On OLD reduce production wildcard -> PLUS
-- On OFFSET reduce production wildcard -> PLUS
-- On NULL reduce production wildcard -> PLUS
-- On NOTHING reduce production wildcard -> PLUS
-- On NOT reduce production wildcard -> PLUS
-- On NE reduce production wildcard -> PLUS
-- On MODULE reduce production wildcard -> PLUS
-- On MODEL reduce production wildcard -> PLUS
-- On MINUS reduce production wildcard -> PLUS
-- On LTLT reduce production wildcard -> PLUS
-- On LTCOLON reduce production wildcard -> PLUS
-- On LT reduce production wildcard -> PLUS
-- On LSQUARE reduce production wildcard -> PLUS
-- On LPAR reduce production wildcard -> PLUS
-- On LOOP reduce production wildcard -> PLUS
-- On LONG reduce production wildcard -> PLUS
-- On LOGIC reduce production wildcard -> PLUS
-- On LET reduce production wildcard -> PLUS
-- On LEMMA reduce production wildcard -> PLUS
-- On LE reduce production wildcard -> PLUS
-- On LBRACE reduce production wildcard -> PLUS
-- On LAMBDA reduce production wildcard -> PLUS
-- On LABEL reduce production wildcard -> PLUS
-- On INVARIANT reduce production wildcard -> PLUS
-- On INTER reduce production wildcard -> PLUS
-- On INTEGER reduce production wildcard -> PLUS
-- On INT reduce production wildcard -> PLUS
-- On INITIALIZED reduce production wildcard -> PLUS
-- On INDUCTIVE reduce production wildcard -> PLUS
-- On INCLUDE reduce production wildcard -> PLUS
-- On IMPLIES reduce production wildcard -> PLUS
-- On IMPACT reduce production wildcard -> PLUS
-- On IFF reduce production wildcard -> PLUS
-- On IF reduce production wildcard -> PLUS
-- On IDENTIFIER reduce production wildcard -> PLUS
-- On HATHAT reduce production wildcard -> PLUS
-- On HAT reduce production wildcard -> PLUS
-- On GTGT reduce production wildcard -> PLUS
-- On GT reduce production wildcard -> PLUS
-- On GLOBAL reduce production wildcard -> PLUS
-- On GHOST reduce production wildcard -> PLUS
-- On GE reduce production wildcard -> PLUS
-- On FUNCTION reduce production wildcard -> PLUS
-- On FROM reduce production wildcard -> PLUS
-- On FRESH reduce production wildcard -> PLUS
-- On FREES reduce production wildcard -> PLUS
-- On FREEABLE reduce production wildcard -> PLUS
-- On FORALL reduce production wildcard -> PLUS
-- On FOR reduce production wildcard -> PLUS
-- On FLOAT reduce production wildcard -> PLUS
-- On FALSE reduce production wildcard -> PLUS
-- On EXT_LET reduce production wildcard -> PLUS
-- On EXT_AT reduce production wildcard -> PLUS
-- On EXITS reduce production wildcard -> PLUS
-- On EXISTS reduce production wildcard -> PLUS
-- On EQUAL reduce production wildcard -> PLUS
-- On EQ reduce production wildcard -> PLUS
-- On EOF reduce production wildcard -> PLUS
-- On ENUM reduce production wildcard -> PLUS
-- On ENSURES reduce production wildcard -> PLUS
-- On EMPTY reduce production wildcard -> PLUS
-- On ELSE reduce production wildcard -> PLUS
-- On DYNAMIC reduce production wildcard -> PLUS
-- On DOUBLE reduce production wildcard -> PLUS
-- On DOTDOTDOT reduce production wildcard -> PLUS
-- On DOTDOT reduce production wildcard -> PLUS
-- On DOT reduce production wildcard -> PLUS
-- On DOLLAR reduce production wildcard -> PLUS
-- On DISJOINT reduce production wildcard -> PLUS
-- On DECREASES reduce production wildcard -> PLUS
-- On DANGLING reduce production wildcard -> PLUS
-- On CUSTOM reduce production wildcard -> PLUS
-- On CONTRACT reduce production wildcard -> PLUS
-- On CONTINUES reduce production wildcard -> PLUS
-- On CONSTANT10 reduce production wildcard -> PLUS
-- On CONSTANT reduce production wildcard -> PLUS
-- On CONST reduce production wildcard -> PLUS
-- On COMPLETE reduce production wildcard -> PLUS
-- On COMMA reduce production wildcard -> PLUS
-- On COLONGT reduce production wildcard -> PLUS
-- On COLONCOLON reduce production wildcard -> PLUS
-- On COLON2 reduce production wildcard -> PLUS
-- On COLON reduce production wildcard -> PLUS
-- On CHAR reduce production wildcard -> PLUS
-- On CASE reduce production wildcard -> PLUS
-- On BSUNION reduce production wildcard -> PLUS
-- On BSTYPE reduce production wildcard -> PLUS
-- On BREAKS reduce production wildcard -> PLUS
-- On BOOLEAN reduce production wildcard -> PLUS
-- On BOOL reduce production wildcard -> PLUS
-- On BLOCK_LENGTH reduce production wildcard -> PLUS
-- On BIMPLIES reduce production wildcard -> PLUS
-- On BIFF reduce production wildcard -> PLUS
-- On BEHAVIORS reduce production wildcard -> PLUS
-- On BEHAVIOR reduce production wildcard -> PLUS
-- On BASE_ADDR reduce production wildcard -> PLUS
-- On AXIOMATIC reduce production wildcard -> PLUS
-- On AXIOM reduce production wildcard -> PLUS
-- On AUTOMATIC reduce production wildcard -> PLUS
-- On AT reduce production wildcard -> PLUS
-- On ASSUMES reduce production wildcard -> PLUS
-- On ASSIGNS reduce production wildcard -> PLUS
-- On ASSERT reduce production wildcard -> PLUS
-- On ARROW reduce production wildcard -> PLUS
-- On AND reduce production wildcard -> PLUS
-- On AMP reduce production wildcard -> PLUS
-- On ALLOCATION reduce production wildcard -> PLUS
-- On ALLOCATES reduce production wildcard -> PLUS
-- On ALLOCABLE reduce production wildcard -> PLUS

State 973:
## Known stack suffix:
## PIPE
## LR(1) items:
wildcard -> PIPE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> PIPE
-- On WITH reduce production wildcard -> PIPE
-- On VOLATILE reduce production wildcard -> PIPE
-- On VOID reduce production wildcard -> PIPE
-- On VARIANT reduce production wildcard -> PIPE
-- On VALID_READ reduce production wildcard -> PIPE
-- On VALID_RANGE reduce production wildcard -> PIPE
-- On VALID_INDEX reduce production wildcard -> PIPE
-- On VALID reduce production wildcard -> PIPE
-- On UNSIGNED reduce production wildcard -> PIPE
-- On UNION reduce production wildcard -> PIPE
-- On UNALLOCATED reduce production wildcard -> PIPE
-- On TYPEOF reduce production wildcard -> PIPE
-- On TYPENAME reduce production wildcard -> PIPE
-- On TYPE reduce production wildcard -> PIPE
-- On TRUE reduce production wildcard -> PIPE
-- On TILDE reduce production wildcard -> PIPE
-- On TERMINATES reduce production wildcard -> PIPE
-- On STRUCT reduce production wildcard -> PIPE
-- On STRING_LITERAL reduce production wildcard -> PIPE
-- On STATIC reduce production wildcard -> PIPE
-- On STAR reduce production wildcard -> PIPE
-- On SLICE reduce production wildcard -> PIPE
-- On SLASH reduce production wildcard -> PIPE
-- On SIZEOF reduce production wildcard -> PIPE
-- On SIGNED reduce production wildcard -> PIPE
-- On SHORT reduce production wildcard -> PIPE
-- On SEPARATED reduce production wildcard -> PIPE
-- On SEMICOLON reduce production wildcard -> PIPE
-- On RSQUARE reduce production wildcard -> PIPE
-- On RPAR reduce production wildcard -> PIPE
-- On RETURNS reduce production wildcard -> PIPE
-- On RESULT reduce production wildcard -> PIPE
-- On REQUIRES reduce production wildcard -> PIPE
-- On REGISTER reduce production wildcard -> PIPE
-- On REAL reduce production wildcard -> PIPE
-- On READS reduce production wildcard -> PIPE
-- On RBRACE reduce production wildcard -> PIPE
-- On QUESTION reduce production wildcard -> PIPE
-- On PREDICATE reduce production wildcard -> PIPE
-- On PRAGMA reduce production wildcard -> PIPE
-- On PLUS reduce production wildcard -> PIPE
-- On PIPE reduce production wildcard -> PIPE
-- On PERCENT reduce production wildcard -> PIPE
-- On OR reduce production wildcard -> PIPE
-- On OLD reduce production wildcard -> PIPE
-- On OFFSET reduce production wildcard -> PIPE
-- On NULL reduce production wildcard -> PIPE
-- On NOTHING reduce production wildcard -> PIPE
-- On NOT reduce production wildcard -> PIPE
-- On NE reduce production wildcard -> PIPE
-- On MODULE reduce production wildcard -> PIPE
-- On MODEL reduce production wildcard -> PIPE
-- On MINUS reduce production wildcard -> PIPE
-- On LTLT reduce production wildcard -> PIPE
-- On LTCOLON reduce production wildcard -> PIPE
-- On LT reduce production wildcard -> PIPE
-- On LSQUARE reduce production wildcard -> PIPE
-- On LPAR reduce production wildcard -> PIPE
-- On LOOP reduce production wildcard -> PIPE
-- On LONG reduce production wildcard -> PIPE
-- On LOGIC reduce production wildcard -> PIPE
-- On LET reduce production wildcard -> PIPE
-- On LEMMA reduce production wildcard -> PIPE
-- On LE reduce production wildcard -> PIPE
-- On LBRACE reduce production wildcard -> PIPE
-- On LAMBDA reduce production wildcard -> PIPE
-- On LABEL reduce production wildcard -> PIPE
-- On INVARIANT reduce production wildcard -> PIPE
-- On INTER reduce production wildcard -> PIPE
-- On INTEGER reduce production wildcard -> PIPE
-- On INT reduce production wildcard -> PIPE
-- On INITIALIZED reduce production wildcard -> PIPE
-- On INDUCTIVE reduce production wildcard -> PIPE
-- On INCLUDE reduce production wildcard -> PIPE
-- On IMPLIES reduce production wildcard -> PIPE
-- On IMPACT reduce production wildcard -> PIPE
-- On IFF reduce production wildcard -> PIPE
-- On IF reduce production wildcard -> PIPE
-- On IDENTIFIER reduce production wildcard -> PIPE
-- On HATHAT reduce production wildcard -> PIPE
-- On HAT reduce production wildcard -> PIPE
-- On GTGT reduce production wildcard -> PIPE
-- On GT reduce production wildcard -> PIPE
-- On GLOBAL reduce production wildcard -> PIPE
-- On GHOST reduce production wildcard -> PIPE
-- On GE reduce production wildcard -> PIPE
-- On FUNCTION reduce production wildcard -> PIPE
-- On FROM reduce production wildcard -> PIPE
-- On FRESH reduce production wildcard -> PIPE
-- On FREES reduce production wildcard -> PIPE
-- On FREEABLE reduce production wildcard -> PIPE
-- On FORALL reduce production wildcard -> PIPE
-- On FOR reduce production wildcard -> PIPE
-- On FLOAT reduce production wildcard -> PIPE
-- On FALSE reduce production wildcard -> PIPE
-- On EXT_LET reduce production wildcard -> PIPE
-- On EXT_AT reduce production wildcard -> PIPE
-- On EXITS reduce production wildcard -> PIPE
-- On EXISTS reduce production wildcard -> PIPE
-- On EQUAL reduce production wildcard -> PIPE
-- On EQ reduce production wildcard -> PIPE
-- On EOF reduce production wildcard -> PIPE
-- On ENUM reduce production wildcard -> PIPE
-- On ENSURES reduce production wildcard -> PIPE
-- On EMPTY reduce production wildcard -> PIPE
-- On ELSE reduce production wildcard -> PIPE
-- On DYNAMIC reduce production wildcard -> PIPE
-- On DOUBLE reduce production wildcard -> PIPE
-- On DOTDOTDOT reduce production wildcard -> PIPE
-- On DOTDOT reduce production wildcard -> PIPE
-- On DOT reduce production wildcard -> PIPE
-- On DOLLAR reduce production wildcard -> PIPE
-- On DISJOINT reduce production wildcard -> PIPE
-- On DECREASES reduce production wildcard -> PIPE
-- On DANGLING reduce production wildcard -> PIPE
-- On CUSTOM reduce production wildcard -> PIPE
-- On CONTRACT reduce production wildcard -> PIPE
-- On CONTINUES reduce production wildcard -> PIPE
-- On CONSTANT10 reduce production wildcard -> PIPE
-- On CONSTANT reduce production wildcard -> PIPE
-- On CONST reduce production wildcard -> PIPE
-- On COMPLETE reduce production wildcard -> PIPE
-- On COMMA reduce production wildcard -> PIPE
-- On COLONGT reduce production wildcard -> PIPE
-- On COLONCOLON reduce production wildcard -> PIPE
-- On COLON2 reduce production wildcard -> PIPE
-- On COLON reduce production wildcard -> PIPE
-- On CHAR reduce production wildcard -> PIPE
-- On CASE reduce production wildcard -> PIPE
-- On BSUNION reduce production wildcard -> PIPE
-- On BSTYPE reduce production wildcard -> PIPE
-- On BREAKS reduce production wildcard -> PIPE
-- On BOOLEAN reduce production wildcard -> PIPE
-- On BOOL reduce production wildcard -> PIPE
-- On BLOCK_LENGTH reduce production wildcard -> PIPE
-- On BIMPLIES reduce production wildcard -> PIPE
-- On BIFF reduce production wildcard -> PIPE
-- On BEHAVIORS reduce production wildcard -> PIPE
-- On BEHAVIOR reduce production wildcard -> PIPE
-- On BASE_ADDR reduce production wildcard -> PIPE
-- On AXIOMATIC reduce production wildcard -> PIPE
-- On AXIOM reduce production wildcard -> PIPE
-- On AUTOMATIC reduce production wildcard -> PIPE
-- On AT reduce production wildcard -> PIPE
-- On ASSUMES reduce production wildcard -> PIPE
-- On ASSIGNS reduce production wildcard -> PIPE
-- On ASSERT reduce production wildcard -> PIPE
-- On ARROW reduce production wildcard -> PIPE
-- On AND reduce production wildcard -> PIPE
-- On AMP reduce production wildcard -> PIPE
-- On ALLOCATION reduce production wildcard -> PIPE
-- On ALLOCATES reduce production wildcard -> PIPE
-- On ALLOCABLE reduce production wildcard -> PIPE

State 974:
## Known stack suffix:
## PERCENT
## LR(1) items:
wildcard -> PERCENT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> PERCENT
-- On WITH reduce production wildcard -> PERCENT
-- On VOLATILE reduce production wildcard -> PERCENT
-- On VOID reduce production wildcard -> PERCENT
-- On VARIANT reduce production wildcard -> PERCENT
-- On VALID_READ reduce production wildcard -> PERCENT
-- On VALID_RANGE reduce production wildcard -> PERCENT
-- On VALID_INDEX reduce production wildcard -> PERCENT
-- On VALID reduce production wildcard -> PERCENT
-- On UNSIGNED reduce production wildcard -> PERCENT
-- On UNION reduce production wildcard -> PERCENT
-- On UNALLOCATED reduce production wildcard -> PERCENT
-- On TYPEOF reduce production wildcard -> PERCENT
-- On TYPENAME reduce production wildcard -> PERCENT
-- On TYPE reduce production wildcard -> PERCENT
-- On TRUE reduce production wildcard -> PERCENT
-- On TILDE reduce production wildcard -> PERCENT
-- On TERMINATES reduce production wildcard -> PERCENT
-- On STRUCT reduce production wildcard -> PERCENT
-- On STRING_LITERAL reduce production wildcard -> PERCENT
-- On STATIC reduce production wildcard -> PERCENT
-- On STAR reduce production wildcard -> PERCENT
-- On SLICE reduce production wildcard -> PERCENT
-- On SLASH reduce production wildcard -> PERCENT
-- On SIZEOF reduce production wildcard -> PERCENT
-- On SIGNED reduce production wildcard -> PERCENT
-- On SHORT reduce production wildcard -> PERCENT
-- On SEPARATED reduce production wildcard -> PERCENT
-- On SEMICOLON reduce production wildcard -> PERCENT
-- On RSQUARE reduce production wildcard -> PERCENT
-- On RPAR reduce production wildcard -> PERCENT
-- On RETURNS reduce production wildcard -> PERCENT
-- On RESULT reduce production wildcard -> PERCENT
-- On REQUIRES reduce production wildcard -> PERCENT
-- On REGISTER reduce production wildcard -> PERCENT
-- On REAL reduce production wildcard -> PERCENT
-- On READS reduce production wildcard -> PERCENT
-- On RBRACE reduce production wildcard -> PERCENT
-- On QUESTION reduce production wildcard -> PERCENT
-- On PREDICATE reduce production wildcard -> PERCENT
-- On PRAGMA reduce production wildcard -> PERCENT
-- On PLUS reduce production wildcard -> PERCENT
-- On PIPE reduce production wildcard -> PERCENT
-- On PERCENT reduce production wildcard -> PERCENT
-- On OR reduce production wildcard -> PERCENT
-- On OLD reduce production wildcard -> PERCENT
-- On OFFSET reduce production wildcard -> PERCENT
-- On NULL reduce production wildcard -> PERCENT
-- On NOTHING reduce production wildcard -> PERCENT
-- On NOT reduce production wildcard -> PERCENT
-- On NE reduce production wildcard -> PERCENT
-- On MODULE reduce production wildcard -> PERCENT
-- On MODEL reduce production wildcard -> PERCENT
-- On MINUS reduce production wildcard -> PERCENT
-- On LTLT reduce production wildcard -> PERCENT
-- On LTCOLON reduce production wildcard -> PERCENT
-- On LT reduce production wildcard -> PERCENT
-- On LSQUARE reduce production wildcard -> PERCENT
-- On LPAR reduce production wildcard -> PERCENT
-- On LOOP reduce production wildcard -> PERCENT
-- On LONG reduce production wildcard -> PERCENT
-- On LOGIC reduce production wildcard -> PERCENT
-- On LET reduce production wildcard -> PERCENT
-- On LEMMA reduce production wildcard -> PERCENT
-- On LE reduce production wildcard -> PERCENT
-- On LBRACE reduce production wildcard -> PERCENT
-- On LAMBDA reduce production wildcard -> PERCENT
-- On LABEL reduce production wildcard -> PERCENT
-- On INVARIANT reduce production wildcard -> PERCENT
-- On INTER reduce production wildcard -> PERCENT
-- On INTEGER reduce production wildcard -> PERCENT
-- On INT reduce production wildcard -> PERCENT
-- On INITIALIZED reduce production wildcard -> PERCENT
-- On INDUCTIVE reduce production wildcard -> PERCENT
-- On INCLUDE reduce production wildcard -> PERCENT
-- On IMPLIES reduce production wildcard -> PERCENT
-- On IMPACT reduce production wildcard -> PERCENT
-- On IFF reduce production wildcard -> PERCENT
-- On IF reduce production wildcard -> PERCENT
-- On IDENTIFIER reduce production wildcard -> PERCENT
-- On HATHAT reduce production wildcard -> PERCENT
-- On HAT reduce production wildcard -> PERCENT
-- On GTGT reduce production wildcard -> PERCENT
-- On GT reduce production wildcard -> PERCENT
-- On GLOBAL reduce production wildcard -> PERCENT
-- On GHOST reduce production wildcard -> PERCENT
-- On GE reduce production wildcard -> PERCENT
-- On FUNCTION reduce production wildcard -> PERCENT
-- On FROM reduce production wildcard -> PERCENT
-- On FRESH reduce production wildcard -> PERCENT
-- On FREES reduce production wildcard -> PERCENT
-- On FREEABLE reduce production wildcard -> PERCENT
-- On FORALL reduce production wildcard -> PERCENT
-- On FOR reduce production wildcard -> PERCENT
-- On FLOAT reduce production wildcard -> PERCENT
-- On FALSE reduce production wildcard -> PERCENT
-- On EXT_LET reduce production wildcard -> PERCENT
-- On EXT_AT reduce production wildcard -> PERCENT
-- On EXITS reduce production wildcard -> PERCENT
-- On EXISTS reduce production wildcard -> PERCENT
-- On EQUAL reduce production wildcard -> PERCENT
-- On EQ reduce production wildcard -> PERCENT
-- On EOF reduce production wildcard -> PERCENT
-- On ENUM reduce production wildcard -> PERCENT
-- On ENSURES reduce production wildcard -> PERCENT
-- On EMPTY reduce production wildcard -> PERCENT
-- On ELSE reduce production wildcard -> PERCENT
-- On DYNAMIC reduce production wildcard -> PERCENT
-- On DOUBLE reduce production wildcard -> PERCENT
-- On DOTDOTDOT reduce production wildcard -> PERCENT
-- On DOTDOT reduce production wildcard -> PERCENT
-- On DOT reduce production wildcard -> PERCENT
-- On DOLLAR reduce production wildcard -> PERCENT
-- On DISJOINT reduce production wildcard -> PERCENT
-- On DECREASES reduce production wildcard -> PERCENT
-- On DANGLING reduce production wildcard -> PERCENT
-- On CUSTOM reduce production wildcard -> PERCENT
-- On CONTRACT reduce production wildcard -> PERCENT
-- On CONTINUES reduce production wildcard -> PERCENT
-- On CONSTANT10 reduce production wildcard -> PERCENT
-- On CONSTANT reduce production wildcard -> PERCENT
-- On CONST reduce production wildcard -> PERCENT
-- On COMPLETE reduce production wildcard -> PERCENT
-- On COMMA reduce production wildcard -> PERCENT
-- On COLONGT reduce production wildcard -> PERCENT
-- On COLONCOLON reduce production wildcard -> PERCENT
-- On COLON2 reduce production wildcard -> PERCENT
-- On COLON reduce production wildcard -> PERCENT
-- On CHAR reduce production wildcard -> PERCENT
-- On CASE reduce production wildcard -> PERCENT
-- On BSUNION reduce production wildcard -> PERCENT
-- On BSTYPE reduce production wildcard -> PERCENT
-- On BREAKS reduce production wildcard -> PERCENT
-- On BOOLEAN reduce production wildcard -> PERCENT
-- On BOOL reduce production wildcard -> PERCENT
-- On BLOCK_LENGTH reduce production wildcard -> PERCENT
-- On BIMPLIES reduce production wildcard -> PERCENT
-- On BIFF reduce production wildcard -> PERCENT
-- On BEHAVIORS reduce production wildcard -> PERCENT
-- On BEHAVIOR reduce production wildcard -> PERCENT
-- On BASE_ADDR reduce production wildcard -> PERCENT
-- On AXIOMATIC reduce production wildcard -> PERCENT
-- On AXIOM reduce production wildcard -> PERCENT
-- On AUTOMATIC reduce production wildcard -> PERCENT
-- On AT reduce production wildcard -> PERCENT
-- On ASSUMES reduce production wildcard -> PERCENT
-- On ASSIGNS reduce production wildcard -> PERCENT
-- On ASSERT reduce production wildcard -> PERCENT
-- On ARROW reduce production wildcard -> PERCENT
-- On AND reduce production wildcard -> PERCENT
-- On AMP reduce production wildcard -> PERCENT
-- On ALLOCATION reduce production wildcard -> PERCENT
-- On ALLOCATES reduce production wildcard -> PERCENT
-- On ALLOCABLE reduce production wildcard -> PERCENT

State 975:
## Known stack suffix:
## OR
## LR(1) items:
wildcard -> OR . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> OR
-- On WITH reduce production wildcard -> OR
-- On VOLATILE reduce production wildcard -> OR
-- On VOID reduce production wildcard -> OR
-- On VARIANT reduce production wildcard -> OR
-- On VALID_READ reduce production wildcard -> OR
-- On VALID_RANGE reduce production wildcard -> OR
-- On VALID_INDEX reduce production wildcard -> OR
-- On VALID reduce production wildcard -> OR
-- On UNSIGNED reduce production wildcard -> OR
-- On UNION reduce production wildcard -> OR
-- On UNALLOCATED reduce production wildcard -> OR
-- On TYPEOF reduce production wildcard -> OR
-- On TYPENAME reduce production wildcard -> OR
-- On TYPE reduce production wildcard -> OR
-- On TRUE reduce production wildcard -> OR
-- On TILDE reduce production wildcard -> OR
-- On TERMINATES reduce production wildcard -> OR
-- On STRUCT reduce production wildcard -> OR
-- On STRING_LITERAL reduce production wildcard -> OR
-- On STATIC reduce production wildcard -> OR
-- On STAR reduce production wildcard -> OR
-- On SLICE reduce production wildcard -> OR
-- On SLASH reduce production wildcard -> OR
-- On SIZEOF reduce production wildcard -> OR
-- On SIGNED reduce production wildcard -> OR
-- On SHORT reduce production wildcard -> OR
-- On SEPARATED reduce production wildcard -> OR
-- On SEMICOLON reduce production wildcard -> OR
-- On RSQUARE reduce production wildcard -> OR
-- On RPAR reduce production wildcard -> OR
-- On RETURNS reduce production wildcard -> OR
-- On RESULT reduce production wildcard -> OR
-- On REQUIRES reduce production wildcard -> OR
-- On REGISTER reduce production wildcard -> OR
-- On REAL reduce production wildcard -> OR
-- On READS reduce production wildcard -> OR
-- On RBRACE reduce production wildcard -> OR
-- On QUESTION reduce production wildcard -> OR
-- On PREDICATE reduce production wildcard -> OR
-- On PRAGMA reduce production wildcard -> OR
-- On PLUS reduce production wildcard -> OR
-- On PIPE reduce production wildcard -> OR
-- On PERCENT reduce production wildcard -> OR
-- On OR reduce production wildcard -> OR
-- On OLD reduce production wildcard -> OR
-- On OFFSET reduce production wildcard -> OR
-- On NULL reduce production wildcard -> OR
-- On NOTHING reduce production wildcard -> OR
-- On NOT reduce production wildcard -> OR
-- On NE reduce production wildcard -> OR
-- On MODULE reduce production wildcard -> OR
-- On MODEL reduce production wildcard -> OR
-- On MINUS reduce production wildcard -> OR
-- On LTLT reduce production wildcard -> OR
-- On LTCOLON reduce production wildcard -> OR
-- On LT reduce production wildcard -> OR
-- On LSQUARE reduce production wildcard -> OR
-- On LPAR reduce production wildcard -> OR
-- On LOOP reduce production wildcard -> OR
-- On LONG reduce production wildcard -> OR
-- On LOGIC reduce production wildcard -> OR
-- On LET reduce production wildcard -> OR
-- On LEMMA reduce production wildcard -> OR
-- On LE reduce production wildcard -> OR
-- On LBRACE reduce production wildcard -> OR
-- On LAMBDA reduce production wildcard -> OR
-- On LABEL reduce production wildcard -> OR
-- On INVARIANT reduce production wildcard -> OR
-- On INTER reduce production wildcard -> OR
-- On INTEGER reduce production wildcard -> OR
-- On INT reduce production wildcard -> OR
-- On INITIALIZED reduce production wildcard -> OR
-- On INDUCTIVE reduce production wildcard -> OR
-- On INCLUDE reduce production wildcard -> OR
-- On IMPLIES reduce production wildcard -> OR
-- On IMPACT reduce production wildcard -> OR
-- On IFF reduce production wildcard -> OR
-- On IF reduce production wildcard -> OR
-- On IDENTIFIER reduce production wildcard -> OR
-- On HATHAT reduce production wildcard -> OR
-- On HAT reduce production wildcard -> OR
-- On GTGT reduce production wildcard -> OR
-- On GT reduce production wildcard -> OR
-- On GLOBAL reduce production wildcard -> OR
-- On GHOST reduce production wildcard -> OR
-- On GE reduce production wildcard -> OR
-- On FUNCTION reduce production wildcard -> OR
-- On FROM reduce production wildcard -> OR
-- On FRESH reduce production wildcard -> OR
-- On FREES reduce production wildcard -> OR
-- On FREEABLE reduce production wildcard -> OR
-- On FORALL reduce production wildcard -> OR
-- On FOR reduce production wildcard -> OR
-- On FLOAT reduce production wildcard -> OR
-- On FALSE reduce production wildcard -> OR
-- On EXT_LET reduce production wildcard -> OR
-- On EXT_AT reduce production wildcard -> OR
-- On EXITS reduce production wildcard -> OR
-- On EXISTS reduce production wildcard -> OR
-- On EQUAL reduce production wildcard -> OR
-- On EQ reduce production wildcard -> OR
-- On EOF reduce production wildcard -> OR
-- On ENUM reduce production wildcard -> OR
-- On ENSURES reduce production wildcard -> OR
-- On EMPTY reduce production wildcard -> OR
-- On ELSE reduce production wildcard -> OR
-- On DYNAMIC reduce production wildcard -> OR
-- On DOUBLE reduce production wildcard -> OR
-- On DOTDOTDOT reduce production wildcard -> OR
-- On DOTDOT reduce production wildcard -> OR
-- On DOT reduce production wildcard -> OR
-- On DOLLAR reduce production wildcard -> OR
-- On DISJOINT reduce production wildcard -> OR
-- On DECREASES reduce production wildcard -> OR
-- On DANGLING reduce production wildcard -> OR
-- On CUSTOM reduce production wildcard -> OR
-- On CONTRACT reduce production wildcard -> OR
-- On CONTINUES reduce production wildcard -> OR
-- On CONSTANT10 reduce production wildcard -> OR
-- On CONSTANT reduce production wildcard -> OR
-- On CONST reduce production wildcard -> OR
-- On COMPLETE reduce production wildcard -> OR
-- On COMMA reduce production wildcard -> OR
-- On COLONGT reduce production wildcard -> OR
-- On COLONCOLON reduce production wildcard -> OR
-- On COLON2 reduce production wildcard -> OR
-- On COLON reduce production wildcard -> OR
-- On CHAR reduce production wildcard -> OR
-- On CASE reduce production wildcard -> OR
-- On BSUNION reduce production wildcard -> OR
-- On BSTYPE reduce production wildcard -> OR
-- On BREAKS reduce production wildcard -> OR
-- On BOOLEAN reduce production wildcard -> OR
-- On BOOL reduce production wildcard -> OR
-- On BLOCK_LENGTH reduce production wildcard -> OR
-- On BIMPLIES reduce production wildcard -> OR
-- On BIFF reduce production wildcard -> OR
-- On BEHAVIORS reduce production wildcard -> OR
-- On BEHAVIOR reduce production wildcard -> OR
-- On BASE_ADDR reduce production wildcard -> OR
-- On AXIOMATIC reduce production wildcard -> OR
-- On AXIOM reduce production wildcard -> OR
-- On AUTOMATIC reduce production wildcard -> OR
-- On AT reduce production wildcard -> OR
-- On ASSUMES reduce production wildcard -> OR
-- On ASSIGNS reduce production wildcard -> OR
-- On ASSERT reduce production wildcard -> OR
-- On ARROW reduce production wildcard -> OR
-- On AND reduce production wildcard -> OR
-- On AMP reduce production wildcard -> OR
-- On ALLOCATION reduce production wildcard -> OR
-- On ALLOCATES reduce production wildcard -> OR
-- On ALLOCABLE reduce production wildcard -> OR

State 976:
## Known stack suffix:
## OLD
## LR(1) items:
bs_keyword -> OLD . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> OLD
-- On WITH reduce production bs_keyword -> OLD
-- On VOLATILE reduce production bs_keyword -> OLD
-- On VOID reduce production bs_keyword -> OLD
-- On VARIANT reduce production bs_keyword -> OLD
-- On VALID_READ reduce production bs_keyword -> OLD
-- On VALID_RANGE reduce production bs_keyword -> OLD
-- On VALID_INDEX reduce production bs_keyword -> OLD
-- On VALID reduce production bs_keyword -> OLD
-- On UNSIGNED reduce production bs_keyword -> OLD
-- On UNION reduce production bs_keyword -> OLD
-- On UNALLOCATED reduce production bs_keyword -> OLD
-- On TYPEOF reduce production bs_keyword -> OLD
-- On TYPENAME reduce production bs_keyword -> OLD
-- On TYPE reduce production bs_keyword -> OLD
-- On TRUE reduce production bs_keyword -> OLD
-- On TILDE reduce production bs_keyword -> OLD
-- On TERMINATES reduce production bs_keyword -> OLD
-- On STRUCT reduce production bs_keyword -> OLD
-- On STRING_LITERAL reduce production bs_keyword -> OLD
-- On STATIC reduce production bs_keyword -> OLD
-- On STAR reduce production bs_keyword -> OLD
-- On SLICE reduce production bs_keyword -> OLD
-- On SLASH reduce production bs_keyword -> OLD
-- On SIZEOF reduce production bs_keyword -> OLD
-- On SIGNED reduce production bs_keyword -> OLD
-- On SHORT reduce production bs_keyword -> OLD
-- On SEPARATED reduce production bs_keyword -> OLD
-- On SEMICOLON reduce production bs_keyword -> OLD
-- On RSQUARE reduce production bs_keyword -> OLD
-- On RPAR reduce production bs_keyword -> OLD
-- On RETURNS reduce production bs_keyword -> OLD
-- On RESULT reduce production bs_keyword -> OLD
-- On REQUIRES reduce production bs_keyword -> OLD
-- On REGISTER reduce production bs_keyword -> OLD
-- On REAL reduce production bs_keyword -> OLD
-- On READS reduce production bs_keyword -> OLD
-- On RBRACE reduce production bs_keyword -> OLD
-- On QUESTION reduce production bs_keyword -> OLD
-- On PREDICATE reduce production bs_keyword -> OLD
-- On PRAGMA reduce production bs_keyword -> OLD
-- On PLUS reduce production bs_keyword -> OLD
-- On PIPE reduce production bs_keyword -> OLD
-- On PERCENT reduce production bs_keyword -> OLD
-- On OR reduce production bs_keyword -> OLD
-- On OLD reduce production bs_keyword -> OLD
-- On OFFSET reduce production bs_keyword -> OLD
-- On NULL reduce production bs_keyword -> OLD
-- On NOTHING reduce production bs_keyword -> OLD
-- On NOT reduce production bs_keyword -> OLD
-- On NE reduce production bs_keyword -> OLD
-- On MODULE reduce production bs_keyword -> OLD
-- On MODEL reduce production bs_keyword -> OLD
-- On MINUS reduce production bs_keyword -> OLD
-- On LTLT reduce production bs_keyword -> OLD
-- On LTCOLON reduce production bs_keyword -> OLD
-- On LT reduce production bs_keyword -> OLD
-- On LSQUARE reduce production bs_keyword -> OLD
-- On LPAR reduce production bs_keyword -> OLD
-- On LOOP reduce production bs_keyword -> OLD
-- On LONG reduce production bs_keyword -> OLD
-- On LOGIC reduce production bs_keyword -> OLD
-- On LET reduce production bs_keyword -> OLD
-- On LEMMA reduce production bs_keyword -> OLD
-- On LE reduce production bs_keyword -> OLD
-- On LBRACE reduce production bs_keyword -> OLD
-- On LAMBDA reduce production bs_keyword -> OLD
-- On LABEL reduce production bs_keyword -> OLD
-- On INVARIANT reduce production bs_keyword -> OLD
-- On INTER reduce production bs_keyword -> OLD
-- On INTEGER reduce production bs_keyword -> OLD
-- On INT reduce production bs_keyword -> OLD
-- On INITIALIZED reduce production bs_keyword -> OLD
-- On INDUCTIVE reduce production bs_keyword -> OLD
-- On INCLUDE reduce production bs_keyword -> OLD
-- On IMPLIES reduce production bs_keyword -> OLD
-- On IMPACT reduce production bs_keyword -> OLD
-- On IFF reduce production bs_keyword -> OLD
-- On IF reduce production bs_keyword -> OLD
-- On IDENTIFIER reduce production bs_keyword -> OLD
-- On HATHAT reduce production bs_keyword -> OLD
-- On HAT reduce production bs_keyword -> OLD
-- On GTGT reduce production bs_keyword -> OLD
-- On GT reduce production bs_keyword -> OLD
-- On GLOBAL reduce production bs_keyword -> OLD
-- On GHOST reduce production bs_keyword -> OLD
-- On GE reduce production bs_keyword -> OLD
-- On FUNCTION reduce production bs_keyword -> OLD
-- On FROM reduce production bs_keyword -> OLD
-- On FRESH reduce production bs_keyword -> OLD
-- On FREES reduce production bs_keyword -> OLD
-- On FREEABLE reduce production bs_keyword -> OLD
-- On FORALL reduce production bs_keyword -> OLD
-- On FOR reduce production bs_keyword -> OLD
-- On FLOAT reduce production bs_keyword -> OLD
-- On FALSE reduce production bs_keyword -> OLD
-- On EXT_LET reduce production bs_keyword -> OLD
-- On EXT_AT reduce production bs_keyword -> OLD
-- On EXITS reduce production bs_keyword -> OLD
-- On EXISTS reduce production bs_keyword -> OLD
-- On EQUAL reduce production bs_keyword -> OLD
-- On EQ reduce production bs_keyword -> OLD
-- On EOF reduce production bs_keyword -> OLD
-- On ENUM reduce production bs_keyword -> OLD
-- On ENSURES reduce production bs_keyword -> OLD
-- On EMPTY reduce production bs_keyword -> OLD
-- On ELSE reduce production bs_keyword -> OLD
-- On DYNAMIC reduce production bs_keyword -> OLD
-- On DOUBLE reduce production bs_keyword -> OLD
-- On DOTDOTDOT reduce production bs_keyword -> OLD
-- On DOTDOT reduce production bs_keyword -> OLD
-- On DOT reduce production bs_keyword -> OLD
-- On DOLLAR reduce production bs_keyword -> OLD
-- On DISJOINT reduce production bs_keyword -> OLD
-- On DECREASES reduce production bs_keyword -> OLD
-- On DANGLING reduce production bs_keyword -> OLD
-- On CUSTOM reduce production bs_keyword -> OLD
-- On CONTRACT reduce production bs_keyword -> OLD
-- On CONTINUES reduce production bs_keyword -> OLD
-- On CONSTANT10 reduce production bs_keyword -> OLD
-- On CONSTANT reduce production bs_keyword -> OLD
-- On CONST reduce production bs_keyword -> OLD
-- On COMPLETE reduce production bs_keyword -> OLD
-- On COMMA reduce production bs_keyword -> OLD
-- On COLONGT reduce production bs_keyword -> OLD
-- On COLONCOLON reduce production bs_keyword -> OLD
-- On COLON2 reduce production bs_keyword -> OLD
-- On COLON reduce production bs_keyword -> OLD
-- On CHAR reduce production bs_keyword -> OLD
-- On CASE reduce production bs_keyword -> OLD
-- On BSUNION reduce production bs_keyword -> OLD
-- On BSTYPE reduce production bs_keyword -> OLD
-- On BREAKS reduce production bs_keyword -> OLD
-- On BOOLEAN reduce production bs_keyword -> OLD
-- On BOOL reduce production bs_keyword -> OLD
-- On BLOCK_LENGTH reduce production bs_keyword -> OLD
-- On BIMPLIES reduce production bs_keyword -> OLD
-- On BIFF reduce production bs_keyword -> OLD
-- On BEHAVIORS reduce production bs_keyword -> OLD
-- On BEHAVIOR reduce production bs_keyword -> OLD
-- On BASE_ADDR reduce production bs_keyword -> OLD
-- On AXIOMATIC reduce production bs_keyword -> OLD
-- On AXIOM reduce production bs_keyword -> OLD
-- On AUTOMATIC reduce production bs_keyword -> OLD
-- On AT reduce production bs_keyword -> OLD
-- On ASSUMES reduce production bs_keyword -> OLD
-- On ASSIGNS reduce production bs_keyword -> OLD
-- On ASSERT reduce production bs_keyword -> OLD
-- On ARROW reduce production bs_keyword -> OLD
-- On AND reduce production bs_keyword -> OLD
-- On AMP reduce production bs_keyword -> OLD
-- On ALLOCATION reduce production bs_keyword -> OLD
-- On ALLOCATES reduce production bs_keyword -> OLD
-- On ALLOCABLE reduce production bs_keyword -> OLD

State 977:
## Known stack suffix:
## OFFSET
## LR(1) items:
bs_keyword -> OFFSET . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> OFFSET
-- On WITH reduce production bs_keyword -> OFFSET
-- On VOLATILE reduce production bs_keyword -> OFFSET
-- On VOID reduce production bs_keyword -> OFFSET
-- On VARIANT reduce production bs_keyword -> OFFSET
-- On VALID_READ reduce production bs_keyword -> OFFSET
-- On VALID_RANGE reduce production bs_keyword -> OFFSET
-- On VALID_INDEX reduce production bs_keyword -> OFFSET
-- On VALID reduce production bs_keyword -> OFFSET
-- On UNSIGNED reduce production bs_keyword -> OFFSET
-- On UNION reduce production bs_keyword -> OFFSET
-- On UNALLOCATED reduce production bs_keyword -> OFFSET
-- On TYPEOF reduce production bs_keyword -> OFFSET
-- On TYPENAME reduce production bs_keyword -> OFFSET
-- On TYPE reduce production bs_keyword -> OFFSET
-- On TRUE reduce production bs_keyword -> OFFSET
-- On TILDE reduce production bs_keyword -> OFFSET
-- On TERMINATES reduce production bs_keyword -> OFFSET
-- On STRUCT reduce production bs_keyword -> OFFSET
-- On STRING_LITERAL reduce production bs_keyword -> OFFSET
-- On STATIC reduce production bs_keyword -> OFFSET
-- On STAR reduce production bs_keyword -> OFFSET
-- On SLICE reduce production bs_keyword -> OFFSET
-- On SLASH reduce production bs_keyword -> OFFSET
-- On SIZEOF reduce production bs_keyword -> OFFSET
-- On SIGNED reduce production bs_keyword -> OFFSET
-- On SHORT reduce production bs_keyword -> OFFSET
-- On SEPARATED reduce production bs_keyword -> OFFSET
-- On SEMICOLON reduce production bs_keyword -> OFFSET
-- On RSQUARE reduce production bs_keyword -> OFFSET
-- On RPAR reduce production bs_keyword -> OFFSET
-- On RETURNS reduce production bs_keyword -> OFFSET
-- On RESULT reduce production bs_keyword -> OFFSET
-- On REQUIRES reduce production bs_keyword -> OFFSET
-- On REGISTER reduce production bs_keyword -> OFFSET
-- On REAL reduce production bs_keyword -> OFFSET
-- On READS reduce production bs_keyword -> OFFSET
-- On RBRACE reduce production bs_keyword -> OFFSET
-- On QUESTION reduce production bs_keyword -> OFFSET
-- On PREDICATE reduce production bs_keyword -> OFFSET
-- On PRAGMA reduce production bs_keyword -> OFFSET
-- On PLUS reduce production bs_keyword -> OFFSET
-- On PIPE reduce production bs_keyword -> OFFSET
-- On PERCENT reduce production bs_keyword -> OFFSET
-- On OR reduce production bs_keyword -> OFFSET
-- On OLD reduce production bs_keyword -> OFFSET
-- On OFFSET reduce production bs_keyword -> OFFSET
-- On NULL reduce production bs_keyword -> OFFSET
-- On NOTHING reduce production bs_keyword -> OFFSET
-- On NOT reduce production bs_keyword -> OFFSET
-- On NE reduce production bs_keyword -> OFFSET
-- On MODULE reduce production bs_keyword -> OFFSET
-- On MODEL reduce production bs_keyword -> OFFSET
-- On MINUS reduce production bs_keyword -> OFFSET
-- On LTLT reduce production bs_keyword -> OFFSET
-- On LTCOLON reduce production bs_keyword -> OFFSET
-- On LT reduce production bs_keyword -> OFFSET
-- On LSQUARE reduce production bs_keyword -> OFFSET
-- On LPAR reduce production bs_keyword -> OFFSET
-- On LOOP reduce production bs_keyword -> OFFSET
-- On LONG reduce production bs_keyword -> OFFSET
-- On LOGIC reduce production bs_keyword -> OFFSET
-- On LET reduce production bs_keyword -> OFFSET
-- On LEMMA reduce production bs_keyword -> OFFSET
-- On LE reduce production bs_keyword -> OFFSET
-- On LBRACE reduce production bs_keyword -> OFFSET
-- On LAMBDA reduce production bs_keyword -> OFFSET
-- On LABEL reduce production bs_keyword -> OFFSET
-- On INVARIANT reduce production bs_keyword -> OFFSET
-- On INTER reduce production bs_keyword -> OFFSET
-- On INTEGER reduce production bs_keyword -> OFFSET
-- On INT reduce production bs_keyword -> OFFSET
-- On INITIALIZED reduce production bs_keyword -> OFFSET
-- On INDUCTIVE reduce production bs_keyword -> OFFSET
-- On INCLUDE reduce production bs_keyword -> OFFSET
-- On IMPLIES reduce production bs_keyword -> OFFSET
-- On IMPACT reduce production bs_keyword -> OFFSET
-- On IFF reduce production bs_keyword -> OFFSET
-- On IF reduce production bs_keyword -> OFFSET
-- On IDENTIFIER reduce production bs_keyword -> OFFSET
-- On HATHAT reduce production bs_keyword -> OFFSET
-- On HAT reduce production bs_keyword -> OFFSET
-- On GTGT reduce production bs_keyword -> OFFSET
-- On GT reduce production bs_keyword -> OFFSET
-- On GLOBAL reduce production bs_keyword -> OFFSET
-- On GHOST reduce production bs_keyword -> OFFSET
-- On GE reduce production bs_keyword -> OFFSET
-- On FUNCTION reduce production bs_keyword -> OFFSET
-- On FROM reduce production bs_keyword -> OFFSET
-- On FRESH reduce production bs_keyword -> OFFSET
-- On FREES reduce production bs_keyword -> OFFSET
-- On FREEABLE reduce production bs_keyword -> OFFSET
-- On FORALL reduce production bs_keyword -> OFFSET
-- On FOR reduce production bs_keyword -> OFFSET
-- On FLOAT reduce production bs_keyword -> OFFSET
-- On FALSE reduce production bs_keyword -> OFFSET
-- On EXT_LET reduce production bs_keyword -> OFFSET
-- On EXT_AT reduce production bs_keyword -> OFFSET
-- On EXITS reduce production bs_keyword -> OFFSET
-- On EXISTS reduce production bs_keyword -> OFFSET
-- On EQUAL reduce production bs_keyword -> OFFSET
-- On EQ reduce production bs_keyword -> OFFSET
-- On EOF reduce production bs_keyword -> OFFSET
-- On ENUM reduce production bs_keyword -> OFFSET
-- On ENSURES reduce production bs_keyword -> OFFSET
-- On EMPTY reduce production bs_keyword -> OFFSET
-- On ELSE reduce production bs_keyword -> OFFSET
-- On DYNAMIC reduce production bs_keyword -> OFFSET
-- On DOUBLE reduce production bs_keyword -> OFFSET
-- On DOTDOTDOT reduce production bs_keyword -> OFFSET
-- On DOTDOT reduce production bs_keyword -> OFFSET
-- On DOT reduce production bs_keyword -> OFFSET
-- On DOLLAR reduce production bs_keyword -> OFFSET
-- On DISJOINT reduce production bs_keyword -> OFFSET
-- On DECREASES reduce production bs_keyword -> OFFSET
-- On DANGLING reduce production bs_keyword -> OFFSET
-- On CUSTOM reduce production bs_keyword -> OFFSET
-- On CONTRACT reduce production bs_keyword -> OFFSET
-- On CONTINUES reduce production bs_keyword -> OFFSET
-- On CONSTANT10 reduce production bs_keyword -> OFFSET
-- On CONSTANT reduce production bs_keyword -> OFFSET
-- On CONST reduce production bs_keyword -> OFFSET
-- On COMPLETE reduce production bs_keyword -> OFFSET
-- On COMMA reduce production bs_keyword -> OFFSET
-- On COLONGT reduce production bs_keyword -> OFFSET
-- On COLONCOLON reduce production bs_keyword -> OFFSET
-- On COLON2 reduce production bs_keyword -> OFFSET
-- On COLON reduce production bs_keyword -> OFFSET
-- On CHAR reduce production bs_keyword -> OFFSET
-- On CASE reduce production bs_keyword -> OFFSET
-- On BSUNION reduce production bs_keyword -> OFFSET
-- On BSTYPE reduce production bs_keyword -> OFFSET
-- On BREAKS reduce production bs_keyword -> OFFSET
-- On BOOLEAN reduce production bs_keyword -> OFFSET
-- On BOOL reduce production bs_keyword -> OFFSET
-- On BLOCK_LENGTH reduce production bs_keyword -> OFFSET
-- On BIMPLIES reduce production bs_keyword -> OFFSET
-- On BIFF reduce production bs_keyword -> OFFSET
-- On BEHAVIORS reduce production bs_keyword -> OFFSET
-- On BEHAVIOR reduce production bs_keyword -> OFFSET
-- On BASE_ADDR reduce production bs_keyword -> OFFSET
-- On AXIOMATIC reduce production bs_keyword -> OFFSET
-- On AXIOM reduce production bs_keyword -> OFFSET
-- On AUTOMATIC reduce production bs_keyword -> OFFSET
-- On AT reduce production bs_keyword -> OFFSET
-- On ASSUMES reduce production bs_keyword -> OFFSET
-- On ASSIGNS reduce production bs_keyword -> OFFSET
-- On ASSERT reduce production bs_keyword -> OFFSET
-- On ARROW reduce production bs_keyword -> OFFSET
-- On AND reduce production bs_keyword -> OFFSET
-- On AMP reduce production bs_keyword -> OFFSET
-- On ALLOCATION reduce production bs_keyword -> OFFSET
-- On ALLOCATES reduce production bs_keyword -> OFFSET
-- On ALLOCABLE reduce production bs_keyword -> OFFSET

State 978:
## Known stack suffix:
## NULL
## LR(1) items:
bs_keyword -> NULL . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> NULL
-- On WITH reduce production bs_keyword -> NULL
-- On VOLATILE reduce production bs_keyword -> NULL
-- On VOID reduce production bs_keyword -> NULL
-- On VARIANT reduce production bs_keyword -> NULL
-- On VALID_READ reduce production bs_keyword -> NULL
-- On VALID_RANGE reduce production bs_keyword -> NULL
-- On VALID_INDEX reduce production bs_keyword -> NULL
-- On VALID reduce production bs_keyword -> NULL
-- On UNSIGNED reduce production bs_keyword -> NULL
-- On UNION reduce production bs_keyword -> NULL
-- On UNALLOCATED reduce production bs_keyword -> NULL
-- On TYPEOF reduce production bs_keyword -> NULL
-- On TYPENAME reduce production bs_keyword -> NULL
-- On TYPE reduce production bs_keyword -> NULL
-- On TRUE reduce production bs_keyword -> NULL
-- On TILDE reduce production bs_keyword -> NULL
-- On TERMINATES reduce production bs_keyword -> NULL
-- On STRUCT reduce production bs_keyword -> NULL
-- On STRING_LITERAL reduce production bs_keyword -> NULL
-- On STATIC reduce production bs_keyword -> NULL
-- On STAR reduce production bs_keyword -> NULL
-- On SLICE reduce production bs_keyword -> NULL
-- On SLASH reduce production bs_keyword -> NULL
-- On SIZEOF reduce production bs_keyword -> NULL
-- On SIGNED reduce production bs_keyword -> NULL
-- On SHORT reduce production bs_keyword -> NULL
-- On SEPARATED reduce production bs_keyword -> NULL
-- On SEMICOLON reduce production bs_keyword -> NULL
-- On RSQUARE reduce production bs_keyword -> NULL
-- On RPAR reduce production bs_keyword -> NULL
-- On RETURNS reduce production bs_keyword -> NULL
-- On RESULT reduce production bs_keyword -> NULL
-- On REQUIRES reduce production bs_keyword -> NULL
-- On REGISTER reduce production bs_keyword -> NULL
-- On REAL reduce production bs_keyword -> NULL
-- On READS reduce production bs_keyword -> NULL
-- On RBRACE reduce production bs_keyword -> NULL
-- On QUESTION reduce production bs_keyword -> NULL
-- On PREDICATE reduce production bs_keyword -> NULL
-- On PRAGMA reduce production bs_keyword -> NULL
-- On PLUS reduce production bs_keyword -> NULL
-- On PIPE reduce production bs_keyword -> NULL
-- On PERCENT reduce production bs_keyword -> NULL
-- On OR reduce production bs_keyword -> NULL
-- On OLD reduce production bs_keyword -> NULL
-- On OFFSET reduce production bs_keyword -> NULL
-- On NULL reduce production bs_keyword -> NULL
-- On NOTHING reduce production bs_keyword -> NULL
-- On NOT reduce production bs_keyword -> NULL
-- On NE reduce production bs_keyword -> NULL
-- On MODULE reduce production bs_keyword -> NULL
-- On MODEL reduce production bs_keyword -> NULL
-- On MINUS reduce production bs_keyword -> NULL
-- On LTLT reduce production bs_keyword -> NULL
-- On LTCOLON reduce production bs_keyword -> NULL
-- On LT reduce production bs_keyword -> NULL
-- On LSQUARE reduce production bs_keyword -> NULL
-- On LPAR reduce production bs_keyword -> NULL
-- On LOOP reduce production bs_keyword -> NULL
-- On LONG reduce production bs_keyword -> NULL
-- On LOGIC reduce production bs_keyword -> NULL
-- On LET reduce production bs_keyword -> NULL
-- On LEMMA reduce production bs_keyword -> NULL
-- On LE reduce production bs_keyword -> NULL
-- On LBRACE reduce production bs_keyword -> NULL
-- On LAMBDA reduce production bs_keyword -> NULL
-- On LABEL reduce production bs_keyword -> NULL
-- On INVARIANT reduce production bs_keyword -> NULL
-- On INTER reduce production bs_keyword -> NULL
-- On INTEGER reduce production bs_keyword -> NULL
-- On INT reduce production bs_keyword -> NULL
-- On INITIALIZED reduce production bs_keyword -> NULL
-- On INDUCTIVE reduce production bs_keyword -> NULL
-- On INCLUDE reduce production bs_keyword -> NULL
-- On IMPLIES reduce production bs_keyword -> NULL
-- On IMPACT reduce production bs_keyword -> NULL
-- On IFF reduce production bs_keyword -> NULL
-- On IF reduce production bs_keyword -> NULL
-- On IDENTIFIER reduce production bs_keyword -> NULL
-- On HATHAT reduce production bs_keyword -> NULL
-- On HAT reduce production bs_keyword -> NULL
-- On GTGT reduce production bs_keyword -> NULL
-- On GT reduce production bs_keyword -> NULL
-- On GLOBAL reduce production bs_keyword -> NULL
-- On GHOST reduce production bs_keyword -> NULL
-- On GE reduce production bs_keyword -> NULL
-- On FUNCTION reduce production bs_keyword -> NULL
-- On FROM reduce production bs_keyword -> NULL
-- On FRESH reduce production bs_keyword -> NULL
-- On FREES reduce production bs_keyword -> NULL
-- On FREEABLE reduce production bs_keyword -> NULL
-- On FORALL reduce production bs_keyword -> NULL
-- On FOR reduce production bs_keyword -> NULL
-- On FLOAT reduce production bs_keyword -> NULL
-- On FALSE reduce production bs_keyword -> NULL
-- On EXT_LET reduce production bs_keyword -> NULL
-- On EXT_AT reduce production bs_keyword -> NULL
-- On EXITS reduce production bs_keyword -> NULL
-- On EXISTS reduce production bs_keyword -> NULL
-- On EQUAL reduce production bs_keyword -> NULL
-- On EQ reduce production bs_keyword -> NULL
-- On EOF reduce production bs_keyword -> NULL
-- On ENUM reduce production bs_keyword -> NULL
-- On ENSURES reduce production bs_keyword -> NULL
-- On EMPTY reduce production bs_keyword -> NULL
-- On ELSE reduce production bs_keyword -> NULL
-- On DYNAMIC reduce production bs_keyword -> NULL
-- On DOUBLE reduce production bs_keyword -> NULL
-- On DOTDOTDOT reduce production bs_keyword -> NULL
-- On DOTDOT reduce production bs_keyword -> NULL
-- On DOT reduce production bs_keyword -> NULL
-- On DOLLAR reduce production bs_keyword -> NULL
-- On DISJOINT reduce production bs_keyword -> NULL
-- On DECREASES reduce production bs_keyword -> NULL
-- On DANGLING reduce production bs_keyword -> NULL
-- On CUSTOM reduce production bs_keyword -> NULL
-- On CONTRACT reduce production bs_keyword -> NULL
-- On CONTINUES reduce production bs_keyword -> NULL
-- On CONSTANT10 reduce production bs_keyword -> NULL
-- On CONSTANT reduce production bs_keyword -> NULL
-- On CONST reduce production bs_keyword -> NULL
-- On COMPLETE reduce production bs_keyword -> NULL
-- On COMMA reduce production bs_keyword -> NULL
-- On COLONGT reduce production bs_keyword -> NULL
-- On COLONCOLON reduce production bs_keyword -> NULL
-- On COLON2 reduce production bs_keyword -> NULL
-- On COLON reduce production bs_keyword -> NULL
-- On CHAR reduce production bs_keyword -> NULL
-- On CASE reduce production bs_keyword -> NULL
-- On BSUNION reduce production bs_keyword -> NULL
-- On BSTYPE reduce production bs_keyword -> NULL
-- On BREAKS reduce production bs_keyword -> NULL
-- On BOOLEAN reduce production bs_keyword -> NULL
-- On BOOL reduce production bs_keyword -> NULL
-- On BLOCK_LENGTH reduce production bs_keyword -> NULL
-- On BIMPLIES reduce production bs_keyword -> NULL
-- On BIFF reduce production bs_keyword -> NULL
-- On BEHAVIORS reduce production bs_keyword -> NULL
-- On BEHAVIOR reduce production bs_keyword -> NULL
-- On BASE_ADDR reduce production bs_keyword -> NULL
-- On AXIOMATIC reduce production bs_keyword -> NULL
-- On AXIOM reduce production bs_keyword -> NULL
-- On AUTOMATIC reduce production bs_keyword -> NULL
-- On AT reduce production bs_keyword -> NULL
-- On ASSUMES reduce production bs_keyword -> NULL
-- On ASSIGNS reduce production bs_keyword -> NULL
-- On ASSERT reduce production bs_keyword -> NULL
-- On ARROW reduce production bs_keyword -> NULL
-- On AND reduce production bs_keyword -> NULL
-- On AMP reduce production bs_keyword -> NULL
-- On ALLOCATION reduce production bs_keyword -> NULL
-- On ALLOCATES reduce production bs_keyword -> NULL
-- On ALLOCABLE reduce production bs_keyword -> NULL

State 979:
## Known stack suffix:
## NOTHING
## LR(1) items:
bs_keyword -> NOTHING . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> NOTHING
-- On WITH reduce production bs_keyword -> NOTHING
-- On VOLATILE reduce production bs_keyword -> NOTHING
-- On VOID reduce production bs_keyword -> NOTHING
-- On VARIANT reduce production bs_keyword -> NOTHING
-- On VALID_READ reduce production bs_keyword -> NOTHING
-- On VALID_RANGE reduce production bs_keyword -> NOTHING
-- On VALID_INDEX reduce production bs_keyword -> NOTHING
-- On VALID reduce production bs_keyword -> NOTHING
-- On UNSIGNED reduce production bs_keyword -> NOTHING
-- On UNION reduce production bs_keyword -> NOTHING
-- On UNALLOCATED reduce production bs_keyword -> NOTHING
-- On TYPEOF reduce production bs_keyword -> NOTHING
-- On TYPENAME reduce production bs_keyword -> NOTHING
-- On TYPE reduce production bs_keyword -> NOTHING
-- On TRUE reduce production bs_keyword -> NOTHING
-- On TILDE reduce production bs_keyword -> NOTHING
-- On TERMINATES reduce production bs_keyword -> NOTHING
-- On STRUCT reduce production bs_keyword -> NOTHING
-- On STRING_LITERAL reduce production bs_keyword -> NOTHING
-- On STATIC reduce production bs_keyword -> NOTHING
-- On STAR reduce production bs_keyword -> NOTHING
-- On SLICE reduce production bs_keyword -> NOTHING
-- On SLASH reduce production bs_keyword -> NOTHING
-- On SIZEOF reduce production bs_keyword -> NOTHING
-- On SIGNED reduce production bs_keyword -> NOTHING
-- On SHORT reduce production bs_keyword -> NOTHING
-- On SEPARATED reduce production bs_keyword -> NOTHING
-- On SEMICOLON reduce production bs_keyword -> NOTHING
-- On RSQUARE reduce production bs_keyword -> NOTHING
-- On RPAR reduce production bs_keyword -> NOTHING
-- On RETURNS reduce production bs_keyword -> NOTHING
-- On RESULT reduce production bs_keyword -> NOTHING
-- On REQUIRES reduce production bs_keyword -> NOTHING
-- On REGISTER reduce production bs_keyword -> NOTHING
-- On REAL reduce production bs_keyword -> NOTHING
-- On READS reduce production bs_keyword -> NOTHING
-- On RBRACE reduce production bs_keyword -> NOTHING
-- On QUESTION reduce production bs_keyword -> NOTHING
-- On PREDICATE reduce production bs_keyword -> NOTHING
-- On PRAGMA reduce production bs_keyword -> NOTHING
-- On PLUS reduce production bs_keyword -> NOTHING
-- On PIPE reduce production bs_keyword -> NOTHING
-- On PERCENT reduce production bs_keyword -> NOTHING
-- On OR reduce production bs_keyword -> NOTHING
-- On OLD reduce production bs_keyword -> NOTHING
-- On OFFSET reduce production bs_keyword -> NOTHING
-- On NULL reduce production bs_keyword -> NOTHING
-- On NOTHING reduce production bs_keyword -> NOTHING
-- On NOT reduce production bs_keyword -> NOTHING
-- On NE reduce production bs_keyword -> NOTHING
-- On MODULE reduce production bs_keyword -> NOTHING
-- On MODEL reduce production bs_keyword -> NOTHING
-- On MINUS reduce production bs_keyword -> NOTHING
-- On LTLT reduce production bs_keyword -> NOTHING
-- On LTCOLON reduce production bs_keyword -> NOTHING
-- On LT reduce production bs_keyword -> NOTHING
-- On LSQUARE reduce production bs_keyword -> NOTHING
-- On LPAR reduce production bs_keyword -> NOTHING
-- On LOOP reduce production bs_keyword -> NOTHING
-- On LONG reduce production bs_keyword -> NOTHING
-- On LOGIC reduce production bs_keyword -> NOTHING
-- On LET reduce production bs_keyword -> NOTHING
-- On LEMMA reduce production bs_keyword -> NOTHING
-- On LE reduce production bs_keyword -> NOTHING
-- On LBRACE reduce production bs_keyword -> NOTHING
-- On LAMBDA reduce production bs_keyword -> NOTHING
-- On LABEL reduce production bs_keyword -> NOTHING
-- On INVARIANT reduce production bs_keyword -> NOTHING
-- On INTER reduce production bs_keyword -> NOTHING
-- On INTEGER reduce production bs_keyword -> NOTHING
-- On INT reduce production bs_keyword -> NOTHING
-- On INITIALIZED reduce production bs_keyword -> NOTHING
-- On INDUCTIVE reduce production bs_keyword -> NOTHING
-- On INCLUDE reduce production bs_keyword -> NOTHING
-- On IMPLIES reduce production bs_keyword -> NOTHING
-- On IMPACT reduce production bs_keyword -> NOTHING
-- On IFF reduce production bs_keyword -> NOTHING
-- On IF reduce production bs_keyword -> NOTHING
-- On IDENTIFIER reduce production bs_keyword -> NOTHING
-- On HATHAT reduce production bs_keyword -> NOTHING
-- On HAT reduce production bs_keyword -> NOTHING
-- On GTGT reduce production bs_keyword -> NOTHING
-- On GT reduce production bs_keyword -> NOTHING
-- On GLOBAL reduce production bs_keyword -> NOTHING
-- On GHOST reduce production bs_keyword -> NOTHING
-- On GE reduce production bs_keyword -> NOTHING
-- On FUNCTION reduce production bs_keyword -> NOTHING
-- On FROM reduce production bs_keyword -> NOTHING
-- On FRESH reduce production bs_keyword -> NOTHING
-- On FREES reduce production bs_keyword -> NOTHING
-- On FREEABLE reduce production bs_keyword -> NOTHING
-- On FORALL reduce production bs_keyword -> NOTHING
-- On FOR reduce production bs_keyword -> NOTHING
-- On FLOAT reduce production bs_keyword -> NOTHING
-- On FALSE reduce production bs_keyword -> NOTHING
-- On EXT_LET reduce production bs_keyword -> NOTHING
-- On EXT_AT reduce production bs_keyword -> NOTHING
-- On EXITS reduce production bs_keyword -> NOTHING
-- On EXISTS reduce production bs_keyword -> NOTHING
-- On EQUAL reduce production bs_keyword -> NOTHING
-- On EQ reduce production bs_keyword -> NOTHING
-- On EOF reduce production bs_keyword -> NOTHING
-- On ENUM reduce production bs_keyword -> NOTHING
-- On ENSURES reduce production bs_keyword -> NOTHING
-- On EMPTY reduce production bs_keyword -> NOTHING
-- On ELSE reduce production bs_keyword -> NOTHING
-- On DYNAMIC reduce production bs_keyword -> NOTHING
-- On DOUBLE reduce production bs_keyword -> NOTHING
-- On DOTDOTDOT reduce production bs_keyword -> NOTHING
-- On DOTDOT reduce production bs_keyword -> NOTHING
-- On DOT reduce production bs_keyword -> NOTHING
-- On DOLLAR reduce production bs_keyword -> NOTHING
-- On DISJOINT reduce production bs_keyword -> NOTHING
-- On DECREASES reduce production bs_keyword -> NOTHING
-- On DANGLING reduce production bs_keyword -> NOTHING
-- On CUSTOM reduce production bs_keyword -> NOTHING
-- On CONTRACT reduce production bs_keyword -> NOTHING
-- On CONTINUES reduce production bs_keyword -> NOTHING
-- On CONSTANT10 reduce production bs_keyword -> NOTHING
-- On CONSTANT reduce production bs_keyword -> NOTHING
-- On CONST reduce production bs_keyword -> NOTHING
-- On COMPLETE reduce production bs_keyword -> NOTHING
-- On COMMA reduce production bs_keyword -> NOTHING
-- On COLONGT reduce production bs_keyword -> NOTHING
-- On COLONCOLON reduce production bs_keyword -> NOTHING
-- On COLON2 reduce production bs_keyword -> NOTHING
-- On COLON reduce production bs_keyword -> NOTHING
-- On CHAR reduce production bs_keyword -> NOTHING
-- On CASE reduce production bs_keyword -> NOTHING
-- On BSUNION reduce production bs_keyword -> NOTHING
-- On BSTYPE reduce production bs_keyword -> NOTHING
-- On BREAKS reduce production bs_keyword -> NOTHING
-- On BOOLEAN reduce production bs_keyword -> NOTHING
-- On BOOL reduce production bs_keyword -> NOTHING
-- On BLOCK_LENGTH reduce production bs_keyword -> NOTHING
-- On BIMPLIES reduce production bs_keyword -> NOTHING
-- On BIFF reduce production bs_keyword -> NOTHING
-- On BEHAVIORS reduce production bs_keyword -> NOTHING
-- On BEHAVIOR reduce production bs_keyword -> NOTHING
-- On BASE_ADDR reduce production bs_keyword -> NOTHING
-- On AXIOMATIC reduce production bs_keyword -> NOTHING
-- On AXIOM reduce production bs_keyword -> NOTHING
-- On AUTOMATIC reduce production bs_keyword -> NOTHING
-- On AT reduce production bs_keyword -> NOTHING
-- On ASSUMES reduce production bs_keyword -> NOTHING
-- On ASSIGNS reduce production bs_keyword -> NOTHING
-- On ASSERT reduce production bs_keyword -> NOTHING
-- On ARROW reduce production bs_keyword -> NOTHING
-- On AND reduce production bs_keyword -> NOTHING
-- On AMP reduce production bs_keyword -> NOTHING
-- On ALLOCATION reduce production bs_keyword -> NOTHING
-- On ALLOCATES reduce production bs_keyword -> NOTHING
-- On ALLOCABLE reduce production bs_keyword -> NOTHING

State 980:
## Known stack suffix:
## NOT
## LR(1) items:
wildcard -> NOT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> NOT
-- On WITH reduce production wildcard -> NOT
-- On VOLATILE reduce production wildcard -> NOT
-- On VOID reduce production wildcard -> NOT
-- On VARIANT reduce production wildcard -> NOT
-- On VALID_READ reduce production wildcard -> NOT
-- On VALID_RANGE reduce production wildcard -> NOT
-- On VALID_INDEX reduce production wildcard -> NOT
-- On VALID reduce production wildcard -> NOT
-- On UNSIGNED reduce production wildcard -> NOT
-- On UNION reduce production wildcard -> NOT
-- On UNALLOCATED reduce production wildcard -> NOT
-- On TYPEOF reduce production wildcard -> NOT
-- On TYPENAME reduce production wildcard -> NOT
-- On TYPE reduce production wildcard -> NOT
-- On TRUE reduce production wildcard -> NOT
-- On TILDE reduce production wildcard -> NOT
-- On TERMINATES reduce production wildcard -> NOT
-- On STRUCT reduce production wildcard -> NOT
-- On STRING_LITERAL reduce production wildcard -> NOT
-- On STATIC reduce production wildcard -> NOT
-- On STAR reduce production wildcard -> NOT
-- On SLICE reduce production wildcard -> NOT
-- On SLASH reduce production wildcard -> NOT
-- On SIZEOF reduce production wildcard -> NOT
-- On SIGNED reduce production wildcard -> NOT
-- On SHORT reduce production wildcard -> NOT
-- On SEPARATED reduce production wildcard -> NOT
-- On SEMICOLON reduce production wildcard -> NOT
-- On RSQUARE reduce production wildcard -> NOT
-- On RPAR reduce production wildcard -> NOT
-- On RETURNS reduce production wildcard -> NOT
-- On RESULT reduce production wildcard -> NOT
-- On REQUIRES reduce production wildcard -> NOT
-- On REGISTER reduce production wildcard -> NOT
-- On REAL reduce production wildcard -> NOT
-- On READS reduce production wildcard -> NOT
-- On RBRACE reduce production wildcard -> NOT
-- On QUESTION reduce production wildcard -> NOT
-- On PREDICATE reduce production wildcard -> NOT
-- On PRAGMA reduce production wildcard -> NOT
-- On PLUS reduce production wildcard -> NOT
-- On PIPE reduce production wildcard -> NOT
-- On PERCENT reduce production wildcard -> NOT
-- On OR reduce production wildcard -> NOT
-- On OLD reduce production wildcard -> NOT
-- On OFFSET reduce production wildcard -> NOT
-- On NULL reduce production wildcard -> NOT
-- On NOTHING reduce production wildcard -> NOT
-- On NOT reduce production wildcard -> NOT
-- On NE reduce production wildcard -> NOT
-- On MODULE reduce production wildcard -> NOT
-- On MODEL reduce production wildcard -> NOT
-- On MINUS reduce production wildcard -> NOT
-- On LTLT reduce production wildcard -> NOT
-- On LTCOLON reduce production wildcard -> NOT
-- On LT reduce production wildcard -> NOT
-- On LSQUARE reduce production wildcard -> NOT
-- On LPAR reduce production wildcard -> NOT
-- On LOOP reduce production wildcard -> NOT
-- On LONG reduce production wildcard -> NOT
-- On LOGIC reduce production wildcard -> NOT
-- On LET reduce production wildcard -> NOT
-- On LEMMA reduce production wildcard -> NOT
-- On LE reduce production wildcard -> NOT
-- On LBRACE reduce production wildcard -> NOT
-- On LAMBDA reduce production wildcard -> NOT
-- On LABEL reduce production wildcard -> NOT
-- On INVARIANT reduce production wildcard -> NOT
-- On INTER reduce production wildcard -> NOT
-- On INTEGER reduce production wildcard -> NOT
-- On INT reduce production wildcard -> NOT
-- On INITIALIZED reduce production wildcard -> NOT
-- On INDUCTIVE reduce production wildcard -> NOT
-- On INCLUDE reduce production wildcard -> NOT
-- On IMPLIES reduce production wildcard -> NOT
-- On IMPACT reduce production wildcard -> NOT
-- On IFF reduce production wildcard -> NOT
-- On IF reduce production wildcard -> NOT
-- On IDENTIFIER reduce production wildcard -> NOT
-- On HATHAT reduce production wildcard -> NOT
-- On HAT reduce production wildcard -> NOT
-- On GTGT reduce production wildcard -> NOT
-- On GT reduce production wildcard -> NOT
-- On GLOBAL reduce production wildcard -> NOT
-- On GHOST reduce production wildcard -> NOT
-- On GE reduce production wildcard -> NOT
-- On FUNCTION reduce production wildcard -> NOT
-- On FROM reduce production wildcard -> NOT
-- On FRESH reduce production wildcard -> NOT
-- On FREES reduce production wildcard -> NOT
-- On FREEABLE reduce production wildcard -> NOT
-- On FORALL reduce production wildcard -> NOT
-- On FOR reduce production wildcard -> NOT
-- On FLOAT reduce production wildcard -> NOT
-- On FALSE reduce production wildcard -> NOT
-- On EXT_LET reduce production wildcard -> NOT
-- On EXT_AT reduce production wildcard -> NOT
-- On EXITS reduce production wildcard -> NOT
-- On EXISTS reduce production wildcard -> NOT
-- On EQUAL reduce production wildcard -> NOT
-- On EQ reduce production wildcard -> NOT
-- On EOF reduce production wildcard -> NOT
-- On ENUM reduce production wildcard -> NOT
-- On ENSURES reduce production wildcard -> NOT
-- On EMPTY reduce production wildcard -> NOT
-- On ELSE reduce production wildcard -> NOT
-- On DYNAMIC reduce production wildcard -> NOT
-- On DOUBLE reduce production wildcard -> NOT
-- On DOTDOTDOT reduce production wildcard -> NOT
-- On DOTDOT reduce production wildcard -> NOT
-- On DOT reduce production wildcard -> NOT
-- On DOLLAR reduce production wildcard -> NOT
-- On DISJOINT reduce production wildcard -> NOT
-- On DECREASES reduce production wildcard -> NOT
-- On DANGLING reduce production wildcard -> NOT
-- On CUSTOM reduce production wildcard -> NOT
-- On CONTRACT reduce production wildcard -> NOT
-- On CONTINUES reduce production wildcard -> NOT
-- On CONSTANT10 reduce production wildcard -> NOT
-- On CONSTANT reduce production wildcard -> NOT
-- On CONST reduce production wildcard -> NOT
-- On COMPLETE reduce production wildcard -> NOT
-- On COMMA reduce production wildcard -> NOT
-- On COLONGT reduce production wildcard -> NOT
-- On COLONCOLON reduce production wildcard -> NOT
-- On COLON2 reduce production wildcard -> NOT
-- On COLON reduce production wildcard -> NOT
-- On CHAR reduce production wildcard -> NOT
-- On CASE reduce production wildcard -> NOT
-- On BSUNION reduce production wildcard -> NOT
-- On BSTYPE reduce production wildcard -> NOT
-- On BREAKS reduce production wildcard -> NOT
-- On BOOLEAN reduce production wildcard -> NOT
-- On BOOL reduce production wildcard -> NOT
-- On BLOCK_LENGTH reduce production wildcard -> NOT
-- On BIMPLIES reduce production wildcard -> NOT
-- On BIFF reduce production wildcard -> NOT
-- On BEHAVIORS reduce production wildcard -> NOT
-- On BEHAVIOR reduce production wildcard -> NOT
-- On BASE_ADDR reduce production wildcard -> NOT
-- On AXIOMATIC reduce production wildcard -> NOT
-- On AXIOM reduce production wildcard -> NOT
-- On AUTOMATIC reduce production wildcard -> NOT
-- On AT reduce production wildcard -> NOT
-- On ASSUMES reduce production wildcard -> NOT
-- On ASSIGNS reduce production wildcard -> NOT
-- On ASSERT reduce production wildcard -> NOT
-- On ARROW reduce production wildcard -> NOT
-- On AND reduce production wildcard -> NOT
-- On AMP reduce production wildcard -> NOT
-- On ALLOCATION reduce production wildcard -> NOT
-- On ALLOCATES reduce production wildcard -> NOT
-- On ALLOCABLE reduce production wildcard -> NOT

State 981:
## Known stack suffix:
## NE
## LR(1) items:
wildcard -> NE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> NE
-- On WITH reduce production wildcard -> NE
-- On VOLATILE reduce production wildcard -> NE
-- On VOID reduce production wildcard -> NE
-- On VARIANT reduce production wildcard -> NE
-- On VALID_READ reduce production wildcard -> NE
-- On VALID_RANGE reduce production wildcard -> NE
-- On VALID_INDEX reduce production wildcard -> NE
-- On VALID reduce production wildcard -> NE
-- On UNSIGNED reduce production wildcard -> NE
-- On UNION reduce production wildcard -> NE
-- On UNALLOCATED reduce production wildcard -> NE
-- On TYPEOF reduce production wildcard -> NE
-- On TYPENAME reduce production wildcard -> NE
-- On TYPE reduce production wildcard -> NE
-- On TRUE reduce production wildcard -> NE
-- On TILDE reduce production wildcard -> NE
-- On TERMINATES reduce production wildcard -> NE
-- On STRUCT reduce production wildcard -> NE
-- On STRING_LITERAL reduce production wildcard -> NE
-- On STATIC reduce production wildcard -> NE
-- On STAR reduce production wildcard -> NE
-- On SLICE reduce production wildcard -> NE
-- On SLASH reduce production wildcard -> NE
-- On SIZEOF reduce production wildcard -> NE
-- On SIGNED reduce production wildcard -> NE
-- On SHORT reduce production wildcard -> NE
-- On SEPARATED reduce production wildcard -> NE
-- On SEMICOLON reduce production wildcard -> NE
-- On RSQUARE reduce production wildcard -> NE
-- On RPAR reduce production wildcard -> NE
-- On RETURNS reduce production wildcard -> NE
-- On RESULT reduce production wildcard -> NE
-- On REQUIRES reduce production wildcard -> NE
-- On REGISTER reduce production wildcard -> NE
-- On REAL reduce production wildcard -> NE
-- On READS reduce production wildcard -> NE
-- On RBRACE reduce production wildcard -> NE
-- On QUESTION reduce production wildcard -> NE
-- On PREDICATE reduce production wildcard -> NE
-- On PRAGMA reduce production wildcard -> NE
-- On PLUS reduce production wildcard -> NE
-- On PIPE reduce production wildcard -> NE
-- On PERCENT reduce production wildcard -> NE
-- On OR reduce production wildcard -> NE
-- On OLD reduce production wildcard -> NE
-- On OFFSET reduce production wildcard -> NE
-- On NULL reduce production wildcard -> NE
-- On NOTHING reduce production wildcard -> NE
-- On NOT reduce production wildcard -> NE
-- On NE reduce production wildcard -> NE
-- On MODULE reduce production wildcard -> NE
-- On MODEL reduce production wildcard -> NE
-- On MINUS reduce production wildcard -> NE
-- On LTLT reduce production wildcard -> NE
-- On LTCOLON reduce production wildcard -> NE
-- On LT reduce production wildcard -> NE
-- On LSQUARE reduce production wildcard -> NE
-- On LPAR reduce production wildcard -> NE
-- On LOOP reduce production wildcard -> NE
-- On LONG reduce production wildcard -> NE
-- On LOGIC reduce production wildcard -> NE
-- On LET reduce production wildcard -> NE
-- On LEMMA reduce production wildcard -> NE
-- On LE reduce production wildcard -> NE
-- On LBRACE reduce production wildcard -> NE
-- On LAMBDA reduce production wildcard -> NE
-- On LABEL reduce production wildcard -> NE
-- On INVARIANT reduce production wildcard -> NE
-- On INTER reduce production wildcard -> NE
-- On INTEGER reduce production wildcard -> NE
-- On INT reduce production wildcard -> NE
-- On INITIALIZED reduce production wildcard -> NE
-- On INDUCTIVE reduce production wildcard -> NE
-- On INCLUDE reduce production wildcard -> NE
-- On IMPLIES reduce production wildcard -> NE
-- On IMPACT reduce production wildcard -> NE
-- On IFF reduce production wildcard -> NE
-- On IF reduce production wildcard -> NE
-- On IDENTIFIER reduce production wildcard -> NE
-- On HATHAT reduce production wildcard -> NE
-- On HAT reduce production wildcard -> NE
-- On GTGT reduce production wildcard -> NE
-- On GT reduce production wildcard -> NE
-- On GLOBAL reduce production wildcard -> NE
-- On GHOST reduce production wildcard -> NE
-- On GE reduce production wildcard -> NE
-- On FUNCTION reduce production wildcard -> NE
-- On FROM reduce production wildcard -> NE
-- On FRESH reduce production wildcard -> NE
-- On FREES reduce production wildcard -> NE
-- On FREEABLE reduce production wildcard -> NE
-- On FORALL reduce production wildcard -> NE
-- On FOR reduce production wildcard -> NE
-- On FLOAT reduce production wildcard -> NE
-- On FALSE reduce production wildcard -> NE
-- On EXT_LET reduce production wildcard -> NE
-- On EXT_AT reduce production wildcard -> NE
-- On EXITS reduce production wildcard -> NE
-- On EXISTS reduce production wildcard -> NE
-- On EQUAL reduce production wildcard -> NE
-- On EQ reduce production wildcard -> NE
-- On EOF reduce production wildcard -> NE
-- On ENUM reduce production wildcard -> NE
-- On ENSURES reduce production wildcard -> NE
-- On EMPTY reduce production wildcard -> NE
-- On ELSE reduce production wildcard -> NE
-- On DYNAMIC reduce production wildcard -> NE
-- On DOUBLE reduce production wildcard -> NE
-- On DOTDOTDOT reduce production wildcard -> NE
-- On DOTDOT reduce production wildcard -> NE
-- On DOT reduce production wildcard -> NE
-- On DOLLAR reduce production wildcard -> NE
-- On DISJOINT reduce production wildcard -> NE
-- On DECREASES reduce production wildcard -> NE
-- On DANGLING reduce production wildcard -> NE
-- On CUSTOM reduce production wildcard -> NE
-- On CONTRACT reduce production wildcard -> NE
-- On CONTINUES reduce production wildcard -> NE
-- On CONSTANT10 reduce production wildcard -> NE
-- On CONSTANT reduce production wildcard -> NE
-- On CONST reduce production wildcard -> NE
-- On COMPLETE reduce production wildcard -> NE
-- On COMMA reduce production wildcard -> NE
-- On COLONGT reduce production wildcard -> NE
-- On COLONCOLON reduce production wildcard -> NE
-- On COLON2 reduce production wildcard -> NE
-- On COLON reduce production wildcard -> NE
-- On CHAR reduce production wildcard -> NE
-- On CASE reduce production wildcard -> NE
-- On BSUNION reduce production wildcard -> NE
-- On BSTYPE reduce production wildcard -> NE
-- On BREAKS reduce production wildcard -> NE
-- On BOOLEAN reduce production wildcard -> NE
-- On BOOL reduce production wildcard -> NE
-- On BLOCK_LENGTH reduce production wildcard -> NE
-- On BIMPLIES reduce production wildcard -> NE
-- On BIFF reduce production wildcard -> NE
-- On BEHAVIORS reduce production wildcard -> NE
-- On BEHAVIOR reduce production wildcard -> NE
-- On BASE_ADDR reduce production wildcard -> NE
-- On AXIOMATIC reduce production wildcard -> NE
-- On AXIOM reduce production wildcard -> NE
-- On AUTOMATIC reduce production wildcard -> NE
-- On AT reduce production wildcard -> NE
-- On ASSUMES reduce production wildcard -> NE
-- On ASSIGNS reduce production wildcard -> NE
-- On ASSERT reduce production wildcard -> NE
-- On ARROW reduce production wildcard -> NE
-- On AND reduce production wildcard -> NE
-- On AMP reduce production wildcard -> NE
-- On ALLOCATION reduce production wildcard -> NE
-- On ALLOCATES reduce production wildcard -> NE
-- On ALLOCABLE reduce production wildcard -> NE

State 982:
## Known stack suffix:
## MINUS
## LR(1) items:
wildcard -> MINUS . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> MINUS
-- On WITH reduce production wildcard -> MINUS
-- On VOLATILE reduce production wildcard -> MINUS
-- On VOID reduce production wildcard -> MINUS
-- On VARIANT reduce production wildcard -> MINUS
-- On VALID_READ reduce production wildcard -> MINUS
-- On VALID_RANGE reduce production wildcard -> MINUS
-- On VALID_INDEX reduce production wildcard -> MINUS
-- On VALID reduce production wildcard -> MINUS
-- On UNSIGNED reduce production wildcard -> MINUS
-- On UNION reduce production wildcard -> MINUS
-- On UNALLOCATED reduce production wildcard -> MINUS
-- On TYPEOF reduce production wildcard -> MINUS
-- On TYPENAME reduce production wildcard -> MINUS
-- On TYPE reduce production wildcard -> MINUS
-- On TRUE reduce production wildcard -> MINUS
-- On TILDE reduce production wildcard -> MINUS
-- On TERMINATES reduce production wildcard -> MINUS
-- On STRUCT reduce production wildcard -> MINUS
-- On STRING_LITERAL reduce production wildcard -> MINUS
-- On STATIC reduce production wildcard -> MINUS
-- On STAR reduce production wildcard -> MINUS
-- On SLICE reduce production wildcard -> MINUS
-- On SLASH reduce production wildcard -> MINUS
-- On SIZEOF reduce production wildcard -> MINUS
-- On SIGNED reduce production wildcard -> MINUS
-- On SHORT reduce production wildcard -> MINUS
-- On SEPARATED reduce production wildcard -> MINUS
-- On SEMICOLON reduce production wildcard -> MINUS
-- On RSQUARE reduce production wildcard -> MINUS
-- On RPAR reduce production wildcard -> MINUS
-- On RETURNS reduce production wildcard -> MINUS
-- On RESULT reduce production wildcard -> MINUS
-- On REQUIRES reduce production wildcard -> MINUS
-- On REGISTER reduce production wildcard -> MINUS
-- On REAL reduce production wildcard -> MINUS
-- On READS reduce production wildcard -> MINUS
-- On RBRACE reduce production wildcard -> MINUS
-- On QUESTION reduce production wildcard -> MINUS
-- On PREDICATE reduce production wildcard -> MINUS
-- On PRAGMA reduce production wildcard -> MINUS
-- On PLUS reduce production wildcard -> MINUS
-- On PIPE reduce production wildcard -> MINUS
-- On PERCENT reduce production wildcard -> MINUS
-- On OR reduce production wildcard -> MINUS
-- On OLD reduce production wildcard -> MINUS
-- On OFFSET reduce production wildcard -> MINUS
-- On NULL reduce production wildcard -> MINUS
-- On NOTHING reduce production wildcard -> MINUS
-- On NOT reduce production wildcard -> MINUS
-- On NE reduce production wildcard -> MINUS
-- On MODULE reduce production wildcard -> MINUS
-- On MODEL reduce production wildcard -> MINUS
-- On MINUS reduce production wildcard -> MINUS
-- On LTLT reduce production wildcard -> MINUS
-- On LTCOLON reduce production wildcard -> MINUS
-- On LT reduce production wildcard -> MINUS
-- On LSQUARE reduce production wildcard -> MINUS
-- On LPAR reduce production wildcard -> MINUS
-- On LOOP reduce production wildcard -> MINUS
-- On LONG reduce production wildcard -> MINUS
-- On LOGIC reduce production wildcard -> MINUS
-- On LET reduce production wildcard -> MINUS
-- On LEMMA reduce production wildcard -> MINUS
-- On LE reduce production wildcard -> MINUS
-- On LBRACE reduce production wildcard -> MINUS
-- On LAMBDA reduce production wildcard -> MINUS
-- On LABEL reduce production wildcard -> MINUS
-- On INVARIANT reduce production wildcard -> MINUS
-- On INTER reduce production wildcard -> MINUS
-- On INTEGER reduce production wildcard -> MINUS
-- On INT reduce production wildcard -> MINUS
-- On INITIALIZED reduce production wildcard -> MINUS
-- On INDUCTIVE reduce production wildcard -> MINUS
-- On INCLUDE reduce production wildcard -> MINUS
-- On IMPLIES reduce production wildcard -> MINUS
-- On IMPACT reduce production wildcard -> MINUS
-- On IFF reduce production wildcard -> MINUS
-- On IF reduce production wildcard -> MINUS
-- On IDENTIFIER reduce production wildcard -> MINUS
-- On HATHAT reduce production wildcard -> MINUS
-- On HAT reduce production wildcard -> MINUS
-- On GTGT reduce production wildcard -> MINUS
-- On GT reduce production wildcard -> MINUS
-- On GLOBAL reduce production wildcard -> MINUS
-- On GHOST reduce production wildcard -> MINUS
-- On GE reduce production wildcard -> MINUS
-- On FUNCTION reduce production wildcard -> MINUS
-- On FROM reduce production wildcard -> MINUS
-- On FRESH reduce production wildcard -> MINUS
-- On FREES reduce production wildcard -> MINUS
-- On FREEABLE reduce production wildcard -> MINUS
-- On FORALL reduce production wildcard -> MINUS
-- On FOR reduce production wildcard -> MINUS
-- On FLOAT reduce production wildcard -> MINUS
-- On FALSE reduce production wildcard -> MINUS
-- On EXT_LET reduce production wildcard -> MINUS
-- On EXT_AT reduce production wildcard -> MINUS
-- On EXITS reduce production wildcard -> MINUS
-- On EXISTS reduce production wildcard -> MINUS
-- On EQUAL reduce production wildcard -> MINUS
-- On EQ reduce production wildcard -> MINUS
-- On EOF reduce production wildcard -> MINUS
-- On ENUM reduce production wildcard -> MINUS
-- On ENSURES reduce production wildcard -> MINUS
-- On EMPTY reduce production wildcard -> MINUS
-- On ELSE reduce production wildcard -> MINUS
-- On DYNAMIC reduce production wildcard -> MINUS
-- On DOUBLE reduce production wildcard -> MINUS
-- On DOTDOTDOT reduce production wildcard -> MINUS
-- On DOTDOT reduce production wildcard -> MINUS
-- On DOT reduce production wildcard -> MINUS
-- On DOLLAR reduce production wildcard -> MINUS
-- On DISJOINT reduce production wildcard -> MINUS
-- On DECREASES reduce production wildcard -> MINUS
-- On DANGLING reduce production wildcard -> MINUS
-- On CUSTOM reduce production wildcard -> MINUS
-- On CONTRACT reduce production wildcard -> MINUS
-- On CONTINUES reduce production wildcard -> MINUS
-- On CONSTANT10 reduce production wildcard -> MINUS
-- On CONSTANT reduce production wildcard -> MINUS
-- On CONST reduce production wildcard -> MINUS
-- On COMPLETE reduce production wildcard -> MINUS
-- On COMMA reduce production wildcard -> MINUS
-- On COLONGT reduce production wildcard -> MINUS
-- On COLONCOLON reduce production wildcard -> MINUS
-- On COLON2 reduce production wildcard -> MINUS
-- On COLON reduce production wildcard -> MINUS
-- On CHAR reduce production wildcard -> MINUS
-- On CASE reduce production wildcard -> MINUS
-- On BSUNION reduce production wildcard -> MINUS
-- On BSTYPE reduce production wildcard -> MINUS
-- On BREAKS reduce production wildcard -> MINUS
-- On BOOLEAN reduce production wildcard -> MINUS
-- On BOOL reduce production wildcard -> MINUS
-- On BLOCK_LENGTH reduce production wildcard -> MINUS
-- On BIMPLIES reduce production wildcard -> MINUS
-- On BIFF reduce production wildcard -> MINUS
-- On BEHAVIORS reduce production wildcard -> MINUS
-- On BEHAVIOR reduce production wildcard -> MINUS
-- On BASE_ADDR reduce production wildcard -> MINUS
-- On AXIOMATIC reduce production wildcard -> MINUS
-- On AXIOM reduce production wildcard -> MINUS
-- On AUTOMATIC reduce production wildcard -> MINUS
-- On AT reduce production wildcard -> MINUS
-- On ASSUMES reduce production wildcard -> MINUS
-- On ASSIGNS reduce production wildcard -> MINUS
-- On ASSERT reduce production wildcard -> MINUS
-- On ARROW reduce production wildcard -> MINUS
-- On AND reduce production wildcard -> MINUS
-- On AMP reduce production wildcard -> MINUS
-- On ALLOCATION reduce production wildcard -> MINUS
-- On ALLOCATES reduce production wildcard -> MINUS
-- On ALLOCABLE reduce production wildcard -> MINUS

State 983:
## Known stack suffix:
## LTLT
## LR(1) items:
wildcard -> LTLT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> LTLT
-- On WITH reduce production wildcard -> LTLT
-- On VOLATILE reduce production wildcard -> LTLT
-- On VOID reduce production wildcard -> LTLT
-- On VARIANT reduce production wildcard -> LTLT
-- On VALID_READ reduce production wildcard -> LTLT
-- On VALID_RANGE reduce production wildcard -> LTLT
-- On VALID_INDEX reduce production wildcard -> LTLT
-- On VALID reduce production wildcard -> LTLT
-- On UNSIGNED reduce production wildcard -> LTLT
-- On UNION reduce production wildcard -> LTLT
-- On UNALLOCATED reduce production wildcard -> LTLT
-- On TYPEOF reduce production wildcard -> LTLT
-- On TYPENAME reduce production wildcard -> LTLT
-- On TYPE reduce production wildcard -> LTLT
-- On TRUE reduce production wildcard -> LTLT
-- On TILDE reduce production wildcard -> LTLT
-- On TERMINATES reduce production wildcard -> LTLT
-- On STRUCT reduce production wildcard -> LTLT
-- On STRING_LITERAL reduce production wildcard -> LTLT
-- On STATIC reduce production wildcard -> LTLT
-- On STAR reduce production wildcard -> LTLT
-- On SLICE reduce production wildcard -> LTLT
-- On SLASH reduce production wildcard -> LTLT
-- On SIZEOF reduce production wildcard -> LTLT
-- On SIGNED reduce production wildcard -> LTLT
-- On SHORT reduce production wildcard -> LTLT
-- On SEPARATED reduce production wildcard -> LTLT
-- On SEMICOLON reduce production wildcard -> LTLT
-- On RSQUARE reduce production wildcard -> LTLT
-- On RPAR reduce production wildcard -> LTLT
-- On RETURNS reduce production wildcard -> LTLT
-- On RESULT reduce production wildcard -> LTLT
-- On REQUIRES reduce production wildcard -> LTLT
-- On REGISTER reduce production wildcard -> LTLT
-- On REAL reduce production wildcard -> LTLT
-- On READS reduce production wildcard -> LTLT
-- On RBRACE reduce production wildcard -> LTLT
-- On QUESTION reduce production wildcard -> LTLT
-- On PREDICATE reduce production wildcard -> LTLT
-- On PRAGMA reduce production wildcard -> LTLT
-- On PLUS reduce production wildcard -> LTLT
-- On PIPE reduce production wildcard -> LTLT
-- On PERCENT reduce production wildcard -> LTLT
-- On OR reduce production wildcard -> LTLT
-- On OLD reduce production wildcard -> LTLT
-- On OFFSET reduce production wildcard -> LTLT
-- On NULL reduce production wildcard -> LTLT
-- On NOTHING reduce production wildcard -> LTLT
-- On NOT reduce production wildcard -> LTLT
-- On NE reduce production wildcard -> LTLT
-- On MODULE reduce production wildcard -> LTLT
-- On MODEL reduce production wildcard -> LTLT
-- On MINUS reduce production wildcard -> LTLT
-- On LTLT reduce production wildcard -> LTLT
-- On LTCOLON reduce production wildcard -> LTLT
-- On LT reduce production wildcard -> LTLT
-- On LSQUARE reduce production wildcard -> LTLT
-- On LPAR reduce production wildcard -> LTLT
-- On LOOP reduce production wildcard -> LTLT
-- On LONG reduce production wildcard -> LTLT
-- On LOGIC reduce production wildcard -> LTLT
-- On LET reduce production wildcard -> LTLT
-- On LEMMA reduce production wildcard -> LTLT
-- On LE reduce production wildcard -> LTLT
-- On LBRACE reduce production wildcard -> LTLT
-- On LAMBDA reduce production wildcard -> LTLT
-- On LABEL reduce production wildcard -> LTLT
-- On INVARIANT reduce production wildcard -> LTLT
-- On INTER reduce production wildcard -> LTLT
-- On INTEGER reduce production wildcard -> LTLT
-- On INT reduce production wildcard -> LTLT
-- On INITIALIZED reduce production wildcard -> LTLT
-- On INDUCTIVE reduce production wildcard -> LTLT
-- On INCLUDE reduce production wildcard -> LTLT
-- On IMPLIES reduce production wildcard -> LTLT
-- On IMPACT reduce production wildcard -> LTLT
-- On IFF reduce production wildcard -> LTLT
-- On IF reduce production wildcard -> LTLT
-- On IDENTIFIER reduce production wildcard -> LTLT
-- On HATHAT reduce production wildcard -> LTLT
-- On HAT reduce production wildcard -> LTLT
-- On GTGT reduce production wildcard -> LTLT
-- On GT reduce production wildcard -> LTLT
-- On GLOBAL reduce production wildcard -> LTLT
-- On GHOST reduce production wildcard -> LTLT
-- On GE reduce production wildcard -> LTLT
-- On FUNCTION reduce production wildcard -> LTLT
-- On FROM reduce production wildcard -> LTLT
-- On FRESH reduce production wildcard -> LTLT
-- On FREES reduce production wildcard -> LTLT
-- On FREEABLE reduce production wildcard -> LTLT
-- On FORALL reduce production wildcard -> LTLT
-- On FOR reduce production wildcard -> LTLT
-- On FLOAT reduce production wildcard -> LTLT
-- On FALSE reduce production wildcard -> LTLT
-- On EXT_LET reduce production wildcard -> LTLT
-- On EXT_AT reduce production wildcard -> LTLT
-- On EXITS reduce production wildcard -> LTLT
-- On EXISTS reduce production wildcard -> LTLT
-- On EQUAL reduce production wildcard -> LTLT
-- On EQ reduce production wildcard -> LTLT
-- On EOF reduce production wildcard -> LTLT
-- On ENUM reduce production wildcard -> LTLT
-- On ENSURES reduce production wildcard -> LTLT
-- On EMPTY reduce production wildcard -> LTLT
-- On ELSE reduce production wildcard -> LTLT
-- On DYNAMIC reduce production wildcard -> LTLT
-- On DOUBLE reduce production wildcard -> LTLT
-- On DOTDOTDOT reduce production wildcard -> LTLT
-- On DOTDOT reduce production wildcard -> LTLT
-- On DOT reduce production wildcard -> LTLT
-- On DOLLAR reduce production wildcard -> LTLT
-- On DISJOINT reduce production wildcard -> LTLT
-- On DECREASES reduce production wildcard -> LTLT
-- On DANGLING reduce production wildcard -> LTLT
-- On CUSTOM reduce production wildcard -> LTLT
-- On CONTRACT reduce production wildcard -> LTLT
-- On CONTINUES reduce production wildcard -> LTLT
-- On CONSTANT10 reduce production wildcard -> LTLT
-- On CONSTANT reduce production wildcard -> LTLT
-- On CONST reduce production wildcard -> LTLT
-- On COMPLETE reduce production wildcard -> LTLT
-- On COMMA reduce production wildcard -> LTLT
-- On COLONGT reduce production wildcard -> LTLT
-- On COLONCOLON reduce production wildcard -> LTLT
-- On COLON2 reduce production wildcard -> LTLT
-- On COLON reduce production wildcard -> LTLT
-- On CHAR reduce production wildcard -> LTLT
-- On CASE reduce production wildcard -> LTLT
-- On BSUNION reduce production wildcard -> LTLT
-- On BSTYPE reduce production wildcard -> LTLT
-- On BREAKS reduce production wildcard -> LTLT
-- On BOOLEAN reduce production wildcard -> LTLT
-- On BOOL reduce production wildcard -> LTLT
-- On BLOCK_LENGTH reduce production wildcard -> LTLT
-- On BIMPLIES reduce production wildcard -> LTLT
-- On BIFF reduce production wildcard -> LTLT
-- On BEHAVIORS reduce production wildcard -> LTLT
-- On BEHAVIOR reduce production wildcard -> LTLT
-- On BASE_ADDR reduce production wildcard -> LTLT
-- On AXIOMATIC reduce production wildcard -> LTLT
-- On AXIOM reduce production wildcard -> LTLT
-- On AUTOMATIC reduce production wildcard -> LTLT
-- On AT reduce production wildcard -> LTLT
-- On ASSUMES reduce production wildcard -> LTLT
-- On ASSIGNS reduce production wildcard -> LTLT
-- On ASSERT reduce production wildcard -> LTLT
-- On ARROW reduce production wildcard -> LTLT
-- On AND reduce production wildcard -> LTLT
-- On AMP reduce production wildcard -> LTLT
-- On ALLOCATION reduce production wildcard -> LTLT
-- On ALLOCATES reduce production wildcard -> LTLT
-- On ALLOCABLE reduce production wildcard -> LTLT

State 984:
## Known stack suffix:
## LTCOLON
## LR(1) items:
wildcard -> LTCOLON . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> LTCOLON
-- On WITH reduce production wildcard -> LTCOLON
-- On VOLATILE reduce production wildcard -> LTCOLON
-- On VOID reduce production wildcard -> LTCOLON
-- On VARIANT reduce production wildcard -> LTCOLON
-- On VALID_READ reduce production wildcard -> LTCOLON
-- On VALID_RANGE reduce production wildcard -> LTCOLON
-- On VALID_INDEX reduce production wildcard -> LTCOLON
-- On VALID reduce production wildcard -> LTCOLON
-- On UNSIGNED reduce production wildcard -> LTCOLON
-- On UNION reduce production wildcard -> LTCOLON
-- On UNALLOCATED reduce production wildcard -> LTCOLON
-- On TYPEOF reduce production wildcard -> LTCOLON
-- On TYPENAME reduce production wildcard -> LTCOLON
-- On TYPE reduce production wildcard -> LTCOLON
-- On TRUE reduce production wildcard -> LTCOLON
-- On TILDE reduce production wildcard -> LTCOLON
-- On TERMINATES reduce production wildcard -> LTCOLON
-- On STRUCT reduce production wildcard -> LTCOLON
-- On STRING_LITERAL reduce production wildcard -> LTCOLON
-- On STATIC reduce production wildcard -> LTCOLON
-- On STAR reduce production wildcard -> LTCOLON
-- On SLICE reduce production wildcard -> LTCOLON
-- On SLASH reduce production wildcard -> LTCOLON
-- On SIZEOF reduce production wildcard -> LTCOLON
-- On SIGNED reduce production wildcard -> LTCOLON
-- On SHORT reduce production wildcard -> LTCOLON
-- On SEPARATED reduce production wildcard -> LTCOLON
-- On SEMICOLON reduce production wildcard -> LTCOLON
-- On RSQUARE reduce production wildcard -> LTCOLON
-- On RPAR reduce production wildcard -> LTCOLON
-- On RETURNS reduce production wildcard -> LTCOLON
-- On RESULT reduce production wildcard -> LTCOLON
-- On REQUIRES reduce production wildcard -> LTCOLON
-- On REGISTER reduce production wildcard -> LTCOLON
-- On REAL reduce production wildcard -> LTCOLON
-- On READS reduce production wildcard -> LTCOLON
-- On RBRACE reduce production wildcard -> LTCOLON
-- On QUESTION reduce production wildcard -> LTCOLON
-- On PREDICATE reduce production wildcard -> LTCOLON
-- On PRAGMA reduce production wildcard -> LTCOLON
-- On PLUS reduce production wildcard -> LTCOLON
-- On PIPE reduce production wildcard -> LTCOLON
-- On PERCENT reduce production wildcard -> LTCOLON
-- On OR reduce production wildcard -> LTCOLON
-- On OLD reduce production wildcard -> LTCOLON
-- On OFFSET reduce production wildcard -> LTCOLON
-- On NULL reduce production wildcard -> LTCOLON
-- On NOTHING reduce production wildcard -> LTCOLON
-- On NOT reduce production wildcard -> LTCOLON
-- On NE reduce production wildcard -> LTCOLON
-- On MODULE reduce production wildcard -> LTCOLON
-- On MODEL reduce production wildcard -> LTCOLON
-- On MINUS reduce production wildcard -> LTCOLON
-- On LTLT reduce production wildcard -> LTCOLON
-- On LTCOLON reduce production wildcard -> LTCOLON
-- On LT reduce production wildcard -> LTCOLON
-- On LSQUARE reduce production wildcard -> LTCOLON
-- On LPAR reduce production wildcard -> LTCOLON
-- On LOOP reduce production wildcard -> LTCOLON
-- On LONG reduce production wildcard -> LTCOLON
-- On LOGIC reduce production wildcard -> LTCOLON
-- On LET reduce production wildcard -> LTCOLON
-- On LEMMA reduce production wildcard -> LTCOLON
-- On LE reduce production wildcard -> LTCOLON
-- On LBRACE reduce production wildcard -> LTCOLON
-- On LAMBDA reduce production wildcard -> LTCOLON
-- On LABEL reduce production wildcard -> LTCOLON
-- On INVARIANT reduce production wildcard -> LTCOLON
-- On INTER reduce production wildcard -> LTCOLON
-- On INTEGER reduce production wildcard -> LTCOLON
-- On INT reduce production wildcard -> LTCOLON
-- On INITIALIZED reduce production wildcard -> LTCOLON
-- On INDUCTIVE reduce production wildcard -> LTCOLON
-- On INCLUDE reduce production wildcard -> LTCOLON
-- On IMPLIES reduce production wildcard -> LTCOLON
-- On IMPACT reduce production wildcard -> LTCOLON
-- On IFF reduce production wildcard -> LTCOLON
-- On IF reduce production wildcard -> LTCOLON
-- On IDENTIFIER reduce production wildcard -> LTCOLON
-- On HATHAT reduce production wildcard -> LTCOLON
-- On HAT reduce production wildcard -> LTCOLON
-- On GTGT reduce production wildcard -> LTCOLON
-- On GT reduce production wildcard -> LTCOLON
-- On GLOBAL reduce production wildcard -> LTCOLON
-- On GHOST reduce production wildcard -> LTCOLON
-- On GE reduce production wildcard -> LTCOLON
-- On FUNCTION reduce production wildcard -> LTCOLON
-- On FROM reduce production wildcard -> LTCOLON
-- On FRESH reduce production wildcard -> LTCOLON
-- On FREES reduce production wildcard -> LTCOLON
-- On FREEABLE reduce production wildcard -> LTCOLON
-- On FORALL reduce production wildcard -> LTCOLON
-- On FOR reduce production wildcard -> LTCOLON
-- On FLOAT reduce production wildcard -> LTCOLON
-- On FALSE reduce production wildcard -> LTCOLON
-- On EXT_LET reduce production wildcard -> LTCOLON
-- On EXT_AT reduce production wildcard -> LTCOLON
-- On EXITS reduce production wildcard -> LTCOLON
-- On EXISTS reduce production wildcard -> LTCOLON
-- On EQUAL reduce production wildcard -> LTCOLON
-- On EQ reduce production wildcard -> LTCOLON
-- On EOF reduce production wildcard -> LTCOLON
-- On ENUM reduce production wildcard -> LTCOLON
-- On ENSURES reduce production wildcard -> LTCOLON
-- On EMPTY reduce production wildcard -> LTCOLON
-- On ELSE reduce production wildcard -> LTCOLON
-- On DYNAMIC reduce production wildcard -> LTCOLON
-- On DOUBLE reduce production wildcard -> LTCOLON
-- On DOTDOTDOT reduce production wildcard -> LTCOLON
-- On DOTDOT reduce production wildcard -> LTCOLON
-- On DOT reduce production wildcard -> LTCOLON
-- On DOLLAR reduce production wildcard -> LTCOLON
-- On DISJOINT reduce production wildcard -> LTCOLON
-- On DECREASES reduce production wildcard -> LTCOLON
-- On DANGLING reduce production wildcard -> LTCOLON
-- On CUSTOM reduce production wildcard -> LTCOLON
-- On CONTRACT reduce production wildcard -> LTCOLON
-- On CONTINUES reduce production wildcard -> LTCOLON
-- On CONSTANT10 reduce production wildcard -> LTCOLON
-- On CONSTANT reduce production wildcard -> LTCOLON
-- On CONST reduce production wildcard -> LTCOLON
-- On COMPLETE reduce production wildcard -> LTCOLON
-- On COMMA reduce production wildcard -> LTCOLON
-- On COLONGT reduce production wildcard -> LTCOLON
-- On COLONCOLON reduce production wildcard -> LTCOLON
-- On COLON2 reduce production wildcard -> LTCOLON
-- On COLON reduce production wildcard -> LTCOLON
-- On CHAR reduce production wildcard -> LTCOLON
-- On CASE reduce production wildcard -> LTCOLON
-- On BSUNION reduce production wildcard -> LTCOLON
-- On BSTYPE reduce production wildcard -> LTCOLON
-- On BREAKS reduce production wildcard -> LTCOLON
-- On BOOLEAN reduce production wildcard -> LTCOLON
-- On BOOL reduce production wildcard -> LTCOLON
-- On BLOCK_LENGTH reduce production wildcard -> LTCOLON
-- On BIMPLIES reduce production wildcard -> LTCOLON
-- On BIFF reduce production wildcard -> LTCOLON
-- On BEHAVIORS reduce production wildcard -> LTCOLON
-- On BEHAVIOR reduce production wildcard -> LTCOLON
-- On BASE_ADDR reduce production wildcard -> LTCOLON
-- On AXIOMATIC reduce production wildcard -> LTCOLON
-- On AXIOM reduce production wildcard -> LTCOLON
-- On AUTOMATIC reduce production wildcard -> LTCOLON
-- On AT reduce production wildcard -> LTCOLON
-- On ASSUMES reduce production wildcard -> LTCOLON
-- On ASSIGNS reduce production wildcard -> LTCOLON
-- On ASSERT reduce production wildcard -> LTCOLON
-- On ARROW reduce production wildcard -> LTCOLON
-- On AND reduce production wildcard -> LTCOLON
-- On AMP reduce production wildcard -> LTCOLON
-- On ALLOCATION reduce production wildcard -> LTCOLON
-- On ALLOCATES reduce production wildcard -> LTCOLON
-- On ALLOCABLE reduce production wildcard -> LTCOLON

State 985:
## Known stack suffix:
## LT
## LR(1) items:
wildcard -> LT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> LT
-- On WITH reduce production wildcard -> LT
-- On VOLATILE reduce production wildcard -> LT
-- On VOID reduce production wildcard -> LT
-- On VARIANT reduce production wildcard -> LT
-- On VALID_READ reduce production wildcard -> LT
-- On VALID_RANGE reduce production wildcard -> LT
-- On VALID_INDEX reduce production wildcard -> LT
-- On VALID reduce production wildcard -> LT
-- On UNSIGNED reduce production wildcard -> LT
-- On UNION reduce production wildcard -> LT
-- On UNALLOCATED reduce production wildcard -> LT
-- On TYPEOF reduce production wildcard -> LT
-- On TYPENAME reduce production wildcard -> LT
-- On TYPE reduce production wildcard -> LT
-- On TRUE reduce production wildcard -> LT
-- On TILDE reduce production wildcard -> LT
-- On TERMINATES reduce production wildcard -> LT
-- On STRUCT reduce production wildcard -> LT
-- On STRING_LITERAL reduce production wildcard -> LT
-- On STATIC reduce production wildcard -> LT
-- On STAR reduce production wildcard -> LT
-- On SLICE reduce production wildcard -> LT
-- On SLASH reduce production wildcard -> LT
-- On SIZEOF reduce production wildcard -> LT
-- On SIGNED reduce production wildcard -> LT
-- On SHORT reduce production wildcard -> LT
-- On SEPARATED reduce production wildcard -> LT
-- On SEMICOLON reduce production wildcard -> LT
-- On RSQUARE reduce production wildcard -> LT
-- On RPAR reduce production wildcard -> LT
-- On RETURNS reduce production wildcard -> LT
-- On RESULT reduce production wildcard -> LT
-- On REQUIRES reduce production wildcard -> LT
-- On REGISTER reduce production wildcard -> LT
-- On REAL reduce production wildcard -> LT
-- On READS reduce production wildcard -> LT
-- On RBRACE reduce production wildcard -> LT
-- On QUESTION reduce production wildcard -> LT
-- On PREDICATE reduce production wildcard -> LT
-- On PRAGMA reduce production wildcard -> LT
-- On PLUS reduce production wildcard -> LT
-- On PIPE reduce production wildcard -> LT
-- On PERCENT reduce production wildcard -> LT
-- On OR reduce production wildcard -> LT
-- On OLD reduce production wildcard -> LT
-- On OFFSET reduce production wildcard -> LT
-- On NULL reduce production wildcard -> LT
-- On NOTHING reduce production wildcard -> LT
-- On NOT reduce production wildcard -> LT
-- On NE reduce production wildcard -> LT
-- On MODULE reduce production wildcard -> LT
-- On MODEL reduce production wildcard -> LT
-- On MINUS reduce production wildcard -> LT
-- On LTLT reduce production wildcard -> LT
-- On LTCOLON reduce production wildcard -> LT
-- On LT reduce production wildcard -> LT
-- On LSQUARE reduce production wildcard -> LT
-- On LPAR reduce production wildcard -> LT
-- On LOOP reduce production wildcard -> LT
-- On LONG reduce production wildcard -> LT
-- On LOGIC reduce production wildcard -> LT
-- On LET reduce production wildcard -> LT
-- On LEMMA reduce production wildcard -> LT
-- On LE reduce production wildcard -> LT
-- On LBRACE reduce production wildcard -> LT
-- On LAMBDA reduce production wildcard -> LT
-- On LABEL reduce production wildcard -> LT
-- On INVARIANT reduce production wildcard -> LT
-- On INTER reduce production wildcard -> LT
-- On INTEGER reduce production wildcard -> LT
-- On INT reduce production wildcard -> LT
-- On INITIALIZED reduce production wildcard -> LT
-- On INDUCTIVE reduce production wildcard -> LT
-- On INCLUDE reduce production wildcard -> LT
-- On IMPLIES reduce production wildcard -> LT
-- On IMPACT reduce production wildcard -> LT
-- On IFF reduce production wildcard -> LT
-- On IF reduce production wildcard -> LT
-- On IDENTIFIER reduce production wildcard -> LT
-- On HATHAT reduce production wildcard -> LT
-- On HAT reduce production wildcard -> LT
-- On GTGT reduce production wildcard -> LT
-- On GT reduce production wildcard -> LT
-- On GLOBAL reduce production wildcard -> LT
-- On GHOST reduce production wildcard -> LT
-- On GE reduce production wildcard -> LT
-- On FUNCTION reduce production wildcard -> LT
-- On FROM reduce production wildcard -> LT
-- On FRESH reduce production wildcard -> LT
-- On FREES reduce production wildcard -> LT
-- On FREEABLE reduce production wildcard -> LT
-- On FORALL reduce production wildcard -> LT
-- On FOR reduce production wildcard -> LT
-- On FLOAT reduce production wildcard -> LT
-- On FALSE reduce production wildcard -> LT
-- On EXT_LET reduce production wildcard -> LT
-- On EXT_AT reduce production wildcard -> LT
-- On EXITS reduce production wildcard -> LT
-- On EXISTS reduce production wildcard -> LT
-- On EQUAL reduce production wildcard -> LT
-- On EQ reduce production wildcard -> LT
-- On EOF reduce production wildcard -> LT
-- On ENUM reduce production wildcard -> LT
-- On ENSURES reduce production wildcard -> LT
-- On EMPTY reduce production wildcard -> LT
-- On ELSE reduce production wildcard -> LT
-- On DYNAMIC reduce production wildcard -> LT
-- On DOUBLE reduce production wildcard -> LT
-- On DOTDOTDOT reduce production wildcard -> LT
-- On DOTDOT reduce production wildcard -> LT
-- On DOT reduce production wildcard -> LT
-- On DOLLAR reduce production wildcard -> LT
-- On DISJOINT reduce production wildcard -> LT
-- On DECREASES reduce production wildcard -> LT
-- On DANGLING reduce production wildcard -> LT
-- On CUSTOM reduce production wildcard -> LT
-- On CONTRACT reduce production wildcard -> LT
-- On CONTINUES reduce production wildcard -> LT
-- On CONSTANT10 reduce production wildcard -> LT
-- On CONSTANT reduce production wildcard -> LT
-- On CONST reduce production wildcard -> LT
-- On COMPLETE reduce production wildcard -> LT
-- On COMMA reduce production wildcard -> LT
-- On COLONGT reduce production wildcard -> LT
-- On COLONCOLON reduce production wildcard -> LT
-- On COLON2 reduce production wildcard -> LT
-- On COLON reduce production wildcard -> LT
-- On CHAR reduce production wildcard -> LT
-- On CASE reduce production wildcard -> LT
-- On BSUNION reduce production wildcard -> LT
-- On BSTYPE reduce production wildcard -> LT
-- On BREAKS reduce production wildcard -> LT
-- On BOOLEAN reduce production wildcard -> LT
-- On BOOL reduce production wildcard -> LT
-- On BLOCK_LENGTH reduce production wildcard -> LT
-- On BIMPLIES reduce production wildcard -> LT
-- On BIFF reduce production wildcard -> LT
-- On BEHAVIORS reduce production wildcard -> LT
-- On BEHAVIOR reduce production wildcard -> LT
-- On BASE_ADDR reduce production wildcard -> LT
-- On AXIOMATIC reduce production wildcard -> LT
-- On AXIOM reduce production wildcard -> LT
-- On AUTOMATIC reduce production wildcard -> LT
-- On AT reduce production wildcard -> LT
-- On ASSUMES reduce production wildcard -> LT
-- On ASSIGNS reduce production wildcard -> LT
-- On ASSERT reduce production wildcard -> LT
-- On ARROW reduce production wildcard -> LT
-- On AND reduce production wildcard -> LT
-- On AMP reduce production wildcard -> LT
-- On ALLOCATION reduce production wildcard -> LT
-- On ALLOCATES reduce production wildcard -> LT
-- On ALLOCABLE reduce production wildcard -> LT

State 986:
## Known stack suffix:
## LSQUARE
## LR(1) items:
wildcard -> LSQUARE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> LSQUARE
-- On WITH reduce production wildcard -> LSQUARE
-- On VOLATILE reduce production wildcard -> LSQUARE
-- On VOID reduce production wildcard -> LSQUARE
-- On VARIANT reduce production wildcard -> LSQUARE
-- On VALID_READ reduce production wildcard -> LSQUARE
-- On VALID_RANGE reduce production wildcard -> LSQUARE
-- On VALID_INDEX reduce production wildcard -> LSQUARE
-- On VALID reduce production wildcard -> LSQUARE
-- On UNSIGNED reduce production wildcard -> LSQUARE
-- On UNION reduce production wildcard -> LSQUARE
-- On UNALLOCATED reduce production wildcard -> LSQUARE
-- On TYPEOF reduce production wildcard -> LSQUARE
-- On TYPENAME reduce production wildcard -> LSQUARE
-- On TYPE reduce production wildcard -> LSQUARE
-- On TRUE reduce production wildcard -> LSQUARE
-- On TILDE reduce production wildcard -> LSQUARE
-- On TERMINATES reduce production wildcard -> LSQUARE
-- On STRUCT reduce production wildcard -> LSQUARE
-- On STRING_LITERAL reduce production wildcard -> LSQUARE
-- On STATIC reduce production wildcard -> LSQUARE
-- On STAR reduce production wildcard -> LSQUARE
-- On SLICE reduce production wildcard -> LSQUARE
-- On SLASH reduce production wildcard -> LSQUARE
-- On SIZEOF reduce production wildcard -> LSQUARE
-- On SIGNED reduce production wildcard -> LSQUARE
-- On SHORT reduce production wildcard -> LSQUARE
-- On SEPARATED reduce production wildcard -> LSQUARE
-- On SEMICOLON reduce production wildcard -> LSQUARE
-- On RSQUARE reduce production wildcard -> LSQUARE
-- On RPAR reduce production wildcard -> LSQUARE
-- On RETURNS reduce production wildcard -> LSQUARE
-- On RESULT reduce production wildcard -> LSQUARE
-- On REQUIRES reduce production wildcard -> LSQUARE
-- On REGISTER reduce production wildcard -> LSQUARE
-- On REAL reduce production wildcard -> LSQUARE
-- On READS reduce production wildcard -> LSQUARE
-- On RBRACE reduce production wildcard -> LSQUARE
-- On QUESTION reduce production wildcard -> LSQUARE
-- On PREDICATE reduce production wildcard -> LSQUARE
-- On PRAGMA reduce production wildcard -> LSQUARE
-- On PLUS reduce production wildcard -> LSQUARE
-- On PIPE reduce production wildcard -> LSQUARE
-- On PERCENT reduce production wildcard -> LSQUARE
-- On OR reduce production wildcard -> LSQUARE
-- On OLD reduce production wildcard -> LSQUARE
-- On OFFSET reduce production wildcard -> LSQUARE
-- On NULL reduce production wildcard -> LSQUARE
-- On NOTHING reduce production wildcard -> LSQUARE
-- On NOT reduce production wildcard -> LSQUARE
-- On NE reduce production wildcard -> LSQUARE
-- On MODULE reduce production wildcard -> LSQUARE
-- On MODEL reduce production wildcard -> LSQUARE
-- On MINUS reduce production wildcard -> LSQUARE
-- On LTLT reduce production wildcard -> LSQUARE
-- On LTCOLON reduce production wildcard -> LSQUARE
-- On LT reduce production wildcard -> LSQUARE
-- On LSQUARE reduce production wildcard -> LSQUARE
-- On LPAR reduce production wildcard -> LSQUARE
-- On LOOP reduce production wildcard -> LSQUARE
-- On LONG reduce production wildcard -> LSQUARE
-- On LOGIC reduce production wildcard -> LSQUARE
-- On LET reduce production wildcard -> LSQUARE
-- On LEMMA reduce production wildcard -> LSQUARE
-- On LE reduce production wildcard -> LSQUARE
-- On LBRACE reduce production wildcard -> LSQUARE
-- On LAMBDA reduce production wildcard -> LSQUARE
-- On LABEL reduce production wildcard -> LSQUARE
-- On INVARIANT reduce production wildcard -> LSQUARE
-- On INTER reduce production wildcard -> LSQUARE
-- On INTEGER reduce production wildcard -> LSQUARE
-- On INT reduce production wildcard -> LSQUARE
-- On INITIALIZED reduce production wildcard -> LSQUARE
-- On INDUCTIVE reduce production wildcard -> LSQUARE
-- On INCLUDE reduce production wildcard -> LSQUARE
-- On IMPLIES reduce production wildcard -> LSQUARE
-- On IMPACT reduce production wildcard -> LSQUARE
-- On IFF reduce production wildcard -> LSQUARE
-- On IF reduce production wildcard -> LSQUARE
-- On IDENTIFIER reduce production wildcard -> LSQUARE
-- On HATHAT reduce production wildcard -> LSQUARE
-- On HAT reduce production wildcard -> LSQUARE
-- On GTGT reduce production wildcard -> LSQUARE
-- On GT reduce production wildcard -> LSQUARE
-- On GLOBAL reduce production wildcard -> LSQUARE
-- On GHOST reduce production wildcard -> LSQUARE
-- On GE reduce production wildcard -> LSQUARE
-- On FUNCTION reduce production wildcard -> LSQUARE
-- On FROM reduce production wildcard -> LSQUARE
-- On FRESH reduce production wildcard -> LSQUARE
-- On FREES reduce production wildcard -> LSQUARE
-- On FREEABLE reduce production wildcard -> LSQUARE
-- On FORALL reduce production wildcard -> LSQUARE
-- On FOR reduce production wildcard -> LSQUARE
-- On FLOAT reduce production wildcard -> LSQUARE
-- On FALSE reduce production wildcard -> LSQUARE
-- On EXT_LET reduce production wildcard -> LSQUARE
-- On EXT_AT reduce production wildcard -> LSQUARE
-- On EXITS reduce production wildcard -> LSQUARE
-- On EXISTS reduce production wildcard -> LSQUARE
-- On EQUAL reduce production wildcard -> LSQUARE
-- On EQ reduce production wildcard -> LSQUARE
-- On EOF reduce production wildcard -> LSQUARE
-- On ENUM reduce production wildcard -> LSQUARE
-- On ENSURES reduce production wildcard -> LSQUARE
-- On EMPTY reduce production wildcard -> LSQUARE
-- On ELSE reduce production wildcard -> LSQUARE
-- On DYNAMIC reduce production wildcard -> LSQUARE
-- On DOUBLE reduce production wildcard -> LSQUARE
-- On DOTDOTDOT reduce production wildcard -> LSQUARE
-- On DOTDOT reduce production wildcard -> LSQUARE
-- On DOT reduce production wildcard -> LSQUARE
-- On DOLLAR reduce production wildcard -> LSQUARE
-- On DISJOINT reduce production wildcard -> LSQUARE
-- On DECREASES reduce production wildcard -> LSQUARE
-- On DANGLING reduce production wildcard -> LSQUARE
-- On CUSTOM reduce production wildcard -> LSQUARE
-- On CONTRACT reduce production wildcard -> LSQUARE
-- On CONTINUES reduce production wildcard -> LSQUARE
-- On CONSTANT10 reduce production wildcard -> LSQUARE
-- On CONSTANT reduce production wildcard -> LSQUARE
-- On CONST reduce production wildcard -> LSQUARE
-- On COMPLETE reduce production wildcard -> LSQUARE
-- On COMMA reduce production wildcard -> LSQUARE
-- On COLONGT reduce production wildcard -> LSQUARE
-- On COLONCOLON reduce production wildcard -> LSQUARE
-- On COLON2 reduce production wildcard -> LSQUARE
-- On COLON reduce production wildcard -> LSQUARE
-- On CHAR reduce production wildcard -> LSQUARE
-- On CASE reduce production wildcard -> LSQUARE
-- On BSUNION reduce production wildcard -> LSQUARE
-- On BSTYPE reduce production wildcard -> LSQUARE
-- On BREAKS reduce production wildcard -> LSQUARE
-- On BOOLEAN reduce production wildcard -> LSQUARE
-- On BOOL reduce production wildcard -> LSQUARE
-- On BLOCK_LENGTH reduce production wildcard -> LSQUARE
-- On BIMPLIES reduce production wildcard -> LSQUARE
-- On BIFF reduce production wildcard -> LSQUARE
-- On BEHAVIORS reduce production wildcard -> LSQUARE
-- On BEHAVIOR reduce production wildcard -> LSQUARE
-- On BASE_ADDR reduce production wildcard -> LSQUARE
-- On AXIOMATIC reduce production wildcard -> LSQUARE
-- On AXIOM reduce production wildcard -> LSQUARE
-- On AUTOMATIC reduce production wildcard -> LSQUARE
-- On AT reduce production wildcard -> LSQUARE
-- On ASSUMES reduce production wildcard -> LSQUARE
-- On ASSIGNS reduce production wildcard -> LSQUARE
-- On ASSERT reduce production wildcard -> LSQUARE
-- On ARROW reduce production wildcard -> LSQUARE
-- On AND reduce production wildcard -> LSQUARE
-- On AMP reduce production wildcard -> LSQUARE
-- On ALLOCATION reduce production wildcard -> LSQUARE
-- On ALLOCATES reduce production wildcard -> LSQUARE
-- On ALLOCABLE reduce production wildcard -> LSQUARE

State 987:
## Known stack suffix:
## LPAR
## LR(1) items:
wildcard -> LPAR . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> LPAR
-- On WITH reduce production wildcard -> LPAR
-- On VOLATILE reduce production wildcard -> LPAR
-- On VOID reduce production wildcard -> LPAR
-- On VARIANT reduce production wildcard -> LPAR
-- On VALID_READ reduce production wildcard -> LPAR
-- On VALID_RANGE reduce production wildcard -> LPAR
-- On VALID_INDEX reduce production wildcard -> LPAR
-- On VALID reduce production wildcard -> LPAR
-- On UNSIGNED reduce production wildcard -> LPAR
-- On UNION reduce production wildcard -> LPAR
-- On UNALLOCATED reduce production wildcard -> LPAR
-- On TYPEOF reduce production wildcard -> LPAR
-- On TYPENAME reduce production wildcard -> LPAR
-- On TYPE reduce production wildcard -> LPAR
-- On TRUE reduce production wildcard -> LPAR
-- On TILDE reduce production wildcard -> LPAR
-- On TERMINATES reduce production wildcard -> LPAR
-- On STRUCT reduce production wildcard -> LPAR
-- On STRING_LITERAL reduce production wildcard -> LPAR
-- On STATIC reduce production wildcard -> LPAR
-- On STAR reduce production wildcard -> LPAR
-- On SLICE reduce production wildcard -> LPAR
-- On SLASH reduce production wildcard -> LPAR
-- On SIZEOF reduce production wildcard -> LPAR
-- On SIGNED reduce production wildcard -> LPAR
-- On SHORT reduce production wildcard -> LPAR
-- On SEPARATED reduce production wildcard -> LPAR
-- On SEMICOLON reduce production wildcard -> LPAR
-- On RSQUARE reduce production wildcard -> LPAR
-- On RPAR reduce production wildcard -> LPAR
-- On RETURNS reduce production wildcard -> LPAR
-- On RESULT reduce production wildcard -> LPAR
-- On REQUIRES reduce production wildcard -> LPAR
-- On REGISTER reduce production wildcard -> LPAR
-- On REAL reduce production wildcard -> LPAR
-- On READS reduce production wildcard -> LPAR
-- On RBRACE reduce production wildcard -> LPAR
-- On QUESTION reduce production wildcard -> LPAR
-- On PREDICATE reduce production wildcard -> LPAR
-- On PRAGMA reduce production wildcard -> LPAR
-- On PLUS reduce production wildcard -> LPAR
-- On PIPE reduce production wildcard -> LPAR
-- On PERCENT reduce production wildcard -> LPAR
-- On OR reduce production wildcard -> LPAR
-- On OLD reduce production wildcard -> LPAR
-- On OFFSET reduce production wildcard -> LPAR
-- On NULL reduce production wildcard -> LPAR
-- On NOTHING reduce production wildcard -> LPAR
-- On NOT reduce production wildcard -> LPAR
-- On NE reduce production wildcard -> LPAR
-- On MODULE reduce production wildcard -> LPAR
-- On MODEL reduce production wildcard -> LPAR
-- On MINUS reduce production wildcard -> LPAR
-- On LTLT reduce production wildcard -> LPAR
-- On LTCOLON reduce production wildcard -> LPAR
-- On LT reduce production wildcard -> LPAR
-- On LSQUARE reduce production wildcard -> LPAR
-- On LPAR reduce production wildcard -> LPAR
-- On LOOP reduce production wildcard -> LPAR
-- On LONG reduce production wildcard -> LPAR
-- On LOGIC reduce production wildcard -> LPAR
-- On LET reduce production wildcard -> LPAR
-- On LEMMA reduce production wildcard -> LPAR
-- On LE reduce production wildcard -> LPAR
-- On LBRACE reduce production wildcard -> LPAR
-- On LAMBDA reduce production wildcard -> LPAR
-- On LABEL reduce production wildcard -> LPAR
-- On INVARIANT reduce production wildcard -> LPAR
-- On INTER reduce production wildcard -> LPAR
-- On INTEGER reduce production wildcard -> LPAR
-- On INT reduce production wildcard -> LPAR
-- On INITIALIZED reduce production wildcard -> LPAR
-- On INDUCTIVE reduce production wildcard -> LPAR
-- On INCLUDE reduce production wildcard -> LPAR
-- On IMPLIES reduce production wildcard -> LPAR
-- On IMPACT reduce production wildcard -> LPAR
-- On IFF reduce production wildcard -> LPAR
-- On IF reduce production wildcard -> LPAR
-- On IDENTIFIER reduce production wildcard -> LPAR
-- On HATHAT reduce production wildcard -> LPAR
-- On HAT reduce production wildcard -> LPAR
-- On GTGT reduce production wildcard -> LPAR
-- On GT reduce production wildcard -> LPAR
-- On GLOBAL reduce production wildcard -> LPAR
-- On GHOST reduce production wildcard -> LPAR
-- On GE reduce production wildcard -> LPAR
-- On FUNCTION reduce production wildcard -> LPAR
-- On FROM reduce production wildcard -> LPAR
-- On FRESH reduce production wildcard -> LPAR
-- On FREES reduce production wildcard -> LPAR
-- On FREEABLE reduce production wildcard -> LPAR
-- On FORALL reduce production wildcard -> LPAR
-- On FOR reduce production wildcard -> LPAR
-- On FLOAT reduce production wildcard -> LPAR
-- On FALSE reduce production wildcard -> LPAR
-- On EXT_LET reduce production wildcard -> LPAR
-- On EXT_AT reduce production wildcard -> LPAR
-- On EXITS reduce production wildcard -> LPAR
-- On EXISTS reduce production wildcard -> LPAR
-- On EQUAL reduce production wildcard -> LPAR
-- On EQ reduce production wildcard -> LPAR
-- On EOF reduce production wildcard -> LPAR
-- On ENUM reduce production wildcard -> LPAR
-- On ENSURES reduce production wildcard -> LPAR
-- On EMPTY reduce production wildcard -> LPAR
-- On ELSE reduce production wildcard -> LPAR
-- On DYNAMIC reduce production wildcard -> LPAR
-- On DOUBLE reduce production wildcard -> LPAR
-- On DOTDOTDOT reduce production wildcard -> LPAR
-- On DOTDOT reduce production wildcard -> LPAR
-- On DOT reduce production wildcard -> LPAR
-- On DOLLAR reduce production wildcard -> LPAR
-- On DISJOINT reduce production wildcard -> LPAR
-- On DECREASES reduce production wildcard -> LPAR
-- On DANGLING reduce production wildcard -> LPAR
-- On CUSTOM reduce production wildcard -> LPAR
-- On CONTRACT reduce production wildcard -> LPAR
-- On CONTINUES reduce production wildcard -> LPAR
-- On CONSTANT10 reduce production wildcard -> LPAR
-- On CONSTANT reduce production wildcard -> LPAR
-- On CONST reduce production wildcard -> LPAR
-- On COMPLETE reduce production wildcard -> LPAR
-- On COMMA reduce production wildcard -> LPAR
-- On COLONGT reduce production wildcard -> LPAR
-- On COLONCOLON reduce production wildcard -> LPAR
-- On COLON2 reduce production wildcard -> LPAR
-- On COLON reduce production wildcard -> LPAR
-- On CHAR reduce production wildcard -> LPAR
-- On CASE reduce production wildcard -> LPAR
-- On BSUNION reduce production wildcard -> LPAR
-- On BSTYPE reduce production wildcard -> LPAR
-- On BREAKS reduce production wildcard -> LPAR
-- On BOOLEAN reduce production wildcard -> LPAR
-- On BOOL reduce production wildcard -> LPAR
-- On BLOCK_LENGTH reduce production wildcard -> LPAR
-- On BIMPLIES reduce production wildcard -> LPAR
-- On BIFF reduce production wildcard -> LPAR
-- On BEHAVIORS reduce production wildcard -> LPAR
-- On BEHAVIOR reduce production wildcard -> LPAR
-- On BASE_ADDR reduce production wildcard -> LPAR
-- On AXIOMATIC reduce production wildcard -> LPAR
-- On AXIOM reduce production wildcard -> LPAR
-- On AUTOMATIC reduce production wildcard -> LPAR
-- On AT reduce production wildcard -> LPAR
-- On ASSUMES reduce production wildcard -> LPAR
-- On ASSIGNS reduce production wildcard -> LPAR
-- On ASSERT reduce production wildcard -> LPAR
-- On ARROW reduce production wildcard -> LPAR
-- On AND reduce production wildcard -> LPAR
-- On AMP reduce production wildcard -> LPAR
-- On ALLOCATION reduce production wildcard -> LPAR
-- On ALLOCATES reduce production wildcard -> LPAR
-- On ALLOCABLE reduce production wildcard -> LPAR

State 988:
## Known stack suffix:
## LET
## LR(1) items:
bs_keyword -> LET . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> LET
-- On WITH reduce production bs_keyword -> LET
-- On VOLATILE reduce production bs_keyword -> LET
-- On VOID reduce production bs_keyword -> LET
-- On VARIANT reduce production bs_keyword -> LET
-- On VALID_READ reduce production bs_keyword -> LET
-- On VALID_RANGE reduce production bs_keyword -> LET
-- On VALID_INDEX reduce production bs_keyword -> LET
-- On VALID reduce production bs_keyword -> LET
-- On UNSIGNED reduce production bs_keyword -> LET
-- On UNION reduce production bs_keyword -> LET
-- On UNALLOCATED reduce production bs_keyword -> LET
-- On TYPEOF reduce production bs_keyword -> LET
-- On TYPENAME reduce production bs_keyword -> LET
-- On TYPE reduce production bs_keyword -> LET
-- On TRUE reduce production bs_keyword -> LET
-- On TILDE reduce production bs_keyword -> LET
-- On TERMINATES reduce production bs_keyword -> LET
-- On STRUCT reduce production bs_keyword -> LET
-- On STRING_LITERAL reduce production bs_keyword -> LET
-- On STATIC reduce production bs_keyword -> LET
-- On STAR reduce production bs_keyword -> LET
-- On SLICE reduce production bs_keyword -> LET
-- On SLASH reduce production bs_keyword -> LET
-- On SIZEOF reduce production bs_keyword -> LET
-- On SIGNED reduce production bs_keyword -> LET
-- On SHORT reduce production bs_keyword -> LET
-- On SEPARATED reduce production bs_keyword -> LET
-- On SEMICOLON reduce production bs_keyword -> LET
-- On RSQUARE reduce production bs_keyword -> LET
-- On RPAR reduce production bs_keyword -> LET
-- On RETURNS reduce production bs_keyword -> LET
-- On RESULT reduce production bs_keyword -> LET
-- On REQUIRES reduce production bs_keyword -> LET
-- On REGISTER reduce production bs_keyword -> LET
-- On REAL reduce production bs_keyword -> LET
-- On READS reduce production bs_keyword -> LET
-- On RBRACE reduce production bs_keyword -> LET
-- On QUESTION reduce production bs_keyword -> LET
-- On PREDICATE reduce production bs_keyword -> LET
-- On PRAGMA reduce production bs_keyword -> LET
-- On PLUS reduce production bs_keyword -> LET
-- On PIPE reduce production bs_keyword -> LET
-- On PERCENT reduce production bs_keyword -> LET
-- On OR reduce production bs_keyword -> LET
-- On OLD reduce production bs_keyword -> LET
-- On OFFSET reduce production bs_keyword -> LET
-- On NULL reduce production bs_keyword -> LET
-- On NOTHING reduce production bs_keyword -> LET
-- On NOT reduce production bs_keyword -> LET
-- On NE reduce production bs_keyword -> LET
-- On MODULE reduce production bs_keyword -> LET
-- On MODEL reduce production bs_keyword -> LET
-- On MINUS reduce production bs_keyword -> LET
-- On LTLT reduce production bs_keyword -> LET
-- On LTCOLON reduce production bs_keyword -> LET
-- On LT reduce production bs_keyword -> LET
-- On LSQUARE reduce production bs_keyword -> LET
-- On LPAR reduce production bs_keyword -> LET
-- On LOOP reduce production bs_keyword -> LET
-- On LONG reduce production bs_keyword -> LET
-- On LOGIC reduce production bs_keyword -> LET
-- On LET reduce production bs_keyword -> LET
-- On LEMMA reduce production bs_keyword -> LET
-- On LE reduce production bs_keyword -> LET
-- On LBRACE reduce production bs_keyword -> LET
-- On LAMBDA reduce production bs_keyword -> LET
-- On LABEL reduce production bs_keyword -> LET
-- On INVARIANT reduce production bs_keyword -> LET
-- On INTER reduce production bs_keyword -> LET
-- On INTEGER reduce production bs_keyword -> LET
-- On INT reduce production bs_keyword -> LET
-- On INITIALIZED reduce production bs_keyword -> LET
-- On INDUCTIVE reduce production bs_keyword -> LET
-- On INCLUDE reduce production bs_keyword -> LET
-- On IMPLIES reduce production bs_keyword -> LET
-- On IMPACT reduce production bs_keyword -> LET
-- On IFF reduce production bs_keyword -> LET
-- On IF reduce production bs_keyword -> LET
-- On IDENTIFIER reduce production bs_keyword -> LET
-- On HATHAT reduce production bs_keyword -> LET
-- On HAT reduce production bs_keyword -> LET
-- On GTGT reduce production bs_keyword -> LET
-- On GT reduce production bs_keyword -> LET
-- On GLOBAL reduce production bs_keyword -> LET
-- On GHOST reduce production bs_keyword -> LET
-- On GE reduce production bs_keyword -> LET
-- On FUNCTION reduce production bs_keyword -> LET
-- On FROM reduce production bs_keyword -> LET
-- On FRESH reduce production bs_keyword -> LET
-- On FREES reduce production bs_keyword -> LET
-- On FREEABLE reduce production bs_keyword -> LET
-- On FORALL reduce production bs_keyword -> LET
-- On FOR reduce production bs_keyword -> LET
-- On FLOAT reduce production bs_keyword -> LET
-- On FALSE reduce production bs_keyword -> LET
-- On EXT_LET reduce production bs_keyword -> LET
-- On EXT_AT reduce production bs_keyword -> LET
-- On EXITS reduce production bs_keyword -> LET
-- On EXISTS reduce production bs_keyword -> LET
-- On EQUAL reduce production bs_keyword -> LET
-- On EQ reduce production bs_keyword -> LET
-- On EOF reduce production bs_keyword -> LET
-- On ENUM reduce production bs_keyword -> LET
-- On ENSURES reduce production bs_keyword -> LET
-- On EMPTY reduce production bs_keyword -> LET
-- On ELSE reduce production bs_keyword -> LET
-- On DYNAMIC reduce production bs_keyword -> LET
-- On DOUBLE reduce production bs_keyword -> LET
-- On DOTDOTDOT reduce production bs_keyword -> LET
-- On DOTDOT reduce production bs_keyword -> LET
-- On DOT reduce production bs_keyword -> LET
-- On DOLLAR reduce production bs_keyword -> LET
-- On DISJOINT reduce production bs_keyword -> LET
-- On DECREASES reduce production bs_keyword -> LET
-- On DANGLING reduce production bs_keyword -> LET
-- On CUSTOM reduce production bs_keyword -> LET
-- On CONTRACT reduce production bs_keyword -> LET
-- On CONTINUES reduce production bs_keyword -> LET
-- On CONSTANT10 reduce production bs_keyword -> LET
-- On CONSTANT reduce production bs_keyword -> LET
-- On CONST reduce production bs_keyword -> LET
-- On COMPLETE reduce production bs_keyword -> LET
-- On COMMA reduce production bs_keyword -> LET
-- On COLONGT reduce production bs_keyword -> LET
-- On COLONCOLON reduce production bs_keyword -> LET
-- On COLON2 reduce production bs_keyword -> LET
-- On COLON reduce production bs_keyword -> LET
-- On CHAR reduce production bs_keyword -> LET
-- On CASE reduce production bs_keyword -> LET
-- On BSUNION reduce production bs_keyword -> LET
-- On BSTYPE reduce production bs_keyword -> LET
-- On BREAKS reduce production bs_keyword -> LET
-- On BOOLEAN reduce production bs_keyword -> LET
-- On BOOL reduce production bs_keyword -> LET
-- On BLOCK_LENGTH reduce production bs_keyword -> LET
-- On BIMPLIES reduce production bs_keyword -> LET
-- On BIFF reduce production bs_keyword -> LET
-- On BEHAVIORS reduce production bs_keyword -> LET
-- On BEHAVIOR reduce production bs_keyword -> LET
-- On BASE_ADDR reduce production bs_keyword -> LET
-- On AXIOMATIC reduce production bs_keyword -> LET
-- On AXIOM reduce production bs_keyword -> LET
-- On AUTOMATIC reduce production bs_keyword -> LET
-- On AT reduce production bs_keyword -> LET
-- On ASSUMES reduce production bs_keyword -> LET
-- On ASSIGNS reduce production bs_keyword -> LET
-- On ASSERT reduce production bs_keyword -> LET
-- On ARROW reduce production bs_keyword -> LET
-- On AND reduce production bs_keyword -> LET
-- On AMP reduce production bs_keyword -> LET
-- On ALLOCATION reduce production bs_keyword -> LET
-- On ALLOCATES reduce production bs_keyword -> LET
-- On ALLOCABLE reduce production bs_keyword -> LET

State 989:
## Known stack suffix:
## LE
## LR(1) items:
wildcard -> LE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> LE
-- On WITH reduce production wildcard -> LE
-- On VOLATILE reduce production wildcard -> LE
-- On VOID reduce production wildcard -> LE
-- On VARIANT reduce production wildcard -> LE
-- On VALID_READ reduce production wildcard -> LE
-- On VALID_RANGE reduce production wildcard -> LE
-- On VALID_INDEX reduce production wildcard -> LE
-- On VALID reduce production wildcard -> LE
-- On UNSIGNED reduce production wildcard -> LE
-- On UNION reduce production wildcard -> LE
-- On UNALLOCATED reduce production wildcard -> LE
-- On TYPEOF reduce production wildcard -> LE
-- On TYPENAME reduce production wildcard -> LE
-- On TYPE reduce production wildcard -> LE
-- On TRUE reduce production wildcard -> LE
-- On TILDE reduce production wildcard -> LE
-- On TERMINATES reduce production wildcard -> LE
-- On STRUCT reduce production wildcard -> LE
-- On STRING_LITERAL reduce production wildcard -> LE
-- On STATIC reduce production wildcard -> LE
-- On STAR reduce production wildcard -> LE
-- On SLICE reduce production wildcard -> LE
-- On SLASH reduce production wildcard -> LE
-- On SIZEOF reduce production wildcard -> LE
-- On SIGNED reduce production wildcard -> LE
-- On SHORT reduce production wildcard -> LE
-- On SEPARATED reduce production wildcard -> LE
-- On SEMICOLON reduce production wildcard -> LE
-- On RSQUARE reduce production wildcard -> LE
-- On RPAR reduce production wildcard -> LE
-- On RETURNS reduce production wildcard -> LE
-- On RESULT reduce production wildcard -> LE
-- On REQUIRES reduce production wildcard -> LE
-- On REGISTER reduce production wildcard -> LE
-- On REAL reduce production wildcard -> LE
-- On READS reduce production wildcard -> LE
-- On RBRACE reduce production wildcard -> LE
-- On QUESTION reduce production wildcard -> LE
-- On PREDICATE reduce production wildcard -> LE
-- On PRAGMA reduce production wildcard -> LE
-- On PLUS reduce production wildcard -> LE
-- On PIPE reduce production wildcard -> LE
-- On PERCENT reduce production wildcard -> LE
-- On OR reduce production wildcard -> LE
-- On OLD reduce production wildcard -> LE
-- On OFFSET reduce production wildcard -> LE
-- On NULL reduce production wildcard -> LE
-- On NOTHING reduce production wildcard -> LE
-- On NOT reduce production wildcard -> LE
-- On NE reduce production wildcard -> LE
-- On MODULE reduce production wildcard -> LE
-- On MODEL reduce production wildcard -> LE
-- On MINUS reduce production wildcard -> LE
-- On LTLT reduce production wildcard -> LE
-- On LTCOLON reduce production wildcard -> LE
-- On LT reduce production wildcard -> LE
-- On LSQUARE reduce production wildcard -> LE
-- On LPAR reduce production wildcard -> LE
-- On LOOP reduce production wildcard -> LE
-- On LONG reduce production wildcard -> LE
-- On LOGIC reduce production wildcard -> LE
-- On LET reduce production wildcard -> LE
-- On LEMMA reduce production wildcard -> LE
-- On LE reduce production wildcard -> LE
-- On LBRACE reduce production wildcard -> LE
-- On LAMBDA reduce production wildcard -> LE
-- On LABEL reduce production wildcard -> LE
-- On INVARIANT reduce production wildcard -> LE
-- On INTER reduce production wildcard -> LE
-- On INTEGER reduce production wildcard -> LE
-- On INT reduce production wildcard -> LE
-- On INITIALIZED reduce production wildcard -> LE
-- On INDUCTIVE reduce production wildcard -> LE
-- On INCLUDE reduce production wildcard -> LE
-- On IMPLIES reduce production wildcard -> LE
-- On IMPACT reduce production wildcard -> LE
-- On IFF reduce production wildcard -> LE
-- On IF reduce production wildcard -> LE
-- On IDENTIFIER reduce production wildcard -> LE
-- On HATHAT reduce production wildcard -> LE
-- On HAT reduce production wildcard -> LE
-- On GTGT reduce production wildcard -> LE
-- On GT reduce production wildcard -> LE
-- On GLOBAL reduce production wildcard -> LE
-- On GHOST reduce production wildcard -> LE
-- On GE reduce production wildcard -> LE
-- On FUNCTION reduce production wildcard -> LE
-- On FROM reduce production wildcard -> LE
-- On FRESH reduce production wildcard -> LE
-- On FREES reduce production wildcard -> LE
-- On FREEABLE reduce production wildcard -> LE
-- On FORALL reduce production wildcard -> LE
-- On FOR reduce production wildcard -> LE
-- On FLOAT reduce production wildcard -> LE
-- On FALSE reduce production wildcard -> LE
-- On EXT_LET reduce production wildcard -> LE
-- On EXT_AT reduce production wildcard -> LE
-- On EXITS reduce production wildcard -> LE
-- On EXISTS reduce production wildcard -> LE
-- On EQUAL reduce production wildcard -> LE
-- On EQ reduce production wildcard -> LE
-- On EOF reduce production wildcard -> LE
-- On ENUM reduce production wildcard -> LE
-- On ENSURES reduce production wildcard -> LE
-- On EMPTY reduce production wildcard -> LE
-- On ELSE reduce production wildcard -> LE
-- On DYNAMIC reduce production wildcard -> LE
-- On DOUBLE reduce production wildcard -> LE
-- On DOTDOTDOT reduce production wildcard -> LE
-- On DOTDOT reduce production wildcard -> LE
-- On DOT reduce production wildcard -> LE
-- On DOLLAR reduce production wildcard -> LE
-- On DISJOINT reduce production wildcard -> LE
-- On DECREASES reduce production wildcard -> LE
-- On DANGLING reduce production wildcard -> LE
-- On CUSTOM reduce production wildcard -> LE
-- On CONTRACT reduce production wildcard -> LE
-- On CONTINUES reduce production wildcard -> LE
-- On CONSTANT10 reduce production wildcard -> LE
-- On CONSTANT reduce production wildcard -> LE
-- On CONST reduce production wildcard -> LE
-- On COMPLETE reduce production wildcard -> LE
-- On COMMA reduce production wildcard -> LE
-- On COLONGT reduce production wildcard -> LE
-- On COLONCOLON reduce production wildcard -> LE
-- On COLON2 reduce production wildcard -> LE
-- On COLON reduce production wildcard -> LE
-- On CHAR reduce production wildcard -> LE
-- On CASE reduce production wildcard -> LE
-- On BSUNION reduce production wildcard -> LE
-- On BSTYPE reduce production wildcard -> LE
-- On BREAKS reduce production wildcard -> LE
-- On BOOLEAN reduce production wildcard -> LE
-- On BOOL reduce production wildcard -> LE
-- On BLOCK_LENGTH reduce production wildcard -> LE
-- On BIMPLIES reduce production wildcard -> LE
-- On BIFF reduce production wildcard -> LE
-- On BEHAVIORS reduce production wildcard -> LE
-- On BEHAVIOR reduce production wildcard -> LE
-- On BASE_ADDR reduce production wildcard -> LE
-- On AXIOMATIC reduce production wildcard -> LE
-- On AXIOM reduce production wildcard -> LE
-- On AUTOMATIC reduce production wildcard -> LE
-- On AT reduce production wildcard -> LE
-- On ASSUMES reduce production wildcard -> LE
-- On ASSIGNS reduce production wildcard -> LE
-- On ASSERT reduce production wildcard -> LE
-- On ARROW reduce production wildcard -> LE
-- On AND reduce production wildcard -> LE
-- On AMP reduce production wildcard -> LE
-- On ALLOCATION reduce production wildcard -> LE
-- On ALLOCATES reduce production wildcard -> LE
-- On ALLOCABLE reduce production wildcard -> LE

State 990:
## Known stack suffix:
## LBRACE
## LR(1) items:
wildcard -> LBRACE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> LBRACE
-- On WITH reduce production wildcard -> LBRACE
-- On VOLATILE reduce production wildcard -> LBRACE
-- On VOID reduce production wildcard -> LBRACE
-- On VARIANT reduce production wildcard -> LBRACE
-- On VALID_READ reduce production wildcard -> LBRACE
-- On VALID_RANGE reduce production wildcard -> LBRACE
-- On VALID_INDEX reduce production wildcard -> LBRACE
-- On VALID reduce production wildcard -> LBRACE
-- On UNSIGNED reduce production wildcard -> LBRACE
-- On UNION reduce production wildcard -> LBRACE
-- On UNALLOCATED reduce production wildcard -> LBRACE
-- On TYPEOF reduce production wildcard -> LBRACE
-- On TYPENAME reduce production wildcard -> LBRACE
-- On TYPE reduce production wildcard -> LBRACE
-- On TRUE reduce production wildcard -> LBRACE
-- On TILDE reduce production wildcard -> LBRACE
-- On TERMINATES reduce production wildcard -> LBRACE
-- On STRUCT reduce production wildcard -> LBRACE
-- On STRING_LITERAL reduce production wildcard -> LBRACE
-- On STATIC reduce production wildcard -> LBRACE
-- On STAR reduce production wildcard -> LBRACE
-- On SLICE reduce production wildcard -> LBRACE
-- On SLASH reduce production wildcard -> LBRACE
-- On SIZEOF reduce production wildcard -> LBRACE
-- On SIGNED reduce production wildcard -> LBRACE
-- On SHORT reduce production wildcard -> LBRACE
-- On SEPARATED reduce production wildcard -> LBRACE
-- On SEMICOLON reduce production wildcard -> LBRACE
-- On RSQUARE reduce production wildcard -> LBRACE
-- On RPAR reduce production wildcard -> LBRACE
-- On RETURNS reduce production wildcard -> LBRACE
-- On RESULT reduce production wildcard -> LBRACE
-- On REQUIRES reduce production wildcard -> LBRACE
-- On REGISTER reduce production wildcard -> LBRACE
-- On REAL reduce production wildcard -> LBRACE
-- On READS reduce production wildcard -> LBRACE
-- On RBRACE reduce production wildcard -> LBRACE
-- On QUESTION reduce production wildcard -> LBRACE
-- On PREDICATE reduce production wildcard -> LBRACE
-- On PRAGMA reduce production wildcard -> LBRACE
-- On PLUS reduce production wildcard -> LBRACE
-- On PIPE reduce production wildcard -> LBRACE
-- On PERCENT reduce production wildcard -> LBRACE
-- On OR reduce production wildcard -> LBRACE
-- On OLD reduce production wildcard -> LBRACE
-- On OFFSET reduce production wildcard -> LBRACE
-- On NULL reduce production wildcard -> LBRACE
-- On NOTHING reduce production wildcard -> LBRACE
-- On NOT reduce production wildcard -> LBRACE
-- On NE reduce production wildcard -> LBRACE
-- On MODULE reduce production wildcard -> LBRACE
-- On MODEL reduce production wildcard -> LBRACE
-- On MINUS reduce production wildcard -> LBRACE
-- On LTLT reduce production wildcard -> LBRACE
-- On LTCOLON reduce production wildcard -> LBRACE
-- On LT reduce production wildcard -> LBRACE
-- On LSQUARE reduce production wildcard -> LBRACE
-- On LPAR reduce production wildcard -> LBRACE
-- On LOOP reduce production wildcard -> LBRACE
-- On LONG reduce production wildcard -> LBRACE
-- On LOGIC reduce production wildcard -> LBRACE
-- On LET reduce production wildcard -> LBRACE
-- On LEMMA reduce production wildcard -> LBRACE
-- On LE reduce production wildcard -> LBRACE
-- On LBRACE reduce production wildcard -> LBRACE
-- On LAMBDA reduce production wildcard -> LBRACE
-- On LABEL reduce production wildcard -> LBRACE
-- On INVARIANT reduce production wildcard -> LBRACE
-- On INTER reduce production wildcard -> LBRACE
-- On INTEGER reduce production wildcard -> LBRACE
-- On INT reduce production wildcard -> LBRACE
-- On INITIALIZED reduce production wildcard -> LBRACE
-- On INDUCTIVE reduce production wildcard -> LBRACE
-- On INCLUDE reduce production wildcard -> LBRACE
-- On IMPLIES reduce production wildcard -> LBRACE
-- On IMPACT reduce production wildcard -> LBRACE
-- On IFF reduce production wildcard -> LBRACE
-- On IF reduce production wildcard -> LBRACE
-- On IDENTIFIER reduce production wildcard -> LBRACE
-- On HATHAT reduce production wildcard -> LBRACE
-- On HAT reduce production wildcard -> LBRACE
-- On GTGT reduce production wildcard -> LBRACE
-- On GT reduce production wildcard -> LBRACE
-- On GLOBAL reduce production wildcard -> LBRACE
-- On GHOST reduce production wildcard -> LBRACE
-- On GE reduce production wildcard -> LBRACE
-- On FUNCTION reduce production wildcard -> LBRACE
-- On FROM reduce production wildcard -> LBRACE
-- On FRESH reduce production wildcard -> LBRACE
-- On FREES reduce production wildcard -> LBRACE
-- On FREEABLE reduce production wildcard -> LBRACE
-- On FORALL reduce production wildcard -> LBRACE
-- On FOR reduce production wildcard -> LBRACE
-- On FLOAT reduce production wildcard -> LBRACE
-- On FALSE reduce production wildcard -> LBRACE
-- On EXT_LET reduce production wildcard -> LBRACE
-- On EXT_AT reduce production wildcard -> LBRACE
-- On EXITS reduce production wildcard -> LBRACE
-- On EXISTS reduce production wildcard -> LBRACE
-- On EQUAL reduce production wildcard -> LBRACE
-- On EQ reduce production wildcard -> LBRACE
-- On EOF reduce production wildcard -> LBRACE
-- On ENUM reduce production wildcard -> LBRACE
-- On ENSURES reduce production wildcard -> LBRACE
-- On EMPTY reduce production wildcard -> LBRACE
-- On ELSE reduce production wildcard -> LBRACE
-- On DYNAMIC reduce production wildcard -> LBRACE
-- On DOUBLE reduce production wildcard -> LBRACE
-- On DOTDOTDOT reduce production wildcard -> LBRACE
-- On DOTDOT reduce production wildcard -> LBRACE
-- On DOT reduce production wildcard -> LBRACE
-- On DOLLAR reduce production wildcard -> LBRACE
-- On DISJOINT reduce production wildcard -> LBRACE
-- On DECREASES reduce production wildcard -> LBRACE
-- On DANGLING reduce production wildcard -> LBRACE
-- On CUSTOM reduce production wildcard -> LBRACE
-- On CONTRACT reduce production wildcard -> LBRACE
-- On CONTINUES reduce production wildcard -> LBRACE
-- On CONSTANT10 reduce production wildcard -> LBRACE
-- On CONSTANT reduce production wildcard -> LBRACE
-- On CONST reduce production wildcard -> LBRACE
-- On COMPLETE reduce production wildcard -> LBRACE
-- On COMMA reduce production wildcard -> LBRACE
-- On COLONGT reduce production wildcard -> LBRACE
-- On COLONCOLON reduce production wildcard -> LBRACE
-- On COLON2 reduce production wildcard -> LBRACE
-- On COLON reduce production wildcard -> LBRACE
-- On CHAR reduce production wildcard -> LBRACE
-- On CASE reduce production wildcard -> LBRACE
-- On BSUNION reduce production wildcard -> LBRACE
-- On BSTYPE reduce production wildcard -> LBRACE
-- On BREAKS reduce production wildcard -> LBRACE
-- On BOOLEAN reduce production wildcard -> LBRACE
-- On BOOL reduce production wildcard -> LBRACE
-- On BLOCK_LENGTH reduce production wildcard -> LBRACE
-- On BIMPLIES reduce production wildcard -> LBRACE
-- On BIFF reduce production wildcard -> LBRACE
-- On BEHAVIORS reduce production wildcard -> LBRACE
-- On BEHAVIOR reduce production wildcard -> LBRACE
-- On BASE_ADDR reduce production wildcard -> LBRACE
-- On AXIOMATIC reduce production wildcard -> LBRACE
-- On AXIOM reduce production wildcard -> LBRACE
-- On AUTOMATIC reduce production wildcard -> LBRACE
-- On AT reduce production wildcard -> LBRACE
-- On ASSUMES reduce production wildcard -> LBRACE
-- On ASSIGNS reduce production wildcard -> LBRACE
-- On ASSERT reduce production wildcard -> LBRACE
-- On ARROW reduce production wildcard -> LBRACE
-- On AND reduce production wildcard -> LBRACE
-- On AMP reduce production wildcard -> LBRACE
-- On ALLOCATION reduce production wildcard -> LBRACE
-- On ALLOCATES reduce production wildcard -> LBRACE
-- On ALLOCABLE reduce production wildcard -> LBRACE

State 991:
## Known stack suffix:
## LAMBDA
## LR(1) items:
bs_keyword -> LAMBDA . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> LAMBDA
-- On WITH reduce production bs_keyword -> LAMBDA
-- On VOLATILE reduce production bs_keyword -> LAMBDA
-- On VOID reduce production bs_keyword -> LAMBDA
-- On VARIANT reduce production bs_keyword -> LAMBDA
-- On VALID_READ reduce production bs_keyword -> LAMBDA
-- On VALID_RANGE reduce production bs_keyword -> LAMBDA
-- On VALID_INDEX reduce production bs_keyword -> LAMBDA
-- On VALID reduce production bs_keyword -> LAMBDA
-- On UNSIGNED reduce production bs_keyword -> LAMBDA
-- On UNION reduce production bs_keyword -> LAMBDA
-- On UNALLOCATED reduce production bs_keyword -> LAMBDA
-- On TYPEOF reduce production bs_keyword -> LAMBDA
-- On TYPENAME reduce production bs_keyword -> LAMBDA
-- On TYPE reduce production bs_keyword -> LAMBDA
-- On TRUE reduce production bs_keyword -> LAMBDA
-- On TILDE reduce production bs_keyword -> LAMBDA
-- On TERMINATES reduce production bs_keyword -> LAMBDA
-- On STRUCT reduce production bs_keyword -> LAMBDA
-- On STRING_LITERAL reduce production bs_keyword -> LAMBDA
-- On STATIC reduce production bs_keyword -> LAMBDA
-- On STAR reduce production bs_keyword -> LAMBDA
-- On SLICE reduce production bs_keyword -> LAMBDA
-- On SLASH reduce production bs_keyword -> LAMBDA
-- On SIZEOF reduce production bs_keyword -> LAMBDA
-- On SIGNED reduce production bs_keyword -> LAMBDA
-- On SHORT reduce production bs_keyword -> LAMBDA
-- On SEPARATED reduce production bs_keyword -> LAMBDA
-- On SEMICOLON reduce production bs_keyword -> LAMBDA
-- On RSQUARE reduce production bs_keyword -> LAMBDA
-- On RPAR reduce production bs_keyword -> LAMBDA
-- On RETURNS reduce production bs_keyword -> LAMBDA
-- On RESULT reduce production bs_keyword -> LAMBDA
-- On REQUIRES reduce production bs_keyword -> LAMBDA
-- On REGISTER reduce production bs_keyword -> LAMBDA
-- On REAL reduce production bs_keyword -> LAMBDA
-- On READS reduce production bs_keyword -> LAMBDA
-- On RBRACE reduce production bs_keyword -> LAMBDA
-- On QUESTION reduce production bs_keyword -> LAMBDA
-- On PREDICATE reduce production bs_keyword -> LAMBDA
-- On PRAGMA reduce production bs_keyword -> LAMBDA
-- On PLUS reduce production bs_keyword -> LAMBDA
-- On PIPE reduce production bs_keyword -> LAMBDA
-- On PERCENT reduce production bs_keyword -> LAMBDA
-- On OR reduce production bs_keyword -> LAMBDA
-- On OLD reduce production bs_keyword -> LAMBDA
-- On OFFSET reduce production bs_keyword -> LAMBDA
-- On NULL reduce production bs_keyword -> LAMBDA
-- On NOTHING reduce production bs_keyword -> LAMBDA
-- On NOT reduce production bs_keyword -> LAMBDA
-- On NE reduce production bs_keyword -> LAMBDA
-- On MODULE reduce production bs_keyword -> LAMBDA
-- On MODEL reduce production bs_keyword -> LAMBDA
-- On MINUS reduce production bs_keyword -> LAMBDA
-- On LTLT reduce production bs_keyword -> LAMBDA
-- On LTCOLON reduce production bs_keyword -> LAMBDA
-- On LT reduce production bs_keyword -> LAMBDA
-- On LSQUARE reduce production bs_keyword -> LAMBDA
-- On LPAR reduce production bs_keyword -> LAMBDA
-- On LOOP reduce production bs_keyword -> LAMBDA
-- On LONG reduce production bs_keyword -> LAMBDA
-- On LOGIC reduce production bs_keyword -> LAMBDA
-- On LET reduce production bs_keyword -> LAMBDA
-- On LEMMA reduce production bs_keyword -> LAMBDA
-- On LE reduce production bs_keyword -> LAMBDA
-- On LBRACE reduce production bs_keyword -> LAMBDA
-- On LAMBDA reduce production bs_keyword -> LAMBDA
-- On LABEL reduce production bs_keyword -> LAMBDA
-- On INVARIANT reduce production bs_keyword -> LAMBDA
-- On INTER reduce production bs_keyword -> LAMBDA
-- On INTEGER reduce production bs_keyword -> LAMBDA
-- On INT reduce production bs_keyword -> LAMBDA
-- On INITIALIZED reduce production bs_keyword -> LAMBDA
-- On INDUCTIVE reduce production bs_keyword -> LAMBDA
-- On INCLUDE reduce production bs_keyword -> LAMBDA
-- On IMPLIES reduce production bs_keyword -> LAMBDA
-- On IMPACT reduce production bs_keyword -> LAMBDA
-- On IFF reduce production bs_keyword -> LAMBDA
-- On IF reduce production bs_keyword -> LAMBDA
-- On IDENTIFIER reduce production bs_keyword -> LAMBDA
-- On HATHAT reduce production bs_keyword -> LAMBDA
-- On HAT reduce production bs_keyword -> LAMBDA
-- On GTGT reduce production bs_keyword -> LAMBDA
-- On GT reduce production bs_keyword -> LAMBDA
-- On GLOBAL reduce production bs_keyword -> LAMBDA
-- On GHOST reduce production bs_keyword -> LAMBDA
-- On GE reduce production bs_keyword -> LAMBDA
-- On FUNCTION reduce production bs_keyword -> LAMBDA
-- On FROM reduce production bs_keyword -> LAMBDA
-- On FRESH reduce production bs_keyword -> LAMBDA
-- On FREES reduce production bs_keyword -> LAMBDA
-- On FREEABLE reduce production bs_keyword -> LAMBDA
-- On FORALL reduce production bs_keyword -> LAMBDA
-- On FOR reduce production bs_keyword -> LAMBDA
-- On FLOAT reduce production bs_keyword -> LAMBDA
-- On FALSE reduce production bs_keyword -> LAMBDA
-- On EXT_LET reduce production bs_keyword -> LAMBDA
-- On EXT_AT reduce production bs_keyword -> LAMBDA
-- On EXITS reduce production bs_keyword -> LAMBDA
-- On EXISTS reduce production bs_keyword -> LAMBDA
-- On EQUAL reduce production bs_keyword -> LAMBDA
-- On EQ reduce production bs_keyword -> LAMBDA
-- On EOF reduce production bs_keyword -> LAMBDA
-- On ENUM reduce production bs_keyword -> LAMBDA
-- On ENSURES reduce production bs_keyword -> LAMBDA
-- On EMPTY reduce production bs_keyword -> LAMBDA
-- On ELSE reduce production bs_keyword -> LAMBDA
-- On DYNAMIC reduce production bs_keyword -> LAMBDA
-- On DOUBLE reduce production bs_keyword -> LAMBDA
-- On DOTDOTDOT reduce production bs_keyword -> LAMBDA
-- On DOTDOT reduce production bs_keyword -> LAMBDA
-- On DOT reduce production bs_keyword -> LAMBDA
-- On DOLLAR reduce production bs_keyword -> LAMBDA
-- On DISJOINT reduce production bs_keyword -> LAMBDA
-- On DECREASES reduce production bs_keyword -> LAMBDA
-- On DANGLING reduce production bs_keyword -> LAMBDA
-- On CUSTOM reduce production bs_keyword -> LAMBDA
-- On CONTRACT reduce production bs_keyword -> LAMBDA
-- On CONTINUES reduce production bs_keyword -> LAMBDA
-- On CONSTANT10 reduce production bs_keyword -> LAMBDA
-- On CONSTANT reduce production bs_keyword -> LAMBDA
-- On CONST reduce production bs_keyword -> LAMBDA
-- On COMPLETE reduce production bs_keyword -> LAMBDA
-- On COMMA reduce production bs_keyword -> LAMBDA
-- On COLONGT reduce production bs_keyword -> LAMBDA
-- On COLONCOLON reduce production bs_keyword -> LAMBDA
-- On COLON2 reduce production bs_keyword -> LAMBDA
-- On COLON reduce production bs_keyword -> LAMBDA
-- On CHAR reduce production bs_keyword -> LAMBDA
-- On CASE reduce production bs_keyword -> LAMBDA
-- On BSUNION reduce production bs_keyword -> LAMBDA
-- On BSTYPE reduce production bs_keyword -> LAMBDA
-- On BREAKS reduce production bs_keyword -> LAMBDA
-- On BOOLEAN reduce production bs_keyword -> LAMBDA
-- On BOOL reduce production bs_keyword -> LAMBDA
-- On BLOCK_LENGTH reduce production bs_keyword -> LAMBDA
-- On BIMPLIES reduce production bs_keyword -> LAMBDA
-- On BIFF reduce production bs_keyword -> LAMBDA
-- On BEHAVIORS reduce production bs_keyword -> LAMBDA
-- On BEHAVIOR reduce production bs_keyword -> LAMBDA
-- On BASE_ADDR reduce production bs_keyword -> LAMBDA
-- On AXIOMATIC reduce production bs_keyword -> LAMBDA
-- On AXIOM reduce production bs_keyword -> LAMBDA
-- On AUTOMATIC reduce production bs_keyword -> LAMBDA
-- On AT reduce production bs_keyword -> LAMBDA
-- On ASSUMES reduce production bs_keyword -> LAMBDA
-- On ASSIGNS reduce production bs_keyword -> LAMBDA
-- On ASSERT reduce production bs_keyword -> LAMBDA
-- On ARROW reduce production bs_keyword -> LAMBDA
-- On AND reduce production bs_keyword -> LAMBDA
-- On AMP reduce production bs_keyword -> LAMBDA
-- On ALLOCATION reduce production bs_keyword -> LAMBDA
-- On ALLOCATES reduce production bs_keyword -> LAMBDA
-- On ALLOCABLE reduce production bs_keyword -> LAMBDA

State 992:
## Known stack suffix:
## INTER
## LR(1) items:
bs_keyword -> INTER . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> INTER
-- On WITH reduce production bs_keyword -> INTER
-- On VOLATILE reduce production bs_keyword -> INTER
-- On VOID reduce production bs_keyword -> INTER
-- On VARIANT reduce production bs_keyword -> INTER
-- On VALID_READ reduce production bs_keyword -> INTER
-- On VALID_RANGE reduce production bs_keyword -> INTER
-- On VALID_INDEX reduce production bs_keyword -> INTER
-- On VALID reduce production bs_keyword -> INTER
-- On UNSIGNED reduce production bs_keyword -> INTER
-- On UNION reduce production bs_keyword -> INTER
-- On UNALLOCATED reduce production bs_keyword -> INTER
-- On TYPEOF reduce production bs_keyword -> INTER
-- On TYPENAME reduce production bs_keyword -> INTER
-- On TYPE reduce production bs_keyword -> INTER
-- On TRUE reduce production bs_keyword -> INTER
-- On TILDE reduce production bs_keyword -> INTER
-- On TERMINATES reduce production bs_keyword -> INTER
-- On STRUCT reduce production bs_keyword -> INTER
-- On STRING_LITERAL reduce production bs_keyword -> INTER
-- On STATIC reduce production bs_keyword -> INTER
-- On STAR reduce production bs_keyword -> INTER
-- On SLICE reduce production bs_keyword -> INTER
-- On SLASH reduce production bs_keyword -> INTER
-- On SIZEOF reduce production bs_keyword -> INTER
-- On SIGNED reduce production bs_keyword -> INTER
-- On SHORT reduce production bs_keyword -> INTER
-- On SEPARATED reduce production bs_keyword -> INTER
-- On SEMICOLON reduce production bs_keyword -> INTER
-- On RSQUARE reduce production bs_keyword -> INTER
-- On RPAR reduce production bs_keyword -> INTER
-- On RETURNS reduce production bs_keyword -> INTER
-- On RESULT reduce production bs_keyword -> INTER
-- On REQUIRES reduce production bs_keyword -> INTER
-- On REGISTER reduce production bs_keyword -> INTER
-- On REAL reduce production bs_keyword -> INTER
-- On READS reduce production bs_keyword -> INTER
-- On RBRACE reduce production bs_keyword -> INTER
-- On QUESTION reduce production bs_keyword -> INTER
-- On PREDICATE reduce production bs_keyword -> INTER
-- On PRAGMA reduce production bs_keyword -> INTER
-- On PLUS reduce production bs_keyword -> INTER
-- On PIPE reduce production bs_keyword -> INTER
-- On PERCENT reduce production bs_keyword -> INTER
-- On OR reduce production bs_keyword -> INTER
-- On OLD reduce production bs_keyword -> INTER
-- On OFFSET reduce production bs_keyword -> INTER
-- On NULL reduce production bs_keyword -> INTER
-- On NOTHING reduce production bs_keyword -> INTER
-- On NOT reduce production bs_keyword -> INTER
-- On NE reduce production bs_keyword -> INTER
-- On MODULE reduce production bs_keyword -> INTER
-- On MODEL reduce production bs_keyword -> INTER
-- On MINUS reduce production bs_keyword -> INTER
-- On LTLT reduce production bs_keyword -> INTER
-- On LTCOLON reduce production bs_keyword -> INTER
-- On LT reduce production bs_keyword -> INTER
-- On LSQUARE reduce production bs_keyword -> INTER
-- On LPAR reduce production bs_keyword -> INTER
-- On LOOP reduce production bs_keyword -> INTER
-- On LONG reduce production bs_keyword -> INTER
-- On LOGIC reduce production bs_keyword -> INTER
-- On LET reduce production bs_keyword -> INTER
-- On LEMMA reduce production bs_keyword -> INTER
-- On LE reduce production bs_keyword -> INTER
-- On LBRACE reduce production bs_keyword -> INTER
-- On LAMBDA reduce production bs_keyword -> INTER
-- On LABEL reduce production bs_keyword -> INTER
-- On INVARIANT reduce production bs_keyword -> INTER
-- On INTER reduce production bs_keyword -> INTER
-- On INTEGER reduce production bs_keyword -> INTER
-- On INT reduce production bs_keyword -> INTER
-- On INITIALIZED reduce production bs_keyword -> INTER
-- On INDUCTIVE reduce production bs_keyword -> INTER
-- On INCLUDE reduce production bs_keyword -> INTER
-- On IMPLIES reduce production bs_keyword -> INTER
-- On IMPACT reduce production bs_keyword -> INTER
-- On IFF reduce production bs_keyword -> INTER
-- On IF reduce production bs_keyword -> INTER
-- On IDENTIFIER reduce production bs_keyword -> INTER
-- On HATHAT reduce production bs_keyword -> INTER
-- On HAT reduce production bs_keyword -> INTER
-- On GTGT reduce production bs_keyword -> INTER
-- On GT reduce production bs_keyword -> INTER
-- On GLOBAL reduce production bs_keyword -> INTER
-- On GHOST reduce production bs_keyword -> INTER
-- On GE reduce production bs_keyword -> INTER
-- On FUNCTION reduce production bs_keyword -> INTER
-- On FROM reduce production bs_keyword -> INTER
-- On FRESH reduce production bs_keyword -> INTER
-- On FREES reduce production bs_keyword -> INTER
-- On FREEABLE reduce production bs_keyword -> INTER
-- On FORALL reduce production bs_keyword -> INTER
-- On FOR reduce production bs_keyword -> INTER
-- On FLOAT reduce production bs_keyword -> INTER
-- On FALSE reduce production bs_keyword -> INTER
-- On EXT_LET reduce production bs_keyword -> INTER
-- On EXT_AT reduce production bs_keyword -> INTER
-- On EXITS reduce production bs_keyword -> INTER
-- On EXISTS reduce production bs_keyword -> INTER
-- On EQUAL reduce production bs_keyword -> INTER
-- On EQ reduce production bs_keyword -> INTER
-- On EOF reduce production bs_keyword -> INTER
-- On ENUM reduce production bs_keyword -> INTER
-- On ENSURES reduce production bs_keyword -> INTER
-- On EMPTY reduce production bs_keyword -> INTER
-- On ELSE reduce production bs_keyword -> INTER
-- On DYNAMIC reduce production bs_keyword -> INTER
-- On DOUBLE reduce production bs_keyword -> INTER
-- On DOTDOTDOT reduce production bs_keyword -> INTER
-- On DOTDOT reduce production bs_keyword -> INTER
-- On DOT reduce production bs_keyword -> INTER
-- On DOLLAR reduce production bs_keyword -> INTER
-- On DISJOINT reduce production bs_keyword -> INTER
-- On DECREASES reduce production bs_keyword -> INTER
-- On DANGLING reduce production bs_keyword -> INTER
-- On CUSTOM reduce production bs_keyword -> INTER
-- On CONTRACT reduce production bs_keyword -> INTER
-- On CONTINUES reduce production bs_keyword -> INTER
-- On CONSTANT10 reduce production bs_keyword -> INTER
-- On CONSTANT reduce production bs_keyword -> INTER
-- On CONST reduce production bs_keyword -> INTER
-- On COMPLETE reduce production bs_keyword -> INTER
-- On COMMA reduce production bs_keyword -> INTER
-- On COLONGT reduce production bs_keyword -> INTER
-- On COLONCOLON reduce production bs_keyword -> INTER
-- On COLON2 reduce production bs_keyword -> INTER
-- On COLON reduce production bs_keyword -> INTER
-- On CHAR reduce production bs_keyword -> INTER
-- On CASE reduce production bs_keyword -> INTER
-- On BSUNION reduce production bs_keyword -> INTER
-- On BSTYPE reduce production bs_keyword -> INTER
-- On BREAKS reduce production bs_keyword -> INTER
-- On BOOLEAN reduce production bs_keyword -> INTER
-- On BOOL reduce production bs_keyword -> INTER
-- On BLOCK_LENGTH reduce production bs_keyword -> INTER
-- On BIMPLIES reduce production bs_keyword -> INTER
-- On BIFF reduce production bs_keyword -> INTER
-- On BEHAVIORS reduce production bs_keyword -> INTER
-- On BEHAVIOR reduce production bs_keyword -> INTER
-- On BASE_ADDR reduce production bs_keyword -> INTER
-- On AXIOMATIC reduce production bs_keyword -> INTER
-- On AXIOM reduce production bs_keyword -> INTER
-- On AUTOMATIC reduce production bs_keyword -> INTER
-- On AT reduce production bs_keyword -> INTER
-- On ASSUMES reduce production bs_keyword -> INTER
-- On ASSIGNS reduce production bs_keyword -> INTER
-- On ASSERT reduce production bs_keyword -> INTER
-- On ARROW reduce production bs_keyword -> INTER
-- On AND reduce production bs_keyword -> INTER
-- On AMP reduce production bs_keyword -> INTER
-- On ALLOCATION reduce production bs_keyword -> INTER
-- On ALLOCATES reduce production bs_keyword -> INTER
-- On ALLOCABLE reduce production bs_keyword -> INTER

State 993:
## Known stack suffix:
## INITIALIZED
## LR(1) items:
bs_keyword -> INITIALIZED . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> INITIALIZED
-- On WITH reduce production bs_keyword -> INITIALIZED
-- On VOLATILE reduce production bs_keyword -> INITIALIZED
-- On VOID reduce production bs_keyword -> INITIALIZED
-- On VARIANT reduce production bs_keyword -> INITIALIZED
-- On VALID_READ reduce production bs_keyword -> INITIALIZED
-- On VALID_RANGE reduce production bs_keyword -> INITIALIZED
-- On VALID_INDEX reduce production bs_keyword -> INITIALIZED
-- On VALID reduce production bs_keyword -> INITIALIZED
-- On UNSIGNED reduce production bs_keyword -> INITIALIZED
-- On UNION reduce production bs_keyword -> INITIALIZED
-- On UNALLOCATED reduce production bs_keyword -> INITIALIZED
-- On TYPEOF reduce production bs_keyword -> INITIALIZED
-- On TYPENAME reduce production bs_keyword -> INITIALIZED
-- On TYPE reduce production bs_keyword -> INITIALIZED
-- On TRUE reduce production bs_keyword -> INITIALIZED
-- On TILDE reduce production bs_keyword -> INITIALIZED
-- On TERMINATES reduce production bs_keyword -> INITIALIZED
-- On STRUCT reduce production bs_keyword -> INITIALIZED
-- On STRING_LITERAL reduce production bs_keyword -> INITIALIZED
-- On STATIC reduce production bs_keyword -> INITIALIZED
-- On STAR reduce production bs_keyword -> INITIALIZED
-- On SLICE reduce production bs_keyword -> INITIALIZED
-- On SLASH reduce production bs_keyword -> INITIALIZED
-- On SIZEOF reduce production bs_keyword -> INITIALIZED
-- On SIGNED reduce production bs_keyword -> INITIALIZED
-- On SHORT reduce production bs_keyword -> INITIALIZED
-- On SEPARATED reduce production bs_keyword -> INITIALIZED
-- On SEMICOLON reduce production bs_keyword -> INITIALIZED
-- On RSQUARE reduce production bs_keyword -> INITIALIZED
-- On RPAR reduce production bs_keyword -> INITIALIZED
-- On RETURNS reduce production bs_keyword -> INITIALIZED
-- On RESULT reduce production bs_keyword -> INITIALIZED
-- On REQUIRES reduce production bs_keyword -> INITIALIZED
-- On REGISTER reduce production bs_keyword -> INITIALIZED
-- On REAL reduce production bs_keyword -> INITIALIZED
-- On READS reduce production bs_keyword -> INITIALIZED
-- On RBRACE reduce production bs_keyword -> INITIALIZED
-- On QUESTION reduce production bs_keyword -> INITIALIZED
-- On PREDICATE reduce production bs_keyword -> INITIALIZED
-- On PRAGMA reduce production bs_keyword -> INITIALIZED
-- On PLUS reduce production bs_keyword -> INITIALIZED
-- On PIPE reduce production bs_keyword -> INITIALIZED
-- On PERCENT reduce production bs_keyword -> INITIALIZED
-- On OR reduce production bs_keyword -> INITIALIZED
-- On OLD reduce production bs_keyword -> INITIALIZED
-- On OFFSET reduce production bs_keyword -> INITIALIZED
-- On NULL reduce production bs_keyword -> INITIALIZED
-- On NOTHING reduce production bs_keyword -> INITIALIZED
-- On NOT reduce production bs_keyword -> INITIALIZED
-- On NE reduce production bs_keyword -> INITIALIZED
-- On MODULE reduce production bs_keyword -> INITIALIZED
-- On MODEL reduce production bs_keyword -> INITIALIZED
-- On MINUS reduce production bs_keyword -> INITIALIZED
-- On LTLT reduce production bs_keyword -> INITIALIZED
-- On LTCOLON reduce production bs_keyword -> INITIALIZED
-- On LT reduce production bs_keyword -> INITIALIZED
-- On LSQUARE reduce production bs_keyword -> INITIALIZED
-- On LPAR reduce production bs_keyword -> INITIALIZED
-- On LOOP reduce production bs_keyword -> INITIALIZED
-- On LONG reduce production bs_keyword -> INITIALIZED
-- On LOGIC reduce production bs_keyword -> INITIALIZED
-- On LET reduce production bs_keyword -> INITIALIZED
-- On LEMMA reduce production bs_keyword -> INITIALIZED
-- On LE reduce production bs_keyword -> INITIALIZED
-- On LBRACE reduce production bs_keyword -> INITIALIZED
-- On LAMBDA reduce production bs_keyword -> INITIALIZED
-- On LABEL reduce production bs_keyword -> INITIALIZED
-- On INVARIANT reduce production bs_keyword -> INITIALIZED
-- On INTER reduce production bs_keyword -> INITIALIZED
-- On INTEGER reduce production bs_keyword -> INITIALIZED
-- On INT reduce production bs_keyword -> INITIALIZED
-- On INITIALIZED reduce production bs_keyword -> INITIALIZED
-- On INDUCTIVE reduce production bs_keyword -> INITIALIZED
-- On INCLUDE reduce production bs_keyword -> INITIALIZED
-- On IMPLIES reduce production bs_keyword -> INITIALIZED
-- On IMPACT reduce production bs_keyword -> INITIALIZED
-- On IFF reduce production bs_keyword -> INITIALIZED
-- On IF reduce production bs_keyword -> INITIALIZED
-- On IDENTIFIER reduce production bs_keyword -> INITIALIZED
-- On HATHAT reduce production bs_keyword -> INITIALIZED
-- On HAT reduce production bs_keyword -> INITIALIZED
-- On GTGT reduce production bs_keyword -> INITIALIZED
-- On GT reduce production bs_keyword -> INITIALIZED
-- On GLOBAL reduce production bs_keyword -> INITIALIZED
-- On GHOST reduce production bs_keyword -> INITIALIZED
-- On GE reduce production bs_keyword -> INITIALIZED
-- On FUNCTION reduce production bs_keyword -> INITIALIZED
-- On FROM reduce production bs_keyword -> INITIALIZED
-- On FRESH reduce production bs_keyword -> INITIALIZED
-- On FREES reduce production bs_keyword -> INITIALIZED
-- On FREEABLE reduce production bs_keyword -> INITIALIZED
-- On FORALL reduce production bs_keyword -> INITIALIZED
-- On FOR reduce production bs_keyword -> INITIALIZED
-- On FLOAT reduce production bs_keyword -> INITIALIZED
-- On FALSE reduce production bs_keyword -> INITIALIZED
-- On EXT_LET reduce production bs_keyword -> INITIALIZED
-- On EXT_AT reduce production bs_keyword -> INITIALIZED
-- On EXITS reduce production bs_keyword -> INITIALIZED
-- On EXISTS reduce production bs_keyword -> INITIALIZED
-- On EQUAL reduce production bs_keyword -> INITIALIZED
-- On EQ reduce production bs_keyword -> INITIALIZED
-- On EOF reduce production bs_keyword -> INITIALIZED
-- On ENUM reduce production bs_keyword -> INITIALIZED
-- On ENSURES reduce production bs_keyword -> INITIALIZED
-- On EMPTY reduce production bs_keyword -> INITIALIZED
-- On ELSE reduce production bs_keyword -> INITIALIZED
-- On DYNAMIC reduce production bs_keyword -> INITIALIZED
-- On DOUBLE reduce production bs_keyword -> INITIALIZED
-- On DOTDOTDOT reduce production bs_keyword -> INITIALIZED
-- On DOTDOT reduce production bs_keyword -> INITIALIZED
-- On DOT reduce production bs_keyword -> INITIALIZED
-- On DOLLAR reduce production bs_keyword -> INITIALIZED
-- On DISJOINT reduce production bs_keyword -> INITIALIZED
-- On DECREASES reduce production bs_keyword -> INITIALIZED
-- On DANGLING reduce production bs_keyword -> INITIALIZED
-- On CUSTOM reduce production bs_keyword -> INITIALIZED
-- On CONTRACT reduce production bs_keyword -> INITIALIZED
-- On CONTINUES reduce production bs_keyword -> INITIALIZED
-- On CONSTANT10 reduce production bs_keyword -> INITIALIZED
-- On CONSTANT reduce production bs_keyword -> INITIALIZED
-- On CONST reduce production bs_keyword -> INITIALIZED
-- On COMPLETE reduce production bs_keyword -> INITIALIZED
-- On COMMA reduce production bs_keyword -> INITIALIZED
-- On COLONGT reduce production bs_keyword -> INITIALIZED
-- On COLONCOLON reduce production bs_keyword -> INITIALIZED
-- On COLON2 reduce production bs_keyword -> INITIALIZED
-- On COLON reduce production bs_keyword -> INITIALIZED
-- On CHAR reduce production bs_keyword -> INITIALIZED
-- On CASE reduce production bs_keyword -> INITIALIZED
-- On BSUNION reduce production bs_keyword -> INITIALIZED
-- On BSTYPE reduce production bs_keyword -> INITIALIZED
-- On BREAKS reduce production bs_keyword -> INITIALIZED
-- On BOOLEAN reduce production bs_keyword -> INITIALIZED
-- On BOOL reduce production bs_keyword -> INITIALIZED
-- On BLOCK_LENGTH reduce production bs_keyword -> INITIALIZED
-- On BIMPLIES reduce production bs_keyword -> INITIALIZED
-- On BIFF reduce production bs_keyword -> INITIALIZED
-- On BEHAVIORS reduce production bs_keyword -> INITIALIZED
-- On BEHAVIOR reduce production bs_keyword -> INITIALIZED
-- On BASE_ADDR reduce production bs_keyword -> INITIALIZED
-- On AXIOMATIC reduce production bs_keyword -> INITIALIZED
-- On AXIOM reduce production bs_keyword -> INITIALIZED
-- On AUTOMATIC reduce production bs_keyword -> INITIALIZED
-- On AT reduce production bs_keyword -> INITIALIZED
-- On ASSUMES reduce production bs_keyword -> INITIALIZED
-- On ASSIGNS reduce production bs_keyword -> INITIALIZED
-- On ASSERT reduce production bs_keyword -> INITIALIZED
-- On ARROW reduce production bs_keyword -> INITIALIZED
-- On AND reduce production bs_keyword -> INITIALIZED
-- On AMP reduce production bs_keyword -> INITIALIZED
-- On ALLOCATION reduce production bs_keyword -> INITIALIZED
-- On ALLOCATES reduce production bs_keyword -> INITIALIZED
-- On ALLOCABLE reduce production bs_keyword -> INITIALIZED

State 994:
## Known stack suffix:
## IMPLIES
## LR(1) items:
wildcard -> IMPLIES . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> IMPLIES
-- On WITH reduce production wildcard -> IMPLIES
-- On VOLATILE reduce production wildcard -> IMPLIES
-- On VOID reduce production wildcard -> IMPLIES
-- On VARIANT reduce production wildcard -> IMPLIES
-- On VALID_READ reduce production wildcard -> IMPLIES
-- On VALID_RANGE reduce production wildcard -> IMPLIES
-- On VALID_INDEX reduce production wildcard -> IMPLIES
-- On VALID reduce production wildcard -> IMPLIES
-- On UNSIGNED reduce production wildcard -> IMPLIES
-- On UNION reduce production wildcard -> IMPLIES
-- On UNALLOCATED reduce production wildcard -> IMPLIES
-- On TYPEOF reduce production wildcard -> IMPLIES
-- On TYPENAME reduce production wildcard -> IMPLIES
-- On TYPE reduce production wildcard -> IMPLIES
-- On TRUE reduce production wildcard -> IMPLIES
-- On TILDE reduce production wildcard -> IMPLIES
-- On TERMINATES reduce production wildcard -> IMPLIES
-- On STRUCT reduce production wildcard -> IMPLIES
-- On STRING_LITERAL reduce production wildcard -> IMPLIES
-- On STATIC reduce production wildcard -> IMPLIES
-- On STAR reduce production wildcard -> IMPLIES
-- On SLICE reduce production wildcard -> IMPLIES
-- On SLASH reduce production wildcard -> IMPLIES
-- On SIZEOF reduce production wildcard -> IMPLIES
-- On SIGNED reduce production wildcard -> IMPLIES
-- On SHORT reduce production wildcard -> IMPLIES
-- On SEPARATED reduce production wildcard -> IMPLIES
-- On SEMICOLON reduce production wildcard -> IMPLIES
-- On RSQUARE reduce production wildcard -> IMPLIES
-- On RPAR reduce production wildcard -> IMPLIES
-- On RETURNS reduce production wildcard -> IMPLIES
-- On RESULT reduce production wildcard -> IMPLIES
-- On REQUIRES reduce production wildcard -> IMPLIES
-- On REGISTER reduce production wildcard -> IMPLIES
-- On REAL reduce production wildcard -> IMPLIES
-- On READS reduce production wildcard -> IMPLIES
-- On RBRACE reduce production wildcard -> IMPLIES
-- On QUESTION reduce production wildcard -> IMPLIES
-- On PREDICATE reduce production wildcard -> IMPLIES
-- On PRAGMA reduce production wildcard -> IMPLIES
-- On PLUS reduce production wildcard -> IMPLIES
-- On PIPE reduce production wildcard -> IMPLIES
-- On PERCENT reduce production wildcard -> IMPLIES
-- On OR reduce production wildcard -> IMPLIES
-- On OLD reduce production wildcard -> IMPLIES
-- On OFFSET reduce production wildcard -> IMPLIES
-- On NULL reduce production wildcard -> IMPLIES
-- On NOTHING reduce production wildcard -> IMPLIES
-- On NOT reduce production wildcard -> IMPLIES
-- On NE reduce production wildcard -> IMPLIES
-- On MODULE reduce production wildcard -> IMPLIES
-- On MODEL reduce production wildcard -> IMPLIES
-- On MINUS reduce production wildcard -> IMPLIES
-- On LTLT reduce production wildcard -> IMPLIES
-- On LTCOLON reduce production wildcard -> IMPLIES
-- On LT reduce production wildcard -> IMPLIES
-- On LSQUARE reduce production wildcard -> IMPLIES
-- On LPAR reduce production wildcard -> IMPLIES
-- On LOOP reduce production wildcard -> IMPLIES
-- On LONG reduce production wildcard -> IMPLIES
-- On LOGIC reduce production wildcard -> IMPLIES
-- On LET reduce production wildcard -> IMPLIES
-- On LEMMA reduce production wildcard -> IMPLIES
-- On LE reduce production wildcard -> IMPLIES
-- On LBRACE reduce production wildcard -> IMPLIES
-- On LAMBDA reduce production wildcard -> IMPLIES
-- On LABEL reduce production wildcard -> IMPLIES
-- On INVARIANT reduce production wildcard -> IMPLIES
-- On INTER reduce production wildcard -> IMPLIES
-- On INTEGER reduce production wildcard -> IMPLIES
-- On INT reduce production wildcard -> IMPLIES
-- On INITIALIZED reduce production wildcard -> IMPLIES
-- On INDUCTIVE reduce production wildcard -> IMPLIES
-- On INCLUDE reduce production wildcard -> IMPLIES
-- On IMPLIES reduce production wildcard -> IMPLIES
-- On IMPACT reduce production wildcard -> IMPLIES
-- On IFF reduce production wildcard -> IMPLIES
-- On IF reduce production wildcard -> IMPLIES
-- On IDENTIFIER reduce production wildcard -> IMPLIES
-- On HATHAT reduce production wildcard -> IMPLIES
-- On HAT reduce production wildcard -> IMPLIES
-- On GTGT reduce production wildcard -> IMPLIES
-- On GT reduce production wildcard -> IMPLIES
-- On GLOBAL reduce production wildcard -> IMPLIES
-- On GHOST reduce production wildcard -> IMPLIES
-- On GE reduce production wildcard -> IMPLIES
-- On FUNCTION reduce production wildcard -> IMPLIES
-- On FROM reduce production wildcard -> IMPLIES
-- On FRESH reduce production wildcard -> IMPLIES
-- On FREES reduce production wildcard -> IMPLIES
-- On FREEABLE reduce production wildcard -> IMPLIES
-- On FORALL reduce production wildcard -> IMPLIES
-- On FOR reduce production wildcard -> IMPLIES
-- On FLOAT reduce production wildcard -> IMPLIES
-- On FALSE reduce production wildcard -> IMPLIES
-- On EXT_LET reduce production wildcard -> IMPLIES
-- On EXT_AT reduce production wildcard -> IMPLIES
-- On EXITS reduce production wildcard -> IMPLIES
-- On EXISTS reduce production wildcard -> IMPLIES
-- On EQUAL reduce production wildcard -> IMPLIES
-- On EQ reduce production wildcard -> IMPLIES
-- On EOF reduce production wildcard -> IMPLIES
-- On ENUM reduce production wildcard -> IMPLIES
-- On ENSURES reduce production wildcard -> IMPLIES
-- On EMPTY reduce production wildcard -> IMPLIES
-- On ELSE reduce production wildcard -> IMPLIES
-- On DYNAMIC reduce production wildcard -> IMPLIES
-- On DOUBLE reduce production wildcard -> IMPLIES
-- On DOTDOTDOT reduce production wildcard -> IMPLIES
-- On DOTDOT reduce production wildcard -> IMPLIES
-- On DOT reduce production wildcard -> IMPLIES
-- On DOLLAR reduce production wildcard -> IMPLIES
-- On DISJOINT reduce production wildcard -> IMPLIES
-- On DECREASES reduce production wildcard -> IMPLIES
-- On DANGLING reduce production wildcard -> IMPLIES
-- On CUSTOM reduce production wildcard -> IMPLIES
-- On CONTRACT reduce production wildcard -> IMPLIES
-- On CONTINUES reduce production wildcard -> IMPLIES
-- On CONSTANT10 reduce production wildcard -> IMPLIES
-- On CONSTANT reduce production wildcard -> IMPLIES
-- On CONST reduce production wildcard -> IMPLIES
-- On COMPLETE reduce production wildcard -> IMPLIES
-- On COMMA reduce production wildcard -> IMPLIES
-- On COLONGT reduce production wildcard -> IMPLIES
-- On COLONCOLON reduce production wildcard -> IMPLIES
-- On COLON2 reduce production wildcard -> IMPLIES
-- On COLON reduce production wildcard -> IMPLIES
-- On CHAR reduce production wildcard -> IMPLIES
-- On CASE reduce production wildcard -> IMPLIES
-- On BSUNION reduce production wildcard -> IMPLIES
-- On BSTYPE reduce production wildcard -> IMPLIES
-- On BREAKS reduce production wildcard -> IMPLIES
-- On BOOLEAN reduce production wildcard -> IMPLIES
-- On BOOL reduce production wildcard -> IMPLIES
-- On BLOCK_LENGTH reduce production wildcard -> IMPLIES
-- On BIMPLIES reduce production wildcard -> IMPLIES
-- On BIFF reduce production wildcard -> IMPLIES
-- On BEHAVIORS reduce production wildcard -> IMPLIES
-- On BEHAVIOR reduce production wildcard -> IMPLIES
-- On BASE_ADDR reduce production wildcard -> IMPLIES
-- On AXIOMATIC reduce production wildcard -> IMPLIES
-- On AXIOM reduce production wildcard -> IMPLIES
-- On AUTOMATIC reduce production wildcard -> IMPLIES
-- On AT reduce production wildcard -> IMPLIES
-- On ASSUMES reduce production wildcard -> IMPLIES
-- On ASSIGNS reduce production wildcard -> IMPLIES
-- On ASSERT reduce production wildcard -> IMPLIES
-- On ARROW reduce production wildcard -> IMPLIES
-- On AND reduce production wildcard -> IMPLIES
-- On AMP reduce production wildcard -> IMPLIES
-- On ALLOCATION reduce production wildcard -> IMPLIES
-- On ALLOCATES reduce production wildcard -> IMPLIES
-- On ALLOCABLE reduce production wildcard -> IMPLIES

State 995:
## Known stack suffix:
## IFF
## LR(1) items:
wildcard -> IFF . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> IFF
-- On WITH reduce production wildcard -> IFF
-- On VOLATILE reduce production wildcard -> IFF
-- On VOID reduce production wildcard -> IFF
-- On VARIANT reduce production wildcard -> IFF
-- On VALID_READ reduce production wildcard -> IFF
-- On VALID_RANGE reduce production wildcard -> IFF
-- On VALID_INDEX reduce production wildcard -> IFF
-- On VALID reduce production wildcard -> IFF
-- On UNSIGNED reduce production wildcard -> IFF
-- On UNION reduce production wildcard -> IFF
-- On UNALLOCATED reduce production wildcard -> IFF
-- On TYPEOF reduce production wildcard -> IFF
-- On TYPENAME reduce production wildcard -> IFF
-- On TYPE reduce production wildcard -> IFF
-- On TRUE reduce production wildcard -> IFF
-- On TILDE reduce production wildcard -> IFF
-- On TERMINATES reduce production wildcard -> IFF
-- On STRUCT reduce production wildcard -> IFF
-- On STRING_LITERAL reduce production wildcard -> IFF
-- On STATIC reduce production wildcard -> IFF
-- On STAR reduce production wildcard -> IFF
-- On SLICE reduce production wildcard -> IFF
-- On SLASH reduce production wildcard -> IFF
-- On SIZEOF reduce production wildcard -> IFF
-- On SIGNED reduce production wildcard -> IFF
-- On SHORT reduce production wildcard -> IFF
-- On SEPARATED reduce production wildcard -> IFF
-- On SEMICOLON reduce production wildcard -> IFF
-- On RSQUARE reduce production wildcard -> IFF
-- On RPAR reduce production wildcard -> IFF
-- On RETURNS reduce production wildcard -> IFF
-- On RESULT reduce production wildcard -> IFF
-- On REQUIRES reduce production wildcard -> IFF
-- On REGISTER reduce production wildcard -> IFF
-- On REAL reduce production wildcard -> IFF
-- On READS reduce production wildcard -> IFF
-- On RBRACE reduce production wildcard -> IFF
-- On QUESTION reduce production wildcard -> IFF
-- On PREDICATE reduce production wildcard -> IFF
-- On PRAGMA reduce production wildcard -> IFF
-- On PLUS reduce production wildcard -> IFF
-- On PIPE reduce production wildcard -> IFF
-- On PERCENT reduce production wildcard -> IFF
-- On OR reduce production wildcard -> IFF
-- On OLD reduce production wildcard -> IFF
-- On OFFSET reduce production wildcard -> IFF
-- On NULL reduce production wildcard -> IFF
-- On NOTHING reduce production wildcard -> IFF
-- On NOT reduce production wildcard -> IFF
-- On NE reduce production wildcard -> IFF
-- On MODULE reduce production wildcard -> IFF
-- On MODEL reduce production wildcard -> IFF
-- On MINUS reduce production wildcard -> IFF
-- On LTLT reduce production wildcard -> IFF
-- On LTCOLON reduce production wildcard -> IFF
-- On LT reduce production wildcard -> IFF
-- On LSQUARE reduce production wildcard -> IFF
-- On LPAR reduce production wildcard -> IFF
-- On LOOP reduce production wildcard -> IFF
-- On LONG reduce production wildcard -> IFF
-- On LOGIC reduce production wildcard -> IFF
-- On LET reduce production wildcard -> IFF
-- On LEMMA reduce production wildcard -> IFF
-- On LE reduce production wildcard -> IFF
-- On LBRACE reduce production wildcard -> IFF
-- On LAMBDA reduce production wildcard -> IFF
-- On LABEL reduce production wildcard -> IFF
-- On INVARIANT reduce production wildcard -> IFF
-- On INTER reduce production wildcard -> IFF
-- On INTEGER reduce production wildcard -> IFF
-- On INT reduce production wildcard -> IFF
-- On INITIALIZED reduce production wildcard -> IFF
-- On INDUCTIVE reduce production wildcard -> IFF
-- On INCLUDE reduce production wildcard -> IFF
-- On IMPLIES reduce production wildcard -> IFF
-- On IMPACT reduce production wildcard -> IFF
-- On IFF reduce production wildcard -> IFF
-- On IF reduce production wildcard -> IFF
-- On IDENTIFIER reduce production wildcard -> IFF
-- On HATHAT reduce production wildcard -> IFF
-- On HAT reduce production wildcard -> IFF
-- On GTGT reduce production wildcard -> IFF
-- On GT reduce production wildcard -> IFF
-- On GLOBAL reduce production wildcard -> IFF
-- On GHOST reduce production wildcard -> IFF
-- On GE reduce production wildcard -> IFF
-- On FUNCTION reduce production wildcard -> IFF
-- On FROM reduce production wildcard -> IFF
-- On FRESH reduce production wildcard -> IFF
-- On FREES reduce production wildcard -> IFF
-- On FREEABLE reduce production wildcard -> IFF
-- On FORALL reduce production wildcard -> IFF
-- On FOR reduce production wildcard -> IFF
-- On FLOAT reduce production wildcard -> IFF
-- On FALSE reduce production wildcard -> IFF
-- On EXT_LET reduce production wildcard -> IFF
-- On EXT_AT reduce production wildcard -> IFF
-- On EXITS reduce production wildcard -> IFF
-- On EXISTS reduce production wildcard -> IFF
-- On EQUAL reduce production wildcard -> IFF
-- On EQ reduce production wildcard -> IFF
-- On EOF reduce production wildcard -> IFF
-- On ENUM reduce production wildcard -> IFF
-- On ENSURES reduce production wildcard -> IFF
-- On EMPTY reduce production wildcard -> IFF
-- On ELSE reduce production wildcard -> IFF
-- On DYNAMIC reduce production wildcard -> IFF
-- On DOUBLE reduce production wildcard -> IFF
-- On DOTDOTDOT reduce production wildcard -> IFF
-- On DOTDOT reduce production wildcard -> IFF
-- On DOT reduce production wildcard -> IFF
-- On DOLLAR reduce production wildcard -> IFF
-- On DISJOINT reduce production wildcard -> IFF
-- On DECREASES reduce production wildcard -> IFF
-- On DANGLING reduce production wildcard -> IFF
-- On CUSTOM reduce production wildcard -> IFF
-- On CONTRACT reduce production wildcard -> IFF
-- On CONTINUES reduce production wildcard -> IFF
-- On CONSTANT10 reduce production wildcard -> IFF
-- On CONSTANT reduce production wildcard -> IFF
-- On CONST reduce production wildcard -> IFF
-- On COMPLETE reduce production wildcard -> IFF
-- On COMMA reduce production wildcard -> IFF
-- On COLONGT reduce production wildcard -> IFF
-- On COLONCOLON reduce production wildcard -> IFF
-- On COLON2 reduce production wildcard -> IFF
-- On COLON reduce production wildcard -> IFF
-- On CHAR reduce production wildcard -> IFF
-- On CASE reduce production wildcard -> IFF
-- On BSUNION reduce production wildcard -> IFF
-- On BSTYPE reduce production wildcard -> IFF
-- On BREAKS reduce production wildcard -> IFF
-- On BOOLEAN reduce production wildcard -> IFF
-- On BOOL reduce production wildcard -> IFF
-- On BLOCK_LENGTH reduce production wildcard -> IFF
-- On BIMPLIES reduce production wildcard -> IFF
-- On BIFF reduce production wildcard -> IFF
-- On BEHAVIORS reduce production wildcard -> IFF
-- On BEHAVIOR reduce production wildcard -> IFF
-- On BASE_ADDR reduce production wildcard -> IFF
-- On AXIOMATIC reduce production wildcard -> IFF
-- On AXIOM reduce production wildcard -> IFF
-- On AUTOMATIC reduce production wildcard -> IFF
-- On AT reduce production wildcard -> IFF
-- On ASSUMES reduce production wildcard -> IFF
-- On ASSIGNS reduce production wildcard -> IFF
-- On ASSERT reduce production wildcard -> IFF
-- On ARROW reduce production wildcard -> IFF
-- On AND reduce production wildcard -> IFF
-- On AMP reduce production wildcard -> IFF
-- On ALLOCATION reduce production wildcard -> IFF
-- On ALLOCATES reduce production wildcard -> IFF
-- On ALLOCABLE reduce production wildcard -> IFF

State 996:
## Known stack suffix:
## HATHAT
## LR(1) items:
wildcard -> HATHAT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> HATHAT
-- On WITH reduce production wildcard -> HATHAT
-- On VOLATILE reduce production wildcard -> HATHAT
-- On VOID reduce production wildcard -> HATHAT
-- On VARIANT reduce production wildcard -> HATHAT
-- On VALID_READ reduce production wildcard -> HATHAT
-- On VALID_RANGE reduce production wildcard -> HATHAT
-- On VALID_INDEX reduce production wildcard -> HATHAT
-- On VALID reduce production wildcard -> HATHAT
-- On UNSIGNED reduce production wildcard -> HATHAT
-- On UNION reduce production wildcard -> HATHAT
-- On UNALLOCATED reduce production wildcard -> HATHAT
-- On TYPEOF reduce production wildcard -> HATHAT
-- On TYPENAME reduce production wildcard -> HATHAT
-- On TYPE reduce production wildcard -> HATHAT
-- On TRUE reduce production wildcard -> HATHAT
-- On TILDE reduce production wildcard -> HATHAT
-- On TERMINATES reduce production wildcard -> HATHAT
-- On STRUCT reduce production wildcard -> HATHAT
-- On STRING_LITERAL reduce production wildcard -> HATHAT
-- On STATIC reduce production wildcard -> HATHAT
-- On STAR reduce production wildcard -> HATHAT
-- On SLICE reduce production wildcard -> HATHAT
-- On SLASH reduce production wildcard -> HATHAT
-- On SIZEOF reduce production wildcard -> HATHAT
-- On SIGNED reduce production wildcard -> HATHAT
-- On SHORT reduce production wildcard -> HATHAT
-- On SEPARATED reduce production wildcard -> HATHAT
-- On SEMICOLON reduce production wildcard -> HATHAT
-- On RSQUARE reduce production wildcard -> HATHAT
-- On RPAR reduce production wildcard -> HATHAT
-- On RETURNS reduce production wildcard -> HATHAT
-- On RESULT reduce production wildcard -> HATHAT
-- On REQUIRES reduce production wildcard -> HATHAT
-- On REGISTER reduce production wildcard -> HATHAT
-- On REAL reduce production wildcard -> HATHAT
-- On READS reduce production wildcard -> HATHAT
-- On RBRACE reduce production wildcard -> HATHAT
-- On QUESTION reduce production wildcard -> HATHAT
-- On PREDICATE reduce production wildcard -> HATHAT
-- On PRAGMA reduce production wildcard -> HATHAT
-- On PLUS reduce production wildcard -> HATHAT
-- On PIPE reduce production wildcard -> HATHAT
-- On PERCENT reduce production wildcard -> HATHAT
-- On OR reduce production wildcard -> HATHAT
-- On OLD reduce production wildcard -> HATHAT
-- On OFFSET reduce production wildcard -> HATHAT
-- On NULL reduce production wildcard -> HATHAT
-- On NOTHING reduce production wildcard -> HATHAT
-- On NOT reduce production wildcard -> HATHAT
-- On NE reduce production wildcard -> HATHAT
-- On MODULE reduce production wildcard -> HATHAT
-- On MODEL reduce production wildcard -> HATHAT
-- On MINUS reduce production wildcard -> HATHAT
-- On LTLT reduce production wildcard -> HATHAT
-- On LTCOLON reduce production wildcard -> HATHAT
-- On LT reduce production wildcard -> HATHAT
-- On LSQUARE reduce production wildcard -> HATHAT
-- On LPAR reduce production wildcard -> HATHAT
-- On LOOP reduce production wildcard -> HATHAT
-- On LONG reduce production wildcard -> HATHAT
-- On LOGIC reduce production wildcard -> HATHAT
-- On LET reduce production wildcard -> HATHAT
-- On LEMMA reduce production wildcard -> HATHAT
-- On LE reduce production wildcard -> HATHAT
-- On LBRACE reduce production wildcard -> HATHAT
-- On LAMBDA reduce production wildcard -> HATHAT
-- On LABEL reduce production wildcard -> HATHAT
-- On INVARIANT reduce production wildcard -> HATHAT
-- On INTER reduce production wildcard -> HATHAT
-- On INTEGER reduce production wildcard -> HATHAT
-- On INT reduce production wildcard -> HATHAT
-- On INITIALIZED reduce production wildcard -> HATHAT
-- On INDUCTIVE reduce production wildcard -> HATHAT
-- On INCLUDE reduce production wildcard -> HATHAT
-- On IMPLIES reduce production wildcard -> HATHAT
-- On IMPACT reduce production wildcard -> HATHAT
-- On IFF reduce production wildcard -> HATHAT
-- On IF reduce production wildcard -> HATHAT
-- On IDENTIFIER reduce production wildcard -> HATHAT
-- On HATHAT reduce production wildcard -> HATHAT
-- On HAT reduce production wildcard -> HATHAT
-- On GTGT reduce production wildcard -> HATHAT
-- On GT reduce production wildcard -> HATHAT
-- On GLOBAL reduce production wildcard -> HATHAT
-- On GHOST reduce production wildcard -> HATHAT
-- On GE reduce production wildcard -> HATHAT
-- On FUNCTION reduce production wildcard -> HATHAT
-- On FROM reduce production wildcard -> HATHAT
-- On FRESH reduce production wildcard -> HATHAT
-- On FREES reduce production wildcard -> HATHAT
-- On FREEABLE reduce production wildcard -> HATHAT
-- On FORALL reduce production wildcard -> HATHAT
-- On FOR reduce production wildcard -> HATHAT
-- On FLOAT reduce production wildcard -> HATHAT
-- On FALSE reduce production wildcard -> HATHAT
-- On EXT_LET reduce production wildcard -> HATHAT
-- On EXT_AT reduce production wildcard -> HATHAT
-- On EXITS reduce production wildcard -> HATHAT
-- On EXISTS reduce production wildcard -> HATHAT
-- On EQUAL reduce production wildcard -> HATHAT
-- On EQ reduce production wildcard -> HATHAT
-- On EOF reduce production wildcard -> HATHAT
-- On ENUM reduce production wildcard -> HATHAT
-- On ENSURES reduce production wildcard -> HATHAT
-- On EMPTY reduce production wildcard -> HATHAT
-- On ELSE reduce production wildcard -> HATHAT
-- On DYNAMIC reduce production wildcard -> HATHAT
-- On DOUBLE reduce production wildcard -> HATHAT
-- On DOTDOTDOT reduce production wildcard -> HATHAT
-- On DOTDOT reduce production wildcard -> HATHAT
-- On DOT reduce production wildcard -> HATHAT
-- On DOLLAR reduce production wildcard -> HATHAT
-- On DISJOINT reduce production wildcard -> HATHAT
-- On DECREASES reduce production wildcard -> HATHAT
-- On DANGLING reduce production wildcard -> HATHAT
-- On CUSTOM reduce production wildcard -> HATHAT
-- On CONTRACT reduce production wildcard -> HATHAT
-- On CONTINUES reduce production wildcard -> HATHAT
-- On CONSTANT10 reduce production wildcard -> HATHAT
-- On CONSTANT reduce production wildcard -> HATHAT
-- On CONST reduce production wildcard -> HATHAT
-- On COMPLETE reduce production wildcard -> HATHAT
-- On COMMA reduce production wildcard -> HATHAT
-- On COLONGT reduce production wildcard -> HATHAT
-- On COLONCOLON reduce production wildcard -> HATHAT
-- On COLON2 reduce production wildcard -> HATHAT
-- On COLON reduce production wildcard -> HATHAT
-- On CHAR reduce production wildcard -> HATHAT
-- On CASE reduce production wildcard -> HATHAT
-- On BSUNION reduce production wildcard -> HATHAT
-- On BSTYPE reduce production wildcard -> HATHAT
-- On BREAKS reduce production wildcard -> HATHAT
-- On BOOLEAN reduce production wildcard -> HATHAT
-- On BOOL reduce production wildcard -> HATHAT
-- On BLOCK_LENGTH reduce production wildcard -> HATHAT
-- On BIMPLIES reduce production wildcard -> HATHAT
-- On BIFF reduce production wildcard -> HATHAT
-- On BEHAVIORS reduce production wildcard -> HATHAT
-- On BEHAVIOR reduce production wildcard -> HATHAT
-- On BASE_ADDR reduce production wildcard -> HATHAT
-- On AXIOMATIC reduce production wildcard -> HATHAT
-- On AXIOM reduce production wildcard -> HATHAT
-- On AUTOMATIC reduce production wildcard -> HATHAT
-- On AT reduce production wildcard -> HATHAT
-- On ASSUMES reduce production wildcard -> HATHAT
-- On ASSIGNS reduce production wildcard -> HATHAT
-- On ASSERT reduce production wildcard -> HATHAT
-- On ARROW reduce production wildcard -> HATHAT
-- On AND reduce production wildcard -> HATHAT
-- On AMP reduce production wildcard -> HATHAT
-- On ALLOCATION reduce production wildcard -> HATHAT
-- On ALLOCATES reduce production wildcard -> HATHAT
-- On ALLOCABLE reduce production wildcard -> HATHAT

State 997:
## Known stack suffix:
## HAT
## LR(1) items:
wildcard -> HAT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> HAT
-- On WITH reduce production wildcard -> HAT
-- On VOLATILE reduce production wildcard -> HAT
-- On VOID reduce production wildcard -> HAT
-- On VARIANT reduce production wildcard -> HAT
-- On VALID_READ reduce production wildcard -> HAT
-- On VALID_RANGE reduce production wildcard -> HAT
-- On VALID_INDEX reduce production wildcard -> HAT
-- On VALID reduce production wildcard -> HAT
-- On UNSIGNED reduce production wildcard -> HAT
-- On UNION reduce production wildcard -> HAT
-- On UNALLOCATED reduce production wildcard -> HAT
-- On TYPEOF reduce production wildcard -> HAT
-- On TYPENAME reduce production wildcard -> HAT
-- On TYPE reduce production wildcard -> HAT
-- On TRUE reduce production wildcard -> HAT
-- On TILDE reduce production wildcard -> HAT
-- On TERMINATES reduce production wildcard -> HAT
-- On STRUCT reduce production wildcard -> HAT
-- On STRING_LITERAL reduce production wildcard -> HAT
-- On STATIC reduce production wildcard -> HAT
-- On STAR reduce production wildcard -> HAT
-- On SLICE reduce production wildcard -> HAT
-- On SLASH reduce production wildcard -> HAT
-- On SIZEOF reduce production wildcard -> HAT
-- On SIGNED reduce production wildcard -> HAT
-- On SHORT reduce production wildcard -> HAT
-- On SEPARATED reduce production wildcard -> HAT
-- On SEMICOLON reduce production wildcard -> HAT
-- On RSQUARE reduce production wildcard -> HAT
-- On RPAR reduce production wildcard -> HAT
-- On RETURNS reduce production wildcard -> HAT
-- On RESULT reduce production wildcard -> HAT
-- On REQUIRES reduce production wildcard -> HAT
-- On REGISTER reduce production wildcard -> HAT
-- On REAL reduce production wildcard -> HAT
-- On READS reduce production wildcard -> HAT
-- On RBRACE reduce production wildcard -> HAT
-- On QUESTION reduce production wildcard -> HAT
-- On PREDICATE reduce production wildcard -> HAT
-- On PRAGMA reduce production wildcard -> HAT
-- On PLUS reduce production wildcard -> HAT
-- On PIPE reduce production wildcard -> HAT
-- On PERCENT reduce production wildcard -> HAT
-- On OR reduce production wildcard -> HAT
-- On OLD reduce production wildcard -> HAT
-- On OFFSET reduce production wildcard -> HAT
-- On NULL reduce production wildcard -> HAT
-- On NOTHING reduce production wildcard -> HAT
-- On NOT reduce production wildcard -> HAT
-- On NE reduce production wildcard -> HAT
-- On MODULE reduce production wildcard -> HAT
-- On MODEL reduce production wildcard -> HAT
-- On MINUS reduce production wildcard -> HAT
-- On LTLT reduce production wildcard -> HAT
-- On LTCOLON reduce production wildcard -> HAT
-- On LT reduce production wildcard -> HAT
-- On LSQUARE reduce production wildcard -> HAT
-- On LPAR reduce production wildcard -> HAT
-- On LOOP reduce production wildcard -> HAT
-- On LONG reduce production wildcard -> HAT
-- On LOGIC reduce production wildcard -> HAT
-- On LET reduce production wildcard -> HAT
-- On LEMMA reduce production wildcard -> HAT
-- On LE reduce production wildcard -> HAT
-- On LBRACE reduce production wildcard -> HAT
-- On LAMBDA reduce production wildcard -> HAT
-- On LABEL reduce production wildcard -> HAT
-- On INVARIANT reduce production wildcard -> HAT
-- On INTER reduce production wildcard -> HAT
-- On INTEGER reduce production wildcard -> HAT
-- On INT reduce production wildcard -> HAT
-- On INITIALIZED reduce production wildcard -> HAT
-- On INDUCTIVE reduce production wildcard -> HAT
-- On INCLUDE reduce production wildcard -> HAT
-- On IMPLIES reduce production wildcard -> HAT
-- On IMPACT reduce production wildcard -> HAT
-- On IFF reduce production wildcard -> HAT
-- On IF reduce production wildcard -> HAT
-- On IDENTIFIER reduce production wildcard -> HAT
-- On HATHAT reduce production wildcard -> HAT
-- On HAT reduce production wildcard -> HAT
-- On GTGT reduce production wildcard -> HAT
-- On GT reduce production wildcard -> HAT
-- On GLOBAL reduce production wildcard -> HAT
-- On GHOST reduce production wildcard -> HAT
-- On GE reduce production wildcard -> HAT
-- On FUNCTION reduce production wildcard -> HAT
-- On FROM reduce production wildcard -> HAT
-- On FRESH reduce production wildcard -> HAT
-- On FREES reduce production wildcard -> HAT
-- On FREEABLE reduce production wildcard -> HAT
-- On FORALL reduce production wildcard -> HAT
-- On FOR reduce production wildcard -> HAT
-- On FLOAT reduce production wildcard -> HAT
-- On FALSE reduce production wildcard -> HAT
-- On EXT_LET reduce production wildcard -> HAT
-- On EXT_AT reduce production wildcard -> HAT
-- On EXITS reduce production wildcard -> HAT
-- On EXISTS reduce production wildcard -> HAT
-- On EQUAL reduce production wildcard -> HAT
-- On EQ reduce production wildcard -> HAT
-- On EOF reduce production wildcard -> HAT
-- On ENUM reduce production wildcard -> HAT
-- On ENSURES reduce production wildcard -> HAT
-- On EMPTY reduce production wildcard -> HAT
-- On ELSE reduce production wildcard -> HAT
-- On DYNAMIC reduce production wildcard -> HAT
-- On DOUBLE reduce production wildcard -> HAT
-- On DOTDOTDOT reduce production wildcard -> HAT
-- On DOTDOT reduce production wildcard -> HAT
-- On DOT reduce production wildcard -> HAT
-- On DOLLAR reduce production wildcard -> HAT
-- On DISJOINT reduce production wildcard -> HAT
-- On DECREASES reduce production wildcard -> HAT
-- On DANGLING reduce production wildcard -> HAT
-- On CUSTOM reduce production wildcard -> HAT
-- On CONTRACT reduce production wildcard -> HAT
-- On CONTINUES reduce production wildcard -> HAT
-- On CONSTANT10 reduce production wildcard -> HAT
-- On CONSTANT reduce production wildcard -> HAT
-- On CONST reduce production wildcard -> HAT
-- On COMPLETE reduce production wildcard -> HAT
-- On COMMA reduce production wildcard -> HAT
-- On COLONGT reduce production wildcard -> HAT
-- On COLONCOLON reduce production wildcard -> HAT
-- On COLON2 reduce production wildcard -> HAT
-- On COLON reduce production wildcard -> HAT
-- On CHAR reduce production wildcard -> HAT
-- On CASE reduce production wildcard -> HAT
-- On BSUNION reduce production wildcard -> HAT
-- On BSTYPE reduce production wildcard -> HAT
-- On BREAKS reduce production wildcard -> HAT
-- On BOOLEAN reduce production wildcard -> HAT
-- On BOOL reduce production wildcard -> HAT
-- On BLOCK_LENGTH reduce production wildcard -> HAT
-- On BIMPLIES reduce production wildcard -> HAT
-- On BIFF reduce production wildcard -> HAT
-- On BEHAVIORS reduce production wildcard -> HAT
-- On BEHAVIOR reduce production wildcard -> HAT
-- On BASE_ADDR reduce production wildcard -> HAT
-- On AXIOMATIC reduce production wildcard -> HAT
-- On AXIOM reduce production wildcard -> HAT
-- On AUTOMATIC reduce production wildcard -> HAT
-- On AT reduce production wildcard -> HAT
-- On ASSUMES reduce production wildcard -> HAT
-- On ASSIGNS reduce production wildcard -> HAT
-- On ASSERT reduce production wildcard -> HAT
-- On ARROW reduce production wildcard -> HAT
-- On AND reduce production wildcard -> HAT
-- On AMP reduce production wildcard -> HAT
-- On ALLOCATION reduce production wildcard -> HAT
-- On ALLOCATES reduce production wildcard -> HAT
-- On ALLOCABLE reduce production wildcard -> HAT

State 998:
## Known stack suffix:
## GTGT
## LR(1) items:
wildcard -> GTGT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> GTGT
-- On WITH reduce production wildcard -> GTGT
-- On VOLATILE reduce production wildcard -> GTGT
-- On VOID reduce production wildcard -> GTGT
-- On VARIANT reduce production wildcard -> GTGT
-- On VALID_READ reduce production wildcard -> GTGT
-- On VALID_RANGE reduce production wildcard -> GTGT
-- On VALID_INDEX reduce production wildcard -> GTGT
-- On VALID reduce production wildcard -> GTGT
-- On UNSIGNED reduce production wildcard -> GTGT
-- On UNION reduce production wildcard -> GTGT
-- On UNALLOCATED reduce production wildcard -> GTGT
-- On TYPEOF reduce production wildcard -> GTGT
-- On TYPENAME reduce production wildcard -> GTGT
-- On TYPE reduce production wildcard -> GTGT
-- On TRUE reduce production wildcard -> GTGT
-- On TILDE reduce production wildcard -> GTGT
-- On TERMINATES reduce production wildcard -> GTGT
-- On STRUCT reduce production wildcard -> GTGT
-- On STRING_LITERAL reduce production wildcard -> GTGT
-- On STATIC reduce production wildcard -> GTGT
-- On STAR reduce production wildcard -> GTGT
-- On SLICE reduce production wildcard -> GTGT
-- On SLASH reduce production wildcard -> GTGT
-- On SIZEOF reduce production wildcard -> GTGT
-- On SIGNED reduce production wildcard -> GTGT
-- On SHORT reduce production wildcard -> GTGT
-- On SEPARATED reduce production wildcard -> GTGT
-- On SEMICOLON reduce production wildcard -> GTGT
-- On RSQUARE reduce production wildcard -> GTGT
-- On RPAR reduce production wildcard -> GTGT
-- On RETURNS reduce production wildcard -> GTGT
-- On RESULT reduce production wildcard -> GTGT
-- On REQUIRES reduce production wildcard -> GTGT
-- On REGISTER reduce production wildcard -> GTGT
-- On REAL reduce production wildcard -> GTGT
-- On READS reduce production wildcard -> GTGT
-- On RBRACE reduce production wildcard -> GTGT
-- On QUESTION reduce production wildcard -> GTGT
-- On PREDICATE reduce production wildcard -> GTGT
-- On PRAGMA reduce production wildcard -> GTGT
-- On PLUS reduce production wildcard -> GTGT
-- On PIPE reduce production wildcard -> GTGT
-- On PERCENT reduce production wildcard -> GTGT
-- On OR reduce production wildcard -> GTGT
-- On OLD reduce production wildcard -> GTGT
-- On OFFSET reduce production wildcard -> GTGT
-- On NULL reduce production wildcard -> GTGT
-- On NOTHING reduce production wildcard -> GTGT
-- On NOT reduce production wildcard -> GTGT
-- On NE reduce production wildcard -> GTGT
-- On MODULE reduce production wildcard -> GTGT
-- On MODEL reduce production wildcard -> GTGT
-- On MINUS reduce production wildcard -> GTGT
-- On LTLT reduce production wildcard -> GTGT
-- On LTCOLON reduce production wildcard -> GTGT
-- On LT reduce production wildcard -> GTGT
-- On LSQUARE reduce production wildcard -> GTGT
-- On LPAR reduce production wildcard -> GTGT
-- On LOOP reduce production wildcard -> GTGT
-- On LONG reduce production wildcard -> GTGT
-- On LOGIC reduce production wildcard -> GTGT
-- On LET reduce production wildcard -> GTGT
-- On LEMMA reduce production wildcard -> GTGT
-- On LE reduce production wildcard -> GTGT
-- On LBRACE reduce production wildcard -> GTGT
-- On LAMBDA reduce production wildcard -> GTGT
-- On LABEL reduce production wildcard -> GTGT
-- On INVARIANT reduce production wildcard -> GTGT
-- On INTER reduce production wildcard -> GTGT
-- On INTEGER reduce production wildcard -> GTGT
-- On INT reduce production wildcard -> GTGT
-- On INITIALIZED reduce production wildcard -> GTGT
-- On INDUCTIVE reduce production wildcard -> GTGT
-- On INCLUDE reduce production wildcard -> GTGT
-- On IMPLIES reduce production wildcard -> GTGT
-- On IMPACT reduce production wildcard -> GTGT
-- On IFF reduce production wildcard -> GTGT
-- On IF reduce production wildcard -> GTGT
-- On IDENTIFIER reduce production wildcard -> GTGT
-- On HATHAT reduce production wildcard -> GTGT
-- On HAT reduce production wildcard -> GTGT
-- On GTGT reduce production wildcard -> GTGT
-- On GT reduce production wildcard -> GTGT
-- On GLOBAL reduce production wildcard -> GTGT
-- On GHOST reduce production wildcard -> GTGT
-- On GE reduce production wildcard -> GTGT
-- On FUNCTION reduce production wildcard -> GTGT
-- On FROM reduce production wildcard -> GTGT
-- On FRESH reduce production wildcard -> GTGT
-- On FREES reduce production wildcard -> GTGT
-- On FREEABLE reduce production wildcard -> GTGT
-- On FORALL reduce production wildcard -> GTGT
-- On FOR reduce production wildcard -> GTGT
-- On FLOAT reduce production wildcard -> GTGT
-- On FALSE reduce production wildcard -> GTGT
-- On EXT_LET reduce production wildcard -> GTGT
-- On EXT_AT reduce production wildcard -> GTGT
-- On EXITS reduce production wildcard -> GTGT
-- On EXISTS reduce production wildcard -> GTGT
-- On EQUAL reduce production wildcard -> GTGT
-- On EQ reduce production wildcard -> GTGT
-- On EOF reduce production wildcard -> GTGT
-- On ENUM reduce production wildcard -> GTGT
-- On ENSURES reduce production wildcard -> GTGT
-- On EMPTY reduce production wildcard -> GTGT
-- On ELSE reduce production wildcard -> GTGT
-- On DYNAMIC reduce production wildcard -> GTGT
-- On DOUBLE reduce production wildcard -> GTGT
-- On DOTDOTDOT reduce production wildcard -> GTGT
-- On DOTDOT reduce production wildcard -> GTGT
-- On DOT reduce production wildcard -> GTGT
-- On DOLLAR reduce production wildcard -> GTGT
-- On DISJOINT reduce production wildcard -> GTGT
-- On DECREASES reduce production wildcard -> GTGT
-- On DANGLING reduce production wildcard -> GTGT
-- On CUSTOM reduce production wildcard -> GTGT
-- On CONTRACT reduce production wildcard -> GTGT
-- On CONTINUES reduce production wildcard -> GTGT
-- On CONSTANT10 reduce production wildcard -> GTGT
-- On CONSTANT reduce production wildcard -> GTGT
-- On CONST reduce production wildcard -> GTGT
-- On COMPLETE reduce production wildcard -> GTGT
-- On COMMA reduce production wildcard -> GTGT
-- On COLONGT reduce production wildcard -> GTGT
-- On COLONCOLON reduce production wildcard -> GTGT
-- On COLON2 reduce production wildcard -> GTGT
-- On COLON reduce production wildcard -> GTGT
-- On CHAR reduce production wildcard -> GTGT
-- On CASE reduce production wildcard -> GTGT
-- On BSUNION reduce production wildcard -> GTGT
-- On BSTYPE reduce production wildcard -> GTGT
-- On BREAKS reduce production wildcard -> GTGT
-- On BOOLEAN reduce production wildcard -> GTGT
-- On BOOL reduce production wildcard -> GTGT
-- On BLOCK_LENGTH reduce production wildcard -> GTGT
-- On BIMPLIES reduce production wildcard -> GTGT
-- On BIFF reduce production wildcard -> GTGT
-- On BEHAVIORS reduce production wildcard -> GTGT
-- On BEHAVIOR reduce production wildcard -> GTGT
-- On BASE_ADDR reduce production wildcard -> GTGT
-- On AXIOMATIC reduce production wildcard -> GTGT
-- On AXIOM reduce production wildcard -> GTGT
-- On AUTOMATIC reduce production wildcard -> GTGT
-- On AT reduce production wildcard -> GTGT
-- On ASSUMES reduce production wildcard -> GTGT
-- On ASSIGNS reduce production wildcard -> GTGT
-- On ASSERT reduce production wildcard -> GTGT
-- On ARROW reduce production wildcard -> GTGT
-- On AND reduce production wildcard -> GTGT
-- On AMP reduce production wildcard -> GTGT
-- On ALLOCATION reduce production wildcard -> GTGT
-- On ALLOCATES reduce production wildcard -> GTGT
-- On ALLOCABLE reduce production wildcard -> GTGT

State 999:
## Known stack suffix:
## GT
## LR(1) items:
wildcard -> GT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> GT
-- On WITH reduce production wildcard -> GT
-- On VOLATILE reduce production wildcard -> GT
-- On VOID reduce production wildcard -> GT
-- On VARIANT reduce production wildcard -> GT
-- On VALID_READ reduce production wildcard -> GT
-- On VALID_RANGE reduce production wildcard -> GT
-- On VALID_INDEX reduce production wildcard -> GT
-- On VALID reduce production wildcard -> GT
-- On UNSIGNED reduce production wildcard -> GT
-- On UNION reduce production wildcard -> GT
-- On UNALLOCATED reduce production wildcard -> GT
-- On TYPEOF reduce production wildcard -> GT
-- On TYPENAME reduce production wildcard -> GT
-- On TYPE reduce production wildcard -> GT
-- On TRUE reduce production wildcard -> GT
-- On TILDE reduce production wildcard -> GT
-- On TERMINATES reduce production wildcard -> GT
-- On STRUCT reduce production wildcard -> GT
-- On STRING_LITERAL reduce production wildcard -> GT
-- On STATIC reduce production wildcard -> GT
-- On STAR reduce production wildcard -> GT
-- On SLICE reduce production wildcard -> GT
-- On SLASH reduce production wildcard -> GT
-- On SIZEOF reduce production wildcard -> GT
-- On SIGNED reduce production wildcard -> GT
-- On SHORT reduce production wildcard -> GT
-- On SEPARATED reduce production wildcard -> GT
-- On SEMICOLON reduce production wildcard -> GT
-- On RSQUARE reduce production wildcard -> GT
-- On RPAR reduce production wildcard -> GT
-- On RETURNS reduce production wildcard -> GT
-- On RESULT reduce production wildcard -> GT
-- On REQUIRES reduce production wildcard -> GT
-- On REGISTER reduce production wildcard -> GT
-- On REAL reduce production wildcard -> GT
-- On READS reduce production wildcard -> GT
-- On RBRACE reduce production wildcard -> GT
-- On QUESTION reduce production wildcard -> GT
-- On PREDICATE reduce production wildcard -> GT
-- On PRAGMA reduce production wildcard -> GT
-- On PLUS reduce production wildcard -> GT
-- On PIPE reduce production wildcard -> GT
-- On PERCENT reduce production wildcard -> GT
-- On OR reduce production wildcard -> GT
-- On OLD reduce production wildcard -> GT
-- On OFFSET reduce production wildcard -> GT
-- On NULL reduce production wildcard -> GT
-- On NOTHING reduce production wildcard -> GT
-- On NOT reduce production wildcard -> GT
-- On NE reduce production wildcard -> GT
-- On MODULE reduce production wildcard -> GT
-- On MODEL reduce production wildcard -> GT
-- On MINUS reduce production wildcard -> GT
-- On LTLT reduce production wildcard -> GT
-- On LTCOLON reduce production wildcard -> GT
-- On LT reduce production wildcard -> GT
-- On LSQUARE reduce production wildcard -> GT
-- On LPAR reduce production wildcard -> GT
-- On LOOP reduce production wildcard -> GT
-- On LONG reduce production wildcard -> GT
-- On LOGIC reduce production wildcard -> GT
-- On LET reduce production wildcard -> GT
-- On LEMMA reduce production wildcard -> GT
-- On LE reduce production wildcard -> GT
-- On LBRACE reduce production wildcard -> GT
-- On LAMBDA reduce production wildcard -> GT
-- On LABEL reduce production wildcard -> GT
-- On INVARIANT reduce production wildcard -> GT
-- On INTER reduce production wildcard -> GT
-- On INTEGER reduce production wildcard -> GT
-- On INT reduce production wildcard -> GT
-- On INITIALIZED reduce production wildcard -> GT
-- On INDUCTIVE reduce production wildcard -> GT
-- On INCLUDE reduce production wildcard -> GT
-- On IMPLIES reduce production wildcard -> GT
-- On IMPACT reduce production wildcard -> GT
-- On IFF reduce production wildcard -> GT
-- On IF reduce production wildcard -> GT
-- On IDENTIFIER reduce production wildcard -> GT
-- On HATHAT reduce production wildcard -> GT
-- On HAT reduce production wildcard -> GT
-- On GTGT reduce production wildcard -> GT
-- On GT reduce production wildcard -> GT
-- On GLOBAL reduce production wildcard -> GT
-- On GHOST reduce production wildcard -> GT
-- On GE reduce production wildcard -> GT
-- On FUNCTION reduce production wildcard -> GT
-- On FROM reduce production wildcard -> GT
-- On FRESH reduce production wildcard -> GT
-- On FREES reduce production wildcard -> GT
-- On FREEABLE reduce production wildcard -> GT
-- On FORALL reduce production wildcard -> GT
-- On FOR reduce production wildcard -> GT
-- On FLOAT reduce production wildcard -> GT
-- On FALSE reduce production wildcard -> GT
-- On EXT_LET reduce production wildcard -> GT
-- On EXT_AT reduce production wildcard -> GT
-- On EXITS reduce production wildcard -> GT
-- On EXISTS reduce production wildcard -> GT
-- On EQUAL reduce production wildcard -> GT
-- On EQ reduce production wildcard -> GT
-- On EOF reduce production wildcard -> GT
-- On ENUM reduce production wildcard -> GT
-- On ENSURES reduce production wildcard -> GT
-- On EMPTY reduce production wildcard -> GT
-- On ELSE reduce production wildcard -> GT
-- On DYNAMIC reduce production wildcard -> GT
-- On DOUBLE reduce production wildcard -> GT
-- On DOTDOTDOT reduce production wildcard -> GT
-- On DOTDOT reduce production wildcard -> GT
-- On DOT reduce production wildcard -> GT
-- On DOLLAR reduce production wildcard -> GT
-- On DISJOINT reduce production wildcard -> GT
-- On DECREASES reduce production wildcard -> GT
-- On DANGLING reduce production wildcard -> GT
-- On CUSTOM reduce production wildcard -> GT
-- On CONTRACT reduce production wildcard -> GT
-- On CONTINUES reduce production wildcard -> GT
-- On CONSTANT10 reduce production wildcard -> GT
-- On CONSTANT reduce production wildcard -> GT
-- On CONST reduce production wildcard -> GT
-- On COMPLETE reduce production wildcard -> GT
-- On COMMA reduce production wildcard -> GT
-- On COLONGT reduce production wildcard -> GT
-- On COLONCOLON reduce production wildcard -> GT
-- On COLON2 reduce production wildcard -> GT
-- On COLON reduce production wildcard -> GT
-- On CHAR reduce production wildcard -> GT
-- On CASE reduce production wildcard -> GT
-- On BSUNION reduce production wildcard -> GT
-- On BSTYPE reduce production wildcard -> GT
-- On BREAKS reduce production wildcard -> GT
-- On BOOLEAN reduce production wildcard -> GT
-- On BOOL reduce production wildcard -> GT
-- On BLOCK_LENGTH reduce production wildcard -> GT
-- On BIMPLIES reduce production wildcard -> GT
-- On BIFF reduce production wildcard -> GT
-- On BEHAVIORS reduce production wildcard -> GT
-- On BEHAVIOR reduce production wildcard -> GT
-- On BASE_ADDR reduce production wildcard -> GT
-- On AXIOMATIC reduce production wildcard -> GT
-- On AXIOM reduce production wildcard -> GT
-- On AUTOMATIC reduce production wildcard -> GT
-- On AT reduce production wildcard -> GT
-- On ASSUMES reduce production wildcard -> GT
-- On ASSIGNS reduce production wildcard -> GT
-- On ASSERT reduce production wildcard -> GT
-- On ARROW reduce production wildcard -> GT
-- On AND reduce production wildcard -> GT
-- On AMP reduce production wildcard -> GT
-- On ALLOCATION reduce production wildcard -> GT
-- On ALLOCATES reduce production wildcard -> GT
-- On ALLOCABLE reduce production wildcard -> GT

State 1000:
## Known stack suffix:
## GHOST
## LR(1) items:
wildcard -> GHOST . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> GHOST
-- On WITH reduce production wildcard -> GHOST
-- On VOLATILE reduce production wildcard -> GHOST
-- On VOID reduce production wildcard -> GHOST
-- On VARIANT reduce production wildcard -> GHOST
-- On VALID_READ reduce production wildcard -> GHOST
-- On VALID_RANGE reduce production wildcard -> GHOST
-- On VALID_INDEX reduce production wildcard -> GHOST
-- On VALID reduce production wildcard -> GHOST
-- On UNSIGNED reduce production wildcard -> GHOST
-- On UNION reduce production wildcard -> GHOST
-- On UNALLOCATED reduce production wildcard -> GHOST
-- On TYPEOF reduce production wildcard -> GHOST
-- On TYPENAME reduce production wildcard -> GHOST
-- On TYPE reduce production wildcard -> GHOST
-- On TRUE reduce production wildcard -> GHOST
-- On TILDE reduce production wildcard -> GHOST
-- On TERMINATES reduce production wildcard -> GHOST
-- On STRUCT reduce production wildcard -> GHOST
-- On STRING_LITERAL reduce production wildcard -> GHOST
-- On STATIC reduce production wildcard -> GHOST
-- On STAR reduce production wildcard -> GHOST
-- On SLICE reduce production wildcard -> GHOST
-- On SLASH reduce production wildcard -> GHOST
-- On SIZEOF reduce production wildcard -> GHOST
-- On SIGNED reduce production wildcard -> GHOST
-- On SHORT reduce production wildcard -> GHOST
-- On SEPARATED reduce production wildcard -> GHOST
-- On SEMICOLON reduce production wildcard -> GHOST
-- On RSQUARE reduce production wildcard -> GHOST
-- On RPAR reduce production wildcard -> GHOST
-- On RETURNS reduce production wildcard -> GHOST
-- On RESULT reduce production wildcard -> GHOST
-- On REQUIRES reduce production wildcard -> GHOST
-- On REGISTER reduce production wildcard -> GHOST
-- On REAL reduce production wildcard -> GHOST
-- On READS reduce production wildcard -> GHOST
-- On RBRACE reduce production wildcard -> GHOST
-- On QUESTION reduce production wildcard -> GHOST
-- On PREDICATE reduce production wildcard -> GHOST
-- On PRAGMA reduce production wildcard -> GHOST
-- On PLUS reduce production wildcard -> GHOST
-- On PIPE reduce production wildcard -> GHOST
-- On PERCENT reduce production wildcard -> GHOST
-- On OR reduce production wildcard -> GHOST
-- On OLD reduce production wildcard -> GHOST
-- On OFFSET reduce production wildcard -> GHOST
-- On NULL reduce production wildcard -> GHOST
-- On NOTHING reduce production wildcard -> GHOST
-- On NOT reduce production wildcard -> GHOST
-- On NE reduce production wildcard -> GHOST
-- On MODULE reduce production wildcard -> GHOST
-- On MODEL reduce production wildcard -> GHOST
-- On MINUS reduce production wildcard -> GHOST
-- On LTLT reduce production wildcard -> GHOST
-- On LTCOLON reduce production wildcard -> GHOST
-- On LT reduce production wildcard -> GHOST
-- On LSQUARE reduce production wildcard -> GHOST
-- On LPAR reduce production wildcard -> GHOST
-- On LOOP reduce production wildcard -> GHOST
-- On LONG reduce production wildcard -> GHOST
-- On LOGIC reduce production wildcard -> GHOST
-- On LET reduce production wildcard -> GHOST
-- On LEMMA reduce production wildcard -> GHOST
-- On LE reduce production wildcard -> GHOST
-- On LBRACE reduce production wildcard -> GHOST
-- On LAMBDA reduce production wildcard -> GHOST
-- On LABEL reduce production wildcard -> GHOST
-- On INVARIANT reduce production wildcard -> GHOST
-- On INTER reduce production wildcard -> GHOST
-- On INTEGER reduce production wildcard -> GHOST
-- On INT reduce production wildcard -> GHOST
-- On INITIALIZED reduce production wildcard -> GHOST
-- On INDUCTIVE reduce production wildcard -> GHOST
-- On INCLUDE reduce production wildcard -> GHOST
-- On IMPLIES reduce production wildcard -> GHOST
-- On IMPACT reduce production wildcard -> GHOST
-- On IFF reduce production wildcard -> GHOST
-- On IF reduce production wildcard -> GHOST
-- On IDENTIFIER reduce production wildcard -> GHOST
-- On HATHAT reduce production wildcard -> GHOST
-- On HAT reduce production wildcard -> GHOST
-- On GTGT reduce production wildcard -> GHOST
-- On GT reduce production wildcard -> GHOST
-- On GLOBAL reduce production wildcard -> GHOST
-- On GHOST reduce production wildcard -> GHOST
-- On GE reduce production wildcard -> GHOST
-- On FUNCTION reduce production wildcard -> GHOST
-- On FROM reduce production wildcard -> GHOST
-- On FRESH reduce production wildcard -> GHOST
-- On FREES reduce production wildcard -> GHOST
-- On FREEABLE reduce production wildcard -> GHOST
-- On FORALL reduce production wildcard -> GHOST
-- On FOR reduce production wildcard -> GHOST
-- On FLOAT reduce production wildcard -> GHOST
-- On FALSE reduce production wildcard -> GHOST
-- On EXT_LET reduce production wildcard -> GHOST
-- On EXT_AT reduce production wildcard -> GHOST
-- On EXITS reduce production wildcard -> GHOST
-- On EXISTS reduce production wildcard -> GHOST
-- On EQUAL reduce production wildcard -> GHOST
-- On EQ reduce production wildcard -> GHOST
-- On EOF reduce production wildcard -> GHOST
-- On ENUM reduce production wildcard -> GHOST
-- On ENSURES reduce production wildcard -> GHOST
-- On EMPTY reduce production wildcard -> GHOST
-- On ELSE reduce production wildcard -> GHOST
-- On DYNAMIC reduce production wildcard -> GHOST
-- On DOUBLE reduce production wildcard -> GHOST
-- On DOTDOTDOT reduce production wildcard -> GHOST
-- On DOTDOT reduce production wildcard -> GHOST
-- On DOT reduce production wildcard -> GHOST
-- On DOLLAR reduce production wildcard -> GHOST
-- On DISJOINT reduce production wildcard -> GHOST
-- On DECREASES reduce production wildcard -> GHOST
-- On DANGLING reduce production wildcard -> GHOST
-- On CUSTOM reduce production wildcard -> GHOST
-- On CONTRACT reduce production wildcard -> GHOST
-- On CONTINUES reduce production wildcard -> GHOST
-- On CONSTANT10 reduce production wildcard -> GHOST
-- On CONSTANT reduce production wildcard -> GHOST
-- On CONST reduce production wildcard -> GHOST
-- On COMPLETE reduce production wildcard -> GHOST
-- On COMMA reduce production wildcard -> GHOST
-- On COLONGT reduce production wildcard -> GHOST
-- On COLONCOLON reduce production wildcard -> GHOST
-- On COLON2 reduce production wildcard -> GHOST
-- On COLON reduce production wildcard -> GHOST
-- On CHAR reduce production wildcard -> GHOST
-- On CASE reduce production wildcard -> GHOST
-- On BSUNION reduce production wildcard -> GHOST
-- On BSTYPE reduce production wildcard -> GHOST
-- On BREAKS reduce production wildcard -> GHOST
-- On BOOLEAN reduce production wildcard -> GHOST
-- On BOOL reduce production wildcard -> GHOST
-- On BLOCK_LENGTH reduce production wildcard -> GHOST
-- On BIMPLIES reduce production wildcard -> GHOST
-- On BIFF reduce production wildcard -> GHOST
-- On BEHAVIORS reduce production wildcard -> GHOST
-- On BEHAVIOR reduce production wildcard -> GHOST
-- On BASE_ADDR reduce production wildcard -> GHOST
-- On AXIOMATIC reduce production wildcard -> GHOST
-- On AXIOM reduce production wildcard -> GHOST
-- On AUTOMATIC reduce production wildcard -> GHOST
-- On AT reduce production wildcard -> GHOST
-- On ASSUMES reduce production wildcard -> GHOST
-- On ASSIGNS reduce production wildcard -> GHOST
-- On ASSERT reduce production wildcard -> GHOST
-- On ARROW reduce production wildcard -> GHOST
-- On AND reduce production wildcard -> GHOST
-- On AMP reduce production wildcard -> GHOST
-- On ALLOCATION reduce production wildcard -> GHOST
-- On ALLOCATES reduce production wildcard -> GHOST
-- On ALLOCABLE reduce production wildcard -> GHOST

State 1001:
## Known stack suffix:
## GE
## LR(1) items:
wildcard -> GE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> GE
-- On WITH reduce production wildcard -> GE
-- On VOLATILE reduce production wildcard -> GE
-- On VOID reduce production wildcard -> GE
-- On VARIANT reduce production wildcard -> GE
-- On VALID_READ reduce production wildcard -> GE
-- On VALID_RANGE reduce production wildcard -> GE
-- On VALID_INDEX reduce production wildcard -> GE
-- On VALID reduce production wildcard -> GE
-- On UNSIGNED reduce production wildcard -> GE
-- On UNION reduce production wildcard -> GE
-- On UNALLOCATED reduce production wildcard -> GE
-- On TYPEOF reduce production wildcard -> GE
-- On TYPENAME reduce production wildcard -> GE
-- On TYPE reduce production wildcard -> GE
-- On TRUE reduce production wildcard -> GE
-- On TILDE reduce production wildcard -> GE
-- On TERMINATES reduce production wildcard -> GE
-- On STRUCT reduce production wildcard -> GE
-- On STRING_LITERAL reduce production wildcard -> GE
-- On STATIC reduce production wildcard -> GE
-- On STAR reduce production wildcard -> GE
-- On SLICE reduce production wildcard -> GE
-- On SLASH reduce production wildcard -> GE
-- On SIZEOF reduce production wildcard -> GE
-- On SIGNED reduce production wildcard -> GE
-- On SHORT reduce production wildcard -> GE
-- On SEPARATED reduce production wildcard -> GE
-- On SEMICOLON reduce production wildcard -> GE
-- On RSQUARE reduce production wildcard -> GE
-- On RPAR reduce production wildcard -> GE
-- On RETURNS reduce production wildcard -> GE
-- On RESULT reduce production wildcard -> GE
-- On REQUIRES reduce production wildcard -> GE
-- On REGISTER reduce production wildcard -> GE
-- On REAL reduce production wildcard -> GE
-- On READS reduce production wildcard -> GE
-- On RBRACE reduce production wildcard -> GE
-- On QUESTION reduce production wildcard -> GE
-- On PREDICATE reduce production wildcard -> GE
-- On PRAGMA reduce production wildcard -> GE
-- On PLUS reduce production wildcard -> GE
-- On PIPE reduce production wildcard -> GE
-- On PERCENT reduce production wildcard -> GE
-- On OR reduce production wildcard -> GE
-- On OLD reduce production wildcard -> GE
-- On OFFSET reduce production wildcard -> GE
-- On NULL reduce production wildcard -> GE
-- On NOTHING reduce production wildcard -> GE
-- On NOT reduce production wildcard -> GE
-- On NE reduce production wildcard -> GE
-- On MODULE reduce production wildcard -> GE
-- On MODEL reduce production wildcard -> GE
-- On MINUS reduce production wildcard -> GE
-- On LTLT reduce production wildcard -> GE
-- On LTCOLON reduce production wildcard -> GE
-- On LT reduce production wildcard -> GE
-- On LSQUARE reduce production wildcard -> GE
-- On LPAR reduce production wildcard -> GE
-- On LOOP reduce production wildcard -> GE
-- On LONG reduce production wildcard -> GE
-- On LOGIC reduce production wildcard -> GE
-- On LET reduce production wildcard -> GE
-- On LEMMA reduce production wildcard -> GE
-- On LE reduce production wildcard -> GE
-- On LBRACE reduce production wildcard -> GE
-- On LAMBDA reduce production wildcard -> GE
-- On LABEL reduce production wildcard -> GE
-- On INVARIANT reduce production wildcard -> GE
-- On INTER reduce production wildcard -> GE
-- On INTEGER reduce production wildcard -> GE
-- On INT reduce production wildcard -> GE
-- On INITIALIZED reduce production wildcard -> GE
-- On INDUCTIVE reduce production wildcard -> GE
-- On INCLUDE reduce production wildcard -> GE
-- On IMPLIES reduce production wildcard -> GE
-- On IMPACT reduce production wildcard -> GE
-- On IFF reduce production wildcard -> GE
-- On IF reduce production wildcard -> GE
-- On IDENTIFIER reduce production wildcard -> GE
-- On HATHAT reduce production wildcard -> GE
-- On HAT reduce production wildcard -> GE
-- On GTGT reduce production wildcard -> GE
-- On GT reduce production wildcard -> GE
-- On GLOBAL reduce production wildcard -> GE
-- On GHOST reduce production wildcard -> GE
-- On GE reduce production wildcard -> GE
-- On FUNCTION reduce production wildcard -> GE
-- On FROM reduce production wildcard -> GE
-- On FRESH reduce production wildcard -> GE
-- On FREES reduce production wildcard -> GE
-- On FREEABLE reduce production wildcard -> GE
-- On FORALL reduce production wildcard -> GE
-- On FOR reduce production wildcard -> GE
-- On FLOAT reduce production wildcard -> GE
-- On FALSE reduce production wildcard -> GE
-- On EXT_LET reduce production wildcard -> GE
-- On EXT_AT reduce production wildcard -> GE
-- On EXITS reduce production wildcard -> GE
-- On EXISTS reduce production wildcard -> GE
-- On EQUAL reduce production wildcard -> GE
-- On EQ reduce production wildcard -> GE
-- On EOF reduce production wildcard -> GE
-- On ENUM reduce production wildcard -> GE
-- On ENSURES reduce production wildcard -> GE
-- On EMPTY reduce production wildcard -> GE
-- On ELSE reduce production wildcard -> GE
-- On DYNAMIC reduce production wildcard -> GE
-- On DOUBLE reduce production wildcard -> GE
-- On DOTDOTDOT reduce production wildcard -> GE
-- On DOTDOT reduce production wildcard -> GE
-- On DOT reduce production wildcard -> GE
-- On DOLLAR reduce production wildcard -> GE
-- On DISJOINT reduce production wildcard -> GE
-- On DECREASES reduce production wildcard -> GE
-- On DANGLING reduce production wildcard -> GE
-- On CUSTOM reduce production wildcard -> GE
-- On CONTRACT reduce production wildcard -> GE
-- On CONTINUES reduce production wildcard -> GE
-- On CONSTANT10 reduce production wildcard -> GE
-- On CONSTANT reduce production wildcard -> GE
-- On CONST reduce production wildcard -> GE
-- On COMPLETE reduce production wildcard -> GE
-- On COMMA reduce production wildcard -> GE
-- On COLONGT reduce production wildcard -> GE
-- On COLONCOLON reduce production wildcard -> GE
-- On COLON2 reduce production wildcard -> GE
-- On COLON reduce production wildcard -> GE
-- On CHAR reduce production wildcard -> GE
-- On CASE reduce production wildcard -> GE
-- On BSUNION reduce production wildcard -> GE
-- On BSTYPE reduce production wildcard -> GE
-- On BREAKS reduce production wildcard -> GE
-- On BOOLEAN reduce production wildcard -> GE
-- On BOOL reduce production wildcard -> GE
-- On BLOCK_LENGTH reduce production wildcard -> GE
-- On BIMPLIES reduce production wildcard -> GE
-- On BIFF reduce production wildcard -> GE
-- On BEHAVIORS reduce production wildcard -> GE
-- On BEHAVIOR reduce production wildcard -> GE
-- On BASE_ADDR reduce production wildcard -> GE
-- On AXIOMATIC reduce production wildcard -> GE
-- On AXIOM reduce production wildcard -> GE
-- On AUTOMATIC reduce production wildcard -> GE
-- On AT reduce production wildcard -> GE
-- On ASSUMES reduce production wildcard -> GE
-- On ASSIGNS reduce production wildcard -> GE
-- On ASSERT reduce production wildcard -> GE
-- On ARROW reduce production wildcard -> GE
-- On AND reduce production wildcard -> GE
-- On AMP reduce production wildcard -> GE
-- On ALLOCATION reduce production wildcard -> GE
-- On ALLOCATES reduce production wildcard -> GE
-- On ALLOCABLE reduce production wildcard -> GE

State 1002:
## Known stack suffix:
## FROM
## LR(1) items:
bs_keyword -> FROM . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> FROM
-- On WITH reduce production bs_keyword -> FROM
-- On VOLATILE reduce production bs_keyword -> FROM
-- On VOID reduce production bs_keyword -> FROM
-- On VARIANT reduce production bs_keyword -> FROM
-- On VALID_READ reduce production bs_keyword -> FROM
-- On VALID_RANGE reduce production bs_keyword -> FROM
-- On VALID_INDEX reduce production bs_keyword -> FROM
-- On VALID reduce production bs_keyword -> FROM
-- On UNSIGNED reduce production bs_keyword -> FROM
-- On UNION reduce production bs_keyword -> FROM
-- On UNALLOCATED reduce production bs_keyword -> FROM
-- On TYPEOF reduce production bs_keyword -> FROM
-- On TYPENAME reduce production bs_keyword -> FROM
-- On TYPE reduce production bs_keyword -> FROM
-- On TRUE reduce production bs_keyword -> FROM
-- On TILDE reduce production bs_keyword -> FROM
-- On TERMINATES reduce production bs_keyword -> FROM
-- On STRUCT reduce production bs_keyword -> FROM
-- On STRING_LITERAL reduce production bs_keyword -> FROM
-- On STATIC reduce production bs_keyword -> FROM
-- On STAR reduce production bs_keyword -> FROM
-- On SLICE reduce production bs_keyword -> FROM
-- On SLASH reduce production bs_keyword -> FROM
-- On SIZEOF reduce production bs_keyword -> FROM
-- On SIGNED reduce production bs_keyword -> FROM
-- On SHORT reduce production bs_keyword -> FROM
-- On SEPARATED reduce production bs_keyword -> FROM
-- On SEMICOLON reduce production bs_keyword -> FROM
-- On RSQUARE reduce production bs_keyword -> FROM
-- On RPAR reduce production bs_keyword -> FROM
-- On RETURNS reduce production bs_keyword -> FROM
-- On RESULT reduce production bs_keyword -> FROM
-- On REQUIRES reduce production bs_keyword -> FROM
-- On REGISTER reduce production bs_keyword -> FROM
-- On REAL reduce production bs_keyword -> FROM
-- On READS reduce production bs_keyword -> FROM
-- On RBRACE reduce production bs_keyword -> FROM
-- On QUESTION reduce production bs_keyword -> FROM
-- On PREDICATE reduce production bs_keyword -> FROM
-- On PRAGMA reduce production bs_keyword -> FROM
-- On PLUS reduce production bs_keyword -> FROM
-- On PIPE reduce production bs_keyword -> FROM
-- On PERCENT reduce production bs_keyword -> FROM
-- On OR reduce production bs_keyword -> FROM
-- On OLD reduce production bs_keyword -> FROM
-- On OFFSET reduce production bs_keyword -> FROM
-- On NULL reduce production bs_keyword -> FROM
-- On NOTHING reduce production bs_keyword -> FROM
-- On NOT reduce production bs_keyword -> FROM
-- On NE reduce production bs_keyword -> FROM
-- On MODULE reduce production bs_keyword -> FROM
-- On MODEL reduce production bs_keyword -> FROM
-- On MINUS reduce production bs_keyword -> FROM
-- On LTLT reduce production bs_keyword -> FROM
-- On LTCOLON reduce production bs_keyword -> FROM
-- On LT reduce production bs_keyword -> FROM
-- On LSQUARE reduce production bs_keyword -> FROM
-- On LPAR reduce production bs_keyword -> FROM
-- On LOOP reduce production bs_keyword -> FROM
-- On LONG reduce production bs_keyword -> FROM
-- On LOGIC reduce production bs_keyword -> FROM
-- On LET reduce production bs_keyword -> FROM
-- On LEMMA reduce production bs_keyword -> FROM
-- On LE reduce production bs_keyword -> FROM
-- On LBRACE reduce production bs_keyword -> FROM
-- On LAMBDA reduce production bs_keyword -> FROM
-- On LABEL reduce production bs_keyword -> FROM
-- On INVARIANT reduce production bs_keyword -> FROM
-- On INTER reduce production bs_keyword -> FROM
-- On INTEGER reduce production bs_keyword -> FROM
-- On INT reduce production bs_keyword -> FROM
-- On INITIALIZED reduce production bs_keyword -> FROM
-- On INDUCTIVE reduce production bs_keyword -> FROM
-- On INCLUDE reduce production bs_keyword -> FROM
-- On IMPLIES reduce production bs_keyword -> FROM
-- On IMPACT reduce production bs_keyword -> FROM
-- On IFF reduce production bs_keyword -> FROM
-- On IF reduce production bs_keyword -> FROM
-- On IDENTIFIER reduce production bs_keyword -> FROM
-- On HATHAT reduce production bs_keyword -> FROM
-- On HAT reduce production bs_keyword -> FROM
-- On GTGT reduce production bs_keyword -> FROM
-- On GT reduce production bs_keyword -> FROM
-- On GLOBAL reduce production bs_keyword -> FROM
-- On GHOST reduce production bs_keyword -> FROM
-- On GE reduce production bs_keyword -> FROM
-- On FUNCTION reduce production bs_keyword -> FROM
-- On FROM reduce production bs_keyword -> FROM
-- On FRESH reduce production bs_keyword -> FROM
-- On FREES reduce production bs_keyword -> FROM
-- On FREEABLE reduce production bs_keyword -> FROM
-- On FORALL reduce production bs_keyword -> FROM
-- On FOR reduce production bs_keyword -> FROM
-- On FLOAT reduce production bs_keyword -> FROM
-- On FALSE reduce production bs_keyword -> FROM
-- On EXT_LET reduce production bs_keyword -> FROM
-- On EXT_AT reduce production bs_keyword -> FROM
-- On EXITS reduce production bs_keyword -> FROM
-- On EXISTS reduce production bs_keyword -> FROM
-- On EQUAL reduce production bs_keyword -> FROM
-- On EQ reduce production bs_keyword -> FROM
-- On EOF reduce production bs_keyword -> FROM
-- On ENUM reduce production bs_keyword -> FROM
-- On ENSURES reduce production bs_keyword -> FROM
-- On EMPTY reduce production bs_keyword -> FROM
-- On ELSE reduce production bs_keyword -> FROM
-- On DYNAMIC reduce production bs_keyword -> FROM
-- On DOUBLE reduce production bs_keyword -> FROM
-- On DOTDOTDOT reduce production bs_keyword -> FROM
-- On DOTDOT reduce production bs_keyword -> FROM
-- On DOT reduce production bs_keyword -> FROM
-- On DOLLAR reduce production bs_keyword -> FROM
-- On DISJOINT reduce production bs_keyword -> FROM
-- On DECREASES reduce production bs_keyword -> FROM
-- On DANGLING reduce production bs_keyword -> FROM
-- On CUSTOM reduce production bs_keyword -> FROM
-- On CONTRACT reduce production bs_keyword -> FROM
-- On CONTINUES reduce production bs_keyword -> FROM
-- On CONSTANT10 reduce production bs_keyword -> FROM
-- On CONSTANT reduce production bs_keyword -> FROM
-- On CONST reduce production bs_keyword -> FROM
-- On COMPLETE reduce production bs_keyword -> FROM
-- On COMMA reduce production bs_keyword -> FROM
-- On COLONGT reduce production bs_keyword -> FROM
-- On COLONCOLON reduce production bs_keyword -> FROM
-- On COLON2 reduce production bs_keyword -> FROM
-- On COLON reduce production bs_keyword -> FROM
-- On CHAR reduce production bs_keyword -> FROM
-- On CASE reduce production bs_keyword -> FROM
-- On BSUNION reduce production bs_keyword -> FROM
-- On BSTYPE reduce production bs_keyword -> FROM
-- On BREAKS reduce production bs_keyword -> FROM
-- On BOOLEAN reduce production bs_keyword -> FROM
-- On BOOL reduce production bs_keyword -> FROM
-- On BLOCK_LENGTH reduce production bs_keyword -> FROM
-- On BIMPLIES reduce production bs_keyword -> FROM
-- On BIFF reduce production bs_keyword -> FROM
-- On BEHAVIORS reduce production bs_keyword -> FROM
-- On BEHAVIOR reduce production bs_keyword -> FROM
-- On BASE_ADDR reduce production bs_keyword -> FROM
-- On AXIOMATIC reduce production bs_keyword -> FROM
-- On AXIOM reduce production bs_keyword -> FROM
-- On AUTOMATIC reduce production bs_keyword -> FROM
-- On AT reduce production bs_keyword -> FROM
-- On ASSUMES reduce production bs_keyword -> FROM
-- On ASSIGNS reduce production bs_keyword -> FROM
-- On ASSERT reduce production bs_keyword -> FROM
-- On ARROW reduce production bs_keyword -> FROM
-- On AND reduce production bs_keyword -> FROM
-- On AMP reduce production bs_keyword -> FROM
-- On ALLOCATION reduce production bs_keyword -> FROM
-- On ALLOCATES reduce production bs_keyword -> FROM
-- On ALLOCABLE reduce production bs_keyword -> FROM

State 1003:
## Known stack suffix:
## FRESH
## LR(1) items:
bs_keyword -> FRESH . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> FRESH
-- On WITH reduce production bs_keyword -> FRESH
-- On VOLATILE reduce production bs_keyword -> FRESH
-- On VOID reduce production bs_keyword -> FRESH
-- On VARIANT reduce production bs_keyword -> FRESH
-- On VALID_READ reduce production bs_keyword -> FRESH
-- On VALID_RANGE reduce production bs_keyword -> FRESH
-- On VALID_INDEX reduce production bs_keyword -> FRESH
-- On VALID reduce production bs_keyword -> FRESH
-- On UNSIGNED reduce production bs_keyword -> FRESH
-- On UNION reduce production bs_keyword -> FRESH
-- On UNALLOCATED reduce production bs_keyword -> FRESH
-- On TYPEOF reduce production bs_keyword -> FRESH
-- On TYPENAME reduce production bs_keyword -> FRESH
-- On TYPE reduce production bs_keyword -> FRESH
-- On TRUE reduce production bs_keyword -> FRESH
-- On TILDE reduce production bs_keyword -> FRESH
-- On TERMINATES reduce production bs_keyword -> FRESH
-- On STRUCT reduce production bs_keyword -> FRESH
-- On STRING_LITERAL reduce production bs_keyword -> FRESH
-- On STATIC reduce production bs_keyword -> FRESH
-- On STAR reduce production bs_keyword -> FRESH
-- On SLICE reduce production bs_keyword -> FRESH
-- On SLASH reduce production bs_keyword -> FRESH
-- On SIZEOF reduce production bs_keyword -> FRESH
-- On SIGNED reduce production bs_keyword -> FRESH
-- On SHORT reduce production bs_keyword -> FRESH
-- On SEPARATED reduce production bs_keyword -> FRESH
-- On SEMICOLON reduce production bs_keyword -> FRESH
-- On RSQUARE reduce production bs_keyword -> FRESH
-- On RPAR reduce production bs_keyword -> FRESH
-- On RETURNS reduce production bs_keyword -> FRESH
-- On RESULT reduce production bs_keyword -> FRESH
-- On REQUIRES reduce production bs_keyword -> FRESH
-- On REGISTER reduce production bs_keyword -> FRESH
-- On REAL reduce production bs_keyword -> FRESH
-- On READS reduce production bs_keyword -> FRESH
-- On RBRACE reduce production bs_keyword -> FRESH
-- On QUESTION reduce production bs_keyword -> FRESH
-- On PREDICATE reduce production bs_keyword -> FRESH
-- On PRAGMA reduce production bs_keyword -> FRESH
-- On PLUS reduce production bs_keyword -> FRESH
-- On PIPE reduce production bs_keyword -> FRESH
-- On PERCENT reduce production bs_keyword -> FRESH
-- On OR reduce production bs_keyword -> FRESH
-- On OLD reduce production bs_keyword -> FRESH
-- On OFFSET reduce production bs_keyword -> FRESH
-- On NULL reduce production bs_keyword -> FRESH
-- On NOTHING reduce production bs_keyword -> FRESH
-- On NOT reduce production bs_keyword -> FRESH
-- On NE reduce production bs_keyword -> FRESH
-- On MODULE reduce production bs_keyword -> FRESH
-- On MODEL reduce production bs_keyword -> FRESH
-- On MINUS reduce production bs_keyword -> FRESH
-- On LTLT reduce production bs_keyword -> FRESH
-- On LTCOLON reduce production bs_keyword -> FRESH
-- On LT reduce production bs_keyword -> FRESH
-- On LSQUARE reduce production bs_keyword -> FRESH
-- On LPAR reduce production bs_keyword -> FRESH
-- On LOOP reduce production bs_keyword -> FRESH
-- On LONG reduce production bs_keyword -> FRESH
-- On LOGIC reduce production bs_keyword -> FRESH
-- On LET reduce production bs_keyword -> FRESH
-- On LEMMA reduce production bs_keyword -> FRESH
-- On LE reduce production bs_keyword -> FRESH
-- On LBRACE reduce production bs_keyword -> FRESH
-- On LAMBDA reduce production bs_keyword -> FRESH
-- On LABEL reduce production bs_keyword -> FRESH
-- On INVARIANT reduce production bs_keyword -> FRESH
-- On INTER reduce production bs_keyword -> FRESH
-- On INTEGER reduce production bs_keyword -> FRESH
-- On INT reduce production bs_keyword -> FRESH
-- On INITIALIZED reduce production bs_keyword -> FRESH
-- On INDUCTIVE reduce production bs_keyword -> FRESH
-- On INCLUDE reduce production bs_keyword -> FRESH
-- On IMPLIES reduce production bs_keyword -> FRESH
-- On IMPACT reduce production bs_keyword -> FRESH
-- On IFF reduce production bs_keyword -> FRESH
-- On IF reduce production bs_keyword -> FRESH
-- On IDENTIFIER reduce production bs_keyword -> FRESH
-- On HATHAT reduce production bs_keyword -> FRESH
-- On HAT reduce production bs_keyword -> FRESH
-- On GTGT reduce production bs_keyword -> FRESH
-- On GT reduce production bs_keyword -> FRESH
-- On GLOBAL reduce production bs_keyword -> FRESH
-- On GHOST reduce production bs_keyword -> FRESH
-- On GE reduce production bs_keyword -> FRESH
-- On FUNCTION reduce production bs_keyword -> FRESH
-- On FROM reduce production bs_keyword -> FRESH
-- On FRESH reduce production bs_keyword -> FRESH
-- On FREES reduce production bs_keyword -> FRESH
-- On FREEABLE reduce production bs_keyword -> FRESH
-- On FORALL reduce production bs_keyword -> FRESH
-- On FOR reduce production bs_keyword -> FRESH
-- On FLOAT reduce production bs_keyword -> FRESH
-- On FALSE reduce production bs_keyword -> FRESH
-- On EXT_LET reduce production bs_keyword -> FRESH
-- On EXT_AT reduce production bs_keyword -> FRESH
-- On EXITS reduce production bs_keyword -> FRESH
-- On EXISTS reduce production bs_keyword -> FRESH
-- On EQUAL reduce production bs_keyword -> FRESH
-- On EQ reduce production bs_keyword -> FRESH
-- On EOF reduce production bs_keyword -> FRESH
-- On ENUM reduce production bs_keyword -> FRESH
-- On ENSURES reduce production bs_keyword -> FRESH
-- On EMPTY reduce production bs_keyword -> FRESH
-- On ELSE reduce production bs_keyword -> FRESH
-- On DYNAMIC reduce production bs_keyword -> FRESH
-- On DOUBLE reduce production bs_keyword -> FRESH
-- On DOTDOTDOT reduce production bs_keyword -> FRESH
-- On DOTDOT reduce production bs_keyword -> FRESH
-- On DOT reduce production bs_keyword -> FRESH
-- On DOLLAR reduce production bs_keyword -> FRESH
-- On DISJOINT reduce production bs_keyword -> FRESH
-- On DECREASES reduce production bs_keyword -> FRESH
-- On DANGLING reduce production bs_keyword -> FRESH
-- On CUSTOM reduce production bs_keyword -> FRESH
-- On CONTRACT reduce production bs_keyword -> FRESH
-- On CONTINUES reduce production bs_keyword -> FRESH
-- On CONSTANT10 reduce production bs_keyword -> FRESH
-- On CONSTANT reduce production bs_keyword -> FRESH
-- On CONST reduce production bs_keyword -> FRESH
-- On COMPLETE reduce production bs_keyword -> FRESH
-- On COMMA reduce production bs_keyword -> FRESH
-- On COLONGT reduce production bs_keyword -> FRESH
-- On COLONCOLON reduce production bs_keyword -> FRESH
-- On COLON2 reduce production bs_keyword -> FRESH
-- On COLON reduce production bs_keyword -> FRESH
-- On CHAR reduce production bs_keyword -> FRESH
-- On CASE reduce production bs_keyword -> FRESH
-- On BSUNION reduce production bs_keyword -> FRESH
-- On BSTYPE reduce production bs_keyword -> FRESH
-- On BREAKS reduce production bs_keyword -> FRESH
-- On BOOLEAN reduce production bs_keyword -> FRESH
-- On BOOL reduce production bs_keyword -> FRESH
-- On BLOCK_LENGTH reduce production bs_keyword -> FRESH
-- On BIMPLIES reduce production bs_keyword -> FRESH
-- On BIFF reduce production bs_keyword -> FRESH
-- On BEHAVIORS reduce production bs_keyword -> FRESH
-- On BEHAVIOR reduce production bs_keyword -> FRESH
-- On BASE_ADDR reduce production bs_keyword -> FRESH
-- On AXIOMATIC reduce production bs_keyword -> FRESH
-- On AXIOM reduce production bs_keyword -> FRESH
-- On AUTOMATIC reduce production bs_keyword -> FRESH
-- On AT reduce production bs_keyword -> FRESH
-- On ASSUMES reduce production bs_keyword -> FRESH
-- On ASSIGNS reduce production bs_keyword -> FRESH
-- On ASSERT reduce production bs_keyword -> FRESH
-- On ARROW reduce production bs_keyword -> FRESH
-- On AND reduce production bs_keyword -> FRESH
-- On AMP reduce production bs_keyword -> FRESH
-- On ALLOCATION reduce production bs_keyword -> FRESH
-- On ALLOCATES reduce production bs_keyword -> FRESH
-- On ALLOCABLE reduce production bs_keyword -> FRESH

State 1004:
## Known stack suffix:
## FREEABLE
## LR(1) items:
bs_keyword -> FREEABLE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> FREEABLE
-- On WITH reduce production bs_keyword -> FREEABLE
-- On VOLATILE reduce production bs_keyword -> FREEABLE
-- On VOID reduce production bs_keyword -> FREEABLE
-- On VARIANT reduce production bs_keyword -> FREEABLE
-- On VALID_READ reduce production bs_keyword -> FREEABLE
-- On VALID_RANGE reduce production bs_keyword -> FREEABLE
-- On VALID_INDEX reduce production bs_keyword -> FREEABLE
-- On VALID reduce production bs_keyword -> FREEABLE
-- On UNSIGNED reduce production bs_keyword -> FREEABLE
-- On UNION reduce production bs_keyword -> FREEABLE
-- On UNALLOCATED reduce production bs_keyword -> FREEABLE
-- On TYPEOF reduce production bs_keyword -> FREEABLE
-- On TYPENAME reduce production bs_keyword -> FREEABLE
-- On TYPE reduce production bs_keyword -> FREEABLE
-- On TRUE reduce production bs_keyword -> FREEABLE
-- On TILDE reduce production bs_keyword -> FREEABLE
-- On TERMINATES reduce production bs_keyword -> FREEABLE
-- On STRUCT reduce production bs_keyword -> FREEABLE
-- On STRING_LITERAL reduce production bs_keyword -> FREEABLE
-- On STATIC reduce production bs_keyword -> FREEABLE
-- On STAR reduce production bs_keyword -> FREEABLE
-- On SLICE reduce production bs_keyword -> FREEABLE
-- On SLASH reduce production bs_keyword -> FREEABLE
-- On SIZEOF reduce production bs_keyword -> FREEABLE
-- On SIGNED reduce production bs_keyword -> FREEABLE
-- On SHORT reduce production bs_keyword -> FREEABLE
-- On SEPARATED reduce production bs_keyword -> FREEABLE
-- On SEMICOLON reduce production bs_keyword -> FREEABLE
-- On RSQUARE reduce production bs_keyword -> FREEABLE
-- On RPAR reduce production bs_keyword -> FREEABLE
-- On RETURNS reduce production bs_keyword -> FREEABLE
-- On RESULT reduce production bs_keyword -> FREEABLE
-- On REQUIRES reduce production bs_keyword -> FREEABLE
-- On REGISTER reduce production bs_keyword -> FREEABLE
-- On REAL reduce production bs_keyword -> FREEABLE
-- On READS reduce production bs_keyword -> FREEABLE
-- On RBRACE reduce production bs_keyword -> FREEABLE
-- On QUESTION reduce production bs_keyword -> FREEABLE
-- On PREDICATE reduce production bs_keyword -> FREEABLE
-- On PRAGMA reduce production bs_keyword -> FREEABLE
-- On PLUS reduce production bs_keyword -> FREEABLE
-- On PIPE reduce production bs_keyword -> FREEABLE
-- On PERCENT reduce production bs_keyword -> FREEABLE
-- On OR reduce production bs_keyword -> FREEABLE
-- On OLD reduce production bs_keyword -> FREEABLE
-- On OFFSET reduce production bs_keyword -> FREEABLE
-- On NULL reduce production bs_keyword -> FREEABLE
-- On NOTHING reduce production bs_keyword -> FREEABLE
-- On NOT reduce production bs_keyword -> FREEABLE
-- On NE reduce production bs_keyword -> FREEABLE
-- On MODULE reduce production bs_keyword -> FREEABLE
-- On MODEL reduce production bs_keyword -> FREEABLE
-- On MINUS reduce production bs_keyword -> FREEABLE
-- On LTLT reduce production bs_keyword -> FREEABLE
-- On LTCOLON reduce production bs_keyword -> FREEABLE
-- On LT reduce production bs_keyword -> FREEABLE
-- On LSQUARE reduce production bs_keyword -> FREEABLE
-- On LPAR reduce production bs_keyword -> FREEABLE
-- On LOOP reduce production bs_keyword -> FREEABLE
-- On LONG reduce production bs_keyword -> FREEABLE
-- On LOGIC reduce production bs_keyword -> FREEABLE
-- On LET reduce production bs_keyword -> FREEABLE
-- On LEMMA reduce production bs_keyword -> FREEABLE
-- On LE reduce production bs_keyword -> FREEABLE
-- On LBRACE reduce production bs_keyword -> FREEABLE
-- On LAMBDA reduce production bs_keyword -> FREEABLE
-- On LABEL reduce production bs_keyword -> FREEABLE
-- On INVARIANT reduce production bs_keyword -> FREEABLE
-- On INTER reduce production bs_keyword -> FREEABLE
-- On INTEGER reduce production bs_keyword -> FREEABLE
-- On INT reduce production bs_keyword -> FREEABLE
-- On INITIALIZED reduce production bs_keyword -> FREEABLE
-- On INDUCTIVE reduce production bs_keyword -> FREEABLE
-- On INCLUDE reduce production bs_keyword -> FREEABLE
-- On IMPLIES reduce production bs_keyword -> FREEABLE
-- On IMPACT reduce production bs_keyword -> FREEABLE
-- On IFF reduce production bs_keyword -> FREEABLE
-- On IF reduce production bs_keyword -> FREEABLE
-- On IDENTIFIER reduce production bs_keyword -> FREEABLE
-- On HATHAT reduce production bs_keyword -> FREEABLE
-- On HAT reduce production bs_keyword -> FREEABLE
-- On GTGT reduce production bs_keyword -> FREEABLE
-- On GT reduce production bs_keyword -> FREEABLE
-- On GLOBAL reduce production bs_keyword -> FREEABLE
-- On GHOST reduce production bs_keyword -> FREEABLE
-- On GE reduce production bs_keyword -> FREEABLE
-- On FUNCTION reduce production bs_keyword -> FREEABLE
-- On FROM reduce production bs_keyword -> FREEABLE
-- On FRESH reduce production bs_keyword -> FREEABLE
-- On FREES reduce production bs_keyword -> FREEABLE
-- On FREEABLE reduce production bs_keyword -> FREEABLE
-- On FORALL reduce production bs_keyword -> FREEABLE
-- On FOR reduce production bs_keyword -> FREEABLE
-- On FLOAT reduce production bs_keyword -> FREEABLE
-- On FALSE reduce production bs_keyword -> FREEABLE
-- On EXT_LET reduce production bs_keyword -> FREEABLE
-- On EXT_AT reduce production bs_keyword -> FREEABLE
-- On EXITS reduce production bs_keyword -> FREEABLE
-- On EXISTS reduce production bs_keyword -> FREEABLE
-- On EQUAL reduce production bs_keyword -> FREEABLE
-- On EQ reduce production bs_keyword -> FREEABLE
-- On EOF reduce production bs_keyword -> FREEABLE
-- On ENUM reduce production bs_keyword -> FREEABLE
-- On ENSURES reduce production bs_keyword -> FREEABLE
-- On EMPTY reduce production bs_keyword -> FREEABLE
-- On ELSE reduce production bs_keyword -> FREEABLE
-- On DYNAMIC reduce production bs_keyword -> FREEABLE
-- On DOUBLE reduce production bs_keyword -> FREEABLE
-- On DOTDOTDOT reduce production bs_keyword -> FREEABLE
-- On DOTDOT reduce production bs_keyword -> FREEABLE
-- On DOT reduce production bs_keyword -> FREEABLE
-- On DOLLAR reduce production bs_keyword -> FREEABLE
-- On DISJOINT reduce production bs_keyword -> FREEABLE
-- On DECREASES reduce production bs_keyword -> FREEABLE
-- On DANGLING reduce production bs_keyword -> FREEABLE
-- On CUSTOM reduce production bs_keyword -> FREEABLE
-- On CONTRACT reduce production bs_keyword -> FREEABLE
-- On CONTINUES reduce production bs_keyword -> FREEABLE
-- On CONSTANT10 reduce production bs_keyword -> FREEABLE
-- On CONSTANT reduce production bs_keyword -> FREEABLE
-- On CONST reduce production bs_keyword -> FREEABLE
-- On COMPLETE reduce production bs_keyword -> FREEABLE
-- On COMMA reduce production bs_keyword -> FREEABLE
-- On COLONGT reduce production bs_keyword -> FREEABLE
-- On COLONCOLON reduce production bs_keyword -> FREEABLE
-- On COLON2 reduce production bs_keyword -> FREEABLE
-- On COLON reduce production bs_keyword -> FREEABLE
-- On CHAR reduce production bs_keyword -> FREEABLE
-- On CASE reduce production bs_keyword -> FREEABLE
-- On BSUNION reduce production bs_keyword -> FREEABLE
-- On BSTYPE reduce production bs_keyword -> FREEABLE
-- On BREAKS reduce production bs_keyword -> FREEABLE
-- On BOOLEAN reduce production bs_keyword -> FREEABLE
-- On BOOL reduce production bs_keyword -> FREEABLE
-- On BLOCK_LENGTH reduce production bs_keyword -> FREEABLE
-- On BIMPLIES reduce production bs_keyword -> FREEABLE
-- On BIFF reduce production bs_keyword -> FREEABLE
-- On BEHAVIORS reduce production bs_keyword -> FREEABLE
-- On BEHAVIOR reduce production bs_keyword -> FREEABLE
-- On BASE_ADDR reduce production bs_keyword -> FREEABLE
-- On AXIOMATIC reduce production bs_keyword -> FREEABLE
-- On AXIOM reduce production bs_keyword -> FREEABLE
-- On AUTOMATIC reduce production bs_keyword -> FREEABLE
-- On AT reduce production bs_keyword -> FREEABLE
-- On ASSUMES reduce production bs_keyword -> FREEABLE
-- On ASSIGNS reduce production bs_keyword -> FREEABLE
-- On ASSERT reduce production bs_keyword -> FREEABLE
-- On ARROW reduce production bs_keyword -> FREEABLE
-- On AND reduce production bs_keyword -> FREEABLE
-- On AMP reduce production bs_keyword -> FREEABLE
-- On ALLOCATION reduce production bs_keyword -> FREEABLE
-- On ALLOCATES reduce production bs_keyword -> FREEABLE
-- On ALLOCABLE reduce production bs_keyword -> FREEABLE

State 1005:
## Known stack suffix:
## FORALL
## LR(1) items:
bs_keyword -> FORALL . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> FORALL
-- On WITH reduce production bs_keyword -> FORALL
-- On VOLATILE reduce production bs_keyword -> FORALL
-- On VOID reduce production bs_keyword -> FORALL
-- On VARIANT reduce production bs_keyword -> FORALL
-- On VALID_READ reduce production bs_keyword -> FORALL
-- On VALID_RANGE reduce production bs_keyword -> FORALL
-- On VALID_INDEX reduce production bs_keyword -> FORALL
-- On VALID reduce production bs_keyword -> FORALL
-- On UNSIGNED reduce production bs_keyword -> FORALL
-- On UNION reduce production bs_keyword -> FORALL
-- On UNALLOCATED reduce production bs_keyword -> FORALL
-- On TYPEOF reduce production bs_keyword -> FORALL
-- On TYPENAME reduce production bs_keyword -> FORALL
-- On TYPE reduce production bs_keyword -> FORALL
-- On TRUE reduce production bs_keyword -> FORALL
-- On TILDE reduce production bs_keyword -> FORALL
-- On TERMINATES reduce production bs_keyword -> FORALL
-- On STRUCT reduce production bs_keyword -> FORALL
-- On STRING_LITERAL reduce production bs_keyword -> FORALL
-- On STATIC reduce production bs_keyword -> FORALL
-- On STAR reduce production bs_keyword -> FORALL
-- On SLICE reduce production bs_keyword -> FORALL
-- On SLASH reduce production bs_keyword -> FORALL
-- On SIZEOF reduce production bs_keyword -> FORALL
-- On SIGNED reduce production bs_keyword -> FORALL
-- On SHORT reduce production bs_keyword -> FORALL
-- On SEPARATED reduce production bs_keyword -> FORALL
-- On SEMICOLON reduce production bs_keyword -> FORALL
-- On RSQUARE reduce production bs_keyword -> FORALL
-- On RPAR reduce production bs_keyword -> FORALL
-- On RETURNS reduce production bs_keyword -> FORALL
-- On RESULT reduce production bs_keyword -> FORALL
-- On REQUIRES reduce production bs_keyword -> FORALL
-- On REGISTER reduce production bs_keyword -> FORALL
-- On REAL reduce production bs_keyword -> FORALL
-- On READS reduce production bs_keyword -> FORALL
-- On RBRACE reduce production bs_keyword -> FORALL
-- On QUESTION reduce production bs_keyword -> FORALL
-- On PREDICATE reduce production bs_keyword -> FORALL
-- On PRAGMA reduce production bs_keyword -> FORALL
-- On PLUS reduce production bs_keyword -> FORALL
-- On PIPE reduce production bs_keyword -> FORALL
-- On PERCENT reduce production bs_keyword -> FORALL
-- On OR reduce production bs_keyword -> FORALL
-- On OLD reduce production bs_keyword -> FORALL
-- On OFFSET reduce production bs_keyword -> FORALL
-- On NULL reduce production bs_keyword -> FORALL
-- On NOTHING reduce production bs_keyword -> FORALL
-- On NOT reduce production bs_keyword -> FORALL
-- On NE reduce production bs_keyword -> FORALL
-- On MODULE reduce production bs_keyword -> FORALL
-- On MODEL reduce production bs_keyword -> FORALL
-- On MINUS reduce production bs_keyword -> FORALL
-- On LTLT reduce production bs_keyword -> FORALL
-- On LTCOLON reduce production bs_keyword -> FORALL
-- On LT reduce production bs_keyword -> FORALL
-- On LSQUARE reduce production bs_keyword -> FORALL
-- On LPAR reduce production bs_keyword -> FORALL
-- On LOOP reduce production bs_keyword -> FORALL
-- On LONG reduce production bs_keyword -> FORALL
-- On LOGIC reduce production bs_keyword -> FORALL
-- On LET reduce production bs_keyword -> FORALL
-- On LEMMA reduce production bs_keyword -> FORALL
-- On LE reduce production bs_keyword -> FORALL
-- On LBRACE reduce production bs_keyword -> FORALL
-- On LAMBDA reduce production bs_keyword -> FORALL
-- On LABEL reduce production bs_keyword -> FORALL
-- On INVARIANT reduce production bs_keyword -> FORALL
-- On INTER reduce production bs_keyword -> FORALL
-- On INTEGER reduce production bs_keyword -> FORALL
-- On INT reduce production bs_keyword -> FORALL
-- On INITIALIZED reduce production bs_keyword -> FORALL
-- On INDUCTIVE reduce production bs_keyword -> FORALL
-- On INCLUDE reduce production bs_keyword -> FORALL
-- On IMPLIES reduce production bs_keyword -> FORALL
-- On IMPACT reduce production bs_keyword -> FORALL
-- On IFF reduce production bs_keyword -> FORALL
-- On IF reduce production bs_keyword -> FORALL
-- On IDENTIFIER reduce production bs_keyword -> FORALL
-- On HATHAT reduce production bs_keyword -> FORALL
-- On HAT reduce production bs_keyword -> FORALL
-- On GTGT reduce production bs_keyword -> FORALL
-- On GT reduce production bs_keyword -> FORALL
-- On GLOBAL reduce production bs_keyword -> FORALL
-- On GHOST reduce production bs_keyword -> FORALL
-- On GE reduce production bs_keyword -> FORALL
-- On FUNCTION reduce production bs_keyword -> FORALL
-- On FROM reduce production bs_keyword -> FORALL
-- On FRESH reduce production bs_keyword -> FORALL
-- On FREES reduce production bs_keyword -> FORALL
-- On FREEABLE reduce production bs_keyword -> FORALL
-- On FORALL reduce production bs_keyword -> FORALL
-- On FOR reduce production bs_keyword -> FORALL
-- On FLOAT reduce production bs_keyword -> FORALL
-- On FALSE reduce production bs_keyword -> FORALL
-- On EXT_LET reduce production bs_keyword -> FORALL
-- On EXT_AT reduce production bs_keyword -> FORALL
-- On EXITS reduce production bs_keyword -> FORALL
-- On EXISTS reduce production bs_keyword -> FORALL
-- On EQUAL reduce production bs_keyword -> FORALL
-- On EQ reduce production bs_keyword -> FORALL
-- On EOF reduce production bs_keyword -> FORALL
-- On ENUM reduce production bs_keyword -> FORALL
-- On ENSURES reduce production bs_keyword -> FORALL
-- On EMPTY reduce production bs_keyword -> FORALL
-- On ELSE reduce production bs_keyword -> FORALL
-- On DYNAMIC reduce production bs_keyword -> FORALL
-- On DOUBLE reduce production bs_keyword -> FORALL
-- On DOTDOTDOT reduce production bs_keyword -> FORALL
-- On DOTDOT reduce production bs_keyword -> FORALL
-- On DOT reduce production bs_keyword -> FORALL
-- On DOLLAR reduce production bs_keyword -> FORALL
-- On DISJOINT reduce production bs_keyword -> FORALL
-- On DECREASES reduce production bs_keyword -> FORALL
-- On DANGLING reduce production bs_keyword -> FORALL
-- On CUSTOM reduce production bs_keyword -> FORALL
-- On CONTRACT reduce production bs_keyword -> FORALL
-- On CONTINUES reduce production bs_keyword -> FORALL
-- On CONSTANT10 reduce production bs_keyword -> FORALL
-- On CONSTANT reduce production bs_keyword -> FORALL
-- On CONST reduce production bs_keyword -> FORALL
-- On COMPLETE reduce production bs_keyword -> FORALL
-- On COMMA reduce production bs_keyword -> FORALL
-- On COLONGT reduce production bs_keyword -> FORALL
-- On COLONCOLON reduce production bs_keyword -> FORALL
-- On COLON2 reduce production bs_keyword -> FORALL
-- On COLON reduce production bs_keyword -> FORALL
-- On CHAR reduce production bs_keyword -> FORALL
-- On CASE reduce production bs_keyword -> FORALL
-- On BSUNION reduce production bs_keyword -> FORALL
-- On BSTYPE reduce production bs_keyword -> FORALL
-- On BREAKS reduce production bs_keyword -> FORALL
-- On BOOLEAN reduce production bs_keyword -> FORALL
-- On BOOL reduce production bs_keyword -> FORALL
-- On BLOCK_LENGTH reduce production bs_keyword -> FORALL
-- On BIMPLIES reduce production bs_keyword -> FORALL
-- On BIFF reduce production bs_keyword -> FORALL
-- On BEHAVIORS reduce production bs_keyword -> FORALL
-- On BEHAVIOR reduce production bs_keyword -> FORALL
-- On BASE_ADDR reduce production bs_keyword -> FORALL
-- On AXIOMATIC reduce production bs_keyword -> FORALL
-- On AXIOM reduce production bs_keyword -> FORALL
-- On AUTOMATIC reduce production bs_keyword -> FORALL
-- On AT reduce production bs_keyword -> FORALL
-- On ASSUMES reduce production bs_keyword -> FORALL
-- On ASSIGNS reduce production bs_keyword -> FORALL
-- On ASSERT reduce production bs_keyword -> FORALL
-- On ARROW reduce production bs_keyword -> FORALL
-- On AND reduce production bs_keyword -> FORALL
-- On AMP reduce production bs_keyword -> FORALL
-- On ALLOCATION reduce production bs_keyword -> FORALL
-- On ALLOCATES reduce production bs_keyword -> FORALL
-- On ALLOCABLE reduce production bs_keyword -> FORALL

State 1006:
## Known stack suffix:
## FALSE
## LR(1) items:
bs_keyword -> FALSE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> FALSE
-- On WITH reduce production bs_keyword -> FALSE
-- On VOLATILE reduce production bs_keyword -> FALSE
-- On VOID reduce production bs_keyword -> FALSE
-- On VARIANT reduce production bs_keyword -> FALSE
-- On VALID_READ reduce production bs_keyword -> FALSE
-- On VALID_RANGE reduce production bs_keyword -> FALSE
-- On VALID_INDEX reduce production bs_keyword -> FALSE
-- On VALID reduce production bs_keyword -> FALSE
-- On UNSIGNED reduce production bs_keyword -> FALSE
-- On UNION reduce production bs_keyword -> FALSE
-- On UNALLOCATED reduce production bs_keyword -> FALSE
-- On TYPEOF reduce production bs_keyword -> FALSE
-- On TYPENAME reduce production bs_keyword -> FALSE
-- On TYPE reduce production bs_keyword -> FALSE
-- On TRUE reduce production bs_keyword -> FALSE
-- On TILDE reduce production bs_keyword -> FALSE
-- On TERMINATES reduce production bs_keyword -> FALSE
-- On STRUCT reduce production bs_keyword -> FALSE
-- On STRING_LITERAL reduce production bs_keyword -> FALSE
-- On STATIC reduce production bs_keyword -> FALSE
-- On STAR reduce production bs_keyword -> FALSE
-- On SLICE reduce production bs_keyword -> FALSE
-- On SLASH reduce production bs_keyword -> FALSE
-- On SIZEOF reduce production bs_keyword -> FALSE
-- On SIGNED reduce production bs_keyword -> FALSE
-- On SHORT reduce production bs_keyword -> FALSE
-- On SEPARATED reduce production bs_keyword -> FALSE
-- On SEMICOLON reduce production bs_keyword -> FALSE
-- On RSQUARE reduce production bs_keyword -> FALSE
-- On RPAR reduce production bs_keyword -> FALSE
-- On RETURNS reduce production bs_keyword -> FALSE
-- On RESULT reduce production bs_keyword -> FALSE
-- On REQUIRES reduce production bs_keyword -> FALSE
-- On REGISTER reduce production bs_keyword -> FALSE
-- On REAL reduce production bs_keyword -> FALSE
-- On READS reduce production bs_keyword -> FALSE
-- On RBRACE reduce production bs_keyword -> FALSE
-- On QUESTION reduce production bs_keyword -> FALSE
-- On PREDICATE reduce production bs_keyword -> FALSE
-- On PRAGMA reduce production bs_keyword -> FALSE
-- On PLUS reduce production bs_keyword -> FALSE
-- On PIPE reduce production bs_keyword -> FALSE
-- On PERCENT reduce production bs_keyword -> FALSE
-- On OR reduce production bs_keyword -> FALSE
-- On OLD reduce production bs_keyword -> FALSE
-- On OFFSET reduce production bs_keyword -> FALSE
-- On NULL reduce production bs_keyword -> FALSE
-- On NOTHING reduce production bs_keyword -> FALSE
-- On NOT reduce production bs_keyword -> FALSE
-- On NE reduce production bs_keyword -> FALSE
-- On MODULE reduce production bs_keyword -> FALSE
-- On MODEL reduce production bs_keyword -> FALSE
-- On MINUS reduce production bs_keyword -> FALSE
-- On LTLT reduce production bs_keyword -> FALSE
-- On LTCOLON reduce production bs_keyword -> FALSE
-- On LT reduce production bs_keyword -> FALSE
-- On LSQUARE reduce production bs_keyword -> FALSE
-- On LPAR reduce production bs_keyword -> FALSE
-- On LOOP reduce production bs_keyword -> FALSE
-- On LONG reduce production bs_keyword -> FALSE
-- On LOGIC reduce production bs_keyword -> FALSE
-- On LET reduce production bs_keyword -> FALSE
-- On LEMMA reduce production bs_keyword -> FALSE
-- On LE reduce production bs_keyword -> FALSE
-- On LBRACE reduce production bs_keyword -> FALSE
-- On LAMBDA reduce production bs_keyword -> FALSE
-- On LABEL reduce production bs_keyword -> FALSE
-- On INVARIANT reduce production bs_keyword -> FALSE
-- On INTER reduce production bs_keyword -> FALSE
-- On INTEGER reduce production bs_keyword -> FALSE
-- On INT reduce production bs_keyword -> FALSE
-- On INITIALIZED reduce production bs_keyword -> FALSE
-- On INDUCTIVE reduce production bs_keyword -> FALSE
-- On INCLUDE reduce production bs_keyword -> FALSE
-- On IMPLIES reduce production bs_keyword -> FALSE
-- On IMPACT reduce production bs_keyword -> FALSE
-- On IFF reduce production bs_keyword -> FALSE
-- On IF reduce production bs_keyword -> FALSE
-- On IDENTIFIER reduce production bs_keyword -> FALSE
-- On HATHAT reduce production bs_keyword -> FALSE
-- On HAT reduce production bs_keyword -> FALSE
-- On GTGT reduce production bs_keyword -> FALSE
-- On GT reduce production bs_keyword -> FALSE
-- On GLOBAL reduce production bs_keyword -> FALSE
-- On GHOST reduce production bs_keyword -> FALSE
-- On GE reduce production bs_keyword -> FALSE
-- On FUNCTION reduce production bs_keyword -> FALSE
-- On FROM reduce production bs_keyword -> FALSE
-- On FRESH reduce production bs_keyword -> FALSE
-- On FREES reduce production bs_keyword -> FALSE
-- On FREEABLE reduce production bs_keyword -> FALSE
-- On FORALL reduce production bs_keyword -> FALSE
-- On FOR reduce production bs_keyword -> FALSE
-- On FLOAT reduce production bs_keyword -> FALSE
-- On FALSE reduce production bs_keyword -> FALSE
-- On EXT_LET reduce production bs_keyword -> FALSE
-- On EXT_AT reduce production bs_keyword -> FALSE
-- On EXITS reduce production bs_keyword -> FALSE
-- On EXISTS reduce production bs_keyword -> FALSE
-- On EQUAL reduce production bs_keyword -> FALSE
-- On EQ reduce production bs_keyword -> FALSE
-- On EOF reduce production bs_keyword -> FALSE
-- On ENUM reduce production bs_keyword -> FALSE
-- On ENSURES reduce production bs_keyword -> FALSE
-- On EMPTY reduce production bs_keyword -> FALSE
-- On ELSE reduce production bs_keyword -> FALSE
-- On DYNAMIC reduce production bs_keyword -> FALSE
-- On DOUBLE reduce production bs_keyword -> FALSE
-- On DOTDOTDOT reduce production bs_keyword -> FALSE
-- On DOTDOT reduce production bs_keyword -> FALSE
-- On DOT reduce production bs_keyword -> FALSE
-- On DOLLAR reduce production bs_keyword -> FALSE
-- On DISJOINT reduce production bs_keyword -> FALSE
-- On DECREASES reduce production bs_keyword -> FALSE
-- On DANGLING reduce production bs_keyword -> FALSE
-- On CUSTOM reduce production bs_keyword -> FALSE
-- On CONTRACT reduce production bs_keyword -> FALSE
-- On CONTINUES reduce production bs_keyword -> FALSE
-- On CONSTANT10 reduce production bs_keyword -> FALSE
-- On CONSTANT reduce production bs_keyword -> FALSE
-- On CONST reduce production bs_keyword -> FALSE
-- On COMPLETE reduce production bs_keyword -> FALSE
-- On COMMA reduce production bs_keyword -> FALSE
-- On COLONGT reduce production bs_keyword -> FALSE
-- On COLONCOLON reduce production bs_keyword -> FALSE
-- On COLON2 reduce production bs_keyword -> FALSE
-- On COLON reduce production bs_keyword -> FALSE
-- On CHAR reduce production bs_keyword -> FALSE
-- On CASE reduce production bs_keyword -> FALSE
-- On BSUNION reduce production bs_keyword -> FALSE
-- On BSTYPE reduce production bs_keyword -> FALSE
-- On BREAKS reduce production bs_keyword -> FALSE
-- On BOOLEAN reduce production bs_keyword -> FALSE
-- On BOOL reduce production bs_keyword -> FALSE
-- On BLOCK_LENGTH reduce production bs_keyword -> FALSE
-- On BIMPLIES reduce production bs_keyword -> FALSE
-- On BIFF reduce production bs_keyword -> FALSE
-- On BEHAVIORS reduce production bs_keyword -> FALSE
-- On BEHAVIOR reduce production bs_keyword -> FALSE
-- On BASE_ADDR reduce production bs_keyword -> FALSE
-- On AXIOMATIC reduce production bs_keyword -> FALSE
-- On AXIOM reduce production bs_keyword -> FALSE
-- On AUTOMATIC reduce production bs_keyword -> FALSE
-- On AT reduce production bs_keyword -> FALSE
-- On ASSUMES reduce production bs_keyword -> FALSE
-- On ASSIGNS reduce production bs_keyword -> FALSE
-- On ASSERT reduce production bs_keyword -> FALSE
-- On ARROW reduce production bs_keyword -> FALSE
-- On AND reduce production bs_keyword -> FALSE
-- On AMP reduce production bs_keyword -> FALSE
-- On ALLOCATION reduce production bs_keyword -> FALSE
-- On ALLOCATES reduce production bs_keyword -> FALSE
-- On ALLOCABLE reduce production bs_keyword -> FALSE

State 1007:
## Known stack suffix:
## EXISTS
## LR(1) items:
wildcard -> EXISTS . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> EXISTS
-- On WITH reduce production wildcard -> EXISTS
-- On VOLATILE reduce production wildcard -> EXISTS
-- On VOID reduce production wildcard -> EXISTS
-- On VARIANT reduce production wildcard -> EXISTS
-- On VALID_READ reduce production wildcard -> EXISTS
-- On VALID_RANGE reduce production wildcard -> EXISTS
-- On VALID_INDEX reduce production wildcard -> EXISTS
-- On VALID reduce production wildcard -> EXISTS
-- On UNSIGNED reduce production wildcard -> EXISTS
-- On UNION reduce production wildcard -> EXISTS
-- On UNALLOCATED reduce production wildcard -> EXISTS
-- On TYPEOF reduce production wildcard -> EXISTS
-- On TYPENAME reduce production wildcard -> EXISTS
-- On TYPE reduce production wildcard -> EXISTS
-- On TRUE reduce production wildcard -> EXISTS
-- On TILDE reduce production wildcard -> EXISTS
-- On TERMINATES reduce production wildcard -> EXISTS
-- On STRUCT reduce production wildcard -> EXISTS
-- On STRING_LITERAL reduce production wildcard -> EXISTS
-- On STATIC reduce production wildcard -> EXISTS
-- On STAR reduce production wildcard -> EXISTS
-- On SLICE reduce production wildcard -> EXISTS
-- On SLASH reduce production wildcard -> EXISTS
-- On SIZEOF reduce production wildcard -> EXISTS
-- On SIGNED reduce production wildcard -> EXISTS
-- On SHORT reduce production wildcard -> EXISTS
-- On SEPARATED reduce production wildcard -> EXISTS
-- On SEMICOLON reduce production wildcard -> EXISTS
-- On RSQUARE reduce production wildcard -> EXISTS
-- On RPAR reduce production wildcard -> EXISTS
-- On RETURNS reduce production wildcard -> EXISTS
-- On RESULT reduce production wildcard -> EXISTS
-- On REQUIRES reduce production wildcard -> EXISTS
-- On REGISTER reduce production wildcard -> EXISTS
-- On REAL reduce production wildcard -> EXISTS
-- On READS reduce production wildcard -> EXISTS
-- On RBRACE reduce production wildcard -> EXISTS
-- On QUESTION reduce production wildcard -> EXISTS
-- On PREDICATE reduce production wildcard -> EXISTS
-- On PRAGMA reduce production wildcard -> EXISTS
-- On PLUS reduce production wildcard -> EXISTS
-- On PIPE reduce production wildcard -> EXISTS
-- On PERCENT reduce production wildcard -> EXISTS
-- On OR reduce production wildcard -> EXISTS
-- On OLD reduce production wildcard -> EXISTS
-- On OFFSET reduce production wildcard -> EXISTS
-- On NULL reduce production wildcard -> EXISTS
-- On NOTHING reduce production wildcard -> EXISTS
-- On NOT reduce production wildcard -> EXISTS
-- On NE reduce production wildcard -> EXISTS
-- On MODULE reduce production wildcard -> EXISTS
-- On MODEL reduce production wildcard -> EXISTS
-- On MINUS reduce production wildcard -> EXISTS
-- On LTLT reduce production wildcard -> EXISTS
-- On LTCOLON reduce production wildcard -> EXISTS
-- On LT reduce production wildcard -> EXISTS
-- On LSQUARE reduce production wildcard -> EXISTS
-- On LPAR reduce production wildcard -> EXISTS
-- On LOOP reduce production wildcard -> EXISTS
-- On LONG reduce production wildcard -> EXISTS
-- On LOGIC reduce production wildcard -> EXISTS
-- On LET reduce production wildcard -> EXISTS
-- On LEMMA reduce production wildcard -> EXISTS
-- On LE reduce production wildcard -> EXISTS
-- On LBRACE reduce production wildcard -> EXISTS
-- On LAMBDA reduce production wildcard -> EXISTS
-- On LABEL reduce production wildcard -> EXISTS
-- On INVARIANT reduce production wildcard -> EXISTS
-- On INTER reduce production wildcard -> EXISTS
-- On INTEGER reduce production wildcard -> EXISTS
-- On INT reduce production wildcard -> EXISTS
-- On INITIALIZED reduce production wildcard -> EXISTS
-- On INDUCTIVE reduce production wildcard -> EXISTS
-- On INCLUDE reduce production wildcard -> EXISTS
-- On IMPLIES reduce production wildcard -> EXISTS
-- On IMPACT reduce production wildcard -> EXISTS
-- On IFF reduce production wildcard -> EXISTS
-- On IF reduce production wildcard -> EXISTS
-- On IDENTIFIER reduce production wildcard -> EXISTS
-- On HATHAT reduce production wildcard -> EXISTS
-- On HAT reduce production wildcard -> EXISTS
-- On GTGT reduce production wildcard -> EXISTS
-- On GT reduce production wildcard -> EXISTS
-- On GLOBAL reduce production wildcard -> EXISTS
-- On GHOST reduce production wildcard -> EXISTS
-- On GE reduce production wildcard -> EXISTS
-- On FUNCTION reduce production wildcard -> EXISTS
-- On FROM reduce production wildcard -> EXISTS
-- On FRESH reduce production wildcard -> EXISTS
-- On FREES reduce production wildcard -> EXISTS
-- On FREEABLE reduce production wildcard -> EXISTS
-- On FORALL reduce production wildcard -> EXISTS
-- On FOR reduce production wildcard -> EXISTS
-- On FLOAT reduce production wildcard -> EXISTS
-- On FALSE reduce production wildcard -> EXISTS
-- On EXT_LET reduce production wildcard -> EXISTS
-- On EXT_AT reduce production wildcard -> EXISTS
-- On EXITS reduce production wildcard -> EXISTS
-- On EXISTS reduce production wildcard -> EXISTS
-- On EQUAL reduce production wildcard -> EXISTS
-- On EQ reduce production wildcard -> EXISTS
-- On EOF reduce production wildcard -> EXISTS
-- On ENUM reduce production wildcard -> EXISTS
-- On ENSURES reduce production wildcard -> EXISTS
-- On EMPTY reduce production wildcard -> EXISTS
-- On ELSE reduce production wildcard -> EXISTS
-- On DYNAMIC reduce production wildcard -> EXISTS
-- On DOUBLE reduce production wildcard -> EXISTS
-- On DOTDOTDOT reduce production wildcard -> EXISTS
-- On DOTDOT reduce production wildcard -> EXISTS
-- On DOT reduce production wildcard -> EXISTS
-- On DOLLAR reduce production wildcard -> EXISTS
-- On DISJOINT reduce production wildcard -> EXISTS
-- On DECREASES reduce production wildcard -> EXISTS
-- On DANGLING reduce production wildcard -> EXISTS
-- On CUSTOM reduce production wildcard -> EXISTS
-- On CONTRACT reduce production wildcard -> EXISTS
-- On CONTINUES reduce production wildcard -> EXISTS
-- On CONSTANT10 reduce production wildcard -> EXISTS
-- On CONSTANT reduce production wildcard -> EXISTS
-- On CONST reduce production wildcard -> EXISTS
-- On COMPLETE reduce production wildcard -> EXISTS
-- On COMMA reduce production wildcard -> EXISTS
-- On COLONGT reduce production wildcard -> EXISTS
-- On COLONCOLON reduce production wildcard -> EXISTS
-- On COLON2 reduce production wildcard -> EXISTS
-- On COLON reduce production wildcard -> EXISTS
-- On CHAR reduce production wildcard -> EXISTS
-- On CASE reduce production wildcard -> EXISTS
-- On BSUNION reduce production wildcard -> EXISTS
-- On BSTYPE reduce production wildcard -> EXISTS
-- On BREAKS reduce production wildcard -> EXISTS
-- On BOOLEAN reduce production wildcard -> EXISTS
-- On BOOL reduce production wildcard -> EXISTS
-- On BLOCK_LENGTH reduce production wildcard -> EXISTS
-- On BIMPLIES reduce production wildcard -> EXISTS
-- On BIFF reduce production wildcard -> EXISTS
-- On BEHAVIORS reduce production wildcard -> EXISTS
-- On BEHAVIOR reduce production wildcard -> EXISTS
-- On BASE_ADDR reduce production wildcard -> EXISTS
-- On AXIOMATIC reduce production wildcard -> EXISTS
-- On AXIOM reduce production wildcard -> EXISTS
-- On AUTOMATIC reduce production wildcard -> EXISTS
-- On AT reduce production wildcard -> EXISTS
-- On ASSUMES reduce production wildcard -> EXISTS
-- On ASSIGNS reduce production wildcard -> EXISTS
-- On ASSERT reduce production wildcard -> EXISTS
-- On ARROW reduce production wildcard -> EXISTS
-- On AND reduce production wildcard -> EXISTS
-- On AMP reduce production wildcard -> EXISTS
-- On ALLOCATION reduce production wildcard -> EXISTS
-- On ALLOCATES reduce production wildcard -> EXISTS
-- On ALLOCABLE reduce production wildcard -> EXISTS

State 1008:
## Known stack suffix:
## EQUAL
## LR(1) items:
wildcard -> EQUAL . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> EQUAL
-- On WITH reduce production wildcard -> EQUAL
-- On VOLATILE reduce production wildcard -> EQUAL
-- On VOID reduce production wildcard -> EQUAL
-- On VARIANT reduce production wildcard -> EQUAL
-- On VALID_READ reduce production wildcard -> EQUAL
-- On VALID_RANGE reduce production wildcard -> EQUAL
-- On VALID_INDEX reduce production wildcard -> EQUAL
-- On VALID reduce production wildcard -> EQUAL
-- On UNSIGNED reduce production wildcard -> EQUAL
-- On UNION reduce production wildcard -> EQUAL
-- On UNALLOCATED reduce production wildcard -> EQUAL
-- On TYPEOF reduce production wildcard -> EQUAL
-- On TYPENAME reduce production wildcard -> EQUAL
-- On TYPE reduce production wildcard -> EQUAL
-- On TRUE reduce production wildcard -> EQUAL
-- On TILDE reduce production wildcard -> EQUAL
-- On TERMINATES reduce production wildcard -> EQUAL
-- On STRUCT reduce production wildcard -> EQUAL
-- On STRING_LITERAL reduce production wildcard -> EQUAL
-- On STATIC reduce production wildcard -> EQUAL
-- On STAR reduce production wildcard -> EQUAL
-- On SLICE reduce production wildcard -> EQUAL
-- On SLASH reduce production wildcard -> EQUAL
-- On SIZEOF reduce production wildcard -> EQUAL
-- On SIGNED reduce production wildcard -> EQUAL
-- On SHORT reduce production wildcard -> EQUAL
-- On SEPARATED reduce production wildcard -> EQUAL
-- On SEMICOLON reduce production wildcard -> EQUAL
-- On RSQUARE reduce production wildcard -> EQUAL
-- On RPAR reduce production wildcard -> EQUAL
-- On RETURNS reduce production wildcard -> EQUAL
-- On RESULT reduce production wildcard -> EQUAL
-- On REQUIRES reduce production wildcard -> EQUAL
-- On REGISTER reduce production wildcard -> EQUAL
-- On REAL reduce production wildcard -> EQUAL
-- On READS reduce production wildcard -> EQUAL
-- On RBRACE reduce production wildcard -> EQUAL
-- On QUESTION reduce production wildcard -> EQUAL
-- On PREDICATE reduce production wildcard -> EQUAL
-- On PRAGMA reduce production wildcard -> EQUAL
-- On PLUS reduce production wildcard -> EQUAL
-- On PIPE reduce production wildcard -> EQUAL
-- On PERCENT reduce production wildcard -> EQUAL
-- On OR reduce production wildcard -> EQUAL
-- On OLD reduce production wildcard -> EQUAL
-- On OFFSET reduce production wildcard -> EQUAL
-- On NULL reduce production wildcard -> EQUAL
-- On NOTHING reduce production wildcard -> EQUAL
-- On NOT reduce production wildcard -> EQUAL
-- On NE reduce production wildcard -> EQUAL
-- On MODULE reduce production wildcard -> EQUAL
-- On MODEL reduce production wildcard -> EQUAL
-- On MINUS reduce production wildcard -> EQUAL
-- On LTLT reduce production wildcard -> EQUAL
-- On LTCOLON reduce production wildcard -> EQUAL
-- On LT reduce production wildcard -> EQUAL
-- On LSQUARE reduce production wildcard -> EQUAL
-- On LPAR reduce production wildcard -> EQUAL
-- On LOOP reduce production wildcard -> EQUAL
-- On LONG reduce production wildcard -> EQUAL
-- On LOGIC reduce production wildcard -> EQUAL
-- On LET reduce production wildcard -> EQUAL
-- On LEMMA reduce production wildcard -> EQUAL
-- On LE reduce production wildcard -> EQUAL
-- On LBRACE reduce production wildcard -> EQUAL
-- On LAMBDA reduce production wildcard -> EQUAL
-- On LABEL reduce production wildcard -> EQUAL
-- On INVARIANT reduce production wildcard -> EQUAL
-- On INTER reduce production wildcard -> EQUAL
-- On INTEGER reduce production wildcard -> EQUAL
-- On INT reduce production wildcard -> EQUAL
-- On INITIALIZED reduce production wildcard -> EQUAL
-- On INDUCTIVE reduce production wildcard -> EQUAL
-- On INCLUDE reduce production wildcard -> EQUAL
-- On IMPLIES reduce production wildcard -> EQUAL
-- On IMPACT reduce production wildcard -> EQUAL
-- On IFF reduce production wildcard -> EQUAL
-- On IF reduce production wildcard -> EQUAL
-- On IDENTIFIER reduce production wildcard -> EQUAL
-- On HATHAT reduce production wildcard -> EQUAL
-- On HAT reduce production wildcard -> EQUAL
-- On GTGT reduce production wildcard -> EQUAL
-- On GT reduce production wildcard -> EQUAL
-- On GLOBAL reduce production wildcard -> EQUAL
-- On GHOST reduce production wildcard -> EQUAL
-- On GE reduce production wildcard -> EQUAL
-- On FUNCTION reduce production wildcard -> EQUAL
-- On FROM reduce production wildcard -> EQUAL
-- On FRESH reduce production wildcard -> EQUAL
-- On FREES reduce production wildcard -> EQUAL
-- On FREEABLE reduce production wildcard -> EQUAL
-- On FORALL reduce production wildcard -> EQUAL
-- On FOR reduce production wildcard -> EQUAL
-- On FLOAT reduce production wildcard -> EQUAL
-- On FALSE reduce production wildcard -> EQUAL
-- On EXT_LET reduce production wildcard -> EQUAL
-- On EXT_AT reduce production wildcard -> EQUAL
-- On EXITS reduce production wildcard -> EQUAL
-- On EXISTS reduce production wildcard -> EQUAL
-- On EQUAL reduce production wildcard -> EQUAL
-- On EQ reduce production wildcard -> EQUAL
-- On EOF reduce production wildcard -> EQUAL
-- On ENUM reduce production wildcard -> EQUAL
-- On ENSURES reduce production wildcard -> EQUAL
-- On EMPTY reduce production wildcard -> EQUAL
-- On ELSE reduce production wildcard -> EQUAL
-- On DYNAMIC reduce production wildcard -> EQUAL
-- On DOUBLE reduce production wildcard -> EQUAL
-- On DOTDOTDOT reduce production wildcard -> EQUAL
-- On DOTDOT reduce production wildcard -> EQUAL
-- On DOT reduce production wildcard -> EQUAL
-- On DOLLAR reduce production wildcard -> EQUAL
-- On DISJOINT reduce production wildcard -> EQUAL
-- On DECREASES reduce production wildcard -> EQUAL
-- On DANGLING reduce production wildcard -> EQUAL
-- On CUSTOM reduce production wildcard -> EQUAL
-- On CONTRACT reduce production wildcard -> EQUAL
-- On CONTINUES reduce production wildcard -> EQUAL
-- On CONSTANT10 reduce production wildcard -> EQUAL
-- On CONSTANT reduce production wildcard -> EQUAL
-- On CONST reduce production wildcard -> EQUAL
-- On COMPLETE reduce production wildcard -> EQUAL
-- On COMMA reduce production wildcard -> EQUAL
-- On COLONGT reduce production wildcard -> EQUAL
-- On COLONCOLON reduce production wildcard -> EQUAL
-- On COLON2 reduce production wildcard -> EQUAL
-- On COLON reduce production wildcard -> EQUAL
-- On CHAR reduce production wildcard -> EQUAL
-- On CASE reduce production wildcard -> EQUAL
-- On BSUNION reduce production wildcard -> EQUAL
-- On BSTYPE reduce production wildcard -> EQUAL
-- On BREAKS reduce production wildcard -> EQUAL
-- On BOOLEAN reduce production wildcard -> EQUAL
-- On BOOL reduce production wildcard -> EQUAL
-- On BLOCK_LENGTH reduce production wildcard -> EQUAL
-- On BIMPLIES reduce production wildcard -> EQUAL
-- On BIFF reduce production wildcard -> EQUAL
-- On BEHAVIORS reduce production wildcard -> EQUAL
-- On BEHAVIOR reduce production wildcard -> EQUAL
-- On BASE_ADDR reduce production wildcard -> EQUAL
-- On AXIOMATIC reduce production wildcard -> EQUAL
-- On AXIOM reduce production wildcard -> EQUAL
-- On AUTOMATIC reduce production wildcard -> EQUAL
-- On AT reduce production wildcard -> EQUAL
-- On ASSUMES reduce production wildcard -> EQUAL
-- On ASSIGNS reduce production wildcard -> EQUAL
-- On ASSERT reduce production wildcard -> EQUAL
-- On ARROW reduce production wildcard -> EQUAL
-- On AND reduce production wildcard -> EQUAL
-- On AMP reduce production wildcard -> EQUAL
-- On ALLOCATION reduce production wildcard -> EQUAL
-- On ALLOCATES reduce production wildcard -> EQUAL
-- On ALLOCABLE reduce production wildcard -> EQUAL

State 1009:
## Known stack suffix:
## EQ
## LR(1) items:
wildcard -> EQ . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> EQ
-- On WITH reduce production wildcard -> EQ
-- On VOLATILE reduce production wildcard -> EQ
-- On VOID reduce production wildcard -> EQ
-- On VARIANT reduce production wildcard -> EQ
-- On VALID_READ reduce production wildcard -> EQ
-- On VALID_RANGE reduce production wildcard -> EQ
-- On VALID_INDEX reduce production wildcard -> EQ
-- On VALID reduce production wildcard -> EQ
-- On UNSIGNED reduce production wildcard -> EQ
-- On UNION reduce production wildcard -> EQ
-- On UNALLOCATED reduce production wildcard -> EQ
-- On TYPEOF reduce production wildcard -> EQ
-- On TYPENAME reduce production wildcard -> EQ
-- On TYPE reduce production wildcard -> EQ
-- On TRUE reduce production wildcard -> EQ
-- On TILDE reduce production wildcard -> EQ
-- On TERMINATES reduce production wildcard -> EQ
-- On STRUCT reduce production wildcard -> EQ
-- On STRING_LITERAL reduce production wildcard -> EQ
-- On STATIC reduce production wildcard -> EQ
-- On STAR reduce production wildcard -> EQ
-- On SLICE reduce production wildcard -> EQ
-- On SLASH reduce production wildcard -> EQ
-- On SIZEOF reduce production wildcard -> EQ
-- On SIGNED reduce production wildcard -> EQ
-- On SHORT reduce production wildcard -> EQ
-- On SEPARATED reduce production wildcard -> EQ
-- On SEMICOLON reduce production wildcard -> EQ
-- On RSQUARE reduce production wildcard -> EQ
-- On RPAR reduce production wildcard -> EQ
-- On RETURNS reduce production wildcard -> EQ
-- On RESULT reduce production wildcard -> EQ
-- On REQUIRES reduce production wildcard -> EQ
-- On REGISTER reduce production wildcard -> EQ
-- On REAL reduce production wildcard -> EQ
-- On READS reduce production wildcard -> EQ
-- On RBRACE reduce production wildcard -> EQ
-- On QUESTION reduce production wildcard -> EQ
-- On PREDICATE reduce production wildcard -> EQ
-- On PRAGMA reduce production wildcard -> EQ
-- On PLUS reduce production wildcard -> EQ
-- On PIPE reduce production wildcard -> EQ
-- On PERCENT reduce production wildcard -> EQ
-- On OR reduce production wildcard -> EQ
-- On OLD reduce production wildcard -> EQ
-- On OFFSET reduce production wildcard -> EQ
-- On NULL reduce production wildcard -> EQ
-- On NOTHING reduce production wildcard -> EQ
-- On NOT reduce production wildcard -> EQ
-- On NE reduce production wildcard -> EQ
-- On MODULE reduce production wildcard -> EQ
-- On MODEL reduce production wildcard -> EQ
-- On MINUS reduce production wildcard -> EQ
-- On LTLT reduce production wildcard -> EQ
-- On LTCOLON reduce production wildcard -> EQ
-- On LT reduce production wildcard -> EQ
-- On LSQUARE reduce production wildcard -> EQ
-- On LPAR reduce production wildcard -> EQ
-- On LOOP reduce production wildcard -> EQ
-- On LONG reduce production wildcard -> EQ
-- On LOGIC reduce production wildcard -> EQ
-- On LET reduce production wildcard -> EQ
-- On LEMMA reduce production wildcard -> EQ
-- On LE reduce production wildcard -> EQ
-- On LBRACE reduce production wildcard -> EQ
-- On LAMBDA reduce production wildcard -> EQ
-- On LABEL reduce production wildcard -> EQ
-- On INVARIANT reduce production wildcard -> EQ
-- On INTER reduce production wildcard -> EQ
-- On INTEGER reduce production wildcard -> EQ
-- On INT reduce production wildcard -> EQ
-- On INITIALIZED reduce production wildcard -> EQ
-- On INDUCTIVE reduce production wildcard -> EQ
-- On INCLUDE reduce production wildcard -> EQ
-- On IMPLIES reduce production wildcard -> EQ
-- On IMPACT reduce production wildcard -> EQ
-- On IFF reduce production wildcard -> EQ
-- On IF reduce production wildcard -> EQ
-- On IDENTIFIER reduce production wildcard -> EQ
-- On HATHAT reduce production wildcard -> EQ
-- On HAT reduce production wildcard -> EQ
-- On GTGT reduce production wildcard -> EQ
-- On GT reduce production wildcard -> EQ
-- On GLOBAL reduce production wildcard -> EQ
-- On GHOST reduce production wildcard -> EQ
-- On GE reduce production wildcard -> EQ
-- On FUNCTION reduce production wildcard -> EQ
-- On FROM reduce production wildcard -> EQ
-- On FRESH reduce production wildcard -> EQ
-- On FREES reduce production wildcard -> EQ
-- On FREEABLE reduce production wildcard -> EQ
-- On FORALL reduce production wildcard -> EQ
-- On FOR reduce production wildcard -> EQ
-- On FLOAT reduce production wildcard -> EQ
-- On FALSE reduce production wildcard -> EQ
-- On EXT_LET reduce production wildcard -> EQ
-- On EXT_AT reduce production wildcard -> EQ
-- On EXITS reduce production wildcard -> EQ
-- On EXISTS reduce production wildcard -> EQ
-- On EQUAL reduce production wildcard -> EQ
-- On EQ reduce production wildcard -> EQ
-- On EOF reduce production wildcard -> EQ
-- On ENUM reduce production wildcard -> EQ
-- On ENSURES reduce production wildcard -> EQ
-- On EMPTY reduce production wildcard -> EQ
-- On ELSE reduce production wildcard -> EQ
-- On DYNAMIC reduce production wildcard -> EQ
-- On DOUBLE reduce production wildcard -> EQ
-- On DOTDOTDOT reduce production wildcard -> EQ
-- On DOTDOT reduce production wildcard -> EQ
-- On DOT reduce production wildcard -> EQ
-- On DOLLAR reduce production wildcard -> EQ
-- On DISJOINT reduce production wildcard -> EQ
-- On DECREASES reduce production wildcard -> EQ
-- On DANGLING reduce production wildcard -> EQ
-- On CUSTOM reduce production wildcard -> EQ
-- On CONTRACT reduce production wildcard -> EQ
-- On CONTINUES reduce production wildcard -> EQ
-- On CONSTANT10 reduce production wildcard -> EQ
-- On CONSTANT reduce production wildcard -> EQ
-- On CONST reduce production wildcard -> EQ
-- On COMPLETE reduce production wildcard -> EQ
-- On COMMA reduce production wildcard -> EQ
-- On COLONGT reduce production wildcard -> EQ
-- On COLONCOLON reduce production wildcard -> EQ
-- On COLON2 reduce production wildcard -> EQ
-- On COLON reduce production wildcard -> EQ
-- On CHAR reduce production wildcard -> EQ
-- On CASE reduce production wildcard -> EQ
-- On BSUNION reduce production wildcard -> EQ
-- On BSTYPE reduce production wildcard -> EQ
-- On BREAKS reduce production wildcard -> EQ
-- On BOOLEAN reduce production wildcard -> EQ
-- On BOOL reduce production wildcard -> EQ
-- On BLOCK_LENGTH reduce production wildcard -> EQ
-- On BIMPLIES reduce production wildcard -> EQ
-- On BIFF reduce production wildcard -> EQ
-- On BEHAVIORS reduce production wildcard -> EQ
-- On BEHAVIOR reduce production wildcard -> EQ
-- On BASE_ADDR reduce production wildcard -> EQ
-- On AXIOMATIC reduce production wildcard -> EQ
-- On AXIOM reduce production wildcard -> EQ
-- On AUTOMATIC reduce production wildcard -> EQ
-- On AT reduce production wildcard -> EQ
-- On ASSUMES reduce production wildcard -> EQ
-- On ASSIGNS reduce production wildcard -> EQ
-- On ASSERT reduce production wildcard -> EQ
-- On ARROW reduce production wildcard -> EQ
-- On AND reduce production wildcard -> EQ
-- On AMP reduce production wildcard -> EQ
-- On ALLOCATION reduce production wildcard -> EQ
-- On ALLOCATES reduce production wildcard -> EQ
-- On ALLOCABLE reduce production wildcard -> EQ

State 1010:
## Known stack suffix:
## EMPTY
## LR(1) items:
bs_keyword -> EMPTY . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> EMPTY
-- On WITH reduce production bs_keyword -> EMPTY
-- On VOLATILE reduce production bs_keyword -> EMPTY
-- On VOID reduce production bs_keyword -> EMPTY
-- On VARIANT reduce production bs_keyword -> EMPTY
-- On VALID_READ reduce production bs_keyword -> EMPTY
-- On VALID_RANGE reduce production bs_keyword -> EMPTY
-- On VALID_INDEX reduce production bs_keyword -> EMPTY
-- On VALID reduce production bs_keyword -> EMPTY
-- On UNSIGNED reduce production bs_keyword -> EMPTY
-- On UNION reduce production bs_keyword -> EMPTY
-- On UNALLOCATED reduce production bs_keyword -> EMPTY
-- On TYPEOF reduce production bs_keyword -> EMPTY
-- On TYPENAME reduce production bs_keyword -> EMPTY
-- On TYPE reduce production bs_keyword -> EMPTY
-- On TRUE reduce production bs_keyword -> EMPTY
-- On TILDE reduce production bs_keyword -> EMPTY
-- On TERMINATES reduce production bs_keyword -> EMPTY
-- On STRUCT reduce production bs_keyword -> EMPTY
-- On STRING_LITERAL reduce production bs_keyword -> EMPTY
-- On STATIC reduce production bs_keyword -> EMPTY
-- On STAR reduce production bs_keyword -> EMPTY
-- On SLICE reduce production bs_keyword -> EMPTY
-- On SLASH reduce production bs_keyword -> EMPTY
-- On SIZEOF reduce production bs_keyword -> EMPTY
-- On SIGNED reduce production bs_keyword -> EMPTY
-- On SHORT reduce production bs_keyword -> EMPTY
-- On SEPARATED reduce production bs_keyword -> EMPTY
-- On SEMICOLON reduce production bs_keyword -> EMPTY
-- On RSQUARE reduce production bs_keyword -> EMPTY
-- On RPAR reduce production bs_keyword -> EMPTY
-- On RETURNS reduce production bs_keyword -> EMPTY
-- On RESULT reduce production bs_keyword -> EMPTY
-- On REQUIRES reduce production bs_keyword -> EMPTY
-- On REGISTER reduce production bs_keyword -> EMPTY
-- On REAL reduce production bs_keyword -> EMPTY
-- On READS reduce production bs_keyword -> EMPTY
-- On RBRACE reduce production bs_keyword -> EMPTY
-- On QUESTION reduce production bs_keyword -> EMPTY
-- On PREDICATE reduce production bs_keyword -> EMPTY
-- On PRAGMA reduce production bs_keyword -> EMPTY
-- On PLUS reduce production bs_keyword -> EMPTY
-- On PIPE reduce production bs_keyword -> EMPTY
-- On PERCENT reduce production bs_keyword -> EMPTY
-- On OR reduce production bs_keyword -> EMPTY
-- On OLD reduce production bs_keyword -> EMPTY
-- On OFFSET reduce production bs_keyword -> EMPTY
-- On NULL reduce production bs_keyword -> EMPTY
-- On NOTHING reduce production bs_keyword -> EMPTY
-- On NOT reduce production bs_keyword -> EMPTY
-- On NE reduce production bs_keyword -> EMPTY
-- On MODULE reduce production bs_keyword -> EMPTY
-- On MODEL reduce production bs_keyword -> EMPTY
-- On MINUS reduce production bs_keyword -> EMPTY
-- On LTLT reduce production bs_keyword -> EMPTY
-- On LTCOLON reduce production bs_keyword -> EMPTY
-- On LT reduce production bs_keyword -> EMPTY
-- On LSQUARE reduce production bs_keyword -> EMPTY
-- On LPAR reduce production bs_keyword -> EMPTY
-- On LOOP reduce production bs_keyword -> EMPTY
-- On LONG reduce production bs_keyword -> EMPTY
-- On LOGIC reduce production bs_keyword -> EMPTY
-- On LET reduce production bs_keyword -> EMPTY
-- On LEMMA reduce production bs_keyword -> EMPTY
-- On LE reduce production bs_keyword -> EMPTY
-- On LBRACE reduce production bs_keyword -> EMPTY
-- On LAMBDA reduce production bs_keyword -> EMPTY
-- On LABEL reduce production bs_keyword -> EMPTY
-- On INVARIANT reduce production bs_keyword -> EMPTY
-- On INTER reduce production bs_keyword -> EMPTY
-- On INTEGER reduce production bs_keyword -> EMPTY
-- On INT reduce production bs_keyword -> EMPTY
-- On INITIALIZED reduce production bs_keyword -> EMPTY
-- On INDUCTIVE reduce production bs_keyword -> EMPTY
-- On INCLUDE reduce production bs_keyword -> EMPTY
-- On IMPLIES reduce production bs_keyword -> EMPTY
-- On IMPACT reduce production bs_keyword -> EMPTY
-- On IFF reduce production bs_keyword -> EMPTY
-- On IF reduce production bs_keyword -> EMPTY
-- On IDENTIFIER reduce production bs_keyword -> EMPTY
-- On HATHAT reduce production bs_keyword -> EMPTY
-- On HAT reduce production bs_keyword -> EMPTY
-- On GTGT reduce production bs_keyword -> EMPTY
-- On GT reduce production bs_keyword -> EMPTY
-- On GLOBAL reduce production bs_keyword -> EMPTY
-- On GHOST reduce production bs_keyword -> EMPTY
-- On GE reduce production bs_keyword -> EMPTY
-- On FUNCTION reduce production bs_keyword -> EMPTY
-- On FROM reduce production bs_keyword -> EMPTY
-- On FRESH reduce production bs_keyword -> EMPTY
-- On FREES reduce production bs_keyword -> EMPTY
-- On FREEABLE reduce production bs_keyword -> EMPTY
-- On FORALL reduce production bs_keyword -> EMPTY
-- On FOR reduce production bs_keyword -> EMPTY
-- On FLOAT reduce production bs_keyword -> EMPTY
-- On FALSE reduce production bs_keyword -> EMPTY
-- On EXT_LET reduce production bs_keyword -> EMPTY
-- On EXT_AT reduce production bs_keyword -> EMPTY
-- On EXITS reduce production bs_keyword -> EMPTY
-- On EXISTS reduce production bs_keyword -> EMPTY
-- On EQUAL reduce production bs_keyword -> EMPTY
-- On EQ reduce production bs_keyword -> EMPTY
-- On EOF reduce production bs_keyword -> EMPTY
-- On ENUM reduce production bs_keyword -> EMPTY
-- On ENSURES reduce production bs_keyword -> EMPTY
-- On EMPTY reduce production bs_keyword -> EMPTY
-- On ELSE reduce production bs_keyword -> EMPTY
-- On DYNAMIC reduce production bs_keyword -> EMPTY
-- On DOUBLE reduce production bs_keyword -> EMPTY
-- On DOTDOTDOT reduce production bs_keyword -> EMPTY
-- On DOTDOT reduce production bs_keyword -> EMPTY
-- On DOT reduce production bs_keyword -> EMPTY
-- On DOLLAR reduce production bs_keyword -> EMPTY
-- On DISJOINT reduce production bs_keyword -> EMPTY
-- On DECREASES reduce production bs_keyword -> EMPTY
-- On DANGLING reduce production bs_keyword -> EMPTY
-- On CUSTOM reduce production bs_keyword -> EMPTY
-- On CONTRACT reduce production bs_keyword -> EMPTY
-- On CONTINUES reduce production bs_keyword -> EMPTY
-- On CONSTANT10 reduce production bs_keyword -> EMPTY
-- On CONSTANT reduce production bs_keyword -> EMPTY
-- On CONST reduce production bs_keyword -> EMPTY
-- On COMPLETE reduce production bs_keyword -> EMPTY
-- On COMMA reduce production bs_keyword -> EMPTY
-- On COLONGT reduce production bs_keyword -> EMPTY
-- On COLONCOLON reduce production bs_keyword -> EMPTY
-- On COLON2 reduce production bs_keyword -> EMPTY
-- On COLON reduce production bs_keyword -> EMPTY
-- On CHAR reduce production bs_keyword -> EMPTY
-- On CASE reduce production bs_keyword -> EMPTY
-- On BSUNION reduce production bs_keyword -> EMPTY
-- On BSTYPE reduce production bs_keyword -> EMPTY
-- On BREAKS reduce production bs_keyword -> EMPTY
-- On BOOLEAN reduce production bs_keyword -> EMPTY
-- On BOOL reduce production bs_keyword -> EMPTY
-- On BLOCK_LENGTH reduce production bs_keyword -> EMPTY
-- On BIMPLIES reduce production bs_keyword -> EMPTY
-- On BIFF reduce production bs_keyword -> EMPTY
-- On BEHAVIORS reduce production bs_keyword -> EMPTY
-- On BEHAVIOR reduce production bs_keyword -> EMPTY
-- On BASE_ADDR reduce production bs_keyword -> EMPTY
-- On AXIOMATIC reduce production bs_keyword -> EMPTY
-- On AXIOM reduce production bs_keyword -> EMPTY
-- On AUTOMATIC reduce production bs_keyword -> EMPTY
-- On AT reduce production bs_keyword -> EMPTY
-- On ASSUMES reduce production bs_keyword -> EMPTY
-- On ASSIGNS reduce production bs_keyword -> EMPTY
-- On ASSERT reduce production bs_keyword -> EMPTY
-- On ARROW reduce production bs_keyword -> EMPTY
-- On AND reduce production bs_keyword -> EMPTY
-- On AMP reduce production bs_keyword -> EMPTY
-- On ALLOCATION reduce production bs_keyword -> EMPTY
-- On ALLOCATES reduce production bs_keyword -> EMPTY
-- On ALLOCABLE reduce production bs_keyword -> EMPTY

State 1011:
## Known stack suffix:
## DYNAMIC
## LR(1) items:
bs_keyword -> DYNAMIC . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> DYNAMIC
-- On WITH reduce production bs_keyword -> DYNAMIC
-- On VOLATILE reduce production bs_keyword -> DYNAMIC
-- On VOID reduce production bs_keyword -> DYNAMIC
-- On VARIANT reduce production bs_keyword -> DYNAMIC
-- On VALID_READ reduce production bs_keyword -> DYNAMIC
-- On VALID_RANGE reduce production bs_keyword -> DYNAMIC
-- On VALID_INDEX reduce production bs_keyword -> DYNAMIC
-- On VALID reduce production bs_keyword -> DYNAMIC
-- On UNSIGNED reduce production bs_keyword -> DYNAMIC
-- On UNION reduce production bs_keyword -> DYNAMIC
-- On UNALLOCATED reduce production bs_keyword -> DYNAMIC
-- On TYPEOF reduce production bs_keyword -> DYNAMIC
-- On TYPENAME reduce production bs_keyword -> DYNAMIC
-- On TYPE reduce production bs_keyword -> DYNAMIC
-- On TRUE reduce production bs_keyword -> DYNAMIC
-- On TILDE reduce production bs_keyword -> DYNAMIC
-- On TERMINATES reduce production bs_keyword -> DYNAMIC
-- On STRUCT reduce production bs_keyword -> DYNAMIC
-- On STRING_LITERAL reduce production bs_keyword -> DYNAMIC
-- On STATIC reduce production bs_keyword -> DYNAMIC
-- On STAR reduce production bs_keyword -> DYNAMIC
-- On SLICE reduce production bs_keyword -> DYNAMIC
-- On SLASH reduce production bs_keyword -> DYNAMIC
-- On SIZEOF reduce production bs_keyword -> DYNAMIC
-- On SIGNED reduce production bs_keyword -> DYNAMIC
-- On SHORT reduce production bs_keyword -> DYNAMIC
-- On SEPARATED reduce production bs_keyword -> DYNAMIC
-- On SEMICOLON reduce production bs_keyword -> DYNAMIC
-- On RSQUARE reduce production bs_keyword -> DYNAMIC
-- On RPAR reduce production bs_keyword -> DYNAMIC
-- On RETURNS reduce production bs_keyword -> DYNAMIC
-- On RESULT reduce production bs_keyword -> DYNAMIC
-- On REQUIRES reduce production bs_keyword -> DYNAMIC
-- On REGISTER reduce production bs_keyword -> DYNAMIC
-- On REAL reduce production bs_keyword -> DYNAMIC
-- On READS reduce production bs_keyword -> DYNAMIC
-- On RBRACE reduce production bs_keyword -> DYNAMIC
-- On QUESTION reduce production bs_keyword -> DYNAMIC
-- On PREDICATE reduce production bs_keyword -> DYNAMIC
-- On PRAGMA reduce production bs_keyword -> DYNAMIC
-- On PLUS reduce production bs_keyword -> DYNAMIC
-- On PIPE reduce production bs_keyword -> DYNAMIC
-- On PERCENT reduce production bs_keyword -> DYNAMIC
-- On OR reduce production bs_keyword -> DYNAMIC
-- On OLD reduce production bs_keyword -> DYNAMIC
-- On OFFSET reduce production bs_keyword -> DYNAMIC
-- On NULL reduce production bs_keyword -> DYNAMIC
-- On NOTHING reduce production bs_keyword -> DYNAMIC
-- On NOT reduce production bs_keyword -> DYNAMIC
-- On NE reduce production bs_keyword -> DYNAMIC
-- On MODULE reduce production bs_keyword -> DYNAMIC
-- On MODEL reduce production bs_keyword -> DYNAMIC
-- On MINUS reduce production bs_keyword -> DYNAMIC
-- On LTLT reduce production bs_keyword -> DYNAMIC
-- On LTCOLON reduce production bs_keyword -> DYNAMIC
-- On LT reduce production bs_keyword -> DYNAMIC
-- On LSQUARE reduce production bs_keyword -> DYNAMIC
-- On LPAR reduce production bs_keyword -> DYNAMIC
-- On LOOP reduce production bs_keyword -> DYNAMIC
-- On LONG reduce production bs_keyword -> DYNAMIC
-- On LOGIC reduce production bs_keyword -> DYNAMIC
-- On LET reduce production bs_keyword -> DYNAMIC
-- On LEMMA reduce production bs_keyword -> DYNAMIC
-- On LE reduce production bs_keyword -> DYNAMIC
-- On LBRACE reduce production bs_keyword -> DYNAMIC
-- On LAMBDA reduce production bs_keyword -> DYNAMIC
-- On LABEL reduce production bs_keyword -> DYNAMIC
-- On INVARIANT reduce production bs_keyword -> DYNAMIC
-- On INTER reduce production bs_keyword -> DYNAMIC
-- On INTEGER reduce production bs_keyword -> DYNAMIC
-- On INT reduce production bs_keyword -> DYNAMIC
-- On INITIALIZED reduce production bs_keyword -> DYNAMIC
-- On INDUCTIVE reduce production bs_keyword -> DYNAMIC
-- On INCLUDE reduce production bs_keyword -> DYNAMIC
-- On IMPLIES reduce production bs_keyword -> DYNAMIC
-- On IMPACT reduce production bs_keyword -> DYNAMIC
-- On IFF reduce production bs_keyword -> DYNAMIC
-- On IF reduce production bs_keyword -> DYNAMIC
-- On IDENTIFIER reduce production bs_keyword -> DYNAMIC
-- On HATHAT reduce production bs_keyword -> DYNAMIC
-- On HAT reduce production bs_keyword -> DYNAMIC
-- On GTGT reduce production bs_keyword -> DYNAMIC
-- On GT reduce production bs_keyword -> DYNAMIC
-- On GLOBAL reduce production bs_keyword -> DYNAMIC
-- On GHOST reduce production bs_keyword -> DYNAMIC
-- On GE reduce production bs_keyword -> DYNAMIC
-- On FUNCTION reduce production bs_keyword -> DYNAMIC
-- On FROM reduce production bs_keyword -> DYNAMIC
-- On FRESH reduce production bs_keyword -> DYNAMIC
-- On FREES reduce production bs_keyword -> DYNAMIC
-- On FREEABLE reduce production bs_keyword -> DYNAMIC
-- On FORALL reduce production bs_keyword -> DYNAMIC
-- On FOR reduce production bs_keyword -> DYNAMIC
-- On FLOAT reduce production bs_keyword -> DYNAMIC
-- On FALSE reduce production bs_keyword -> DYNAMIC
-- On EXT_LET reduce production bs_keyword -> DYNAMIC
-- On EXT_AT reduce production bs_keyword -> DYNAMIC
-- On EXITS reduce production bs_keyword -> DYNAMIC
-- On EXISTS reduce production bs_keyword -> DYNAMIC
-- On EQUAL reduce production bs_keyword -> DYNAMIC
-- On EQ reduce production bs_keyword -> DYNAMIC
-- On EOF reduce production bs_keyword -> DYNAMIC
-- On ENUM reduce production bs_keyword -> DYNAMIC
-- On ENSURES reduce production bs_keyword -> DYNAMIC
-- On EMPTY reduce production bs_keyword -> DYNAMIC
-- On ELSE reduce production bs_keyword -> DYNAMIC
-- On DYNAMIC reduce production bs_keyword -> DYNAMIC
-- On DOUBLE reduce production bs_keyword -> DYNAMIC
-- On DOTDOTDOT reduce production bs_keyword -> DYNAMIC
-- On DOTDOT reduce production bs_keyword -> DYNAMIC
-- On DOT reduce production bs_keyword -> DYNAMIC
-- On DOLLAR reduce production bs_keyword -> DYNAMIC
-- On DISJOINT reduce production bs_keyword -> DYNAMIC
-- On DECREASES reduce production bs_keyword -> DYNAMIC
-- On DANGLING reduce production bs_keyword -> DYNAMIC
-- On CUSTOM reduce production bs_keyword -> DYNAMIC
-- On CONTRACT reduce production bs_keyword -> DYNAMIC
-- On CONTINUES reduce production bs_keyword -> DYNAMIC
-- On CONSTANT10 reduce production bs_keyword -> DYNAMIC
-- On CONSTANT reduce production bs_keyword -> DYNAMIC
-- On CONST reduce production bs_keyword -> DYNAMIC
-- On COMPLETE reduce production bs_keyword -> DYNAMIC
-- On COMMA reduce production bs_keyword -> DYNAMIC
-- On COLONGT reduce production bs_keyword -> DYNAMIC
-- On COLONCOLON reduce production bs_keyword -> DYNAMIC
-- On COLON2 reduce production bs_keyword -> DYNAMIC
-- On COLON reduce production bs_keyword -> DYNAMIC
-- On CHAR reduce production bs_keyword -> DYNAMIC
-- On CASE reduce production bs_keyword -> DYNAMIC
-- On BSUNION reduce production bs_keyword -> DYNAMIC
-- On BSTYPE reduce production bs_keyword -> DYNAMIC
-- On BREAKS reduce production bs_keyword -> DYNAMIC
-- On BOOLEAN reduce production bs_keyword -> DYNAMIC
-- On BOOL reduce production bs_keyword -> DYNAMIC
-- On BLOCK_LENGTH reduce production bs_keyword -> DYNAMIC
-- On BIMPLIES reduce production bs_keyword -> DYNAMIC
-- On BIFF reduce production bs_keyword -> DYNAMIC
-- On BEHAVIORS reduce production bs_keyword -> DYNAMIC
-- On BEHAVIOR reduce production bs_keyword -> DYNAMIC
-- On BASE_ADDR reduce production bs_keyword -> DYNAMIC
-- On AXIOMATIC reduce production bs_keyword -> DYNAMIC
-- On AXIOM reduce production bs_keyword -> DYNAMIC
-- On AUTOMATIC reduce production bs_keyword -> DYNAMIC
-- On AT reduce production bs_keyword -> DYNAMIC
-- On ASSUMES reduce production bs_keyword -> DYNAMIC
-- On ASSIGNS reduce production bs_keyword -> DYNAMIC
-- On ASSERT reduce production bs_keyword -> DYNAMIC
-- On ARROW reduce production bs_keyword -> DYNAMIC
-- On AND reduce production bs_keyword -> DYNAMIC
-- On AMP reduce production bs_keyword -> DYNAMIC
-- On ALLOCATION reduce production bs_keyword -> DYNAMIC
-- On ALLOCATES reduce production bs_keyword -> DYNAMIC
-- On ALLOCABLE reduce production bs_keyword -> DYNAMIC

State 1012:
## Known stack suffix:
## DOTDOTDOT
## LR(1) items:
wildcard -> DOTDOTDOT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> DOTDOTDOT
-- On WITH reduce production wildcard -> DOTDOTDOT
-- On VOLATILE reduce production wildcard -> DOTDOTDOT
-- On VOID reduce production wildcard -> DOTDOTDOT
-- On VARIANT reduce production wildcard -> DOTDOTDOT
-- On VALID_READ reduce production wildcard -> DOTDOTDOT
-- On VALID_RANGE reduce production wildcard -> DOTDOTDOT
-- On VALID_INDEX reduce production wildcard -> DOTDOTDOT
-- On VALID reduce production wildcard -> DOTDOTDOT
-- On UNSIGNED reduce production wildcard -> DOTDOTDOT
-- On UNION reduce production wildcard -> DOTDOTDOT
-- On UNALLOCATED reduce production wildcard -> DOTDOTDOT
-- On TYPEOF reduce production wildcard -> DOTDOTDOT
-- On TYPENAME reduce production wildcard -> DOTDOTDOT
-- On TYPE reduce production wildcard -> DOTDOTDOT
-- On TRUE reduce production wildcard -> DOTDOTDOT
-- On TILDE reduce production wildcard -> DOTDOTDOT
-- On TERMINATES reduce production wildcard -> DOTDOTDOT
-- On STRUCT reduce production wildcard -> DOTDOTDOT
-- On STRING_LITERAL reduce production wildcard -> DOTDOTDOT
-- On STATIC reduce production wildcard -> DOTDOTDOT
-- On STAR reduce production wildcard -> DOTDOTDOT
-- On SLICE reduce production wildcard -> DOTDOTDOT
-- On SLASH reduce production wildcard -> DOTDOTDOT
-- On SIZEOF reduce production wildcard -> DOTDOTDOT
-- On SIGNED reduce production wildcard -> DOTDOTDOT
-- On SHORT reduce production wildcard -> DOTDOTDOT
-- On SEPARATED reduce production wildcard -> DOTDOTDOT
-- On SEMICOLON reduce production wildcard -> DOTDOTDOT
-- On RSQUARE reduce production wildcard -> DOTDOTDOT
-- On RPAR reduce production wildcard -> DOTDOTDOT
-- On RETURNS reduce production wildcard -> DOTDOTDOT
-- On RESULT reduce production wildcard -> DOTDOTDOT
-- On REQUIRES reduce production wildcard -> DOTDOTDOT
-- On REGISTER reduce production wildcard -> DOTDOTDOT
-- On REAL reduce production wildcard -> DOTDOTDOT
-- On READS reduce production wildcard -> DOTDOTDOT
-- On RBRACE reduce production wildcard -> DOTDOTDOT
-- On QUESTION reduce production wildcard -> DOTDOTDOT
-- On PREDICATE reduce production wildcard -> DOTDOTDOT
-- On PRAGMA reduce production wildcard -> DOTDOTDOT
-- On PLUS reduce production wildcard -> DOTDOTDOT
-- On PIPE reduce production wildcard -> DOTDOTDOT
-- On PERCENT reduce production wildcard -> DOTDOTDOT
-- On OR reduce production wildcard -> DOTDOTDOT
-- On OLD reduce production wildcard -> DOTDOTDOT
-- On OFFSET reduce production wildcard -> DOTDOTDOT
-- On NULL reduce production wildcard -> DOTDOTDOT
-- On NOTHING reduce production wildcard -> DOTDOTDOT
-- On NOT reduce production wildcard -> DOTDOTDOT
-- On NE reduce production wildcard -> DOTDOTDOT
-- On MODULE reduce production wildcard -> DOTDOTDOT
-- On MODEL reduce production wildcard -> DOTDOTDOT
-- On MINUS reduce production wildcard -> DOTDOTDOT
-- On LTLT reduce production wildcard -> DOTDOTDOT
-- On LTCOLON reduce production wildcard -> DOTDOTDOT
-- On LT reduce production wildcard -> DOTDOTDOT
-- On LSQUARE reduce production wildcard -> DOTDOTDOT
-- On LPAR reduce production wildcard -> DOTDOTDOT
-- On LOOP reduce production wildcard -> DOTDOTDOT
-- On LONG reduce production wildcard -> DOTDOTDOT
-- On LOGIC reduce production wildcard -> DOTDOTDOT
-- On LET reduce production wildcard -> DOTDOTDOT
-- On LEMMA reduce production wildcard -> DOTDOTDOT
-- On LE reduce production wildcard -> DOTDOTDOT
-- On LBRACE reduce production wildcard -> DOTDOTDOT
-- On LAMBDA reduce production wildcard -> DOTDOTDOT
-- On LABEL reduce production wildcard -> DOTDOTDOT
-- On INVARIANT reduce production wildcard -> DOTDOTDOT
-- On INTER reduce production wildcard -> DOTDOTDOT
-- On INTEGER reduce production wildcard -> DOTDOTDOT
-- On INT reduce production wildcard -> DOTDOTDOT
-- On INITIALIZED reduce production wildcard -> DOTDOTDOT
-- On INDUCTIVE reduce production wildcard -> DOTDOTDOT
-- On INCLUDE reduce production wildcard -> DOTDOTDOT
-- On IMPLIES reduce production wildcard -> DOTDOTDOT
-- On IMPACT reduce production wildcard -> DOTDOTDOT
-- On IFF reduce production wildcard -> DOTDOTDOT
-- On IF reduce production wildcard -> DOTDOTDOT
-- On IDENTIFIER reduce production wildcard -> DOTDOTDOT
-- On HATHAT reduce production wildcard -> DOTDOTDOT
-- On HAT reduce production wildcard -> DOTDOTDOT
-- On GTGT reduce production wildcard -> DOTDOTDOT
-- On GT reduce production wildcard -> DOTDOTDOT
-- On GLOBAL reduce production wildcard -> DOTDOTDOT
-- On GHOST reduce production wildcard -> DOTDOTDOT
-- On GE reduce production wildcard -> DOTDOTDOT
-- On FUNCTION reduce production wildcard -> DOTDOTDOT
-- On FROM reduce production wildcard -> DOTDOTDOT
-- On FRESH reduce production wildcard -> DOTDOTDOT
-- On FREES reduce production wildcard -> DOTDOTDOT
-- On FREEABLE reduce production wildcard -> DOTDOTDOT
-- On FORALL reduce production wildcard -> DOTDOTDOT
-- On FOR reduce production wildcard -> DOTDOTDOT
-- On FLOAT reduce production wildcard -> DOTDOTDOT
-- On FALSE reduce production wildcard -> DOTDOTDOT
-- On EXT_LET reduce production wildcard -> DOTDOTDOT
-- On EXT_AT reduce production wildcard -> DOTDOTDOT
-- On EXITS reduce production wildcard -> DOTDOTDOT
-- On EXISTS reduce production wildcard -> DOTDOTDOT
-- On EQUAL reduce production wildcard -> DOTDOTDOT
-- On EQ reduce production wildcard -> DOTDOTDOT
-- On EOF reduce production wildcard -> DOTDOTDOT
-- On ENUM reduce production wildcard -> DOTDOTDOT
-- On ENSURES reduce production wildcard -> DOTDOTDOT
-- On EMPTY reduce production wildcard -> DOTDOTDOT
-- On ELSE reduce production wildcard -> DOTDOTDOT
-- On DYNAMIC reduce production wildcard -> DOTDOTDOT
-- On DOUBLE reduce production wildcard -> DOTDOTDOT
-- On DOTDOTDOT reduce production wildcard -> DOTDOTDOT
-- On DOTDOT reduce production wildcard -> DOTDOTDOT
-- On DOT reduce production wildcard -> DOTDOTDOT
-- On DOLLAR reduce production wildcard -> DOTDOTDOT
-- On DISJOINT reduce production wildcard -> DOTDOTDOT
-- On DECREASES reduce production wildcard -> DOTDOTDOT
-- On DANGLING reduce production wildcard -> DOTDOTDOT
-- On CUSTOM reduce production wildcard -> DOTDOTDOT
-- On CONTRACT reduce production wildcard -> DOTDOTDOT
-- On CONTINUES reduce production wildcard -> DOTDOTDOT
-- On CONSTANT10 reduce production wildcard -> DOTDOTDOT
-- On CONSTANT reduce production wildcard -> DOTDOTDOT
-- On CONST reduce production wildcard -> DOTDOTDOT
-- On COMPLETE reduce production wildcard -> DOTDOTDOT
-- On COMMA reduce production wildcard -> DOTDOTDOT
-- On COLONGT reduce production wildcard -> DOTDOTDOT
-- On COLONCOLON reduce production wildcard -> DOTDOTDOT
-- On COLON2 reduce production wildcard -> DOTDOTDOT
-- On COLON reduce production wildcard -> DOTDOTDOT
-- On CHAR reduce production wildcard -> DOTDOTDOT
-- On CASE reduce production wildcard -> DOTDOTDOT
-- On BSUNION reduce production wildcard -> DOTDOTDOT
-- On BSTYPE reduce production wildcard -> DOTDOTDOT
-- On BREAKS reduce production wildcard -> DOTDOTDOT
-- On BOOLEAN reduce production wildcard -> DOTDOTDOT
-- On BOOL reduce production wildcard -> DOTDOTDOT
-- On BLOCK_LENGTH reduce production wildcard -> DOTDOTDOT
-- On BIMPLIES reduce production wildcard -> DOTDOTDOT
-- On BIFF reduce production wildcard -> DOTDOTDOT
-- On BEHAVIORS reduce production wildcard -> DOTDOTDOT
-- On BEHAVIOR reduce production wildcard -> DOTDOTDOT
-- On BASE_ADDR reduce production wildcard -> DOTDOTDOT
-- On AXIOMATIC reduce production wildcard -> DOTDOTDOT
-- On AXIOM reduce production wildcard -> DOTDOTDOT
-- On AUTOMATIC reduce production wildcard -> DOTDOTDOT
-- On AT reduce production wildcard -> DOTDOTDOT
-- On ASSUMES reduce production wildcard -> DOTDOTDOT
-- On ASSIGNS reduce production wildcard -> DOTDOTDOT
-- On ASSERT reduce production wildcard -> DOTDOTDOT
-- On ARROW reduce production wildcard -> DOTDOTDOT
-- On AND reduce production wildcard -> DOTDOTDOT
-- On AMP reduce production wildcard -> DOTDOTDOT
-- On ALLOCATION reduce production wildcard -> DOTDOTDOT
-- On ALLOCATES reduce production wildcard -> DOTDOTDOT
-- On ALLOCABLE reduce production wildcard -> DOTDOTDOT

State 1013:
## Known stack suffix:
## DOTDOT
## LR(1) items:
wildcard -> DOTDOT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> DOTDOT
-- On WITH reduce production wildcard -> DOTDOT
-- On VOLATILE reduce production wildcard -> DOTDOT
-- On VOID reduce production wildcard -> DOTDOT
-- On VARIANT reduce production wildcard -> DOTDOT
-- On VALID_READ reduce production wildcard -> DOTDOT
-- On VALID_RANGE reduce production wildcard -> DOTDOT
-- On VALID_INDEX reduce production wildcard -> DOTDOT
-- On VALID reduce production wildcard -> DOTDOT
-- On UNSIGNED reduce production wildcard -> DOTDOT
-- On UNION reduce production wildcard -> DOTDOT
-- On UNALLOCATED reduce production wildcard -> DOTDOT
-- On TYPEOF reduce production wildcard -> DOTDOT
-- On TYPENAME reduce production wildcard -> DOTDOT
-- On TYPE reduce production wildcard -> DOTDOT
-- On TRUE reduce production wildcard -> DOTDOT
-- On TILDE reduce production wildcard -> DOTDOT
-- On TERMINATES reduce production wildcard -> DOTDOT
-- On STRUCT reduce production wildcard -> DOTDOT
-- On STRING_LITERAL reduce production wildcard -> DOTDOT
-- On STATIC reduce production wildcard -> DOTDOT
-- On STAR reduce production wildcard -> DOTDOT
-- On SLICE reduce production wildcard -> DOTDOT
-- On SLASH reduce production wildcard -> DOTDOT
-- On SIZEOF reduce production wildcard -> DOTDOT
-- On SIGNED reduce production wildcard -> DOTDOT
-- On SHORT reduce production wildcard -> DOTDOT
-- On SEPARATED reduce production wildcard -> DOTDOT
-- On SEMICOLON reduce production wildcard -> DOTDOT
-- On RSQUARE reduce production wildcard -> DOTDOT
-- On RPAR reduce production wildcard -> DOTDOT
-- On RETURNS reduce production wildcard -> DOTDOT
-- On RESULT reduce production wildcard -> DOTDOT
-- On REQUIRES reduce production wildcard -> DOTDOT
-- On REGISTER reduce production wildcard -> DOTDOT
-- On REAL reduce production wildcard -> DOTDOT
-- On READS reduce production wildcard -> DOTDOT
-- On RBRACE reduce production wildcard -> DOTDOT
-- On QUESTION reduce production wildcard -> DOTDOT
-- On PREDICATE reduce production wildcard -> DOTDOT
-- On PRAGMA reduce production wildcard -> DOTDOT
-- On PLUS reduce production wildcard -> DOTDOT
-- On PIPE reduce production wildcard -> DOTDOT
-- On PERCENT reduce production wildcard -> DOTDOT
-- On OR reduce production wildcard -> DOTDOT
-- On OLD reduce production wildcard -> DOTDOT
-- On OFFSET reduce production wildcard -> DOTDOT
-- On NULL reduce production wildcard -> DOTDOT
-- On NOTHING reduce production wildcard -> DOTDOT
-- On NOT reduce production wildcard -> DOTDOT
-- On NE reduce production wildcard -> DOTDOT
-- On MODULE reduce production wildcard -> DOTDOT
-- On MODEL reduce production wildcard -> DOTDOT
-- On MINUS reduce production wildcard -> DOTDOT
-- On LTLT reduce production wildcard -> DOTDOT
-- On LTCOLON reduce production wildcard -> DOTDOT
-- On LT reduce production wildcard -> DOTDOT
-- On LSQUARE reduce production wildcard -> DOTDOT
-- On LPAR reduce production wildcard -> DOTDOT
-- On LOOP reduce production wildcard -> DOTDOT
-- On LONG reduce production wildcard -> DOTDOT
-- On LOGIC reduce production wildcard -> DOTDOT
-- On LET reduce production wildcard -> DOTDOT
-- On LEMMA reduce production wildcard -> DOTDOT
-- On LE reduce production wildcard -> DOTDOT
-- On LBRACE reduce production wildcard -> DOTDOT
-- On LAMBDA reduce production wildcard -> DOTDOT
-- On LABEL reduce production wildcard -> DOTDOT
-- On INVARIANT reduce production wildcard -> DOTDOT
-- On INTER reduce production wildcard -> DOTDOT
-- On INTEGER reduce production wildcard -> DOTDOT
-- On INT reduce production wildcard -> DOTDOT
-- On INITIALIZED reduce production wildcard -> DOTDOT
-- On INDUCTIVE reduce production wildcard -> DOTDOT
-- On INCLUDE reduce production wildcard -> DOTDOT
-- On IMPLIES reduce production wildcard -> DOTDOT
-- On IMPACT reduce production wildcard -> DOTDOT
-- On IFF reduce production wildcard -> DOTDOT
-- On IF reduce production wildcard -> DOTDOT
-- On IDENTIFIER reduce production wildcard -> DOTDOT
-- On HATHAT reduce production wildcard -> DOTDOT
-- On HAT reduce production wildcard -> DOTDOT
-- On GTGT reduce production wildcard -> DOTDOT
-- On GT reduce production wildcard -> DOTDOT
-- On GLOBAL reduce production wildcard -> DOTDOT
-- On GHOST reduce production wildcard -> DOTDOT
-- On GE reduce production wildcard -> DOTDOT
-- On FUNCTION reduce production wildcard -> DOTDOT
-- On FROM reduce production wildcard -> DOTDOT
-- On FRESH reduce production wildcard -> DOTDOT
-- On FREES reduce production wildcard -> DOTDOT
-- On FREEABLE reduce production wildcard -> DOTDOT
-- On FORALL reduce production wildcard -> DOTDOT
-- On FOR reduce production wildcard -> DOTDOT
-- On FLOAT reduce production wildcard -> DOTDOT
-- On FALSE reduce production wildcard -> DOTDOT
-- On EXT_LET reduce production wildcard -> DOTDOT
-- On EXT_AT reduce production wildcard -> DOTDOT
-- On EXITS reduce production wildcard -> DOTDOT
-- On EXISTS reduce production wildcard -> DOTDOT
-- On EQUAL reduce production wildcard -> DOTDOT
-- On EQ reduce production wildcard -> DOTDOT
-- On EOF reduce production wildcard -> DOTDOT
-- On ENUM reduce production wildcard -> DOTDOT
-- On ENSURES reduce production wildcard -> DOTDOT
-- On EMPTY reduce production wildcard -> DOTDOT
-- On ELSE reduce production wildcard -> DOTDOT
-- On DYNAMIC reduce production wildcard -> DOTDOT
-- On DOUBLE reduce production wildcard -> DOTDOT
-- On DOTDOTDOT reduce production wildcard -> DOTDOT
-- On DOTDOT reduce production wildcard -> DOTDOT
-- On DOT reduce production wildcard -> DOTDOT
-- On DOLLAR reduce production wildcard -> DOTDOT
-- On DISJOINT reduce production wildcard -> DOTDOT
-- On DECREASES reduce production wildcard -> DOTDOT
-- On DANGLING reduce production wildcard -> DOTDOT
-- On CUSTOM reduce production wildcard -> DOTDOT
-- On CONTRACT reduce production wildcard -> DOTDOT
-- On CONTINUES reduce production wildcard -> DOTDOT
-- On CONSTANT10 reduce production wildcard -> DOTDOT
-- On CONSTANT reduce production wildcard -> DOTDOT
-- On CONST reduce production wildcard -> DOTDOT
-- On COMPLETE reduce production wildcard -> DOTDOT
-- On COMMA reduce production wildcard -> DOTDOT
-- On COLONGT reduce production wildcard -> DOTDOT
-- On COLONCOLON reduce production wildcard -> DOTDOT
-- On COLON2 reduce production wildcard -> DOTDOT
-- On COLON reduce production wildcard -> DOTDOT
-- On CHAR reduce production wildcard -> DOTDOT
-- On CASE reduce production wildcard -> DOTDOT
-- On BSUNION reduce production wildcard -> DOTDOT
-- On BSTYPE reduce production wildcard -> DOTDOT
-- On BREAKS reduce production wildcard -> DOTDOT
-- On BOOLEAN reduce production wildcard -> DOTDOT
-- On BOOL reduce production wildcard -> DOTDOT
-- On BLOCK_LENGTH reduce production wildcard -> DOTDOT
-- On BIMPLIES reduce production wildcard -> DOTDOT
-- On BIFF reduce production wildcard -> DOTDOT
-- On BEHAVIORS reduce production wildcard -> DOTDOT
-- On BEHAVIOR reduce production wildcard -> DOTDOT
-- On BASE_ADDR reduce production wildcard -> DOTDOT
-- On AXIOMATIC reduce production wildcard -> DOTDOT
-- On AXIOM reduce production wildcard -> DOTDOT
-- On AUTOMATIC reduce production wildcard -> DOTDOT
-- On AT reduce production wildcard -> DOTDOT
-- On ASSUMES reduce production wildcard -> DOTDOT
-- On ASSIGNS reduce production wildcard -> DOTDOT
-- On ASSERT reduce production wildcard -> DOTDOT
-- On ARROW reduce production wildcard -> DOTDOT
-- On AND reduce production wildcard -> DOTDOT
-- On AMP reduce production wildcard -> DOTDOT
-- On ALLOCATION reduce production wildcard -> DOTDOT
-- On ALLOCATES reduce production wildcard -> DOTDOT
-- On ALLOCABLE reduce production wildcard -> DOTDOT

State 1014:
## Known stack suffix:
## DOT
## LR(1) items:
wildcard -> DOT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> DOT
-- On WITH reduce production wildcard -> DOT
-- On VOLATILE reduce production wildcard -> DOT
-- On VOID reduce production wildcard -> DOT
-- On VARIANT reduce production wildcard -> DOT
-- On VALID_READ reduce production wildcard -> DOT
-- On VALID_RANGE reduce production wildcard -> DOT
-- On VALID_INDEX reduce production wildcard -> DOT
-- On VALID reduce production wildcard -> DOT
-- On UNSIGNED reduce production wildcard -> DOT
-- On UNION reduce production wildcard -> DOT
-- On UNALLOCATED reduce production wildcard -> DOT
-- On TYPEOF reduce production wildcard -> DOT
-- On TYPENAME reduce production wildcard -> DOT
-- On TYPE reduce production wildcard -> DOT
-- On TRUE reduce production wildcard -> DOT
-- On TILDE reduce production wildcard -> DOT
-- On TERMINATES reduce production wildcard -> DOT
-- On STRUCT reduce production wildcard -> DOT
-- On STRING_LITERAL reduce production wildcard -> DOT
-- On STATIC reduce production wildcard -> DOT
-- On STAR reduce production wildcard -> DOT
-- On SLICE reduce production wildcard -> DOT
-- On SLASH reduce production wildcard -> DOT
-- On SIZEOF reduce production wildcard -> DOT
-- On SIGNED reduce production wildcard -> DOT
-- On SHORT reduce production wildcard -> DOT
-- On SEPARATED reduce production wildcard -> DOT
-- On SEMICOLON reduce production wildcard -> DOT
-- On RSQUARE reduce production wildcard -> DOT
-- On RPAR reduce production wildcard -> DOT
-- On RETURNS reduce production wildcard -> DOT
-- On RESULT reduce production wildcard -> DOT
-- On REQUIRES reduce production wildcard -> DOT
-- On REGISTER reduce production wildcard -> DOT
-- On REAL reduce production wildcard -> DOT
-- On READS reduce production wildcard -> DOT
-- On RBRACE reduce production wildcard -> DOT
-- On QUESTION reduce production wildcard -> DOT
-- On PREDICATE reduce production wildcard -> DOT
-- On PRAGMA reduce production wildcard -> DOT
-- On PLUS reduce production wildcard -> DOT
-- On PIPE reduce production wildcard -> DOT
-- On PERCENT reduce production wildcard -> DOT
-- On OR reduce production wildcard -> DOT
-- On OLD reduce production wildcard -> DOT
-- On OFFSET reduce production wildcard -> DOT
-- On NULL reduce production wildcard -> DOT
-- On NOTHING reduce production wildcard -> DOT
-- On NOT reduce production wildcard -> DOT
-- On NE reduce production wildcard -> DOT
-- On MODULE reduce production wildcard -> DOT
-- On MODEL reduce production wildcard -> DOT
-- On MINUS reduce production wildcard -> DOT
-- On LTLT reduce production wildcard -> DOT
-- On LTCOLON reduce production wildcard -> DOT
-- On LT reduce production wildcard -> DOT
-- On LSQUARE reduce production wildcard -> DOT
-- On LPAR reduce production wildcard -> DOT
-- On LOOP reduce production wildcard -> DOT
-- On LONG reduce production wildcard -> DOT
-- On LOGIC reduce production wildcard -> DOT
-- On LET reduce production wildcard -> DOT
-- On LEMMA reduce production wildcard -> DOT
-- On LE reduce production wildcard -> DOT
-- On LBRACE reduce production wildcard -> DOT
-- On LAMBDA reduce production wildcard -> DOT
-- On LABEL reduce production wildcard -> DOT
-- On INVARIANT reduce production wildcard -> DOT
-- On INTER reduce production wildcard -> DOT
-- On INTEGER reduce production wildcard -> DOT
-- On INT reduce production wildcard -> DOT
-- On INITIALIZED reduce production wildcard -> DOT
-- On INDUCTIVE reduce production wildcard -> DOT
-- On INCLUDE reduce production wildcard -> DOT
-- On IMPLIES reduce production wildcard -> DOT
-- On IMPACT reduce production wildcard -> DOT
-- On IFF reduce production wildcard -> DOT
-- On IF reduce production wildcard -> DOT
-- On IDENTIFIER reduce production wildcard -> DOT
-- On HATHAT reduce production wildcard -> DOT
-- On HAT reduce production wildcard -> DOT
-- On GTGT reduce production wildcard -> DOT
-- On GT reduce production wildcard -> DOT
-- On GLOBAL reduce production wildcard -> DOT
-- On GHOST reduce production wildcard -> DOT
-- On GE reduce production wildcard -> DOT
-- On FUNCTION reduce production wildcard -> DOT
-- On FROM reduce production wildcard -> DOT
-- On FRESH reduce production wildcard -> DOT
-- On FREES reduce production wildcard -> DOT
-- On FREEABLE reduce production wildcard -> DOT
-- On FORALL reduce production wildcard -> DOT
-- On FOR reduce production wildcard -> DOT
-- On FLOAT reduce production wildcard -> DOT
-- On FALSE reduce production wildcard -> DOT
-- On EXT_LET reduce production wildcard -> DOT
-- On EXT_AT reduce production wildcard -> DOT
-- On EXITS reduce production wildcard -> DOT
-- On EXISTS reduce production wildcard -> DOT
-- On EQUAL reduce production wildcard -> DOT
-- On EQ reduce production wildcard -> DOT
-- On EOF reduce production wildcard -> DOT
-- On ENUM reduce production wildcard -> DOT
-- On ENSURES reduce production wildcard -> DOT
-- On EMPTY reduce production wildcard -> DOT
-- On ELSE reduce production wildcard -> DOT
-- On DYNAMIC reduce production wildcard -> DOT
-- On DOUBLE reduce production wildcard -> DOT
-- On DOTDOTDOT reduce production wildcard -> DOT
-- On DOTDOT reduce production wildcard -> DOT
-- On DOT reduce production wildcard -> DOT
-- On DOLLAR reduce production wildcard -> DOT
-- On DISJOINT reduce production wildcard -> DOT
-- On DECREASES reduce production wildcard -> DOT
-- On DANGLING reduce production wildcard -> DOT
-- On CUSTOM reduce production wildcard -> DOT
-- On CONTRACT reduce production wildcard -> DOT
-- On CONTINUES reduce production wildcard -> DOT
-- On CONSTANT10 reduce production wildcard -> DOT
-- On CONSTANT reduce production wildcard -> DOT
-- On CONST reduce production wildcard -> DOT
-- On COMPLETE reduce production wildcard -> DOT
-- On COMMA reduce production wildcard -> DOT
-- On COLONGT reduce production wildcard -> DOT
-- On COLONCOLON reduce production wildcard -> DOT
-- On COLON2 reduce production wildcard -> DOT
-- On COLON reduce production wildcard -> DOT
-- On CHAR reduce production wildcard -> DOT
-- On CASE reduce production wildcard -> DOT
-- On BSUNION reduce production wildcard -> DOT
-- On BSTYPE reduce production wildcard -> DOT
-- On BREAKS reduce production wildcard -> DOT
-- On BOOLEAN reduce production wildcard -> DOT
-- On BOOL reduce production wildcard -> DOT
-- On BLOCK_LENGTH reduce production wildcard -> DOT
-- On BIMPLIES reduce production wildcard -> DOT
-- On BIFF reduce production wildcard -> DOT
-- On BEHAVIORS reduce production wildcard -> DOT
-- On BEHAVIOR reduce production wildcard -> DOT
-- On BASE_ADDR reduce production wildcard -> DOT
-- On AXIOMATIC reduce production wildcard -> DOT
-- On AXIOM reduce production wildcard -> DOT
-- On AUTOMATIC reduce production wildcard -> DOT
-- On AT reduce production wildcard -> DOT
-- On ASSUMES reduce production wildcard -> DOT
-- On ASSIGNS reduce production wildcard -> DOT
-- On ASSERT reduce production wildcard -> DOT
-- On ARROW reduce production wildcard -> DOT
-- On AND reduce production wildcard -> DOT
-- On AMP reduce production wildcard -> DOT
-- On ALLOCATION reduce production wildcard -> DOT
-- On ALLOCATES reduce production wildcard -> DOT
-- On ALLOCABLE reduce production wildcard -> DOT

State 1015:
## Known stack suffix:
## DOLLAR
## LR(1) items:
wildcard -> DOLLAR . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> DOLLAR
-- On WITH reduce production wildcard -> DOLLAR
-- On VOLATILE reduce production wildcard -> DOLLAR
-- On VOID reduce production wildcard -> DOLLAR
-- On VARIANT reduce production wildcard -> DOLLAR
-- On VALID_READ reduce production wildcard -> DOLLAR
-- On VALID_RANGE reduce production wildcard -> DOLLAR
-- On VALID_INDEX reduce production wildcard -> DOLLAR
-- On VALID reduce production wildcard -> DOLLAR
-- On UNSIGNED reduce production wildcard -> DOLLAR
-- On UNION reduce production wildcard -> DOLLAR
-- On UNALLOCATED reduce production wildcard -> DOLLAR
-- On TYPEOF reduce production wildcard -> DOLLAR
-- On TYPENAME reduce production wildcard -> DOLLAR
-- On TYPE reduce production wildcard -> DOLLAR
-- On TRUE reduce production wildcard -> DOLLAR
-- On TILDE reduce production wildcard -> DOLLAR
-- On TERMINATES reduce production wildcard -> DOLLAR
-- On STRUCT reduce production wildcard -> DOLLAR
-- On STRING_LITERAL reduce production wildcard -> DOLLAR
-- On STATIC reduce production wildcard -> DOLLAR
-- On STAR reduce production wildcard -> DOLLAR
-- On SLICE reduce production wildcard -> DOLLAR
-- On SLASH reduce production wildcard -> DOLLAR
-- On SIZEOF reduce production wildcard -> DOLLAR
-- On SIGNED reduce production wildcard -> DOLLAR
-- On SHORT reduce production wildcard -> DOLLAR
-- On SEPARATED reduce production wildcard -> DOLLAR
-- On SEMICOLON reduce production wildcard -> DOLLAR
-- On RSQUARE reduce production wildcard -> DOLLAR
-- On RPAR reduce production wildcard -> DOLLAR
-- On RETURNS reduce production wildcard -> DOLLAR
-- On RESULT reduce production wildcard -> DOLLAR
-- On REQUIRES reduce production wildcard -> DOLLAR
-- On REGISTER reduce production wildcard -> DOLLAR
-- On REAL reduce production wildcard -> DOLLAR
-- On READS reduce production wildcard -> DOLLAR
-- On RBRACE reduce production wildcard -> DOLLAR
-- On QUESTION reduce production wildcard -> DOLLAR
-- On PREDICATE reduce production wildcard -> DOLLAR
-- On PRAGMA reduce production wildcard -> DOLLAR
-- On PLUS reduce production wildcard -> DOLLAR
-- On PIPE reduce production wildcard -> DOLLAR
-- On PERCENT reduce production wildcard -> DOLLAR
-- On OR reduce production wildcard -> DOLLAR
-- On OLD reduce production wildcard -> DOLLAR
-- On OFFSET reduce production wildcard -> DOLLAR
-- On NULL reduce production wildcard -> DOLLAR
-- On NOTHING reduce production wildcard -> DOLLAR
-- On NOT reduce production wildcard -> DOLLAR
-- On NE reduce production wildcard -> DOLLAR
-- On MODULE reduce production wildcard -> DOLLAR
-- On MODEL reduce production wildcard -> DOLLAR
-- On MINUS reduce production wildcard -> DOLLAR
-- On LTLT reduce production wildcard -> DOLLAR
-- On LTCOLON reduce production wildcard -> DOLLAR
-- On LT reduce production wildcard -> DOLLAR
-- On LSQUARE reduce production wildcard -> DOLLAR
-- On LPAR reduce production wildcard -> DOLLAR
-- On LOOP reduce production wildcard -> DOLLAR
-- On LONG reduce production wildcard -> DOLLAR
-- On LOGIC reduce production wildcard -> DOLLAR
-- On LET reduce production wildcard -> DOLLAR
-- On LEMMA reduce production wildcard -> DOLLAR
-- On LE reduce production wildcard -> DOLLAR
-- On LBRACE reduce production wildcard -> DOLLAR
-- On LAMBDA reduce production wildcard -> DOLLAR
-- On LABEL reduce production wildcard -> DOLLAR
-- On INVARIANT reduce production wildcard -> DOLLAR
-- On INTER reduce production wildcard -> DOLLAR
-- On INTEGER reduce production wildcard -> DOLLAR
-- On INT reduce production wildcard -> DOLLAR
-- On INITIALIZED reduce production wildcard -> DOLLAR
-- On INDUCTIVE reduce production wildcard -> DOLLAR
-- On INCLUDE reduce production wildcard -> DOLLAR
-- On IMPLIES reduce production wildcard -> DOLLAR
-- On IMPACT reduce production wildcard -> DOLLAR
-- On IFF reduce production wildcard -> DOLLAR
-- On IF reduce production wildcard -> DOLLAR
-- On IDENTIFIER reduce production wildcard -> DOLLAR
-- On HATHAT reduce production wildcard -> DOLLAR
-- On HAT reduce production wildcard -> DOLLAR
-- On GTGT reduce production wildcard -> DOLLAR
-- On GT reduce production wildcard -> DOLLAR
-- On GLOBAL reduce production wildcard -> DOLLAR
-- On GHOST reduce production wildcard -> DOLLAR
-- On GE reduce production wildcard -> DOLLAR
-- On FUNCTION reduce production wildcard -> DOLLAR
-- On FROM reduce production wildcard -> DOLLAR
-- On FRESH reduce production wildcard -> DOLLAR
-- On FREES reduce production wildcard -> DOLLAR
-- On FREEABLE reduce production wildcard -> DOLLAR
-- On FORALL reduce production wildcard -> DOLLAR
-- On FOR reduce production wildcard -> DOLLAR
-- On FLOAT reduce production wildcard -> DOLLAR
-- On FALSE reduce production wildcard -> DOLLAR
-- On EXT_LET reduce production wildcard -> DOLLAR
-- On EXT_AT reduce production wildcard -> DOLLAR
-- On EXITS reduce production wildcard -> DOLLAR
-- On EXISTS reduce production wildcard -> DOLLAR
-- On EQUAL reduce production wildcard -> DOLLAR
-- On EQ reduce production wildcard -> DOLLAR
-- On EOF reduce production wildcard -> DOLLAR
-- On ENUM reduce production wildcard -> DOLLAR
-- On ENSURES reduce production wildcard -> DOLLAR
-- On EMPTY reduce production wildcard -> DOLLAR
-- On ELSE reduce production wildcard -> DOLLAR
-- On DYNAMIC reduce production wildcard -> DOLLAR
-- On DOUBLE reduce production wildcard -> DOLLAR
-- On DOTDOTDOT reduce production wildcard -> DOLLAR
-- On DOTDOT reduce production wildcard -> DOLLAR
-- On DOT reduce production wildcard -> DOLLAR
-- On DOLLAR reduce production wildcard -> DOLLAR
-- On DISJOINT reduce production wildcard -> DOLLAR
-- On DECREASES reduce production wildcard -> DOLLAR
-- On DANGLING reduce production wildcard -> DOLLAR
-- On CUSTOM reduce production wildcard -> DOLLAR
-- On CONTRACT reduce production wildcard -> DOLLAR
-- On CONTINUES reduce production wildcard -> DOLLAR
-- On CONSTANT10 reduce production wildcard -> DOLLAR
-- On CONSTANT reduce production wildcard -> DOLLAR
-- On CONST reduce production wildcard -> DOLLAR
-- On COMPLETE reduce production wildcard -> DOLLAR
-- On COMMA reduce production wildcard -> DOLLAR
-- On COLONGT reduce production wildcard -> DOLLAR
-- On COLONCOLON reduce production wildcard -> DOLLAR
-- On COLON2 reduce production wildcard -> DOLLAR
-- On COLON reduce production wildcard -> DOLLAR
-- On CHAR reduce production wildcard -> DOLLAR
-- On CASE reduce production wildcard -> DOLLAR
-- On BSUNION reduce production wildcard -> DOLLAR
-- On BSTYPE reduce production wildcard -> DOLLAR
-- On BREAKS reduce production wildcard -> DOLLAR
-- On BOOLEAN reduce production wildcard -> DOLLAR
-- On BOOL reduce production wildcard -> DOLLAR
-- On BLOCK_LENGTH reduce production wildcard -> DOLLAR
-- On BIMPLIES reduce production wildcard -> DOLLAR
-- On BIFF reduce production wildcard -> DOLLAR
-- On BEHAVIORS reduce production wildcard -> DOLLAR
-- On BEHAVIOR reduce production wildcard -> DOLLAR
-- On BASE_ADDR reduce production wildcard -> DOLLAR
-- On AXIOMATIC reduce production wildcard -> DOLLAR
-- On AXIOM reduce production wildcard -> DOLLAR
-- On AUTOMATIC reduce production wildcard -> DOLLAR
-- On AT reduce production wildcard -> DOLLAR
-- On ASSUMES reduce production wildcard -> DOLLAR
-- On ASSIGNS reduce production wildcard -> DOLLAR
-- On ASSERT reduce production wildcard -> DOLLAR
-- On ARROW reduce production wildcard -> DOLLAR
-- On AND reduce production wildcard -> DOLLAR
-- On AMP reduce production wildcard -> DOLLAR
-- On ALLOCATION reduce production wildcard -> DOLLAR
-- On ALLOCATES reduce production wildcard -> DOLLAR
-- On ALLOCABLE reduce production wildcard -> DOLLAR

State 1016:
## Known stack suffix:
## DANGLING
## LR(1) items:
bs_keyword -> DANGLING . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> DANGLING
-- On WITH reduce production bs_keyword -> DANGLING
-- On VOLATILE reduce production bs_keyword -> DANGLING
-- On VOID reduce production bs_keyword -> DANGLING
-- On VARIANT reduce production bs_keyword -> DANGLING
-- On VALID_READ reduce production bs_keyword -> DANGLING
-- On VALID_RANGE reduce production bs_keyword -> DANGLING
-- On VALID_INDEX reduce production bs_keyword -> DANGLING
-- On VALID reduce production bs_keyword -> DANGLING
-- On UNSIGNED reduce production bs_keyword -> DANGLING
-- On UNION reduce production bs_keyword -> DANGLING
-- On UNALLOCATED reduce production bs_keyword -> DANGLING
-- On TYPEOF reduce production bs_keyword -> DANGLING
-- On TYPENAME reduce production bs_keyword -> DANGLING
-- On TYPE reduce production bs_keyword -> DANGLING
-- On TRUE reduce production bs_keyword -> DANGLING
-- On TILDE reduce production bs_keyword -> DANGLING
-- On TERMINATES reduce production bs_keyword -> DANGLING
-- On STRUCT reduce production bs_keyword -> DANGLING
-- On STRING_LITERAL reduce production bs_keyword -> DANGLING
-- On STATIC reduce production bs_keyword -> DANGLING
-- On STAR reduce production bs_keyword -> DANGLING
-- On SLICE reduce production bs_keyword -> DANGLING
-- On SLASH reduce production bs_keyword -> DANGLING
-- On SIZEOF reduce production bs_keyword -> DANGLING
-- On SIGNED reduce production bs_keyword -> DANGLING
-- On SHORT reduce production bs_keyword -> DANGLING
-- On SEPARATED reduce production bs_keyword -> DANGLING
-- On SEMICOLON reduce production bs_keyword -> DANGLING
-- On RSQUARE reduce production bs_keyword -> DANGLING
-- On RPAR reduce production bs_keyword -> DANGLING
-- On RETURNS reduce production bs_keyword -> DANGLING
-- On RESULT reduce production bs_keyword -> DANGLING
-- On REQUIRES reduce production bs_keyword -> DANGLING
-- On REGISTER reduce production bs_keyword -> DANGLING
-- On REAL reduce production bs_keyword -> DANGLING
-- On READS reduce production bs_keyword -> DANGLING
-- On RBRACE reduce production bs_keyword -> DANGLING
-- On QUESTION reduce production bs_keyword -> DANGLING
-- On PREDICATE reduce production bs_keyword -> DANGLING
-- On PRAGMA reduce production bs_keyword -> DANGLING
-- On PLUS reduce production bs_keyword -> DANGLING
-- On PIPE reduce production bs_keyword -> DANGLING
-- On PERCENT reduce production bs_keyword -> DANGLING
-- On OR reduce production bs_keyword -> DANGLING
-- On OLD reduce production bs_keyword -> DANGLING
-- On OFFSET reduce production bs_keyword -> DANGLING
-- On NULL reduce production bs_keyword -> DANGLING
-- On NOTHING reduce production bs_keyword -> DANGLING
-- On NOT reduce production bs_keyword -> DANGLING
-- On NE reduce production bs_keyword -> DANGLING
-- On MODULE reduce production bs_keyword -> DANGLING
-- On MODEL reduce production bs_keyword -> DANGLING
-- On MINUS reduce production bs_keyword -> DANGLING
-- On LTLT reduce production bs_keyword -> DANGLING
-- On LTCOLON reduce production bs_keyword -> DANGLING
-- On LT reduce production bs_keyword -> DANGLING
-- On LSQUARE reduce production bs_keyword -> DANGLING
-- On LPAR reduce production bs_keyword -> DANGLING
-- On LOOP reduce production bs_keyword -> DANGLING
-- On LONG reduce production bs_keyword -> DANGLING
-- On LOGIC reduce production bs_keyword -> DANGLING
-- On LET reduce production bs_keyword -> DANGLING
-- On LEMMA reduce production bs_keyword -> DANGLING
-- On LE reduce production bs_keyword -> DANGLING
-- On LBRACE reduce production bs_keyword -> DANGLING
-- On LAMBDA reduce production bs_keyword -> DANGLING
-- On LABEL reduce production bs_keyword -> DANGLING
-- On INVARIANT reduce production bs_keyword -> DANGLING
-- On INTER reduce production bs_keyword -> DANGLING
-- On INTEGER reduce production bs_keyword -> DANGLING
-- On INT reduce production bs_keyword -> DANGLING
-- On INITIALIZED reduce production bs_keyword -> DANGLING
-- On INDUCTIVE reduce production bs_keyword -> DANGLING
-- On INCLUDE reduce production bs_keyword -> DANGLING
-- On IMPLIES reduce production bs_keyword -> DANGLING
-- On IMPACT reduce production bs_keyword -> DANGLING
-- On IFF reduce production bs_keyword -> DANGLING
-- On IF reduce production bs_keyword -> DANGLING
-- On IDENTIFIER reduce production bs_keyword -> DANGLING
-- On HATHAT reduce production bs_keyword -> DANGLING
-- On HAT reduce production bs_keyword -> DANGLING
-- On GTGT reduce production bs_keyword -> DANGLING
-- On GT reduce production bs_keyword -> DANGLING
-- On GLOBAL reduce production bs_keyword -> DANGLING
-- On GHOST reduce production bs_keyword -> DANGLING
-- On GE reduce production bs_keyword -> DANGLING
-- On FUNCTION reduce production bs_keyword -> DANGLING
-- On FROM reduce production bs_keyword -> DANGLING
-- On FRESH reduce production bs_keyword -> DANGLING
-- On FREES reduce production bs_keyword -> DANGLING
-- On FREEABLE reduce production bs_keyword -> DANGLING
-- On FORALL reduce production bs_keyword -> DANGLING
-- On FOR reduce production bs_keyword -> DANGLING
-- On FLOAT reduce production bs_keyword -> DANGLING
-- On FALSE reduce production bs_keyword -> DANGLING
-- On EXT_LET reduce production bs_keyword -> DANGLING
-- On EXT_AT reduce production bs_keyword -> DANGLING
-- On EXITS reduce production bs_keyword -> DANGLING
-- On EXISTS reduce production bs_keyword -> DANGLING
-- On EQUAL reduce production bs_keyword -> DANGLING
-- On EQ reduce production bs_keyword -> DANGLING
-- On EOF reduce production bs_keyword -> DANGLING
-- On ENUM reduce production bs_keyword -> DANGLING
-- On ENSURES reduce production bs_keyword -> DANGLING
-- On EMPTY reduce production bs_keyword -> DANGLING
-- On ELSE reduce production bs_keyword -> DANGLING
-- On DYNAMIC reduce production bs_keyword -> DANGLING
-- On DOUBLE reduce production bs_keyword -> DANGLING
-- On DOTDOTDOT reduce production bs_keyword -> DANGLING
-- On DOTDOT reduce production bs_keyword -> DANGLING
-- On DOT reduce production bs_keyword -> DANGLING
-- On DOLLAR reduce production bs_keyword -> DANGLING
-- On DISJOINT reduce production bs_keyword -> DANGLING
-- On DECREASES reduce production bs_keyword -> DANGLING
-- On DANGLING reduce production bs_keyword -> DANGLING
-- On CUSTOM reduce production bs_keyword -> DANGLING
-- On CONTRACT reduce production bs_keyword -> DANGLING
-- On CONTINUES reduce production bs_keyword -> DANGLING
-- On CONSTANT10 reduce production bs_keyword -> DANGLING
-- On CONSTANT reduce production bs_keyword -> DANGLING
-- On CONST reduce production bs_keyword -> DANGLING
-- On COMPLETE reduce production bs_keyword -> DANGLING
-- On COMMA reduce production bs_keyword -> DANGLING
-- On COLONGT reduce production bs_keyword -> DANGLING
-- On COLONCOLON reduce production bs_keyword -> DANGLING
-- On COLON2 reduce production bs_keyword -> DANGLING
-- On COLON reduce production bs_keyword -> DANGLING
-- On CHAR reduce production bs_keyword -> DANGLING
-- On CASE reduce production bs_keyword -> DANGLING
-- On BSUNION reduce production bs_keyword -> DANGLING
-- On BSTYPE reduce production bs_keyword -> DANGLING
-- On BREAKS reduce production bs_keyword -> DANGLING
-- On BOOLEAN reduce production bs_keyword -> DANGLING
-- On BOOL reduce production bs_keyword -> DANGLING
-- On BLOCK_LENGTH reduce production bs_keyword -> DANGLING
-- On BIMPLIES reduce production bs_keyword -> DANGLING
-- On BIFF reduce production bs_keyword -> DANGLING
-- On BEHAVIORS reduce production bs_keyword -> DANGLING
-- On BEHAVIOR reduce production bs_keyword -> DANGLING
-- On BASE_ADDR reduce production bs_keyword -> DANGLING
-- On AXIOMATIC reduce production bs_keyword -> DANGLING
-- On AXIOM reduce production bs_keyword -> DANGLING
-- On AUTOMATIC reduce production bs_keyword -> DANGLING
-- On AT reduce production bs_keyword -> DANGLING
-- On ASSUMES reduce production bs_keyword -> DANGLING
-- On ASSIGNS reduce production bs_keyword -> DANGLING
-- On ASSERT reduce production bs_keyword -> DANGLING
-- On ARROW reduce production bs_keyword -> DANGLING
-- On AND reduce production bs_keyword -> DANGLING
-- On AMP reduce production bs_keyword -> DANGLING
-- On ALLOCATION reduce production bs_keyword -> DANGLING
-- On ALLOCATES reduce production bs_keyword -> DANGLING
-- On ALLOCABLE reduce production bs_keyword -> DANGLING

State 1017:
## Known stack suffix:
## CONSTANT10
## LR(1) items:
wildcard -> CONSTANT10 . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> CONSTANT10
-- On WITH reduce production wildcard -> CONSTANT10
-- On VOLATILE reduce production wildcard -> CONSTANT10
-- On VOID reduce production wildcard -> CONSTANT10
-- On VARIANT reduce production wildcard -> CONSTANT10
-- On VALID_READ reduce production wildcard -> CONSTANT10
-- On VALID_RANGE reduce production wildcard -> CONSTANT10
-- On VALID_INDEX reduce production wildcard -> CONSTANT10
-- On VALID reduce production wildcard -> CONSTANT10
-- On UNSIGNED reduce production wildcard -> CONSTANT10
-- On UNION reduce production wildcard -> CONSTANT10
-- On UNALLOCATED reduce production wildcard -> CONSTANT10
-- On TYPEOF reduce production wildcard -> CONSTANT10
-- On TYPENAME reduce production wildcard -> CONSTANT10
-- On TYPE reduce production wildcard -> CONSTANT10
-- On TRUE reduce production wildcard -> CONSTANT10
-- On TILDE reduce production wildcard -> CONSTANT10
-- On TERMINATES reduce production wildcard -> CONSTANT10
-- On STRUCT reduce production wildcard -> CONSTANT10
-- On STRING_LITERAL reduce production wildcard -> CONSTANT10
-- On STATIC reduce production wildcard -> CONSTANT10
-- On STAR reduce production wildcard -> CONSTANT10
-- On SLICE reduce production wildcard -> CONSTANT10
-- On SLASH reduce production wildcard -> CONSTANT10
-- On SIZEOF reduce production wildcard -> CONSTANT10
-- On SIGNED reduce production wildcard -> CONSTANT10
-- On SHORT reduce production wildcard -> CONSTANT10
-- On SEPARATED reduce production wildcard -> CONSTANT10
-- On SEMICOLON reduce production wildcard -> CONSTANT10
-- On RSQUARE reduce production wildcard -> CONSTANT10
-- On RPAR reduce production wildcard -> CONSTANT10
-- On RETURNS reduce production wildcard -> CONSTANT10
-- On RESULT reduce production wildcard -> CONSTANT10
-- On REQUIRES reduce production wildcard -> CONSTANT10
-- On REGISTER reduce production wildcard -> CONSTANT10
-- On REAL reduce production wildcard -> CONSTANT10
-- On READS reduce production wildcard -> CONSTANT10
-- On RBRACE reduce production wildcard -> CONSTANT10
-- On QUESTION reduce production wildcard -> CONSTANT10
-- On PREDICATE reduce production wildcard -> CONSTANT10
-- On PRAGMA reduce production wildcard -> CONSTANT10
-- On PLUS reduce production wildcard -> CONSTANT10
-- On PIPE reduce production wildcard -> CONSTANT10
-- On PERCENT reduce production wildcard -> CONSTANT10
-- On OR reduce production wildcard -> CONSTANT10
-- On OLD reduce production wildcard -> CONSTANT10
-- On OFFSET reduce production wildcard -> CONSTANT10
-- On NULL reduce production wildcard -> CONSTANT10
-- On NOTHING reduce production wildcard -> CONSTANT10
-- On NOT reduce production wildcard -> CONSTANT10
-- On NE reduce production wildcard -> CONSTANT10
-- On MODULE reduce production wildcard -> CONSTANT10
-- On MODEL reduce production wildcard -> CONSTANT10
-- On MINUS reduce production wildcard -> CONSTANT10
-- On LTLT reduce production wildcard -> CONSTANT10
-- On LTCOLON reduce production wildcard -> CONSTANT10
-- On LT reduce production wildcard -> CONSTANT10
-- On LSQUARE reduce production wildcard -> CONSTANT10
-- On LPAR reduce production wildcard -> CONSTANT10
-- On LOOP reduce production wildcard -> CONSTANT10
-- On LONG reduce production wildcard -> CONSTANT10
-- On LOGIC reduce production wildcard -> CONSTANT10
-- On LET reduce production wildcard -> CONSTANT10
-- On LEMMA reduce production wildcard -> CONSTANT10
-- On LE reduce production wildcard -> CONSTANT10
-- On LBRACE reduce production wildcard -> CONSTANT10
-- On LAMBDA reduce production wildcard -> CONSTANT10
-- On LABEL reduce production wildcard -> CONSTANT10
-- On INVARIANT reduce production wildcard -> CONSTANT10
-- On INTER reduce production wildcard -> CONSTANT10
-- On INTEGER reduce production wildcard -> CONSTANT10
-- On INT reduce production wildcard -> CONSTANT10
-- On INITIALIZED reduce production wildcard -> CONSTANT10
-- On INDUCTIVE reduce production wildcard -> CONSTANT10
-- On INCLUDE reduce production wildcard -> CONSTANT10
-- On IMPLIES reduce production wildcard -> CONSTANT10
-- On IMPACT reduce production wildcard -> CONSTANT10
-- On IFF reduce production wildcard -> CONSTANT10
-- On IF reduce production wildcard -> CONSTANT10
-- On IDENTIFIER reduce production wildcard -> CONSTANT10
-- On HATHAT reduce production wildcard -> CONSTANT10
-- On HAT reduce production wildcard -> CONSTANT10
-- On GTGT reduce production wildcard -> CONSTANT10
-- On GT reduce production wildcard -> CONSTANT10
-- On GLOBAL reduce production wildcard -> CONSTANT10
-- On GHOST reduce production wildcard -> CONSTANT10
-- On GE reduce production wildcard -> CONSTANT10
-- On FUNCTION reduce production wildcard -> CONSTANT10
-- On FROM reduce production wildcard -> CONSTANT10
-- On FRESH reduce production wildcard -> CONSTANT10
-- On FREES reduce production wildcard -> CONSTANT10
-- On FREEABLE reduce production wildcard -> CONSTANT10
-- On FORALL reduce production wildcard -> CONSTANT10
-- On FOR reduce production wildcard -> CONSTANT10
-- On FLOAT reduce production wildcard -> CONSTANT10
-- On FALSE reduce production wildcard -> CONSTANT10
-- On EXT_LET reduce production wildcard -> CONSTANT10
-- On EXT_AT reduce production wildcard -> CONSTANT10
-- On EXITS reduce production wildcard -> CONSTANT10
-- On EXISTS reduce production wildcard -> CONSTANT10
-- On EQUAL reduce production wildcard -> CONSTANT10
-- On EQ reduce production wildcard -> CONSTANT10
-- On EOF reduce production wildcard -> CONSTANT10
-- On ENUM reduce production wildcard -> CONSTANT10
-- On ENSURES reduce production wildcard -> CONSTANT10
-- On EMPTY reduce production wildcard -> CONSTANT10
-- On ELSE reduce production wildcard -> CONSTANT10
-- On DYNAMIC reduce production wildcard -> CONSTANT10
-- On DOUBLE reduce production wildcard -> CONSTANT10
-- On DOTDOTDOT reduce production wildcard -> CONSTANT10
-- On DOTDOT reduce production wildcard -> CONSTANT10
-- On DOT reduce production wildcard -> CONSTANT10
-- On DOLLAR reduce production wildcard -> CONSTANT10
-- On DISJOINT reduce production wildcard -> CONSTANT10
-- On DECREASES reduce production wildcard -> CONSTANT10
-- On DANGLING reduce production wildcard -> CONSTANT10
-- On CUSTOM reduce production wildcard -> CONSTANT10
-- On CONTRACT reduce production wildcard -> CONSTANT10
-- On CONTINUES reduce production wildcard -> CONSTANT10
-- On CONSTANT10 reduce production wildcard -> CONSTANT10
-- On CONSTANT reduce production wildcard -> CONSTANT10
-- On CONST reduce production wildcard -> CONSTANT10
-- On COMPLETE reduce production wildcard -> CONSTANT10
-- On COMMA reduce production wildcard -> CONSTANT10
-- On COLONGT reduce production wildcard -> CONSTANT10
-- On COLONCOLON reduce production wildcard -> CONSTANT10
-- On COLON2 reduce production wildcard -> CONSTANT10
-- On COLON reduce production wildcard -> CONSTANT10
-- On CHAR reduce production wildcard -> CONSTANT10
-- On CASE reduce production wildcard -> CONSTANT10
-- On BSUNION reduce production wildcard -> CONSTANT10
-- On BSTYPE reduce production wildcard -> CONSTANT10
-- On BREAKS reduce production wildcard -> CONSTANT10
-- On BOOLEAN reduce production wildcard -> CONSTANT10
-- On BOOL reduce production wildcard -> CONSTANT10
-- On BLOCK_LENGTH reduce production wildcard -> CONSTANT10
-- On BIMPLIES reduce production wildcard -> CONSTANT10
-- On BIFF reduce production wildcard -> CONSTANT10
-- On BEHAVIORS reduce production wildcard -> CONSTANT10
-- On BEHAVIOR reduce production wildcard -> CONSTANT10
-- On BASE_ADDR reduce production wildcard -> CONSTANT10
-- On AXIOMATIC reduce production wildcard -> CONSTANT10
-- On AXIOM reduce production wildcard -> CONSTANT10
-- On AUTOMATIC reduce production wildcard -> CONSTANT10
-- On AT reduce production wildcard -> CONSTANT10
-- On ASSUMES reduce production wildcard -> CONSTANT10
-- On ASSIGNS reduce production wildcard -> CONSTANT10
-- On ASSERT reduce production wildcard -> CONSTANT10
-- On ARROW reduce production wildcard -> CONSTANT10
-- On AND reduce production wildcard -> CONSTANT10
-- On AMP reduce production wildcard -> CONSTANT10
-- On ALLOCATION reduce production wildcard -> CONSTANT10
-- On ALLOCATES reduce production wildcard -> CONSTANT10
-- On ALLOCABLE reduce production wildcard -> CONSTANT10

State 1018:
## Known stack suffix:
## CONSTANT
## LR(1) items:
wildcard -> CONSTANT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> CONSTANT
-- On WITH reduce production wildcard -> CONSTANT
-- On VOLATILE reduce production wildcard -> CONSTANT
-- On VOID reduce production wildcard -> CONSTANT
-- On VARIANT reduce production wildcard -> CONSTANT
-- On VALID_READ reduce production wildcard -> CONSTANT
-- On VALID_RANGE reduce production wildcard -> CONSTANT
-- On VALID_INDEX reduce production wildcard -> CONSTANT
-- On VALID reduce production wildcard -> CONSTANT
-- On UNSIGNED reduce production wildcard -> CONSTANT
-- On UNION reduce production wildcard -> CONSTANT
-- On UNALLOCATED reduce production wildcard -> CONSTANT
-- On TYPEOF reduce production wildcard -> CONSTANT
-- On TYPENAME reduce production wildcard -> CONSTANT
-- On TYPE reduce production wildcard -> CONSTANT
-- On TRUE reduce production wildcard -> CONSTANT
-- On TILDE reduce production wildcard -> CONSTANT
-- On TERMINATES reduce production wildcard -> CONSTANT
-- On STRUCT reduce production wildcard -> CONSTANT
-- On STRING_LITERAL reduce production wildcard -> CONSTANT
-- On STATIC reduce production wildcard -> CONSTANT
-- On STAR reduce production wildcard -> CONSTANT
-- On SLICE reduce production wildcard -> CONSTANT
-- On SLASH reduce production wildcard -> CONSTANT
-- On SIZEOF reduce production wildcard -> CONSTANT
-- On SIGNED reduce production wildcard -> CONSTANT
-- On SHORT reduce production wildcard -> CONSTANT
-- On SEPARATED reduce production wildcard -> CONSTANT
-- On SEMICOLON reduce production wildcard -> CONSTANT
-- On RSQUARE reduce production wildcard -> CONSTANT
-- On RPAR reduce production wildcard -> CONSTANT
-- On RETURNS reduce production wildcard -> CONSTANT
-- On RESULT reduce production wildcard -> CONSTANT
-- On REQUIRES reduce production wildcard -> CONSTANT
-- On REGISTER reduce production wildcard -> CONSTANT
-- On REAL reduce production wildcard -> CONSTANT
-- On READS reduce production wildcard -> CONSTANT
-- On RBRACE reduce production wildcard -> CONSTANT
-- On QUESTION reduce production wildcard -> CONSTANT
-- On PREDICATE reduce production wildcard -> CONSTANT
-- On PRAGMA reduce production wildcard -> CONSTANT
-- On PLUS reduce production wildcard -> CONSTANT
-- On PIPE reduce production wildcard -> CONSTANT
-- On PERCENT reduce production wildcard -> CONSTANT
-- On OR reduce production wildcard -> CONSTANT
-- On OLD reduce production wildcard -> CONSTANT
-- On OFFSET reduce production wildcard -> CONSTANT
-- On NULL reduce production wildcard -> CONSTANT
-- On NOTHING reduce production wildcard -> CONSTANT
-- On NOT reduce production wildcard -> CONSTANT
-- On NE reduce production wildcard -> CONSTANT
-- On MODULE reduce production wildcard -> CONSTANT
-- On MODEL reduce production wildcard -> CONSTANT
-- On MINUS reduce production wildcard -> CONSTANT
-- On LTLT reduce production wildcard -> CONSTANT
-- On LTCOLON reduce production wildcard -> CONSTANT
-- On LT reduce production wildcard -> CONSTANT
-- On LSQUARE reduce production wildcard -> CONSTANT
-- On LPAR reduce production wildcard -> CONSTANT
-- On LOOP reduce production wildcard -> CONSTANT
-- On LONG reduce production wildcard -> CONSTANT
-- On LOGIC reduce production wildcard -> CONSTANT
-- On LET reduce production wildcard -> CONSTANT
-- On LEMMA reduce production wildcard -> CONSTANT
-- On LE reduce production wildcard -> CONSTANT
-- On LBRACE reduce production wildcard -> CONSTANT
-- On LAMBDA reduce production wildcard -> CONSTANT
-- On LABEL reduce production wildcard -> CONSTANT
-- On INVARIANT reduce production wildcard -> CONSTANT
-- On INTER reduce production wildcard -> CONSTANT
-- On INTEGER reduce production wildcard -> CONSTANT
-- On INT reduce production wildcard -> CONSTANT
-- On INITIALIZED reduce production wildcard -> CONSTANT
-- On INDUCTIVE reduce production wildcard -> CONSTANT
-- On INCLUDE reduce production wildcard -> CONSTANT
-- On IMPLIES reduce production wildcard -> CONSTANT
-- On IMPACT reduce production wildcard -> CONSTANT
-- On IFF reduce production wildcard -> CONSTANT
-- On IF reduce production wildcard -> CONSTANT
-- On IDENTIFIER reduce production wildcard -> CONSTANT
-- On HATHAT reduce production wildcard -> CONSTANT
-- On HAT reduce production wildcard -> CONSTANT
-- On GTGT reduce production wildcard -> CONSTANT
-- On GT reduce production wildcard -> CONSTANT
-- On GLOBAL reduce production wildcard -> CONSTANT
-- On GHOST reduce production wildcard -> CONSTANT
-- On GE reduce production wildcard -> CONSTANT
-- On FUNCTION reduce production wildcard -> CONSTANT
-- On FROM reduce production wildcard -> CONSTANT
-- On FRESH reduce production wildcard -> CONSTANT
-- On FREES reduce production wildcard -> CONSTANT
-- On FREEABLE reduce production wildcard -> CONSTANT
-- On FORALL reduce production wildcard -> CONSTANT
-- On FOR reduce production wildcard -> CONSTANT
-- On FLOAT reduce production wildcard -> CONSTANT
-- On FALSE reduce production wildcard -> CONSTANT
-- On EXT_LET reduce production wildcard -> CONSTANT
-- On EXT_AT reduce production wildcard -> CONSTANT
-- On EXITS reduce production wildcard -> CONSTANT
-- On EXISTS reduce production wildcard -> CONSTANT
-- On EQUAL reduce production wildcard -> CONSTANT
-- On EQ reduce production wildcard -> CONSTANT
-- On EOF reduce production wildcard -> CONSTANT
-- On ENUM reduce production wildcard -> CONSTANT
-- On ENSURES reduce production wildcard -> CONSTANT
-- On EMPTY reduce production wildcard -> CONSTANT
-- On ELSE reduce production wildcard -> CONSTANT
-- On DYNAMIC reduce production wildcard -> CONSTANT
-- On DOUBLE reduce production wildcard -> CONSTANT
-- On DOTDOTDOT reduce production wildcard -> CONSTANT
-- On DOTDOT reduce production wildcard -> CONSTANT
-- On DOT reduce production wildcard -> CONSTANT
-- On DOLLAR reduce production wildcard -> CONSTANT
-- On DISJOINT reduce production wildcard -> CONSTANT
-- On DECREASES reduce production wildcard -> CONSTANT
-- On DANGLING reduce production wildcard -> CONSTANT
-- On CUSTOM reduce production wildcard -> CONSTANT
-- On CONTRACT reduce production wildcard -> CONSTANT
-- On CONTINUES reduce production wildcard -> CONSTANT
-- On CONSTANT10 reduce production wildcard -> CONSTANT
-- On CONSTANT reduce production wildcard -> CONSTANT
-- On CONST reduce production wildcard -> CONSTANT
-- On COMPLETE reduce production wildcard -> CONSTANT
-- On COMMA reduce production wildcard -> CONSTANT
-- On COLONGT reduce production wildcard -> CONSTANT
-- On COLONCOLON reduce production wildcard -> CONSTANT
-- On COLON2 reduce production wildcard -> CONSTANT
-- On COLON reduce production wildcard -> CONSTANT
-- On CHAR reduce production wildcard -> CONSTANT
-- On CASE reduce production wildcard -> CONSTANT
-- On BSUNION reduce production wildcard -> CONSTANT
-- On BSTYPE reduce production wildcard -> CONSTANT
-- On BREAKS reduce production wildcard -> CONSTANT
-- On BOOLEAN reduce production wildcard -> CONSTANT
-- On BOOL reduce production wildcard -> CONSTANT
-- On BLOCK_LENGTH reduce production wildcard -> CONSTANT
-- On BIMPLIES reduce production wildcard -> CONSTANT
-- On BIFF reduce production wildcard -> CONSTANT
-- On BEHAVIORS reduce production wildcard -> CONSTANT
-- On BEHAVIOR reduce production wildcard -> CONSTANT
-- On BASE_ADDR reduce production wildcard -> CONSTANT
-- On AXIOMATIC reduce production wildcard -> CONSTANT
-- On AXIOM reduce production wildcard -> CONSTANT
-- On AUTOMATIC reduce production wildcard -> CONSTANT
-- On AT reduce production wildcard -> CONSTANT
-- On ASSUMES reduce production wildcard -> CONSTANT
-- On ASSIGNS reduce production wildcard -> CONSTANT
-- On ASSERT reduce production wildcard -> CONSTANT
-- On ARROW reduce production wildcard -> CONSTANT
-- On AND reduce production wildcard -> CONSTANT
-- On AMP reduce production wildcard -> CONSTANT
-- On ALLOCATION reduce production wildcard -> CONSTANT
-- On ALLOCATES reduce production wildcard -> CONSTANT
-- On ALLOCABLE reduce production wildcard -> CONSTANT

State 1019:
## Known stack suffix:
## COMMA
## LR(1) items:
wildcard -> COMMA . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> COMMA
-- On WITH reduce production wildcard -> COMMA
-- On VOLATILE reduce production wildcard -> COMMA
-- On VOID reduce production wildcard -> COMMA
-- On VARIANT reduce production wildcard -> COMMA
-- On VALID_READ reduce production wildcard -> COMMA
-- On VALID_RANGE reduce production wildcard -> COMMA
-- On VALID_INDEX reduce production wildcard -> COMMA
-- On VALID reduce production wildcard -> COMMA
-- On UNSIGNED reduce production wildcard -> COMMA
-- On UNION reduce production wildcard -> COMMA
-- On UNALLOCATED reduce production wildcard -> COMMA
-- On TYPEOF reduce production wildcard -> COMMA
-- On TYPENAME reduce production wildcard -> COMMA
-- On TYPE reduce production wildcard -> COMMA
-- On TRUE reduce production wildcard -> COMMA
-- On TILDE reduce production wildcard -> COMMA
-- On TERMINATES reduce production wildcard -> COMMA
-- On STRUCT reduce production wildcard -> COMMA
-- On STRING_LITERAL reduce production wildcard -> COMMA
-- On STATIC reduce production wildcard -> COMMA
-- On STAR reduce production wildcard -> COMMA
-- On SLICE reduce production wildcard -> COMMA
-- On SLASH reduce production wildcard -> COMMA
-- On SIZEOF reduce production wildcard -> COMMA
-- On SIGNED reduce production wildcard -> COMMA
-- On SHORT reduce production wildcard -> COMMA
-- On SEPARATED reduce production wildcard -> COMMA
-- On SEMICOLON reduce production wildcard -> COMMA
-- On RSQUARE reduce production wildcard -> COMMA
-- On RPAR reduce production wildcard -> COMMA
-- On RETURNS reduce production wildcard -> COMMA
-- On RESULT reduce production wildcard -> COMMA
-- On REQUIRES reduce production wildcard -> COMMA
-- On REGISTER reduce production wildcard -> COMMA
-- On REAL reduce production wildcard -> COMMA
-- On READS reduce production wildcard -> COMMA
-- On RBRACE reduce production wildcard -> COMMA
-- On QUESTION reduce production wildcard -> COMMA
-- On PREDICATE reduce production wildcard -> COMMA
-- On PRAGMA reduce production wildcard -> COMMA
-- On PLUS reduce production wildcard -> COMMA
-- On PIPE reduce production wildcard -> COMMA
-- On PERCENT reduce production wildcard -> COMMA
-- On OR reduce production wildcard -> COMMA
-- On OLD reduce production wildcard -> COMMA
-- On OFFSET reduce production wildcard -> COMMA
-- On NULL reduce production wildcard -> COMMA
-- On NOTHING reduce production wildcard -> COMMA
-- On NOT reduce production wildcard -> COMMA
-- On NE reduce production wildcard -> COMMA
-- On MODULE reduce production wildcard -> COMMA
-- On MODEL reduce production wildcard -> COMMA
-- On MINUS reduce production wildcard -> COMMA
-- On LTLT reduce production wildcard -> COMMA
-- On LTCOLON reduce production wildcard -> COMMA
-- On LT reduce production wildcard -> COMMA
-- On LSQUARE reduce production wildcard -> COMMA
-- On LPAR reduce production wildcard -> COMMA
-- On LOOP reduce production wildcard -> COMMA
-- On LONG reduce production wildcard -> COMMA
-- On LOGIC reduce production wildcard -> COMMA
-- On LET reduce production wildcard -> COMMA
-- On LEMMA reduce production wildcard -> COMMA
-- On LE reduce production wildcard -> COMMA
-- On LBRACE reduce production wildcard -> COMMA
-- On LAMBDA reduce production wildcard -> COMMA
-- On LABEL reduce production wildcard -> COMMA
-- On INVARIANT reduce production wildcard -> COMMA
-- On INTER reduce production wildcard -> COMMA
-- On INTEGER reduce production wildcard -> COMMA
-- On INT reduce production wildcard -> COMMA
-- On INITIALIZED reduce production wildcard -> COMMA
-- On INDUCTIVE reduce production wildcard -> COMMA
-- On INCLUDE reduce production wildcard -> COMMA
-- On IMPLIES reduce production wildcard -> COMMA
-- On IMPACT reduce production wildcard -> COMMA
-- On IFF reduce production wildcard -> COMMA
-- On IF reduce production wildcard -> COMMA
-- On IDENTIFIER reduce production wildcard -> COMMA
-- On HATHAT reduce production wildcard -> COMMA
-- On HAT reduce production wildcard -> COMMA
-- On GTGT reduce production wildcard -> COMMA
-- On GT reduce production wildcard -> COMMA
-- On GLOBAL reduce production wildcard -> COMMA
-- On GHOST reduce production wildcard -> COMMA
-- On GE reduce production wildcard -> COMMA
-- On FUNCTION reduce production wildcard -> COMMA
-- On FROM reduce production wildcard -> COMMA
-- On FRESH reduce production wildcard -> COMMA
-- On FREES reduce production wildcard -> COMMA
-- On FREEABLE reduce production wildcard -> COMMA
-- On FORALL reduce production wildcard -> COMMA
-- On FOR reduce production wildcard -> COMMA
-- On FLOAT reduce production wildcard -> COMMA
-- On FALSE reduce production wildcard -> COMMA
-- On EXT_LET reduce production wildcard -> COMMA
-- On EXT_AT reduce production wildcard -> COMMA
-- On EXITS reduce production wildcard -> COMMA
-- On EXISTS reduce production wildcard -> COMMA
-- On EQUAL reduce production wildcard -> COMMA
-- On EQ reduce production wildcard -> COMMA
-- On EOF reduce production wildcard -> COMMA
-- On ENUM reduce production wildcard -> COMMA
-- On ENSURES reduce production wildcard -> COMMA
-- On EMPTY reduce production wildcard -> COMMA
-- On ELSE reduce production wildcard -> COMMA
-- On DYNAMIC reduce production wildcard -> COMMA
-- On DOUBLE reduce production wildcard -> COMMA
-- On DOTDOTDOT reduce production wildcard -> COMMA
-- On DOTDOT reduce production wildcard -> COMMA
-- On DOT reduce production wildcard -> COMMA
-- On DOLLAR reduce production wildcard -> COMMA
-- On DISJOINT reduce production wildcard -> COMMA
-- On DECREASES reduce production wildcard -> COMMA
-- On DANGLING reduce production wildcard -> COMMA
-- On CUSTOM reduce production wildcard -> COMMA
-- On CONTRACT reduce production wildcard -> COMMA
-- On CONTINUES reduce production wildcard -> COMMA
-- On CONSTANT10 reduce production wildcard -> COMMA
-- On CONSTANT reduce production wildcard -> COMMA
-- On CONST reduce production wildcard -> COMMA
-- On COMPLETE reduce production wildcard -> COMMA
-- On COMMA reduce production wildcard -> COMMA
-- On COLONGT reduce production wildcard -> COMMA
-- On COLONCOLON reduce production wildcard -> COMMA
-- On COLON2 reduce production wildcard -> COMMA
-- On COLON reduce production wildcard -> COMMA
-- On CHAR reduce production wildcard -> COMMA
-- On CASE reduce production wildcard -> COMMA
-- On BSUNION reduce production wildcard -> COMMA
-- On BSTYPE reduce production wildcard -> COMMA
-- On BREAKS reduce production wildcard -> COMMA
-- On BOOLEAN reduce production wildcard -> COMMA
-- On BOOL reduce production wildcard -> COMMA
-- On BLOCK_LENGTH reduce production wildcard -> COMMA
-- On BIMPLIES reduce production wildcard -> COMMA
-- On BIFF reduce production wildcard -> COMMA
-- On BEHAVIORS reduce production wildcard -> COMMA
-- On BEHAVIOR reduce production wildcard -> COMMA
-- On BASE_ADDR reduce production wildcard -> COMMA
-- On AXIOMATIC reduce production wildcard -> COMMA
-- On AXIOM reduce production wildcard -> COMMA
-- On AUTOMATIC reduce production wildcard -> COMMA
-- On AT reduce production wildcard -> COMMA
-- On ASSUMES reduce production wildcard -> COMMA
-- On ASSIGNS reduce production wildcard -> COMMA
-- On ASSERT reduce production wildcard -> COMMA
-- On ARROW reduce production wildcard -> COMMA
-- On AND reduce production wildcard -> COMMA
-- On AMP reduce production wildcard -> COMMA
-- On ALLOCATION reduce production wildcard -> COMMA
-- On ALLOCATES reduce production wildcard -> COMMA
-- On ALLOCABLE reduce production wildcard -> COMMA

State 1020:
## Known stack suffix:
## COLONGT
## LR(1) items:
wildcard -> COLONGT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> COLONGT
-- On WITH reduce production wildcard -> COLONGT
-- On VOLATILE reduce production wildcard -> COLONGT
-- On VOID reduce production wildcard -> COLONGT
-- On VARIANT reduce production wildcard -> COLONGT
-- On VALID_READ reduce production wildcard -> COLONGT
-- On VALID_RANGE reduce production wildcard -> COLONGT
-- On VALID_INDEX reduce production wildcard -> COLONGT
-- On VALID reduce production wildcard -> COLONGT
-- On UNSIGNED reduce production wildcard -> COLONGT
-- On UNION reduce production wildcard -> COLONGT
-- On UNALLOCATED reduce production wildcard -> COLONGT
-- On TYPEOF reduce production wildcard -> COLONGT
-- On TYPENAME reduce production wildcard -> COLONGT
-- On TYPE reduce production wildcard -> COLONGT
-- On TRUE reduce production wildcard -> COLONGT
-- On TILDE reduce production wildcard -> COLONGT
-- On TERMINATES reduce production wildcard -> COLONGT
-- On STRUCT reduce production wildcard -> COLONGT
-- On STRING_LITERAL reduce production wildcard -> COLONGT
-- On STATIC reduce production wildcard -> COLONGT
-- On STAR reduce production wildcard -> COLONGT
-- On SLICE reduce production wildcard -> COLONGT
-- On SLASH reduce production wildcard -> COLONGT
-- On SIZEOF reduce production wildcard -> COLONGT
-- On SIGNED reduce production wildcard -> COLONGT
-- On SHORT reduce production wildcard -> COLONGT
-- On SEPARATED reduce production wildcard -> COLONGT
-- On SEMICOLON reduce production wildcard -> COLONGT
-- On RSQUARE reduce production wildcard -> COLONGT
-- On RPAR reduce production wildcard -> COLONGT
-- On RETURNS reduce production wildcard -> COLONGT
-- On RESULT reduce production wildcard -> COLONGT
-- On REQUIRES reduce production wildcard -> COLONGT
-- On REGISTER reduce production wildcard -> COLONGT
-- On REAL reduce production wildcard -> COLONGT
-- On READS reduce production wildcard -> COLONGT
-- On RBRACE reduce production wildcard -> COLONGT
-- On QUESTION reduce production wildcard -> COLONGT
-- On PREDICATE reduce production wildcard -> COLONGT
-- On PRAGMA reduce production wildcard -> COLONGT
-- On PLUS reduce production wildcard -> COLONGT
-- On PIPE reduce production wildcard -> COLONGT
-- On PERCENT reduce production wildcard -> COLONGT
-- On OR reduce production wildcard -> COLONGT
-- On OLD reduce production wildcard -> COLONGT
-- On OFFSET reduce production wildcard -> COLONGT
-- On NULL reduce production wildcard -> COLONGT
-- On NOTHING reduce production wildcard -> COLONGT
-- On NOT reduce production wildcard -> COLONGT
-- On NE reduce production wildcard -> COLONGT
-- On MODULE reduce production wildcard -> COLONGT
-- On MODEL reduce production wildcard -> COLONGT
-- On MINUS reduce production wildcard -> COLONGT
-- On LTLT reduce production wildcard -> COLONGT
-- On LTCOLON reduce production wildcard -> COLONGT
-- On LT reduce production wildcard -> COLONGT
-- On LSQUARE reduce production wildcard -> COLONGT
-- On LPAR reduce production wildcard -> COLONGT
-- On LOOP reduce production wildcard -> COLONGT
-- On LONG reduce production wildcard -> COLONGT
-- On LOGIC reduce production wildcard -> COLONGT
-- On LET reduce production wildcard -> COLONGT
-- On LEMMA reduce production wildcard -> COLONGT
-- On LE reduce production wildcard -> COLONGT
-- On LBRACE reduce production wildcard -> COLONGT
-- On LAMBDA reduce production wildcard -> COLONGT
-- On LABEL reduce production wildcard -> COLONGT
-- On INVARIANT reduce production wildcard -> COLONGT
-- On INTER reduce production wildcard -> COLONGT
-- On INTEGER reduce production wildcard -> COLONGT
-- On INT reduce production wildcard -> COLONGT
-- On INITIALIZED reduce production wildcard -> COLONGT
-- On INDUCTIVE reduce production wildcard -> COLONGT
-- On INCLUDE reduce production wildcard -> COLONGT
-- On IMPLIES reduce production wildcard -> COLONGT
-- On IMPACT reduce production wildcard -> COLONGT
-- On IFF reduce production wildcard -> COLONGT
-- On IF reduce production wildcard -> COLONGT
-- On IDENTIFIER reduce production wildcard -> COLONGT
-- On HATHAT reduce production wildcard -> COLONGT
-- On HAT reduce production wildcard -> COLONGT
-- On GTGT reduce production wildcard -> COLONGT
-- On GT reduce production wildcard -> COLONGT
-- On GLOBAL reduce production wildcard -> COLONGT
-- On GHOST reduce production wildcard -> COLONGT
-- On GE reduce production wildcard -> COLONGT
-- On FUNCTION reduce production wildcard -> COLONGT
-- On FROM reduce production wildcard -> COLONGT
-- On FRESH reduce production wildcard -> COLONGT
-- On FREES reduce production wildcard -> COLONGT
-- On FREEABLE reduce production wildcard -> COLONGT
-- On FORALL reduce production wildcard -> COLONGT
-- On FOR reduce production wildcard -> COLONGT
-- On FLOAT reduce production wildcard -> COLONGT
-- On FALSE reduce production wildcard -> COLONGT
-- On EXT_LET reduce production wildcard -> COLONGT
-- On EXT_AT reduce production wildcard -> COLONGT
-- On EXITS reduce production wildcard -> COLONGT
-- On EXISTS reduce production wildcard -> COLONGT
-- On EQUAL reduce production wildcard -> COLONGT
-- On EQ reduce production wildcard -> COLONGT
-- On EOF reduce production wildcard -> COLONGT
-- On ENUM reduce production wildcard -> COLONGT
-- On ENSURES reduce production wildcard -> COLONGT
-- On EMPTY reduce production wildcard -> COLONGT
-- On ELSE reduce production wildcard -> COLONGT
-- On DYNAMIC reduce production wildcard -> COLONGT
-- On DOUBLE reduce production wildcard -> COLONGT
-- On DOTDOTDOT reduce production wildcard -> COLONGT
-- On DOTDOT reduce production wildcard -> COLONGT
-- On DOT reduce production wildcard -> COLONGT
-- On DOLLAR reduce production wildcard -> COLONGT
-- On DISJOINT reduce production wildcard -> COLONGT
-- On DECREASES reduce production wildcard -> COLONGT
-- On DANGLING reduce production wildcard -> COLONGT
-- On CUSTOM reduce production wildcard -> COLONGT
-- On CONTRACT reduce production wildcard -> COLONGT
-- On CONTINUES reduce production wildcard -> COLONGT
-- On CONSTANT10 reduce production wildcard -> COLONGT
-- On CONSTANT reduce production wildcard -> COLONGT
-- On CONST reduce production wildcard -> COLONGT
-- On COMPLETE reduce production wildcard -> COLONGT
-- On COMMA reduce production wildcard -> COLONGT
-- On COLONGT reduce production wildcard -> COLONGT
-- On COLONCOLON reduce production wildcard -> COLONGT
-- On COLON2 reduce production wildcard -> COLONGT
-- On COLON reduce production wildcard -> COLONGT
-- On CHAR reduce production wildcard -> COLONGT
-- On CASE reduce production wildcard -> COLONGT
-- On BSUNION reduce production wildcard -> COLONGT
-- On BSTYPE reduce production wildcard -> COLONGT
-- On BREAKS reduce production wildcard -> COLONGT
-- On BOOLEAN reduce production wildcard -> COLONGT
-- On BOOL reduce production wildcard -> COLONGT
-- On BLOCK_LENGTH reduce production wildcard -> COLONGT
-- On BIMPLIES reduce production wildcard -> COLONGT
-- On BIFF reduce production wildcard -> COLONGT
-- On BEHAVIORS reduce production wildcard -> COLONGT
-- On BEHAVIOR reduce production wildcard -> COLONGT
-- On BASE_ADDR reduce production wildcard -> COLONGT
-- On AXIOMATIC reduce production wildcard -> COLONGT
-- On AXIOM reduce production wildcard -> COLONGT
-- On AUTOMATIC reduce production wildcard -> COLONGT
-- On AT reduce production wildcard -> COLONGT
-- On ASSUMES reduce production wildcard -> COLONGT
-- On ASSIGNS reduce production wildcard -> COLONGT
-- On ASSERT reduce production wildcard -> COLONGT
-- On ARROW reduce production wildcard -> COLONGT
-- On AND reduce production wildcard -> COLONGT
-- On AMP reduce production wildcard -> COLONGT
-- On ALLOCATION reduce production wildcard -> COLONGT
-- On ALLOCATES reduce production wildcard -> COLONGT
-- On ALLOCABLE reduce production wildcard -> COLONGT

State 1021:
## Known stack suffix:
## COLONCOLON
## LR(1) items:
wildcard -> COLONCOLON . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> COLONCOLON
-- On WITH reduce production wildcard -> COLONCOLON
-- On VOLATILE reduce production wildcard -> COLONCOLON
-- On VOID reduce production wildcard -> COLONCOLON
-- On VARIANT reduce production wildcard -> COLONCOLON
-- On VALID_READ reduce production wildcard -> COLONCOLON
-- On VALID_RANGE reduce production wildcard -> COLONCOLON
-- On VALID_INDEX reduce production wildcard -> COLONCOLON
-- On VALID reduce production wildcard -> COLONCOLON
-- On UNSIGNED reduce production wildcard -> COLONCOLON
-- On UNION reduce production wildcard -> COLONCOLON
-- On UNALLOCATED reduce production wildcard -> COLONCOLON
-- On TYPEOF reduce production wildcard -> COLONCOLON
-- On TYPENAME reduce production wildcard -> COLONCOLON
-- On TYPE reduce production wildcard -> COLONCOLON
-- On TRUE reduce production wildcard -> COLONCOLON
-- On TILDE reduce production wildcard -> COLONCOLON
-- On TERMINATES reduce production wildcard -> COLONCOLON
-- On STRUCT reduce production wildcard -> COLONCOLON
-- On STRING_LITERAL reduce production wildcard -> COLONCOLON
-- On STATIC reduce production wildcard -> COLONCOLON
-- On STAR reduce production wildcard -> COLONCOLON
-- On SLICE reduce production wildcard -> COLONCOLON
-- On SLASH reduce production wildcard -> COLONCOLON
-- On SIZEOF reduce production wildcard -> COLONCOLON
-- On SIGNED reduce production wildcard -> COLONCOLON
-- On SHORT reduce production wildcard -> COLONCOLON
-- On SEPARATED reduce production wildcard -> COLONCOLON
-- On SEMICOLON reduce production wildcard -> COLONCOLON
-- On RSQUARE reduce production wildcard -> COLONCOLON
-- On RPAR reduce production wildcard -> COLONCOLON
-- On RETURNS reduce production wildcard -> COLONCOLON
-- On RESULT reduce production wildcard -> COLONCOLON
-- On REQUIRES reduce production wildcard -> COLONCOLON
-- On REGISTER reduce production wildcard -> COLONCOLON
-- On REAL reduce production wildcard -> COLONCOLON
-- On READS reduce production wildcard -> COLONCOLON
-- On RBRACE reduce production wildcard -> COLONCOLON
-- On QUESTION reduce production wildcard -> COLONCOLON
-- On PREDICATE reduce production wildcard -> COLONCOLON
-- On PRAGMA reduce production wildcard -> COLONCOLON
-- On PLUS reduce production wildcard -> COLONCOLON
-- On PIPE reduce production wildcard -> COLONCOLON
-- On PERCENT reduce production wildcard -> COLONCOLON
-- On OR reduce production wildcard -> COLONCOLON
-- On OLD reduce production wildcard -> COLONCOLON
-- On OFFSET reduce production wildcard -> COLONCOLON
-- On NULL reduce production wildcard -> COLONCOLON
-- On NOTHING reduce production wildcard -> COLONCOLON
-- On NOT reduce production wildcard -> COLONCOLON
-- On NE reduce production wildcard -> COLONCOLON
-- On MODULE reduce production wildcard -> COLONCOLON
-- On MODEL reduce production wildcard -> COLONCOLON
-- On MINUS reduce production wildcard -> COLONCOLON
-- On LTLT reduce production wildcard -> COLONCOLON
-- On LTCOLON reduce production wildcard -> COLONCOLON
-- On LT reduce production wildcard -> COLONCOLON
-- On LSQUARE reduce production wildcard -> COLONCOLON
-- On LPAR reduce production wildcard -> COLONCOLON
-- On LOOP reduce production wildcard -> COLONCOLON
-- On LONG reduce production wildcard -> COLONCOLON
-- On LOGIC reduce production wildcard -> COLONCOLON
-- On LET reduce production wildcard -> COLONCOLON
-- On LEMMA reduce production wildcard -> COLONCOLON
-- On LE reduce production wildcard -> COLONCOLON
-- On LBRACE reduce production wildcard -> COLONCOLON
-- On LAMBDA reduce production wildcard -> COLONCOLON
-- On LABEL reduce production wildcard -> COLONCOLON
-- On INVARIANT reduce production wildcard -> COLONCOLON
-- On INTER reduce production wildcard -> COLONCOLON
-- On INTEGER reduce production wildcard -> COLONCOLON
-- On INT reduce production wildcard -> COLONCOLON
-- On INITIALIZED reduce production wildcard -> COLONCOLON
-- On INDUCTIVE reduce production wildcard -> COLONCOLON
-- On INCLUDE reduce production wildcard -> COLONCOLON
-- On IMPLIES reduce production wildcard -> COLONCOLON
-- On IMPACT reduce production wildcard -> COLONCOLON
-- On IFF reduce production wildcard -> COLONCOLON
-- On IF reduce production wildcard -> COLONCOLON
-- On IDENTIFIER reduce production wildcard -> COLONCOLON
-- On HATHAT reduce production wildcard -> COLONCOLON
-- On HAT reduce production wildcard -> COLONCOLON
-- On GTGT reduce production wildcard -> COLONCOLON
-- On GT reduce production wildcard -> COLONCOLON
-- On GLOBAL reduce production wildcard -> COLONCOLON
-- On GHOST reduce production wildcard -> COLONCOLON
-- On GE reduce production wildcard -> COLONCOLON
-- On FUNCTION reduce production wildcard -> COLONCOLON
-- On FROM reduce production wildcard -> COLONCOLON
-- On FRESH reduce production wildcard -> COLONCOLON
-- On FREES reduce production wildcard -> COLONCOLON
-- On FREEABLE reduce production wildcard -> COLONCOLON
-- On FORALL reduce production wildcard -> COLONCOLON
-- On FOR reduce production wildcard -> COLONCOLON
-- On FLOAT reduce production wildcard -> COLONCOLON
-- On FALSE reduce production wildcard -> COLONCOLON
-- On EXT_LET reduce production wildcard -> COLONCOLON
-- On EXT_AT reduce production wildcard -> COLONCOLON
-- On EXITS reduce production wildcard -> COLONCOLON
-- On EXISTS reduce production wildcard -> COLONCOLON
-- On EQUAL reduce production wildcard -> COLONCOLON
-- On EQ reduce production wildcard -> COLONCOLON
-- On EOF reduce production wildcard -> COLONCOLON
-- On ENUM reduce production wildcard -> COLONCOLON
-- On ENSURES reduce production wildcard -> COLONCOLON
-- On EMPTY reduce production wildcard -> COLONCOLON
-- On ELSE reduce production wildcard -> COLONCOLON
-- On DYNAMIC reduce production wildcard -> COLONCOLON
-- On DOUBLE reduce production wildcard -> COLONCOLON
-- On DOTDOTDOT reduce production wildcard -> COLONCOLON
-- On DOTDOT reduce production wildcard -> COLONCOLON
-- On DOT reduce production wildcard -> COLONCOLON
-- On DOLLAR reduce production wildcard -> COLONCOLON
-- On DISJOINT reduce production wildcard -> COLONCOLON
-- On DECREASES reduce production wildcard -> COLONCOLON
-- On DANGLING reduce production wildcard -> COLONCOLON
-- On CUSTOM reduce production wildcard -> COLONCOLON
-- On CONTRACT reduce production wildcard -> COLONCOLON
-- On CONTINUES reduce production wildcard -> COLONCOLON
-- On CONSTANT10 reduce production wildcard -> COLONCOLON
-- On CONSTANT reduce production wildcard -> COLONCOLON
-- On CONST reduce production wildcard -> COLONCOLON
-- On COMPLETE reduce production wildcard -> COLONCOLON
-- On COMMA reduce production wildcard -> COLONCOLON
-- On COLONGT reduce production wildcard -> COLONCOLON
-- On COLONCOLON reduce production wildcard -> COLONCOLON
-- On COLON2 reduce production wildcard -> COLONCOLON
-- On COLON reduce production wildcard -> COLONCOLON
-- On CHAR reduce production wildcard -> COLONCOLON
-- On CASE reduce production wildcard -> COLONCOLON
-- On BSUNION reduce production wildcard -> COLONCOLON
-- On BSTYPE reduce production wildcard -> COLONCOLON
-- On BREAKS reduce production wildcard -> COLONCOLON
-- On BOOLEAN reduce production wildcard -> COLONCOLON
-- On BOOL reduce production wildcard -> COLONCOLON
-- On BLOCK_LENGTH reduce production wildcard -> COLONCOLON
-- On BIMPLIES reduce production wildcard -> COLONCOLON
-- On BIFF reduce production wildcard -> COLONCOLON
-- On BEHAVIORS reduce production wildcard -> COLONCOLON
-- On BEHAVIOR reduce production wildcard -> COLONCOLON
-- On BASE_ADDR reduce production wildcard -> COLONCOLON
-- On AXIOMATIC reduce production wildcard -> COLONCOLON
-- On AXIOM reduce production wildcard -> COLONCOLON
-- On AUTOMATIC reduce production wildcard -> COLONCOLON
-- On AT reduce production wildcard -> COLONCOLON
-- On ASSUMES reduce production wildcard -> COLONCOLON
-- On ASSIGNS reduce production wildcard -> COLONCOLON
-- On ASSERT reduce production wildcard -> COLONCOLON
-- On ARROW reduce production wildcard -> COLONCOLON
-- On AND reduce production wildcard -> COLONCOLON
-- On AMP reduce production wildcard -> COLONCOLON
-- On ALLOCATION reduce production wildcard -> COLONCOLON
-- On ALLOCATES reduce production wildcard -> COLONCOLON
-- On ALLOCABLE reduce production wildcard -> COLONCOLON

State 1022:
## Known stack suffix:
## COLON2
## LR(1) items:
wildcard -> COLON2 . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> COLON2
-- On WITH reduce production wildcard -> COLON2
-- On VOLATILE reduce production wildcard -> COLON2
-- On VOID reduce production wildcard -> COLON2
-- On VARIANT reduce production wildcard -> COLON2
-- On VALID_READ reduce production wildcard -> COLON2
-- On VALID_RANGE reduce production wildcard -> COLON2
-- On VALID_INDEX reduce production wildcard -> COLON2
-- On VALID reduce production wildcard -> COLON2
-- On UNSIGNED reduce production wildcard -> COLON2
-- On UNION reduce production wildcard -> COLON2
-- On UNALLOCATED reduce production wildcard -> COLON2
-- On TYPEOF reduce production wildcard -> COLON2
-- On TYPENAME reduce production wildcard -> COLON2
-- On TYPE reduce production wildcard -> COLON2
-- On TRUE reduce production wildcard -> COLON2
-- On TILDE reduce production wildcard -> COLON2
-- On TERMINATES reduce production wildcard -> COLON2
-- On STRUCT reduce production wildcard -> COLON2
-- On STRING_LITERAL reduce production wildcard -> COLON2
-- On STATIC reduce production wildcard -> COLON2
-- On STAR reduce production wildcard -> COLON2
-- On SLICE reduce production wildcard -> COLON2
-- On SLASH reduce production wildcard -> COLON2
-- On SIZEOF reduce production wildcard -> COLON2
-- On SIGNED reduce production wildcard -> COLON2
-- On SHORT reduce production wildcard -> COLON2
-- On SEPARATED reduce production wildcard -> COLON2
-- On SEMICOLON reduce production wildcard -> COLON2
-- On RSQUARE reduce production wildcard -> COLON2
-- On RPAR reduce production wildcard -> COLON2
-- On RETURNS reduce production wildcard -> COLON2
-- On RESULT reduce production wildcard -> COLON2
-- On REQUIRES reduce production wildcard -> COLON2
-- On REGISTER reduce production wildcard -> COLON2
-- On REAL reduce production wildcard -> COLON2
-- On READS reduce production wildcard -> COLON2
-- On RBRACE reduce production wildcard -> COLON2
-- On QUESTION reduce production wildcard -> COLON2
-- On PREDICATE reduce production wildcard -> COLON2
-- On PRAGMA reduce production wildcard -> COLON2
-- On PLUS reduce production wildcard -> COLON2
-- On PIPE reduce production wildcard -> COLON2
-- On PERCENT reduce production wildcard -> COLON2
-- On OR reduce production wildcard -> COLON2
-- On OLD reduce production wildcard -> COLON2
-- On OFFSET reduce production wildcard -> COLON2
-- On NULL reduce production wildcard -> COLON2
-- On NOTHING reduce production wildcard -> COLON2
-- On NOT reduce production wildcard -> COLON2
-- On NE reduce production wildcard -> COLON2
-- On MODULE reduce production wildcard -> COLON2
-- On MODEL reduce production wildcard -> COLON2
-- On MINUS reduce production wildcard -> COLON2
-- On LTLT reduce production wildcard -> COLON2
-- On LTCOLON reduce production wildcard -> COLON2
-- On LT reduce production wildcard -> COLON2
-- On LSQUARE reduce production wildcard -> COLON2
-- On LPAR reduce production wildcard -> COLON2
-- On LOOP reduce production wildcard -> COLON2
-- On LONG reduce production wildcard -> COLON2
-- On LOGIC reduce production wildcard -> COLON2
-- On LET reduce production wildcard -> COLON2
-- On LEMMA reduce production wildcard -> COLON2
-- On LE reduce production wildcard -> COLON2
-- On LBRACE reduce production wildcard -> COLON2
-- On LAMBDA reduce production wildcard -> COLON2
-- On LABEL reduce production wildcard -> COLON2
-- On INVARIANT reduce production wildcard -> COLON2
-- On INTER reduce production wildcard -> COLON2
-- On INTEGER reduce production wildcard -> COLON2
-- On INT reduce production wildcard -> COLON2
-- On INITIALIZED reduce production wildcard -> COLON2
-- On INDUCTIVE reduce production wildcard -> COLON2
-- On INCLUDE reduce production wildcard -> COLON2
-- On IMPLIES reduce production wildcard -> COLON2
-- On IMPACT reduce production wildcard -> COLON2
-- On IFF reduce production wildcard -> COLON2
-- On IF reduce production wildcard -> COLON2
-- On IDENTIFIER reduce production wildcard -> COLON2
-- On HATHAT reduce production wildcard -> COLON2
-- On HAT reduce production wildcard -> COLON2
-- On GTGT reduce production wildcard -> COLON2
-- On GT reduce production wildcard -> COLON2
-- On GLOBAL reduce production wildcard -> COLON2
-- On GHOST reduce production wildcard -> COLON2
-- On GE reduce production wildcard -> COLON2
-- On FUNCTION reduce production wildcard -> COLON2
-- On FROM reduce production wildcard -> COLON2
-- On FRESH reduce production wildcard -> COLON2
-- On FREES reduce production wildcard -> COLON2
-- On FREEABLE reduce production wildcard -> COLON2
-- On FORALL reduce production wildcard -> COLON2
-- On FOR reduce production wildcard -> COLON2
-- On FLOAT reduce production wildcard -> COLON2
-- On FALSE reduce production wildcard -> COLON2
-- On EXT_LET reduce production wildcard -> COLON2
-- On EXT_AT reduce production wildcard -> COLON2
-- On EXITS reduce production wildcard -> COLON2
-- On EXISTS reduce production wildcard -> COLON2
-- On EQUAL reduce production wildcard -> COLON2
-- On EQ reduce production wildcard -> COLON2
-- On EOF reduce production wildcard -> COLON2
-- On ENUM reduce production wildcard -> COLON2
-- On ENSURES reduce production wildcard -> COLON2
-- On EMPTY reduce production wildcard -> COLON2
-- On ELSE reduce production wildcard -> COLON2
-- On DYNAMIC reduce production wildcard -> COLON2
-- On DOUBLE reduce production wildcard -> COLON2
-- On DOTDOTDOT reduce production wildcard -> COLON2
-- On DOTDOT reduce production wildcard -> COLON2
-- On DOT reduce production wildcard -> COLON2
-- On DOLLAR reduce production wildcard -> COLON2
-- On DISJOINT reduce production wildcard -> COLON2
-- On DECREASES reduce production wildcard -> COLON2
-- On DANGLING reduce production wildcard -> COLON2
-- On CUSTOM reduce production wildcard -> COLON2
-- On CONTRACT reduce production wildcard -> COLON2
-- On CONTINUES reduce production wildcard -> COLON2
-- On CONSTANT10 reduce production wildcard -> COLON2
-- On CONSTANT reduce production wildcard -> COLON2
-- On CONST reduce production wildcard -> COLON2
-- On COMPLETE reduce production wildcard -> COLON2
-- On COMMA reduce production wildcard -> COLON2
-- On COLONGT reduce production wildcard -> COLON2
-- On COLONCOLON reduce production wildcard -> COLON2
-- On COLON2 reduce production wildcard -> COLON2
-- On COLON reduce production wildcard -> COLON2
-- On CHAR reduce production wildcard -> COLON2
-- On CASE reduce production wildcard -> COLON2
-- On BSUNION reduce production wildcard -> COLON2
-- On BSTYPE reduce production wildcard -> COLON2
-- On BREAKS reduce production wildcard -> COLON2
-- On BOOLEAN reduce production wildcard -> COLON2
-- On BOOL reduce production wildcard -> COLON2
-- On BLOCK_LENGTH reduce production wildcard -> COLON2
-- On BIMPLIES reduce production wildcard -> COLON2
-- On BIFF reduce production wildcard -> COLON2
-- On BEHAVIORS reduce production wildcard -> COLON2
-- On BEHAVIOR reduce production wildcard -> COLON2
-- On BASE_ADDR reduce production wildcard -> COLON2
-- On AXIOMATIC reduce production wildcard -> COLON2
-- On AXIOM reduce production wildcard -> COLON2
-- On AUTOMATIC reduce production wildcard -> COLON2
-- On AT reduce production wildcard -> COLON2
-- On ASSUMES reduce production wildcard -> COLON2
-- On ASSIGNS reduce production wildcard -> COLON2
-- On ASSERT reduce production wildcard -> COLON2
-- On ARROW reduce production wildcard -> COLON2
-- On AND reduce production wildcard -> COLON2
-- On AMP reduce production wildcard -> COLON2
-- On ALLOCATION reduce production wildcard -> COLON2
-- On ALLOCATES reduce production wildcard -> COLON2
-- On ALLOCABLE reduce production wildcard -> COLON2

State 1023:
## Known stack suffix:
## COLON
## LR(1) items:
wildcard -> COLON . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> COLON
-- On WITH reduce production wildcard -> COLON
-- On VOLATILE reduce production wildcard -> COLON
-- On VOID reduce production wildcard -> COLON
-- On VARIANT reduce production wildcard -> COLON
-- On VALID_READ reduce production wildcard -> COLON
-- On VALID_RANGE reduce production wildcard -> COLON
-- On VALID_INDEX reduce production wildcard -> COLON
-- On VALID reduce production wildcard -> COLON
-- On UNSIGNED reduce production wildcard -> COLON
-- On UNION reduce production wildcard -> COLON
-- On UNALLOCATED reduce production wildcard -> COLON
-- On TYPEOF reduce production wildcard -> COLON
-- On TYPENAME reduce production wildcard -> COLON
-- On TYPE reduce production wildcard -> COLON
-- On TRUE reduce production wildcard -> COLON
-- On TILDE reduce production wildcard -> COLON
-- On TERMINATES reduce production wildcard -> COLON
-- On STRUCT reduce production wildcard -> COLON
-- On STRING_LITERAL reduce production wildcard -> COLON
-- On STATIC reduce production wildcard -> COLON
-- On STAR reduce production wildcard -> COLON
-- On SLICE reduce production wildcard -> COLON
-- On SLASH reduce production wildcard -> COLON
-- On SIZEOF reduce production wildcard -> COLON
-- On SIGNED reduce production wildcard -> COLON
-- On SHORT reduce production wildcard -> COLON
-- On SEPARATED reduce production wildcard -> COLON
-- On SEMICOLON reduce production wildcard -> COLON
-- On RSQUARE reduce production wildcard -> COLON
-- On RPAR reduce production wildcard -> COLON
-- On RETURNS reduce production wildcard -> COLON
-- On RESULT reduce production wildcard -> COLON
-- On REQUIRES reduce production wildcard -> COLON
-- On REGISTER reduce production wildcard -> COLON
-- On REAL reduce production wildcard -> COLON
-- On READS reduce production wildcard -> COLON
-- On RBRACE reduce production wildcard -> COLON
-- On QUESTION reduce production wildcard -> COLON
-- On PREDICATE reduce production wildcard -> COLON
-- On PRAGMA reduce production wildcard -> COLON
-- On PLUS reduce production wildcard -> COLON
-- On PIPE reduce production wildcard -> COLON
-- On PERCENT reduce production wildcard -> COLON
-- On OR reduce production wildcard -> COLON
-- On OLD reduce production wildcard -> COLON
-- On OFFSET reduce production wildcard -> COLON
-- On NULL reduce production wildcard -> COLON
-- On NOTHING reduce production wildcard -> COLON
-- On NOT reduce production wildcard -> COLON
-- On NE reduce production wildcard -> COLON
-- On MODULE reduce production wildcard -> COLON
-- On MODEL reduce production wildcard -> COLON
-- On MINUS reduce production wildcard -> COLON
-- On LTLT reduce production wildcard -> COLON
-- On LTCOLON reduce production wildcard -> COLON
-- On LT reduce production wildcard -> COLON
-- On LSQUARE reduce production wildcard -> COLON
-- On LPAR reduce production wildcard -> COLON
-- On LOOP reduce production wildcard -> COLON
-- On LONG reduce production wildcard -> COLON
-- On LOGIC reduce production wildcard -> COLON
-- On LET reduce production wildcard -> COLON
-- On LEMMA reduce production wildcard -> COLON
-- On LE reduce production wildcard -> COLON
-- On LBRACE reduce production wildcard -> COLON
-- On LAMBDA reduce production wildcard -> COLON
-- On LABEL reduce production wildcard -> COLON
-- On INVARIANT reduce production wildcard -> COLON
-- On INTER reduce production wildcard -> COLON
-- On INTEGER reduce production wildcard -> COLON
-- On INT reduce production wildcard -> COLON
-- On INITIALIZED reduce production wildcard -> COLON
-- On INDUCTIVE reduce production wildcard -> COLON
-- On INCLUDE reduce production wildcard -> COLON
-- On IMPLIES reduce production wildcard -> COLON
-- On IMPACT reduce production wildcard -> COLON
-- On IFF reduce production wildcard -> COLON
-- On IF reduce production wildcard -> COLON
-- On IDENTIFIER reduce production wildcard -> COLON
-- On HATHAT reduce production wildcard -> COLON
-- On HAT reduce production wildcard -> COLON
-- On GTGT reduce production wildcard -> COLON
-- On GT reduce production wildcard -> COLON
-- On GLOBAL reduce production wildcard -> COLON
-- On GHOST reduce production wildcard -> COLON
-- On GE reduce production wildcard -> COLON
-- On FUNCTION reduce production wildcard -> COLON
-- On FROM reduce production wildcard -> COLON
-- On FRESH reduce production wildcard -> COLON
-- On FREES reduce production wildcard -> COLON
-- On FREEABLE reduce production wildcard -> COLON
-- On FORALL reduce production wildcard -> COLON
-- On FOR reduce production wildcard -> COLON
-- On FLOAT reduce production wildcard -> COLON
-- On FALSE reduce production wildcard -> COLON
-- On EXT_LET reduce production wildcard -> COLON
-- On EXT_AT reduce production wildcard -> COLON
-- On EXITS reduce production wildcard -> COLON
-- On EXISTS reduce production wildcard -> COLON
-- On EQUAL reduce production wildcard -> COLON
-- On EQ reduce production wildcard -> COLON
-- On EOF reduce production wildcard -> COLON
-- On ENUM reduce production wildcard -> COLON
-- On ENSURES reduce production wildcard -> COLON
-- On EMPTY reduce production wildcard -> COLON
-- On ELSE reduce production wildcard -> COLON
-- On DYNAMIC reduce production wildcard -> COLON
-- On DOUBLE reduce production wildcard -> COLON
-- On DOTDOTDOT reduce production wildcard -> COLON
-- On DOTDOT reduce production wildcard -> COLON
-- On DOT reduce production wildcard -> COLON
-- On DOLLAR reduce production wildcard -> COLON
-- On DISJOINT reduce production wildcard -> COLON
-- On DECREASES reduce production wildcard -> COLON
-- On DANGLING reduce production wildcard -> COLON
-- On CUSTOM reduce production wildcard -> COLON
-- On CONTRACT reduce production wildcard -> COLON
-- On CONTINUES reduce production wildcard -> COLON
-- On CONSTANT10 reduce production wildcard -> COLON
-- On CONSTANT reduce production wildcard -> COLON
-- On CONST reduce production wildcard -> COLON
-- On COMPLETE reduce production wildcard -> COLON
-- On COMMA reduce production wildcard -> COLON
-- On COLONGT reduce production wildcard -> COLON
-- On COLONCOLON reduce production wildcard -> COLON
-- On COLON2 reduce production wildcard -> COLON
-- On COLON reduce production wildcard -> COLON
-- On CHAR reduce production wildcard -> COLON
-- On CASE reduce production wildcard -> COLON
-- On BSUNION reduce production wildcard -> COLON
-- On BSTYPE reduce production wildcard -> COLON
-- On BREAKS reduce production wildcard -> COLON
-- On BOOLEAN reduce production wildcard -> COLON
-- On BOOL reduce production wildcard -> COLON
-- On BLOCK_LENGTH reduce production wildcard -> COLON
-- On BIMPLIES reduce production wildcard -> COLON
-- On BIFF reduce production wildcard -> COLON
-- On BEHAVIORS reduce production wildcard -> COLON
-- On BEHAVIOR reduce production wildcard -> COLON
-- On BASE_ADDR reduce production wildcard -> COLON
-- On AXIOMATIC reduce production wildcard -> COLON
-- On AXIOM reduce production wildcard -> COLON
-- On AUTOMATIC reduce production wildcard -> COLON
-- On AT reduce production wildcard -> COLON
-- On ASSUMES reduce production wildcard -> COLON
-- On ASSIGNS reduce production wildcard -> COLON
-- On ASSERT reduce production wildcard -> COLON
-- On ARROW reduce production wildcard -> COLON
-- On AND reduce production wildcard -> COLON
-- On AMP reduce production wildcard -> COLON
-- On ALLOCATION reduce production wildcard -> COLON
-- On ALLOCATES reduce production wildcard -> COLON
-- On ALLOCABLE reduce production wildcard -> COLON

State 1024:
## Known stack suffix:
## BSUNION
## LR(1) items:
bs_keyword -> BSUNION . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> BSUNION
-- On WITH reduce production bs_keyword -> BSUNION
-- On VOLATILE reduce production bs_keyword -> BSUNION
-- On VOID reduce production bs_keyword -> BSUNION
-- On VARIANT reduce production bs_keyword -> BSUNION
-- On VALID_READ reduce production bs_keyword -> BSUNION
-- On VALID_RANGE reduce production bs_keyword -> BSUNION
-- On VALID_INDEX reduce production bs_keyword -> BSUNION
-- On VALID reduce production bs_keyword -> BSUNION
-- On UNSIGNED reduce production bs_keyword -> BSUNION
-- On UNION reduce production bs_keyword -> BSUNION
-- On UNALLOCATED reduce production bs_keyword -> BSUNION
-- On TYPEOF reduce production bs_keyword -> BSUNION
-- On TYPENAME reduce production bs_keyword -> BSUNION
-- On TYPE reduce production bs_keyword -> BSUNION
-- On TRUE reduce production bs_keyword -> BSUNION
-- On TILDE reduce production bs_keyword -> BSUNION
-- On TERMINATES reduce production bs_keyword -> BSUNION
-- On STRUCT reduce production bs_keyword -> BSUNION
-- On STRING_LITERAL reduce production bs_keyword -> BSUNION
-- On STATIC reduce production bs_keyword -> BSUNION
-- On STAR reduce production bs_keyword -> BSUNION
-- On SLICE reduce production bs_keyword -> BSUNION
-- On SLASH reduce production bs_keyword -> BSUNION
-- On SIZEOF reduce production bs_keyword -> BSUNION
-- On SIGNED reduce production bs_keyword -> BSUNION
-- On SHORT reduce production bs_keyword -> BSUNION
-- On SEPARATED reduce production bs_keyword -> BSUNION
-- On SEMICOLON reduce production bs_keyword -> BSUNION
-- On RSQUARE reduce production bs_keyword -> BSUNION
-- On RPAR reduce production bs_keyword -> BSUNION
-- On RETURNS reduce production bs_keyword -> BSUNION
-- On RESULT reduce production bs_keyword -> BSUNION
-- On REQUIRES reduce production bs_keyword -> BSUNION
-- On REGISTER reduce production bs_keyword -> BSUNION
-- On REAL reduce production bs_keyword -> BSUNION
-- On READS reduce production bs_keyword -> BSUNION
-- On RBRACE reduce production bs_keyword -> BSUNION
-- On QUESTION reduce production bs_keyword -> BSUNION
-- On PREDICATE reduce production bs_keyword -> BSUNION
-- On PRAGMA reduce production bs_keyword -> BSUNION
-- On PLUS reduce production bs_keyword -> BSUNION
-- On PIPE reduce production bs_keyword -> BSUNION
-- On PERCENT reduce production bs_keyword -> BSUNION
-- On OR reduce production bs_keyword -> BSUNION
-- On OLD reduce production bs_keyword -> BSUNION
-- On OFFSET reduce production bs_keyword -> BSUNION
-- On NULL reduce production bs_keyword -> BSUNION
-- On NOTHING reduce production bs_keyword -> BSUNION
-- On NOT reduce production bs_keyword -> BSUNION
-- On NE reduce production bs_keyword -> BSUNION
-- On MODULE reduce production bs_keyword -> BSUNION
-- On MODEL reduce production bs_keyword -> BSUNION
-- On MINUS reduce production bs_keyword -> BSUNION
-- On LTLT reduce production bs_keyword -> BSUNION
-- On LTCOLON reduce production bs_keyword -> BSUNION
-- On LT reduce production bs_keyword -> BSUNION
-- On LSQUARE reduce production bs_keyword -> BSUNION
-- On LPAR reduce production bs_keyword -> BSUNION
-- On LOOP reduce production bs_keyword -> BSUNION
-- On LONG reduce production bs_keyword -> BSUNION
-- On LOGIC reduce production bs_keyword -> BSUNION
-- On LET reduce production bs_keyword -> BSUNION
-- On LEMMA reduce production bs_keyword -> BSUNION
-- On LE reduce production bs_keyword -> BSUNION
-- On LBRACE reduce production bs_keyword -> BSUNION
-- On LAMBDA reduce production bs_keyword -> BSUNION
-- On LABEL reduce production bs_keyword -> BSUNION
-- On INVARIANT reduce production bs_keyword -> BSUNION
-- On INTER reduce production bs_keyword -> BSUNION
-- On INTEGER reduce production bs_keyword -> BSUNION
-- On INT reduce production bs_keyword -> BSUNION
-- On INITIALIZED reduce production bs_keyword -> BSUNION
-- On INDUCTIVE reduce production bs_keyword -> BSUNION
-- On INCLUDE reduce production bs_keyword -> BSUNION
-- On IMPLIES reduce production bs_keyword -> BSUNION
-- On IMPACT reduce production bs_keyword -> BSUNION
-- On IFF reduce production bs_keyword -> BSUNION
-- On IF reduce production bs_keyword -> BSUNION
-- On IDENTIFIER reduce production bs_keyword -> BSUNION
-- On HATHAT reduce production bs_keyword -> BSUNION
-- On HAT reduce production bs_keyword -> BSUNION
-- On GTGT reduce production bs_keyword -> BSUNION
-- On GT reduce production bs_keyword -> BSUNION
-- On GLOBAL reduce production bs_keyword -> BSUNION
-- On GHOST reduce production bs_keyword -> BSUNION
-- On GE reduce production bs_keyword -> BSUNION
-- On FUNCTION reduce production bs_keyword -> BSUNION
-- On FROM reduce production bs_keyword -> BSUNION
-- On FRESH reduce production bs_keyword -> BSUNION
-- On FREES reduce production bs_keyword -> BSUNION
-- On FREEABLE reduce production bs_keyword -> BSUNION
-- On FORALL reduce production bs_keyword -> BSUNION
-- On FOR reduce production bs_keyword -> BSUNION
-- On FLOAT reduce production bs_keyword -> BSUNION
-- On FALSE reduce production bs_keyword -> BSUNION
-- On EXT_LET reduce production bs_keyword -> BSUNION
-- On EXT_AT reduce production bs_keyword -> BSUNION
-- On EXITS reduce production bs_keyword -> BSUNION
-- On EXISTS reduce production bs_keyword -> BSUNION
-- On EQUAL reduce production bs_keyword -> BSUNION
-- On EQ reduce production bs_keyword -> BSUNION
-- On EOF reduce production bs_keyword -> BSUNION
-- On ENUM reduce production bs_keyword -> BSUNION
-- On ENSURES reduce production bs_keyword -> BSUNION
-- On EMPTY reduce production bs_keyword -> BSUNION
-- On ELSE reduce production bs_keyword -> BSUNION
-- On DYNAMIC reduce production bs_keyword -> BSUNION
-- On DOUBLE reduce production bs_keyword -> BSUNION
-- On DOTDOTDOT reduce production bs_keyword -> BSUNION
-- On DOTDOT reduce production bs_keyword -> BSUNION
-- On DOT reduce production bs_keyword -> BSUNION
-- On DOLLAR reduce production bs_keyword -> BSUNION
-- On DISJOINT reduce production bs_keyword -> BSUNION
-- On DECREASES reduce production bs_keyword -> BSUNION
-- On DANGLING reduce production bs_keyword -> BSUNION
-- On CUSTOM reduce production bs_keyword -> BSUNION
-- On CONTRACT reduce production bs_keyword -> BSUNION
-- On CONTINUES reduce production bs_keyword -> BSUNION
-- On CONSTANT10 reduce production bs_keyword -> BSUNION
-- On CONSTANT reduce production bs_keyword -> BSUNION
-- On CONST reduce production bs_keyword -> BSUNION
-- On COMPLETE reduce production bs_keyword -> BSUNION
-- On COMMA reduce production bs_keyword -> BSUNION
-- On COLONGT reduce production bs_keyword -> BSUNION
-- On COLONCOLON reduce production bs_keyword -> BSUNION
-- On COLON2 reduce production bs_keyword -> BSUNION
-- On COLON reduce production bs_keyword -> BSUNION
-- On CHAR reduce production bs_keyword -> BSUNION
-- On CASE reduce production bs_keyword -> BSUNION
-- On BSUNION reduce production bs_keyword -> BSUNION
-- On BSTYPE reduce production bs_keyword -> BSUNION
-- On BREAKS reduce production bs_keyword -> BSUNION
-- On BOOLEAN reduce production bs_keyword -> BSUNION
-- On BOOL reduce production bs_keyword -> BSUNION
-- On BLOCK_LENGTH reduce production bs_keyword -> BSUNION
-- On BIMPLIES reduce production bs_keyword -> BSUNION
-- On BIFF reduce production bs_keyword -> BSUNION
-- On BEHAVIORS reduce production bs_keyword -> BSUNION
-- On BEHAVIOR reduce production bs_keyword -> BSUNION
-- On BASE_ADDR reduce production bs_keyword -> BSUNION
-- On AXIOMATIC reduce production bs_keyword -> BSUNION
-- On AXIOM reduce production bs_keyword -> BSUNION
-- On AUTOMATIC reduce production bs_keyword -> BSUNION
-- On AT reduce production bs_keyword -> BSUNION
-- On ASSUMES reduce production bs_keyword -> BSUNION
-- On ASSIGNS reduce production bs_keyword -> BSUNION
-- On ASSERT reduce production bs_keyword -> BSUNION
-- On ARROW reduce production bs_keyword -> BSUNION
-- On AND reduce production bs_keyword -> BSUNION
-- On AMP reduce production bs_keyword -> BSUNION
-- On ALLOCATION reduce production bs_keyword -> BSUNION
-- On ALLOCATES reduce production bs_keyword -> BSUNION
-- On ALLOCABLE reduce production bs_keyword -> BSUNION

State 1025:
## Known stack suffix:
## BSTYPE
## LR(1) items:
bs_keyword -> BSTYPE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> BSTYPE
-- On WITH reduce production bs_keyword -> BSTYPE
-- On VOLATILE reduce production bs_keyword -> BSTYPE
-- On VOID reduce production bs_keyword -> BSTYPE
-- On VARIANT reduce production bs_keyword -> BSTYPE
-- On VALID_READ reduce production bs_keyword -> BSTYPE
-- On VALID_RANGE reduce production bs_keyword -> BSTYPE
-- On VALID_INDEX reduce production bs_keyword -> BSTYPE
-- On VALID reduce production bs_keyword -> BSTYPE
-- On UNSIGNED reduce production bs_keyword -> BSTYPE
-- On UNION reduce production bs_keyword -> BSTYPE
-- On UNALLOCATED reduce production bs_keyword -> BSTYPE
-- On TYPEOF reduce production bs_keyword -> BSTYPE
-- On TYPENAME reduce production bs_keyword -> BSTYPE
-- On TYPE reduce production bs_keyword -> BSTYPE
-- On TRUE reduce production bs_keyword -> BSTYPE
-- On TILDE reduce production bs_keyword -> BSTYPE
-- On TERMINATES reduce production bs_keyword -> BSTYPE
-- On STRUCT reduce production bs_keyword -> BSTYPE
-- On STRING_LITERAL reduce production bs_keyword -> BSTYPE
-- On STATIC reduce production bs_keyword -> BSTYPE
-- On STAR reduce production bs_keyword -> BSTYPE
-- On SLICE reduce production bs_keyword -> BSTYPE
-- On SLASH reduce production bs_keyword -> BSTYPE
-- On SIZEOF reduce production bs_keyword -> BSTYPE
-- On SIGNED reduce production bs_keyword -> BSTYPE
-- On SHORT reduce production bs_keyword -> BSTYPE
-- On SEPARATED reduce production bs_keyword -> BSTYPE
-- On SEMICOLON reduce production bs_keyword -> BSTYPE
-- On RSQUARE reduce production bs_keyword -> BSTYPE
-- On RPAR reduce production bs_keyword -> BSTYPE
-- On RETURNS reduce production bs_keyword -> BSTYPE
-- On RESULT reduce production bs_keyword -> BSTYPE
-- On REQUIRES reduce production bs_keyword -> BSTYPE
-- On REGISTER reduce production bs_keyword -> BSTYPE
-- On REAL reduce production bs_keyword -> BSTYPE
-- On READS reduce production bs_keyword -> BSTYPE
-- On RBRACE reduce production bs_keyword -> BSTYPE
-- On QUESTION reduce production bs_keyword -> BSTYPE
-- On PREDICATE reduce production bs_keyword -> BSTYPE
-- On PRAGMA reduce production bs_keyword -> BSTYPE
-- On PLUS reduce production bs_keyword -> BSTYPE
-- On PIPE reduce production bs_keyword -> BSTYPE
-- On PERCENT reduce production bs_keyword -> BSTYPE
-- On OR reduce production bs_keyword -> BSTYPE
-- On OLD reduce production bs_keyword -> BSTYPE
-- On OFFSET reduce production bs_keyword -> BSTYPE
-- On NULL reduce production bs_keyword -> BSTYPE
-- On NOTHING reduce production bs_keyword -> BSTYPE
-- On NOT reduce production bs_keyword -> BSTYPE
-- On NE reduce production bs_keyword -> BSTYPE
-- On MODULE reduce production bs_keyword -> BSTYPE
-- On MODEL reduce production bs_keyword -> BSTYPE
-- On MINUS reduce production bs_keyword -> BSTYPE
-- On LTLT reduce production bs_keyword -> BSTYPE
-- On LTCOLON reduce production bs_keyword -> BSTYPE
-- On LT reduce production bs_keyword -> BSTYPE
-- On LSQUARE reduce production bs_keyword -> BSTYPE
-- On LPAR reduce production bs_keyword -> BSTYPE
-- On LOOP reduce production bs_keyword -> BSTYPE
-- On LONG reduce production bs_keyword -> BSTYPE
-- On LOGIC reduce production bs_keyword -> BSTYPE
-- On LET reduce production bs_keyword -> BSTYPE
-- On LEMMA reduce production bs_keyword -> BSTYPE
-- On LE reduce production bs_keyword -> BSTYPE
-- On LBRACE reduce production bs_keyword -> BSTYPE
-- On LAMBDA reduce production bs_keyword -> BSTYPE
-- On LABEL reduce production bs_keyword -> BSTYPE
-- On INVARIANT reduce production bs_keyword -> BSTYPE
-- On INTER reduce production bs_keyword -> BSTYPE
-- On INTEGER reduce production bs_keyword -> BSTYPE
-- On INT reduce production bs_keyword -> BSTYPE
-- On INITIALIZED reduce production bs_keyword -> BSTYPE
-- On INDUCTIVE reduce production bs_keyword -> BSTYPE
-- On INCLUDE reduce production bs_keyword -> BSTYPE
-- On IMPLIES reduce production bs_keyword -> BSTYPE
-- On IMPACT reduce production bs_keyword -> BSTYPE
-- On IFF reduce production bs_keyword -> BSTYPE
-- On IF reduce production bs_keyword -> BSTYPE
-- On IDENTIFIER reduce production bs_keyword -> BSTYPE
-- On HATHAT reduce production bs_keyword -> BSTYPE
-- On HAT reduce production bs_keyword -> BSTYPE
-- On GTGT reduce production bs_keyword -> BSTYPE
-- On GT reduce production bs_keyword -> BSTYPE
-- On GLOBAL reduce production bs_keyword -> BSTYPE
-- On GHOST reduce production bs_keyword -> BSTYPE
-- On GE reduce production bs_keyword -> BSTYPE
-- On FUNCTION reduce production bs_keyword -> BSTYPE
-- On FROM reduce production bs_keyword -> BSTYPE
-- On FRESH reduce production bs_keyword -> BSTYPE
-- On FREES reduce production bs_keyword -> BSTYPE
-- On FREEABLE reduce production bs_keyword -> BSTYPE
-- On FORALL reduce production bs_keyword -> BSTYPE
-- On FOR reduce production bs_keyword -> BSTYPE
-- On FLOAT reduce production bs_keyword -> BSTYPE
-- On FALSE reduce production bs_keyword -> BSTYPE
-- On EXT_LET reduce production bs_keyword -> BSTYPE
-- On EXT_AT reduce production bs_keyword -> BSTYPE
-- On EXITS reduce production bs_keyword -> BSTYPE
-- On EXISTS reduce production bs_keyword -> BSTYPE
-- On EQUAL reduce production bs_keyword -> BSTYPE
-- On EQ reduce production bs_keyword -> BSTYPE
-- On EOF reduce production bs_keyword -> BSTYPE
-- On ENUM reduce production bs_keyword -> BSTYPE
-- On ENSURES reduce production bs_keyword -> BSTYPE
-- On EMPTY reduce production bs_keyword -> BSTYPE
-- On ELSE reduce production bs_keyword -> BSTYPE
-- On DYNAMIC reduce production bs_keyword -> BSTYPE
-- On DOUBLE reduce production bs_keyword -> BSTYPE
-- On DOTDOTDOT reduce production bs_keyword -> BSTYPE
-- On DOTDOT reduce production bs_keyword -> BSTYPE
-- On DOT reduce production bs_keyword -> BSTYPE
-- On DOLLAR reduce production bs_keyword -> BSTYPE
-- On DISJOINT reduce production bs_keyword -> BSTYPE
-- On DECREASES reduce production bs_keyword -> BSTYPE
-- On DANGLING reduce production bs_keyword -> BSTYPE
-- On CUSTOM reduce production bs_keyword -> BSTYPE
-- On CONTRACT reduce production bs_keyword -> BSTYPE
-- On CONTINUES reduce production bs_keyword -> BSTYPE
-- On CONSTANT10 reduce production bs_keyword -> BSTYPE
-- On CONSTANT reduce production bs_keyword -> BSTYPE
-- On CONST reduce production bs_keyword -> BSTYPE
-- On COMPLETE reduce production bs_keyword -> BSTYPE
-- On COMMA reduce production bs_keyword -> BSTYPE
-- On COLONGT reduce production bs_keyword -> BSTYPE
-- On COLONCOLON reduce production bs_keyword -> BSTYPE
-- On COLON2 reduce production bs_keyword -> BSTYPE
-- On COLON reduce production bs_keyword -> BSTYPE
-- On CHAR reduce production bs_keyword -> BSTYPE
-- On CASE reduce production bs_keyword -> BSTYPE
-- On BSUNION reduce production bs_keyword -> BSTYPE
-- On BSTYPE reduce production bs_keyword -> BSTYPE
-- On BREAKS reduce production bs_keyword -> BSTYPE
-- On BOOLEAN reduce production bs_keyword -> BSTYPE
-- On BOOL reduce production bs_keyword -> BSTYPE
-- On BLOCK_LENGTH reduce production bs_keyword -> BSTYPE
-- On BIMPLIES reduce production bs_keyword -> BSTYPE
-- On BIFF reduce production bs_keyword -> BSTYPE
-- On BEHAVIORS reduce production bs_keyword -> BSTYPE
-- On BEHAVIOR reduce production bs_keyword -> BSTYPE
-- On BASE_ADDR reduce production bs_keyword -> BSTYPE
-- On AXIOMATIC reduce production bs_keyword -> BSTYPE
-- On AXIOM reduce production bs_keyword -> BSTYPE
-- On AUTOMATIC reduce production bs_keyword -> BSTYPE
-- On AT reduce production bs_keyword -> BSTYPE
-- On ASSUMES reduce production bs_keyword -> BSTYPE
-- On ASSIGNS reduce production bs_keyword -> BSTYPE
-- On ASSERT reduce production bs_keyword -> BSTYPE
-- On ARROW reduce production bs_keyword -> BSTYPE
-- On AND reduce production bs_keyword -> BSTYPE
-- On AMP reduce production bs_keyword -> BSTYPE
-- On ALLOCATION reduce production bs_keyword -> BSTYPE
-- On ALLOCATES reduce production bs_keyword -> BSTYPE
-- On ALLOCABLE reduce production bs_keyword -> BSTYPE

State 1026:
## Known stack suffix:
## BLOCK_LENGTH
## LR(1) items:
bs_keyword -> BLOCK_LENGTH . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> BLOCK_LENGTH
-- On WITH reduce production bs_keyword -> BLOCK_LENGTH
-- On VOLATILE reduce production bs_keyword -> BLOCK_LENGTH
-- On VOID reduce production bs_keyword -> BLOCK_LENGTH
-- On VARIANT reduce production bs_keyword -> BLOCK_LENGTH
-- On VALID_READ reduce production bs_keyword -> BLOCK_LENGTH
-- On VALID_RANGE reduce production bs_keyword -> BLOCK_LENGTH
-- On VALID_INDEX reduce production bs_keyword -> BLOCK_LENGTH
-- On VALID reduce production bs_keyword -> BLOCK_LENGTH
-- On UNSIGNED reduce production bs_keyword -> BLOCK_LENGTH
-- On UNION reduce production bs_keyword -> BLOCK_LENGTH
-- On UNALLOCATED reduce production bs_keyword -> BLOCK_LENGTH
-- On TYPEOF reduce production bs_keyword -> BLOCK_LENGTH
-- On TYPENAME reduce production bs_keyword -> BLOCK_LENGTH
-- On TYPE reduce production bs_keyword -> BLOCK_LENGTH
-- On TRUE reduce production bs_keyword -> BLOCK_LENGTH
-- On TILDE reduce production bs_keyword -> BLOCK_LENGTH
-- On TERMINATES reduce production bs_keyword -> BLOCK_LENGTH
-- On STRUCT reduce production bs_keyword -> BLOCK_LENGTH
-- On STRING_LITERAL reduce production bs_keyword -> BLOCK_LENGTH
-- On STATIC reduce production bs_keyword -> BLOCK_LENGTH
-- On STAR reduce production bs_keyword -> BLOCK_LENGTH
-- On SLICE reduce production bs_keyword -> BLOCK_LENGTH
-- On SLASH reduce production bs_keyword -> BLOCK_LENGTH
-- On SIZEOF reduce production bs_keyword -> BLOCK_LENGTH
-- On SIGNED reduce production bs_keyword -> BLOCK_LENGTH
-- On SHORT reduce production bs_keyword -> BLOCK_LENGTH
-- On SEPARATED reduce production bs_keyword -> BLOCK_LENGTH
-- On SEMICOLON reduce production bs_keyword -> BLOCK_LENGTH
-- On RSQUARE reduce production bs_keyword -> BLOCK_LENGTH
-- On RPAR reduce production bs_keyword -> BLOCK_LENGTH
-- On RETURNS reduce production bs_keyword -> BLOCK_LENGTH
-- On RESULT reduce production bs_keyword -> BLOCK_LENGTH
-- On REQUIRES reduce production bs_keyword -> BLOCK_LENGTH
-- On REGISTER reduce production bs_keyword -> BLOCK_LENGTH
-- On REAL reduce production bs_keyword -> BLOCK_LENGTH
-- On READS reduce production bs_keyword -> BLOCK_LENGTH
-- On RBRACE reduce production bs_keyword -> BLOCK_LENGTH
-- On QUESTION reduce production bs_keyword -> BLOCK_LENGTH
-- On PREDICATE reduce production bs_keyword -> BLOCK_LENGTH
-- On PRAGMA reduce production bs_keyword -> BLOCK_LENGTH
-- On PLUS reduce production bs_keyword -> BLOCK_LENGTH
-- On PIPE reduce production bs_keyword -> BLOCK_LENGTH
-- On PERCENT reduce production bs_keyword -> BLOCK_LENGTH
-- On OR reduce production bs_keyword -> BLOCK_LENGTH
-- On OLD reduce production bs_keyword -> BLOCK_LENGTH
-- On OFFSET reduce production bs_keyword -> BLOCK_LENGTH
-- On NULL reduce production bs_keyword -> BLOCK_LENGTH
-- On NOTHING reduce production bs_keyword -> BLOCK_LENGTH
-- On NOT reduce production bs_keyword -> BLOCK_LENGTH
-- On NE reduce production bs_keyword -> BLOCK_LENGTH
-- On MODULE reduce production bs_keyword -> BLOCK_LENGTH
-- On MODEL reduce production bs_keyword -> BLOCK_LENGTH
-- On MINUS reduce production bs_keyword -> BLOCK_LENGTH
-- On LTLT reduce production bs_keyword -> BLOCK_LENGTH
-- On LTCOLON reduce production bs_keyword -> BLOCK_LENGTH
-- On LT reduce production bs_keyword -> BLOCK_LENGTH
-- On LSQUARE reduce production bs_keyword -> BLOCK_LENGTH
-- On LPAR reduce production bs_keyword -> BLOCK_LENGTH
-- On LOOP reduce production bs_keyword -> BLOCK_LENGTH
-- On LONG reduce production bs_keyword -> BLOCK_LENGTH
-- On LOGIC reduce production bs_keyword -> BLOCK_LENGTH
-- On LET reduce production bs_keyword -> BLOCK_LENGTH
-- On LEMMA reduce production bs_keyword -> BLOCK_LENGTH
-- On LE reduce production bs_keyword -> BLOCK_LENGTH
-- On LBRACE reduce production bs_keyword -> BLOCK_LENGTH
-- On LAMBDA reduce production bs_keyword -> BLOCK_LENGTH
-- On LABEL reduce production bs_keyword -> BLOCK_LENGTH
-- On INVARIANT reduce production bs_keyword -> BLOCK_LENGTH
-- On INTER reduce production bs_keyword -> BLOCK_LENGTH
-- On INTEGER reduce production bs_keyword -> BLOCK_LENGTH
-- On INT reduce production bs_keyword -> BLOCK_LENGTH
-- On INITIALIZED reduce production bs_keyword -> BLOCK_LENGTH
-- On INDUCTIVE reduce production bs_keyword -> BLOCK_LENGTH
-- On INCLUDE reduce production bs_keyword -> BLOCK_LENGTH
-- On IMPLIES reduce production bs_keyword -> BLOCK_LENGTH
-- On IMPACT reduce production bs_keyword -> BLOCK_LENGTH
-- On IFF reduce production bs_keyword -> BLOCK_LENGTH
-- On IF reduce production bs_keyword -> BLOCK_LENGTH
-- On IDENTIFIER reduce production bs_keyword -> BLOCK_LENGTH
-- On HATHAT reduce production bs_keyword -> BLOCK_LENGTH
-- On HAT reduce production bs_keyword -> BLOCK_LENGTH
-- On GTGT reduce production bs_keyword -> BLOCK_LENGTH
-- On GT reduce production bs_keyword -> BLOCK_LENGTH
-- On GLOBAL reduce production bs_keyword -> BLOCK_LENGTH
-- On GHOST reduce production bs_keyword -> BLOCK_LENGTH
-- On GE reduce production bs_keyword -> BLOCK_LENGTH
-- On FUNCTION reduce production bs_keyword -> BLOCK_LENGTH
-- On FROM reduce production bs_keyword -> BLOCK_LENGTH
-- On FRESH reduce production bs_keyword -> BLOCK_LENGTH
-- On FREES reduce production bs_keyword -> BLOCK_LENGTH
-- On FREEABLE reduce production bs_keyword -> BLOCK_LENGTH
-- On FORALL reduce production bs_keyword -> BLOCK_LENGTH
-- On FOR reduce production bs_keyword -> BLOCK_LENGTH
-- On FLOAT reduce production bs_keyword -> BLOCK_LENGTH
-- On FALSE reduce production bs_keyword -> BLOCK_LENGTH
-- On EXT_LET reduce production bs_keyword -> BLOCK_LENGTH
-- On EXT_AT reduce production bs_keyword -> BLOCK_LENGTH
-- On EXITS reduce production bs_keyword -> BLOCK_LENGTH
-- On EXISTS reduce production bs_keyword -> BLOCK_LENGTH
-- On EQUAL reduce production bs_keyword -> BLOCK_LENGTH
-- On EQ reduce production bs_keyword -> BLOCK_LENGTH
-- On EOF reduce production bs_keyword -> BLOCK_LENGTH
-- On ENUM reduce production bs_keyword -> BLOCK_LENGTH
-- On ENSURES reduce production bs_keyword -> BLOCK_LENGTH
-- On EMPTY reduce production bs_keyword -> BLOCK_LENGTH
-- On ELSE reduce production bs_keyword -> BLOCK_LENGTH
-- On DYNAMIC reduce production bs_keyword -> BLOCK_LENGTH
-- On DOUBLE reduce production bs_keyword -> BLOCK_LENGTH
-- On DOTDOTDOT reduce production bs_keyword -> BLOCK_LENGTH
-- On DOTDOT reduce production bs_keyword -> BLOCK_LENGTH
-- On DOT reduce production bs_keyword -> BLOCK_LENGTH
-- On DOLLAR reduce production bs_keyword -> BLOCK_LENGTH
-- On DISJOINT reduce production bs_keyword -> BLOCK_LENGTH
-- On DECREASES reduce production bs_keyword -> BLOCK_LENGTH
-- On DANGLING reduce production bs_keyword -> BLOCK_LENGTH
-- On CUSTOM reduce production bs_keyword -> BLOCK_LENGTH
-- On CONTRACT reduce production bs_keyword -> BLOCK_LENGTH
-- On CONTINUES reduce production bs_keyword -> BLOCK_LENGTH
-- On CONSTANT10 reduce production bs_keyword -> BLOCK_LENGTH
-- On CONSTANT reduce production bs_keyword -> BLOCK_LENGTH
-- On CONST reduce production bs_keyword -> BLOCK_LENGTH
-- On COMPLETE reduce production bs_keyword -> BLOCK_LENGTH
-- On COMMA reduce production bs_keyword -> BLOCK_LENGTH
-- On COLONGT reduce production bs_keyword -> BLOCK_LENGTH
-- On COLONCOLON reduce production bs_keyword -> BLOCK_LENGTH
-- On COLON2 reduce production bs_keyword -> BLOCK_LENGTH
-- On COLON reduce production bs_keyword -> BLOCK_LENGTH
-- On CHAR reduce production bs_keyword -> BLOCK_LENGTH
-- On CASE reduce production bs_keyword -> BLOCK_LENGTH
-- On BSUNION reduce production bs_keyword -> BLOCK_LENGTH
-- On BSTYPE reduce production bs_keyword -> BLOCK_LENGTH
-- On BREAKS reduce production bs_keyword -> BLOCK_LENGTH
-- On BOOLEAN reduce production bs_keyword -> BLOCK_LENGTH
-- On BOOL reduce production bs_keyword -> BLOCK_LENGTH
-- On BLOCK_LENGTH reduce production bs_keyword -> BLOCK_LENGTH
-- On BIMPLIES reduce production bs_keyword -> BLOCK_LENGTH
-- On BIFF reduce production bs_keyword -> BLOCK_LENGTH
-- On BEHAVIORS reduce production bs_keyword -> BLOCK_LENGTH
-- On BEHAVIOR reduce production bs_keyword -> BLOCK_LENGTH
-- On BASE_ADDR reduce production bs_keyword -> BLOCK_LENGTH
-- On AXIOMATIC reduce production bs_keyword -> BLOCK_LENGTH
-- On AXIOM reduce production bs_keyword -> BLOCK_LENGTH
-- On AUTOMATIC reduce production bs_keyword -> BLOCK_LENGTH
-- On AT reduce production bs_keyword -> BLOCK_LENGTH
-- On ASSUMES reduce production bs_keyword -> BLOCK_LENGTH
-- On ASSIGNS reduce production bs_keyword -> BLOCK_LENGTH
-- On ASSERT reduce production bs_keyword -> BLOCK_LENGTH
-- On ARROW reduce production bs_keyword -> BLOCK_LENGTH
-- On AND reduce production bs_keyword -> BLOCK_LENGTH
-- On AMP reduce production bs_keyword -> BLOCK_LENGTH
-- On ALLOCATION reduce production bs_keyword -> BLOCK_LENGTH
-- On ALLOCATES reduce production bs_keyword -> BLOCK_LENGTH
-- On ALLOCABLE reduce production bs_keyword -> BLOCK_LENGTH

State 1027:
## Known stack suffix:
## BIMPLIES
## LR(1) items:
wildcard -> BIMPLIES . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> BIMPLIES
-- On WITH reduce production wildcard -> BIMPLIES
-- On VOLATILE reduce production wildcard -> BIMPLIES
-- On VOID reduce production wildcard -> BIMPLIES
-- On VARIANT reduce production wildcard -> BIMPLIES
-- On VALID_READ reduce production wildcard -> BIMPLIES
-- On VALID_RANGE reduce production wildcard -> BIMPLIES
-- On VALID_INDEX reduce production wildcard -> BIMPLIES
-- On VALID reduce production wildcard -> BIMPLIES
-- On UNSIGNED reduce production wildcard -> BIMPLIES
-- On UNION reduce production wildcard -> BIMPLIES
-- On UNALLOCATED reduce production wildcard -> BIMPLIES
-- On TYPEOF reduce production wildcard -> BIMPLIES
-- On TYPENAME reduce production wildcard -> BIMPLIES
-- On TYPE reduce production wildcard -> BIMPLIES
-- On TRUE reduce production wildcard -> BIMPLIES
-- On TILDE reduce production wildcard -> BIMPLIES
-- On TERMINATES reduce production wildcard -> BIMPLIES
-- On STRUCT reduce production wildcard -> BIMPLIES
-- On STRING_LITERAL reduce production wildcard -> BIMPLIES
-- On STATIC reduce production wildcard -> BIMPLIES
-- On STAR reduce production wildcard -> BIMPLIES
-- On SLICE reduce production wildcard -> BIMPLIES
-- On SLASH reduce production wildcard -> BIMPLIES
-- On SIZEOF reduce production wildcard -> BIMPLIES
-- On SIGNED reduce production wildcard -> BIMPLIES
-- On SHORT reduce production wildcard -> BIMPLIES
-- On SEPARATED reduce production wildcard -> BIMPLIES
-- On SEMICOLON reduce production wildcard -> BIMPLIES
-- On RSQUARE reduce production wildcard -> BIMPLIES
-- On RPAR reduce production wildcard -> BIMPLIES
-- On RETURNS reduce production wildcard -> BIMPLIES
-- On RESULT reduce production wildcard -> BIMPLIES
-- On REQUIRES reduce production wildcard -> BIMPLIES
-- On REGISTER reduce production wildcard -> BIMPLIES
-- On REAL reduce production wildcard -> BIMPLIES
-- On READS reduce production wildcard -> BIMPLIES
-- On RBRACE reduce production wildcard -> BIMPLIES
-- On QUESTION reduce production wildcard -> BIMPLIES
-- On PREDICATE reduce production wildcard -> BIMPLIES
-- On PRAGMA reduce production wildcard -> BIMPLIES
-- On PLUS reduce production wildcard -> BIMPLIES
-- On PIPE reduce production wildcard -> BIMPLIES
-- On PERCENT reduce production wildcard -> BIMPLIES
-- On OR reduce production wildcard -> BIMPLIES
-- On OLD reduce production wildcard -> BIMPLIES
-- On OFFSET reduce production wildcard -> BIMPLIES
-- On NULL reduce production wildcard -> BIMPLIES
-- On NOTHING reduce production wildcard -> BIMPLIES
-- On NOT reduce production wildcard -> BIMPLIES
-- On NE reduce production wildcard -> BIMPLIES
-- On MODULE reduce production wildcard -> BIMPLIES
-- On MODEL reduce production wildcard -> BIMPLIES
-- On MINUS reduce production wildcard -> BIMPLIES
-- On LTLT reduce production wildcard -> BIMPLIES
-- On LTCOLON reduce production wildcard -> BIMPLIES
-- On LT reduce production wildcard -> BIMPLIES
-- On LSQUARE reduce production wildcard -> BIMPLIES
-- On LPAR reduce production wildcard -> BIMPLIES
-- On LOOP reduce production wildcard -> BIMPLIES
-- On LONG reduce production wildcard -> BIMPLIES
-- On LOGIC reduce production wildcard -> BIMPLIES
-- On LET reduce production wildcard -> BIMPLIES
-- On LEMMA reduce production wildcard -> BIMPLIES
-- On LE reduce production wildcard -> BIMPLIES
-- On LBRACE reduce production wildcard -> BIMPLIES
-- On LAMBDA reduce production wildcard -> BIMPLIES
-- On LABEL reduce production wildcard -> BIMPLIES
-- On INVARIANT reduce production wildcard -> BIMPLIES
-- On INTER reduce production wildcard -> BIMPLIES
-- On INTEGER reduce production wildcard -> BIMPLIES
-- On INT reduce production wildcard -> BIMPLIES
-- On INITIALIZED reduce production wildcard -> BIMPLIES
-- On INDUCTIVE reduce production wildcard -> BIMPLIES
-- On INCLUDE reduce production wildcard -> BIMPLIES
-- On IMPLIES reduce production wildcard -> BIMPLIES
-- On IMPACT reduce production wildcard -> BIMPLIES
-- On IFF reduce production wildcard -> BIMPLIES
-- On IF reduce production wildcard -> BIMPLIES
-- On IDENTIFIER reduce production wildcard -> BIMPLIES
-- On HATHAT reduce production wildcard -> BIMPLIES
-- On HAT reduce production wildcard -> BIMPLIES
-- On GTGT reduce production wildcard -> BIMPLIES
-- On GT reduce production wildcard -> BIMPLIES
-- On GLOBAL reduce production wildcard -> BIMPLIES
-- On GHOST reduce production wildcard -> BIMPLIES
-- On GE reduce production wildcard -> BIMPLIES
-- On FUNCTION reduce production wildcard -> BIMPLIES
-- On FROM reduce production wildcard -> BIMPLIES
-- On FRESH reduce production wildcard -> BIMPLIES
-- On FREES reduce production wildcard -> BIMPLIES
-- On FREEABLE reduce production wildcard -> BIMPLIES
-- On FORALL reduce production wildcard -> BIMPLIES
-- On FOR reduce production wildcard -> BIMPLIES
-- On FLOAT reduce production wildcard -> BIMPLIES
-- On FALSE reduce production wildcard -> BIMPLIES
-- On EXT_LET reduce production wildcard -> BIMPLIES
-- On EXT_AT reduce production wildcard -> BIMPLIES
-- On EXITS reduce production wildcard -> BIMPLIES
-- On EXISTS reduce production wildcard -> BIMPLIES
-- On EQUAL reduce production wildcard -> BIMPLIES
-- On EQ reduce production wildcard -> BIMPLIES
-- On EOF reduce production wildcard -> BIMPLIES
-- On ENUM reduce production wildcard -> BIMPLIES
-- On ENSURES reduce production wildcard -> BIMPLIES
-- On EMPTY reduce production wildcard -> BIMPLIES
-- On ELSE reduce production wildcard -> BIMPLIES
-- On DYNAMIC reduce production wildcard -> BIMPLIES
-- On DOUBLE reduce production wildcard -> BIMPLIES
-- On DOTDOTDOT reduce production wildcard -> BIMPLIES
-- On DOTDOT reduce production wildcard -> BIMPLIES
-- On DOT reduce production wildcard -> BIMPLIES
-- On DOLLAR reduce production wildcard -> BIMPLIES
-- On DISJOINT reduce production wildcard -> BIMPLIES
-- On DECREASES reduce production wildcard -> BIMPLIES
-- On DANGLING reduce production wildcard -> BIMPLIES
-- On CUSTOM reduce production wildcard -> BIMPLIES
-- On CONTRACT reduce production wildcard -> BIMPLIES
-- On CONTINUES reduce production wildcard -> BIMPLIES
-- On CONSTANT10 reduce production wildcard -> BIMPLIES
-- On CONSTANT reduce production wildcard -> BIMPLIES
-- On CONST reduce production wildcard -> BIMPLIES
-- On COMPLETE reduce production wildcard -> BIMPLIES
-- On COMMA reduce production wildcard -> BIMPLIES
-- On COLONGT reduce production wildcard -> BIMPLIES
-- On COLONCOLON reduce production wildcard -> BIMPLIES
-- On COLON2 reduce production wildcard -> BIMPLIES
-- On COLON reduce production wildcard -> BIMPLIES
-- On CHAR reduce production wildcard -> BIMPLIES
-- On CASE reduce production wildcard -> BIMPLIES
-- On BSUNION reduce production wildcard -> BIMPLIES
-- On BSTYPE reduce production wildcard -> BIMPLIES
-- On BREAKS reduce production wildcard -> BIMPLIES
-- On BOOLEAN reduce production wildcard -> BIMPLIES
-- On BOOL reduce production wildcard -> BIMPLIES
-- On BLOCK_LENGTH reduce production wildcard -> BIMPLIES
-- On BIMPLIES reduce production wildcard -> BIMPLIES
-- On BIFF reduce production wildcard -> BIMPLIES
-- On BEHAVIORS reduce production wildcard -> BIMPLIES
-- On BEHAVIOR reduce production wildcard -> BIMPLIES
-- On BASE_ADDR reduce production wildcard -> BIMPLIES
-- On AXIOMATIC reduce production wildcard -> BIMPLIES
-- On AXIOM reduce production wildcard -> BIMPLIES
-- On AUTOMATIC reduce production wildcard -> BIMPLIES
-- On AT reduce production wildcard -> BIMPLIES
-- On ASSUMES reduce production wildcard -> BIMPLIES
-- On ASSIGNS reduce production wildcard -> BIMPLIES
-- On ASSERT reduce production wildcard -> BIMPLIES
-- On ARROW reduce production wildcard -> BIMPLIES
-- On AND reduce production wildcard -> BIMPLIES
-- On AMP reduce production wildcard -> BIMPLIES
-- On ALLOCATION reduce production wildcard -> BIMPLIES
-- On ALLOCATES reduce production wildcard -> BIMPLIES
-- On ALLOCABLE reduce production wildcard -> BIMPLIES

State 1028:
## Known stack suffix:
## BIFF
## LR(1) items:
wildcard -> BIFF . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> BIFF
-- On WITH reduce production wildcard -> BIFF
-- On VOLATILE reduce production wildcard -> BIFF
-- On VOID reduce production wildcard -> BIFF
-- On VARIANT reduce production wildcard -> BIFF
-- On VALID_READ reduce production wildcard -> BIFF
-- On VALID_RANGE reduce production wildcard -> BIFF
-- On VALID_INDEX reduce production wildcard -> BIFF
-- On VALID reduce production wildcard -> BIFF
-- On UNSIGNED reduce production wildcard -> BIFF
-- On UNION reduce production wildcard -> BIFF
-- On UNALLOCATED reduce production wildcard -> BIFF
-- On TYPEOF reduce production wildcard -> BIFF
-- On TYPENAME reduce production wildcard -> BIFF
-- On TYPE reduce production wildcard -> BIFF
-- On TRUE reduce production wildcard -> BIFF
-- On TILDE reduce production wildcard -> BIFF
-- On TERMINATES reduce production wildcard -> BIFF
-- On STRUCT reduce production wildcard -> BIFF
-- On STRING_LITERAL reduce production wildcard -> BIFF
-- On STATIC reduce production wildcard -> BIFF
-- On STAR reduce production wildcard -> BIFF
-- On SLICE reduce production wildcard -> BIFF
-- On SLASH reduce production wildcard -> BIFF
-- On SIZEOF reduce production wildcard -> BIFF
-- On SIGNED reduce production wildcard -> BIFF
-- On SHORT reduce production wildcard -> BIFF
-- On SEPARATED reduce production wildcard -> BIFF
-- On SEMICOLON reduce production wildcard -> BIFF
-- On RSQUARE reduce production wildcard -> BIFF
-- On RPAR reduce production wildcard -> BIFF
-- On RETURNS reduce production wildcard -> BIFF
-- On RESULT reduce production wildcard -> BIFF
-- On REQUIRES reduce production wildcard -> BIFF
-- On REGISTER reduce production wildcard -> BIFF
-- On REAL reduce production wildcard -> BIFF
-- On READS reduce production wildcard -> BIFF
-- On RBRACE reduce production wildcard -> BIFF
-- On QUESTION reduce production wildcard -> BIFF
-- On PREDICATE reduce production wildcard -> BIFF
-- On PRAGMA reduce production wildcard -> BIFF
-- On PLUS reduce production wildcard -> BIFF
-- On PIPE reduce production wildcard -> BIFF
-- On PERCENT reduce production wildcard -> BIFF
-- On OR reduce production wildcard -> BIFF
-- On OLD reduce production wildcard -> BIFF
-- On OFFSET reduce production wildcard -> BIFF
-- On NULL reduce production wildcard -> BIFF
-- On NOTHING reduce production wildcard -> BIFF
-- On NOT reduce production wildcard -> BIFF
-- On NE reduce production wildcard -> BIFF
-- On MODULE reduce production wildcard -> BIFF
-- On MODEL reduce production wildcard -> BIFF
-- On MINUS reduce production wildcard -> BIFF
-- On LTLT reduce production wildcard -> BIFF
-- On LTCOLON reduce production wildcard -> BIFF
-- On LT reduce production wildcard -> BIFF
-- On LSQUARE reduce production wildcard -> BIFF
-- On LPAR reduce production wildcard -> BIFF
-- On LOOP reduce production wildcard -> BIFF
-- On LONG reduce production wildcard -> BIFF
-- On LOGIC reduce production wildcard -> BIFF
-- On LET reduce production wildcard -> BIFF
-- On LEMMA reduce production wildcard -> BIFF
-- On LE reduce production wildcard -> BIFF
-- On LBRACE reduce production wildcard -> BIFF
-- On LAMBDA reduce production wildcard -> BIFF
-- On LABEL reduce production wildcard -> BIFF
-- On INVARIANT reduce production wildcard -> BIFF
-- On INTER reduce production wildcard -> BIFF
-- On INTEGER reduce production wildcard -> BIFF
-- On INT reduce production wildcard -> BIFF
-- On INITIALIZED reduce production wildcard -> BIFF
-- On INDUCTIVE reduce production wildcard -> BIFF
-- On INCLUDE reduce production wildcard -> BIFF
-- On IMPLIES reduce production wildcard -> BIFF
-- On IMPACT reduce production wildcard -> BIFF
-- On IFF reduce production wildcard -> BIFF
-- On IF reduce production wildcard -> BIFF
-- On IDENTIFIER reduce production wildcard -> BIFF
-- On HATHAT reduce production wildcard -> BIFF
-- On HAT reduce production wildcard -> BIFF
-- On GTGT reduce production wildcard -> BIFF
-- On GT reduce production wildcard -> BIFF
-- On GLOBAL reduce production wildcard -> BIFF
-- On GHOST reduce production wildcard -> BIFF
-- On GE reduce production wildcard -> BIFF
-- On FUNCTION reduce production wildcard -> BIFF
-- On FROM reduce production wildcard -> BIFF
-- On FRESH reduce production wildcard -> BIFF
-- On FREES reduce production wildcard -> BIFF
-- On FREEABLE reduce production wildcard -> BIFF
-- On FORALL reduce production wildcard -> BIFF
-- On FOR reduce production wildcard -> BIFF
-- On FLOAT reduce production wildcard -> BIFF
-- On FALSE reduce production wildcard -> BIFF
-- On EXT_LET reduce production wildcard -> BIFF
-- On EXT_AT reduce production wildcard -> BIFF
-- On EXITS reduce production wildcard -> BIFF
-- On EXISTS reduce production wildcard -> BIFF
-- On EQUAL reduce production wildcard -> BIFF
-- On EQ reduce production wildcard -> BIFF
-- On EOF reduce production wildcard -> BIFF
-- On ENUM reduce production wildcard -> BIFF
-- On ENSURES reduce production wildcard -> BIFF
-- On EMPTY reduce production wildcard -> BIFF
-- On ELSE reduce production wildcard -> BIFF
-- On DYNAMIC reduce production wildcard -> BIFF
-- On DOUBLE reduce production wildcard -> BIFF
-- On DOTDOTDOT reduce production wildcard -> BIFF
-- On DOTDOT reduce production wildcard -> BIFF
-- On DOT reduce production wildcard -> BIFF
-- On DOLLAR reduce production wildcard -> BIFF
-- On DISJOINT reduce production wildcard -> BIFF
-- On DECREASES reduce production wildcard -> BIFF
-- On DANGLING reduce production wildcard -> BIFF
-- On CUSTOM reduce production wildcard -> BIFF
-- On CONTRACT reduce production wildcard -> BIFF
-- On CONTINUES reduce production wildcard -> BIFF
-- On CONSTANT10 reduce production wildcard -> BIFF
-- On CONSTANT reduce production wildcard -> BIFF
-- On CONST reduce production wildcard -> BIFF
-- On COMPLETE reduce production wildcard -> BIFF
-- On COMMA reduce production wildcard -> BIFF
-- On COLONGT reduce production wildcard -> BIFF
-- On COLONCOLON reduce production wildcard -> BIFF
-- On COLON2 reduce production wildcard -> BIFF
-- On COLON reduce production wildcard -> BIFF
-- On CHAR reduce production wildcard -> BIFF
-- On CASE reduce production wildcard -> BIFF
-- On BSUNION reduce production wildcard -> BIFF
-- On BSTYPE reduce production wildcard -> BIFF
-- On BREAKS reduce production wildcard -> BIFF
-- On BOOLEAN reduce production wildcard -> BIFF
-- On BOOL reduce production wildcard -> BIFF
-- On BLOCK_LENGTH reduce production wildcard -> BIFF
-- On BIMPLIES reduce production wildcard -> BIFF
-- On BIFF reduce production wildcard -> BIFF
-- On BEHAVIORS reduce production wildcard -> BIFF
-- On BEHAVIOR reduce production wildcard -> BIFF
-- On BASE_ADDR reduce production wildcard -> BIFF
-- On AXIOMATIC reduce production wildcard -> BIFF
-- On AXIOM reduce production wildcard -> BIFF
-- On AUTOMATIC reduce production wildcard -> BIFF
-- On AT reduce production wildcard -> BIFF
-- On ASSUMES reduce production wildcard -> BIFF
-- On ASSIGNS reduce production wildcard -> BIFF
-- On ASSERT reduce production wildcard -> BIFF
-- On ARROW reduce production wildcard -> BIFF
-- On AND reduce production wildcard -> BIFF
-- On AMP reduce production wildcard -> BIFF
-- On ALLOCATION reduce production wildcard -> BIFF
-- On ALLOCATES reduce production wildcard -> BIFF
-- On ALLOCABLE reduce production wildcard -> BIFF

State 1029:
## Known stack suffix:
## BASE_ADDR
## LR(1) items:
bs_keyword -> BASE_ADDR . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> BASE_ADDR
-- On WITH reduce production bs_keyword -> BASE_ADDR
-- On VOLATILE reduce production bs_keyword -> BASE_ADDR
-- On VOID reduce production bs_keyword -> BASE_ADDR
-- On VARIANT reduce production bs_keyword -> BASE_ADDR
-- On VALID_READ reduce production bs_keyword -> BASE_ADDR
-- On VALID_RANGE reduce production bs_keyword -> BASE_ADDR
-- On VALID_INDEX reduce production bs_keyword -> BASE_ADDR
-- On VALID reduce production bs_keyword -> BASE_ADDR
-- On UNSIGNED reduce production bs_keyword -> BASE_ADDR
-- On UNION reduce production bs_keyword -> BASE_ADDR
-- On UNALLOCATED reduce production bs_keyword -> BASE_ADDR
-- On TYPEOF reduce production bs_keyword -> BASE_ADDR
-- On TYPENAME reduce production bs_keyword -> BASE_ADDR
-- On TYPE reduce production bs_keyword -> BASE_ADDR
-- On TRUE reduce production bs_keyword -> BASE_ADDR
-- On TILDE reduce production bs_keyword -> BASE_ADDR
-- On TERMINATES reduce production bs_keyword -> BASE_ADDR
-- On STRUCT reduce production bs_keyword -> BASE_ADDR
-- On STRING_LITERAL reduce production bs_keyword -> BASE_ADDR
-- On STATIC reduce production bs_keyword -> BASE_ADDR
-- On STAR reduce production bs_keyword -> BASE_ADDR
-- On SLICE reduce production bs_keyword -> BASE_ADDR
-- On SLASH reduce production bs_keyword -> BASE_ADDR
-- On SIZEOF reduce production bs_keyword -> BASE_ADDR
-- On SIGNED reduce production bs_keyword -> BASE_ADDR
-- On SHORT reduce production bs_keyword -> BASE_ADDR
-- On SEPARATED reduce production bs_keyword -> BASE_ADDR
-- On SEMICOLON reduce production bs_keyword -> BASE_ADDR
-- On RSQUARE reduce production bs_keyword -> BASE_ADDR
-- On RPAR reduce production bs_keyword -> BASE_ADDR
-- On RETURNS reduce production bs_keyword -> BASE_ADDR
-- On RESULT reduce production bs_keyword -> BASE_ADDR
-- On REQUIRES reduce production bs_keyword -> BASE_ADDR
-- On REGISTER reduce production bs_keyword -> BASE_ADDR
-- On REAL reduce production bs_keyword -> BASE_ADDR
-- On READS reduce production bs_keyword -> BASE_ADDR
-- On RBRACE reduce production bs_keyword -> BASE_ADDR
-- On QUESTION reduce production bs_keyword -> BASE_ADDR
-- On PREDICATE reduce production bs_keyword -> BASE_ADDR
-- On PRAGMA reduce production bs_keyword -> BASE_ADDR
-- On PLUS reduce production bs_keyword -> BASE_ADDR
-- On PIPE reduce production bs_keyword -> BASE_ADDR
-- On PERCENT reduce production bs_keyword -> BASE_ADDR
-- On OR reduce production bs_keyword -> BASE_ADDR
-- On OLD reduce production bs_keyword -> BASE_ADDR
-- On OFFSET reduce production bs_keyword -> BASE_ADDR
-- On NULL reduce production bs_keyword -> BASE_ADDR
-- On NOTHING reduce production bs_keyword -> BASE_ADDR
-- On NOT reduce production bs_keyword -> BASE_ADDR
-- On NE reduce production bs_keyword -> BASE_ADDR
-- On MODULE reduce production bs_keyword -> BASE_ADDR
-- On MODEL reduce production bs_keyword -> BASE_ADDR
-- On MINUS reduce production bs_keyword -> BASE_ADDR
-- On LTLT reduce production bs_keyword -> BASE_ADDR
-- On LTCOLON reduce production bs_keyword -> BASE_ADDR
-- On LT reduce production bs_keyword -> BASE_ADDR
-- On LSQUARE reduce production bs_keyword -> BASE_ADDR
-- On LPAR reduce production bs_keyword -> BASE_ADDR
-- On LOOP reduce production bs_keyword -> BASE_ADDR
-- On LONG reduce production bs_keyword -> BASE_ADDR
-- On LOGIC reduce production bs_keyword -> BASE_ADDR
-- On LET reduce production bs_keyword -> BASE_ADDR
-- On LEMMA reduce production bs_keyword -> BASE_ADDR
-- On LE reduce production bs_keyword -> BASE_ADDR
-- On LBRACE reduce production bs_keyword -> BASE_ADDR
-- On LAMBDA reduce production bs_keyword -> BASE_ADDR
-- On LABEL reduce production bs_keyword -> BASE_ADDR
-- On INVARIANT reduce production bs_keyword -> BASE_ADDR
-- On INTER reduce production bs_keyword -> BASE_ADDR
-- On INTEGER reduce production bs_keyword -> BASE_ADDR
-- On INT reduce production bs_keyword -> BASE_ADDR
-- On INITIALIZED reduce production bs_keyword -> BASE_ADDR
-- On INDUCTIVE reduce production bs_keyword -> BASE_ADDR
-- On INCLUDE reduce production bs_keyword -> BASE_ADDR
-- On IMPLIES reduce production bs_keyword -> BASE_ADDR
-- On IMPACT reduce production bs_keyword -> BASE_ADDR
-- On IFF reduce production bs_keyword -> BASE_ADDR
-- On IF reduce production bs_keyword -> BASE_ADDR
-- On IDENTIFIER reduce production bs_keyword -> BASE_ADDR
-- On HATHAT reduce production bs_keyword -> BASE_ADDR
-- On HAT reduce production bs_keyword -> BASE_ADDR
-- On GTGT reduce production bs_keyword -> BASE_ADDR
-- On GT reduce production bs_keyword -> BASE_ADDR
-- On GLOBAL reduce production bs_keyword -> BASE_ADDR
-- On GHOST reduce production bs_keyword -> BASE_ADDR
-- On GE reduce production bs_keyword -> BASE_ADDR
-- On FUNCTION reduce production bs_keyword -> BASE_ADDR
-- On FROM reduce production bs_keyword -> BASE_ADDR
-- On FRESH reduce production bs_keyword -> BASE_ADDR
-- On FREES reduce production bs_keyword -> BASE_ADDR
-- On FREEABLE reduce production bs_keyword -> BASE_ADDR
-- On FORALL reduce production bs_keyword -> BASE_ADDR
-- On FOR reduce production bs_keyword -> BASE_ADDR
-- On FLOAT reduce production bs_keyword -> BASE_ADDR
-- On FALSE reduce production bs_keyword -> BASE_ADDR
-- On EXT_LET reduce production bs_keyword -> BASE_ADDR
-- On EXT_AT reduce production bs_keyword -> BASE_ADDR
-- On EXITS reduce production bs_keyword -> BASE_ADDR
-- On EXISTS reduce production bs_keyword -> BASE_ADDR
-- On EQUAL reduce production bs_keyword -> BASE_ADDR
-- On EQ reduce production bs_keyword -> BASE_ADDR
-- On EOF reduce production bs_keyword -> BASE_ADDR
-- On ENUM reduce production bs_keyword -> BASE_ADDR
-- On ENSURES reduce production bs_keyword -> BASE_ADDR
-- On EMPTY reduce production bs_keyword -> BASE_ADDR
-- On ELSE reduce production bs_keyword -> BASE_ADDR
-- On DYNAMIC reduce production bs_keyword -> BASE_ADDR
-- On DOUBLE reduce production bs_keyword -> BASE_ADDR
-- On DOTDOTDOT reduce production bs_keyword -> BASE_ADDR
-- On DOTDOT reduce production bs_keyword -> BASE_ADDR
-- On DOT reduce production bs_keyword -> BASE_ADDR
-- On DOLLAR reduce production bs_keyword -> BASE_ADDR
-- On DISJOINT reduce production bs_keyword -> BASE_ADDR
-- On DECREASES reduce production bs_keyword -> BASE_ADDR
-- On DANGLING reduce production bs_keyword -> BASE_ADDR
-- On CUSTOM reduce production bs_keyword -> BASE_ADDR
-- On CONTRACT reduce production bs_keyword -> BASE_ADDR
-- On CONTINUES reduce production bs_keyword -> BASE_ADDR
-- On CONSTANT10 reduce production bs_keyword -> BASE_ADDR
-- On CONSTANT reduce production bs_keyword -> BASE_ADDR
-- On CONST reduce production bs_keyword -> BASE_ADDR
-- On COMPLETE reduce production bs_keyword -> BASE_ADDR
-- On COMMA reduce production bs_keyword -> BASE_ADDR
-- On COLONGT reduce production bs_keyword -> BASE_ADDR
-- On COLONCOLON reduce production bs_keyword -> BASE_ADDR
-- On COLON2 reduce production bs_keyword -> BASE_ADDR
-- On COLON reduce production bs_keyword -> BASE_ADDR
-- On CHAR reduce production bs_keyword -> BASE_ADDR
-- On CASE reduce production bs_keyword -> BASE_ADDR
-- On BSUNION reduce production bs_keyword -> BASE_ADDR
-- On BSTYPE reduce production bs_keyword -> BASE_ADDR
-- On BREAKS reduce production bs_keyword -> BASE_ADDR
-- On BOOLEAN reduce production bs_keyword -> BASE_ADDR
-- On BOOL reduce production bs_keyword -> BASE_ADDR
-- On BLOCK_LENGTH reduce production bs_keyword -> BASE_ADDR
-- On BIMPLIES reduce production bs_keyword -> BASE_ADDR
-- On BIFF reduce production bs_keyword -> BASE_ADDR
-- On BEHAVIORS reduce production bs_keyword -> BASE_ADDR
-- On BEHAVIOR reduce production bs_keyword -> BASE_ADDR
-- On BASE_ADDR reduce production bs_keyword -> BASE_ADDR
-- On AXIOMATIC reduce production bs_keyword -> BASE_ADDR
-- On AXIOM reduce production bs_keyword -> BASE_ADDR
-- On AUTOMATIC reduce production bs_keyword -> BASE_ADDR
-- On AT reduce production bs_keyword -> BASE_ADDR
-- On ASSUMES reduce production bs_keyword -> BASE_ADDR
-- On ASSIGNS reduce production bs_keyword -> BASE_ADDR
-- On ASSERT reduce production bs_keyword -> BASE_ADDR
-- On ARROW reduce production bs_keyword -> BASE_ADDR
-- On AND reduce production bs_keyword -> BASE_ADDR
-- On AMP reduce production bs_keyword -> BASE_ADDR
-- On ALLOCATION reduce production bs_keyword -> BASE_ADDR
-- On ALLOCATES reduce production bs_keyword -> BASE_ADDR
-- On ALLOCABLE reduce production bs_keyword -> BASE_ADDR

State 1030:
## Known stack suffix:
## AUTOMATIC
## LR(1) items:
bs_keyword -> AUTOMATIC . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> AUTOMATIC
-- On WITH reduce production bs_keyword -> AUTOMATIC
-- On VOLATILE reduce production bs_keyword -> AUTOMATIC
-- On VOID reduce production bs_keyword -> AUTOMATIC
-- On VARIANT reduce production bs_keyword -> AUTOMATIC
-- On VALID_READ reduce production bs_keyword -> AUTOMATIC
-- On VALID_RANGE reduce production bs_keyword -> AUTOMATIC
-- On VALID_INDEX reduce production bs_keyword -> AUTOMATIC
-- On VALID reduce production bs_keyword -> AUTOMATIC
-- On UNSIGNED reduce production bs_keyword -> AUTOMATIC
-- On UNION reduce production bs_keyword -> AUTOMATIC
-- On UNALLOCATED reduce production bs_keyword -> AUTOMATIC
-- On TYPEOF reduce production bs_keyword -> AUTOMATIC
-- On TYPENAME reduce production bs_keyword -> AUTOMATIC
-- On TYPE reduce production bs_keyword -> AUTOMATIC
-- On TRUE reduce production bs_keyword -> AUTOMATIC
-- On TILDE reduce production bs_keyword -> AUTOMATIC
-- On TERMINATES reduce production bs_keyword -> AUTOMATIC
-- On STRUCT reduce production bs_keyword -> AUTOMATIC
-- On STRING_LITERAL reduce production bs_keyword -> AUTOMATIC
-- On STATIC reduce production bs_keyword -> AUTOMATIC
-- On STAR reduce production bs_keyword -> AUTOMATIC
-- On SLICE reduce production bs_keyword -> AUTOMATIC
-- On SLASH reduce production bs_keyword -> AUTOMATIC
-- On SIZEOF reduce production bs_keyword -> AUTOMATIC
-- On SIGNED reduce production bs_keyword -> AUTOMATIC
-- On SHORT reduce production bs_keyword -> AUTOMATIC
-- On SEPARATED reduce production bs_keyword -> AUTOMATIC
-- On SEMICOLON reduce production bs_keyword -> AUTOMATIC
-- On RSQUARE reduce production bs_keyword -> AUTOMATIC
-- On RPAR reduce production bs_keyword -> AUTOMATIC
-- On RETURNS reduce production bs_keyword -> AUTOMATIC
-- On RESULT reduce production bs_keyword -> AUTOMATIC
-- On REQUIRES reduce production bs_keyword -> AUTOMATIC
-- On REGISTER reduce production bs_keyword -> AUTOMATIC
-- On REAL reduce production bs_keyword -> AUTOMATIC
-- On READS reduce production bs_keyword -> AUTOMATIC
-- On RBRACE reduce production bs_keyword -> AUTOMATIC
-- On QUESTION reduce production bs_keyword -> AUTOMATIC
-- On PREDICATE reduce production bs_keyword -> AUTOMATIC
-- On PRAGMA reduce production bs_keyword -> AUTOMATIC
-- On PLUS reduce production bs_keyword -> AUTOMATIC
-- On PIPE reduce production bs_keyword -> AUTOMATIC
-- On PERCENT reduce production bs_keyword -> AUTOMATIC
-- On OR reduce production bs_keyword -> AUTOMATIC
-- On OLD reduce production bs_keyword -> AUTOMATIC
-- On OFFSET reduce production bs_keyword -> AUTOMATIC
-- On NULL reduce production bs_keyword -> AUTOMATIC
-- On NOTHING reduce production bs_keyword -> AUTOMATIC
-- On NOT reduce production bs_keyword -> AUTOMATIC
-- On NE reduce production bs_keyword -> AUTOMATIC
-- On MODULE reduce production bs_keyword -> AUTOMATIC
-- On MODEL reduce production bs_keyword -> AUTOMATIC
-- On MINUS reduce production bs_keyword -> AUTOMATIC
-- On LTLT reduce production bs_keyword -> AUTOMATIC
-- On LTCOLON reduce production bs_keyword -> AUTOMATIC
-- On LT reduce production bs_keyword -> AUTOMATIC
-- On LSQUARE reduce production bs_keyword -> AUTOMATIC
-- On LPAR reduce production bs_keyword -> AUTOMATIC
-- On LOOP reduce production bs_keyword -> AUTOMATIC
-- On LONG reduce production bs_keyword -> AUTOMATIC
-- On LOGIC reduce production bs_keyword -> AUTOMATIC
-- On LET reduce production bs_keyword -> AUTOMATIC
-- On LEMMA reduce production bs_keyword -> AUTOMATIC
-- On LE reduce production bs_keyword -> AUTOMATIC
-- On LBRACE reduce production bs_keyword -> AUTOMATIC
-- On LAMBDA reduce production bs_keyword -> AUTOMATIC
-- On LABEL reduce production bs_keyword -> AUTOMATIC
-- On INVARIANT reduce production bs_keyword -> AUTOMATIC
-- On INTER reduce production bs_keyword -> AUTOMATIC
-- On INTEGER reduce production bs_keyword -> AUTOMATIC
-- On INT reduce production bs_keyword -> AUTOMATIC
-- On INITIALIZED reduce production bs_keyword -> AUTOMATIC
-- On INDUCTIVE reduce production bs_keyword -> AUTOMATIC
-- On INCLUDE reduce production bs_keyword -> AUTOMATIC
-- On IMPLIES reduce production bs_keyword -> AUTOMATIC
-- On IMPACT reduce production bs_keyword -> AUTOMATIC
-- On IFF reduce production bs_keyword -> AUTOMATIC
-- On IF reduce production bs_keyword -> AUTOMATIC
-- On IDENTIFIER reduce production bs_keyword -> AUTOMATIC
-- On HATHAT reduce production bs_keyword -> AUTOMATIC
-- On HAT reduce production bs_keyword -> AUTOMATIC
-- On GTGT reduce production bs_keyword -> AUTOMATIC
-- On GT reduce production bs_keyword -> AUTOMATIC
-- On GLOBAL reduce production bs_keyword -> AUTOMATIC
-- On GHOST reduce production bs_keyword -> AUTOMATIC
-- On GE reduce production bs_keyword -> AUTOMATIC
-- On FUNCTION reduce production bs_keyword -> AUTOMATIC
-- On FROM reduce production bs_keyword -> AUTOMATIC
-- On FRESH reduce production bs_keyword -> AUTOMATIC
-- On FREES reduce production bs_keyword -> AUTOMATIC
-- On FREEABLE reduce production bs_keyword -> AUTOMATIC
-- On FORALL reduce production bs_keyword -> AUTOMATIC
-- On FOR reduce production bs_keyword -> AUTOMATIC
-- On FLOAT reduce production bs_keyword -> AUTOMATIC
-- On FALSE reduce production bs_keyword -> AUTOMATIC
-- On EXT_LET reduce production bs_keyword -> AUTOMATIC
-- On EXT_AT reduce production bs_keyword -> AUTOMATIC
-- On EXITS reduce production bs_keyword -> AUTOMATIC
-- On EXISTS reduce production bs_keyword -> AUTOMATIC
-- On EQUAL reduce production bs_keyword -> AUTOMATIC
-- On EQ reduce production bs_keyword -> AUTOMATIC
-- On EOF reduce production bs_keyword -> AUTOMATIC
-- On ENUM reduce production bs_keyword -> AUTOMATIC
-- On ENSURES reduce production bs_keyword -> AUTOMATIC
-- On EMPTY reduce production bs_keyword -> AUTOMATIC
-- On ELSE reduce production bs_keyword -> AUTOMATIC
-- On DYNAMIC reduce production bs_keyword -> AUTOMATIC
-- On DOUBLE reduce production bs_keyword -> AUTOMATIC
-- On DOTDOTDOT reduce production bs_keyword -> AUTOMATIC
-- On DOTDOT reduce production bs_keyword -> AUTOMATIC
-- On DOT reduce production bs_keyword -> AUTOMATIC
-- On DOLLAR reduce production bs_keyword -> AUTOMATIC
-- On DISJOINT reduce production bs_keyword -> AUTOMATIC
-- On DECREASES reduce production bs_keyword -> AUTOMATIC
-- On DANGLING reduce production bs_keyword -> AUTOMATIC
-- On CUSTOM reduce production bs_keyword -> AUTOMATIC
-- On CONTRACT reduce production bs_keyword -> AUTOMATIC
-- On CONTINUES reduce production bs_keyword -> AUTOMATIC
-- On CONSTANT10 reduce production bs_keyword -> AUTOMATIC
-- On CONSTANT reduce production bs_keyword -> AUTOMATIC
-- On CONST reduce production bs_keyword -> AUTOMATIC
-- On COMPLETE reduce production bs_keyword -> AUTOMATIC
-- On COMMA reduce production bs_keyword -> AUTOMATIC
-- On COLONGT reduce production bs_keyword -> AUTOMATIC
-- On COLONCOLON reduce production bs_keyword -> AUTOMATIC
-- On COLON2 reduce production bs_keyword -> AUTOMATIC
-- On COLON reduce production bs_keyword -> AUTOMATIC
-- On CHAR reduce production bs_keyword -> AUTOMATIC
-- On CASE reduce production bs_keyword -> AUTOMATIC
-- On BSUNION reduce production bs_keyword -> AUTOMATIC
-- On BSTYPE reduce production bs_keyword -> AUTOMATIC
-- On BREAKS reduce production bs_keyword -> AUTOMATIC
-- On BOOLEAN reduce production bs_keyword -> AUTOMATIC
-- On BOOL reduce production bs_keyword -> AUTOMATIC
-- On BLOCK_LENGTH reduce production bs_keyword -> AUTOMATIC
-- On BIMPLIES reduce production bs_keyword -> AUTOMATIC
-- On BIFF reduce production bs_keyword -> AUTOMATIC
-- On BEHAVIORS reduce production bs_keyword -> AUTOMATIC
-- On BEHAVIOR reduce production bs_keyword -> AUTOMATIC
-- On BASE_ADDR reduce production bs_keyword -> AUTOMATIC
-- On AXIOMATIC reduce production bs_keyword -> AUTOMATIC
-- On AXIOM reduce production bs_keyword -> AUTOMATIC
-- On AUTOMATIC reduce production bs_keyword -> AUTOMATIC
-- On AT reduce production bs_keyword -> AUTOMATIC
-- On ASSUMES reduce production bs_keyword -> AUTOMATIC
-- On ASSIGNS reduce production bs_keyword -> AUTOMATIC
-- On ASSERT reduce production bs_keyword -> AUTOMATIC
-- On ARROW reduce production bs_keyword -> AUTOMATIC
-- On AND reduce production bs_keyword -> AUTOMATIC
-- On AMP reduce production bs_keyword -> AUTOMATIC
-- On ALLOCATION reduce production bs_keyword -> AUTOMATIC
-- On ALLOCATES reduce production bs_keyword -> AUTOMATIC
-- On ALLOCABLE reduce production bs_keyword -> AUTOMATIC

State 1031:
## Known stack suffix:
## AT
## LR(1) items:
bs_keyword -> AT . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> AT
-- On WITH reduce production bs_keyword -> AT
-- On VOLATILE reduce production bs_keyword -> AT
-- On VOID reduce production bs_keyword -> AT
-- On VARIANT reduce production bs_keyword -> AT
-- On VALID_READ reduce production bs_keyword -> AT
-- On VALID_RANGE reduce production bs_keyword -> AT
-- On VALID_INDEX reduce production bs_keyword -> AT
-- On VALID reduce production bs_keyword -> AT
-- On UNSIGNED reduce production bs_keyword -> AT
-- On UNION reduce production bs_keyword -> AT
-- On UNALLOCATED reduce production bs_keyword -> AT
-- On TYPEOF reduce production bs_keyword -> AT
-- On TYPENAME reduce production bs_keyword -> AT
-- On TYPE reduce production bs_keyword -> AT
-- On TRUE reduce production bs_keyword -> AT
-- On TILDE reduce production bs_keyword -> AT
-- On TERMINATES reduce production bs_keyword -> AT
-- On STRUCT reduce production bs_keyword -> AT
-- On STRING_LITERAL reduce production bs_keyword -> AT
-- On STATIC reduce production bs_keyword -> AT
-- On STAR reduce production bs_keyword -> AT
-- On SLICE reduce production bs_keyword -> AT
-- On SLASH reduce production bs_keyword -> AT
-- On SIZEOF reduce production bs_keyword -> AT
-- On SIGNED reduce production bs_keyword -> AT
-- On SHORT reduce production bs_keyword -> AT
-- On SEPARATED reduce production bs_keyword -> AT
-- On SEMICOLON reduce production bs_keyword -> AT
-- On RSQUARE reduce production bs_keyword -> AT
-- On RPAR reduce production bs_keyword -> AT
-- On RETURNS reduce production bs_keyword -> AT
-- On RESULT reduce production bs_keyword -> AT
-- On REQUIRES reduce production bs_keyword -> AT
-- On REGISTER reduce production bs_keyword -> AT
-- On REAL reduce production bs_keyword -> AT
-- On READS reduce production bs_keyword -> AT
-- On RBRACE reduce production bs_keyword -> AT
-- On QUESTION reduce production bs_keyword -> AT
-- On PREDICATE reduce production bs_keyword -> AT
-- On PRAGMA reduce production bs_keyword -> AT
-- On PLUS reduce production bs_keyword -> AT
-- On PIPE reduce production bs_keyword -> AT
-- On PERCENT reduce production bs_keyword -> AT
-- On OR reduce production bs_keyword -> AT
-- On OLD reduce production bs_keyword -> AT
-- On OFFSET reduce production bs_keyword -> AT
-- On NULL reduce production bs_keyword -> AT
-- On NOTHING reduce production bs_keyword -> AT
-- On NOT reduce production bs_keyword -> AT
-- On NE reduce production bs_keyword -> AT
-- On MODULE reduce production bs_keyword -> AT
-- On MODEL reduce production bs_keyword -> AT
-- On MINUS reduce production bs_keyword -> AT
-- On LTLT reduce production bs_keyword -> AT
-- On LTCOLON reduce production bs_keyword -> AT
-- On LT reduce production bs_keyword -> AT
-- On LSQUARE reduce production bs_keyword -> AT
-- On LPAR reduce production bs_keyword -> AT
-- On LOOP reduce production bs_keyword -> AT
-- On LONG reduce production bs_keyword -> AT
-- On LOGIC reduce production bs_keyword -> AT
-- On LET reduce production bs_keyword -> AT
-- On LEMMA reduce production bs_keyword -> AT
-- On LE reduce production bs_keyword -> AT
-- On LBRACE reduce production bs_keyword -> AT
-- On LAMBDA reduce production bs_keyword -> AT
-- On LABEL reduce production bs_keyword -> AT
-- On INVARIANT reduce production bs_keyword -> AT
-- On INTER reduce production bs_keyword -> AT
-- On INTEGER reduce production bs_keyword -> AT
-- On INT reduce production bs_keyword -> AT
-- On INITIALIZED reduce production bs_keyword -> AT
-- On INDUCTIVE reduce production bs_keyword -> AT
-- On INCLUDE reduce production bs_keyword -> AT
-- On IMPLIES reduce production bs_keyword -> AT
-- On IMPACT reduce production bs_keyword -> AT
-- On IFF reduce production bs_keyword -> AT
-- On IF reduce production bs_keyword -> AT
-- On IDENTIFIER reduce production bs_keyword -> AT
-- On HATHAT reduce production bs_keyword -> AT
-- On HAT reduce production bs_keyword -> AT
-- On GTGT reduce production bs_keyword -> AT
-- On GT reduce production bs_keyword -> AT
-- On GLOBAL reduce production bs_keyword -> AT
-- On GHOST reduce production bs_keyword -> AT
-- On GE reduce production bs_keyword -> AT
-- On FUNCTION reduce production bs_keyword -> AT
-- On FROM reduce production bs_keyword -> AT
-- On FRESH reduce production bs_keyword -> AT
-- On FREES reduce production bs_keyword -> AT
-- On FREEABLE reduce production bs_keyword -> AT
-- On FORALL reduce production bs_keyword -> AT
-- On FOR reduce production bs_keyword -> AT
-- On FLOAT reduce production bs_keyword -> AT
-- On FALSE reduce production bs_keyword -> AT
-- On EXT_LET reduce production bs_keyword -> AT
-- On EXT_AT reduce production bs_keyword -> AT
-- On EXITS reduce production bs_keyword -> AT
-- On EXISTS reduce production bs_keyword -> AT
-- On EQUAL reduce production bs_keyword -> AT
-- On EQ reduce production bs_keyword -> AT
-- On EOF reduce production bs_keyword -> AT
-- On ENUM reduce production bs_keyword -> AT
-- On ENSURES reduce production bs_keyword -> AT
-- On EMPTY reduce production bs_keyword -> AT
-- On ELSE reduce production bs_keyword -> AT
-- On DYNAMIC reduce production bs_keyword -> AT
-- On DOUBLE reduce production bs_keyword -> AT
-- On DOTDOTDOT reduce production bs_keyword -> AT
-- On DOTDOT reduce production bs_keyword -> AT
-- On DOT reduce production bs_keyword -> AT
-- On DOLLAR reduce production bs_keyword -> AT
-- On DISJOINT reduce production bs_keyword -> AT
-- On DECREASES reduce production bs_keyword -> AT
-- On DANGLING reduce production bs_keyword -> AT
-- On CUSTOM reduce production bs_keyword -> AT
-- On CONTRACT reduce production bs_keyword -> AT
-- On CONTINUES reduce production bs_keyword -> AT
-- On CONSTANT10 reduce production bs_keyword -> AT
-- On CONSTANT reduce production bs_keyword -> AT
-- On CONST reduce production bs_keyword -> AT
-- On COMPLETE reduce production bs_keyword -> AT
-- On COMMA reduce production bs_keyword -> AT
-- On COLONGT reduce production bs_keyword -> AT
-- On COLONCOLON reduce production bs_keyword -> AT
-- On COLON2 reduce production bs_keyword -> AT
-- On COLON reduce production bs_keyword -> AT
-- On CHAR reduce production bs_keyword -> AT
-- On CASE reduce production bs_keyword -> AT
-- On BSUNION reduce production bs_keyword -> AT
-- On BSTYPE reduce production bs_keyword -> AT
-- On BREAKS reduce production bs_keyword -> AT
-- On BOOLEAN reduce production bs_keyword -> AT
-- On BOOL reduce production bs_keyword -> AT
-- On BLOCK_LENGTH reduce production bs_keyword -> AT
-- On BIMPLIES reduce production bs_keyword -> AT
-- On BIFF reduce production bs_keyword -> AT
-- On BEHAVIORS reduce production bs_keyword -> AT
-- On BEHAVIOR reduce production bs_keyword -> AT
-- On BASE_ADDR reduce production bs_keyword -> AT
-- On AXIOMATIC reduce production bs_keyword -> AT
-- On AXIOM reduce production bs_keyword -> AT
-- On AUTOMATIC reduce production bs_keyword -> AT
-- On AT reduce production bs_keyword -> AT
-- On ASSUMES reduce production bs_keyword -> AT
-- On ASSIGNS reduce production bs_keyword -> AT
-- On ASSERT reduce production bs_keyword -> AT
-- On ARROW reduce production bs_keyword -> AT
-- On AND reduce production bs_keyword -> AT
-- On AMP reduce production bs_keyword -> AT
-- On ALLOCATION reduce production bs_keyword -> AT
-- On ALLOCATES reduce production bs_keyword -> AT
-- On ALLOCABLE reduce production bs_keyword -> AT

State 1032:
## Known stack suffix:
## ARROW
## LR(1) items:
wildcard -> ARROW . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> ARROW
-- On WITH reduce production wildcard -> ARROW
-- On VOLATILE reduce production wildcard -> ARROW
-- On VOID reduce production wildcard -> ARROW
-- On VARIANT reduce production wildcard -> ARROW
-- On VALID_READ reduce production wildcard -> ARROW
-- On VALID_RANGE reduce production wildcard -> ARROW
-- On VALID_INDEX reduce production wildcard -> ARROW
-- On VALID reduce production wildcard -> ARROW
-- On UNSIGNED reduce production wildcard -> ARROW
-- On UNION reduce production wildcard -> ARROW
-- On UNALLOCATED reduce production wildcard -> ARROW
-- On TYPEOF reduce production wildcard -> ARROW
-- On TYPENAME reduce production wildcard -> ARROW
-- On TYPE reduce production wildcard -> ARROW
-- On TRUE reduce production wildcard -> ARROW
-- On TILDE reduce production wildcard -> ARROW
-- On TERMINATES reduce production wildcard -> ARROW
-- On STRUCT reduce production wildcard -> ARROW
-- On STRING_LITERAL reduce production wildcard -> ARROW
-- On STATIC reduce production wildcard -> ARROW
-- On STAR reduce production wildcard -> ARROW
-- On SLICE reduce production wildcard -> ARROW
-- On SLASH reduce production wildcard -> ARROW
-- On SIZEOF reduce production wildcard -> ARROW
-- On SIGNED reduce production wildcard -> ARROW
-- On SHORT reduce production wildcard -> ARROW
-- On SEPARATED reduce production wildcard -> ARROW
-- On SEMICOLON reduce production wildcard -> ARROW
-- On RSQUARE reduce production wildcard -> ARROW
-- On RPAR reduce production wildcard -> ARROW
-- On RETURNS reduce production wildcard -> ARROW
-- On RESULT reduce production wildcard -> ARROW
-- On REQUIRES reduce production wildcard -> ARROW
-- On REGISTER reduce production wildcard -> ARROW
-- On REAL reduce production wildcard -> ARROW
-- On READS reduce production wildcard -> ARROW
-- On RBRACE reduce production wildcard -> ARROW
-- On QUESTION reduce production wildcard -> ARROW
-- On PREDICATE reduce production wildcard -> ARROW
-- On PRAGMA reduce production wildcard -> ARROW
-- On PLUS reduce production wildcard -> ARROW
-- On PIPE reduce production wildcard -> ARROW
-- On PERCENT reduce production wildcard -> ARROW
-- On OR reduce production wildcard -> ARROW
-- On OLD reduce production wildcard -> ARROW
-- On OFFSET reduce production wildcard -> ARROW
-- On NULL reduce production wildcard -> ARROW
-- On NOTHING reduce production wildcard -> ARROW
-- On NOT reduce production wildcard -> ARROW
-- On NE reduce production wildcard -> ARROW
-- On MODULE reduce production wildcard -> ARROW
-- On MODEL reduce production wildcard -> ARROW
-- On MINUS reduce production wildcard -> ARROW
-- On LTLT reduce production wildcard -> ARROW
-- On LTCOLON reduce production wildcard -> ARROW
-- On LT reduce production wildcard -> ARROW
-- On LSQUARE reduce production wildcard -> ARROW
-- On LPAR reduce production wildcard -> ARROW
-- On LOOP reduce production wildcard -> ARROW
-- On LONG reduce production wildcard -> ARROW
-- On LOGIC reduce production wildcard -> ARROW
-- On LET reduce production wildcard -> ARROW
-- On LEMMA reduce production wildcard -> ARROW
-- On LE reduce production wildcard -> ARROW
-- On LBRACE reduce production wildcard -> ARROW
-- On LAMBDA reduce production wildcard -> ARROW
-- On LABEL reduce production wildcard -> ARROW
-- On INVARIANT reduce production wildcard -> ARROW
-- On INTER reduce production wildcard -> ARROW
-- On INTEGER reduce production wildcard -> ARROW
-- On INT reduce production wildcard -> ARROW
-- On INITIALIZED reduce production wildcard -> ARROW
-- On INDUCTIVE reduce production wildcard -> ARROW
-- On INCLUDE reduce production wildcard -> ARROW
-- On IMPLIES reduce production wildcard -> ARROW
-- On IMPACT reduce production wildcard -> ARROW
-- On IFF reduce production wildcard -> ARROW
-- On IF reduce production wildcard -> ARROW
-- On IDENTIFIER reduce production wildcard -> ARROW
-- On HATHAT reduce production wildcard -> ARROW
-- On HAT reduce production wildcard -> ARROW
-- On GTGT reduce production wildcard -> ARROW
-- On GT reduce production wildcard -> ARROW
-- On GLOBAL reduce production wildcard -> ARROW
-- On GHOST reduce production wildcard -> ARROW
-- On GE reduce production wildcard -> ARROW
-- On FUNCTION reduce production wildcard -> ARROW
-- On FROM reduce production wildcard -> ARROW
-- On FRESH reduce production wildcard -> ARROW
-- On FREES reduce production wildcard -> ARROW
-- On FREEABLE reduce production wildcard -> ARROW
-- On FORALL reduce production wildcard -> ARROW
-- On FOR reduce production wildcard -> ARROW
-- On FLOAT reduce production wildcard -> ARROW
-- On FALSE reduce production wildcard -> ARROW
-- On EXT_LET reduce production wildcard -> ARROW
-- On EXT_AT reduce production wildcard -> ARROW
-- On EXITS reduce production wildcard -> ARROW
-- On EXISTS reduce production wildcard -> ARROW
-- On EQUAL reduce production wildcard -> ARROW
-- On EQ reduce production wildcard -> ARROW
-- On EOF reduce production wildcard -> ARROW
-- On ENUM reduce production wildcard -> ARROW
-- On ENSURES reduce production wildcard -> ARROW
-- On EMPTY reduce production wildcard -> ARROW
-- On ELSE reduce production wildcard -> ARROW
-- On DYNAMIC reduce production wildcard -> ARROW
-- On DOUBLE reduce production wildcard -> ARROW
-- On DOTDOTDOT reduce production wildcard -> ARROW
-- On DOTDOT reduce production wildcard -> ARROW
-- On DOT reduce production wildcard -> ARROW
-- On DOLLAR reduce production wildcard -> ARROW
-- On DISJOINT reduce production wildcard -> ARROW
-- On DECREASES reduce production wildcard -> ARROW
-- On DANGLING reduce production wildcard -> ARROW
-- On CUSTOM reduce production wildcard -> ARROW
-- On CONTRACT reduce production wildcard -> ARROW
-- On CONTINUES reduce production wildcard -> ARROW
-- On CONSTANT10 reduce production wildcard -> ARROW
-- On CONSTANT reduce production wildcard -> ARROW
-- On CONST reduce production wildcard -> ARROW
-- On COMPLETE reduce production wildcard -> ARROW
-- On COMMA reduce production wildcard -> ARROW
-- On COLONGT reduce production wildcard -> ARROW
-- On COLONCOLON reduce production wildcard -> ARROW
-- On COLON2 reduce production wildcard -> ARROW
-- On COLON reduce production wildcard -> ARROW
-- On CHAR reduce production wildcard -> ARROW
-- On CASE reduce production wildcard -> ARROW
-- On BSUNION reduce production wildcard -> ARROW
-- On BSTYPE reduce production wildcard -> ARROW
-- On BREAKS reduce production wildcard -> ARROW
-- On BOOLEAN reduce production wildcard -> ARROW
-- On BOOL reduce production wildcard -> ARROW
-- On BLOCK_LENGTH reduce production wildcard -> ARROW
-- On BIMPLIES reduce production wildcard -> ARROW
-- On BIFF reduce production wildcard -> ARROW
-- On BEHAVIORS reduce production wildcard -> ARROW
-- On BEHAVIOR reduce production wildcard -> ARROW
-- On BASE_ADDR reduce production wildcard -> ARROW
-- On AXIOMATIC reduce production wildcard -> ARROW
-- On AXIOM reduce production wildcard -> ARROW
-- On AUTOMATIC reduce production wildcard -> ARROW
-- On AT reduce production wildcard -> ARROW
-- On ASSUMES reduce production wildcard -> ARROW
-- On ASSIGNS reduce production wildcard -> ARROW
-- On ASSERT reduce production wildcard -> ARROW
-- On ARROW reduce production wildcard -> ARROW
-- On AND reduce production wildcard -> ARROW
-- On AMP reduce production wildcard -> ARROW
-- On ALLOCATION reduce production wildcard -> ARROW
-- On ALLOCATES reduce production wildcard -> ARROW
-- On ALLOCABLE reduce production wildcard -> ARROW

State 1033:
## Known stack suffix:
## AND
## LR(1) items:
wildcard -> AND . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> AND
-- On WITH reduce production wildcard -> AND
-- On VOLATILE reduce production wildcard -> AND
-- On VOID reduce production wildcard -> AND
-- On VARIANT reduce production wildcard -> AND
-- On VALID_READ reduce production wildcard -> AND
-- On VALID_RANGE reduce production wildcard -> AND
-- On VALID_INDEX reduce production wildcard -> AND
-- On VALID reduce production wildcard -> AND
-- On UNSIGNED reduce production wildcard -> AND
-- On UNION reduce production wildcard -> AND
-- On UNALLOCATED reduce production wildcard -> AND
-- On TYPEOF reduce production wildcard -> AND
-- On TYPENAME reduce production wildcard -> AND
-- On TYPE reduce production wildcard -> AND
-- On TRUE reduce production wildcard -> AND
-- On TILDE reduce production wildcard -> AND
-- On TERMINATES reduce production wildcard -> AND
-- On STRUCT reduce production wildcard -> AND
-- On STRING_LITERAL reduce production wildcard -> AND
-- On STATIC reduce production wildcard -> AND
-- On STAR reduce production wildcard -> AND
-- On SLICE reduce production wildcard -> AND
-- On SLASH reduce production wildcard -> AND
-- On SIZEOF reduce production wildcard -> AND
-- On SIGNED reduce production wildcard -> AND
-- On SHORT reduce production wildcard -> AND
-- On SEPARATED reduce production wildcard -> AND
-- On SEMICOLON reduce production wildcard -> AND
-- On RSQUARE reduce production wildcard -> AND
-- On RPAR reduce production wildcard -> AND
-- On RETURNS reduce production wildcard -> AND
-- On RESULT reduce production wildcard -> AND
-- On REQUIRES reduce production wildcard -> AND
-- On REGISTER reduce production wildcard -> AND
-- On REAL reduce production wildcard -> AND
-- On READS reduce production wildcard -> AND
-- On RBRACE reduce production wildcard -> AND
-- On QUESTION reduce production wildcard -> AND
-- On PREDICATE reduce production wildcard -> AND
-- On PRAGMA reduce production wildcard -> AND
-- On PLUS reduce production wildcard -> AND
-- On PIPE reduce production wildcard -> AND
-- On PERCENT reduce production wildcard -> AND
-- On OR reduce production wildcard -> AND
-- On OLD reduce production wildcard -> AND
-- On OFFSET reduce production wildcard -> AND
-- On NULL reduce production wildcard -> AND
-- On NOTHING reduce production wildcard -> AND
-- On NOT reduce production wildcard -> AND
-- On NE reduce production wildcard -> AND
-- On MODULE reduce production wildcard -> AND
-- On MODEL reduce production wildcard -> AND
-- On MINUS reduce production wildcard -> AND
-- On LTLT reduce production wildcard -> AND
-- On LTCOLON reduce production wildcard -> AND
-- On LT reduce production wildcard -> AND
-- On LSQUARE reduce production wildcard -> AND
-- On LPAR reduce production wildcard -> AND
-- On LOOP reduce production wildcard -> AND
-- On LONG reduce production wildcard -> AND
-- On LOGIC reduce production wildcard -> AND
-- On LET reduce production wildcard -> AND
-- On LEMMA reduce production wildcard -> AND
-- On LE reduce production wildcard -> AND
-- On LBRACE reduce production wildcard -> AND
-- On LAMBDA reduce production wildcard -> AND
-- On LABEL reduce production wildcard -> AND
-- On INVARIANT reduce production wildcard -> AND
-- On INTER reduce production wildcard -> AND
-- On INTEGER reduce production wildcard -> AND
-- On INT reduce production wildcard -> AND
-- On INITIALIZED reduce production wildcard -> AND
-- On INDUCTIVE reduce production wildcard -> AND
-- On INCLUDE reduce production wildcard -> AND
-- On IMPLIES reduce production wildcard -> AND
-- On IMPACT reduce production wildcard -> AND
-- On IFF reduce production wildcard -> AND
-- On IF reduce production wildcard -> AND
-- On IDENTIFIER reduce production wildcard -> AND
-- On HATHAT reduce production wildcard -> AND
-- On HAT reduce production wildcard -> AND
-- On GTGT reduce production wildcard -> AND
-- On GT reduce production wildcard -> AND
-- On GLOBAL reduce production wildcard -> AND
-- On GHOST reduce production wildcard -> AND
-- On GE reduce production wildcard -> AND
-- On FUNCTION reduce production wildcard -> AND
-- On FROM reduce production wildcard -> AND
-- On FRESH reduce production wildcard -> AND
-- On FREES reduce production wildcard -> AND
-- On FREEABLE reduce production wildcard -> AND
-- On FORALL reduce production wildcard -> AND
-- On FOR reduce production wildcard -> AND
-- On FLOAT reduce production wildcard -> AND
-- On FALSE reduce production wildcard -> AND
-- On EXT_LET reduce production wildcard -> AND
-- On EXT_AT reduce production wildcard -> AND
-- On EXITS reduce production wildcard -> AND
-- On EXISTS reduce production wildcard -> AND
-- On EQUAL reduce production wildcard -> AND
-- On EQ reduce production wildcard -> AND
-- On EOF reduce production wildcard -> AND
-- On ENUM reduce production wildcard -> AND
-- On ENSURES reduce production wildcard -> AND
-- On EMPTY reduce production wildcard -> AND
-- On ELSE reduce production wildcard -> AND
-- On DYNAMIC reduce production wildcard -> AND
-- On DOUBLE reduce production wildcard -> AND
-- On DOTDOTDOT reduce production wildcard -> AND
-- On DOTDOT reduce production wildcard -> AND
-- On DOT reduce production wildcard -> AND
-- On DOLLAR reduce production wildcard -> AND
-- On DISJOINT reduce production wildcard -> AND
-- On DECREASES reduce production wildcard -> AND
-- On DANGLING reduce production wildcard -> AND
-- On CUSTOM reduce production wildcard -> AND
-- On CONTRACT reduce production wildcard -> AND
-- On CONTINUES reduce production wildcard -> AND
-- On CONSTANT10 reduce production wildcard -> AND
-- On CONSTANT reduce production wildcard -> AND
-- On CONST reduce production wildcard -> AND
-- On COMPLETE reduce production wildcard -> AND
-- On COMMA reduce production wildcard -> AND
-- On COLONGT reduce production wildcard -> AND
-- On COLONCOLON reduce production wildcard -> AND
-- On COLON2 reduce production wildcard -> AND
-- On COLON reduce production wildcard -> AND
-- On CHAR reduce production wildcard -> AND
-- On CASE reduce production wildcard -> AND
-- On BSUNION reduce production wildcard -> AND
-- On BSTYPE reduce production wildcard -> AND
-- On BREAKS reduce production wildcard -> AND
-- On BOOLEAN reduce production wildcard -> AND
-- On BOOL reduce production wildcard -> AND
-- On BLOCK_LENGTH reduce production wildcard -> AND
-- On BIMPLIES reduce production wildcard -> AND
-- On BIFF reduce production wildcard -> AND
-- On BEHAVIORS reduce production wildcard -> AND
-- On BEHAVIOR reduce production wildcard -> AND
-- On BASE_ADDR reduce production wildcard -> AND
-- On AXIOMATIC reduce production wildcard -> AND
-- On AXIOM reduce production wildcard -> AND
-- On AUTOMATIC reduce production wildcard -> AND
-- On AT reduce production wildcard -> AND
-- On ASSUMES reduce production wildcard -> AND
-- On ASSIGNS reduce production wildcard -> AND
-- On ASSERT reduce production wildcard -> AND
-- On ARROW reduce production wildcard -> AND
-- On AND reduce production wildcard -> AND
-- On AMP reduce production wildcard -> AND
-- On ALLOCATION reduce production wildcard -> AND
-- On ALLOCATES reduce production wildcard -> AND
-- On ALLOCABLE reduce production wildcard -> AND

State 1034:
## Known stack suffix:
## AMP
## LR(1) items:
wildcard -> AMP . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> AMP
-- On WITH reduce production wildcard -> AMP
-- On VOLATILE reduce production wildcard -> AMP
-- On VOID reduce production wildcard -> AMP
-- On VARIANT reduce production wildcard -> AMP
-- On VALID_READ reduce production wildcard -> AMP
-- On VALID_RANGE reduce production wildcard -> AMP
-- On VALID_INDEX reduce production wildcard -> AMP
-- On VALID reduce production wildcard -> AMP
-- On UNSIGNED reduce production wildcard -> AMP
-- On UNION reduce production wildcard -> AMP
-- On UNALLOCATED reduce production wildcard -> AMP
-- On TYPEOF reduce production wildcard -> AMP
-- On TYPENAME reduce production wildcard -> AMP
-- On TYPE reduce production wildcard -> AMP
-- On TRUE reduce production wildcard -> AMP
-- On TILDE reduce production wildcard -> AMP
-- On TERMINATES reduce production wildcard -> AMP
-- On STRUCT reduce production wildcard -> AMP
-- On STRING_LITERAL reduce production wildcard -> AMP
-- On STATIC reduce production wildcard -> AMP
-- On STAR reduce production wildcard -> AMP
-- On SLICE reduce production wildcard -> AMP
-- On SLASH reduce production wildcard -> AMP
-- On SIZEOF reduce production wildcard -> AMP
-- On SIGNED reduce production wildcard -> AMP
-- On SHORT reduce production wildcard -> AMP
-- On SEPARATED reduce production wildcard -> AMP
-- On SEMICOLON reduce production wildcard -> AMP
-- On RSQUARE reduce production wildcard -> AMP
-- On RPAR reduce production wildcard -> AMP
-- On RETURNS reduce production wildcard -> AMP
-- On RESULT reduce production wildcard -> AMP
-- On REQUIRES reduce production wildcard -> AMP
-- On REGISTER reduce production wildcard -> AMP
-- On REAL reduce production wildcard -> AMP
-- On READS reduce production wildcard -> AMP
-- On RBRACE reduce production wildcard -> AMP
-- On QUESTION reduce production wildcard -> AMP
-- On PREDICATE reduce production wildcard -> AMP
-- On PRAGMA reduce production wildcard -> AMP
-- On PLUS reduce production wildcard -> AMP
-- On PIPE reduce production wildcard -> AMP
-- On PERCENT reduce production wildcard -> AMP
-- On OR reduce production wildcard -> AMP
-- On OLD reduce production wildcard -> AMP
-- On OFFSET reduce production wildcard -> AMP
-- On NULL reduce production wildcard -> AMP
-- On NOTHING reduce production wildcard -> AMP
-- On NOT reduce production wildcard -> AMP
-- On NE reduce production wildcard -> AMP
-- On MODULE reduce production wildcard -> AMP
-- On MODEL reduce production wildcard -> AMP
-- On MINUS reduce production wildcard -> AMP
-- On LTLT reduce production wildcard -> AMP
-- On LTCOLON reduce production wildcard -> AMP
-- On LT reduce production wildcard -> AMP
-- On LSQUARE reduce production wildcard -> AMP
-- On LPAR reduce production wildcard -> AMP
-- On LOOP reduce production wildcard -> AMP
-- On LONG reduce production wildcard -> AMP
-- On LOGIC reduce production wildcard -> AMP
-- On LET reduce production wildcard -> AMP
-- On LEMMA reduce production wildcard -> AMP
-- On LE reduce production wildcard -> AMP
-- On LBRACE reduce production wildcard -> AMP
-- On LAMBDA reduce production wildcard -> AMP
-- On LABEL reduce production wildcard -> AMP
-- On INVARIANT reduce production wildcard -> AMP
-- On INTER reduce production wildcard -> AMP
-- On INTEGER reduce production wildcard -> AMP
-- On INT reduce production wildcard -> AMP
-- On INITIALIZED reduce production wildcard -> AMP
-- On INDUCTIVE reduce production wildcard -> AMP
-- On INCLUDE reduce production wildcard -> AMP
-- On IMPLIES reduce production wildcard -> AMP
-- On IMPACT reduce production wildcard -> AMP
-- On IFF reduce production wildcard -> AMP
-- On IF reduce production wildcard -> AMP
-- On IDENTIFIER reduce production wildcard -> AMP
-- On HATHAT reduce production wildcard -> AMP
-- On HAT reduce production wildcard -> AMP
-- On GTGT reduce production wildcard -> AMP
-- On GT reduce production wildcard -> AMP
-- On GLOBAL reduce production wildcard -> AMP
-- On GHOST reduce production wildcard -> AMP
-- On GE reduce production wildcard -> AMP
-- On FUNCTION reduce production wildcard -> AMP
-- On FROM reduce production wildcard -> AMP
-- On FRESH reduce production wildcard -> AMP
-- On FREES reduce production wildcard -> AMP
-- On FREEABLE reduce production wildcard -> AMP
-- On FORALL reduce production wildcard -> AMP
-- On FOR reduce production wildcard -> AMP
-- On FLOAT reduce production wildcard -> AMP
-- On FALSE reduce production wildcard -> AMP
-- On EXT_LET reduce production wildcard -> AMP
-- On EXT_AT reduce production wildcard -> AMP
-- On EXITS reduce production wildcard -> AMP
-- On EXISTS reduce production wildcard -> AMP
-- On EQUAL reduce production wildcard -> AMP
-- On EQ reduce production wildcard -> AMP
-- On EOF reduce production wildcard -> AMP
-- On ENUM reduce production wildcard -> AMP
-- On ENSURES reduce production wildcard -> AMP
-- On EMPTY reduce production wildcard -> AMP
-- On ELSE reduce production wildcard -> AMP
-- On DYNAMIC reduce production wildcard -> AMP
-- On DOUBLE reduce production wildcard -> AMP
-- On DOTDOTDOT reduce production wildcard -> AMP
-- On DOTDOT reduce production wildcard -> AMP
-- On DOT reduce production wildcard -> AMP
-- On DOLLAR reduce production wildcard -> AMP
-- On DISJOINT reduce production wildcard -> AMP
-- On DECREASES reduce production wildcard -> AMP
-- On DANGLING reduce production wildcard -> AMP
-- On CUSTOM reduce production wildcard -> AMP
-- On CONTRACT reduce production wildcard -> AMP
-- On CONTINUES reduce production wildcard -> AMP
-- On CONSTANT10 reduce production wildcard -> AMP
-- On CONSTANT reduce production wildcard -> AMP
-- On CONST reduce production wildcard -> AMP
-- On COMPLETE reduce production wildcard -> AMP
-- On COMMA reduce production wildcard -> AMP
-- On COLONGT reduce production wildcard -> AMP
-- On COLONCOLON reduce production wildcard -> AMP
-- On COLON2 reduce production wildcard -> AMP
-- On COLON reduce production wildcard -> AMP
-- On CHAR reduce production wildcard -> AMP
-- On CASE reduce production wildcard -> AMP
-- On BSUNION reduce production wildcard -> AMP
-- On BSTYPE reduce production wildcard -> AMP
-- On BREAKS reduce production wildcard -> AMP
-- On BOOLEAN reduce production wildcard -> AMP
-- On BOOL reduce production wildcard -> AMP
-- On BLOCK_LENGTH reduce production wildcard -> AMP
-- On BIMPLIES reduce production wildcard -> AMP
-- On BIFF reduce production wildcard -> AMP
-- On BEHAVIORS reduce production wildcard -> AMP
-- On BEHAVIOR reduce production wildcard -> AMP
-- On BASE_ADDR reduce production wildcard -> AMP
-- On AXIOMATIC reduce production wildcard -> AMP
-- On AXIOM reduce production wildcard -> AMP
-- On AUTOMATIC reduce production wildcard -> AMP
-- On AT reduce production wildcard -> AMP
-- On ASSUMES reduce production wildcard -> AMP
-- On ASSIGNS reduce production wildcard -> AMP
-- On ASSERT reduce production wildcard -> AMP
-- On ARROW reduce production wildcard -> AMP
-- On AND reduce production wildcard -> AMP
-- On AMP reduce production wildcard -> AMP
-- On ALLOCATION reduce production wildcard -> AMP
-- On ALLOCATES reduce production wildcard -> AMP
-- On ALLOCABLE reduce production wildcard -> AMP

State 1035:
## Known stack suffix:
## ALLOCATION
## LR(1) items:
bs_keyword -> ALLOCATION . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> ALLOCATION
-- On WITH reduce production bs_keyword -> ALLOCATION
-- On VOLATILE reduce production bs_keyword -> ALLOCATION
-- On VOID reduce production bs_keyword -> ALLOCATION
-- On VARIANT reduce production bs_keyword -> ALLOCATION
-- On VALID_READ reduce production bs_keyword -> ALLOCATION
-- On VALID_RANGE reduce production bs_keyword -> ALLOCATION
-- On VALID_INDEX reduce production bs_keyword -> ALLOCATION
-- On VALID reduce production bs_keyword -> ALLOCATION
-- On UNSIGNED reduce production bs_keyword -> ALLOCATION
-- On UNION reduce production bs_keyword -> ALLOCATION
-- On UNALLOCATED reduce production bs_keyword -> ALLOCATION
-- On TYPEOF reduce production bs_keyword -> ALLOCATION
-- On TYPENAME reduce production bs_keyword -> ALLOCATION
-- On TYPE reduce production bs_keyword -> ALLOCATION
-- On TRUE reduce production bs_keyword -> ALLOCATION
-- On TILDE reduce production bs_keyword -> ALLOCATION
-- On TERMINATES reduce production bs_keyword -> ALLOCATION
-- On STRUCT reduce production bs_keyword -> ALLOCATION
-- On STRING_LITERAL reduce production bs_keyword -> ALLOCATION
-- On STATIC reduce production bs_keyword -> ALLOCATION
-- On STAR reduce production bs_keyword -> ALLOCATION
-- On SLICE reduce production bs_keyword -> ALLOCATION
-- On SLASH reduce production bs_keyword -> ALLOCATION
-- On SIZEOF reduce production bs_keyword -> ALLOCATION
-- On SIGNED reduce production bs_keyword -> ALLOCATION
-- On SHORT reduce production bs_keyword -> ALLOCATION
-- On SEPARATED reduce production bs_keyword -> ALLOCATION
-- On SEMICOLON reduce production bs_keyword -> ALLOCATION
-- On RSQUARE reduce production bs_keyword -> ALLOCATION
-- On RPAR reduce production bs_keyword -> ALLOCATION
-- On RETURNS reduce production bs_keyword -> ALLOCATION
-- On RESULT reduce production bs_keyword -> ALLOCATION
-- On REQUIRES reduce production bs_keyword -> ALLOCATION
-- On REGISTER reduce production bs_keyword -> ALLOCATION
-- On REAL reduce production bs_keyword -> ALLOCATION
-- On READS reduce production bs_keyword -> ALLOCATION
-- On RBRACE reduce production bs_keyword -> ALLOCATION
-- On QUESTION reduce production bs_keyword -> ALLOCATION
-- On PREDICATE reduce production bs_keyword -> ALLOCATION
-- On PRAGMA reduce production bs_keyword -> ALLOCATION
-- On PLUS reduce production bs_keyword -> ALLOCATION
-- On PIPE reduce production bs_keyword -> ALLOCATION
-- On PERCENT reduce production bs_keyword -> ALLOCATION
-- On OR reduce production bs_keyword -> ALLOCATION
-- On OLD reduce production bs_keyword -> ALLOCATION
-- On OFFSET reduce production bs_keyword -> ALLOCATION
-- On NULL reduce production bs_keyword -> ALLOCATION
-- On NOTHING reduce production bs_keyword -> ALLOCATION
-- On NOT reduce production bs_keyword -> ALLOCATION
-- On NE reduce production bs_keyword -> ALLOCATION
-- On MODULE reduce production bs_keyword -> ALLOCATION
-- On MODEL reduce production bs_keyword -> ALLOCATION
-- On MINUS reduce production bs_keyword -> ALLOCATION
-- On LTLT reduce production bs_keyword -> ALLOCATION
-- On LTCOLON reduce production bs_keyword -> ALLOCATION
-- On LT reduce production bs_keyword -> ALLOCATION
-- On LSQUARE reduce production bs_keyword -> ALLOCATION
-- On LPAR reduce production bs_keyword -> ALLOCATION
-- On LOOP reduce production bs_keyword -> ALLOCATION
-- On LONG reduce production bs_keyword -> ALLOCATION
-- On LOGIC reduce production bs_keyword -> ALLOCATION
-- On LET reduce production bs_keyword -> ALLOCATION
-- On LEMMA reduce production bs_keyword -> ALLOCATION
-- On LE reduce production bs_keyword -> ALLOCATION
-- On LBRACE reduce production bs_keyword -> ALLOCATION
-- On LAMBDA reduce production bs_keyword -> ALLOCATION
-- On LABEL reduce production bs_keyword -> ALLOCATION
-- On INVARIANT reduce production bs_keyword -> ALLOCATION
-- On INTER reduce production bs_keyword -> ALLOCATION
-- On INTEGER reduce production bs_keyword -> ALLOCATION
-- On INT reduce production bs_keyword -> ALLOCATION
-- On INITIALIZED reduce production bs_keyword -> ALLOCATION
-- On INDUCTIVE reduce production bs_keyword -> ALLOCATION
-- On INCLUDE reduce production bs_keyword -> ALLOCATION
-- On IMPLIES reduce production bs_keyword -> ALLOCATION
-- On IMPACT reduce production bs_keyword -> ALLOCATION
-- On IFF reduce production bs_keyword -> ALLOCATION
-- On IF reduce production bs_keyword -> ALLOCATION
-- On IDENTIFIER reduce production bs_keyword -> ALLOCATION
-- On HATHAT reduce production bs_keyword -> ALLOCATION
-- On HAT reduce production bs_keyword -> ALLOCATION
-- On GTGT reduce production bs_keyword -> ALLOCATION
-- On GT reduce production bs_keyword -> ALLOCATION
-- On GLOBAL reduce production bs_keyword -> ALLOCATION
-- On GHOST reduce production bs_keyword -> ALLOCATION
-- On GE reduce production bs_keyword -> ALLOCATION
-- On FUNCTION reduce production bs_keyword -> ALLOCATION
-- On FROM reduce production bs_keyword -> ALLOCATION
-- On FRESH reduce production bs_keyword -> ALLOCATION
-- On FREES reduce production bs_keyword -> ALLOCATION
-- On FREEABLE reduce production bs_keyword -> ALLOCATION
-- On FORALL reduce production bs_keyword -> ALLOCATION
-- On FOR reduce production bs_keyword -> ALLOCATION
-- On FLOAT reduce production bs_keyword -> ALLOCATION
-- On FALSE reduce production bs_keyword -> ALLOCATION
-- On EXT_LET reduce production bs_keyword -> ALLOCATION
-- On EXT_AT reduce production bs_keyword -> ALLOCATION
-- On EXITS reduce production bs_keyword -> ALLOCATION
-- On EXISTS reduce production bs_keyword -> ALLOCATION
-- On EQUAL reduce production bs_keyword -> ALLOCATION
-- On EQ reduce production bs_keyword -> ALLOCATION
-- On EOF reduce production bs_keyword -> ALLOCATION
-- On ENUM reduce production bs_keyword -> ALLOCATION
-- On ENSURES reduce production bs_keyword -> ALLOCATION
-- On EMPTY reduce production bs_keyword -> ALLOCATION
-- On ELSE reduce production bs_keyword -> ALLOCATION
-- On DYNAMIC reduce production bs_keyword -> ALLOCATION
-- On DOUBLE reduce production bs_keyword -> ALLOCATION
-- On DOTDOTDOT reduce production bs_keyword -> ALLOCATION
-- On DOTDOT reduce production bs_keyword -> ALLOCATION
-- On DOT reduce production bs_keyword -> ALLOCATION
-- On DOLLAR reduce production bs_keyword -> ALLOCATION
-- On DISJOINT reduce production bs_keyword -> ALLOCATION
-- On DECREASES reduce production bs_keyword -> ALLOCATION
-- On DANGLING reduce production bs_keyword -> ALLOCATION
-- On CUSTOM reduce production bs_keyword -> ALLOCATION
-- On CONTRACT reduce production bs_keyword -> ALLOCATION
-- On CONTINUES reduce production bs_keyword -> ALLOCATION
-- On CONSTANT10 reduce production bs_keyword -> ALLOCATION
-- On CONSTANT reduce production bs_keyword -> ALLOCATION
-- On CONST reduce production bs_keyword -> ALLOCATION
-- On COMPLETE reduce production bs_keyword -> ALLOCATION
-- On COMMA reduce production bs_keyword -> ALLOCATION
-- On COLONGT reduce production bs_keyword -> ALLOCATION
-- On COLONCOLON reduce production bs_keyword -> ALLOCATION
-- On COLON2 reduce production bs_keyword -> ALLOCATION
-- On COLON reduce production bs_keyword -> ALLOCATION
-- On CHAR reduce production bs_keyword -> ALLOCATION
-- On CASE reduce production bs_keyword -> ALLOCATION
-- On BSUNION reduce production bs_keyword -> ALLOCATION
-- On BSTYPE reduce production bs_keyword -> ALLOCATION
-- On BREAKS reduce production bs_keyword -> ALLOCATION
-- On BOOLEAN reduce production bs_keyword -> ALLOCATION
-- On BOOL reduce production bs_keyword -> ALLOCATION
-- On BLOCK_LENGTH reduce production bs_keyword -> ALLOCATION
-- On BIMPLIES reduce production bs_keyword -> ALLOCATION
-- On BIFF reduce production bs_keyword -> ALLOCATION
-- On BEHAVIORS reduce production bs_keyword -> ALLOCATION
-- On BEHAVIOR reduce production bs_keyword -> ALLOCATION
-- On BASE_ADDR reduce production bs_keyword -> ALLOCATION
-- On AXIOMATIC reduce production bs_keyword -> ALLOCATION
-- On AXIOM reduce production bs_keyword -> ALLOCATION
-- On AUTOMATIC reduce production bs_keyword -> ALLOCATION
-- On AT reduce production bs_keyword -> ALLOCATION
-- On ASSUMES reduce production bs_keyword -> ALLOCATION
-- On ASSIGNS reduce production bs_keyword -> ALLOCATION
-- On ASSERT reduce production bs_keyword -> ALLOCATION
-- On ARROW reduce production bs_keyword -> ALLOCATION
-- On AND reduce production bs_keyword -> ALLOCATION
-- On AMP reduce production bs_keyword -> ALLOCATION
-- On ALLOCATION reduce production bs_keyword -> ALLOCATION
-- On ALLOCATES reduce production bs_keyword -> ALLOCATION
-- On ALLOCABLE reduce production bs_keyword -> ALLOCATION

State 1036:
## Known stack suffix:
## ALLOCABLE
## LR(1) items:
bs_keyword -> ALLOCABLE . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production bs_keyword -> ALLOCABLE
-- On WITH reduce production bs_keyword -> ALLOCABLE
-- On VOLATILE reduce production bs_keyword -> ALLOCABLE
-- On VOID reduce production bs_keyword -> ALLOCABLE
-- On VARIANT reduce production bs_keyword -> ALLOCABLE
-- On VALID_READ reduce production bs_keyword -> ALLOCABLE
-- On VALID_RANGE reduce production bs_keyword -> ALLOCABLE
-- On VALID_INDEX reduce production bs_keyword -> ALLOCABLE
-- On VALID reduce production bs_keyword -> ALLOCABLE
-- On UNSIGNED reduce production bs_keyword -> ALLOCABLE
-- On UNION reduce production bs_keyword -> ALLOCABLE
-- On UNALLOCATED reduce production bs_keyword -> ALLOCABLE
-- On TYPEOF reduce production bs_keyword -> ALLOCABLE
-- On TYPENAME reduce production bs_keyword -> ALLOCABLE
-- On TYPE reduce production bs_keyword -> ALLOCABLE
-- On TRUE reduce production bs_keyword -> ALLOCABLE
-- On TILDE reduce production bs_keyword -> ALLOCABLE
-- On TERMINATES reduce production bs_keyword -> ALLOCABLE
-- On STRUCT reduce production bs_keyword -> ALLOCABLE
-- On STRING_LITERAL reduce production bs_keyword -> ALLOCABLE
-- On STATIC reduce production bs_keyword -> ALLOCABLE
-- On STAR reduce production bs_keyword -> ALLOCABLE
-- On SLICE reduce production bs_keyword -> ALLOCABLE
-- On SLASH reduce production bs_keyword -> ALLOCABLE
-- On SIZEOF reduce production bs_keyword -> ALLOCABLE
-- On SIGNED reduce production bs_keyword -> ALLOCABLE
-- On SHORT reduce production bs_keyword -> ALLOCABLE
-- On SEPARATED reduce production bs_keyword -> ALLOCABLE
-- On SEMICOLON reduce production bs_keyword -> ALLOCABLE
-- On RSQUARE reduce production bs_keyword -> ALLOCABLE
-- On RPAR reduce production bs_keyword -> ALLOCABLE
-- On RETURNS reduce production bs_keyword -> ALLOCABLE
-- On RESULT reduce production bs_keyword -> ALLOCABLE
-- On REQUIRES reduce production bs_keyword -> ALLOCABLE
-- On REGISTER reduce production bs_keyword -> ALLOCABLE
-- On REAL reduce production bs_keyword -> ALLOCABLE
-- On READS reduce production bs_keyword -> ALLOCABLE
-- On RBRACE reduce production bs_keyword -> ALLOCABLE
-- On QUESTION reduce production bs_keyword -> ALLOCABLE
-- On PREDICATE reduce production bs_keyword -> ALLOCABLE
-- On PRAGMA reduce production bs_keyword -> ALLOCABLE
-- On PLUS reduce production bs_keyword -> ALLOCABLE
-- On PIPE reduce production bs_keyword -> ALLOCABLE
-- On PERCENT reduce production bs_keyword -> ALLOCABLE
-- On OR reduce production bs_keyword -> ALLOCABLE
-- On OLD reduce production bs_keyword -> ALLOCABLE
-- On OFFSET reduce production bs_keyword -> ALLOCABLE
-- On NULL reduce production bs_keyword -> ALLOCABLE
-- On NOTHING reduce production bs_keyword -> ALLOCABLE
-- On NOT reduce production bs_keyword -> ALLOCABLE
-- On NE reduce production bs_keyword -> ALLOCABLE
-- On MODULE reduce production bs_keyword -> ALLOCABLE
-- On MODEL reduce production bs_keyword -> ALLOCABLE
-- On MINUS reduce production bs_keyword -> ALLOCABLE
-- On LTLT reduce production bs_keyword -> ALLOCABLE
-- On LTCOLON reduce production bs_keyword -> ALLOCABLE
-- On LT reduce production bs_keyword -> ALLOCABLE
-- On LSQUARE reduce production bs_keyword -> ALLOCABLE
-- On LPAR reduce production bs_keyword -> ALLOCABLE
-- On LOOP reduce production bs_keyword -> ALLOCABLE
-- On LONG reduce production bs_keyword -> ALLOCABLE
-- On LOGIC reduce production bs_keyword -> ALLOCABLE
-- On LET reduce production bs_keyword -> ALLOCABLE
-- On LEMMA reduce production bs_keyword -> ALLOCABLE
-- On LE reduce production bs_keyword -> ALLOCABLE
-- On LBRACE reduce production bs_keyword -> ALLOCABLE
-- On LAMBDA reduce production bs_keyword -> ALLOCABLE
-- On LABEL reduce production bs_keyword -> ALLOCABLE
-- On INVARIANT reduce production bs_keyword -> ALLOCABLE
-- On INTER reduce production bs_keyword -> ALLOCABLE
-- On INTEGER reduce production bs_keyword -> ALLOCABLE
-- On INT reduce production bs_keyword -> ALLOCABLE
-- On INITIALIZED reduce production bs_keyword -> ALLOCABLE
-- On INDUCTIVE reduce production bs_keyword -> ALLOCABLE
-- On INCLUDE reduce production bs_keyword -> ALLOCABLE
-- On IMPLIES reduce production bs_keyword -> ALLOCABLE
-- On IMPACT reduce production bs_keyword -> ALLOCABLE
-- On IFF reduce production bs_keyword -> ALLOCABLE
-- On IF reduce production bs_keyword -> ALLOCABLE
-- On IDENTIFIER reduce production bs_keyword -> ALLOCABLE
-- On HATHAT reduce production bs_keyword -> ALLOCABLE
-- On HAT reduce production bs_keyword -> ALLOCABLE
-- On GTGT reduce production bs_keyword -> ALLOCABLE
-- On GT reduce production bs_keyword -> ALLOCABLE
-- On GLOBAL reduce production bs_keyword -> ALLOCABLE
-- On GHOST reduce production bs_keyword -> ALLOCABLE
-- On GE reduce production bs_keyword -> ALLOCABLE
-- On FUNCTION reduce production bs_keyword -> ALLOCABLE
-- On FROM reduce production bs_keyword -> ALLOCABLE
-- On FRESH reduce production bs_keyword -> ALLOCABLE
-- On FREES reduce production bs_keyword -> ALLOCABLE
-- On FREEABLE reduce production bs_keyword -> ALLOCABLE
-- On FORALL reduce production bs_keyword -> ALLOCABLE
-- On FOR reduce production bs_keyword -> ALLOCABLE
-- On FLOAT reduce production bs_keyword -> ALLOCABLE
-- On FALSE reduce production bs_keyword -> ALLOCABLE
-- On EXT_LET reduce production bs_keyword -> ALLOCABLE
-- On EXT_AT reduce production bs_keyword -> ALLOCABLE
-- On EXITS reduce production bs_keyword -> ALLOCABLE
-- On EXISTS reduce production bs_keyword -> ALLOCABLE
-- On EQUAL reduce production bs_keyword -> ALLOCABLE
-- On EQ reduce production bs_keyword -> ALLOCABLE
-- On EOF reduce production bs_keyword -> ALLOCABLE
-- On ENUM reduce production bs_keyword -> ALLOCABLE
-- On ENSURES reduce production bs_keyword -> ALLOCABLE
-- On EMPTY reduce production bs_keyword -> ALLOCABLE
-- On ELSE reduce production bs_keyword -> ALLOCABLE
-- On DYNAMIC reduce production bs_keyword -> ALLOCABLE
-- On DOUBLE reduce production bs_keyword -> ALLOCABLE
-- On DOTDOTDOT reduce production bs_keyword -> ALLOCABLE
-- On DOTDOT reduce production bs_keyword -> ALLOCABLE
-- On DOT reduce production bs_keyword -> ALLOCABLE
-- On DOLLAR reduce production bs_keyword -> ALLOCABLE
-- On DISJOINT reduce production bs_keyword -> ALLOCABLE
-- On DECREASES reduce production bs_keyword -> ALLOCABLE
-- On DANGLING reduce production bs_keyword -> ALLOCABLE
-- On CUSTOM reduce production bs_keyword -> ALLOCABLE
-- On CONTRACT reduce production bs_keyword -> ALLOCABLE
-- On CONTINUES reduce production bs_keyword -> ALLOCABLE
-- On CONSTANT10 reduce production bs_keyword -> ALLOCABLE
-- On CONSTANT reduce production bs_keyword -> ALLOCABLE
-- On CONST reduce production bs_keyword -> ALLOCABLE
-- On COMPLETE reduce production bs_keyword -> ALLOCABLE
-- On COMMA reduce production bs_keyword -> ALLOCABLE
-- On COLONGT reduce production bs_keyword -> ALLOCABLE
-- On COLONCOLON reduce production bs_keyword -> ALLOCABLE
-- On COLON2 reduce production bs_keyword -> ALLOCABLE
-- On COLON reduce production bs_keyword -> ALLOCABLE
-- On CHAR reduce production bs_keyword -> ALLOCABLE
-- On CASE reduce production bs_keyword -> ALLOCABLE
-- On BSUNION reduce production bs_keyword -> ALLOCABLE
-- On BSTYPE reduce production bs_keyword -> ALLOCABLE
-- On BREAKS reduce production bs_keyword -> ALLOCABLE
-- On BOOLEAN reduce production bs_keyword -> ALLOCABLE
-- On BOOL reduce production bs_keyword -> ALLOCABLE
-- On BLOCK_LENGTH reduce production bs_keyword -> ALLOCABLE
-- On BIMPLIES reduce production bs_keyword -> ALLOCABLE
-- On BIFF reduce production bs_keyword -> ALLOCABLE
-- On BEHAVIORS reduce production bs_keyword -> ALLOCABLE
-- On BEHAVIOR reduce production bs_keyword -> ALLOCABLE
-- On BASE_ADDR reduce production bs_keyword -> ALLOCABLE
-- On AXIOMATIC reduce production bs_keyword -> ALLOCABLE
-- On AXIOM reduce production bs_keyword -> ALLOCABLE
-- On AUTOMATIC reduce production bs_keyword -> ALLOCABLE
-- On AT reduce production bs_keyword -> ALLOCABLE
-- On ASSUMES reduce production bs_keyword -> ALLOCABLE
-- On ASSIGNS reduce production bs_keyword -> ALLOCABLE
-- On ASSERT reduce production bs_keyword -> ALLOCABLE
-- On ARROW reduce production bs_keyword -> ALLOCABLE
-- On AND reduce production bs_keyword -> ALLOCABLE
-- On AMP reduce production bs_keyword -> ALLOCABLE
-- On ALLOCATION reduce production bs_keyword -> ALLOCABLE
-- On ALLOCATES reduce production bs_keyword -> ALLOCABLE
-- On ALLOCABLE reduce production bs_keyword -> ALLOCABLE

State 1037:
## Known stack suffix:
## wildcard
## LR(1) items:
any -> wildcard . [ EOF ]
any -> wildcard . any [ EOF ]
## Transitions:
-- On WRITES shift to state 1
-- On WITH shift to state 952
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On VALID_READ shift to state 953
-- On VALID_RANGE shift to state 954
-- On VALID_INDEX shift to state 955
-- On VALID shift to state 956
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On UNALLOCATED shift to state 957
-- On TYPEOF shift to state 958
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TRUE shift to state 959
-- On TILDE shift to state 960
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STRING_LITERAL shift to state 961
-- On STATIC shift to state 14
-- On STAR shift to state 962
-- On SLICE shift to state 15
-- On SLASH shift to state 963
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On SEPARATED shift to state 964
-- On SEMICOLON shift to state 965
-- On RSQUARE shift to state 966
-- On RPAR shift to state 967
-- On RETURNS shift to state 19
-- On RESULT shift to state 968
-- On REQUIRES shift to state 20
-- On REGISTER shift to state 969
-- On REAL shift to state 21
-- On READS shift to state 22
-- On RBRACE shift to state 970
-- On QUESTION shift to state 971
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On PLUS shift to state 972
-- On PIPE shift to state 973
-- On PERCENT shift to state 974
-- On OR shift to state 975
-- On OLD shift to state 976
-- On OFFSET shift to state 977
-- On NULL shift to state 978
-- On NOTHING shift to state 979
-- On NOT shift to state 980
-- On NE shift to state 981
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On MINUS shift to state 982
-- On LTLT shift to state 983
-- On LTCOLON shift to state 984
-- On LT shift to state 985
-- On LSQUARE shift to state 986
-- On LPAR shift to state 987
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LET shift to state 988
-- On LEMMA shift to state 30
-- On LE shift to state 989
-- On LBRACE shift to state 990
-- On LAMBDA shift to state 991
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTER shift to state 992
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INITIALIZED shift to state 993
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPLIES shift to state 994
-- On IMPACT shift to state 37
-- On IFF shift to state 995
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On HATHAT shift to state 996
-- On HAT shift to state 997
-- On GTGT shift to state 998
-- On GT shift to state 999
-- On GLOBAL shift to state 40
-- On GHOST shift to state 1000
-- On GE shift to state 1001
-- On FUNCTION shift to state 41
-- On FROM shift to state 1002
-- On FRESH shift to state 1003
-- On FREES shift to state 42
-- On FREEABLE shift to state 1004
-- On FORALL shift to state 1005
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On FALSE shift to state 1006
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On EXISTS shift to state 1007
-- On EQUAL shift to state 1008
-- On EQ shift to state 1009
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On EMPTY shift to state 1010
-- On ELSE shift to state 50
-- On DYNAMIC shift to state 1011
-- On DOUBLE shift to state 51
-- On DOTDOTDOT shift to state 1012
-- On DOTDOT shift to state 1013
-- On DOT shift to state 1014
-- On DOLLAR shift to state 1015
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On DANGLING shift to state 1016
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 1017
-- On CONSTANT shift to state 1018
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On COMMA shift to state 1019
-- On COLONGT shift to state 1020
-- On COLONCOLON shift to state 1021
-- On COLON2 shift to state 1022
-- On COLON shift to state 1023
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BSUNION shift to state 1024
-- On BSTYPE shift to state 1025
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BLOCK_LENGTH shift to state 1026
-- On BIMPLIES shift to state 1027
-- On BIFF shift to state 1028
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On BASE_ADDR shift to state 1029
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On AUTOMATIC shift to state 1030
-- On AT shift to state 1031
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ARROW shift to state 1032
-- On AND shift to state 1033
-- On AMP shift to state 1034
-- On ALLOCATION shift to state 1035
-- On ALLOCATES shift to state 71
-- On ALLOCABLE shift to state 1036
-- On wildcard shift to state 1037
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On bs_keyword shift to state 1038
-- On any_identifier shift to state 1039
-- On any shift to state 1040
-- On acsl_c_keyword shift to state 87
## Reductions:
-- On EOF reduce production any -> wildcard

State 1038:
## Known stack suffix:
## bs_keyword
## LR(1) items:
wildcard -> bs_keyword . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> bs_keyword
-- On WITH reduce production wildcard -> bs_keyword
-- On VOLATILE reduce production wildcard -> bs_keyword
-- On VOID reduce production wildcard -> bs_keyword
-- On VARIANT reduce production wildcard -> bs_keyword
-- On VALID_READ reduce production wildcard -> bs_keyword
-- On VALID_RANGE reduce production wildcard -> bs_keyword
-- On VALID_INDEX reduce production wildcard -> bs_keyword
-- On VALID reduce production wildcard -> bs_keyword
-- On UNSIGNED reduce production wildcard -> bs_keyword
-- On UNION reduce production wildcard -> bs_keyword
-- On UNALLOCATED reduce production wildcard -> bs_keyword
-- On TYPEOF reduce production wildcard -> bs_keyword
-- On TYPENAME reduce production wildcard -> bs_keyword
-- On TYPE reduce production wildcard -> bs_keyword
-- On TRUE reduce production wildcard -> bs_keyword
-- On TILDE reduce production wildcard -> bs_keyword
-- On TERMINATES reduce production wildcard -> bs_keyword
-- On STRUCT reduce production wildcard -> bs_keyword
-- On STRING_LITERAL reduce production wildcard -> bs_keyword
-- On STATIC reduce production wildcard -> bs_keyword
-- On STAR reduce production wildcard -> bs_keyword
-- On SLICE reduce production wildcard -> bs_keyword
-- On SLASH reduce production wildcard -> bs_keyword
-- On SIZEOF reduce production wildcard -> bs_keyword
-- On SIGNED reduce production wildcard -> bs_keyword
-- On SHORT reduce production wildcard -> bs_keyword
-- On SEPARATED reduce production wildcard -> bs_keyword
-- On SEMICOLON reduce production wildcard -> bs_keyword
-- On RSQUARE reduce production wildcard -> bs_keyword
-- On RPAR reduce production wildcard -> bs_keyword
-- On RETURNS reduce production wildcard -> bs_keyword
-- On RESULT reduce production wildcard -> bs_keyword
-- On REQUIRES reduce production wildcard -> bs_keyword
-- On REGISTER reduce production wildcard -> bs_keyword
-- On REAL reduce production wildcard -> bs_keyword
-- On READS reduce production wildcard -> bs_keyword
-- On RBRACE reduce production wildcard -> bs_keyword
-- On QUESTION reduce production wildcard -> bs_keyword
-- On PREDICATE reduce production wildcard -> bs_keyword
-- On PRAGMA reduce production wildcard -> bs_keyword
-- On PLUS reduce production wildcard -> bs_keyword
-- On PIPE reduce production wildcard -> bs_keyword
-- On PERCENT reduce production wildcard -> bs_keyword
-- On OR reduce production wildcard -> bs_keyword
-- On OLD reduce production wildcard -> bs_keyword
-- On OFFSET reduce production wildcard -> bs_keyword
-- On NULL reduce production wildcard -> bs_keyword
-- On NOTHING reduce production wildcard -> bs_keyword
-- On NOT reduce production wildcard -> bs_keyword
-- On NE reduce production wildcard -> bs_keyword
-- On MODULE reduce production wildcard -> bs_keyword
-- On MODEL reduce production wildcard -> bs_keyword
-- On MINUS reduce production wildcard -> bs_keyword
-- On LTLT reduce production wildcard -> bs_keyword
-- On LTCOLON reduce production wildcard -> bs_keyword
-- On LT reduce production wildcard -> bs_keyword
-- On LSQUARE reduce production wildcard -> bs_keyword
-- On LPAR reduce production wildcard -> bs_keyword
-- On LOOP reduce production wildcard -> bs_keyword
-- On LONG reduce production wildcard -> bs_keyword
-- On LOGIC reduce production wildcard -> bs_keyword
-- On LET reduce production wildcard -> bs_keyword
-- On LEMMA reduce production wildcard -> bs_keyword
-- On LE reduce production wildcard -> bs_keyword
-- On LBRACE reduce production wildcard -> bs_keyword
-- On LAMBDA reduce production wildcard -> bs_keyword
-- On LABEL reduce production wildcard -> bs_keyword
-- On INVARIANT reduce production wildcard -> bs_keyword
-- On INTER reduce production wildcard -> bs_keyword
-- On INTEGER reduce production wildcard -> bs_keyword
-- On INT reduce production wildcard -> bs_keyword
-- On INITIALIZED reduce production wildcard -> bs_keyword
-- On INDUCTIVE reduce production wildcard -> bs_keyword
-- On INCLUDE reduce production wildcard -> bs_keyword
-- On IMPLIES reduce production wildcard -> bs_keyword
-- On IMPACT reduce production wildcard -> bs_keyword
-- On IFF reduce production wildcard -> bs_keyword
-- On IF reduce production wildcard -> bs_keyword
-- On IDENTIFIER reduce production wildcard -> bs_keyword
-- On HATHAT reduce production wildcard -> bs_keyword
-- On HAT reduce production wildcard -> bs_keyword
-- On GTGT reduce production wildcard -> bs_keyword
-- On GT reduce production wildcard -> bs_keyword
-- On GLOBAL reduce production wildcard -> bs_keyword
-- On GHOST reduce production wildcard -> bs_keyword
-- On GE reduce production wildcard -> bs_keyword
-- On FUNCTION reduce production wildcard -> bs_keyword
-- On FROM reduce production wildcard -> bs_keyword
-- On FRESH reduce production wildcard -> bs_keyword
-- On FREES reduce production wildcard -> bs_keyword
-- On FREEABLE reduce production wildcard -> bs_keyword
-- On FORALL reduce production wildcard -> bs_keyword
-- On FOR reduce production wildcard -> bs_keyword
-- On FLOAT reduce production wildcard -> bs_keyword
-- On FALSE reduce production wildcard -> bs_keyword
-- On EXT_LET reduce production wildcard -> bs_keyword
-- On EXT_AT reduce production wildcard -> bs_keyword
-- On EXITS reduce production wildcard -> bs_keyword
-- On EXISTS reduce production wildcard -> bs_keyword
-- On EQUAL reduce production wildcard -> bs_keyword
-- On EQ reduce production wildcard -> bs_keyword
-- On EOF reduce production wildcard -> bs_keyword
-- On ENUM reduce production wildcard -> bs_keyword
-- On ENSURES reduce production wildcard -> bs_keyword
-- On EMPTY reduce production wildcard -> bs_keyword
-- On ELSE reduce production wildcard -> bs_keyword
-- On DYNAMIC reduce production wildcard -> bs_keyword
-- On DOUBLE reduce production wildcard -> bs_keyword
-- On DOTDOTDOT reduce production wildcard -> bs_keyword
-- On DOTDOT reduce production wildcard -> bs_keyword
-- On DOT reduce production wildcard -> bs_keyword
-- On DOLLAR reduce production wildcard -> bs_keyword
-- On DISJOINT reduce production wildcard -> bs_keyword
-- On DECREASES reduce production wildcard -> bs_keyword
-- On DANGLING reduce production wildcard -> bs_keyword
-- On CUSTOM reduce production wildcard -> bs_keyword
-- On CONTRACT reduce production wildcard -> bs_keyword
-- On CONTINUES reduce production wildcard -> bs_keyword
-- On CONSTANT10 reduce production wildcard -> bs_keyword
-- On CONSTANT reduce production wildcard -> bs_keyword
-- On CONST reduce production wildcard -> bs_keyword
-- On COMPLETE reduce production wildcard -> bs_keyword
-- On COMMA reduce production wildcard -> bs_keyword
-- On COLONGT reduce production wildcard -> bs_keyword
-- On COLONCOLON reduce production wildcard -> bs_keyword
-- On COLON2 reduce production wildcard -> bs_keyword
-- On COLON reduce production wildcard -> bs_keyword
-- On CHAR reduce production wildcard -> bs_keyword
-- On CASE reduce production wildcard -> bs_keyword
-- On BSUNION reduce production wildcard -> bs_keyword
-- On BSTYPE reduce production wildcard -> bs_keyword
-- On BREAKS reduce production wildcard -> bs_keyword
-- On BOOLEAN reduce production wildcard -> bs_keyword
-- On BOOL reduce production wildcard -> bs_keyword
-- On BLOCK_LENGTH reduce production wildcard -> bs_keyword
-- On BIMPLIES reduce production wildcard -> bs_keyword
-- On BIFF reduce production wildcard -> bs_keyword
-- On BEHAVIORS reduce production wildcard -> bs_keyword
-- On BEHAVIOR reduce production wildcard -> bs_keyword
-- On BASE_ADDR reduce production wildcard -> bs_keyword
-- On AXIOMATIC reduce production wildcard -> bs_keyword
-- On AXIOM reduce production wildcard -> bs_keyword
-- On AUTOMATIC reduce production wildcard -> bs_keyword
-- On AT reduce production wildcard -> bs_keyword
-- On ASSUMES reduce production wildcard -> bs_keyword
-- On ASSIGNS reduce production wildcard -> bs_keyword
-- On ASSERT reduce production wildcard -> bs_keyword
-- On ARROW reduce production wildcard -> bs_keyword
-- On AND reduce production wildcard -> bs_keyword
-- On AMP reduce production wildcard -> bs_keyword
-- On ALLOCATION reduce production wildcard -> bs_keyword
-- On ALLOCATES reduce production wildcard -> bs_keyword
-- On ALLOCABLE reduce production wildcard -> bs_keyword

State 1039:
## Known stack suffix:
## any_identifier
## LR(1) items:
wildcard -> any_identifier . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ EOF ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production wildcard -> any_identifier
-- On WITH reduce production wildcard -> any_identifier
-- On VOLATILE reduce production wildcard -> any_identifier
-- On VOID reduce production wildcard -> any_identifier
-- On VARIANT reduce production wildcard -> any_identifier
-- On VALID_READ reduce production wildcard -> any_identifier
-- On VALID_RANGE reduce production wildcard -> any_identifier
-- On VALID_INDEX reduce production wildcard -> any_identifier
-- On VALID reduce production wildcard -> any_identifier
-- On UNSIGNED reduce production wildcard -> any_identifier
-- On UNION reduce production wildcard -> any_identifier
-- On UNALLOCATED reduce production wildcard -> any_identifier
-- On TYPEOF reduce production wildcard -> any_identifier
-- On TYPENAME reduce production wildcard -> any_identifier
-- On TYPE reduce production wildcard -> any_identifier
-- On TRUE reduce production wildcard -> any_identifier
-- On TILDE reduce production wildcard -> any_identifier
-- On TERMINATES reduce production wildcard -> any_identifier
-- On STRUCT reduce production wildcard -> any_identifier
-- On STRING_LITERAL reduce production wildcard -> any_identifier
-- On STATIC reduce production wildcard -> any_identifier
-- On STAR reduce production wildcard -> any_identifier
-- On SLICE reduce production wildcard -> any_identifier
-- On SLASH reduce production wildcard -> any_identifier
-- On SIZEOF reduce production wildcard -> any_identifier
-- On SIGNED reduce production wildcard -> any_identifier
-- On SHORT reduce production wildcard -> any_identifier
-- On SEPARATED reduce production wildcard -> any_identifier
-- On SEMICOLON reduce production wildcard -> any_identifier
-- On RSQUARE reduce production wildcard -> any_identifier
-- On RPAR reduce production wildcard -> any_identifier
-- On RETURNS reduce production wildcard -> any_identifier
-- On RESULT reduce production wildcard -> any_identifier
-- On REQUIRES reduce production wildcard -> any_identifier
-- On REGISTER reduce production wildcard -> any_identifier
-- On REAL reduce production wildcard -> any_identifier
-- On READS reduce production wildcard -> any_identifier
-- On RBRACE reduce production wildcard -> any_identifier
-- On QUESTION reduce production wildcard -> any_identifier
-- On PREDICATE reduce production wildcard -> any_identifier
-- On PRAGMA reduce production wildcard -> any_identifier
-- On PLUS reduce production wildcard -> any_identifier
-- On PIPE reduce production wildcard -> any_identifier
-- On PERCENT reduce production wildcard -> any_identifier
-- On OR reduce production wildcard -> any_identifier
-- On OLD reduce production wildcard -> any_identifier
-- On OFFSET reduce production wildcard -> any_identifier
-- On NULL reduce production wildcard -> any_identifier
-- On NOTHING reduce production wildcard -> any_identifier
-- On NOT reduce production wildcard -> any_identifier
-- On NE reduce production wildcard -> any_identifier
-- On MODULE reduce production wildcard -> any_identifier
-- On MODEL reduce production wildcard -> any_identifier
-- On MINUS reduce production wildcard -> any_identifier
-- On LTLT reduce production wildcard -> any_identifier
-- On LTCOLON reduce production wildcard -> any_identifier
-- On LT reduce production wildcard -> any_identifier
-- On LSQUARE reduce production wildcard -> any_identifier
-- On LPAR reduce production wildcard -> any_identifier
-- On LOOP reduce production wildcard -> any_identifier
-- On LONG reduce production wildcard -> any_identifier
-- On LOGIC reduce production wildcard -> any_identifier
-- On LET reduce production wildcard -> any_identifier
-- On LEMMA reduce production wildcard -> any_identifier
-- On LE reduce production wildcard -> any_identifier
-- On LBRACE reduce production wildcard -> any_identifier
-- On LAMBDA reduce production wildcard -> any_identifier
-- On LABEL reduce production wildcard -> any_identifier
-- On INVARIANT reduce production wildcard -> any_identifier
-- On INTER reduce production wildcard -> any_identifier
-- On INTEGER reduce production wildcard -> any_identifier
-- On INT reduce production wildcard -> any_identifier
-- On INITIALIZED reduce production wildcard -> any_identifier
-- On INDUCTIVE reduce production wildcard -> any_identifier
-- On INCLUDE reduce production wildcard -> any_identifier
-- On IMPLIES reduce production wildcard -> any_identifier
-- On IMPACT reduce production wildcard -> any_identifier
-- On IFF reduce production wildcard -> any_identifier
-- On IF reduce production wildcard -> any_identifier
-- On IDENTIFIER reduce production wildcard -> any_identifier
-- On HATHAT reduce production wildcard -> any_identifier
-- On HAT reduce production wildcard -> any_identifier
-- On GTGT reduce production wildcard -> any_identifier
-- On GT reduce production wildcard -> any_identifier
-- On GLOBAL reduce production wildcard -> any_identifier
-- On GHOST reduce production wildcard -> any_identifier
-- On GE reduce production wildcard -> any_identifier
-- On FUNCTION reduce production wildcard -> any_identifier
-- On FROM reduce production wildcard -> any_identifier
-- On FRESH reduce production wildcard -> any_identifier
-- On FREES reduce production wildcard -> any_identifier
-- On FREEABLE reduce production wildcard -> any_identifier
-- On FORALL reduce production wildcard -> any_identifier
-- On FOR reduce production wildcard -> any_identifier
-- On FLOAT reduce production wildcard -> any_identifier
-- On FALSE reduce production wildcard -> any_identifier
-- On EXT_LET reduce production wildcard -> any_identifier
-- On EXT_AT reduce production wildcard -> any_identifier
-- On EXITS reduce production wildcard -> any_identifier
-- On EXISTS reduce production wildcard -> any_identifier
-- On EQUAL reduce production wildcard -> any_identifier
-- On EQ reduce production wildcard -> any_identifier
-- On EOF reduce production wildcard -> any_identifier
-- On ENUM reduce production wildcard -> any_identifier
-- On ENSURES reduce production wildcard -> any_identifier
-- On EMPTY reduce production wildcard -> any_identifier
-- On ELSE reduce production wildcard -> any_identifier
-- On DYNAMIC reduce production wildcard -> any_identifier
-- On DOUBLE reduce production wildcard -> any_identifier
-- On DOTDOTDOT reduce production wildcard -> any_identifier
-- On DOTDOT reduce production wildcard -> any_identifier
-- On DOT reduce production wildcard -> any_identifier
-- On DOLLAR reduce production wildcard -> any_identifier
-- On DISJOINT reduce production wildcard -> any_identifier
-- On DECREASES reduce production wildcard -> any_identifier
-- On DANGLING reduce production wildcard -> any_identifier
-- On CUSTOM reduce production wildcard -> any_identifier
-- On CONTRACT reduce production wildcard -> any_identifier
-- On CONTINUES reduce production wildcard -> any_identifier
-- On CONSTANT10 reduce production wildcard -> any_identifier
-- On CONSTANT reduce production wildcard -> any_identifier
-- On CONST reduce production wildcard -> any_identifier
-- On COMPLETE reduce production wildcard -> any_identifier
-- On COMMA reduce production wildcard -> any_identifier
-- On COLONGT reduce production wildcard -> any_identifier
-- On COLONCOLON reduce production wildcard -> any_identifier
-- On COLON2 reduce production wildcard -> any_identifier
-- On COLON reduce production wildcard -> any_identifier
-- On CHAR reduce production wildcard -> any_identifier
-- On CASE reduce production wildcard -> any_identifier
-- On BSUNION reduce production wildcard -> any_identifier
-- On BSTYPE reduce production wildcard -> any_identifier
-- On BREAKS reduce production wildcard -> any_identifier
-- On BOOLEAN reduce production wildcard -> any_identifier
-- On BOOL reduce production wildcard -> any_identifier
-- On BLOCK_LENGTH reduce production wildcard -> any_identifier
-- On BIMPLIES reduce production wildcard -> any_identifier
-- On BIFF reduce production wildcard -> any_identifier
-- On BEHAVIORS reduce production wildcard -> any_identifier
-- On BEHAVIOR reduce production wildcard -> any_identifier
-- On BASE_ADDR reduce production wildcard -> any_identifier
-- On AXIOMATIC reduce production wildcard -> any_identifier
-- On AXIOM reduce production wildcard -> any_identifier
-- On AUTOMATIC reduce production wildcard -> any_identifier
-- On AT reduce production wildcard -> any_identifier
-- On ASSUMES reduce production wildcard -> any_identifier
-- On ASSIGNS reduce production wildcard -> any_identifier
-- On ASSERT reduce production wildcard -> any_identifier
-- On ARROW reduce production wildcard -> any_identifier
-- On AND reduce production wildcard -> any_identifier
-- On AMP reduce production wildcard -> any_identifier
-- On ALLOCATION reduce production wildcard -> any_identifier
-- On ALLOCATES reduce production wildcard -> any_identifier
-- On ALLOCABLE reduce production wildcard -> any_identifier

State 1040:
## Known stack suffix:
## wildcard any
## LR(1) items:
any -> wildcard any . [ EOF ]
## Transitions:
## Reductions:
-- On EOF reduce production any -> wildcard any

State 1041:
## Known stack suffix:
## is_spec any
## LR(1) items:
annot -> is_spec any . EOF [ # ]
## Transitions:
-- On EOF shift to state 1042
## Reductions:

State 1042:
## Known stack suffix:
## is_spec any EOF
## LR(1) items:
annot -> is_spec any EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production annot -> is_spec any EOF

State 1043:
## Known stack suffix:
## is_acsl_spec
## LR(1) items:
is_spec -> is_acsl_spec . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_spec -> is_acsl_spec
-- On WITH reduce production is_spec -> is_acsl_spec
-- On VOLATILE reduce production is_spec -> is_acsl_spec
-- On VOID reduce production is_spec -> is_acsl_spec
-- On VARIANT reduce production is_spec -> is_acsl_spec
-- On VALID_READ reduce production is_spec -> is_acsl_spec
-- On VALID_RANGE reduce production is_spec -> is_acsl_spec
-- On VALID_INDEX reduce production is_spec -> is_acsl_spec
-- On VALID reduce production is_spec -> is_acsl_spec
-- On UNSIGNED reduce production is_spec -> is_acsl_spec
-- On UNION reduce production is_spec -> is_acsl_spec
-- On UNALLOCATED reduce production is_spec -> is_acsl_spec
-- On TYPEOF reduce production is_spec -> is_acsl_spec
-- On TYPENAME reduce production is_spec -> is_acsl_spec
-- On TYPE reduce production is_spec -> is_acsl_spec
-- On TRUE reduce production is_spec -> is_acsl_spec
-- On TILDE reduce production is_spec -> is_acsl_spec
-- On TERMINATES reduce production is_spec -> is_acsl_spec
-- On STRUCT reduce production is_spec -> is_acsl_spec
-- On STRING_LITERAL reduce production is_spec -> is_acsl_spec
-- On STATIC reduce production is_spec -> is_acsl_spec
-- On STAR reduce production is_spec -> is_acsl_spec
-- On SLICE reduce production is_spec -> is_acsl_spec
-- On SLASH reduce production is_spec -> is_acsl_spec
-- On SIZEOF reduce production is_spec -> is_acsl_spec
-- On SIGNED reduce production is_spec -> is_acsl_spec
-- On SHORT reduce production is_spec -> is_acsl_spec
-- On SEPARATED reduce production is_spec -> is_acsl_spec
-- On SEMICOLON reduce production is_spec -> is_acsl_spec
-- On RSQUARE reduce production is_spec -> is_acsl_spec
-- On RPAR reduce production is_spec -> is_acsl_spec
-- On RETURNS reduce production is_spec -> is_acsl_spec
-- On RESULT reduce production is_spec -> is_acsl_spec
-- On REQUIRES reduce production is_spec -> is_acsl_spec
-- On REGISTER reduce production is_spec -> is_acsl_spec
-- On REAL reduce production is_spec -> is_acsl_spec
-- On READS reduce production is_spec -> is_acsl_spec
-- On RBRACE reduce production is_spec -> is_acsl_spec
-- On QUESTION reduce production is_spec -> is_acsl_spec
-- On PREDICATE reduce production is_spec -> is_acsl_spec
-- On PRAGMA reduce production is_spec -> is_acsl_spec
-- On PLUS reduce production is_spec -> is_acsl_spec
-- On PIPE reduce production is_spec -> is_acsl_spec
-- On PERCENT reduce production is_spec -> is_acsl_spec
-- On OR reduce production is_spec -> is_acsl_spec
-- On OLD reduce production is_spec -> is_acsl_spec
-- On OFFSET reduce production is_spec -> is_acsl_spec
-- On NULL reduce production is_spec -> is_acsl_spec
-- On NOTHING reduce production is_spec -> is_acsl_spec
-- On NOT reduce production is_spec -> is_acsl_spec
-- On NE reduce production is_spec -> is_acsl_spec
-- On MODULE reduce production is_spec -> is_acsl_spec
-- On MODEL reduce production is_spec -> is_acsl_spec
-- On MINUS reduce production is_spec -> is_acsl_spec
-- On LTLT reduce production is_spec -> is_acsl_spec
-- On LTCOLON reduce production is_spec -> is_acsl_spec
-- On LT reduce production is_spec -> is_acsl_spec
-- On LSQUARE reduce production is_spec -> is_acsl_spec
-- On LPAR reduce production is_spec -> is_acsl_spec
-- On LOOP reduce production is_spec -> is_acsl_spec
-- On LONG reduce production is_spec -> is_acsl_spec
-- On LOGIC reduce production is_spec -> is_acsl_spec
-- On LET reduce production is_spec -> is_acsl_spec
-- On LEMMA reduce production is_spec -> is_acsl_spec
-- On LE reduce production is_spec -> is_acsl_spec
-- On LBRACE reduce production is_spec -> is_acsl_spec
-- On LAMBDA reduce production is_spec -> is_acsl_spec
-- On LABEL reduce production is_spec -> is_acsl_spec
-- On INVARIANT reduce production is_spec -> is_acsl_spec
-- On INTER reduce production is_spec -> is_acsl_spec
-- On INTEGER reduce production is_spec -> is_acsl_spec
-- On INT reduce production is_spec -> is_acsl_spec
-- On INITIALIZED reduce production is_spec -> is_acsl_spec
-- On INDUCTIVE reduce production is_spec -> is_acsl_spec
-- On INCLUDE reduce production is_spec -> is_acsl_spec
-- On IMPLIES reduce production is_spec -> is_acsl_spec
-- On IMPACT reduce production is_spec -> is_acsl_spec
-- On IFF reduce production is_spec -> is_acsl_spec
-- On IF reduce production is_spec -> is_acsl_spec
-- On IDENTIFIER reduce production is_spec -> is_acsl_spec
-- On HATHAT reduce production is_spec -> is_acsl_spec
-- On HAT reduce production is_spec -> is_acsl_spec
-- On GTGT reduce production is_spec -> is_acsl_spec
-- On GT reduce production is_spec -> is_acsl_spec
-- On GLOBAL reduce production is_spec -> is_acsl_spec
-- On GHOST reduce production is_spec -> is_acsl_spec
-- On GE reduce production is_spec -> is_acsl_spec
-- On FUNCTION reduce production is_spec -> is_acsl_spec
-- On FROM reduce production is_spec -> is_acsl_spec
-- On FRESH reduce production is_spec -> is_acsl_spec
-- On FREES reduce production is_spec -> is_acsl_spec
-- On FREEABLE reduce production is_spec -> is_acsl_spec
-- On FORALL reduce production is_spec -> is_acsl_spec
-- On FOR reduce production is_spec -> is_acsl_spec
-- On FLOAT reduce production is_spec -> is_acsl_spec
-- On FALSE reduce production is_spec -> is_acsl_spec
-- On EXT_LET reduce production is_spec -> is_acsl_spec
-- On EXT_AT reduce production is_spec -> is_acsl_spec
-- On EXITS reduce production is_spec -> is_acsl_spec
-- On EXISTS reduce production is_spec -> is_acsl_spec
-- On EQUAL reduce production is_spec -> is_acsl_spec
-- On EQ reduce production is_spec -> is_acsl_spec
-- On ENUM reduce production is_spec -> is_acsl_spec
-- On ENSURES reduce production is_spec -> is_acsl_spec
-- On EMPTY reduce production is_spec -> is_acsl_spec
-- On ELSE reduce production is_spec -> is_acsl_spec
-- On DYNAMIC reduce production is_spec -> is_acsl_spec
-- On DOUBLE reduce production is_spec -> is_acsl_spec
-- On DOTDOTDOT reduce production is_spec -> is_acsl_spec
-- On DOTDOT reduce production is_spec -> is_acsl_spec
-- On DOT reduce production is_spec -> is_acsl_spec
-- On DOLLAR reduce production is_spec -> is_acsl_spec
-- On DISJOINT reduce production is_spec -> is_acsl_spec
-- On DECREASES reduce production is_spec -> is_acsl_spec
-- On DANGLING reduce production is_spec -> is_acsl_spec
-- On CUSTOM reduce production is_spec -> is_acsl_spec
-- On CONTRACT reduce production is_spec -> is_acsl_spec
-- On CONTINUES reduce production is_spec -> is_acsl_spec
-- On CONSTANT10 reduce production is_spec -> is_acsl_spec
-- On CONSTANT reduce production is_spec -> is_acsl_spec
-- On CONST reduce production is_spec -> is_acsl_spec
-- On COMPLETE reduce production is_spec -> is_acsl_spec
-- On COMMA reduce production is_spec -> is_acsl_spec
-- On COLONGT reduce production is_spec -> is_acsl_spec
-- On COLONCOLON reduce production is_spec -> is_acsl_spec
-- On COLON2 reduce production is_spec -> is_acsl_spec
-- On COLON reduce production is_spec -> is_acsl_spec
-- On CHAR reduce production is_spec -> is_acsl_spec
-- On CASE reduce production is_spec -> is_acsl_spec
-- On BSUNION reduce production is_spec -> is_acsl_spec
-- On BSTYPE reduce production is_spec -> is_acsl_spec
-- On BREAKS reduce production is_spec -> is_acsl_spec
-- On BOOLEAN reduce production is_spec -> is_acsl_spec
-- On BOOL reduce production is_spec -> is_acsl_spec
-- On BLOCK_LENGTH reduce production is_spec -> is_acsl_spec
-- On BIMPLIES reduce production is_spec -> is_acsl_spec
-- On BIFF reduce production is_spec -> is_acsl_spec
-- On BEHAVIORS reduce production is_spec -> is_acsl_spec
-- On BEHAVIOR reduce production is_spec -> is_acsl_spec
-- On BASE_ADDR reduce production is_spec -> is_acsl_spec
-- On AXIOMATIC reduce production is_spec -> is_acsl_spec
-- On AXIOM reduce production is_spec -> is_acsl_spec
-- On AUTOMATIC reduce production is_spec -> is_acsl_spec
-- On AT reduce production is_spec -> is_acsl_spec
-- On ASSUMES reduce production is_spec -> is_acsl_spec
-- On ASSIGNS reduce production is_spec -> is_acsl_spec
-- On ASSERT reduce production is_spec -> is_acsl_spec
-- On ARROW reduce production is_spec -> is_acsl_spec
-- On AND reduce production is_spec -> is_acsl_spec
-- On AMP reduce production is_spec -> is_acsl_spec
-- On ALLOCATION reduce production is_spec -> is_acsl_spec
-- On ALLOCATES reduce production is_spec -> is_acsl_spec
-- On ALLOCABLE reduce production is_spec -> is_acsl_spec

State 1044:
## Known stack suffix:
## impact_pragma
## LR(1) items:
code_annotation -> impact_pragma . [ VOLATILE TYPE SLICE PREDICATE MODULE MODEL LOGIC LEMMA INVARIANT INDUCTIVE INCLUDE IMPACT GLOBAL FUNCTION FOR EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ASSERT ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production code_annotation -> impact_pragma
-- On TYPE reduce production code_annotation -> impact_pragma
-- On SLICE reduce production code_annotation -> impact_pragma
-- On PREDICATE reduce production code_annotation -> impact_pragma
-- On MODULE reduce production code_annotation -> impact_pragma
-- On MODEL reduce production code_annotation -> impact_pragma
-- On LOGIC reduce production code_annotation -> impact_pragma
-- On LEMMA reduce production code_annotation -> impact_pragma
-- On INVARIANT reduce production code_annotation -> impact_pragma
-- On INDUCTIVE reduce production code_annotation -> impact_pragma
-- On INCLUDE reduce production code_annotation -> impact_pragma
-- On IMPACT reduce production code_annotation -> impact_pragma
-- On GLOBAL reduce production code_annotation -> impact_pragma
-- On FUNCTION reduce production code_annotation -> impact_pragma
-- On FOR reduce production code_annotation -> impact_pragma
-- On EXT_LET reduce production code_annotation -> impact_pragma
-- On EXT_AT reduce production code_annotation -> impact_pragma
-- On EOF reduce production code_annotation -> impact_pragma
-- On CONTRACT reduce production code_annotation -> impact_pragma
-- On AXIOMATIC reduce production code_annotation -> impact_pragma
-- On AXIOM reduce production code_annotation -> impact_pragma
-- On ASSERT reduce production code_annotation -> impact_pragma

State 1045:
## Known stack suffix:
## grammar_extension_name
## LR(1) items:
is_spec -> grammar_extension_name . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production is_spec -> grammar_extension_name
-- On WITH reduce production is_spec -> grammar_extension_name
-- On VOLATILE reduce production is_spec -> grammar_extension_name
-- On VOID reduce production is_spec -> grammar_extension_name
-- On VARIANT reduce production is_spec -> grammar_extension_name
-- On VALID_READ reduce production is_spec -> grammar_extension_name
-- On VALID_RANGE reduce production is_spec -> grammar_extension_name
-- On VALID_INDEX reduce production is_spec -> grammar_extension_name
-- On VALID reduce production is_spec -> grammar_extension_name
-- On UNSIGNED reduce production is_spec -> grammar_extension_name
-- On UNION reduce production is_spec -> grammar_extension_name
-- On UNALLOCATED reduce production is_spec -> grammar_extension_name
-- On TYPEOF reduce production is_spec -> grammar_extension_name
-- On TYPENAME reduce production is_spec -> grammar_extension_name
-- On TYPE reduce production is_spec -> grammar_extension_name
-- On TRUE reduce production is_spec -> grammar_extension_name
-- On TILDE reduce production is_spec -> grammar_extension_name
-- On TERMINATES reduce production is_spec -> grammar_extension_name
-- On STRUCT reduce production is_spec -> grammar_extension_name
-- On STRING_LITERAL reduce production is_spec -> grammar_extension_name
-- On STATIC reduce production is_spec -> grammar_extension_name
-- On STAR reduce production is_spec -> grammar_extension_name
-- On SLICE reduce production is_spec -> grammar_extension_name
-- On SLASH reduce production is_spec -> grammar_extension_name
-- On SIZEOF reduce production is_spec -> grammar_extension_name
-- On SIGNED reduce production is_spec -> grammar_extension_name
-- On SHORT reduce production is_spec -> grammar_extension_name
-- On SEPARATED reduce production is_spec -> grammar_extension_name
-- On SEMICOLON reduce production is_spec -> grammar_extension_name
-- On RSQUARE reduce production is_spec -> grammar_extension_name
-- On RPAR reduce production is_spec -> grammar_extension_name
-- On RETURNS reduce production is_spec -> grammar_extension_name
-- On RESULT reduce production is_spec -> grammar_extension_name
-- On REQUIRES reduce production is_spec -> grammar_extension_name
-- On REGISTER reduce production is_spec -> grammar_extension_name
-- On REAL reduce production is_spec -> grammar_extension_name
-- On READS reduce production is_spec -> grammar_extension_name
-- On RBRACE reduce production is_spec -> grammar_extension_name
-- On QUESTION reduce production is_spec -> grammar_extension_name
-- On PREDICATE reduce production is_spec -> grammar_extension_name
-- On PRAGMA reduce production is_spec -> grammar_extension_name
-- On PLUS reduce production is_spec -> grammar_extension_name
-- On PIPE reduce production is_spec -> grammar_extension_name
-- On PERCENT reduce production is_spec -> grammar_extension_name
-- On OR reduce production is_spec -> grammar_extension_name
-- On OLD reduce production is_spec -> grammar_extension_name
-- On OFFSET reduce production is_spec -> grammar_extension_name
-- On NULL reduce production is_spec -> grammar_extension_name
-- On NOTHING reduce production is_spec -> grammar_extension_name
-- On NOT reduce production is_spec -> grammar_extension_name
-- On NE reduce production is_spec -> grammar_extension_name
-- On MODULE reduce production is_spec -> grammar_extension_name
-- On MODEL reduce production is_spec -> grammar_extension_name
-- On MINUS reduce production is_spec -> grammar_extension_name
-- On LTLT reduce production is_spec -> grammar_extension_name
-- On LTCOLON reduce production is_spec -> grammar_extension_name
-- On LT reduce production is_spec -> grammar_extension_name
-- On LSQUARE reduce production is_spec -> grammar_extension_name
-- On LPAR reduce production is_spec -> grammar_extension_name
-- On LOOP reduce production is_spec -> grammar_extension_name
-- On LONG reduce production is_spec -> grammar_extension_name
-- On LOGIC reduce production is_spec -> grammar_extension_name
-- On LET reduce production is_spec -> grammar_extension_name
-- On LEMMA reduce production is_spec -> grammar_extension_name
-- On LE reduce production is_spec -> grammar_extension_name
-- On LBRACE reduce production is_spec -> grammar_extension_name
-- On LAMBDA reduce production is_spec -> grammar_extension_name
-- On LABEL reduce production is_spec -> grammar_extension_name
-- On INVARIANT reduce production is_spec -> grammar_extension_name
-- On INTER reduce production is_spec -> grammar_extension_name
-- On INTEGER reduce production is_spec -> grammar_extension_name
-- On INT reduce production is_spec -> grammar_extension_name
-- On INITIALIZED reduce production is_spec -> grammar_extension_name
-- On INDUCTIVE reduce production is_spec -> grammar_extension_name
-- On INCLUDE reduce production is_spec -> grammar_extension_name
-- On IMPLIES reduce production is_spec -> grammar_extension_name
-- On IMPACT reduce production is_spec -> grammar_extension_name
-- On IFF reduce production is_spec -> grammar_extension_name
-- On IF reduce production is_spec -> grammar_extension_name
-- On IDENTIFIER reduce production is_spec -> grammar_extension_name
-- On HATHAT reduce production is_spec -> grammar_extension_name
-- On HAT reduce production is_spec -> grammar_extension_name
-- On GTGT reduce production is_spec -> grammar_extension_name
-- On GT reduce production is_spec -> grammar_extension_name
-- On GLOBAL reduce production is_spec -> grammar_extension_name
-- On GHOST reduce production is_spec -> grammar_extension_name
-- On GE reduce production is_spec -> grammar_extension_name
-- On FUNCTION reduce production is_spec -> grammar_extension_name
-- On FROM reduce production is_spec -> grammar_extension_name
-- On FRESH reduce production is_spec -> grammar_extension_name
-- On FREES reduce production is_spec -> grammar_extension_name
-- On FREEABLE reduce production is_spec -> grammar_extension_name
-- On FORALL reduce production is_spec -> grammar_extension_name
-- On FOR reduce production is_spec -> grammar_extension_name
-- On FLOAT reduce production is_spec -> grammar_extension_name
-- On FALSE reduce production is_spec -> grammar_extension_name
-- On EXT_LET reduce production is_spec -> grammar_extension_name
-- On EXT_AT reduce production is_spec -> grammar_extension_name
-- On EXITS reduce production is_spec -> grammar_extension_name
-- On EXISTS reduce production is_spec -> grammar_extension_name
-- On EQUAL reduce production is_spec -> grammar_extension_name
-- On EQ reduce production is_spec -> grammar_extension_name
-- On ENUM reduce production is_spec -> grammar_extension_name
-- On ENSURES reduce production is_spec -> grammar_extension_name
-- On EMPTY reduce production is_spec -> grammar_extension_name
-- On ELSE reduce production is_spec -> grammar_extension_name
-- On DYNAMIC reduce production is_spec -> grammar_extension_name
-- On DOUBLE reduce production is_spec -> grammar_extension_name
-- On DOTDOTDOT reduce production is_spec -> grammar_extension_name
-- On DOTDOT reduce production is_spec -> grammar_extension_name
-- On DOT reduce production is_spec -> grammar_extension_name
-- On DOLLAR reduce production is_spec -> grammar_extension_name
-- On DISJOINT reduce production is_spec -> grammar_extension_name
-- On DECREASES reduce production is_spec -> grammar_extension_name
-- On DANGLING reduce production is_spec -> grammar_extension_name
-- On CUSTOM reduce production is_spec -> grammar_extension_name
-- On CONTRACT reduce production is_spec -> grammar_extension_name
-- On CONTINUES reduce production is_spec -> grammar_extension_name
-- On CONSTANT10 reduce production is_spec -> grammar_extension_name
-- On CONSTANT reduce production is_spec -> grammar_extension_name
-- On CONST reduce production is_spec -> grammar_extension_name
-- On COMPLETE reduce production is_spec -> grammar_extension_name
-- On COMMA reduce production is_spec -> grammar_extension_name
-- On COLONGT reduce production is_spec -> grammar_extension_name
-- On COLONCOLON reduce production is_spec -> grammar_extension_name
-- On COLON2 reduce production is_spec -> grammar_extension_name
-- On COLON reduce production is_spec -> grammar_extension_name
-- On CHAR reduce production is_spec -> grammar_extension_name
-- On CASE reduce production is_spec -> grammar_extension_name
-- On BSUNION reduce production is_spec -> grammar_extension_name
-- On BSTYPE reduce production is_spec -> grammar_extension_name
-- On BREAKS reduce production is_spec -> grammar_extension_name
-- On BOOLEAN reduce production is_spec -> grammar_extension_name
-- On BOOL reduce production is_spec -> grammar_extension_name
-- On BLOCK_LENGTH reduce production is_spec -> grammar_extension_name
-- On BIMPLIES reduce production is_spec -> grammar_extension_name
-- On BIFF reduce production is_spec -> grammar_extension_name
-- On BEHAVIORS reduce production is_spec -> grammar_extension_name
-- On BEHAVIOR reduce production is_spec -> grammar_extension_name
-- On BASE_ADDR reduce production is_spec -> grammar_extension_name
-- On AXIOMATIC reduce production is_spec -> grammar_extension_name
-- On AXIOM reduce production is_spec -> grammar_extension_name
-- On AUTOMATIC reduce production is_spec -> grammar_extension_name
-- On AT reduce production is_spec -> grammar_extension_name
-- On ASSUMES reduce production is_spec -> grammar_extension_name
-- On ASSIGNS reduce production is_spec -> grammar_extension_name
-- On ASSERT reduce production is_spec -> grammar_extension_name
-- On ARROW reduce production is_spec -> grammar_extension_name
-- On AND reduce production is_spec -> grammar_extension_name
-- On AMP reduce production is_spec -> grammar_extension_name
-- On ALLOCATION reduce production is_spec -> grammar_extension_name
-- On ALLOCATES reduce production is_spec -> grammar_extension_name
-- On ALLOCABLE reduce production is_spec -> grammar_extension_name

State 1046:
## Known stack suffix:
## full_identifier_or_typename
## LR(1) items:
annotation -> full_identifier_or_typename . [ EOF ]
grammar_extension_name -> full_identifier_or_typename . [ WRITES WITH VOLATILE VOID VARIANT VALID_READ VALID_RANGE VALID_INDEX VALID UNSIGNED UNION UNALLOCATED TYPEOF TYPENAME TYPE TRUE TILDE TERMINATES STRUCT STRING_LITERAL STATIC STAR SLICE SLASH SIZEOF SIGNED SHORT SEPARATED SEMICOLON RSQUARE RPAR RETURNS RESULT REQUIRES REGISTER REAL READS RBRACE QUESTION PREDICATE PRAGMA PLUS PIPE PERCENT OR OLD OFFSET NULL NOTHING NOT NE MODULE MODEL MINUS LTLT LTCOLON LT LSQUARE LPAR LOOP LONG LOGIC LET LEMMA LE LBRACE LAMBDA LABEL INVARIANT INTER INTEGER INT INITIALIZED INDUCTIVE INCLUDE IMPLIES IMPACT IFF IF IDENTIFIER HATHAT HAT GTGT GT GLOBAL GHOST GE FUNCTION FROM FRESH FREES FREEABLE FORALL FOR FLOAT FALSE EXT_LET EXT_AT EXITS EXISTS EQUAL EQ ENUM ENSURES EMPTY ELSE DYNAMIC DOUBLE DOTDOTDOT DOTDOT DOT DOLLAR DISJOINT DECREASES DANGLING CUSTOM CONTRACT CONTINUES CONSTANT10 CONSTANT CONST COMPLETE COMMA COLONGT COLONCOLON COLON2 COLON CHAR CASE BSUNION BSTYPE BREAKS BOOLEAN BOOL BLOCK_LENGTH BIMPLIES BIFF BEHAVIORS BEHAVIOR BASE_ADDR AXIOMATIC AXIOM AUTOMATIC AT ASSUMES ASSIGNS ASSERT ARROW AND AMP ALLOCATION ALLOCATES ALLOCABLE ]
## Transitions:
## Reductions:
-- On WRITES reduce production grammar_extension_name -> full_identifier_or_typename
-- On WITH reduce production grammar_extension_name -> full_identifier_or_typename
-- On VOLATILE reduce production grammar_extension_name -> full_identifier_or_typename
-- On VOID reduce production grammar_extension_name -> full_identifier_or_typename
-- On VARIANT reduce production grammar_extension_name -> full_identifier_or_typename
-- On VALID_READ reduce production grammar_extension_name -> full_identifier_or_typename
-- On VALID_RANGE reduce production grammar_extension_name -> full_identifier_or_typename
-- On VALID_INDEX reduce production grammar_extension_name -> full_identifier_or_typename
-- On VALID reduce production grammar_extension_name -> full_identifier_or_typename
-- On UNSIGNED reduce production grammar_extension_name -> full_identifier_or_typename
-- On UNION reduce production grammar_extension_name -> full_identifier_or_typename
-- On UNALLOCATED reduce production grammar_extension_name -> full_identifier_or_typename
-- On TYPEOF reduce production grammar_extension_name -> full_identifier_or_typename
-- On TYPENAME reduce production grammar_extension_name -> full_identifier_or_typename
-- On TYPE reduce production grammar_extension_name -> full_identifier_or_typename
-- On TRUE reduce production grammar_extension_name -> full_identifier_or_typename
-- On TILDE reduce production grammar_extension_name -> full_identifier_or_typename
-- On TERMINATES reduce production grammar_extension_name -> full_identifier_or_typename
-- On STRUCT reduce production grammar_extension_name -> full_identifier_or_typename
-- On STRING_LITERAL reduce production grammar_extension_name -> full_identifier_or_typename
-- On STATIC reduce production grammar_extension_name -> full_identifier_or_typename
-- On STAR reduce production grammar_extension_name -> full_identifier_or_typename
-- On SLICE reduce production grammar_extension_name -> full_identifier_or_typename
-- On SLASH reduce production grammar_extension_name -> full_identifier_or_typename
-- On SIZEOF reduce production grammar_extension_name -> full_identifier_or_typename
-- On SIGNED reduce production grammar_extension_name -> full_identifier_or_typename
-- On SHORT reduce production grammar_extension_name -> full_identifier_or_typename
-- On SEPARATED reduce production grammar_extension_name -> full_identifier_or_typename
-- On SEMICOLON reduce production grammar_extension_name -> full_identifier_or_typename
-- On RSQUARE reduce production grammar_extension_name -> full_identifier_or_typename
-- On RPAR reduce production grammar_extension_name -> full_identifier_or_typename
-- On RETURNS reduce production grammar_extension_name -> full_identifier_or_typename
-- On RESULT reduce production grammar_extension_name -> full_identifier_or_typename
-- On REQUIRES reduce production grammar_extension_name -> full_identifier_or_typename
-- On REGISTER reduce production grammar_extension_name -> full_identifier_or_typename
-- On REAL reduce production grammar_extension_name -> full_identifier_or_typename
-- On READS reduce production grammar_extension_name -> full_identifier_or_typename
-- On RBRACE reduce production grammar_extension_name -> full_identifier_or_typename
-- On QUESTION reduce production grammar_extension_name -> full_identifier_or_typename
-- On PREDICATE reduce production grammar_extension_name -> full_identifier_or_typename
-- On PRAGMA reduce production grammar_extension_name -> full_identifier_or_typename
-- On PLUS reduce production grammar_extension_name -> full_identifier_or_typename
-- On PIPE reduce production grammar_extension_name -> full_identifier_or_typename
-- On PERCENT reduce production grammar_extension_name -> full_identifier_or_typename
-- On OR reduce production grammar_extension_name -> full_identifier_or_typename
-- On OLD reduce production grammar_extension_name -> full_identifier_or_typename
-- On OFFSET reduce production grammar_extension_name -> full_identifier_or_typename
-- On NULL reduce production grammar_extension_name -> full_identifier_or_typename
-- On NOTHING reduce production grammar_extension_name -> full_identifier_or_typename
-- On NOT reduce production grammar_extension_name -> full_identifier_or_typename
-- On NE reduce production grammar_extension_name -> full_identifier_or_typename
-- On MODULE reduce production grammar_extension_name -> full_identifier_or_typename
-- On MODEL reduce production grammar_extension_name -> full_identifier_or_typename
-- On MINUS reduce production grammar_extension_name -> full_identifier_or_typename
-- On LTLT reduce production grammar_extension_name -> full_identifier_or_typename
-- On LTCOLON reduce production grammar_extension_name -> full_identifier_or_typename
-- On LT reduce production grammar_extension_name -> full_identifier_or_typename
-- On LSQUARE reduce production grammar_extension_name -> full_identifier_or_typename
-- On LPAR reduce production grammar_extension_name -> full_identifier_or_typename
-- On LOOP reduce production grammar_extension_name -> full_identifier_or_typename
-- On LONG reduce production grammar_extension_name -> full_identifier_or_typename
-- On LOGIC reduce production grammar_extension_name -> full_identifier_or_typename
-- On LET reduce production grammar_extension_name -> full_identifier_or_typename
-- On LEMMA reduce production grammar_extension_name -> full_identifier_or_typename
-- On LE reduce production grammar_extension_name -> full_identifier_or_typename
-- On LBRACE reduce production grammar_extension_name -> full_identifier_or_typename
-- On LAMBDA reduce production grammar_extension_name -> full_identifier_or_typename
-- On LABEL reduce production grammar_extension_name -> full_identifier_or_typename
-- On INVARIANT reduce production grammar_extension_name -> full_identifier_or_typename
-- On INTER reduce production grammar_extension_name -> full_identifier_or_typename
-- On INTEGER reduce production grammar_extension_name -> full_identifier_or_typename
-- On INT reduce production grammar_extension_name -> full_identifier_or_typename
-- On INITIALIZED reduce production grammar_extension_name -> full_identifier_or_typename
-- On INDUCTIVE reduce production grammar_extension_name -> full_identifier_or_typename
-- On INCLUDE reduce production grammar_extension_name -> full_identifier_or_typename
-- On IMPLIES reduce production grammar_extension_name -> full_identifier_or_typename
-- On IMPACT reduce production grammar_extension_name -> full_identifier_or_typename
-- On IFF reduce production grammar_extension_name -> full_identifier_or_typename
-- On IF reduce production grammar_extension_name -> full_identifier_or_typename
-- On IDENTIFIER reduce production grammar_extension_name -> full_identifier_or_typename
-- On HATHAT reduce production grammar_extension_name -> full_identifier_or_typename
-- On HAT reduce production grammar_extension_name -> full_identifier_or_typename
-- On GTGT reduce production grammar_extension_name -> full_identifier_or_typename
-- On GT reduce production grammar_extension_name -> full_identifier_or_typename
-- On GLOBAL reduce production grammar_extension_name -> full_identifier_or_typename
-- On GHOST reduce production grammar_extension_name -> full_identifier_or_typename
-- On GE reduce production grammar_extension_name -> full_identifier_or_typename
-- On FUNCTION reduce production grammar_extension_name -> full_identifier_or_typename
-- On FROM reduce production grammar_extension_name -> full_identifier_or_typename
-- On FRESH reduce production grammar_extension_name -> full_identifier_or_typename
-- On FREES reduce production grammar_extension_name -> full_identifier_or_typename
-- On FREEABLE reduce production grammar_extension_name -> full_identifier_or_typename
-- On FORALL reduce production grammar_extension_name -> full_identifier_or_typename
-- On FOR reduce production grammar_extension_name -> full_identifier_or_typename
-- On FLOAT reduce production grammar_extension_name -> full_identifier_or_typename
-- On FALSE reduce production grammar_extension_name -> full_identifier_or_typename
-- On EXT_LET reduce production grammar_extension_name -> full_identifier_or_typename
-- On EXT_AT reduce production grammar_extension_name -> full_identifier_or_typename
-- On EXITS reduce production grammar_extension_name -> full_identifier_or_typename
-- On EXISTS reduce production grammar_extension_name -> full_identifier_or_typename
-- On EQUAL reduce production grammar_extension_name -> full_identifier_or_typename
-- On EQ reduce production grammar_extension_name -> full_identifier_or_typename
-- On EOF reduce production annotation -> full_identifier_or_typename
-- On ENUM reduce production grammar_extension_name -> full_identifier_or_typename
-- On ENSURES reduce production grammar_extension_name -> full_identifier_or_typename
-- On EMPTY reduce production grammar_extension_name -> full_identifier_or_typename
-- On ELSE reduce production grammar_extension_name -> full_identifier_or_typename
-- On DYNAMIC reduce production grammar_extension_name -> full_identifier_or_typename
-- On DOUBLE reduce production grammar_extension_name -> full_identifier_or_typename
-- On DOTDOTDOT reduce production grammar_extension_name -> full_identifier_or_typename
-- On DOTDOT reduce production grammar_extension_name -> full_identifier_or_typename
-- On DOT reduce production grammar_extension_name -> full_identifier_or_typename
-- On DOLLAR reduce production grammar_extension_name -> full_identifier_or_typename
-- On DISJOINT reduce production grammar_extension_name -> full_identifier_or_typename
-- On DECREASES reduce production grammar_extension_name -> full_identifier_or_typename
-- On DANGLING reduce production grammar_extension_name -> full_identifier_or_typename
-- On CUSTOM reduce production grammar_extension_name -> full_identifier_or_typename
-- On CONTRACT reduce production grammar_extension_name -> full_identifier_or_typename
-- On CONTINUES reduce production grammar_extension_name -> full_identifier_or_typename
-- On CONSTANT10 reduce production grammar_extension_name -> full_identifier_or_typename
-- On CONSTANT reduce production grammar_extension_name -> full_identifier_or_typename
-- On CONST reduce production grammar_extension_name -> full_identifier_or_typename
-- On COMPLETE reduce production grammar_extension_name -> full_identifier_or_typename
-- On COMMA reduce production grammar_extension_name -> full_identifier_or_typename
-- On COLONGT reduce production grammar_extension_name -> full_identifier_or_typename
-- On COLONCOLON reduce production grammar_extension_name -> full_identifier_or_typename
-- On COLON2 reduce production grammar_extension_name -> full_identifier_or_typename
-- On COLON reduce production grammar_extension_name -> full_identifier_or_typename
-- On CHAR reduce production grammar_extension_name -> full_identifier_or_typename
-- On CASE reduce production grammar_extension_name -> full_identifier_or_typename
-- On BSUNION reduce production grammar_extension_name -> full_identifier_or_typename
-- On BSTYPE reduce production grammar_extension_name -> full_identifier_or_typename
-- On BREAKS reduce production grammar_extension_name -> full_identifier_or_typename
-- On BOOLEAN reduce production grammar_extension_name -> full_identifier_or_typename
-- On BOOL reduce production grammar_extension_name -> full_identifier_or_typename
-- On BLOCK_LENGTH reduce production grammar_extension_name -> full_identifier_or_typename
-- On BIMPLIES reduce production grammar_extension_name -> full_identifier_or_typename
-- On BIFF reduce production grammar_extension_name -> full_identifier_or_typename
-- On BEHAVIORS reduce production grammar_extension_name -> full_identifier_or_typename
-- On BEHAVIOR reduce production grammar_extension_name -> full_identifier_or_typename
-- On BASE_ADDR reduce production grammar_extension_name -> full_identifier_or_typename
-- On AXIOMATIC reduce production grammar_extension_name -> full_identifier_or_typename
-- On AXIOM reduce production grammar_extension_name -> full_identifier_or_typename
-- On AUTOMATIC reduce production grammar_extension_name -> full_identifier_or_typename
-- On AT reduce production grammar_extension_name -> full_identifier_or_typename
-- On ASSUMES reduce production grammar_extension_name -> full_identifier_or_typename
-- On ASSIGNS reduce production grammar_extension_name -> full_identifier_or_typename
-- On ASSERT reduce production grammar_extension_name -> full_identifier_or_typename
-- On ARROW reduce production grammar_extension_name -> full_identifier_or_typename
-- On AND reduce production grammar_extension_name -> full_identifier_or_typename
-- On AMP reduce production grammar_extension_name -> full_identifier_or_typename
-- On ALLOCATION reduce production grammar_extension_name -> full_identifier_or_typename
-- On ALLOCATES reduce production grammar_extension_name -> full_identifier_or_typename
-- On ALLOCABLE reduce production grammar_extension_name -> full_identifier_or_typename

State 1047:
## Known stack suffix:
## deprecated_logic_decl
## LR(1) items:
decl -> deprecated_logic_decl . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production decl -> deprecated_logic_decl
-- On TYPE reduce production decl -> deprecated_logic_decl
-- On PREDICATE reduce production decl -> deprecated_logic_decl
-- On MODULE reduce production decl -> deprecated_logic_decl
-- On MODEL reduce production decl -> deprecated_logic_decl
-- On LOGIC reduce production decl -> deprecated_logic_decl
-- On LEMMA reduce production decl -> deprecated_logic_decl
-- On INDUCTIVE reduce production decl -> deprecated_logic_decl
-- On INCLUDE reduce production decl -> deprecated_logic_decl
-- On GLOBAL reduce production decl -> deprecated_logic_decl
-- On FUNCTION reduce production decl -> deprecated_logic_decl
-- On EXT_LET reduce production decl -> deprecated_logic_decl
-- On EXT_AT reduce production decl -> deprecated_logic_decl
-- On EOF reduce production decl -> deprecated_logic_decl
-- On CONTRACT reduce production decl -> deprecated_logic_decl
-- On AXIOMATIC reduce production decl -> deprecated_logic_decl
-- On AXIOM reduce production decl -> deprecated_logic_decl

State 1048:
## Known stack suffix:
## decl_list
## LR(1) items:
annot -> decl_list . EOF [ # ]
## Transitions:
-- On EOF shift to state 1049
## Reductions:

State 1049:
## Known stack suffix:
## decl_list EOF
## LR(1) items:
annot -> decl_list EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production annot -> decl_list EOF

State 1050:
## Known stack suffix:
## decl
## LR(1) items:
decl_list -> decl . [ EOF ]
decl_list -> decl . decl_list [ EOF ]
## Transitions:
-- On VOLATILE shift to state 2
-- On TYPE shift to state 560
-- On PREDICATE shift to state 623
-- On MODEL shift to state 648
-- On LOGIC shift to state 704
-- On LEMMA shift to state 719
-- On INDUCTIVE shift to state 727
-- On GLOBAL shift to state 745
-- On AXIOMATIC shift to state 907
-- On AXIOM shift to state 937
-- On type_annot shift to state 945
-- On model_annot shift to state 947
-- On logic_def shift to state 950
-- On deprecated_logic_decl shift to state 1047
-- On decl_list shift to state 1051
-- On decl shift to state 1050
## Reductions:
-- On EOF reduce production decl_list -> decl

State 1051:
## Known stack suffix:
## decl decl_list
## LR(1) items:
decl_list -> decl decl_list . [ EOF ]
## Transitions:
## Reductions:
-- On EOF reduce production decl_list -> decl decl_list

State 1052:
## Known stack suffix:
## code_annotation
## LR(1) items:
annotation -> code_annotation . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
annotation -> code_annotation . beg_code_annotation [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SLICE shift to state 1053
-- On INVARIANT shift to state 1054
-- On IMPACT shift to state 1055
-- On FOR shift to state 1056
-- On ASSERT shift to state 1057
-- On beg_code_annotation shift to state 1058
## Reductions:
-- On VOLATILE reduce production annotation -> code_annotation
-- On TYPE reduce production annotation -> code_annotation
-- On PREDICATE reduce production annotation -> code_annotation
-- On MODULE reduce production annotation -> code_annotation
-- On MODEL reduce production annotation -> code_annotation
-- On LOGIC reduce production annotation -> code_annotation
-- On LEMMA reduce production annotation -> code_annotation
-- On INDUCTIVE reduce production annotation -> code_annotation
-- On INCLUDE reduce production annotation -> code_annotation
-- On GLOBAL reduce production annotation -> code_annotation
-- On FUNCTION reduce production annotation -> code_annotation
-- On EXT_LET reduce production annotation -> code_annotation
-- On EXT_AT reduce production annotation -> code_annotation
-- On EOF reduce production annotation -> code_annotation
-- On CONTRACT reduce production annotation -> code_annotation
-- On AXIOMATIC reduce production annotation -> code_annotation
-- On AXIOM reduce production annotation -> code_annotation

State 1053:
## Known stack suffix:
## SLICE
## LR(1) items:
beg_code_annotation -> SLICE . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production beg_code_annotation -> SLICE
-- On TYPE reduce production beg_code_annotation -> SLICE
-- On PREDICATE reduce production beg_code_annotation -> SLICE
-- On MODULE reduce production beg_code_annotation -> SLICE
-- On MODEL reduce production beg_code_annotation -> SLICE
-- On LOGIC reduce production beg_code_annotation -> SLICE
-- On LEMMA reduce production beg_code_annotation -> SLICE
-- On INDUCTIVE reduce production beg_code_annotation -> SLICE
-- On INCLUDE reduce production beg_code_annotation -> SLICE
-- On GLOBAL reduce production beg_code_annotation -> SLICE
-- On FUNCTION reduce production beg_code_annotation -> SLICE
-- On EXT_LET reduce production beg_code_annotation -> SLICE
-- On EXT_AT reduce production beg_code_annotation -> SLICE
-- On EOF reduce production beg_code_annotation -> SLICE
-- On CONTRACT reduce production beg_code_annotation -> SLICE
-- On AXIOMATIC reduce production beg_code_annotation -> SLICE
-- On AXIOM reduce production beg_code_annotation -> SLICE

State 1054:
## Known stack suffix:
## INVARIANT
## LR(1) items:
beg_code_annotation -> INVARIANT . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production beg_code_annotation -> INVARIANT
-- On TYPE reduce production beg_code_annotation -> INVARIANT
-- On PREDICATE reduce production beg_code_annotation -> INVARIANT
-- On MODULE reduce production beg_code_annotation -> INVARIANT
-- On MODEL reduce production beg_code_annotation -> INVARIANT
-- On LOGIC reduce production beg_code_annotation -> INVARIANT
-- On LEMMA reduce production beg_code_annotation -> INVARIANT
-- On INDUCTIVE reduce production beg_code_annotation -> INVARIANT
-- On INCLUDE reduce production beg_code_annotation -> INVARIANT
-- On GLOBAL reduce production beg_code_annotation -> INVARIANT
-- On FUNCTION reduce production beg_code_annotation -> INVARIANT
-- On EXT_LET reduce production beg_code_annotation -> INVARIANT
-- On EXT_AT reduce production beg_code_annotation -> INVARIANT
-- On EOF reduce production beg_code_annotation -> INVARIANT
-- On CONTRACT reduce production beg_code_annotation -> INVARIANT
-- On AXIOMATIC reduce production beg_code_annotation -> INVARIANT
-- On AXIOM reduce production beg_code_annotation -> INVARIANT

State 1055:
## Known stack suffix:
## IMPACT
## LR(1) items:
beg_code_annotation -> IMPACT . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production beg_code_annotation -> IMPACT
-- On TYPE reduce production beg_code_annotation -> IMPACT
-- On PREDICATE reduce production beg_code_annotation -> IMPACT
-- On MODULE reduce production beg_code_annotation -> IMPACT
-- On MODEL reduce production beg_code_annotation -> IMPACT
-- On LOGIC reduce production beg_code_annotation -> IMPACT
-- On LEMMA reduce production beg_code_annotation -> IMPACT
-- On INDUCTIVE reduce production beg_code_annotation -> IMPACT
-- On INCLUDE reduce production beg_code_annotation -> IMPACT
-- On GLOBAL reduce production beg_code_annotation -> IMPACT
-- On FUNCTION reduce production beg_code_annotation -> IMPACT
-- On EXT_LET reduce production beg_code_annotation -> IMPACT
-- On EXT_AT reduce production beg_code_annotation -> IMPACT
-- On EOF reduce production beg_code_annotation -> IMPACT
-- On CONTRACT reduce production beg_code_annotation -> IMPACT
-- On AXIOMATIC reduce production beg_code_annotation -> IMPACT
-- On AXIOM reduce production beg_code_annotation -> IMPACT

State 1056:
## Known stack suffix:
## FOR
## LR(1) items:
beg_code_annotation -> FOR . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production beg_code_annotation -> FOR
-- On TYPE reduce production beg_code_annotation -> FOR
-- On PREDICATE reduce production beg_code_annotation -> FOR
-- On MODULE reduce production beg_code_annotation -> FOR
-- On MODEL reduce production beg_code_annotation -> FOR
-- On LOGIC reduce production beg_code_annotation -> FOR
-- On LEMMA reduce production beg_code_annotation -> FOR
-- On INDUCTIVE reduce production beg_code_annotation -> FOR
-- On INCLUDE reduce production beg_code_annotation -> FOR
-- On GLOBAL reduce production beg_code_annotation -> FOR
-- On FUNCTION reduce production beg_code_annotation -> FOR
-- On EXT_LET reduce production beg_code_annotation -> FOR
-- On EXT_AT reduce production beg_code_annotation -> FOR
-- On EOF reduce production beg_code_annotation -> FOR
-- On CONTRACT reduce production beg_code_annotation -> FOR
-- On AXIOMATIC reduce production beg_code_annotation -> FOR
-- On AXIOM reduce production beg_code_annotation -> FOR

State 1057:
## Known stack suffix:
## ASSERT
## LR(1) items:
beg_code_annotation -> ASSERT . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production beg_code_annotation -> ASSERT
-- On TYPE reduce production beg_code_annotation -> ASSERT
-- On PREDICATE reduce production beg_code_annotation -> ASSERT
-- On MODULE reduce production beg_code_annotation -> ASSERT
-- On MODEL reduce production beg_code_annotation -> ASSERT
-- On LOGIC reduce production beg_code_annotation -> ASSERT
-- On LEMMA reduce production beg_code_annotation -> ASSERT
-- On INDUCTIVE reduce production beg_code_annotation -> ASSERT
-- On INCLUDE reduce production beg_code_annotation -> ASSERT
-- On GLOBAL reduce production beg_code_annotation -> ASSERT
-- On FUNCTION reduce production beg_code_annotation -> ASSERT
-- On EXT_LET reduce production beg_code_annotation -> ASSERT
-- On EXT_AT reduce production beg_code_annotation -> ASSERT
-- On EOF reduce production beg_code_annotation -> ASSERT
-- On CONTRACT reduce production beg_code_annotation -> ASSERT
-- On AXIOMATIC reduce production beg_code_annotation -> ASSERT
-- On AXIOM reduce production beg_code_annotation -> ASSERT

State 1058:
## Known stack suffix:
## code_annotation beg_code_annotation
## LR(1) items:
annotation -> code_annotation beg_code_annotation . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production annotation -> code_annotation beg_code_annotation
-- On TYPE reduce production annotation -> code_annotation beg_code_annotation
-- On PREDICATE reduce production annotation -> code_annotation beg_code_annotation
-- On MODULE reduce production annotation -> code_annotation beg_code_annotation
-- On MODEL reduce production annotation -> code_annotation beg_code_annotation
-- On LOGIC reduce production annotation -> code_annotation beg_code_annotation
-- On LEMMA reduce production annotation -> code_annotation beg_code_annotation
-- On INDUCTIVE reduce production annotation -> code_annotation beg_code_annotation
-- On INCLUDE reduce production annotation -> code_annotation beg_code_annotation
-- On GLOBAL reduce production annotation -> code_annotation beg_code_annotation
-- On FUNCTION reduce production annotation -> code_annotation beg_code_annotation
-- On EXT_LET reduce production annotation -> code_annotation beg_code_annotation
-- On EXT_AT reduce production annotation -> code_annotation beg_code_annotation
-- On EOF reduce production annotation -> code_annotation beg_code_annotation
-- On CONTRACT reduce production annotation -> code_annotation beg_code_annotation
-- On AXIOMATIC reduce production annotation -> code_annotation beg_code_annotation
-- On AXIOM reduce production annotation -> code_annotation beg_code_annotation

State 1059:
## Known stack suffix:
## annotation
## LR(1) items:
annot -> annotation . EOF [ # ]
## Transitions:
-- On EOF shift to state 1060
## Reductions:

State 1060:
## Known stack suffix:
## annotation EOF
## LR(1) items:
annot -> annotation EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production annot -> annotation EOF

State 1061:
## Known stack suffix:
## annot
## LR(1) items:
annot' -> annot . [ # ]
## Transitions:
## Reductions:
-- On # accept annot

State 1062:
## Known stack suffix:
##
## LR(1) items:
ext_spec' -> . ext_spec [ # ]
## Transitions:
-- On VOLATILE shift to state 2
-- On TYPE shift to state 560
-- On PREDICATE shift to state 623
-- On MODEL shift to state 648
-- On LOGIC shift to state 704
-- On LEMMA shift to state 719
-- On INDUCTIVE shift to state 727
-- On INCLUDE shift to state 1063
-- On GLOBAL shift to state 745
-- On EXT_LET shift to state 1066
-- On AXIOMATIC shift to state 907
-- On AXIOM shift to state 937
-- On type_annot shift to state 945
-- On model_annot shift to state 947
-- On logic_def shift to state 950
-- On ext_spec shift to state 1071
-- On ext_global_clauses_opt shift to state 1072
-- On ext_global_clauses shift to state 1115
-- On ext_global_clause shift to state 1116
-- On deprecated_logic_decl shift to state 1047
-- On decl shift to state 1114
## Reductions:
-- On MODULE reduce production ext_global_clauses_opt ->
-- On FUNCTION reduce production ext_global_clauses_opt ->
-- On EOF reduce production ext_global_clauses_opt ->

State 1063:
## Known stack suffix:
## INCLUDE
## LR(1) items:
ext_global_clause -> INCLUDE . string SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On STRING_LITERAL shift to state 105
-- On string shift to state 1064
## Reductions:

State 1064:
## Known stack suffix:
## INCLUDE string
## LR(1) items:
ext_global_clause -> INCLUDE string . SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
string -> string . STRING_LITERAL [ STRING_LITERAL SEMICOLON ]
## Transitions:
-- On STRING_LITERAL shift to state 299
-- On SEMICOLON shift to state 1065
## Reductions:

State 1065:
## Known stack suffix:
## INCLUDE string SEMICOLON
## LR(1) items:
ext_global_clause -> INCLUDE string SEMICOLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ext_global_clause -> INCLUDE string SEMICOLON
-- On TYPE reduce production ext_global_clause -> INCLUDE string SEMICOLON
-- On PREDICATE reduce production ext_global_clause -> INCLUDE string SEMICOLON
-- On MODULE reduce production ext_global_clause -> INCLUDE string SEMICOLON
-- On MODEL reduce production ext_global_clause -> INCLUDE string SEMICOLON
-- On LOGIC reduce production ext_global_clause -> INCLUDE string SEMICOLON
-- On LEMMA reduce production ext_global_clause -> INCLUDE string SEMICOLON
-- On INDUCTIVE reduce production ext_global_clause -> INCLUDE string SEMICOLON
-- On INCLUDE reduce production ext_global_clause -> INCLUDE string SEMICOLON
-- On GLOBAL reduce production ext_global_clause -> INCLUDE string SEMICOLON
-- On FUNCTION reduce production ext_global_clause -> INCLUDE string SEMICOLON
-- On EXT_LET reduce production ext_global_clause -> INCLUDE string SEMICOLON
-- On EXT_AT reduce production ext_global_clause -> INCLUDE string SEMICOLON
-- On EOF reduce production ext_global_clause -> INCLUDE string SEMICOLON
-- On CONTRACT reduce production ext_global_clause -> INCLUDE string SEMICOLON
-- On AXIOMATIC reduce production ext_global_clause -> INCLUDE string SEMICOLON
-- On AXIOM reduce production ext_global_clause -> INCLUDE string SEMICOLON

State 1066:
## Known stack suffix:
## EXT_LET
## LR(1) items:
ext_global_clause -> EXT_LET . any_identifier EQUAL full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On any_identifier shift to state 1067
-- On acsl_c_keyword shift to state 87
## Reductions:

State 1067:
## Known stack suffix:
## EXT_LET any_identifier
## LR(1) items:
ext_global_clause -> EXT_LET any_identifier . EQUAL full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On EQUAL shift to state 1068
## Reductions:

State 1068:
## Known stack suffix:
## EXT_LET any_identifier EQUAL
## LR(1) items:
ext_global_clause -> EXT_LET any_identifier EQUAL . full_lexpr SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On full_lexpr shift to state 1069
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 1069:
## Known stack suffix:
## EXT_LET any_identifier EQUAL full_lexpr
## LR(1) items:
ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr . SEMICOLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On SEMICOLON shift to state 1070
## Reductions:

State 1070:
## Known stack suffix:
## EXT_LET any_identifier EQUAL full_lexpr SEMICOLON
## LR(1) items:
ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON
-- On TYPE reduce production ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON
-- On PREDICATE reduce production ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON
-- On MODULE reduce production ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON
-- On MODEL reduce production ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON
-- On LOGIC reduce production ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON
-- On LEMMA reduce production ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON
-- On INDUCTIVE reduce production ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON
-- On INCLUDE reduce production ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON
-- On GLOBAL reduce production ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON
-- On FUNCTION reduce production ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON
-- On EXT_LET reduce production ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON
-- On EXT_AT reduce production ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON
-- On EOF reduce production ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON
-- On CONTRACT reduce production ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON
-- On AXIOMATIC reduce production ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON
-- On AXIOM reduce production ext_global_clause -> EXT_LET any_identifier EQUAL full_lexpr SEMICOLON

State 1071:
## Known stack suffix:
## ext_spec
## LR(1) items:
ext_spec' -> ext_spec . [ # ]
## Transitions:
## Reductions:
-- On # accept ext_spec

State 1072:
## Known stack suffix:
## ext_global_clauses_opt
## LR(1) items:
ext_spec -> ext_global_clauses_opt . ext_module_specs_opt ext_global_specs_opt EOF [ # ]
## Transitions:
-- On FUNCTION shift to state 1073
-- On ext_module_specs_opt shift to state 1077
-- On ext_module_specs shift to state 1123
-- On ext_module_spec shift to state 1084
-- On ext_function_markup shift to state 1086
## Reductions:
-- On MODULE reduce production ext_module_specs_opt ->
-- On EOF reduce production ext_module_specs_opt ->

State 1073:
## Known stack suffix:
## FUNCTION
## LR(1) items:
ext_function_markup -> FUNCTION . ext_identifier COLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On ext_identifier shift to state 1074
-- On c_keyword shift to state 85
-- On any_identifier shift to state 1076
-- On acsl_c_keyword shift to state 87
## Reductions:

State 1074:
## Known stack suffix:
## FUNCTION ext_identifier
## LR(1) items:
ext_function_markup -> FUNCTION ext_identifier . COLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On COLON shift to state 1075
## Reductions:

State 1075:
## Known stack suffix:
## FUNCTION ext_identifier COLON
## LR(1) items:
ext_function_markup -> FUNCTION ext_identifier COLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ext_function_markup -> FUNCTION ext_identifier COLON
-- On TYPE reduce production ext_function_markup -> FUNCTION ext_identifier COLON
-- On PREDICATE reduce production ext_function_markup -> FUNCTION ext_identifier COLON
-- On MODULE reduce production ext_function_markup -> FUNCTION ext_identifier COLON
-- On MODEL reduce production ext_function_markup -> FUNCTION ext_identifier COLON
-- On LOGIC reduce production ext_function_markup -> FUNCTION ext_identifier COLON
-- On LEMMA reduce production ext_function_markup -> FUNCTION ext_identifier COLON
-- On INDUCTIVE reduce production ext_function_markup -> FUNCTION ext_identifier COLON
-- On INCLUDE reduce production ext_function_markup -> FUNCTION ext_identifier COLON
-- On GLOBAL reduce production ext_function_markup -> FUNCTION ext_identifier COLON
-- On FUNCTION reduce production ext_function_markup -> FUNCTION ext_identifier COLON
-- On EXT_LET reduce production ext_function_markup -> FUNCTION ext_identifier COLON
-- On EXT_AT reduce production ext_function_markup -> FUNCTION ext_identifier COLON
-- On EOF reduce production ext_function_markup -> FUNCTION ext_identifier COLON
-- On CONTRACT reduce production ext_function_markup -> FUNCTION ext_identifier COLON
-- On AXIOMATIC reduce production ext_function_markup -> FUNCTION ext_identifier COLON
-- On AXIOM reduce production ext_function_markup -> FUNCTION ext_identifier COLON

State 1076:
## Known stack suffix:
## any_identifier
## LR(1) items:
ext_identifier -> any_identifier . [ COLON ]
## Transitions:
## Reductions:
-- On COLON reduce production ext_identifier -> any_identifier

State 1077:
## Known stack suffix:
## ext_global_clauses_opt ext_module_specs_opt
## LR(1) items:
ext_spec -> ext_global_clauses_opt ext_module_specs_opt . ext_global_specs_opt EOF [ # ]
## Transitions:
-- On MODULE shift to state 1078
-- On ext_module_markup shift to state 1081
-- On ext_global_specs_opt shift to state 1118
-- On ext_global_specs shift to state 1120
-- On ext_global_spec shift to state 1121
## Reductions:
-- On EOF reduce production ext_global_specs_opt ->

State 1078:
## Known stack suffix:
## MODULE
## LR(1) items:
ext_module_markup -> MODULE . ext_identifier COLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EOF AXIOMATIC AXIOM ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On ext_identifier shift to state 1079
-- On c_keyword shift to state 85
-- On any_identifier shift to state 1076
-- On acsl_c_keyword shift to state 87
## Reductions:

State 1079:
## Known stack suffix:
## MODULE ext_identifier
## LR(1) items:
ext_module_markup -> MODULE ext_identifier . COLON [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EOF AXIOMATIC AXIOM ]
## Transitions:
-- On COLON shift to state 1080
## Reductions:

State 1080:
## Known stack suffix:
## MODULE ext_identifier COLON
## LR(1) items:
ext_module_markup -> MODULE ext_identifier COLON . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EOF AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ext_module_markup -> MODULE ext_identifier COLON
-- On TYPE reduce production ext_module_markup -> MODULE ext_identifier COLON
-- On PREDICATE reduce production ext_module_markup -> MODULE ext_identifier COLON
-- On MODULE reduce production ext_module_markup -> MODULE ext_identifier COLON
-- On MODEL reduce production ext_module_markup -> MODULE ext_identifier COLON
-- On LOGIC reduce production ext_module_markup -> MODULE ext_identifier COLON
-- On LEMMA reduce production ext_module_markup -> MODULE ext_identifier COLON
-- On INDUCTIVE reduce production ext_module_markup -> MODULE ext_identifier COLON
-- On INCLUDE reduce production ext_module_markup -> MODULE ext_identifier COLON
-- On GLOBAL reduce production ext_module_markup -> MODULE ext_identifier COLON
-- On FUNCTION reduce production ext_module_markup -> MODULE ext_identifier COLON
-- On EXT_LET reduce production ext_module_markup -> MODULE ext_identifier COLON
-- On EOF reduce production ext_module_markup -> MODULE ext_identifier COLON
-- On AXIOMATIC reduce production ext_module_markup -> MODULE ext_identifier COLON
-- On AXIOM reduce production ext_module_markup -> MODULE ext_identifier COLON

State 1081:
## Known stack suffix:
## ext_module_markup
## LR(1) items:
ext_global_spec -> ext_module_markup . ext_global_clauses_opt ext_module_specs [ MODULE EOF ]
ext_global_spec -> ext_module_markup . [ MODULE EOF ]
## Transitions:
-- On VOLATILE shift to state 2
-- On TYPE shift to state 560
-- On PREDICATE shift to state 623
-- On MODEL shift to state 648
-- On LOGIC shift to state 704
-- On LEMMA shift to state 719
-- On INDUCTIVE shift to state 727
-- On INCLUDE shift to state 1063
-- On GLOBAL shift to state 745
-- On EXT_LET shift to state 1066
-- On AXIOMATIC shift to state 907
-- On AXIOM shift to state 937
-- On type_annot shift to state 945
-- On model_annot shift to state 947
-- On logic_def shift to state 950
-- On ext_global_clauses_opt shift to state 1082
-- On ext_global_clauses shift to state 1115
-- On ext_global_clause shift to state 1116
-- On deprecated_logic_decl shift to state 1047
-- On decl shift to state 1114
## Reductions:
-- On MODULE reduce production ext_global_spec -> ext_module_markup
-- On FUNCTION reduce production ext_global_clauses_opt ->
-- On EOF reduce production ext_global_spec -> ext_module_markup

State 1082:
## Known stack suffix:
## ext_module_markup ext_global_clauses_opt
## LR(1) items:
ext_global_spec -> ext_module_markup ext_global_clauses_opt . ext_module_specs [ MODULE EOF ]
## Transitions:
-- On FUNCTION shift to state 1073
-- On ext_module_specs shift to state 1083
-- On ext_module_spec shift to state 1084
-- On ext_function_markup shift to state 1086
## Reductions:

State 1083:
## Known stack suffix:
## ext_module_markup ext_global_clauses_opt ext_module_specs
## LR(1) items:
ext_global_spec -> ext_module_markup ext_global_clauses_opt ext_module_specs . [ MODULE EOF ]
## Transitions:
## Reductions:
-- On MODULE reduce production ext_global_spec -> ext_module_markup ext_global_clauses_opt ext_module_specs
-- On EOF reduce production ext_global_spec -> ext_module_markup ext_global_clauses_opt ext_module_specs

State 1084:
## Known stack suffix:
## ext_module_spec
## LR(1) items:
ext_module_specs -> ext_module_spec . [ MODULE EOF ]
ext_module_specs -> ext_module_spec . ext_module_specs [ MODULE EOF ]
## Transitions:
-- On FUNCTION shift to state 1073
-- On ext_module_specs shift to state 1085
-- On ext_module_spec shift to state 1084
-- On ext_function_markup shift to state 1086
## Reductions:
-- On MODULE reduce production ext_module_specs -> ext_module_spec
-- On EOF reduce production ext_module_specs -> ext_module_spec

State 1085:
## Known stack suffix:
## ext_module_spec ext_module_specs
## LR(1) items:
ext_module_specs -> ext_module_spec ext_module_specs . [ MODULE EOF ]
## Transitions:
## Reductions:
-- On MODULE reduce production ext_module_specs -> ext_module_spec ext_module_specs
-- On EOF reduce production ext_module_specs -> ext_module_spec ext_module_specs

State 1086:
## Known stack suffix:
## ext_function_markup
## LR(1) items:
ext_module_spec -> ext_function_markup . ext_function_specs_opt [ MODULE FUNCTION EOF ]
## Transitions:
-- On VOLATILE shift to state 2
-- On TYPE shift to state 560
-- On PREDICATE shift to state 623
-- On MODEL shift to state 648
-- On LOGIC shift to state 704
-- On LEMMA shift to state 719
-- On INDUCTIVE shift to state 727
-- On INCLUDE shift to state 1063
-- On GLOBAL shift to state 745
-- On EXT_LET shift to state 1066
-- On EXT_AT shift to state 1087
-- On CONTRACT shift to state 1095
-- On AXIOMATIC shift to state 907
-- On AXIOM shift to state 937
-- On type_annot shift to state 945
-- On model_annot shift to state 947
-- On logic_def shift to state 950
-- On ext_global_clause shift to state 1099
-- On ext_function_specs_opt shift to state 1100
-- On ext_function_specs shift to state 1101
-- On ext_function_spec shift to state 1102
-- On ext_contract_markup shift to state 1104
-- On ext_at_stmt_markup shift to state 1106
-- On ext_at_loop_markup shift to state 1112
-- On deprecated_logic_decl shift to state 1047
-- On decl shift to state 1114
## Reductions:
-- On MODULE reduce production ext_function_specs_opt ->
-- On FUNCTION reduce production ext_function_specs_opt ->
-- On EOF reduce production ext_function_specs_opt ->

State 1087:
## Known stack suffix:
## EXT_AT
## LR(1) items:
ext_at_loop_markup -> EXT_AT . LOOP CONSTANT10 COLON [ TYPENAME SLICE MODULE LOOP INVARIANT IMPACT IDENTIFIER FUNCTION FOR EOF CONTRACT ASSERT ]
ext_at_stmt_markup -> EXT_AT . CONSTANT10 COLON [ TYPENAME SLICE MODULE LOOP INVARIANT IMPACT IDENTIFIER FUNCTION FOR EOF CONTRACT ASSERT ]
ext_at_stmt_markup -> EXT_AT . any_identifier COLON [ TYPENAME SLICE MODULE LOOP INVARIANT IMPACT IDENTIFIER FUNCTION FOR EOF CONTRACT ASSERT ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 1088
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONSTANT10 shift to state 1091
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On c_keyword shift to state 85
-- On any_identifier shift to state 1093
-- On acsl_c_keyword shift to state 87
## Reductions:

State 1088:
## Known stack suffix:
## EXT_AT LOOP
## LR(1) items:
ext_at_loop_markup -> EXT_AT LOOP . CONSTANT10 COLON [ TYPENAME SLICE MODULE LOOP INVARIANT IMPACT IDENTIFIER FUNCTION FOR EOF CONTRACT ASSERT ]
is_acsl_decl_or_code_annot -> LOOP . [ COLON ]
## Transitions:
-- On CONSTANT10 shift to state 1089
## Reductions:
-- On COLON reduce production is_acsl_decl_or_code_annot -> LOOP

State 1089:
## Known stack suffix:
## EXT_AT LOOP CONSTANT10
## LR(1) items:
ext_at_loop_markup -> EXT_AT LOOP CONSTANT10 . COLON [ TYPENAME SLICE MODULE LOOP INVARIANT IMPACT IDENTIFIER FUNCTION FOR EOF CONTRACT ASSERT ]
## Transitions:
-- On COLON shift to state 1090
## Reductions:

State 1090:
## Known stack suffix:
## EXT_AT LOOP CONSTANT10 COLON
## LR(1) items:
ext_at_loop_markup -> EXT_AT LOOP CONSTANT10 COLON . [ TYPENAME SLICE MODULE LOOP INVARIANT IMPACT IDENTIFIER FUNCTION FOR EOF CONTRACT ASSERT ]
## Transitions:
## Reductions:
-- On TYPENAME reduce production ext_at_loop_markup -> EXT_AT LOOP CONSTANT10 COLON
-- On SLICE reduce production ext_at_loop_markup -> EXT_AT LOOP CONSTANT10 COLON
-- On MODULE reduce production ext_at_loop_markup -> EXT_AT LOOP CONSTANT10 COLON
-- On LOOP reduce production ext_at_loop_markup -> EXT_AT LOOP CONSTANT10 COLON
-- On INVARIANT reduce production ext_at_loop_markup -> EXT_AT LOOP CONSTANT10 COLON
-- On IMPACT reduce production ext_at_loop_markup -> EXT_AT LOOP CONSTANT10 COLON
-- On IDENTIFIER reduce production ext_at_loop_markup -> EXT_AT LOOP CONSTANT10 COLON
-- On FUNCTION reduce production ext_at_loop_markup -> EXT_AT LOOP CONSTANT10 COLON
-- On FOR reduce production ext_at_loop_markup -> EXT_AT LOOP CONSTANT10 COLON
-- On EOF reduce production ext_at_loop_markup -> EXT_AT LOOP CONSTANT10 COLON
-- On CONTRACT reduce production ext_at_loop_markup -> EXT_AT LOOP CONSTANT10 COLON
-- On ASSERT reduce production ext_at_loop_markup -> EXT_AT LOOP CONSTANT10 COLON

State 1091:
## Known stack suffix:
## EXT_AT CONSTANT10
## LR(1) items:
ext_at_stmt_markup -> EXT_AT CONSTANT10 . COLON [ TYPENAME SLICE MODULE LOOP INVARIANT IMPACT IDENTIFIER FUNCTION FOR EOF CONTRACT ASSERT ]
## Transitions:
-- On COLON shift to state 1092
## Reductions:

State 1092:
## Known stack suffix:
## EXT_AT CONSTANT10 COLON
## LR(1) items:
ext_at_stmt_markup -> EXT_AT CONSTANT10 COLON . [ TYPENAME SLICE MODULE LOOP INVARIANT IMPACT IDENTIFIER FUNCTION FOR EOF CONTRACT ASSERT ]
## Transitions:
## Reductions:
-- On TYPENAME reduce production ext_at_stmt_markup -> EXT_AT CONSTANT10 COLON
-- On SLICE reduce production ext_at_stmt_markup -> EXT_AT CONSTANT10 COLON
-- On MODULE reduce production ext_at_stmt_markup -> EXT_AT CONSTANT10 COLON
-- On LOOP reduce production ext_at_stmt_markup -> EXT_AT CONSTANT10 COLON
-- On INVARIANT reduce production ext_at_stmt_markup -> EXT_AT CONSTANT10 COLON
-- On IMPACT reduce production ext_at_stmt_markup -> EXT_AT CONSTANT10 COLON
-- On IDENTIFIER reduce production ext_at_stmt_markup -> EXT_AT CONSTANT10 COLON
-- On FUNCTION reduce production ext_at_stmt_markup -> EXT_AT CONSTANT10 COLON
-- On FOR reduce production ext_at_stmt_markup -> EXT_AT CONSTANT10 COLON
-- On EOF reduce production ext_at_stmt_markup -> EXT_AT CONSTANT10 COLON
-- On CONTRACT reduce production ext_at_stmt_markup -> EXT_AT CONSTANT10 COLON
-- On ASSERT reduce production ext_at_stmt_markup -> EXT_AT CONSTANT10 COLON

State 1093:
## Known stack suffix:
## EXT_AT any_identifier
## LR(1) items:
ext_at_stmt_markup -> EXT_AT any_identifier . COLON [ TYPENAME SLICE MODULE LOOP INVARIANT IMPACT IDENTIFIER FUNCTION FOR EOF CONTRACT ASSERT ]
## Transitions:
-- On COLON shift to state 1094
## Reductions:

State 1094:
## Known stack suffix:
## EXT_AT any_identifier COLON
## LR(1) items:
ext_at_stmt_markup -> EXT_AT any_identifier COLON . [ TYPENAME SLICE MODULE LOOP INVARIANT IMPACT IDENTIFIER FUNCTION FOR EOF CONTRACT ASSERT ]
## Transitions:
## Reductions:
-- On TYPENAME reduce production ext_at_stmt_markup -> EXT_AT any_identifier COLON
-- On SLICE reduce production ext_at_stmt_markup -> EXT_AT any_identifier COLON
-- On MODULE reduce production ext_at_stmt_markup -> EXT_AT any_identifier COLON
-- On LOOP reduce production ext_at_stmt_markup -> EXT_AT any_identifier COLON
-- On INVARIANT reduce production ext_at_stmt_markup -> EXT_AT any_identifier COLON
-- On IMPACT reduce production ext_at_stmt_markup -> EXT_AT any_identifier COLON
-- On IDENTIFIER reduce production ext_at_stmt_markup -> EXT_AT any_identifier COLON
-- On FUNCTION reduce production ext_at_stmt_markup -> EXT_AT any_identifier COLON
-- On FOR reduce production ext_at_stmt_markup -> EXT_AT any_identifier COLON
-- On EOF reduce production ext_at_stmt_markup -> EXT_AT any_identifier COLON
-- On CONTRACT reduce production ext_at_stmt_markup -> EXT_AT any_identifier COLON
-- On ASSERT reduce production ext_at_stmt_markup -> EXT_AT any_identifier COLON

State 1095:
## Known stack suffix:
## CONTRACT
## LR(1) items:
ext_contract_markup -> CONTRACT . ext_identifier_opt COLON [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On WRITES shift to state 1
-- On VOLATILE shift to state 3
-- On VOID shift to state 4
-- On VARIANT shift to state 5
-- On UNSIGNED shift to state 8
-- On UNION shift to state 9
-- On TYPENAME shift to state 10
-- On TYPE shift to state 11
-- On TERMINATES shift to state 12
-- On STRUCT shift to state 13
-- On STATIC shift to state 14
-- On SLICE shift to state 15
-- On SIZEOF shift to state 16
-- On SIGNED shift to state 17
-- On SHORT shift to state 18
-- On RETURNS shift to state 19
-- On REQUIRES shift to state 20
-- On REAL shift to state 21
-- On READS shift to state 22
-- On PREDICATE shift to state 23
-- On PRAGMA shift to state 24
-- On MODULE shift to state 25
-- On MODEL shift to state 26
-- On LOOP shift to state 27
-- On LONG shift to state 28
-- On LOGIC shift to state 29
-- On LEMMA shift to state 30
-- On LABEL shift to state 31
-- On INVARIANT shift to state 32
-- On INTEGER shift to state 33
-- On INT shift to state 34
-- On INDUCTIVE shift to state 35
-- On INCLUDE shift to state 36
-- On IMPACT shift to state 37
-- On IF shift to state 38
-- On IDENTIFIER shift to state 39
-- On GLOBAL shift to state 40
-- On FUNCTION shift to state 41
-- On FREES shift to state 42
-- On FOR shift to state 43
-- On FLOAT shift to state 44
-- On EXT_LET shift to state 45
-- On EXT_AT shift to state 46
-- On EXITS shift to state 47
-- On ENUM shift to state 48
-- On ENSURES shift to state 49
-- On ELSE shift to state 50
-- On DOUBLE shift to state 51
-- On DISJOINT shift to state 52
-- On DECREASES shift to state 53
-- On CUSTOM shift to state 54
-- On CONTRACT shift to state 55
-- On CONTINUES shift to state 56
-- On CONST shift to state 57
-- On COMPLETE shift to state 58
-- On CHAR shift to state 59
-- On CASE shift to state 60
-- On BREAKS shift to state 61
-- On BOOLEAN shift to state 62
-- On BOOL shift to state 63
-- On BEHAVIORS shift to state 64
-- On BEHAVIOR shift to state 65
-- On AXIOMATIC shift to state 66
-- On AXIOM shift to state 67
-- On ASSUMES shift to state 68
-- On ASSIGNS shift to state 69
-- On ASSERT shift to state 70
-- On ALLOCATES shift to state 71
-- On post_cond shift to state 72
-- On non_logic_keyword shift to state 73
-- On keyword shift to state 79
-- On is_ext_spec shift to state 80
-- On is_acsl_spec shift to state 81
-- On is_acsl_other shift to state 82
-- On is_acsl_decl_or_code_annot shift to state 83
-- On identifier_or_typename shift to state 84
-- On ext_identifier_opt shift to state 1096
-- On ext_identifier shift to state 1098
-- On c_keyword shift to state 85
-- On any_identifier shift to state 1076
-- On acsl_c_keyword shift to state 87
## Reductions:
-- On COLON reduce production ext_identifier_opt ->

State 1096:
## Known stack suffix:
## CONTRACT ext_identifier_opt
## LR(1) items:
ext_contract_markup -> CONTRACT ext_identifier_opt . COLON [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
-- On COLON shift to state 1097
## Reductions:

State 1097:
## Known stack suffix:
## CONTRACT ext_identifier_opt COLON
## LR(1) items:
ext_contract_markup -> CONTRACT ext_identifier_opt COLON . [ WRITES VOLATILE VOID UNSIGNED UNION TYPENAME TYPE TERMINATES STRUCT STATIC SIZEOF SIGNED SHORT RETURNS REQUIRES REAL READS PREDICATE MODULE MODEL LONG LOGIC LEMMA LABEL INTEGER INT INDUCTIVE INCLUDE IF IDENTIFIER GLOBAL FUNCTION FREES FLOAT EXT_LET EXT_AT EXITS EOF ENUM ENSURES ELSE DOUBLE DISJOINT DECREASES CONTRACT CONTINUES CONST COMPLETE CHAR CASE BREAKS BOOLEAN BOOL BEHAVIORS BEHAVIOR AXIOMATIC AXIOM ASSIGNS ALLOCATES ]
## Transitions:
## Reductions:
-- On WRITES reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On VOLATILE reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On VOID reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On UNSIGNED reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On UNION reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On TYPENAME reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On TYPE reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On TERMINATES reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On STRUCT reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On STATIC reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On SIZEOF reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On SIGNED reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On SHORT reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On RETURNS reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On REQUIRES reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On REAL reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On READS reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On PREDICATE reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On MODULE reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On MODEL reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On LONG reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On LOGIC reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On LEMMA reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On LABEL reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On INTEGER reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On INT reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On INDUCTIVE reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On INCLUDE reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On IF reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On IDENTIFIER reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On GLOBAL reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On FUNCTION reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On FREES reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On FLOAT reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On EXT_LET reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On EXT_AT reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On EXITS reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On EOF reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On ENUM reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On ENSURES reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On ELSE reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On DOUBLE reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On DISJOINT reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On DECREASES reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On CONTRACT reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On CONTINUES reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On CONST reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On COMPLETE reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On CHAR reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On CASE reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On BREAKS reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On BOOLEAN reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On BOOL reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On BEHAVIORS reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On BEHAVIOR reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On AXIOMATIC reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On AXIOM reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On ASSIGNS reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON
-- On ALLOCATES reduce production ext_contract_markup -> CONTRACT ext_identifier_opt COLON

State 1098:
## Known stack suffix:
## ext_identifier
## LR(1) items:
ext_identifier_opt -> ext_identifier . [ COLON ]
## Transitions:
## Reductions:
-- On COLON reduce production ext_identifier_opt -> ext_identifier

State 1099:
## Known stack suffix:
## ext_global_clause
## LR(1) items:
ext_function_spec -> ext_global_clause . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ext_function_spec -> ext_global_clause
-- On TYPE reduce production ext_function_spec -> ext_global_clause
-- On PREDICATE reduce production ext_function_spec -> ext_global_clause
-- On MODULE reduce production ext_function_spec -> ext_global_clause
-- On MODEL reduce production ext_function_spec -> ext_global_clause
-- On LOGIC reduce production ext_function_spec -> ext_global_clause
-- On LEMMA reduce production ext_function_spec -> ext_global_clause
-- On INDUCTIVE reduce production ext_function_spec -> ext_global_clause
-- On INCLUDE reduce production ext_function_spec -> ext_global_clause
-- On GLOBAL reduce production ext_function_spec -> ext_global_clause
-- On FUNCTION reduce production ext_function_spec -> ext_global_clause
-- On EXT_LET reduce production ext_function_spec -> ext_global_clause
-- On EXT_AT reduce production ext_function_spec -> ext_global_clause
-- On EOF reduce production ext_function_spec -> ext_global_clause
-- On CONTRACT reduce production ext_function_spec -> ext_global_clause
-- On AXIOMATIC reduce production ext_function_spec -> ext_global_clause
-- On AXIOM reduce production ext_function_spec -> ext_global_clause

State 1100:
## Known stack suffix:
## ext_function_markup ext_function_specs_opt
## LR(1) items:
ext_module_spec -> ext_function_markup ext_function_specs_opt . [ MODULE FUNCTION EOF ]
## Transitions:
## Reductions:
-- On MODULE reduce production ext_module_spec -> ext_function_markup ext_function_specs_opt
-- On FUNCTION reduce production ext_module_spec -> ext_function_markup ext_function_specs_opt
-- On EOF reduce production ext_module_spec -> ext_function_markup ext_function_specs_opt

State 1101:
## Known stack suffix:
## ext_function_specs
## LR(1) items:
ext_function_specs_opt -> ext_function_specs . [ MODULE FUNCTION EOF ]
## Transitions:
## Reductions:
-- On MODULE reduce production ext_function_specs_opt -> ext_function_specs
-- On FUNCTION reduce production ext_function_specs_opt -> ext_function_specs
-- On EOF reduce production ext_function_specs_opt -> ext_function_specs

State 1102:
## Known stack suffix:
## ext_function_spec
## LR(1) items:
ext_function_specs -> ext_function_spec . [ MODULE FUNCTION EOF ]
ext_function_specs -> ext_function_spec . ext_function_specs [ MODULE FUNCTION EOF ]
## Transitions:
-- On VOLATILE shift to state 2
-- On TYPE shift to state 560
-- On PREDICATE shift to state 623
-- On MODEL shift to state 648
-- On LOGIC shift to state 704
-- On LEMMA shift to state 719
-- On INDUCTIVE shift to state 727
-- On INCLUDE shift to state 1063
-- On GLOBAL shift to state 745
-- On EXT_LET shift to state 1066
-- On EXT_AT shift to state 1087
-- On CONTRACT shift to state 1095
-- On AXIOMATIC shift to state 907
-- On AXIOM shift to state 937
-- On type_annot shift to state 945
-- On model_annot shift to state 947
-- On logic_def shift to state 950
-- On ext_global_clause shift to state 1099
-- On ext_function_specs shift to state 1103
-- On ext_function_spec shift to state 1102
-- On ext_contract_markup shift to state 1104
-- On ext_at_stmt_markup shift to state 1106
-- On ext_at_loop_markup shift to state 1112
-- On deprecated_logic_decl shift to state 1047
-- On decl shift to state 1114
## Reductions:
-- On MODULE reduce production ext_function_specs -> ext_function_spec
-- On FUNCTION reduce production ext_function_specs -> ext_function_spec
-- On EOF reduce production ext_function_specs -> ext_function_spec

State 1103:
## Known stack suffix:
## ext_function_spec ext_function_specs
## LR(1) items:
ext_function_specs -> ext_function_spec ext_function_specs . [ MODULE FUNCTION EOF ]
## Transitions:
## Reductions:
-- On MODULE reduce production ext_function_specs -> ext_function_spec ext_function_specs
-- On FUNCTION reduce production ext_function_specs -> ext_function_spec ext_function_specs
-- On EOF reduce production ext_function_specs -> ext_function_spec ext_function_specs

State 1104:
## Known stack suffix:
## ext_contract_markup
## LR(1) items:
ext_function_spec -> ext_contract_markup . contract [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On REQUIRES shift to state 754
-- On requires shift to state 799
-- On ne_requires shift to state 758
-- On contract shift to state 1105
## Reductions:
-- On WRITES reduce production requires ->
-- On VOLATILE reduce production requires ->
-- On VOID reduce production requires ->
-- On UNSIGNED reduce production requires ->
-- On UNION reduce production requires ->
-- On TYPENAME reduce production requires ->
-- On TYPE reduce production requires ->
-- On TERMINATES reduce production requires ->
-- On STRUCT reduce production requires ->
-- On STATIC reduce production requires ->
-- On SIZEOF reduce production requires ->
-- On SIGNED reduce production requires ->
-- On SHORT reduce production requires ->
-- On RETURNS reduce production requires ->
-- On REAL reduce production requires ->
-- On READS reduce production requires ->
-- On PREDICATE reduce production requires ->
-- On MODULE reduce production requires ->
-- On MODEL reduce production requires ->
-- On LONG reduce production requires ->
-- On LOGIC reduce production requires ->
-- On LEMMA reduce production requires ->
-- On LABEL reduce production requires ->
-- On INTEGER reduce production requires ->
-- On INT reduce production requires ->
-- On INDUCTIVE reduce production requires ->
-- On INCLUDE reduce production requires ->
-- On IF reduce production requires ->
-- On IDENTIFIER reduce production requires ->
-- On GLOBAL reduce production requires ->
-- On FUNCTION reduce production requires ->
-- On FREES reduce production requires ->
-- On FLOAT reduce production requires ->
-- On EXT_LET reduce production requires ->
-- On EXT_AT reduce production requires ->
-- On EXITS reduce production requires ->
-- On EOF reduce production requires ->
-- On ENUM reduce production requires ->
-- On ENSURES reduce production requires ->
-- On ELSE reduce production requires ->
-- On DOUBLE reduce production requires ->
-- On DISJOINT reduce production requires ->
-- On DECREASES reduce production requires ->
-- On CONTRACT reduce production requires ->
-- On CONTINUES reduce production requires ->
-- On CONST reduce production requires ->
-- On COMPLETE reduce production requires ->
-- On CHAR reduce production requires ->
-- On CASE reduce production requires ->
-- On BREAKS reduce production requires ->
-- On BOOLEAN reduce production requires ->
-- On BOOL reduce production requires ->
-- On BEHAVIORS reduce production requires ->
-- On BEHAVIOR reduce production requires ->
-- On AXIOMATIC reduce production requires ->
-- On AXIOM reduce production requires ->
-- On ASSIGNS reduce production requires ->
-- On ALLOCATES reduce production requires ->

State 1105:
## Known stack suffix:
## ext_contract_markup contract
## LR(1) items:
ext_function_spec -> ext_contract_markup contract . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ext_function_spec -> ext_contract_markup contract
-- On TYPE reduce production ext_function_spec -> ext_contract_markup contract
-- On PREDICATE reduce production ext_function_spec -> ext_contract_markup contract
-- On MODULE reduce production ext_function_spec -> ext_contract_markup contract
-- On MODEL reduce production ext_function_spec -> ext_contract_markup contract
-- On LOGIC reduce production ext_function_spec -> ext_contract_markup contract
-- On LEMMA reduce production ext_function_spec -> ext_contract_markup contract
-- On INDUCTIVE reduce production ext_function_spec -> ext_contract_markup contract
-- On INCLUDE reduce production ext_function_spec -> ext_contract_markup contract
-- On GLOBAL reduce production ext_function_spec -> ext_contract_markup contract
-- On FUNCTION reduce production ext_function_spec -> ext_contract_markup contract
-- On EXT_LET reduce production ext_function_spec -> ext_contract_markup contract
-- On EXT_AT reduce production ext_function_spec -> ext_contract_markup contract
-- On EOF reduce production ext_function_spec -> ext_contract_markup contract
-- On CONTRACT reduce production ext_function_spec -> ext_contract_markup contract
-- On AXIOMATIC reduce production ext_function_spec -> ext_contract_markup contract
-- On AXIOM reduce production ext_function_spec -> ext_contract_markup contract

State 1106:
## Known stack suffix:
## ext_at_stmt_markup
## LR(1) items:
ext_function_spec -> ext_at_stmt_markup . ext_stmt_loop_spec [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
ext_function_specs -> ext_at_stmt_markup . [ MODULE FUNCTION EOF ]
## Transitions:
-- On SLICE shift to state 617
-- On LOOP shift to state 656
-- On INVARIANT shift to state 724
-- On IMPACT shift to state 739
-- On FOR shift to state 751
-- On CONTRACT shift to state 1095
-- On ASSERT shift to state 942
-- On slice_pragma shift to state 946
-- On loop_variant shift to state 778
-- On loop_pragma shift to state 779
-- On loop_invariant shift to state 780
-- On loop_grammar_extension shift to state 781
-- On loop_effects shift to state 782
-- On loop_annotations shift to state 948
-- On loop_annot_stack shift to state 949
-- On loop_allocation shift to state 785
-- On impact_pragma shift to state 1044
-- On full_identifier_or_typename shift to state 1107
-- On ext_stmt_loop_spec shift to state 1108
-- On ext_contract_markup shift to state 1109
-- On enter_kw_c_mode shift to state 698
-- On code_annotation shift to state 1052
-- On annotation shift to state 1111
## Reductions:
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On MODULE reduce production ext_function_specs -> ext_at_stmt_markup
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production ext_function_specs -> ext_at_stmt_markup
-- On EOF reduce production ext_function_specs -> ext_at_stmt_markup

State 1107:
## Known stack suffix:
## full_identifier_or_typename
## LR(1) items:
annotation -> full_identifier_or_typename . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production annotation -> full_identifier_or_typename
-- On TYPE reduce production annotation -> full_identifier_or_typename
-- On PREDICATE reduce production annotation -> full_identifier_or_typename
-- On MODULE reduce production annotation -> full_identifier_or_typename
-- On MODEL reduce production annotation -> full_identifier_or_typename
-- On LOGIC reduce production annotation -> full_identifier_or_typename
-- On LEMMA reduce production annotation -> full_identifier_or_typename
-- On INDUCTIVE reduce production annotation -> full_identifier_or_typename
-- On INCLUDE reduce production annotation -> full_identifier_or_typename
-- On GLOBAL reduce production annotation -> full_identifier_or_typename
-- On FUNCTION reduce production annotation -> full_identifier_or_typename
-- On EXT_LET reduce production annotation -> full_identifier_or_typename
-- On EXT_AT reduce production annotation -> full_identifier_or_typename
-- On EOF reduce production annotation -> full_identifier_or_typename
-- On CONTRACT reduce production annotation -> full_identifier_or_typename
-- On AXIOMATIC reduce production annotation -> full_identifier_or_typename
-- On AXIOM reduce production annotation -> full_identifier_or_typename

State 1108:
## Known stack suffix:
## ext_at_stmt_markup ext_stmt_loop_spec
## LR(1) items:
ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec
-- On TYPE reduce production ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec
-- On PREDICATE reduce production ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec
-- On MODULE reduce production ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec
-- On MODEL reduce production ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec
-- On LOGIC reduce production ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec
-- On LEMMA reduce production ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec
-- On INDUCTIVE reduce production ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec
-- On INCLUDE reduce production ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec
-- On GLOBAL reduce production ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec
-- On FUNCTION reduce production ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec
-- On EXT_LET reduce production ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec
-- On EXT_AT reduce production ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec
-- On EOF reduce production ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec
-- On CONTRACT reduce production ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec
-- On AXIOMATIC reduce production ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec
-- On AXIOM reduce production ext_function_spec -> ext_at_stmt_markup ext_stmt_loop_spec

State 1109:
## Known stack suffix:
## ext_contract_markup
## LR(1) items:
ext_stmt_loop_spec -> ext_contract_markup . contract [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
-- On REQUIRES shift to state 754
-- On requires shift to state 799
-- On ne_requires shift to state 758
-- On contract shift to state 1110
## Reductions:
-- On WRITES reduce production requires ->
-- On VOLATILE reduce production requires ->
-- On VOID reduce production requires ->
-- On UNSIGNED reduce production requires ->
-- On UNION reduce production requires ->
-- On TYPENAME reduce production requires ->
-- On TYPE reduce production requires ->
-- On TERMINATES reduce production requires ->
-- On STRUCT reduce production requires ->
-- On STATIC reduce production requires ->
-- On SIZEOF reduce production requires ->
-- On SIGNED reduce production requires ->
-- On SHORT reduce production requires ->
-- On RETURNS reduce production requires ->
-- On REAL reduce production requires ->
-- On READS reduce production requires ->
-- On PREDICATE reduce production requires ->
-- On MODULE reduce production requires ->
-- On MODEL reduce production requires ->
-- On LONG reduce production requires ->
-- On LOGIC reduce production requires ->
-- On LEMMA reduce production requires ->
-- On LABEL reduce production requires ->
-- On INTEGER reduce production requires ->
-- On INT reduce production requires ->
-- On INDUCTIVE reduce production requires ->
-- On INCLUDE reduce production requires ->
-- On IF reduce production requires ->
-- On IDENTIFIER reduce production requires ->
-- On GLOBAL reduce production requires ->
-- On FUNCTION reduce production requires ->
-- On FREES reduce production requires ->
-- On FLOAT reduce production requires ->
-- On EXT_LET reduce production requires ->
-- On EXT_AT reduce production requires ->
-- On EXITS reduce production requires ->
-- On EOF reduce production requires ->
-- On ENUM reduce production requires ->
-- On ENSURES reduce production requires ->
-- On ELSE reduce production requires ->
-- On DOUBLE reduce production requires ->
-- On DISJOINT reduce production requires ->
-- On DECREASES reduce production requires ->
-- On CONTRACT reduce production requires ->
-- On CONTINUES reduce production requires ->
-- On CONST reduce production requires ->
-- On COMPLETE reduce production requires ->
-- On CHAR reduce production requires ->
-- On CASE reduce production requires ->
-- On BREAKS reduce production requires ->
-- On BOOLEAN reduce production requires ->
-- On BOOL reduce production requires ->
-- On BEHAVIORS reduce production requires ->
-- On BEHAVIOR reduce production requires ->
-- On AXIOMATIC reduce production requires ->
-- On AXIOM reduce production requires ->
-- On ASSIGNS reduce production requires ->
-- On ALLOCATES reduce production requires ->

State 1110:
## Known stack suffix:
## ext_contract_markup contract
## LR(1) items:
ext_stmt_loop_spec -> ext_contract_markup contract . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ext_stmt_loop_spec -> ext_contract_markup contract
-- On TYPE reduce production ext_stmt_loop_spec -> ext_contract_markup contract
-- On PREDICATE reduce production ext_stmt_loop_spec -> ext_contract_markup contract
-- On MODULE reduce production ext_stmt_loop_spec -> ext_contract_markup contract
-- On MODEL reduce production ext_stmt_loop_spec -> ext_contract_markup contract
-- On LOGIC reduce production ext_stmt_loop_spec -> ext_contract_markup contract
-- On LEMMA reduce production ext_stmt_loop_spec -> ext_contract_markup contract
-- On INDUCTIVE reduce production ext_stmt_loop_spec -> ext_contract_markup contract
-- On INCLUDE reduce production ext_stmt_loop_spec -> ext_contract_markup contract
-- On GLOBAL reduce production ext_stmt_loop_spec -> ext_contract_markup contract
-- On FUNCTION reduce production ext_stmt_loop_spec -> ext_contract_markup contract
-- On EXT_LET reduce production ext_stmt_loop_spec -> ext_contract_markup contract
-- On EXT_AT reduce production ext_stmt_loop_spec -> ext_contract_markup contract
-- On EOF reduce production ext_stmt_loop_spec -> ext_contract_markup contract
-- On CONTRACT reduce production ext_stmt_loop_spec -> ext_contract_markup contract
-- On AXIOMATIC reduce production ext_stmt_loop_spec -> ext_contract_markup contract
-- On AXIOM reduce production ext_stmt_loop_spec -> ext_contract_markup contract

State 1111:
## Known stack suffix:
## annotation
## LR(1) items:
ext_stmt_loop_spec -> annotation . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ext_stmt_loop_spec -> annotation
-- On TYPE reduce production ext_stmt_loop_spec -> annotation
-- On PREDICATE reduce production ext_stmt_loop_spec -> annotation
-- On MODULE reduce production ext_stmt_loop_spec -> annotation
-- On MODEL reduce production ext_stmt_loop_spec -> annotation
-- On LOGIC reduce production ext_stmt_loop_spec -> annotation
-- On LEMMA reduce production ext_stmt_loop_spec -> annotation
-- On INDUCTIVE reduce production ext_stmt_loop_spec -> annotation
-- On INCLUDE reduce production ext_stmt_loop_spec -> annotation
-- On GLOBAL reduce production ext_stmt_loop_spec -> annotation
-- On FUNCTION reduce production ext_stmt_loop_spec -> annotation
-- On EXT_LET reduce production ext_stmt_loop_spec -> annotation
-- On EXT_AT reduce production ext_stmt_loop_spec -> annotation
-- On EOF reduce production ext_stmt_loop_spec -> annotation
-- On CONTRACT reduce production ext_stmt_loop_spec -> annotation
-- On AXIOMATIC reduce production ext_stmt_loop_spec -> annotation
-- On AXIOM reduce production ext_stmt_loop_spec -> annotation

State 1112:
## Known stack suffix:
## ext_at_loop_markup
## LR(1) items:
ext_function_spec -> ext_at_loop_markup . ext_stmt_loop_spec [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
ext_function_specs -> ext_at_loop_markup . [ MODULE FUNCTION EOF ]
## Transitions:
-- On SLICE shift to state 617
-- On LOOP shift to state 656
-- On INVARIANT shift to state 724
-- On IMPACT shift to state 739
-- On FOR shift to state 751
-- On CONTRACT shift to state 1095
-- On ASSERT shift to state 942
-- On slice_pragma shift to state 946
-- On loop_variant shift to state 778
-- On loop_pragma shift to state 779
-- On loop_invariant shift to state 780
-- On loop_grammar_extension shift to state 781
-- On loop_effects shift to state 782
-- On loop_annotations shift to state 948
-- On loop_annot_stack shift to state 949
-- On loop_allocation shift to state 785
-- On impact_pragma shift to state 1044
-- On full_identifier_or_typename shift to state 1107
-- On ext_stmt_loop_spec shift to state 1113
-- On ext_contract_markup shift to state 1109
-- On enter_kw_c_mode shift to state 698
-- On code_annotation shift to state 1052
-- On annotation shift to state 1111
## Reductions:
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On MODULE reduce production ext_function_specs -> ext_at_loop_markup
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production ext_function_specs -> ext_at_loop_markup
-- On EOF reduce production ext_function_specs -> ext_at_loop_markup

State 1113:
## Known stack suffix:
## ext_at_loop_markup ext_stmt_loop_spec
## LR(1) items:
ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec
-- On TYPE reduce production ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec
-- On PREDICATE reduce production ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec
-- On MODULE reduce production ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec
-- On MODEL reduce production ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec
-- On LOGIC reduce production ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec
-- On LEMMA reduce production ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec
-- On INDUCTIVE reduce production ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec
-- On INCLUDE reduce production ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec
-- On GLOBAL reduce production ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec
-- On FUNCTION reduce production ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec
-- On EXT_LET reduce production ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec
-- On EXT_AT reduce production ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec
-- On EOF reduce production ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec
-- On CONTRACT reduce production ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec
-- On AXIOMATIC reduce production ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec
-- On AXIOM reduce production ext_function_spec -> ext_at_loop_markup ext_stmt_loop_spec

State 1114:
## Known stack suffix:
## decl
## LR(1) items:
ext_global_clause -> decl . [ VOLATILE TYPE PREDICATE MODULE MODEL LOGIC LEMMA INDUCTIVE INCLUDE GLOBAL FUNCTION EXT_LET EXT_AT EOF CONTRACT AXIOMATIC AXIOM ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production ext_global_clause -> decl
-- On TYPE reduce production ext_global_clause -> decl
-- On PREDICATE reduce production ext_global_clause -> decl
-- On MODULE reduce production ext_global_clause -> decl
-- On MODEL reduce production ext_global_clause -> decl
-- On LOGIC reduce production ext_global_clause -> decl
-- On LEMMA reduce production ext_global_clause -> decl
-- On INDUCTIVE reduce production ext_global_clause -> decl
-- On INCLUDE reduce production ext_global_clause -> decl
-- On GLOBAL reduce production ext_global_clause -> decl
-- On FUNCTION reduce production ext_global_clause -> decl
-- On EXT_LET reduce production ext_global_clause -> decl
-- On EXT_AT reduce production ext_global_clause -> decl
-- On EOF reduce production ext_global_clause -> decl
-- On CONTRACT reduce production ext_global_clause -> decl
-- On AXIOMATIC reduce production ext_global_clause -> decl
-- On AXIOM reduce production ext_global_clause -> decl

State 1115:
## Known stack suffix:
## ext_global_clauses
## LR(1) items:
ext_global_clauses_opt -> ext_global_clauses . [ MODULE FUNCTION EOF ]
## Transitions:
## Reductions:
-- On MODULE reduce production ext_global_clauses_opt -> ext_global_clauses
-- On FUNCTION reduce production ext_global_clauses_opt -> ext_global_clauses
-- On EOF reduce production ext_global_clauses_opt -> ext_global_clauses

State 1116:
## Known stack suffix:
## ext_global_clause
## LR(1) items:
ext_global_clauses -> ext_global_clause . [ MODULE FUNCTION EOF ]
ext_global_clauses -> ext_global_clause . ext_global_clauses [ MODULE FUNCTION EOF ]
## Transitions:
-- On VOLATILE shift to state 2
-- On TYPE shift to state 560
-- On PREDICATE shift to state 623
-- On MODEL shift to state 648
-- On LOGIC shift to state 704
-- On LEMMA shift to state 719
-- On INDUCTIVE shift to state 727
-- On INCLUDE shift to state 1063
-- On GLOBAL shift to state 745
-- On EXT_LET shift to state 1066
-- On AXIOMATIC shift to state 907
-- On AXIOM shift to state 937
-- On type_annot shift to state 945
-- On model_annot shift to state 947
-- On logic_def shift to state 950
-- On ext_global_clauses shift to state 1117
-- On ext_global_clause shift to state 1116
-- On deprecated_logic_decl shift to state 1047
-- On decl shift to state 1114
## Reductions:
-- On MODULE reduce production ext_global_clauses -> ext_global_clause
-- On FUNCTION reduce production ext_global_clauses -> ext_global_clause
-- On EOF reduce production ext_global_clauses -> ext_global_clause

State 1117:
## Known stack suffix:
## ext_global_clause ext_global_clauses
## LR(1) items:
ext_global_clauses -> ext_global_clause ext_global_clauses . [ MODULE FUNCTION EOF ]
## Transitions:
## Reductions:
-- On MODULE reduce production ext_global_clauses -> ext_global_clause ext_global_clauses
-- On FUNCTION reduce production ext_global_clauses -> ext_global_clause ext_global_clauses
-- On EOF reduce production ext_global_clauses -> ext_global_clause ext_global_clauses

State 1118:
## Known stack suffix:
## ext_global_clauses_opt ext_module_specs_opt ext_global_specs_opt
## LR(1) items:
ext_spec -> ext_global_clauses_opt ext_module_specs_opt ext_global_specs_opt . EOF [ # ]
## Transitions:
-- On EOF shift to state 1119
## Reductions:

State 1119:
## Known stack suffix:
## ext_global_clauses_opt ext_module_specs_opt ext_global_specs_opt EOF
## LR(1) items:
ext_spec -> ext_global_clauses_opt ext_module_specs_opt ext_global_specs_opt EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production ext_spec -> ext_global_clauses_opt ext_module_specs_opt ext_global_specs_opt EOF

State 1120:
## Known stack suffix:
## ext_global_specs
## LR(1) items:
ext_global_specs_opt -> ext_global_specs . [ EOF ]
## Transitions:
## Reductions:
-- On EOF reduce production ext_global_specs_opt -> ext_global_specs

State 1121:
## Known stack suffix:
## ext_global_spec
## LR(1) items:
ext_global_specs -> ext_global_spec . [ EOF ]
ext_global_specs -> ext_global_spec . ext_global_specs [ EOF ]
## Transitions:
-- On MODULE shift to state 1078
-- On ext_module_markup shift to state 1081
-- On ext_global_specs shift to state 1122
-- On ext_global_spec shift to state 1121
## Reductions:
-- On EOF reduce production ext_global_specs -> ext_global_spec

State 1122:
## Known stack suffix:
## ext_global_spec ext_global_specs
## LR(1) items:
ext_global_specs -> ext_global_spec ext_global_specs . [ EOF ]
## Transitions:
## Reductions:
-- On EOF reduce production ext_global_specs -> ext_global_spec ext_global_specs

State 1123:
## Known stack suffix:
## ext_module_specs
## LR(1) items:
ext_module_specs_opt -> ext_module_specs . [ MODULE EOF ]
## Transitions:
## Reductions:
-- On MODULE reduce production ext_module_specs_opt -> ext_module_specs
-- On EOF reduce production ext_module_specs_opt -> ext_module_specs

State 1124:
## Known stack suffix:
##
## LR(1) items:
lexpr_eof' -> . lexpr_eof [ # ]
## Transitions:
-- On lexpr_eof shift to state 1125
-- On full_lexpr shift to state 1126
-- On enter_kw_c_mode shift to state 569
## Reductions:
-- On WRITES reduce production enter_kw_c_mode ->
-- On VOLATILE reduce production enter_kw_c_mode ->
-- On VOID reduce production enter_kw_c_mode ->
-- On VARIANT reduce production enter_kw_c_mode ->
-- On VALID_READ reduce production enter_kw_c_mode ->
-- On VALID_RANGE reduce production enter_kw_c_mode ->
-- On VALID_INDEX reduce production enter_kw_c_mode ->
-- On VALID reduce production enter_kw_c_mode ->
-- On UNSIGNED reduce production enter_kw_c_mode ->
-- On UNION reduce production enter_kw_c_mode ->
-- On UNALLOCATED reduce production enter_kw_c_mode ->
-- On TYPEOF reduce production enter_kw_c_mode ->
-- On TYPENAME reduce production enter_kw_c_mode ->
-- On TYPE reduce production enter_kw_c_mode ->
-- On TRUE reduce production enter_kw_c_mode ->
-- On TILDE reduce production enter_kw_c_mode ->
-- On TERMINATES reduce production enter_kw_c_mode ->
-- On STRUCT reduce production enter_kw_c_mode ->
-- On STRING_LITERAL reduce production enter_kw_c_mode ->
-- On STATIC reduce production enter_kw_c_mode ->
-- On STAR reduce production enter_kw_c_mode ->
-- On SLICE reduce production enter_kw_c_mode ->
-- On SIZEOF reduce production enter_kw_c_mode ->
-- On SIGNED reduce production enter_kw_c_mode ->
-- On SHORT reduce production enter_kw_c_mode ->
-- On SEPARATED reduce production enter_kw_c_mode ->
-- On RETURNS reduce production enter_kw_c_mode ->
-- On RESULT reduce production enter_kw_c_mode ->
-- On REQUIRES reduce production enter_kw_c_mode ->
-- On REGISTER reduce production enter_kw_c_mode ->
-- On REAL reduce production enter_kw_c_mode ->
-- On READS reduce production enter_kw_c_mode ->
-- On PREDICATE reduce production enter_kw_c_mode ->
-- On PRAGMA reduce production enter_kw_c_mode ->
-- On PLUS reduce production enter_kw_c_mode ->
-- On OLD reduce production enter_kw_c_mode ->
-- On OFFSET reduce production enter_kw_c_mode ->
-- On NULL reduce production enter_kw_c_mode ->
-- On NOT reduce production enter_kw_c_mode ->
-- On MODULE reduce production enter_kw_c_mode ->
-- On MODEL reduce production enter_kw_c_mode ->
-- On MINUS reduce production enter_kw_c_mode ->
-- On LPAR reduce production enter_kw_c_mode ->
-- On LOOP reduce production enter_kw_c_mode ->
-- On LONG reduce production enter_kw_c_mode ->
-- On LOGIC reduce production enter_kw_c_mode ->
-- On LET reduce production enter_kw_c_mode ->
-- On LEMMA reduce production enter_kw_c_mode ->
-- On LBRACE reduce production enter_kw_c_mode ->
-- On LAMBDA reduce production enter_kw_c_mode ->
-- On LABEL reduce production enter_kw_c_mode ->
-- On INVARIANT reduce production enter_kw_c_mode ->
-- On INTER reduce production enter_kw_c_mode ->
-- On INTEGER reduce production enter_kw_c_mode ->
-- On INT reduce production enter_kw_c_mode ->
-- On INITIALIZED reduce production enter_kw_c_mode ->
-- On INDUCTIVE reduce production enter_kw_c_mode ->
-- On INCLUDE reduce production enter_kw_c_mode ->
-- On IMPACT reduce production enter_kw_c_mode ->
-- On IF reduce production enter_kw_c_mode ->
-- On IDENTIFIER reduce production enter_kw_c_mode ->
-- On GLOBAL reduce production enter_kw_c_mode ->
-- On FUNCTION reduce production enter_kw_c_mode ->
-- On FRESH reduce production enter_kw_c_mode ->
-- On FREES reduce production enter_kw_c_mode ->
-- On FREEABLE reduce production enter_kw_c_mode ->
-- On FORALL reduce production enter_kw_c_mode ->
-- On FOR reduce production enter_kw_c_mode ->
-- On FLOAT reduce production enter_kw_c_mode ->
-- On FALSE reduce production enter_kw_c_mode ->
-- On EXT_LET reduce production enter_kw_c_mode ->
-- On EXT_AT reduce production enter_kw_c_mode ->
-- On EXITS reduce production enter_kw_c_mode ->
-- On EXISTS reduce production enter_kw_c_mode ->
-- On ENUM reduce production enter_kw_c_mode ->
-- On ENSURES reduce production enter_kw_c_mode ->
-- On EMPTY reduce production enter_kw_c_mode ->
-- On ELSE reduce production enter_kw_c_mode ->
-- On DYNAMIC reduce production enter_kw_c_mode ->
-- On DOUBLE reduce production enter_kw_c_mode ->
-- On DISJOINT reduce production enter_kw_c_mode ->
-- On DECREASES reduce production enter_kw_c_mode ->
-- On DANGLING reduce production enter_kw_c_mode ->
-- On CUSTOM reduce production enter_kw_c_mode ->
-- On CONTRACT reduce production enter_kw_c_mode ->
-- On CONTINUES reduce production enter_kw_c_mode ->
-- On CONSTANT10 reduce production enter_kw_c_mode ->
-- On CONSTANT reduce production enter_kw_c_mode ->
-- On CONST reduce production enter_kw_c_mode ->
-- On COMPLETE reduce production enter_kw_c_mode ->
-- On CHAR reduce production enter_kw_c_mode ->
-- On CASE reduce production enter_kw_c_mode ->
-- On BSUNION reduce production enter_kw_c_mode ->
-- On BSTYPE reduce production enter_kw_c_mode ->
-- On BREAKS reduce production enter_kw_c_mode ->
-- On BOOLEAN reduce production enter_kw_c_mode ->
-- On BOOL reduce production enter_kw_c_mode ->
-- On BLOCK_LENGTH reduce production enter_kw_c_mode ->
-- On BEHAVIORS reduce production enter_kw_c_mode ->
-- On BEHAVIOR reduce production enter_kw_c_mode ->
-- On BASE_ADDR reduce production enter_kw_c_mode ->
-- On AXIOMATIC reduce production enter_kw_c_mode ->
-- On AXIOM reduce production enter_kw_c_mode ->
-- On AUTOMATIC reduce production enter_kw_c_mode ->
-- On AT reduce production enter_kw_c_mode ->
-- On ASSUMES reduce production enter_kw_c_mode ->
-- On ASSIGNS reduce production enter_kw_c_mode ->
-- On ASSERT reduce production enter_kw_c_mode ->
-- On AMP reduce production enter_kw_c_mode ->
-- On ALLOCATION reduce production enter_kw_c_mode ->
-- On ALLOCATES reduce production enter_kw_c_mode ->
-- On ALLOCABLE reduce production enter_kw_c_mode ->

State 1125:
## Known stack suffix:
## lexpr_eof
## LR(1) items:
lexpr_eof' -> lexpr_eof . [ # ]
## Transitions:
## Reductions:
-- On # accept lexpr_eof

State 1126:
## Known stack suffix:
## full_lexpr
## LR(1) items:
lexpr_eof -> full_lexpr . EOF [ # ]
## Transitions:
-- On EOF shift to state 1127
## Reductions:

State 1127:
## Known stack suffix:
## full_lexpr EOF
## LR(1) items:
lexpr_eof -> full_lexpr EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production lexpr_eof -> full_lexpr EOF

State 1128:
## Known stack suffix:
##
## LR(1) items:
spec' -> . spec [ # ]
## Transitions:
-- On REQUIRES shift to state 754
-- On spec shift to state 1129
-- On requires shift to state 799
-- On ne_requires shift to state 758
-- On contract shift to state 1130
## Reductions:
-- On WRITES reduce production requires ->
-- On VOID reduce production requires ->
-- On UNSIGNED reduce production requires ->
-- On UNION reduce production requires ->
-- On TYPENAME reduce production requires ->
-- On TERMINATES reduce production requires ->
-- On STRUCT reduce production requires ->
-- On STATIC reduce production requires ->
-- On SIZEOF reduce production requires ->
-- On SIGNED reduce production requires ->
-- On SHORT reduce production requires ->
-- On RETURNS reduce production requires ->
-- On REAL reduce production requires ->
-- On READS reduce production requires ->
-- On LONG reduce production requires ->
-- On LABEL reduce production requires ->
-- On INTEGER reduce production requires ->
-- On INT reduce production requires ->
-- On IF reduce production requires ->
-- On IDENTIFIER reduce production requires ->
-- On FREES reduce production requires ->
-- On FLOAT reduce production requires ->
-- On EXITS reduce production requires ->
-- On EOF reduce production requires ->
-- On ENUM reduce production requires ->
-- On ENSURES reduce production requires ->
-- On ELSE reduce production requires ->
-- On DOUBLE reduce production requires ->
-- On DISJOINT reduce production requires ->
-- On DECREASES reduce production requires ->
-- On CONTINUES reduce production requires ->
-- On CONST reduce production requires ->
-- On COMPLETE reduce production requires ->
-- On CHAR reduce production requires ->
-- On CASE reduce production requires ->
-- On BREAKS reduce production requires ->
-- On BOOLEAN reduce production requires ->
-- On BOOL reduce production requires ->
-- On BEHAVIORS reduce production requires ->
-- On BEHAVIOR reduce production requires ->
-- On ASSIGNS reduce production requires ->
-- On ALLOCATES reduce production requires ->

State 1129:
## Known stack suffix:
## spec
## LR(1) items:
spec' -> spec . [ # ]
## Transitions:
## Reductions:
-- On # accept spec

State 1130:
## Known stack suffix:
## contract
## LR(1) items:
spec -> contract . EOF [ # ]
## Transitions:
-- On EOF shift to state 1131
## Reductions:

State 1131:
## Known stack suffix:
## contract EOF
## LR(1) items:
spec -> contract EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production spec -> contract EOF

