State 0:
s' -> . s [ # ]
-- On B shift to state 1
-- On A shift to state 7
-- On s shift to state 13

State 1:
s -> B . e D [ # ]
s -> B . f C [ # ]
-- On F shift to state 2
-- On f shift to state 3
-- On e shift to state 5

State 2:
e -> F . [ D ]
f -> F . [ C ]
-- On D reduce production e -> F
-- On C reduce production f -> F

State 3:
s -> B f . C [ # ]
-- On C shift to state 4

State 4:
s -> B f C . [ # ]
-- On # reduce production s -> B f C

State 5:
s -> B e . D [ # ]
-- On D shift to state 6

State 6:
s -> B e D . [ # ]
-- On # reduce production s -> B e D

State 7:
s -> A . e C [ # ]
s -> A . f D [ # ]
-- On F shift to state 8
-- On f shift to state 9
-- On e shift to state 11

State 8:
e -> F . [ C ]
f -> F . [ D ]
-- On D reduce production f -> F
-- On C reduce production e -> F

State 9:
s -> A f . D [ # ]
-- On D shift to state 10

State 10:
s -> A f D . [ # ]
-- On # reduce production s -> A f D

State 11:
s -> A e . C [ # ]
-- On C shift to state 12

State 12:
s -> A e C . [ # ]
-- On # reduce production s -> A e C

State 13:
s' -> s . [ # ]
-- On # accept s

