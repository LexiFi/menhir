File "lustre-v6.1.737-lv6parser.mly", line 22, characters 15-23:
Warning: the token TK_ERROR is unused.
File "lustre-v6.1.737-lv6parser.mly", line 72, characters 15-26:
Warning: the token TK_OPERATOR is unused.
File "lustre-v6.1.737-lv6parser.mly", line 76, characters 15-23:
Warning: the token TK_POWER is unused.
Grammar has 84 nonterminal symbols, among which 1 start symbols.
Grammar has 82 terminal symbols.
Grammar has 279 productions.
nullable(sepVariant) = false
nullable(program) = false
nullable(VarDeclList) = false
nullable(VarDecl) = false
nullable(Uses) = true
nullable(TypedValuedLv6Ids) = false
nullable(TypedValuedLv6Id) = false
nullable(TypedLv6IdsList) = false
nullable(TypedLv6Ids) = false
nullable(TypeDeclList) = false
nullable(TypeDecl) = false
nullable(Type) = false
nullable(TableLeftItem) = false
nullable(SurelyType) = false
nullable(SurelyNode) = false
nullable(Step) = true
nullable(StaticParams) = true
nullable(StaticParamList) = false
nullable(StaticParam) = false
nullable(StaticArgList) = false
nullable(StaticArg) = false
nullable(SimpleTuple) = false
nullable(SimpleExpList) = false
nullable(SimpleExp) = false
nullable(Select) = false
nullable(RealConst) = false
nullable(Provides) = true
nullable(ProvideList) = false
nullable(Provide) = false
nullable(PredefOp) = false
nullable(Pragma) = true
nullable(Params) = false
nullable(PackList) = false
nullable(PackEq) = false
nullable(PackDecl) = false
nullable(PackBody) = false
nullable(OptStruct) = true
nullable(OptSemicol) = true
nullable(OptEndNode) = true
nullable(OneTypeDecl) = false
nullable(OnePack) = false
nullable(OneLocalDecl) = false
nullable(OneDecl) = false
nullable(OneConstDecl) = false
nullable(NodeProfileOpt) = true
nullable(NodeDecl) = false
nullable(ModelDecl) = false
nullable(MergeCaseList) = false
nullable(MergeCase) = false
nullable(Lv6IdRef) = false
nullable(Lv6IdList) = false
nullable(Lv6Id) = false
nullable(LocalVars) = false
nullable(LocalNode) = false
nullable(LocalDecls) = true
nullable(LocalDeclList) = false
nullable(LocalConsts) = false
nullable(LeftItemList) = false
nullable(LeftItem) = false
nullable(Left) = false
nullable(IntConst) = false
nullable(IncludeList) = true
nullable(Include) = false
nullable(FieldLeftItem) = false
nullable(ExtNodeDecl) = false
nullable(ExpressionList) = true
nullable(Expression) = false
nullable(EquationList) = false
nullable(Equation) = false
nullable(Eq_or_Is) = false
nullable(EffectiveNode) = false
nullable(DeclList) = false
nullable(Constant) = false
nullable(ConstDefOpt) = true
nullable(ConstDeclList) = false
nullable(ConstDecl) = false
nullable(ClockExpr) = false
nullable(CallByPosExpression) = false
nullable(CallByNameParamList) = false
nullable(CallByNameParam) = false
nullable(CallByNameExpression) = false
nullable(ByNameStaticArgList) = false
nullable(ByNameStaticArg) = false
nullable(Body) = false
first(sepVariant) = TK_SEMICOL TK_COMA
first(program) = TK_UNSAFE TK_TYPE TK_PACKAGE TK_NODE TK_MODEL TK_INCLUDE TK_FUNCTION TK_EXTERN TK_CONST
first(VarDeclList) = TK_OPEN_PAR TK_IDENT
first(VarDecl) = TK_OPEN_PAR TK_IDENT
first(Uses) = TK_USES
first(TypedValuedLv6Ids) = TK_IDENT
first(TypedValuedLv6Id) = TK_IDENT
first(TypedLv6IdsList) = TK_IDENT
first(TypedLv6Ids) = TK_IDENT
first(TypeDeclList) = TK_IDENT
first(TypeDecl) = TK_TYPE
first(Type) = TK_REAL TK_LONGIDENT TK_INT TK_IDENT TK_BOOL
first(TableLeftItem) = TK_IDENT
first(SurelyType) = TK_REAL TK_INT TK_BOOL
first(SurelyNode) = TK_LONGIDENT TK_IDENT
first(Step) = TK_STEP
first(StaticParams) = TK_OPEN_STATIC_PAR
first(StaticParamList) = TK_UNSAFE TK_TYPE TK_NODE TK_FUNCTION TK_CONST
first(StaticParam) = TK_UNSAFE TK_TYPE TK_NODE TK_FUNCTION TK_CONST
first(StaticArgList) = TK_XOR TK_TYPE TK_TRUE TK_STAR TK_SLASH TK_REAL TK_RCONST TK_PRE TK_PLUS TK_OR TK_OPEN_PAR TK_NOT TK_NODE TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_LONGIDENT TK_INT TK_IMPL TK_IF TK_IDENT TK_ICONST TK_GTE TK_GT TK_FUNCTION TK_FBY TK_FALSE TK_EQ TK_DIV TK_CURRENT TK_CONST TK_BOOL TK_ARROW TK_AND
first(StaticArg) = TK_XOR TK_TYPE TK_TRUE TK_STAR TK_SLASH TK_REAL TK_RCONST TK_PRE TK_PLUS TK_OR TK_OPEN_PAR TK_NOT TK_NODE TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_LONGIDENT TK_INT TK_IMPL TK_IF TK_IDENT TK_ICONST TK_GTE TK_GT TK_FUNCTION TK_FBY TK_FALSE TK_EQ TK_DIV TK_CURRENT TK_CONST TK_BOOL TK_ARROW TK_AND
first(SimpleTuple) = TK_OPEN_PAR
first(SimpleExpList) = TK_TRUE TK_RCONST TK_OPEN_PAR TK_NOT TK_MINUS TK_LONGIDENT TK_IF TK_IDENT TK_ICONST TK_FALSE
first(SimpleExp) = TK_TRUE TK_RCONST TK_OPEN_PAR TK_NOT TK_MINUS TK_LONGIDENT TK_IF TK_IDENT TK_ICONST TK_FALSE
first(Select) = TK_WITH TK_TRUE TK_REAL TK_RCONST TK_PRE TK_OPEN_PAR TK_OPEN_BRACKET TK_NOT TK_NOR TK_MINUS TK_MERGE TK_LONGIDENT TK_INT TK_IF TK_IDENT TK_ICONST TK_FALSE TK_DIESE TK_CURRENT
first(RealConst) = TK_RCONST
first(Provides) = TK_PROVIDES
first(ProvideList) = TK_UNSAFE TK_TYPE TK_NODE TK_FUNCTION TK_CONST
first(Provide) = TK_UNSAFE TK_TYPE TK_NODE TK_FUNCTION TK_CONST
first(PredefOp) = TK_XOR TK_STAR TK_SLASH TK_PRE TK_PLUS TK_OR TK_NOT TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_IMPL TK_IF TK_GTE TK_GT TK_FBY TK_EQ TK_DIV TK_CURRENT TK_ARROW TK_AND
first(Pragma) = TK_PCENT
first(Params) = TK_OPEN_PAR
first(PackList) = TK_PACKAGE TK_MODEL
first(PackEq) = TK_PACKAGE
first(PackDecl) = TK_PACKAGE
first(PackBody) = TK_UNSAFE TK_TYPE TK_NODE TK_FUNCTION TK_EXTERN TK_CONST
first(OptStruct) = TK_STRUCT
first(OptSemicol) = TK_SEMICOL
first(OptEndNode) = TK_SEMICOL TK_DOT
first(OneTypeDecl) = TK_IDENT
first(OnePack) = TK_PACKAGE TK_MODEL
first(OneLocalDecl) = TK_VAR TK_CONST
first(OneDecl) = TK_UNSAFE TK_TYPE TK_NODE TK_FUNCTION TK_EXTERN TK_CONST
first(OneConstDecl) = TK_IDENT
first(NodeProfileOpt) = TK_OPEN_PAR
first(NodeDecl) = TK_UNSAFE TK_NODE TK_FUNCTION
first(ModelDecl) = TK_MODEL
first(MergeCaseList) = TK_OPEN_PAR
first(MergeCase) = TK_OPEN_PAR
first(Lv6IdRef) = TK_LONGIDENT TK_IDENT
first(Lv6IdList) = TK_IDENT
first(Lv6Id) = TK_IDENT
first(LocalVars) = TK_VAR
first(LocalNode) = TK_UNSAFE TK_NODE TK_FUNCTION
first(LocalDecls) = TK_VAR TK_CONST
first(LocalDeclList) = TK_VAR TK_CONST
first(LocalConsts) = TK_CONST
first(LeftItemList) = TK_IDENT
first(LeftItem) = TK_IDENT
first(Left) = TK_OPEN_PAR TK_IDENT
first(IntConst) = TK_ICONST
first(IncludeList) = TK_INCLUDE
first(Include) = TK_INCLUDE
first(FieldLeftItem) = TK_IDENT
first(ExtNodeDecl) = TK_UNSAFE TK_EXTERN
first(ExpressionList) = TK_WITH TK_TRUE TK_REAL TK_RCONST TK_PRE TK_OPEN_PAR TK_OPEN_BRACKET TK_NOT TK_NOR TK_MINUS TK_MERGE TK_LONGIDENT TK_INT TK_IF TK_IDENT TK_ICONST TK_FALSE TK_DIESE TK_CURRENT TK_COMA
first(Expression) = TK_WITH TK_TRUE TK_REAL TK_RCONST TK_PRE TK_OPEN_PAR TK_OPEN_BRACKET TK_NOT TK_NOR TK_MINUS TK_MERGE TK_LONGIDENT TK_INT TK_IF TK_IDENT TK_ICONST TK_FALSE TK_DIESE TK_CURRENT
first(EquationList) = TK_OPEN_PAR TK_IDENT TK_ASSERT
first(Equation) = TK_OPEN_PAR TK_IDENT TK_ASSERT
first(Eq_or_Is) = TK_IS TK_EQ
first(EffectiveNode) = TK_LONGIDENT TK_IDENT
first(DeclList) = TK_UNSAFE TK_TYPE TK_NODE TK_FUNCTION TK_EXTERN TK_CONST
first(Constant) = TK_TRUE TK_RCONST TK_ICONST TK_FALSE
first(ConstDefOpt) = TK_EQ
first(ConstDeclList) = TK_IDENT
first(ConstDecl) = TK_CONST
first(ClockExpr) = TK_NOT TK_LONGIDENT TK_IDENT
first(CallByPosExpression) = TK_LONGIDENT TK_IDENT
first(CallByNameParamList) = TK_IDENT
first(CallByNameParam) = TK_IDENT
first(CallByNameExpression) = TK_LONGIDENT TK_IDENT
first(ByNameStaticArgList) = TK_TYPE TK_NODE TK_IDENT TK_FUNCTION TK_CONST
first(ByNameStaticArg) = TK_TYPE TK_NODE TK_IDENT TK_FUNCTION TK_CONST
first(Body) = TK_LET
minimal(sepVariant) = (* 1 *) TK_SEMICOL
minimal(program) = (* 4 *) TK_TYPE TK_IDENT TK_SEMICOL TK_EOF
minimal(VarDeclList) = (* 3 *) TK_IDENT TK_COLON TK_BOOL
minimal(VarDecl) = (* 3 *) TK_IDENT TK_COLON TK_BOOL
minimal(Uses) = (* 0 *)
minimal(TypedValuedLv6Ids) = (* 3 *) TK_IDENT TK_COLON TK_BOOL
minimal(TypedValuedLv6Id) = (* 3 *) TK_IDENT TK_COLON TK_BOOL
minimal(TypedLv6IdsList) = (* 3 *) TK_IDENT TK_COLON TK_BOOL
minimal(TypedLv6Ids) = (* 3 *) TK_IDENT TK_COLON TK_BOOL
minimal(TypeDeclList) = (* 2 *) TK_IDENT TK_SEMICOL
minimal(TypeDecl) = (* 3 *) TK_TYPE TK_IDENT TK_SEMICOL
minimal(Type) = (* 1 *) TK_BOOL
minimal(TableLeftItem) = (* 4 *) TK_IDENT TK_OPEN_BRACKET TK_TRUE TK_CLOSE_BRACKET
minimal(SurelyType) = (* 1 *) TK_BOOL
minimal(SurelyNode) = (* 4 *) TK_IDENT TK_OPEN_STATIC_PAR TK_NOT TK_CLOSE_STATIC_PAR
minimal(Step) = (* 0 *)
minimal(StaticParams) = (* 0 *)
minimal(StaticParamList) = (* 2 *) TK_TYPE TK_IDENT
minimal(StaticParam) = (* 2 *) TK_TYPE TK_IDENT
minimal(StaticArgList) = (* 1 *) TK_NOT
minimal(StaticArg) = (* 1 *) TK_NOT
minimal(SimpleTuple) = (* 3 *) TK_OPEN_PAR TK_TRUE TK_CLOSE_PAR
minimal(SimpleExpList) = (* 1 *) TK_TRUE
minimal(SimpleExp) = (* 1 *) TK_TRUE
minimal(Select) = (* 3 *) TK_TRUE TK_CDOTS TK_TRUE
minimal(RealConst) = (* 1 *) TK_RCONST
minimal(Provides) = (* 0 *)
minimal(ProvideList) = (* 3 *) TK_TYPE TK_IDENT TK_SEMICOL
minimal(Provide) = (* 2 *) TK_TYPE TK_IDENT
minimal(PredefOp) = (* 1 *) TK_NOT
minimal(Pragma) = (* 0 *)
minimal(Params) = (* 2 *) TK_OPEN_PAR TK_CLOSE_PAR
minimal(PackList) = (* 7 *) TK_PACKAGE TK_IDENT TK_BODY TK_TYPE TK_IDENT TK_SEMICOL TK_END
minimal(PackEq) = (* 10 *) TK_PACKAGE TK_IDENT TK_EQ TK_IDENT TK_OPEN_PAR TK_IDENT TK_EQ TK_NOT TK_CLOSE_PAR TK_SEMICOL
minimal(PackDecl) = (* 7 *) TK_PACKAGE TK_IDENT TK_BODY TK_TYPE TK_IDENT TK_SEMICOL TK_END
minimal(PackBody) = (* 3 *) TK_TYPE TK_IDENT TK_SEMICOL
minimal(OptStruct) = (* 0 *)
minimal(OptSemicol) = (* 0 *)
minimal(OptEndNode) = (* 0 *)
minimal(OneTypeDecl) = (* 1 *) TK_IDENT
minimal(OnePack) = (* 7 *) TK_PACKAGE TK_IDENT TK_BODY TK_TYPE TK_IDENT TK_SEMICOL TK_END
minimal(OneLocalDecl) = (* 5 *) TK_VAR TK_IDENT TK_COLON TK_BOOL TK_SEMICOL
minimal(OneDecl) = (* 3 *) TK_TYPE TK_IDENT TK_SEMICOL
minimal(OneConstDecl) = (* 3 *) TK_IDENT TK_COLON TK_BOOL
minimal(NodeProfileOpt) = (* 0 *)
minimal(NodeDecl) = (* 4 *) TK_NODE TK_IDENT TK_EQ TK_IDENT
minimal(ModelDecl) = (* 11 *) TK_MODEL TK_IDENT TK_NEEDS TK_TYPE TK_IDENT TK_SEMICOL TK_BODY TK_TYPE TK_IDENT TK_SEMICOL TK_END
minimal(MergeCaseList) = (* 5 *) TK_OPEN_PAR TK_IDENT TK_ARROW TK_TRUE TK_CLOSE_PAR
minimal(MergeCase) = (* 5 *) TK_OPEN_PAR TK_IDENT TK_ARROW TK_TRUE TK_CLOSE_PAR
minimal(Lv6IdRef) = (* 1 *) TK_IDENT
minimal(Lv6IdList) = (* 1 *) TK_IDENT
minimal(Lv6Id) = (* 1 *) TK_IDENT
minimal(LocalVars) = (* 5 *) TK_VAR TK_IDENT TK_COLON TK_BOOL TK_SEMICOL
minimal(LocalNode) = (* 4 *) TK_NODE TK_IDENT TK_EQ TK_IDENT
minimal(LocalDecls) = (* 0 *)
minimal(LocalDeclList) = (* 5 *) TK_VAR TK_IDENT TK_COLON TK_BOOL TK_SEMICOL
minimal(LocalConsts) = (* 5 *) TK_CONST TK_IDENT TK_COLON TK_BOOL TK_SEMICOL
minimal(LeftItemList) = (* 1 *) TK_IDENT
minimal(LeftItem) = (* 1 *) TK_IDENT
minimal(Left) = (* 1 *) TK_IDENT
minimal(IntConst) = (* 1 *) TK_ICONST
minimal(IncludeList) = (* 0 *)
minimal(Include) = (* 2 *) TK_INCLUDE TK_STRING
minimal(FieldLeftItem) = (* 3 *) TK_IDENT TK_DOT TK_IDENT
minimal(ExtNodeDecl) = (* 8 *) TK_EXTERN TK_FUNCTION TK_IDENT TK_OPEN_PAR TK_CLOSE_PAR TK_RETURNS TK_OPEN_PAR TK_CLOSE_PAR
minimal(ExpressionList) = (* 0 *)
minimal(Expression) = (* 1 *) TK_TRUE
minimal(EquationList) = (* 3 *) TK_ASSERT TK_TRUE TK_SEMICOL
minimal(Equation) = (* 3 *) TK_ASSERT TK_TRUE TK_SEMICOL
minimal(Eq_or_Is) = (* 1 *) TK_EQ
minimal(EffectiveNode) = (* 1 *) TK_IDENT
minimal(DeclList) = (* 3 *) TK_TYPE TK_IDENT TK_SEMICOL
minimal(Constant) = (* 1 *) TK_TRUE
minimal(ConstDefOpt) = (* 0 *)
minimal(ConstDeclList) = (* 4 *) TK_IDENT TK_COLON TK_BOOL TK_SEMICOL
minimal(ConstDecl) = (* 5 *) TK_CONST TK_IDENT TK_COLON TK_BOOL TK_SEMICOL
minimal(ClockExpr) = (* 1 *) TK_IDENT
minimal(CallByPosExpression) = (* 3 *) TK_IDENT TK_OPEN_PAR TK_CLOSE_PAR
minimal(CallByNameParamList) = (* 3 *) TK_IDENT TK_EQ TK_TRUE
minimal(CallByNameParam) = (* 3 *) TK_IDENT TK_EQ TK_TRUE
minimal(CallByNameExpression) = (* 3 *) TK_IDENT TK_OPEN_BRACE TK_CLOSE_BRACE
minimal(ByNameStaticArgList) = (* 3 *) TK_IDENT TK_EQ TK_NOT
minimal(ByNameStaticArg) = (* 3 *) TK_IDENT TK_EQ TK_NOT
minimal(Body) = (* 2 *) TK_LET TK_TEL
follow(sepVariant) = TK_IDENT
follow(program) = #
follow(VarDeclList) = TK_SEMICOL TK_CLOSE_PAR
follow(VarDecl) = TK_SEMICOL TK_CLOSE_PAR
follow(Uses) = TK_PROVIDES TK_NEEDS TK_BODY
follow(TypedValuedLv6Ids) = TK_SEMICOL TK_CLOSE_BRACE
follow(TypedValuedLv6Id) = TK_SEMICOL TK_CLOSE_BRACE
follow(TypedLv6IdsList) = TK_SEMICOL TK_CLOSE_PAR
follow(TypedLv6Ids) = TK_WHEN TK_SEMICOL TK_CLOSE_PAR
follow(TypeDeclList) = TK_UNSAFE TK_TYPE TK_NODE TK_IDENT TK_FUNCTION TK_EXTERN TK_EOF TK_END TK_CONST
follow(TypeDecl) = TK_UNSAFE TK_TYPE TK_NODE TK_FUNCTION TK_EXTERN TK_EOF TK_END TK_CONST
follow(Type) = TK_WHEN TK_SEMICOL TK_HAT TK_EQ TK_COMA TK_CLOSE_STATIC_PAR TK_CLOSE_PAR TK_CLOSE_BRACE
follow(TableLeftItem) = TK_OPEN_BRACKET TK_EQ TK_DOT TK_COMA TK_CLOSE_PAR
follow(SurelyType) = TK_SEMICOL TK_HAT TK_COMA TK_CLOSE_STATIC_PAR TK_CLOSE_PAR
follow(SurelyNode) = TK_SEMICOL TK_COMA TK_CLOSE_STATIC_PAR TK_CLOSE_PAR
follow(Step) = TK_CLOSE_BRACKET
follow(StaticParams) = TK_OPEN_PAR TK_EQ
follow(StaticParamList) = TK_SEMICOL TK_CLOSE_STATIC_PAR
follow(StaticParam) = TK_SEMICOL TK_CLOSE_STATIC_PAR
follow(StaticArgList) = TK_SEMICOL TK_COMA TK_CLOSE_STATIC_PAR
follow(StaticArg) = TK_SEMICOL TK_COMA TK_CLOSE_STATIC_PAR
follow(SimpleTuple) = TK_XOR TK_THEN TK_STAR TK_SLASH TK_SEMICOL TK_PLUS TK_OR TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_IMPL TK_GTE TK_GT TK_EQ TK_ELSE TK_DIV TK_COMA TK_CLOSE_STATIC_PAR TK_CLOSE_PAR TK_AND
follow(SimpleExpList) = TK_COMA TK_CLOSE_PAR
follow(SimpleExp) = TK_XOR TK_THEN TK_STAR TK_SLASH TK_SEMICOL TK_PLUS TK_OR TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_IMPL TK_GTE TK_GT TK_EQ TK_ELSE TK_DIV TK_COMA TK_CLOSE_STATIC_PAR TK_CLOSE_PAR TK_AND
follow(Select) = TK_CLOSE_BRACKET
follow(RealConst) = TK_XOR TK_WHEN TK_THEN TK_STEP TK_STAR TK_SLASH TK_SEMICOL TK_PLUS TK_OR TK_OPEN_BRACKET TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_IMPL TK_HAT TK_GTE TK_GT TK_FBY TK_EQ TK_ELSE TK_DOT TK_DIV TK_COMA TK_CLOSE_STATIC_PAR TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CDOTS TK_BAR TK_ARROW TK_AND
follow(Provides) = TK_BODY
follow(ProvideList) = TK_UNSAFE TK_TYPE TK_NODE TK_FUNCTION TK_CONST TK_BODY
follow(Provide) = TK_SEMICOL
follow(PredefOp) = TK_SEMICOL TK_COMA TK_CLOSE_STATIC_PAR TK_CLOSE_PAR
follow(Pragma) = TK_XOR TK_WHEN TK_USES TK_THEN TK_STEP TK_STAR TK_SLASH TK_SEMICOL TK_PROVIDES TK_PLUS TK_OR TK_OPEN_STATIC_PAR TK_OPEN_PAR TK_OPEN_BRACKET TK_NEQ TK_NEEDS TK_MOD TK_MINUS TK_LTE TK_LT TK_IS TK_IMPL TK_HAT TK_GTE TK_GT TK_FBY TK_EQ TK_ELSE TK_DOT TK_DIV TK_COMA TK_COLON TK_CLOSE_STATIC_PAR TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CDOTS TK_BODY TK_BAR TK_ARROW TK_AND
follow(Params) = TK_VAR TK_UNSAFE TK_TYPE TK_SEMICOL TK_RETURNS TK_NODE TK_LET TK_FUNCTION TK_EXTERN TK_EQ TK_EOF TK_END TK_CONST TK_CLOSE_STATIC_PAR
follow(PackList) = TK_PACKAGE TK_MODEL TK_EOF
follow(PackEq) = TK_PACKAGE TK_MODEL TK_EOF
follow(PackDecl) = TK_PACKAGE TK_MODEL TK_EOF
follow(PackBody) = TK_EOF TK_END
follow(OptStruct) = TK_OPEN_BRACE
follow(OptSemicol) = TK_VAR TK_UNSAFE TK_TYPE TK_NODE TK_LET TK_FUNCTION TK_EXTERN TK_EOF TK_END TK_CONST TK_CLOSE_PAR TK_CLOSE_BRACE
follow(OptEndNode) = TK_UNSAFE TK_TYPE TK_NODE TK_FUNCTION TK_EXTERN TK_EOF TK_END TK_CONST
follow(OneTypeDecl) = TK_SEMICOL
follow(OnePack) = TK_PACKAGE TK_MODEL TK_EOF
follow(OneLocalDecl) = TK_VAR TK_LET TK_CONST
follow(OneDecl) = TK_UNSAFE TK_TYPE TK_NODE TK_FUNCTION TK_EXTERN TK_EOF TK_END TK_CONST
follow(OneConstDecl) = TK_SEMICOL
follow(NodeProfileOpt) = TK_EQ
follow(NodeDecl) = TK_UNSAFE TK_TYPE TK_NODE TK_FUNCTION TK_EXTERN TK_EOF TK_END TK_CONST
follow(ModelDecl) = TK_PACKAGE TK_MODEL TK_EOF
follow(MergeCaseList) = TK_XOR TK_WHEN TK_THEN TK_STEP TK_STAR TK_SLASH TK_SEMICOL TK_PLUS TK_OR TK_OPEN_PAR TK_OPEN_BRACKET TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_IMPL TK_HAT TK_GTE TK_GT TK_FBY TK_EQ TK_ELSE TK_DOT TK_DIV TK_COMA TK_CLOSE_STATIC_PAR TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CDOTS TK_BAR TK_ARROW TK_AND
follow(MergeCase) = TK_XOR TK_WHEN TK_THEN TK_STEP TK_STAR TK_SLASH TK_SEMICOL TK_PLUS TK_OR TK_OPEN_PAR TK_OPEN_BRACKET TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_IMPL TK_HAT TK_GTE TK_GT TK_FBY TK_EQ TK_ELSE TK_DOT TK_DIV TK_COMA TK_CLOSE_STATIC_PAR TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CDOTS TK_BAR TK_ARROW TK_AND
follow(Lv6IdRef) = TK_XOR TK_WITH TK_WHEN TK_UNSAFE TK_TYPE TK_THEN TK_STEP TK_STAR TK_SLASH TK_SEMICOL TK_PLUS TK_OR TK_OPEN_STATIC_PAR TK_OPEN_PAR TK_OPEN_BRACKET TK_OPEN_BRACE TK_NODE TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_IMPL TK_HAT TK_GTE TK_GT TK_FUNCTION TK_FBY TK_EXTERN TK_EQ TK_EOF TK_END TK_ELSE TK_DOT TK_DIV TK_CONST TK_COMA TK_CLOSE_STATIC_PAR TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CDOTS TK_BAR TK_ARROW TK_AND
follow(Lv6IdList) = TK_SEMICOL TK_COMA TK_COLON TK_CLOSE_BRACE
follow(Lv6Id) = TK_XOR TK_WHEN TK_USES TK_THEN TK_STEP TK_STAR TK_SLASH TK_SEMICOL TK_PROVIDES TK_PLUS TK_OR TK_OPEN_STATIC_PAR TK_OPEN_PAR TK_OPEN_BRACKET TK_NEQ TK_NEEDS TK_MOD TK_MINUS TK_LTE TK_LT TK_IS TK_IMPL TK_HAT TK_GTE TK_GT TK_FBY TK_EQ TK_ELSE TK_DOT TK_DIV TK_COMA TK_COLON TK_CLOSE_STATIC_PAR TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CDOTS TK_BODY TK_BAR TK_ARROW TK_AND
follow(LocalVars) = TK_VAR TK_LET TK_CONST
follow(LocalNode) = TK_UNSAFE TK_TYPE TK_NODE TK_FUNCTION TK_EXTERN TK_EOF TK_END TK_CONST
follow(LocalDecls) = TK_LET
follow(LocalDeclList) = TK_VAR TK_LET TK_CONST
follow(LocalConsts) = TK_VAR TK_LET TK_CONST
follow(LeftItemList) = TK_EQ TK_COMA TK_CLOSE_PAR
follow(LeftItem) = TK_OPEN_BRACKET TK_EQ TK_DOT TK_COMA TK_CLOSE_PAR
follow(Left) = TK_EQ
follow(IntConst) = TK_XOR TK_WHEN TK_THEN TK_STEP TK_STAR TK_SLASH TK_SEMICOL TK_PLUS TK_OR TK_OPEN_BRACKET TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_IMPL TK_HAT TK_GTE TK_GT TK_FBY TK_EQ TK_ELSE TK_DOT TK_DIV TK_COMA TK_CLOSE_STATIC_PAR TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CDOTS TK_BAR TK_ARROW TK_AND
follow(IncludeList) = TK_UNSAFE TK_TYPE TK_PACKAGE TK_NODE TK_MODEL TK_INCLUDE TK_FUNCTION TK_EXTERN TK_CONST
follow(Include) = TK_UNSAFE TK_TYPE TK_PACKAGE TK_NODE TK_MODEL TK_INCLUDE TK_FUNCTION TK_EXTERN TK_CONST
follow(FieldLeftItem) = TK_OPEN_BRACKET TK_EQ TK_DOT TK_COMA TK_CLOSE_PAR
follow(ExtNodeDecl) = TK_UNSAFE TK_TYPE TK_NODE TK_FUNCTION TK_EXTERN TK_EOF TK_END TK_CONST
follow(ExpressionList) = TK_COMA TK_CLOSE_PAR TK_CLOSE_BRACKET
follow(Expression) = TK_XOR TK_WHEN TK_THEN TK_STEP TK_STAR TK_SLASH TK_SEMICOL TK_PLUS TK_OR TK_OPEN_BRACKET TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_IMPL TK_HAT TK_GTE TK_GT TK_FBY TK_EQ TK_ELSE TK_DOT TK_DIV TK_COMA TK_CLOSE_STATIC_PAR TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CDOTS TK_BAR TK_ARROW TK_AND
follow(EquationList) = TK_TEL TK_OPEN_PAR TK_IDENT TK_ASSERT
follow(Equation) = TK_TEL TK_OPEN_PAR TK_IDENT TK_ASSERT
follow(Eq_or_Is) = TK_IDENT
follow(EffectiveNode) = TK_UNSAFE TK_TYPE TK_SEMICOL TK_OPEN_PAR TK_NODE TK_FUNCTION TK_EXTERN TK_EOF TK_END TK_CONST TK_COMA TK_CLOSE_STATIC_PAR TK_CLOSE_PAR
follow(DeclList) = TK_UNSAFE TK_TYPE TK_NODE TK_FUNCTION TK_EXTERN TK_EOF TK_END TK_CONST
follow(Constant) = TK_XOR TK_WHEN TK_THEN TK_STEP TK_STAR TK_SLASH TK_SEMICOL TK_PLUS TK_OR TK_OPEN_BRACKET TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_IMPL TK_HAT TK_GTE TK_GT TK_FBY TK_EQ TK_ELSE TK_DOT TK_DIV TK_COMA TK_CLOSE_STATIC_PAR TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CDOTS TK_BAR TK_ARROW TK_AND
follow(ConstDefOpt) = TK_SEMICOL
follow(ConstDeclList) = TK_VAR TK_UNSAFE TK_TYPE TK_NODE TK_LET TK_IDENT TK_FUNCTION TK_EXTERN TK_EOF TK_END TK_CONST
follow(ConstDecl) = TK_UNSAFE TK_TYPE TK_NODE TK_FUNCTION TK_EXTERN TK_EOF TK_END TK_CONST
follow(ClockExpr) = TK_XOR TK_WHEN TK_THEN TK_STEP TK_STAR TK_SLASH TK_SEMICOL TK_PLUS TK_OR TK_OPEN_BRACKET TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_IMPL TK_HAT TK_GTE TK_GT TK_FBY TK_EQ TK_ELSE TK_DOT TK_DIV TK_COMA TK_CLOSE_STATIC_PAR TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CDOTS TK_BAR TK_ARROW TK_AND
follow(CallByPosExpression) = TK_XOR TK_WHEN TK_THEN TK_STEP TK_STAR TK_SLASH TK_SEMICOL TK_PLUS TK_OR TK_OPEN_BRACKET TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_IMPL TK_HAT TK_GTE TK_GT TK_FBY TK_EQ TK_ELSE TK_DOT TK_DIV TK_COMA TK_CLOSE_STATIC_PAR TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CDOTS TK_BAR TK_ARROW TK_AND
follow(CallByNameParamList) = TK_SEMICOL TK_COMA TK_CLOSE_BRACE
follow(CallByNameParam) = TK_SEMICOL TK_COMA TK_CLOSE_BRACE
follow(CallByNameExpression) = TK_XOR TK_WHEN TK_THEN TK_STEP TK_STAR TK_SLASH TK_SEMICOL TK_PLUS TK_OR TK_OPEN_BRACKET TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_IMPL TK_HAT TK_GTE TK_GT TK_FBY TK_EQ TK_ELSE TK_DOT TK_DIV TK_COMA TK_CLOSE_STATIC_PAR TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CDOTS TK_BAR TK_ARROW TK_AND
follow(ByNameStaticArgList) = TK_SEMICOL TK_COMA TK_CLOSE_PAR
follow(ByNameStaticArg) = TK_SEMICOL TK_COMA TK_CLOSE_PAR
follow(Body) = TK_UNSAFE TK_TYPE TK_SEMICOL TK_NODE TK_FUNCTION TK_EXTERN TK_EOF TK_END TK_DOT TK_CONST
Built an LR(0) automaton with 625 states.
The grammar is not SLR(1) -- 51 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 625 states.
952 shift/reduce conflicts were silently solved.
File "lustre-v6.1.737-lv6parser.mly", line 113, characters 0-9:
Warning: the precedence level assigned to TK_CDOTS is never useful.
File "lustre-v6.1.737-lv6parser.mly", line 127, characters 0-6:
Warning: the precedence level assigned to TK_COMA is never useful.
File "lustre-v6.1.737-lv6parser.mly", line 124, characters 0-9:
Warning: the precedence level assigned to TK_DIESE is never useful.
File "lustre-v6.1.737-lv6parser.mly", line 124, characters 0-9:
Warning: the precedence level assigned to TK_NOR is never useful.
File "lustre-v6.1.737-lv6parser.mly", line 126, characters 0-6:
Warning: the precedence level assigned to TK_OPEN_BRACE is never useful.
File "lustre-v6.1.737-lv6parser.mly", line 120, characters 0-5:
Warning: the precedence level assigned to TK_PCENT is never useful.
File "lustre-v6.1.737-lv6parser.mly", line 121, characters 0-5:
Warning: the precedence level assigned to TK_POWER is never useful.
File "lustre-v6.1.737-lv6parser.mly", line 126, characters 0-6:
Warning: the precedence level assigned to TK_SEMICOL is never useful.
File "lustre-v6.1.737-lv6parser.mly", line 112, characters 0-9:
Warning: the precedence level assigned to TK_STEP is never useful.
180 out of 625 states have a default reduction.
260 out of 625 states are represented.
0 out of 169 symbols keep track of their start position.
0 out of 169 symbols keep track of their end position.
138 out of 280 productions exploit shiftreduce optimization.
0 out of 625 states can peek at an error.
1620 functions before inlining, 227 functions after inlining.
