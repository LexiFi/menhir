File "lutin.2.56-lutParser.mly", line 210, characters 18-26:
Warning: the token TK_ARROW is unused.
File "lutin.2.56-lutParser.mly", line 238, characters 27-35:
Warning: the token TK_DIESE is unused.
File "lutin.2.56-lutParser.mly", line 192, characters 18-24:
Warning: the token TK_DOT is unused.
File "lutin.2.56-lutParser.mly", line 129, characters 18-26:
Warning: the token TK_ERROR is unused.
File "lutin.2.56-lutParser.mly", line 239, characters 13-21:
Warning: the token TK_FIELD is unused.
File "lutin.2.56-lutParser.mly", line 239, characters 6-12:
Warning: the token TK_HAT is unused.
File "lutin.2.56-lutParser.mly", line 238, characters 36-42:
Warning: the token TK_NOR is unused.
File "lutin.2.56-lutParser.mly", line 235, characters 24-32:
Warning: the token TK_PCENT is unused.
File "lutin.2.56-lutParser.mly", line 156, characters 18-25:
Warning: the token TK_TYPE is unused.
Grammar has 48 nonterminal symbols, among which 1 start symbols.
Grammar has 72 terminal symbols.
Grammar has 134 productions.
nullable(lutUnExp) = false
nullable(lutTypedParamList) = false
nullable(lutTypedParam) = false
nullable(lutTypedIdentListOpt) = true
nullable(lutTypedIdentListA) = false
nullable(lutTypedIdentList) = false
nullable(lutTypedIdent) = false
nullable(lutType) = false
nullable(lutTraceExp) = false
nullable(lutRangeOpt) = true
nullable(lutPrio) = false
nullable(lutPredefType) = false
nullable(lutParamType) = false
nullable(lutPara) = false
nullable(lutOptType) = true
nullable(lutOptParams) = true
nullable(lutOptInit) = true
nullable(lutOneDecl) = false
nullable(lutNodeStart) = false
nullable(lutNodeDecl) = false
nullable(lutLoopStatExp) = false
nullable(lutLoopExp) = false
nullable(lutLetDecl) = false
nullable(lutInteger) = false
nullable(lutInclude) = false
nullable(lutIdentTuple) = false
nullable(lutIdentRef) = false
nullable(lutIdentList) = false
nullable(lutIdent) = false
nullable(lutGaussian) = false
nullable(lutFloating) = false
nullable(lutFileTop) = false
nullable(lutFile) = true
nullable(lutExternNodeDecl) = false
nullable(lutExp) = false
nullable(lutExceptDecl) = false
nullable(lutERunVars) = false
nullable(lutERunVarList) = false
nullable(lutERunVar) = false
nullable(lutDoPart) = true
nullable(lutConst) = false
nullable(lutChoice) = false
nullable(lutBraceExp) = false
nullable(lutBinExp) = false
nullable(lutAverage) = false
nullable(lutAssertFlag) = true
nullable(lutArgList) = false
nullable(lutArg) = false
first(lutUnExp) = TK_NOT TK_MINUS
first(lutTypedParamList) = TK_IDENT
first(lutTypedParam) = TK_IDENT
first(lutTypedIdentListOpt) = TK_IDENT
first(lutTypedIdentListA) = TK_IDENT
first(lutTypedIdentList) = TK_IDENT
first(lutTypedIdent) = TK_IDENT
first(lutType) = TK_TRACE TK_REAL TK_INT TK_BOOL
first(lutTraceExp) = TK_WEAK TK_TRY TK_TRUE TK_TRAP TK_STRONG TK_RUN TK_RCONST TK_RAISE TK_PRE TK_OPEN_PAR TK_OPEN_BRACE TK_NOT TK_MINUS TK_LOOP TK_LET TK_IF TK_IDENT TK_ICONST TK_FALSE TK_EXIST TK_EXCEPTION TK_ERUN TK_CATCH TK_ASSERT
first(lutRangeOpt) = TK_OPEN_BRACKET
first(lutPrio) = TK_BARSUP
first(lutPredefType) = TK_REAL TK_INT TK_BOOL
first(lutParamType) = TK_TRACE TK_REAL TK_INT TK_BOOL
first(lutPara) = TK_PARA
first(lutOptType) = TK_COLON
first(lutOptParams) = TK_OPEN_PAR
first(lutOptInit) = TK_EQ
first(lutOneDecl) = TK_SYSTEM TK_NODE TK_LET TK_INCLUDE TK_EXTERN TK_EXCEPTION
first(lutNodeStart) = TK_SYSTEM TK_NODE
first(lutNodeDecl) = TK_SYSTEM TK_NODE
first(lutLoopStatExp) = TK_LOOP
first(lutLoopExp) = TK_WEAK TK_STRONG TK_LOOP
first(lutLetDecl) = TK_LET
first(lutInteger) = TK_ICONST
first(lutInclude) = TK_INCLUDE
first(lutIdentTuple) = TK_OPEN_PAR TK_IDENT
first(lutIdentRef) = TK_IDENT
first(lutIdentList) = TK_IDENT
first(lutIdent) = TK_IDENT
first(lutGaussian) = TK_TILDA
first(lutFloating) = TK_RCONST
first(lutFileTop) = TK_SYSTEM TK_NODE TK_LET TK_INCLUDE TK_EXTERN TK_EXCEPTION TK_EOF
first(lutFile) = TK_SYSTEM TK_NODE TK_LET TK_INCLUDE TK_EXTERN TK_EXCEPTION
first(lutExternNodeDecl) = TK_EXTERN
first(lutExp) = TK_TRUE TK_RCONST TK_PRE TK_OPEN_PAR TK_NOT TK_MINUS TK_IF TK_IDENT TK_ICONST TK_FALSE
first(lutExceptDecl) = TK_EXCEPTION
first(lutERunVars) = TK_OPEN_PAR TK_IDENT
first(lutERunVarList) = TK_IDENT
first(lutERunVar) = TK_IDENT
first(lutDoPart) = TK_DO
first(lutConst) = TK_TRUE TK_RCONST TK_ICONST TK_FALSE
first(lutChoice) = TK_BAR
first(lutBraceExp) = TK_OPEN_BRACE
first(lutBinExp) = TK_TRUE TK_RCONST TK_PRE TK_OPEN_PAR TK_NOT TK_MINUS TK_IF TK_IDENT TK_ICONST TK_FALSE
first(lutAverage) = TK_OPEN_BRACKET
first(lutAssertFlag) = TK_WEAK TK_STRONG
first(lutArgList) = TK_WEAK TK_TRY TK_TRUE TK_TRAP TK_STRONG TK_RUN TK_RCONST TK_RAISE TK_PRE TK_OPEN_PAR TK_OPEN_BRACE TK_NOT TK_MINUS TK_LOOP TK_LET TK_IF TK_IDENT TK_ICONST TK_FALSE TK_EXIST TK_EXCEPTION TK_ERUN TK_CATCH TK_ASSERT
first(lutArg) = TK_WEAK TK_TRY TK_TRUE TK_TRAP TK_STRONG TK_RUN TK_RCONST TK_RAISE TK_PRE TK_OPEN_PAR TK_OPEN_BRACE TK_NOT TK_MINUS TK_LOOP TK_LET TK_IF TK_IDENT TK_ICONST TK_FALSE TK_EXIST TK_EXCEPTION TK_ERUN TK_CATCH TK_ASSERT
minimal(lutUnExp) = (* 2 *) TK_MINUS TK_TRUE
minimal(lutTypedParamList) = (* 3 *) TK_IDENT TK_COLON TK_BOOL
minimal(lutTypedParam) = (* 3 *) TK_IDENT TK_COLON TK_BOOL
minimal(lutTypedIdentListOpt) = (* 0 *)
minimal(lutTypedIdentListA) = (* 3 *) TK_IDENT TK_COLON TK_BOOL
minimal(lutTypedIdentList) = (* 3 *) TK_IDENT TK_COLON TK_BOOL
minimal(lutTypedIdent) = (* 3 *) TK_IDENT TK_COLON TK_BOOL
minimal(lutType) = (* 1 *) TK_BOOL
minimal(lutTraceExp) = (* 1 *) TK_TRUE
minimal(lutRangeOpt) = (* 0 *)
minimal(lutPrio) = (* 2 *) TK_BARSUP TK_TRUE
minimal(lutPredefType) = (* 1 *) TK_BOOL
minimal(lutParamType) = (* 1 *) TK_BOOL
minimal(lutPara) = (* 2 *) TK_PARA TK_TRUE
minimal(lutOptType) = (* 0 *)
minimal(lutOptParams) = (* 0 *)
minimal(lutOptInit) = (* 0 *)
minimal(lutOneDecl) = (* 2 *) TK_INCLUDE TK_STRING
minimal(lutNodeStart) = (* 1 *) TK_NODE
minimal(lutNodeDecl) = (* 12 *) TK_NODE TK_IDENT TK_OPEN_PAR TK_CLOSE_PAR TK_RETURNS TK_OPEN_PAR TK_IDENT TK_COLON TK_BOOL TK_CLOSE_PAR TK_EQ TK_TRUE
minimal(lutLoopStatExp) = (* 4 *) TK_LOOP TK_TILDA TK_TRUE TK_TRUE
minimal(lutLoopExp) = (* 2 *) TK_LOOP TK_TRUE
minimal(lutLetDecl) = (* 4 *) TK_LET TK_IDENT TK_EQ TK_TRUE
minimal(lutInteger) = (* 1 *) TK_ICONST
minimal(lutInclude) = (* 2 *) TK_INCLUDE TK_STRING
minimal(lutIdentTuple) = (* 1 *) TK_IDENT
minimal(lutIdentRef) = (* 1 *) TK_IDENT
minimal(lutIdentList) = (* 1 *) TK_IDENT
minimal(lutIdent) = (* 1 *) TK_IDENT
minimal(lutGaussian) = (* 2 *) TK_TILDA TK_TRUE
minimal(lutFloating) = (* 1 *) TK_RCONST
minimal(lutFileTop) = (* 1 *) TK_EOF
minimal(lutFile) = (* 0 *)
minimal(lutExternNodeDecl) = (* 2 *) TK_EXTERN TK_IDENT
minimal(lutExp) = (* 1 *) TK_TRUE
minimal(lutExceptDecl) = (* 2 *) TK_EXCEPTION TK_IDENT
minimal(lutERunVars) = (* 1 *) TK_IDENT
minimal(lutERunVarList) = (* 1 *) TK_IDENT
minimal(lutERunVar) = (* 1 *) TK_IDENT
minimal(lutDoPart) = (* 0 *)
minimal(lutConst) = (* 1 *) TK_TRUE
minimal(lutChoice) = (* 2 *) TK_BAR TK_TRUE
minimal(lutBraceExp) = (* 3 *) TK_OPEN_BRACE TK_TRUE TK_CLOSE_BRACE
minimal(lutBinExp) = (* 3 *) TK_TRUE TK_EQ TK_TRUE
minimal(lutAverage) = (* 3 *) TK_OPEN_BRACKET TK_TRUE TK_CLOSE_BRACKET
minimal(lutAssertFlag) = (* 0 *)
minimal(lutArgList) = (* 1 *) TK_TRUE
minimal(lutArg) = (* 1 *) TK_TRUE
follow(lutUnExp) = TK_XOR TK_WEAK TK_TRY TK_TRUE TK_TRAP TK_TIMES TK_THEN TK_SYSTEM TK_STRONG TK_SLASH TK_SEMICOL TK_RUN TK_RCONST TK_RAISE TK_PRE TK_PLUS TK_PARA TK_OR TK_OPEN_PAR TK_OPEN_BRACE TK_NOT TK_NODE TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_LOOP TK_LET TK_INCLUDE TK_IN TK_IMPL TK_IF TK_IDENT TK_ICONST TK_GTE TK_GT TK_FBY TK_FALSE TK_EXTERN TK_EXIST TK_EXCEPTION TK_ERUN TK_EQ TK_EOF TK_ELSE TK_DO TK_DIV TK_COMA TK_COLON TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CATCH TK_BARSUP TK_BAR TK_ASSIGN TK_ASSERT TK_AND
follow(lutTypedParamList) = TK_SEMICOL TK_CLOSE_PAR
follow(lutTypedParam) = TK_SEMICOL TK_CLOSE_PAR
follow(lutTypedIdentListOpt) = TK_CLOSE_PAR
follow(lutTypedIdentListA) = TK_SEMICOL TK_IN TK_CLOSE_PAR
follow(lutTypedIdentList) = TK_IN TK_CLOSE_PAR
follow(lutTypedIdent) = TK_SEMICOL TK_IN TK_CLOSE_PAR
follow(lutType) = TK_SYSTEM TK_SEMICOL TK_OPEN_BRACKET TK_NODE TK_LET TK_INCLUDE TK_IN TK_EXTERN TK_EXCEPTION TK_EQ TK_EOF TK_COMA TK_CLOSE_PAR TK_ASSIGN
follow(lutTraceExp) = TK_SYSTEM TK_PARA TK_NODE TK_LET TK_INCLUDE TK_IN TK_FBY TK_EXTERN TK_EXCEPTION TK_EOF TK_DO TK_COMA TK_CLOSE_PAR TK_CLOSE_BRACE TK_BARSUP TK_BAR
follow(lutRangeOpt) = TK_SEMICOL TK_IN TK_EQ TK_CLOSE_PAR
follow(lutPrio) = TK_CLOSE_BRACE TK_BARSUP
follow(lutPredefType) = TK_SYSTEM TK_SEMICOL TK_REF TK_OPEN_BRACKET TK_NODE TK_LET TK_INCLUDE TK_IN TK_EXTERN TK_EXCEPTION TK_EQ TK_EOF TK_COMA TK_CLOSE_PAR TK_ASSIGN
follow(lutParamType) = TK_SEMICOL TK_CLOSE_PAR
follow(lutPara) = TK_PARA TK_CLOSE_BRACE
follow(lutOptType) = TK_SYSTEM TK_NODE TK_LET TK_INCLUDE TK_EXTERN TK_EXCEPTION TK_EQ TK_EOF TK_COMA TK_CLOSE_PAR TK_ASSIGN
follow(lutOptParams) = TK_SYSTEM TK_NODE TK_LET TK_INCLUDE TK_EXTERN TK_EXCEPTION TK_EQ TK_EOF TK_COLON
follow(lutOptInit) = TK_COMA TK_CLOSE_PAR TK_ASSIGN
follow(lutOneDecl) = TK_SYSTEM TK_NODE TK_LET TK_INCLUDE TK_EXTERN TK_EXCEPTION TK_EOF
follow(lutNodeStart) = TK_IDENT
follow(lutNodeDecl) = TK_SYSTEM TK_NODE TK_LET TK_INCLUDE TK_EXTERN TK_EXCEPTION TK_EOF
follow(lutLoopStatExp) = TK_SYSTEM TK_PARA TK_NODE TK_LET TK_INCLUDE TK_IN TK_FBY TK_EXTERN TK_EXCEPTION TK_EOF TK_DO TK_COMA TK_CLOSE_PAR TK_CLOSE_BRACE TK_BARSUP TK_BAR
follow(lutLoopExp) = TK_SYSTEM TK_PARA TK_NODE TK_LET TK_INCLUDE TK_IN TK_FBY TK_EXTERN TK_EXCEPTION TK_EOF TK_DO TK_COMA TK_CLOSE_PAR TK_CLOSE_BRACE TK_BARSUP TK_BAR
follow(lutLetDecl) = TK_SYSTEM TK_NODE TK_LET TK_INCLUDE TK_IN TK_EXTERN TK_EXCEPTION TK_EOF
follow(lutInteger) = TK_XOR TK_WEAK TK_TRY TK_TRUE TK_TRAP TK_TIMES TK_THEN TK_SYSTEM TK_STRONG TK_SLASH TK_SEMICOL TK_RUN TK_RCONST TK_RAISE TK_PRE TK_PLUS TK_PARA TK_OR TK_OPEN_PAR TK_OPEN_BRACE TK_NOT TK_NODE TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_LOOP TK_LET TK_INCLUDE TK_IN TK_IMPL TK_IF TK_IDENT TK_ICONST TK_GTE TK_GT TK_FBY TK_FALSE TK_EXTERN TK_EXIST TK_EXCEPTION TK_ERUN TK_EQ TK_EOF TK_ELSE TK_DO TK_DIV TK_COMA TK_COLON TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CATCH TK_BARSUP TK_BAR TK_ASSIGN TK_ASSERT TK_AND
follow(lutInclude) = TK_SYSTEM TK_NODE TK_LET TK_INCLUDE TK_EXTERN TK_EXCEPTION TK_EOF
follow(lutIdentTuple) = TK_ASSIGN
follow(lutIdentRef) = TK_XOR TK_WEAK TK_TRY TK_TRUE TK_TRAP TK_TIMES TK_THEN TK_SYSTEM TK_STRONG TK_SLASH TK_SEMICOL TK_RUN TK_RCONST TK_RAISE TK_PRE TK_PLUS TK_PARA TK_OR TK_OPEN_PAR TK_OPEN_BRACE TK_NOT TK_NODE TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_LOOP TK_LET TK_INCLUDE TK_IN TK_IMPL TK_IF TK_IDENT TK_ICONST TK_GTE TK_GT TK_FBY TK_FALSE TK_EXTERN TK_EXIST TK_EXCEPTION TK_ERUN TK_EQ TK_EOF TK_ELSE TK_DO TK_DIV TK_COMA TK_COLON TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CATCH TK_BARSUP TK_BAR TK_ASSIGN TK_ASSERT TK_AND
follow(lutIdentList) = TK_SYSTEM TK_NODE TK_LET TK_INCLUDE TK_IN TK_EXTERN TK_EXCEPTION TK_EOF TK_COMA TK_COLON TK_CLOSE_PAR TK_ASSIGN
follow(lutIdent) = TK_XOR TK_WEAK TK_TRY TK_TRUE TK_TRAP TK_TIMES TK_THEN TK_SYSTEM TK_STRONG TK_SLASH TK_SEMICOL TK_RUN TK_RCONST TK_RAISE TK_PRE TK_PLUS TK_PARA TK_OR TK_OPEN_PAR TK_OPEN_BRACE TK_NOT TK_NODE TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_LOOP TK_LET TK_INCLUDE TK_IN TK_IMPL TK_IF TK_IDENT TK_ICONST TK_GTE TK_GT TK_FBY TK_FALSE TK_EXTERN TK_EXIST TK_EXCEPTION TK_ERUN TK_EQ TK_EOF TK_ELSE TK_DO TK_DIV TK_COMA TK_COLON TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CATCH TK_BARSUP TK_BAR TK_ASSIGN TK_ASSERT TK_AND
follow(lutGaussian) = TK_WEAK TK_TRY TK_TRUE TK_TRAP TK_STRONG TK_RUN TK_RCONST TK_RAISE TK_PRE TK_OPEN_PAR TK_OPEN_BRACE TK_NOT TK_MINUS TK_LOOP TK_LET TK_IF TK_IDENT TK_ICONST TK_FALSE TK_EXIST TK_EXCEPTION TK_ERUN TK_CATCH TK_ASSERT
follow(lutFloating) = TK_XOR TK_WEAK TK_TRY TK_TRUE TK_TRAP TK_TIMES TK_THEN TK_SYSTEM TK_STRONG TK_SLASH TK_SEMICOL TK_RUN TK_RCONST TK_RAISE TK_PRE TK_PLUS TK_PARA TK_OR TK_OPEN_PAR TK_OPEN_BRACE TK_NOT TK_NODE TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_LOOP TK_LET TK_INCLUDE TK_IN TK_IMPL TK_IF TK_IDENT TK_ICONST TK_GTE TK_GT TK_FBY TK_FALSE TK_EXTERN TK_EXIST TK_EXCEPTION TK_ERUN TK_EQ TK_EOF TK_ELSE TK_DO TK_DIV TK_COMA TK_COLON TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CATCH TK_BARSUP TK_BAR TK_ASSIGN TK_ASSERT TK_AND
follow(lutFileTop) = #
follow(lutFile) = TK_SYSTEM TK_NODE TK_LET TK_INCLUDE TK_EXTERN TK_EXCEPTION TK_EOF
follow(lutExternNodeDecl) = TK_SYSTEM TK_NODE TK_LET TK_INCLUDE TK_EXTERN TK_EXCEPTION TK_EOF
follow(lutExp) = TK_XOR TK_WEAK TK_TRY TK_TRUE TK_TRAP TK_TIMES TK_THEN TK_SYSTEM TK_STRONG TK_SLASH TK_SEMICOL TK_RUN TK_RCONST TK_RAISE TK_PRE TK_PLUS TK_PARA TK_OR TK_OPEN_PAR TK_OPEN_BRACE TK_NOT TK_NODE TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_LOOP TK_LET TK_INCLUDE TK_IN TK_IMPL TK_IF TK_IDENT TK_ICONST TK_GTE TK_GT TK_FBY TK_FALSE TK_EXTERN TK_EXIST TK_EXCEPTION TK_ERUN TK_EQ TK_EOF TK_ELSE TK_DO TK_DIV TK_COMA TK_COLON TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CATCH TK_BARSUP TK_BAR TK_ASSIGN TK_ASSERT TK_AND
follow(lutExceptDecl) = TK_SYSTEM TK_NODE TK_LET TK_INCLUDE TK_EXTERN TK_EXCEPTION TK_EOF
follow(lutERunVars) = TK_ASSIGN
follow(lutERunVarList) = TK_COMA TK_CLOSE_PAR TK_ASSIGN
follow(lutERunVar) = TK_COMA TK_CLOSE_PAR TK_ASSIGN
follow(lutDoPart) = TK_SYSTEM TK_PARA TK_NODE TK_LET TK_INCLUDE TK_IN TK_FBY TK_EXTERN TK_EXCEPTION TK_EOF TK_DO TK_COMA TK_CLOSE_PAR TK_CLOSE_BRACE TK_BARSUP TK_BAR
follow(lutConst) = TK_XOR TK_WEAK TK_TRY TK_TRUE TK_TRAP TK_TIMES TK_THEN TK_SYSTEM TK_STRONG TK_SLASH TK_SEMICOL TK_RUN TK_RCONST TK_RAISE TK_PRE TK_PLUS TK_PARA TK_OR TK_OPEN_PAR TK_OPEN_BRACE TK_NOT TK_NODE TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_LOOP TK_LET TK_INCLUDE TK_IN TK_IMPL TK_IF TK_IDENT TK_ICONST TK_GTE TK_GT TK_FBY TK_FALSE TK_EXTERN TK_EXIST TK_EXCEPTION TK_ERUN TK_EQ TK_EOF TK_ELSE TK_DO TK_DIV TK_COMA TK_COLON TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CATCH TK_BARSUP TK_BAR TK_ASSIGN TK_ASSERT TK_AND
follow(lutChoice) = TK_CLOSE_BRACE TK_BAR
follow(lutBraceExp) = TK_SYSTEM TK_PARA TK_NODE TK_LET TK_INCLUDE TK_IN TK_FBY TK_EXTERN TK_EXCEPTION TK_EOF TK_DO TK_COMA TK_CLOSE_PAR TK_CLOSE_BRACE TK_BARSUP TK_BAR
follow(lutBinExp) = TK_XOR TK_WEAK TK_TRY TK_TRUE TK_TRAP TK_TIMES TK_THEN TK_SYSTEM TK_STRONG TK_SLASH TK_SEMICOL TK_RUN TK_RCONST TK_RAISE TK_PRE TK_PLUS TK_PARA TK_OR TK_OPEN_PAR TK_OPEN_BRACE TK_NOT TK_NODE TK_NEQ TK_MOD TK_MINUS TK_LTE TK_LT TK_LOOP TK_LET TK_INCLUDE TK_IN TK_IMPL TK_IF TK_IDENT TK_ICONST TK_GTE TK_GT TK_FBY TK_FALSE TK_EXTERN TK_EXIST TK_EXCEPTION TK_ERUN TK_EQ TK_EOF TK_ELSE TK_DO TK_DIV TK_COMA TK_COLON TK_CLOSE_PAR TK_CLOSE_BRACKET TK_CLOSE_BRACE TK_CATCH TK_BARSUP TK_BAR TK_ASSIGN TK_ASSERT TK_AND
follow(lutAverage) = TK_WEAK TK_TRY TK_TRUE TK_TRAP TK_STRONG TK_RUN TK_RCONST TK_RAISE TK_PRE TK_OPEN_PAR TK_OPEN_BRACE TK_NOT TK_MINUS TK_LOOP TK_LET TK_IF TK_IDENT TK_ICONST TK_FALSE TK_EXIST TK_EXCEPTION TK_ERUN TK_CATCH TK_ASSERT
follow(lutAssertFlag) = TK_ASSERT
follow(lutArgList) = TK_COMA TK_CLOSE_PAR
follow(lutArg) = TK_COMA TK_CLOSE_PAR
Built an LR(0) automaton with 265 states.
The grammar is not SLR(1) -- 39 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 265 states.
326 shift/reduce conflicts were silently solved.
File "lutin.2.56-lutParser.mly", line 250, characters 0-9:
Warning: the precedence level assigned to HACK_CALL is never useful.
File "lutin.2.56-lutParser.mly", line 238, characters 0-9:
Warning: the precedence level assigned to TK_DIESE is never useful.
File "lutin.2.56-lutParser.mly", line 239, characters 0-5:
Warning: the precedence level assigned to TK_DOT is never useful.
File "lutin.2.56-lutParser.mly", line 239, characters 0-5:
Warning: the precedence level assigned to TK_FIELD is never useful.
File "lutin.2.56-lutParser.mly", line 239, characters 0-5:
Warning: the precedence level assigned to TK_HAT is never useful.
File "lutin.2.56-lutParser.mly", line 237, characters 0-9:
Warning: the precedence level assigned to TK_INT is never useful.
File "lutin.2.56-lutParser.mly", line 238, characters 0-9:
Warning: the precedence level assigned to TK_NOR is never useful.
File "lutin.2.56-lutParser.mly", line 235, characters 0-5:
Warning: the precedence level assigned to TK_PCENT is never useful.
File "lutin.2.56-lutParser.mly", line 238, characters 0-9:
Warning: the precedence level assigned to TK_PRE is never useful.
File "lutin.2.56-lutParser.mly", line 237, characters 0-9:
Warning: the precedence level assigned to TK_REAL is never useful.
File "lutin.2.56-lutParser.mly", line 219, characters 0-9:
Warning: the precedence level assigned to TK_TRY is never useful.
File "lutin.2.56-lutParser.mly", line 905, characters 44-53:
Warning: this %prec declaration is never useful.
File "lutin.2.56-lutParser.mly", line 907, characters 54-63:
Warning: this %prec declaration is never useful.
Warning: one state has shift/reduce conflicts.
Warning: one shift/reduce conflict was arbitrarily resolved.
82 out of 265 states have a default reduction.
114 out of 265 states are represented.
0 out of 123 symbols keep track of their start position.
0 out of 123 symbols keep track of their end position.
59 out of 135 productions exploit shiftreduce optimization.
0 out of 265 states can peek at an error.
719 functions before inlining, 101 functions after inlining.
