State 0:
## Known stack suffix:
##
## LR(1) items:
prog' -> . prog [ # ]
## Transitions:
-- On TokTrivial shift to state 1
-- On TokTrans shift to state 3
-- On TokRegisters shift to state 124
-- On TokOpen shift to state 134
-- On TokName shift to state 136
-- On TokInsts shift to state 138
-- On TokInput shift to state 162
-- On TokEof shift to state 238
-- On trivial_statement shift to state 239
-- On transform_statement shift to state 240
-- On register_statement shift to state 241
-- On prog shift to state 242
-- On open_statement shift to state 243
-- On name_statement shift to state 244
-- On io_input_list shift to state 245
-- On io_input shift to state 277
-- On instruction_statement shift to state 279
-- On input_output_statement shift to state 280
-- On expr shift to state 281
## Reductions:

State 1:
## Known stack suffix:
## TokTrivial
## LR(1) items:
trivial_statement -> TokTrivial . TokIdent [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokIdent shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## TokTrivial TokIdent
## LR(1) items:
trivial_statement -> TokTrivial TokIdent . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production trivial_statement -> TokTrivial TokIdent

State 3:
## Known stack suffix:
## TokTrans
## LR(1) items:
transform_statement -> TokTrans . TokIdent symbol_list_opt TokColon transform_list [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokIdent shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## TokTrans TokIdent
## LR(1) items:
transform_statement -> TokTrans TokIdent . symbol_list_opt TokColon transform_list [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokIdent shift to state 5
-- On symbol_list_opt shift to state 8
-- On symbol_list shift to state 123
## Reductions:
-- On TokColon reduce production symbol_list_opt ->

State 5:
## Known stack suffix:
## TokIdent
## LR(1) items:
symbol_list -> TokIdent . TokComma symbol_list [ TokColon ]
symbol_list -> TokIdent . [ TokColon ]
## Transitions:
-- On TokComma shift to state 6
## Reductions:
-- On TokColon reduce production symbol_list -> TokIdent

State 6:
## Known stack suffix:
## TokIdent TokComma
## LR(1) items:
symbol_list -> TokIdent TokComma . symbol_list [ TokColon ]
## Transitions:
-- On TokIdent shift to state 5
-- On symbol_list shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## TokIdent TokComma symbol_list
## LR(1) items:
symbol_list -> TokIdent TokComma symbol_list . [ TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production symbol_list -> TokIdent TokComma symbol_list

State 8:
## Known stack suffix:
## TokTrans TokIdent symbol_list_opt
## LR(1) items:
transform_statement -> TokTrans TokIdent symbol_list_opt . TokColon transform_list [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokColon shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## TokTrans TokIdent symbol_list_opt TokColon
## LR(1) items:
transform_statement -> TokTrans TokIdent symbol_list_opt TokColon . transform_list [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokIdent shift to state 10
-- On transform_list shift to state 119
-- On transform shift to state 120
## Reductions:

State 10:
## Known stack suffix:
## TokIdent
## LR(1) items:
transform -> TokIdent . in_operand_list_opt TokArrow TokIdent out_operand_list_opt [ TokSemi ]
## Transitions:
-- On TokUnder shift to state 11
-- On TokStar shift to state 12
-- On TokPercent shift to state 40
-- On TokIdent shift to state 14
-- On TokDollar shift to state 43
-- On TokCapIdent shift to state 45
-- On TokAt shift to state 46
-- On in_operand_name shift to state 54
-- On in_operand_list_opt shift to state 56
-- On in_operand_list shift to state 115
-- On in_operand shift to state 116
## Reductions:
-- On TokArrow reduce production in_operand_list_opt ->

State 11:
## Known stack suffix:
## TokUnder
## LR(1) items:
in_operand_name -> TokUnder . [ TokSmall TokSemi TokRParen TokComma TokColon TokBang TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_operand_name -> TokUnder

State 12:
## Known stack suffix:
## TokStar
## LR(1) items:
in_operand -> TokStar . TokLParen in_operand_name TokComma in_operand_name TokComma value_reg TokComma value_reg TokRParen operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
in_operand -> TokStar . TokLParen in_operand_name TokComma value_reg TokRParen operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
in_operand -> TokStar . TokLParen in_operand_name TokRParen operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
in_operand -> TokStar . in_operand_name operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokUnder shift to state 11
-- On TokLParen shift to state 13
-- On TokIdent shift to state 14
-- On in_operand_name shift to state 38
## Reductions:

State 13:
## Known stack suffix:
## TokStar TokLParen
## LR(1) items:
in_operand -> TokStar TokLParen . in_operand_name TokComma in_operand_name TokComma value_reg TokComma value_reg TokRParen operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
in_operand -> TokStar TokLParen . in_operand_name TokComma value_reg TokRParen operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
in_operand -> TokStar TokLParen . in_operand_name TokRParen operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokUnder shift to state 11
-- On TokIdent shift to state 14
-- On in_operand_name shift to state 15
## Reductions:

State 14:
## Known stack suffix:
## TokIdent
## LR(1) items:
in_operand_name -> TokIdent . [ TokSmall TokSemi TokRParen TokComma TokColon TokBang TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_operand_name -> TokIdent

State 15:
## Known stack suffix:
## TokStar TokLParen in_operand_name
## LR(1) items:
in_operand -> TokStar TokLParen in_operand_name . TokComma in_operand_name TokComma value_reg TokComma value_reg TokRParen operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
in_operand -> TokStar TokLParen in_operand_name . TokComma value_reg TokRParen operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
in_operand -> TokStar TokLParen in_operand_name . TokRParen operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokRParen shift to state 16
-- On TokComma shift to state 25
## Reductions:

State 16:
## Known stack suffix:
## TokStar TokLParen in_operand_name TokRParen
## LR(1) items:
in_operand -> TokStar TokLParen in_operand_name TokRParen . operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokSmall shift to state 17
-- On TokBang shift to state 18
-- On operand_modifier_list_opt shift to state 21
-- On operand_modifier_list shift to state 22
-- On operand_modifier shift to state 23
## Reductions:
-- On TokSemi reduce production operand_modifier_list_opt ->
-- On TokRParen reduce production operand_modifier_list_opt ->
-- On TokComma reduce production operand_modifier_list_opt ->
-- On TokColon reduce production operand_modifier_list_opt ->
-- On TokArrow reduce production operand_modifier_list_opt ->

State 17:
## Known stack suffix:
## TokSmall
## LR(1) items:
operand_modifier -> TokSmall . [ TokSmall TokSemi TokRParen TokComma TokColon TokBang TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operand_modifier -> TokSmall

State 18:
## Known stack suffix:
## TokBang
## LR(1) items:
operand_modifier -> TokBang . TokIdent [ TokSmall TokSemi TokRParen TokComma TokColon TokBang TokArrow ]
operand_modifier -> TokBang . TokStack [ TokSmall TokSemi TokRParen TokComma TokColon TokBang TokArrow ]
## Transitions:
-- On TokStack shift to state 19
-- On TokIdent shift to state 20
## Reductions:

State 19:
## Known stack suffix:
## TokBang TokStack
## LR(1) items:
operand_modifier -> TokBang TokStack . [ TokSmall TokSemi TokRParen TokComma TokColon TokBang TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operand_modifier -> TokBang TokStack

State 20:
## Known stack suffix:
## TokBang TokIdent
## LR(1) items:
operand_modifier -> TokBang TokIdent . [ TokSmall TokSemi TokRParen TokComma TokColon TokBang TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operand_modifier -> TokBang TokIdent

State 21:
## Known stack suffix:
## TokStar TokLParen in_operand_name TokRParen operand_modifier_list_opt
## LR(1) items:
in_operand -> TokStar TokLParen in_operand_name TokRParen operand_modifier_list_opt . [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_operand -> TokStar TokLParen in_operand_name TokRParen operand_modifier_list_opt

State 22:
## Known stack suffix:
## operand_modifier_list
## LR(1) items:
operand_modifier_list_opt -> operand_modifier_list . [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operand_modifier_list_opt -> operand_modifier_list

State 23:
## Known stack suffix:
## operand_modifier
## LR(1) items:
operand_modifier_list -> operand_modifier . operand_modifier_list [ TokSemi TokRParen TokComma TokColon TokArrow ]
operand_modifier_list -> operand_modifier . [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokSmall shift to state 17
-- On TokBang shift to state 18
-- On operand_modifier_list shift to state 24
-- On operand_modifier shift to state 23
## Reductions:
-- On TokSemi reduce production operand_modifier_list -> operand_modifier
-- On TokRParen reduce production operand_modifier_list -> operand_modifier
-- On TokComma reduce production operand_modifier_list -> operand_modifier
-- On TokColon reduce production operand_modifier_list -> operand_modifier
-- On TokArrow reduce production operand_modifier_list -> operand_modifier

State 24:
## Known stack suffix:
## operand_modifier operand_modifier_list
## LR(1) items:
operand_modifier_list -> operand_modifier operand_modifier_list . [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operand_modifier_list -> operand_modifier operand_modifier_list

State 25:
## Known stack suffix:
## TokStar TokLParen in_operand_name TokComma
## LR(1) items:
in_operand -> TokStar TokLParen in_operand_name TokComma . in_operand_name TokComma value_reg TokComma value_reg TokRParen operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
in_operand -> TokStar TokLParen in_operand_name TokComma . value_reg TokRParen operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokUnder shift to state 11
-- On TokInt shift to state 26
-- On TokIdent shift to state 14
-- On value_reg shift to state 27
-- On in_operand_name shift to state 30
## Reductions:

State 26:
## Known stack suffix:
## TokInt
## LR(1) items:
value_reg -> TokInt . [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production value_reg -> TokInt

State 27:
## Known stack suffix:
## TokStar TokLParen in_operand_name TokComma value_reg
## LR(1) items:
in_operand -> TokStar TokLParen in_operand_name TokComma value_reg . TokRParen operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokRParen shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## TokStar TokLParen in_operand_name TokComma value_reg TokRParen
## LR(1) items:
in_operand -> TokStar TokLParen in_operand_name TokComma value_reg TokRParen . operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokSmall shift to state 17
-- On TokBang shift to state 18
-- On operand_modifier_list_opt shift to state 29
-- On operand_modifier_list shift to state 22
-- On operand_modifier shift to state 23
## Reductions:
-- On TokSemi reduce production operand_modifier_list_opt ->
-- On TokRParen reduce production operand_modifier_list_opt ->
-- On TokComma reduce production operand_modifier_list_opt ->
-- On TokColon reduce production operand_modifier_list_opt ->
-- On TokArrow reduce production operand_modifier_list_opt ->

State 29:
## Known stack suffix:
## TokStar TokLParen in_operand_name TokComma value_reg TokRParen operand_modifier_list_opt
## LR(1) items:
in_operand -> TokStar TokLParen in_operand_name TokComma value_reg TokRParen operand_modifier_list_opt . [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_operand -> TokStar TokLParen in_operand_name TokComma value_reg TokRParen operand_modifier_list_opt

State 30:
## Known stack suffix:
## TokStar TokLParen in_operand_name TokComma in_operand_name
## LR(1) items:
in_operand -> TokStar TokLParen in_operand_name TokComma in_operand_name . TokComma value_reg TokComma value_reg TokRParen operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
value_reg -> in_operand_name . [ TokRParen ]
## Transitions:
-- On TokComma shift to state 31
## Reductions:
-- On TokRParen reduce production value_reg -> in_operand_name

State 31:
## Known stack suffix:
## TokStar TokLParen in_operand_name TokComma in_operand_name TokComma
## LR(1) items:
in_operand -> TokStar TokLParen in_operand_name TokComma in_operand_name TokComma . value_reg TokComma value_reg TokRParen operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokUnder shift to state 11
-- On TokInt shift to state 26
-- On TokIdent shift to state 14
-- On value_reg shift to state 32
-- On in_operand_name shift to state 37
## Reductions:

State 32:
## Known stack suffix:
## TokStar TokLParen in_operand_name TokComma in_operand_name TokComma value_reg
## LR(1) items:
in_operand -> TokStar TokLParen in_operand_name TokComma in_operand_name TokComma value_reg . TokComma value_reg TokRParen operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokComma shift to state 33
## Reductions:

State 33:
## Known stack suffix:
## TokStar TokLParen in_operand_name TokComma in_operand_name TokComma value_reg TokComma
## LR(1) items:
in_operand -> TokStar TokLParen in_operand_name TokComma in_operand_name TokComma value_reg TokComma . value_reg TokRParen operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokUnder shift to state 11
-- On TokInt shift to state 26
-- On TokIdent shift to state 14
-- On value_reg shift to state 34
-- On in_operand_name shift to state 37
## Reductions:

State 34:
## Known stack suffix:
## TokStar TokLParen in_operand_name TokComma in_operand_name TokComma value_reg TokComma value_reg
## LR(1) items:
in_operand -> TokStar TokLParen in_operand_name TokComma in_operand_name TokComma value_reg TokComma value_reg . TokRParen operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokRParen shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## TokStar TokLParen in_operand_name TokComma in_operand_name TokComma value_reg TokComma value_reg TokRParen
## LR(1) items:
in_operand -> TokStar TokLParen in_operand_name TokComma in_operand_name TokComma value_reg TokComma value_reg TokRParen . operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokSmall shift to state 17
-- On TokBang shift to state 18
-- On operand_modifier_list_opt shift to state 36
-- On operand_modifier_list shift to state 22
-- On operand_modifier shift to state 23
## Reductions:
-- On TokSemi reduce production operand_modifier_list_opt ->
-- On TokRParen reduce production operand_modifier_list_opt ->
-- On TokComma reduce production operand_modifier_list_opt ->
-- On TokColon reduce production operand_modifier_list_opt ->
-- On TokArrow reduce production operand_modifier_list_opt ->

State 36:
## Known stack suffix:
## TokStar TokLParen in_operand_name TokComma in_operand_name TokComma value_reg TokComma value_reg TokRParen operand_modifier_list_opt
## LR(1) items:
in_operand -> TokStar TokLParen in_operand_name TokComma in_operand_name TokComma value_reg TokComma value_reg TokRParen operand_modifier_list_opt . [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_operand -> TokStar TokLParen in_operand_name TokComma in_operand_name TokComma value_reg TokComma value_reg TokRParen operand_modifier_list_opt

State 37:
## Known stack suffix:
## in_operand_name
## LR(1) items:
value_reg -> in_operand_name . [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production value_reg -> in_operand_name

State 38:
## Known stack suffix:
## TokStar in_operand_name
## LR(1) items:
in_operand -> TokStar in_operand_name . operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokSmall shift to state 17
-- On TokBang shift to state 18
-- On operand_modifier_list_opt shift to state 39
-- On operand_modifier_list shift to state 22
-- On operand_modifier shift to state 23
## Reductions:
-- On TokSemi reduce production operand_modifier_list_opt ->
-- On TokRParen reduce production operand_modifier_list_opt ->
-- On TokComma reduce production operand_modifier_list_opt ->
-- On TokColon reduce production operand_modifier_list_opt ->
-- On TokArrow reduce production operand_modifier_list_opt ->

State 39:
## Known stack suffix:
## TokStar in_operand_name operand_modifier_list_opt
## LR(1) items:
in_operand -> TokStar in_operand_name operand_modifier_list_opt . [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_operand -> TokStar in_operand_name operand_modifier_list_opt

State 40:
## Known stack suffix:
## TokPercent
## LR(1) items:
in_operand -> TokPercent . in_operand_name operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokUnder shift to state 11
-- On TokIdent shift to state 14
-- On in_operand_name shift to state 41
## Reductions:

State 41:
## Known stack suffix:
## TokPercent in_operand_name
## LR(1) items:
in_operand -> TokPercent in_operand_name . operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokSmall shift to state 17
-- On TokBang shift to state 18
-- On operand_modifier_list_opt shift to state 42
-- On operand_modifier_list shift to state 22
-- On operand_modifier shift to state 23
## Reductions:
-- On TokSemi reduce production operand_modifier_list_opt ->
-- On TokRParen reduce production operand_modifier_list_opt ->
-- On TokComma reduce production operand_modifier_list_opt ->
-- On TokColon reduce production operand_modifier_list_opt ->
-- On TokArrow reduce production operand_modifier_list_opt ->

State 42:
## Known stack suffix:
## TokPercent in_operand_name operand_modifier_list_opt
## LR(1) items:
in_operand -> TokPercent in_operand_name operand_modifier_list_opt . [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_operand -> TokPercent in_operand_name operand_modifier_list_opt

State 43:
## Known stack suffix:
## TokDollar
## LR(1) items:
in_operand -> TokDollar . value_reg [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokUnder shift to state 11
-- On TokInt shift to state 26
-- On TokIdent shift to state 14
-- On value_reg shift to state 44
-- On in_operand_name shift to state 37
## Reductions:

State 44:
## Known stack suffix:
## TokDollar value_reg
## LR(1) items:
in_operand -> TokDollar value_reg . [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_operand -> TokDollar value_reg

State 45:
## Known stack suffix:
## TokCapIdent
## LR(1) items:
in_operand -> TokCapIdent . [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_operand -> TokCapIdent

State 46:
## Known stack suffix:
## TokAt
## LR(1) items:
in_operand -> TokAt . in_operand_name operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
in_operand -> TokAt . TokStack in_operand_stack_index [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokUnder shift to state 11
-- On TokStack shift to state 47
-- On TokIdent shift to state 14
-- On in_operand_name shift to state 52
## Reductions:

State 47:
## Known stack suffix:
## TokAt TokStack
## LR(1) items:
in_operand -> TokAt TokStack . in_operand_stack_index [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokLParen shift to state 48
-- On in_operand_stack_index shift to state 51
## Reductions:
-- On TokSemi reduce production in_operand_stack_index ->
-- On TokRParen reduce production in_operand_stack_index ->
-- On TokComma reduce production in_operand_stack_index ->
-- On TokColon reduce production in_operand_stack_index ->
-- On TokArrow reduce production in_operand_stack_index ->

State 48:
## Known stack suffix:
## TokLParen
## LR(1) items:
in_operand_stack_index -> TokLParen . value_reg TokRParen [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokUnder shift to state 11
-- On TokInt shift to state 26
-- On TokIdent shift to state 14
-- On value_reg shift to state 49
-- On in_operand_name shift to state 37
## Reductions:

State 49:
## Known stack suffix:
## TokLParen value_reg
## LR(1) items:
in_operand_stack_index -> TokLParen value_reg . TokRParen [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokRParen shift to state 50
## Reductions:

State 50:
## Known stack suffix:
## TokLParen value_reg TokRParen
## LR(1) items:
in_operand_stack_index -> TokLParen value_reg TokRParen . [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_operand_stack_index -> TokLParen value_reg TokRParen

State 51:
## Known stack suffix:
## TokAt TokStack in_operand_stack_index
## LR(1) items:
in_operand -> TokAt TokStack in_operand_stack_index . [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_operand -> TokAt TokStack in_operand_stack_index

State 52:
## Known stack suffix:
## TokAt in_operand_name
## LR(1) items:
in_operand -> TokAt in_operand_name . operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokSmall shift to state 17
-- On TokBang shift to state 18
-- On operand_modifier_list_opt shift to state 53
-- On operand_modifier_list shift to state 22
-- On operand_modifier shift to state 23
## Reductions:
-- On TokSemi reduce production operand_modifier_list_opt ->
-- On TokRParen reduce production operand_modifier_list_opt ->
-- On TokComma reduce production operand_modifier_list_opt ->
-- On TokColon reduce production operand_modifier_list_opt ->
-- On TokArrow reduce production operand_modifier_list_opt ->

State 53:
## Known stack suffix:
## TokAt in_operand_name operand_modifier_list_opt
## LR(1) items:
in_operand -> TokAt in_operand_name operand_modifier_list_opt . [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_operand -> TokAt in_operand_name operand_modifier_list_opt

State 54:
## Known stack suffix:
## in_operand_name
## LR(1) items:
in_operand -> in_operand_name . operand_modifier_list_opt [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
-- On TokSmall shift to state 17
-- On TokBang shift to state 18
-- On operand_modifier_list_opt shift to state 55
-- On operand_modifier_list shift to state 22
-- On operand_modifier shift to state 23
## Reductions:
-- On TokSemi reduce production operand_modifier_list_opt ->
-- On TokRParen reduce production operand_modifier_list_opt ->
-- On TokComma reduce production operand_modifier_list_opt ->
-- On TokColon reduce production operand_modifier_list_opt ->
-- On TokArrow reduce production operand_modifier_list_opt ->

State 55:
## Known stack suffix:
## in_operand_name operand_modifier_list_opt
## LR(1) items:
in_operand -> in_operand_name operand_modifier_list_opt . [ TokSemi TokRParen TokComma TokColon TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_operand -> in_operand_name operand_modifier_list_opt

State 56:
## Known stack suffix:
## TokIdent in_operand_list_opt
## LR(1) items:
transform -> TokIdent in_operand_list_opt . TokArrow TokIdent out_operand_list_opt [ TokSemi ]
## Transitions:
-- On TokArrow shift to state 57
## Reductions:

State 57:
## Known stack suffix:
## TokIdent in_operand_list_opt TokArrow
## LR(1) items:
transform -> TokIdent in_operand_list_opt TokArrow . TokIdent out_operand_list_opt [ TokSemi ]
## Transitions:
-- On TokIdent shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## TokIdent in_operand_list_opt TokArrow TokIdent
## LR(1) items:
transform -> TokIdent in_operand_list_opt TokArrow TokIdent . out_operand_list_opt [ TokSemi ]
## Transitions:
-- On TokStar shift to state 59
-- On TokPercent shift to state 97
-- On TokIdent shift to state 99
-- On TokDollar shift to state 100
-- On TokCapIdent shift to state 102
-- On TokAt shift to state 103
-- On out_operand_list_opt shift to state 110
-- On out_operand_list shift to state 111
-- On out_operand shift to state 112
## Reductions:
-- On TokSemi reduce production out_operand_list_opt ->

State 59:
## Known stack suffix:
## TokStar
## LR(1) items:
out_operand -> TokStar . TokLParen TokIdent TokComma TokIdent TokComma arith_expr TokComma arith_expr TokRParen [ TokSemi TokComma ]
out_operand -> TokStar . TokLParen TokIdent TokComma arith_expr TokRParen [ TokSemi TokComma ]
out_operand -> TokStar . TokLParen TokIdent TokRParen [ TokSemi TokComma ]
## Transitions:
-- On TokLParen shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## TokStar TokLParen
## LR(1) items:
out_operand -> TokStar TokLParen . TokIdent TokComma TokIdent TokComma arith_expr TokComma arith_expr TokRParen [ TokSemi TokComma ]
out_operand -> TokStar TokLParen . TokIdent TokComma arith_expr TokRParen [ TokSemi TokComma ]
out_operand -> TokStar TokLParen . TokIdent TokRParen [ TokSemi TokComma ]
## Transitions:
-- On TokIdent shift to state 61
## Reductions:

State 61:
## Known stack suffix:
## TokStar TokLParen TokIdent
## LR(1) items:
out_operand -> TokStar TokLParen TokIdent . TokComma TokIdent TokComma arith_expr TokComma arith_expr TokRParen [ TokSemi TokComma ]
out_operand -> TokStar TokLParen TokIdent . TokComma arith_expr TokRParen [ TokSemi TokComma ]
out_operand -> TokStar TokLParen TokIdent . TokRParen [ TokSemi TokComma ]
## Transitions:
-- On TokRParen shift to state 62
-- On TokComma shift to state 63
## Reductions:

State 62:
## Known stack suffix:
## TokStar TokLParen TokIdent TokRParen
## LR(1) items:
out_operand -> TokStar TokLParen TokIdent TokRParen . [ TokSemi TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_operand -> TokStar TokLParen TokIdent TokRParen

State 63:
## Known stack suffix:
## TokStar TokLParen TokIdent TokComma
## LR(1) items:
out_operand -> TokStar TokLParen TokIdent TokComma . TokIdent TokComma arith_expr TokComma arith_expr TokRParen [ TokSemi TokComma ]
out_operand -> TokStar TokLParen TokIdent TokComma . arith_expr TokRParen [ TokSemi TokComma ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 68
-- On TokInt shift to state 69
-- On TokIdent shift to state 89
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On arith_expr shift to state 95
## Reductions:

State 64:
## Known stack suffix:
## TokTilde
## LR(1) items:
unary_op -> TokTilde . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TokTilde

State 65:
## Known stack suffix:
## TokPow2
## LR(1) items:
unary_op -> TokPow2 . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TokPow2

State 66:
## Known stack suffix:
## TokMinus
## LR(1) items:
unary_op -> TokMinus . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TokMinus

State 67:
## Known stack suffix:
## TokLog2
## LR(1) items:
unary_op -> TokLog2 . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TokLog2

State 68:
## Known stack suffix:
## TokLParen
## LR(1) items:
arith_expr -> TokLParen . arith_expr TokRParen [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 68
-- On TokInt shift to state 69
-- On TokIdent shift to state 70
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On arith_expr shift to state 84
## Reductions:

State 69:
## Known stack suffix:
## TokInt
## LR(1) items:
arith_expr -> TokInt . [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr -> TokInt

State 70:
## Known stack suffix:
## TokIdent
## LR(1) items:
arith_expr -> TokIdent . [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr -> TokIdent

State 71:
## Known stack suffix:
## TokAbs
## LR(1) items:
unary_op -> TokAbs . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TokAbs

State 72:
## Known stack suffix:
## unary_op
## LR(1) items:
arith_expr -> unary_op . arith_expr [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 68
-- On TokInt shift to state 69
-- On TokIdent shift to state 70
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On arith_expr shift to state 73
## Reductions:

State 73:
## Known stack suffix:
## unary_op arith_expr
## LR(1) items:
arith_expr -> arith_expr . plus_minus_op arith_expr [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
arith_expr -> arith_expr . logical_op arith_expr [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
arith_expr -> arith_expr . shift_op arith_expr [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
arith_expr -> unary_op arith_expr . [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
## Transitions:
-- On shift_op shift to state 74
-- On plus_minus_op shift to state 80
-- On logical_op shift to state 82
## Default reduction:
-- After reading the next token, reduce production arith_expr -> unary_op arith_expr

State 74:
## Known stack suffix:
## arith_expr shift_op
## LR(1) items:
arith_expr -> arith_expr shift_op . arith_expr [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 68
-- On TokInt shift to state 69
-- On TokIdent shift to state 70
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On arith_expr shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## arith_expr shift_op arith_expr
## LR(1) items:
arith_expr -> arith_expr . plus_minus_op arith_expr [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
arith_expr -> arith_expr . logical_op arith_expr [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
arith_expr -> arith_expr . shift_op arith_expr [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
arith_expr -> arith_expr shift_op arith_expr . [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
## Transitions:
-- On TokPlus shift to state 76
-- On TokPipe shift to state 77
-- On TokMinus shift to state 78
-- On TokAmp shift to state 79
-- On shift_op shift to state 74
-- On plus_minus_op shift to state 80
-- On logical_op shift to state 82
## Reductions:
-- On TokShr reduce production arith_expr -> arith_expr shift_op arith_expr
-- On TokShl reduce production arith_expr -> arith_expr shift_op arith_expr
-- On TokSemi reduce production arith_expr -> arith_expr shift_op arith_expr
-- On TokSar reduce production arith_expr -> arith_expr shift_op arith_expr
-- On TokRParen reduce production arith_expr -> arith_expr shift_op arith_expr
-- On TokPipePipe reduce production arith_expr -> arith_expr shift_op arith_expr
-- On TokOutput reduce production arith_expr -> arith_expr shift_op arith_expr
-- On TokNotEqual reduce production arith_expr -> arith_expr shift_op arith_expr
-- On TokLessThan reduce production arith_expr -> arith_expr shift_op arith_expr
-- On TokLessEqual reduce production arith_expr -> arith_expr shift_op arith_expr
-- On TokInput reduce production arith_expr -> arith_expr shift_op arith_expr
-- On TokGreaterThan reduce production arith_expr -> arith_expr shift_op arith_expr
-- On TokGreaterEqual reduce production arith_expr -> arith_expr shift_op arith_expr
-- On TokEqual reduce production arith_expr -> arith_expr shift_op arith_expr
-- On TokComma reduce production arith_expr -> arith_expr shift_op arith_expr
-- On TokColon reduce production arith_expr -> arith_expr shift_op arith_expr
-- On TokAmpAmp reduce production arith_expr -> arith_expr shift_op arith_expr

State 76:
## Known stack suffix:
## TokPlus
## LR(1) items:
plus_minus_op -> TokPlus . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_minus_op -> TokPlus

State 77:
## Known stack suffix:
## TokPipe
## LR(1) items:
logical_op -> TokPipe . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production logical_op -> TokPipe

State 78:
## Known stack suffix:
## TokMinus
## LR(1) items:
plus_minus_op -> TokMinus . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plus_minus_op -> TokMinus

State 79:
## Known stack suffix:
## TokAmp
## LR(1) items:
logical_op -> TokAmp . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production logical_op -> TokAmp

State 80:
## Known stack suffix:
## arith_expr plus_minus_op
## LR(1) items:
arith_expr -> arith_expr plus_minus_op . arith_expr [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 68
-- On TokInt shift to state 69
-- On TokIdent shift to state 70
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On arith_expr shift to state 81
## Reductions:

State 81:
## Known stack suffix:
## arith_expr plus_minus_op arith_expr
## LR(1) items:
arith_expr -> arith_expr . plus_minus_op arith_expr [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
arith_expr -> arith_expr plus_minus_op arith_expr . [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
arith_expr -> arith_expr . logical_op arith_expr [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
arith_expr -> arith_expr . shift_op arith_expr [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
## Transitions:
-- On shift_op shift to state 74
-- On plus_minus_op shift to state 80
-- On logical_op shift to state 82
## Default reduction:
-- After reading the next token, reduce production arith_expr -> arith_expr plus_minus_op arith_expr

State 82:
## Known stack suffix:
## arith_expr logical_op
## LR(1) items:
arith_expr -> arith_expr logical_op . arith_expr [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 68
-- On TokInt shift to state 69
-- On TokIdent shift to state 70
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On arith_expr shift to state 83
## Reductions:

State 83:
## Known stack suffix:
## arith_expr logical_op arith_expr
## LR(1) items:
arith_expr -> arith_expr . plus_minus_op arith_expr [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
arith_expr -> arith_expr . logical_op arith_expr [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
arith_expr -> arith_expr logical_op arith_expr . [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
arith_expr -> arith_expr . shift_op arith_expr [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
## Transitions:
-- On TokPlus shift to state 76
-- On TokMinus shift to state 78
-- On shift_op shift to state 74
-- On plus_minus_op shift to state 80
-- On logical_op shift to state 82
## Reductions:
-- On TokShr reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokShl reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokSemi reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokSar reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokRParen reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokPipePipe reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokPipe reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokOutput reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokNotEqual reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokLessThan reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokLessEqual reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokInput reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokGreaterThan reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokGreaterEqual reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokEqual reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokComma reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokColon reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokAmpAmp reduce production arith_expr -> arith_expr logical_op arith_expr
-- On TokAmp reduce production arith_expr -> arith_expr logical_op arith_expr

State 84:
## Known stack suffix:
## TokLParen arith_expr
## LR(1) items:
arith_expr -> TokLParen arith_expr . TokRParen [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
arith_expr -> arith_expr . plus_minus_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokMinus TokAmp ]
arith_expr -> arith_expr . logical_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokMinus TokAmp ]
arith_expr -> arith_expr . shift_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokMinus TokAmp ]
## Transitions:
-- On TokShr shift to state 85
-- On TokShl shift to state 86
-- On TokSar shift to state 87
-- On TokRParen shift to state 88
-- On TokPlus shift to state 76
-- On TokPipe shift to state 77
-- On TokMinus shift to state 78
-- On TokAmp shift to state 79
-- On shift_op shift to state 74
-- On plus_minus_op shift to state 80
-- On logical_op shift to state 82
## Reductions:

State 85:
## Known stack suffix:
## TokShr
## LR(1) items:
shift_op -> TokShr . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production shift_op -> TokShr

State 86:
## Known stack suffix:
## TokShl
## LR(1) items:
shift_op -> TokShl . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production shift_op -> TokShl

State 87:
## Known stack suffix:
## TokSar
## LR(1) items:
shift_op -> TokSar . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production shift_op -> TokSar

State 88:
## Known stack suffix:
## TokLParen arith_expr TokRParen
## LR(1) items:
arith_expr -> TokLParen arith_expr TokRParen . [ TokShr TokShl TokSemi TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokNotEqual TokMinus TokLessThan TokLessEqual TokInput TokGreaterThan TokGreaterEqual TokEqual TokComma TokColon TokAmpAmp TokAmp ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr -> TokLParen arith_expr TokRParen

State 89:
## Known stack suffix:
## TokStar TokLParen TokIdent TokComma TokIdent
## LR(1) items:
arith_expr -> TokIdent . [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokMinus TokAmp ]
out_operand -> TokStar TokLParen TokIdent TokComma TokIdent . TokComma arith_expr TokComma arith_expr TokRParen [ TokSemi TokComma ]
## Transitions:
-- On TokComma shift to state 90
## Reductions:
-- On TokShr reduce production arith_expr -> TokIdent
-- On TokShl reduce production arith_expr -> TokIdent
-- On TokSar reduce production arith_expr -> TokIdent
-- On TokRParen reduce production arith_expr -> TokIdent
-- On TokPlus reduce production arith_expr -> TokIdent
-- On TokPipe reduce production arith_expr -> TokIdent
-- On TokMinus reduce production arith_expr -> TokIdent
-- On TokAmp reduce production arith_expr -> TokIdent

State 90:
## Known stack suffix:
## TokStar TokLParen TokIdent TokComma TokIdent TokComma
## LR(1) items:
out_operand -> TokStar TokLParen TokIdent TokComma TokIdent TokComma . arith_expr TokComma arith_expr TokRParen [ TokSemi TokComma ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 68
-- On TokInt shift to state 69
-- On TokIdent shift to state 70
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On arith_expr shift to state 91
## Reductions:

State 91:
## Known stack suffix:
## TokStar TokLParen TokIdent TokComma TokIdent TokComma arith_expr
## LR(1) items:
arith_expr -> arith_expr . plus_minus_op arith_expr [ TokShr TokShl TokSar TokPlus TokPipe TokMinus TokComma TokAmp ]
arith_expr -> arith_expr . logical_op arith_expr [ TokShr TokShl TokSar TokPlus TokPipe TokMinus TokComma TokAmp ]
arith_expr -> arith_expr . shift_op arith_expr [ TokShr TokShl TokSar TokPlus TokPipe TokMinus TokComma TokAmp ]
out_operand -> TokStar TokLParen TokIdent TokComma TokIdent TokComma arith_expr . TokComma arith_expr TokRParen [ TokSemi TokComma ]
## Transitions:
-- On TokShr shift to state 85
-- On TokShl shift to state 86
-- On TokSar shift to state 87
-- On TokPlus shift to state 76
-- On TokPipe shift to state 77
-- On TokMinus shift to state 78
-- On TokComma shift to state 92
-- On TokAmp shift to state 79
-- On shift_op shift to state 74
-- On plus_minus_op shift to state 80
-- On logical_op shift to state 82
## Reductions:

State 92:
## Known stack suffix:
## TokStar TokLParen TokIdent TokComma TokIdent TokComma arith_expr TokComma
## LR(1) items:
out_operand -> TokStar TokLParen TokIdent TokComma TokIdent TokComma arith_expr TokComma . arith_expr TokRParen [ TokSemi TokComma ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 68
-- On TokInt shift to state 69
-- On TokIdent shift to state 70
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On arith_expr shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## TokStar TokLParen TokIdent TokComma TokIdent TokComma arith_expr TokComma arith_expr
## LR(1) items:
arith_expr -> arith_expr . plus_minus_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokMinus TokAmp ]
arith_expr -> arith_expr . logical_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokMinus TokAmp ]
arith_expr -> arith_expr . shift_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokMinus TokAmp ]
out_operand -> TokStar TokLParen TokIdent TokComma TokIdent TokComma arith_expr TokComma arith_expr . TokRParen [ TokSemi TokComma ]
## Transitions:
-- On TokShr shift to state 85
-- On TokShl shift to state 86
-- On TokSar shift to state 87
-- On TokRParen shift to state 94
-- On TokPlus shift to state 76
-- On TokPipe shift to state 77
-- On TokMinus shift to state 78
-- On TokAmp shift to state 79
-- On shift_op shift to state 74
-- On plus_minus_op shift to state 80
-- On logical_op shift to state 82
## Reductions:

State 94:
## Known stack suffix:
## TokStar TokLParen TokIdent TokComma TokIdent TokComma arith_expr TokComma arith_expr TokRParen
## LR(1) items:
out_operand -> TokStar TokLParen TokIdent TokComma TokIdent TokComma arith_expr TokComma arith_expr TokRParen . [ TokSemi TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_operand -> TokStar TokLParen TokIdent TokComma TokIdent TokComma arith_expr TokComma arith_expr TokRParen

State 95:
## Known stack suffix:
## TokStar TokLParen TokIdent TokComma arith_expr
## LR(1) items:
arith_expr -> arith_expr . plus_minus_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokMinus TokAmp ]
arith_expr -> arith_expr . logical_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokMinus TokAmp ]
arith_expr -> arith_expr . shift_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokMinus TokAmp ]
out_operand -> TokStar TokLParen TokIdent TokComma arith_expr . TokRParen [ TokSemi TokComma ]
## Transitions:
-- On TokShr shift to state 85
-- On TokShl shift to state 86
-- On TokSar shift to state 87
-- On TokRParen shift to state 96
-- On TokPlus shift to state 76
-- On TokPipe shift to state 77
-- On TokMinus shift to state 78
-- On TokAmp shift to state 79
-- On shift_op shift to state 74
-- On plus_minus_op shift to state 80
-- On logical_op shift to state 82
## Reductions:

State 96:
## Known stack suffix:
## TokStar TokLParen TokIdent TokComma arith_expr TokRParen
## LR(1) items:
out_operand -> TokStar TokLParen TokIdent TokComma arith_expr TokRParen . [ TokSemi TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_operand -> TokStar TokLParen TokIdent TokComma arith_expr TokRParen

State 97:
## Known stack suffix:
## TokPercent
## LR(1) items:
out_operand -> TokPercent . TokIdent [ TokSemi TokComma ]
## Transitions:
-- On TokIdent shift to state 98
## Reductions:

State 98:
## Known stack suffix:
## TokPercent TokIdent
## LR(1) items:
out_operand -> TokPercent TokIdent . [ TokSemi TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_operand -> TokPercent TokIdent

State 99:
## Known stack suffix:
## TokIdent
## LR(1) items:
out_operand -> TokIdent . [ TokSemi TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_operand -> TokIdent

State 100:
## Known stack suffix:
## TokDollar
## LR(1) items:
out_operand -> TokDollar . arith_expr [ TokSemi TokComma ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 68
-- On TokInt shift to state 69
-- On TokIdent shift to state 70
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On arith_expr shift to state 101
## Reductions:

State 101:
## Known stack suffix:
## TokDollar arith_expr
## LR(1) items:
arith_expr -> arith_expr . plus_minus_op arith_expr [ TokShr TokShl TokSemi TokSar TokPlus TokPipe TokMinus TokComma TokAmp ]
arith_expr -> arith_expr . logical_op arith_expr [ TokShr TokShl TokSemi TokSar TokPlus TokPipe TokMinus TokComma TokAmp ]
arith_expr -> arith_expr . shift_op arith_expr [ TokShr TokShl TokSemi TokSar TokPlus TokPipe TokMinus TokComma TokAmp ]
out_operand -> TokDollar arith_expr . [ TokSemi TokComma ]
## Transitions:
-- On TokShr shift to state 85
-- On TokShl shift to state 86
-- On TokSar shift to state 87
-- On TokPlus shift to state 76
-- On TokPipe shift to state 77
-- On TokMinus shift to state 78
-- On TokAmp shift to state 79
-- On shift_op shift to state 74
-- On plus_minus_op shift to state 80
-- On logical_op shift to state 82
## Reductions:
-- On TokSemi reduce production out_operand -> TokDollar arith_expr
-- On TokComma reduce production out_operand -> TokDollar arith_expr

State 102:
## Known stack suffix:
## TokCapIdent
## LR(1) items:
out_operand -> TokCapIdent . [ TokSemi TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_operand -> TokCapIdent

State 103:
## Known stack suffix:
## TokAt
## LR(1) items:
out_operand -> TokAt . TokIdent [ TokSemi TokComma ]
out_operand -> TokAt . TokStack out_operand_stack_index [ TokSemi TokComma ]
## Transitions:
-- On TokStack shift to state 104
-- On TokIdent shift to state 109
## Reductions:

State 104:
## Known stack suffix:
## TokAt TokStack
## LR(1) items:
out_operand -> TokAt TokStack . out_operand_stack_index [ TokSemi TokComma ]
## Transitions:
-- On TokLParen shift to state 105
-- On out_operand_stack_index shift to state 108
## Reductions:
-- On TokSemi reduce production out_operand_stack_index ->
-- On TokComma reduce production out_operand_stack_index ->

State 105:
## Known stack suffix:
## TokLParen
## LR(1) items:
out_operand_stack_index -> TokLParen . arith_expr TokRParen [ TokSemi TokComma ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 68
-- On TokInt shift to state 69
-- On TokIdent shift to state 70
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On arith_expr shift to state 106
## Reductions:

State 106:
## Known stack suffix:
## TokLParen arith_expr
## LR(1) items:
arith_expr -> arith_expr . plus_minus_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokMinus TokAmp ]
arith_expr -> arith_expr . logical_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokMinus TokAmp ]
arith_expr -> arith_expr . shift_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokMinus TokAmp ]
out_operand_stack_index -> TokLParen arith_expr . TokRParen [ TokSemi TokComma ]
## Transitions:
-- On TokShr shift to state 85
-- On TokShl shift to state 86
-- On TokSar shift to state 87
-- On TokRParen shift to state 107
-- On TokPlus shift to state 76
-- On TokPipe shift to state 77
-- On TokMinus shift to state 78
-- On TokAmp shift to state 79
-- On shift_op shift to state 74
-- On plus_minus_op shift to state 80
-- On logical_op shift to state 82
## Reductions:

State 107:
## Known stack suffix:
## TokLParen arith_expr TokRParen
## LR(1) items:
out_operand_stack_index -> TokLParen arith_expr TokRParen . [ TokSemi TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_operand_stack_index -> TokLParen arith_expr TokRParen

State 108:
## Known stack suffix:
## TokAt TokStack out_operand_stack_index
## LR(1) items:
out_operand -> TokAt TokStack out_operand_stack_index . [ TokSemi TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_operand -> TokAt TokStack out_operand_stack_index

State 109:
## Known stack suffix:
## TokAt TokIdent
## LR(1) items:
out_operand -> TokAt TokIdent . [ TokSemi TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_operand -> TokAt TokIdent

State 110:
## Known stack suffix:
## TokIdent in_operand_list_opt TokArrow TokIdent out_operand_list_opt
## LR(1) items:
transform -> TokIdent in_operand_list_opt TokArrow TokIdent out_operand_list_opt . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production transform -> TokIdent in_operand_list_opt TokArrow TokIdent out_operand_list_opt

State 111:
## Known stack suffix:
## out_operand_list
## LR(1) items:
out_operand_list_opt -> out_operand_list . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_operand_list_opt -> out_operand_list

State 112:
## Known stack suffix:
## out_operand
## LR(1) items:
out_operand_list -> out_operand . TokComma out_operand_list [ TokSemi ]
out_operand_list -> out_operand . [ TokSemi ]
## Transitions:
-- On TokComma shift to state 113
## Reductions:
-- On TokSemi reduce production out_operand_list -> out_operand

State 113:
## Known stack suffix:
## out_operand TokComma
## LR(1) items:
out_operand_list -> out_operand TokComma . out_operand_list [ TokSemi ]
## Transitions:
-- On TokStar shift to state 59
-- On TokPercent shift to state 97
-- On TokIdent shift to state 99
-- On TokDollar shift to state 100
-- On TokCapIdent shift to state 102
-- On TokAt shift to state 103
-- On out_operand_list shift to state 114
-- On out_operand shift to state 112
## Reductions:

State 114:
## Known stack suffix:
## out_operand TokComma out_operand_list
## LR(1) items:
out_operand_list -> out_operand TokComma out_operand_list . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_operand_list -> out_operand TokComma out_operand_list

State 115:
## Known stack suffix:
## in_operand_list
## LR(1) items:
in_operand_list_opt -> in_operand_list . [ TokSemi TokColon TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_operand_list_opt -> in_operand_list

State 116:
## Known stack suffix:
## in_operand
## LR(1) items:
in_operand_list -> in_operand . TokComma in_operand_list [ TokSemi TokRParen TokColon TokArrow ]
in_operand_list -> in_operand . [ TokSemi TokRParen TokColon TokArrow ]
## Transitions:
-- On TokComma shift to state 117
## Reductions:
-- On TokSemi reduce production in_operand_list -> in_operand
-- On TokRParen reduce production in_operand_list -> in_operand
-- On TokColon reduce production in_operand_list -> in_operand
-- On TokArrow reduce production in_operand_list -> in_operand

State 117:
## Known stack suffix:
## in_operand TokComma
## LR(1) items:
in_operand_list -> in_operand TokComma . in_operand_list [ TokSemi TokRParen TokColon TokArrow ]
## Transitions:
-- On TokUnder shift to state 11
-- On TokStar shift to state 12
-- On TokPercent shift to state 40
-- On TokIdent shift to state 14
-- On TokDollar shift to state 43
-- On TokCapIdent shift to state 45
-- On TokAt shift to state 46
-- On in_operand_name shift to state 54
-- On in_operand_list shift to state 118
-- On in_operand shift to state 116
## Reductions:

State 118:
## Known stack suffix:
## in_operand TokComma in_operand_list
## LR(1) items:
in_operand_list -> in_operand TokComma in_operand_list . [ TokSemi TokRParen TokColon TokArrow ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_operand_list -> in_operand TokComma in_operand_list

State 119:
## Known stack suffix:
## TokTrans TokIdent symbol_list_opt TokColon transform_list
## LR(1) items:
transform_statement -> TokTrans TokIdent symbol_list_opt TokColon transform_list . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production transform_statement -> TokTrans TokIdent symbol_list_opt TokColon transform_list

State 120:
## Known stack suffix:
## transform
## LR(1) items:
transform_list -> transform . TokSemi transform_list [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
transform_list -> transform . TokSemi [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokSemi shift to state 121
## Reductions:

State 121:
## Known stack suffix:
## transform TokSemi
## LR(1) items:
transform_list -> transform TokSemi . transform_list [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
transform_list -> transform TokSemi . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokIdent shift to state 10
-- On transform_list shift to state 122
-- On transform shift to state 120
## Reductions:
-- On TokTrivial reduce production transform_list -> transform TokSemi
-- On TokTrans reduce production transform_list -> transform TokSemi
-- On TokRegisters reduce production transform_list -> transform TokSemi
-- On TokOpen reduce production transform_list -> transform TokSemi
-- On TokName reduce production transform_list -> transform TokSemi
-- On TokInsts reduce production transform_list -> transform TokSemi
-- On TokInput reduce production transform_list -> transform TokSemi
-- On TokEof reduce production transform_list -> transform TokSemi

State 122:
## Known stack suffix:
## transform TokSemi transform_list
## LR(1) items:
transform_list -> transform TokSemi transform_list . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production transform_list -> transform TokSemi transform_list

State 123:
## Known stack suffix:
## symbol_list
## LR(1) items:
symbol_list_opt -> symbol_list . [ TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production symbol_list_opt -> symbol_list

State 124:
## Known stack suffix:
## TokRegisters
## LR(1) items:
register_statement -> TokRegisters . TokColon register_list [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokColon shift to state 125
## Reductions:

State 125:
## Known stack suffix:
## TokRegisters TokColon
## LR(1) items:
register_statement -> TokRegisters TokColon . register_list [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokPercent shift to state 126
-- On TokAt shift to state 128
-- On register_list shift to state 130
-- On register shift to state 131
## Reductions:

State 126:
## Known stack suffix:
## TokPercent
## LR(1) items:
register -> TokPercent . TokIdent [ TokSemi ]
## Transitions:
-- On TokIdent shift to state 127
## Reductions:

State 127:
## Known stack suffix:
## TokPercent TokIdent
## LR(1) items:
register -> TokPercent TokIdent . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production register -> TokPercent TokIdent

State 128:
## Known stack suffix:
## TokAt
## LR(1) items:
register -> TokAt . TokIdent [ TokSemi ]
## Transitions:
-- On TokIdent shift to state 129
## Reductions:

State 129:
## Known stack suffix:
## TokAt TokIdent
## LR(1) items:
register -> TokAt TokIdent . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production register -> TokAt TokIdent

State 130:
## Known stack suffix:
## TokRegisters TokColon register_list
## LR(1) items:
register_statement -> TokRegisters TokColon register_list . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production register_statement -> TokRegisters TokColon register_list

State 131:
## Known stack suffix:
## register
## LR(1) items:
register_list -> register . TokSemi register_list [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
register_list -> register . TokSemi [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokSemi shift to state 132
## Reductions:

State 132:
## Known stack suffix:
## register TokSemi
## LR(1) items:
register_list -> register TokSemi . register_list [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
register_list -> register TokSemi . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokPercent shift to state 126
-- On TokAt shift to state 128
-- On register_list shift to state 133
-- On register shift to state 131
## Reductions:
-- On TokTrivial reduce production register_list -> register TokSemi
-- On TokTrans reduce production register_list -> register TokSemi
-- On TokRegisters reduce production register_list -> register TokSemi
-- On TokOpen reduce production register_list -> register TokSemi
-- On TokName reduce production register_list -> register TokSemi
-- On TokInsts reduce production register_list -> register TokSemi
-- On TokInput reduce production register_list -> register TokSemi
-- On TokEof reduce production register_list -> register TokSemi

State 133:
## Known stack suffix:
## register TokSemi register_list
## LR(1) items:
register_list -> register TokSemi register_list . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production register_list -> register TokSemi register_list

State 134:
## Known stack suffix:
## TokOpen
## LR(1) items:
open_statement -> TokOpen . TokCapIdent [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokCapIdent shift to state 135
## Reductions:

State 135:
## Known stack suffix:
## TokOpen TokCapIdent
## LR(1) items:
open_statement -> TokOpen TokCapIdent . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production open_statement -> TokOpen TokCapIdent

State 136:
## Known stack suffix:
## TokName
## LR(1) items:
name_statement -> TokName . TokString [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokString shift to state 137
## Reductions:

State 137:
## Known stack suffix:
## TokName TokString
## LR(1) items:
name_statement -> TokName TokString . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production name_statement -> TokName TokString

State 138:
## Known stack suffix:
## TokInsts
## LR(1) items:
instruction_statement -> TokInsts . instruction_tags TokColon instruction_list [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokIdent shift to state 139
-- On instruction_tags shift to state 141
## Reductions:
-- On TokColon reduce production instruction_tags ->

State 139:
## Known stack suffix:
## TokIdent
## LR(1) items:
instruction_tags -> TokIdent . instruction_tags [ TokColon ]
## Transitions:
-- On TokIdent shift to state 139
-- On instruction_tags shift to state 140
## Reductions:
-- On TokColon reduce production instruction_tags ->

State 140:
## Known stack suffix:
## TokIdent instruction_tags
## LR(1) items:
instruction_tags -> TokIdent instruction_tags . [ TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction_tags -> TokIdent instruction_tags

State 141:
## Known stack suffix:
## TokInsts instruction_tags
## LR(1) items:
instruction_statement -> TokInsts instruction_tags . TokColon instruction_list [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokColon shift to state 142
## Reductions:

State 142:
## Known stack suffix:
## TokInsts instruction_tags TokColon
## LR(1) items:
instruction_statement -> TokInsts instruction_tags TokColon . instruction_list [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokIdent shift to state 143
-- On instruction_list shift to state 153
-- On instruction_data shift to state 154
-- On instruction shift to state 159
## Reductions:

State 143:
## Known stack suffix:
## TokIdent
## LR(1) items:
instruction_data -> TokIdent . TokArrow TokCapIdent [ TokSemi TokColon ]
instruction_data -> TokIdent . in_operand_list TokArrow TokCapIdent in_operand [ TokSemi TokColon ]
instruction_data -> TokIdent . in_operand_list TokArrow TokCapIdent TokLParen in_operand_list TokRParen [ TokSemi TokColon ]
## Transitions:
-- On TokUnder shift to state 11
-- On TokStar shift to state 12
-- On TokPercent shift to state 40
-- On TokIdent shift to state 14
-- On TokDollar shift to state 43
-- On TokCapIdent shift to state 45
-- On TokAt shift to state 46
-- On TokArrow shift to state 144
-- On in_operand_name shift to state 54
-- On in_operand_list shift to state 146
-- On in_operand shift to state 116
## Reductions:

State 144:
## Known stack suffix:
## TokIdent TokArrow
## LR(1) items:
instruction_data -> TokIdent TokArrow . TokCapIdent [ TokSemi TokColon ]
## Transitions:
-- On TokCapIdent shift to state 145
## Reductions:

State 145:
## Known stack suffix:
## TokIdent TokArrow TokCapIdent
## LR(1) items:
instruction_data -> TokIdent TokArrow TokCapIdent . [ TokSemi TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction_data -> TokIdent TokArrow TokCapIdent

State 146:
## Known stack suffix:
## TokIdent in_operand_list
## LR(1) items:
instruction_data -> TokIdent in_operand_list . TokArrow TokCapIdent in_operand [ TokSemi TokColon ]
instruction_data -> TokIdent in_operand_list . TokArrow TokCapIdent TokLParen in_operand_list TokRParen [ TokSemi TokColon ]
## Transitions:
-- On TokArrow shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## TokIdent in_operand_list TokArrow
## LR(1) items:
instruction_data -> TokIdent in_operand_list TokArrow . TokCapIdent in_operand [ TokSemi TokColon ]
instruction_data -> TokIdent in_operand_list TokArrow . TokCapIdent TokLParen in_operand_list TokRParen [ TokSemi TokColon ]
## Transitions:
-- On TokCapIdent shift to state 148
## Reductions:

State 148:
## Known stack suffix:
## TokIdent in_operand_list TokArrow TokCapIdent
## LR(1) items:
instruction_data -> TokIdent in_operand_list TokArrow TokCapIdent . in_operand [ TokSemi TokColon ]
instruction_data -> TokIdent in_operand_list TokArrow TokCapIdent . TokLParen in_operand_list TokRParen [ TokSemi TokColon ]
## Transitions:
-- On TokUnder shift to state 11
-- On TokStar shift to state 12
-- On TokPercent shift to state 40
-- On TokLParen shift to state 149
-- On TokIdent shift to state 14
-- On TokDollar shift to state 43
-- On TokCapIdent shift to state 45
-- On TokAt shift to state 46
-- On in_operand_name shift to state 54
-- On in_operand shift to state 152
## Reductions:

State 149:
## Known stack suffix:
## TokIdent in_operand_list TokArrow TokCapIdent TokLParen
## LR(1) items:
instruction_data -> TokIdent in_operand_list TokArrow TokCapIdent TokLParen . in_operand_list TokRParen [ TokSemi TokColon ]
## Transitions:
-- On TokUnder shift to state 11
-- On TokStar shift to state 12
-- On TokPercent shift to state 40
-- On TokIdent shift to state 14
-- On TokDollar shift to state 43
-- On TokCapIdent shift to state 45
-- On TokAt shift to state 46
-- On in_operand_name shift to state 54
-- On in_operand_list shift to state 150
-- On in_operand shift to state 116
## Reductions:

State 150:
## Known stack suffix:
## TokIdent in_operand_list TokArrow TokCapIdent TokLParen in_operand_list
## LR(1) items:
instruction_data -> TokIdent in_operand_list TokArrow TokCapIdent TokLParen in_operand_list . TokRParen [ TokSemi TokColon ]
## Transitions:
-- On TokRParen shift to state 151
## Reductions:

State 151:
## Known stack suffix:
## TokIdent in_operand_list TokArrow TokCapIdent TokLParen in_operand_list TokRParen
## LR(1) items:
instruction_data -> TokIdent in_operand_list TokArrow TokCapIdent TokLParen in_operand_list TokRParen . [ TokSemi TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction_data -> TokIdent in_operand_list TokArrow TokCapIdent TokLParen in_operand_list TokRParen

State 152:
## Known stack suffix:
## TokIdent in_operand_list TokArrow TokCapIdent in_operand
## LR(1) items:
instruction_data -> TokIdent in_operand_list TokArrow TokCapIdent in_operand . [ TokSemi TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction_data -> TokIdent in_operand_list TokArrow TokCapIdent in_operand

State 153:
## Known stack suffix:
## TokInsts instruction_tags TokColon instruction_list
## LR(1) items:
instruction_statement -> TokInsts instruction_tags TokColon instruction_list . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction_statement -> TokInsts instruction_tags TokColon instruction_list

State 154:
## Known stack suffix:
## instruction_data
## LR(1) items:
instruction -> instruction_data . TokColon instruction_tag_list [ TokSemi ]
instruction -> instruction_data . [ TokSemi ]
## Transitions:
-- On TokColon shift to state 155
## Reductions:
-- On TokSemi reduce production instruction -> instruction_data

State 155:
## Known stack suffix:
## instruction_data TokColon
## LR(1) items:
instruction -> instruction_data TokColon . instruction_tag_list [ TokSemi ]
## Transitions:
-- On TokIdent shift to state 156
-- On instruction_tag_list shift to state 158
## Reductions:

State 156:
## Known stack suffix:
## TokIdent
## LR(1) items:
instruction_tag_list -> TokIdent . instruction_tag_list [ TokSemi ]
instruction_tag_list -> TokIdent . [ TokSemi ]
## Transitions:
-- On TokIdent shift to state 156
-- On instruction_tag_list shift to state 157
## Reductions:
-- On TokSemi reduce production instruction_tag_list -> TokIdent

State 157:
## Known stack suffix:
## TokIdent instruction_tag_list
## LR(1) items:
instruction_tag_list -> TokIdent instruction_tag_list . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction_tag_list -> TokIdent instruction_tag_list

State 158:
## Known stack suffix:
## instruction_data TokColon instruction_tag_list
## LR(1) items:
instruction -> instruction_data TokColon instruction_tag_list . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> instruction_data TokColon instruction_tag_list

State 159:
## Known stack suffix:
## instruction
## LR(1) items:
instruction_list -> instruction . TokSemi instruction_list [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
instruction_list -> instruction . TokSemi [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokSemi shift to state 160
## Reductions:

State 160:
## Known stack suffix:
## instruction TokSemi
## LR(1) items:
instruction_list -> instruction TokSemi . instruction_list [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
instruction_list -> instruction TokSemi . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokIdent shift to state 143
-- On instruction_list shift to state 161
-- On instruction_data shift to state 154
-- On instruction shift to state 159
## Reductions:
-- On TokTrivial reduce production instruction_list -> instruction TokSemi
-- On TokTrans reduce production instruction_list -> instruction TokSemi
-- On TokRegisters reduce production instruction_list -> instruction TokSemi
-- On TokOpen reduce production instruction_list -> instruction TokSemi
-- On TokName reduce production instruction_list -> instruction TokSemi
-- On TokInsts reduce production instruction_list -> instruction TokSemi
-- On TokInput reduce production instruction_list -> instruction TokSemi
-- On TokEof reduce production instruction_list -> instruction TokSemi

State 161:
## Known stack suffix:
## instruction TokSemi instruction_list
## LR(1) items:
instruction_list -> instruction TokSemi instruction_list . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction_list -> instruction TokSemi instruction_list

State 162:
## Known stack suffix:
## TokInput
## LR(1) items:
io_input -> TokInput . io_name TokColon in_pattern_list TokWhen clause_expr [ TokOutput TokInput ]
io_input -> TokInput . io_name TokColon in_pattern_list [ TokOutput TokInput ]
## Transitions:
-- On TokString shift to state 163
-- On io_name shift to state 164
## Reductions:
-- On TokColon reduce production io_name ->

State 163:
## Known stack suffix:
## TokString
## LR(1) items:
io_name -> TokString . [ TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production io_name -> TokString

State 164:
## Known stack suffix:
## TokInput io_name
## LR(1) items:
io_input -> TokInput io_name . TokColon in_pattern_list TokWhen clause_expr [ TokOutput TokInput ]
io_input -> TokInput io_name . TokColon in_pattern_list [ TokOutput TokInput ]
## Transitions:
-- On TokColon shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## TokInput io_name TokColon
## LR(1) items:
io_input -> TokInput io_name TokColon . in_pattern_list TokWhen clause_expr [ TokOutput TokInput ]
io_input -> TokInput io_name TokColon . in_pattern_list [ TokOutput TokInput ]
## Transitions:
-- On TokUnder shift to state 166
-- On TokStar shift to state 205
-- On TokIdent shift to state 207
-- On TokCapIdent shift to state 208
-- On opcode_name shift to state 209
-- On in_pattern_list shift to state 212
-- On in_pattern_expr shift to state 235
## Reductions:

State 166:
## Known stack suffix:
## TokUnder
## LR(1) items:
in_pattern_expr -> TokUnder . inst_modifier_list_opt [ TokSemi ]
## Transitions:
-- On TokColon shift to state 167
-- On inst_modifier_list_opt shift to state 204
## Reductions:
-- On TokSemi reduce production inst_modifier_list_opt ->

State 167:
## Known stack suffix:
## TokColon
## LR(1) items:
inst_modifier_list_opt -> TokColon . inst_modifier_list [ TokSemi ]
## Transitions:
-- On TokPreserves shift to state 168
-- On TokIrrelevant shift to state 178
-- On TokIgnores shift to state 179
-- On TokIdent shift to state 189
-- On TokEndscope shift to state 190
-- On TokDead shift to state 192
-- On inst_modifier_list shift to state 201
-- On inst_modifier shift to state 202
## Reductions:

State 168:
## Known stack suffix:
## TokPreserves
## LR(1) items:
inst_modifier -> TokPreserves . preserves_item [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
inst_modifier -> TokPreserves . TokLBrack preserves_list TokRBrack [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
-- On TokMemory shift to state 169
-- On TokLBrack shift to state 170
-- On TokIdent shift to state 171
-- On preserves_item shift to state 177
## Reductions:

State 169:
## Known stack suffix:
## TokMemory
## LR(1) items:
preserves_item -> TokMemory . [ TokSemi TokRBrack TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production preserves_item -> TokMemory

State 170:
## Known stack suffix:
## TokPreserves TokLBrack
## LR(1) items:
inst_modifier -> TokPreserves TokLBrack . preserves_list TokRBrack [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
-- On TokMemory shift to state 169
-- On TokIdent shift to state 171
-- On preserves_list shift to state 172
-- On preserves_item shift to state 174
## Reductions:

State 171:
## Known stack suffix:
## TokIdent
## LR(1) items:
preserves_item -> TokIdent . [ TokSemi TokRBrack TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production preserves_item -> TokIdent

State 172:
## Known stack suffix:
## TokPreserves TokLBrack preserves_list
## LR(1) items:
inst_modifier -> TokPreserves TokLBrack preserves_list . TokRBrack [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
-- On TokRBrack shift to state 173
## Reductions:

State 173:
## Known stack suffix:
## TokPreserves TokLBrack preserves_list TokRBrack
## LR(1) items:
inst_modifier -> TokPreserves TokLBrack preserves_list TokRBrack . [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inst_modifier -> TokPreserves TokLBrack preserves_list TokRBrack

State 174:
## Known stack suffix:
## preserves_item
## LR(1) items:
preserves_list -> preserves_item . TokSemi preserves_list [ TokRBrack ]
preserves_list -> preserves_item . [ TokRBrack ]
## Transitions:
-- On TokSemi shift to state 175
## Reductions:
-- On TokRBrack reduce production preserves_list -> preserves_item

State 175:
## Known stack suffix:
## preserves_item TokSemi
## LR(1) items:
preserves_list -> preserves_item TokSemi . preserves_list [ TokRBrack ]
## Transitions:
-- On TokMemory shift to state 169
-- On TokIdent shift to state 171
-- On preserves_list shift to state 176
-- On preserves_item shift to state 174
## Reductions:

State 176:
## Known stack suffix:
## preserves_item TokSemi preserves_list
## LR(1) items:
preserves_list -> preserves_item TokSemi preserves_list . [ TokRBrack ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production preserves_list -> preserves_item TokSemi preserves_list

State 177:
## Known stack suffix:
## TokPreserves preserves_item
## LR(1) items:
inst_modifier -> TokPreserves preserves_item . [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inst_modifier -> TokPreserves preserves_item

State 178:
## Known stack suffix:
## TokIrrelevant
## LR(1) items:
inst_modifier -> TokIrrelevant . [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inst_modifier -> TokIrrelevant

State 179:
## Known stack suffix:
## TokIgnores
## LR(1) items:
inst_modifier -> TokIgnores . ignores_item [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
inst_modifier -> TokIgnores . TokLBrack ignores_list TokRBrack [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
-- On TokMemory shift to state 180
-- On TokLBrack shift to state 181
-- On TokIdent shift to state 182
-- On ignores_item shift to state 188
## Reductions:

State 180:
## Known stack suffix:
## TokMemory
## LR(1) items:
ignores_item -> TokMemory . [ TokSemi TokRBrack TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ignores_item -> TokMemory

State 181:
## Known stack suffix:
## TokIgnores TokLBrack
## LR(1) items:
inst_modifier -> TokIgnores TokLBrack . ignores_list TokRBrack [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
-- On TokMemory shift to state 180
-- On TokIdent shift to state 182
-- On ignores_list shift to state 183
-- On ignores_item shift to state 185
## Reductions:

State 182:
## Known stack suffix:
## TokIdent
## LR(1) items:
ignores_item -> TokIdent . [ TokSemi TokRBrack TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ignores_item -> TokIdent

State 183:
## Known stack suffix:
## TokIgnores TokLBrack ignores_list
## LR(1) items:
inst_modifier -> TokIgnores TokLBrack ignores_list . TokRBrack [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
-- On TokRBrack shift to state 184
## Reductions:

State 184:
## Known stack suffix:
## TokIgnores TokLBrack ignores_list TokRBrack
## LR(1) items:
inst_modifier -> TokIgnores TokLBrack ignores_list TokRBrack . [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inst_modifier -> TokIgnores TokLBrack ignores_list TokRBrack

State 185:
## Known stack suffix:
## ignores_item
## LR(1) items:
ignores_list -> ignores_item . TokSemi ignores_list [ TokRBrack ]
ignores_list -> ignores_item . [ TokRBrack ]
## Transitions:
-- On TokSemi shift to state 186
## Reductions:
-- On TokRBrack reduce production ignores_list -> ignores_item

State 186:
## Known stack suffix:
## ignores_item TokSemi
## LR(1) items:
ignores_list -> ignores_item TokSemi . ignores_list [ TokRBrack ]
## Transitions:
-- On TokMemory shift to state 180
-- On TokIdent shift to state 182
-- On ignores_list shift to state 187
-- On ignores_item shift to state 185
## Reductions:

State 187:
## Known stack suffix:
## ignores_item TokSemi ignores_list
## LR(1) items:
ignores_list -> ignores_item TokSemi ignores_list . [ TokRBrack ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ignores_list -> ignores_item TokSemi ignores_list

State 188:
## Known stack suffix:
## TokIgnores ignores_item
## LR(1) items:
inst_modifier -> TokIgnores ignores_item . [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inst_modifier -> TokIgnores ignores_item

State 189:
## Known stack suffix:
## TokIdent
## LR(1) items:
inst_modifier -> TokIdent . [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inst_modifier -> TokIdent

State 190:
## Known stack suffix:
## TokEndscope
## LR(1) items:
inst_modifier -> TokEndscope . TokIdent [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
-- On TokIdent shift to state 191
## Reductions:

State 191:
## Known stack suffix:
## TokEndscope TokIdent
## LR(1) items:
inst_modifier -> TokEndscope TokIdent . [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inst_modifier -> TokEndscope TokIdent

State 192:
## Known stack suffix:
## TokDead
## LR(1) items:
inst_modifier -> TokDead . dead_item [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
inst_modifier -> TokDead . TokLBrack dead_list TokRBrack [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
-- On TokLBrack shift to state 193
-- On TokIdent shift to state 194
-- On dead_item shift to state 200
## Reductions:

State 193:
## Known stack suffix:
## TokDead TokLBrack
## LR(1) items:
inst_modifier -> TokDead TokLBrack . dead_list TokRBrack [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
-- On TokIdent shift to state 194
-- On dead_list shift to state 195
-- On dead_item shift to state 197
## Reductions:

State 194:
## Known stack suffix:
## TokIdent
## LR(1) items:
dead_item -> TokIdent . [ TokSemi TokRBrack TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dead_item -> TokIdent

State 195:
## Known stack suffix:
## TokDead TokLBrack dead_list
## LR(1) items:
inst_modifier -> TokDead TokLBrack dead_list . TokRBrack [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
-- On TokRBrack shift to state 196
## Reductions:

State 196:
## Known stack suffix:
## TokDead TokLBrack dead_list TokRBrack
## LR(1) items:
inst_modifier -> TokDead TokLBrack dead_list TokRBrack . [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inst_modifier -> TokDead TokLBrack dead_list TokRBrack

State 197:
## Known stack suffix:
## dead_item
## LR(1) items:
dead_list -> dead_item . TokSemi dead_list [ TokRBrack ]
dead_list -> dead_item . [ TokRBrack ]
## Transitions:
-- On TokSemi shift to state 198
## Reductions:
-- On TokRBrack reduce production dead_list -> dead_item

State 198:
## Known stack suffix:
## dead_item TokSemi
## LR(1) items:
dead_list -> dead_item TokSemi . dead_list [ TokRBrack ]
## Transitions:
-- On TokIdent shift to state 194
-- On dead_list shift to state 199
-- On dead_item shift to state 197
## Reductions:

State 199:
## Known stack suffix:
## dead_item TokSemi dead_list
## LR(1) items:
dead_list -> dead_item TokSemi dead_list . [ TokRBrack ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dead_list -> dead_item TokSemi dead_list

State 200:
## Known stack suffix:
## TokDead dead_item
## LR(1) items:
inst_modifier -> TokDead dead_item . [ TokSemi TokPreserves TokIrrelevant TokIgnores TokIdent TokEndscope TokDead ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inst_modifier -> TokDead dead_item

State 201:
## Known stack suffix:
## TokColon inst_modifier_list
## LR(1) items:
inst_modifier_list_opt -> TokColon inst_modifier_list . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inst_modifier_list_opt -> TokColon inst_modifier_list

State 202:
## Known stack suffix:
## inst_modifier
## LR(1) items:
inst_modifier_list -> inst_modifier . inst_modifier_list [ TokSemi ]
inst_modifier_list -> inst_modifier . [ TokSemi ]
## Transitions:
-- On TokPreserves shift to state 168
-- On TokIrrelevant shift to state 178
-- On TokIgnores shift to state 179
-- On TokIdent shift to state 189
-- On TokEndscope shift to state 190
-- On TokDead shift to state 192
-- On inst_modifier_list shift to state 203
-- On inst_modifier shift to state 202
## Reductions:
-- On TokSemi reduce production inst_modifier_list -> inst_modifier

State 203:
## Known stack suffix:
## inst_modifier inst_modifier_list
## LR(1) items:
inst_modifier_list -> inst_modifier inst_modifier_list . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inst_modifier_list -> inst_modifier inst_modifier_list

State 204:
## Known stack suffix:
## TokUnder inst_modifier_list_opt
## LR(1) items:
in_pattern_expr -> TokUnder inst_modifier_list_opt . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_pattern_expr -> TokUnder inst_modifier_list_opt

State 205:
## Known stack suffix:
## TokStar
## LR(1) items:
in_pattern_expr -> TokStar . inst_modifier_list_opt [ TokSemi ]
## Transitions:
-- On TokColon shift to state 167
-- On inst_modifier_list_opt shift to state 206
## Reductions:
-- On TokSemi reduce production inst_modifier_list_opt ->

State 206:
## Known stack suffix:
## TokStar inst_modifier_list_opt
## LR(1) items:
in_pattern_expr -> TokStar inst_modifier_list_opt . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_pattern_expr -> TokStar inst_modifier_list_opt

State 207:
## Known stack suffix:
## TokIdent
## LR(1) items:
opcode_name -> TokIdent . [ TokUnder TokStar TokSemi TokPercent TokIdent TokDollar TokColon TokCapIdent TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opcode_name -> TokIdent

State 208:
## Known stack suffix:
## TokCapIdent
## LR(1) items:
opcode_name -> TokCapIdent . [ TokUnder TokStar TokSemi TokPercent TokIdent TokDollar TokColon TokCapIdent TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production opcode_name -> TokCapIdent

State 209:
## Known stack suffix:
## opcode_name
## LR(1) items:
in_pattern_expr -> opcode_name . in_operand_list_opt inst_modifier_list_opt [ TokSemi ]
## Transitions:
-- On TokUnder shift to state 11
-- On TokStar shift to state 12
-- On TokPercent shift to state 40
-- On TokIdent shift to state 14
-- On TokDollar shift to state 43
-- On TokCapIdent shift to state 45
-- On TokAt shift to state 46
-- On in_operand_name shift to state 54
-- On in_operand_list_opt shift to state 210
-- On in_operand_list shift to state 115
-- On in_operand shift to state 116
## Reductions:
-- On TokSemi reduce production in_operand_list_opt ->
-- On TokColon reduce production in_operand_list_opt ->

State 210:
## Known stack suffix:
## opcode_name in_operand_list_opt
## LR(1) items:
in_pattern_expr -> opcode_name in_operand_list_opt . inst_modifier_list_opt [ TokSemi ]
## Transitions:
-- On TokColon shift to state 167
-- On inst_modifier_list_opt shift to state 211
## Reductions:
-- On TokSemi reduce production inst_modifier_list_opt ->

State 211:
## Known stack suffix:
## opcode_name in_operand_list_opt inst_modifier_list_opt
## LR(1) items:
in_pattern_expr -> opcode_name in_operand_list_opt inst_modifier_list_opt . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_pattern_expr -> opcode_name in_operand_list_opt inst_modifier_list_opt

State 212:
## Known stack suffix:
## TokInput io_name TokColon in_pattern_list
## LR(1) items:
io_input -> TokInput io_name TokColon in_pattern_list . TokWhen clause_expr [ TokOutput TokInput ]
io_input -> TokInput io_name TokColon in_pattern_list . [ TokOutput TokInput ]
## Transitions:
-- On TokWhen shift to state 213
## Reductions:
-- On TokOutput reduce production io_input -> TokInput io_name TokColon in_pattern_list
-- On TokInput reduce production io_input -> TokInput io_name TokColon in_pattern_list

State 213:
## Known stack suffix:
## TokInput io_name TokColon in_pattern_list TokWhen
## LR(1) items:
io_input -> TokInput io_name TokColon in_pattern_list TokWhen . clause_expr [ TokOutput TokInput ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokOCaml shift to state 214
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 215
-- On TokIspower2 shift to state 216
-- On TokInt shift to state 69
-- On TokIdent shift to state 70
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On clause_expr shift to state 234
-- On arith_expr shift to state 224
## Reductions:

State 214:
## Known stack suffix:
## TokOCaml
## LR(1) items:
clause_expr -> TokOCaml . [ TokRParen TokPipePipe TokOutput TokInput TokColon TokAmpAmp ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production clause_expr -> TokOCaml

State 215:
## Known stack suffix:
## TokLParen
## LR(1) items:
arith_expr -> TokLParen . arith_expr TokRParen [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokNotEqual TokMinus TokLessThan TokLessEqual TokGreaterThan TokGreaterEqual TokEqual TokAmp ]
clause_expr -> TokLParen . clause_expr TokRParen [ TokRParen TokPipePipe TokOutput TokInput TokColon TokAmpAmp ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokOCaml shift to state 214
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 215
-- On TokIspower2 shift to state 216
-- On TokInt shift to state 69
-- On TokIdent shift to state 70
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On clause_expr shift to state 218
-- On arith_expr shift to state 233
## Reductions:

State 216:
## Known stack suffix:
## TokIspower2
## LR(1) items:
clause_expr -> TokIspower2 . arith_expr [ TokRParen TokPipePipe TokOutput TokInput TokColon TokAmpAmp ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 68
-- On TokInt shift to state 69
-- On TokIdent shift to state 70
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On arith_expr shift to state 217
## Reductions:

State 217:
## Known stack suffix:
## TokIspower2 arith_expr
## LR(1) items:
arith_expr -> arith_expr . plus_minus_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokMinus TokInput TokColon TokAmpAmp TokAmp ]
arith_expr -> arith_expr . logical_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokMinus TokInput TokColon TokAmpAmp TokAmp ]
arith_expr -> arith_expr . shift_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokMinus TokInput TokColon TokAmpAmp TokAmp ]
clause_expr -> TokIspower2 arith_expr . [ TokRParen TokPipePipe TokOutput TokInput TokColon TokAmpAmp ]
## Transitions:
-- On TokShr shift to state 85
-- On TokShl shift to state 86
-- On TokSar shift to state 87
-- On TokPlus shift to state 76
-- On TokPipe shift to state 77
-- On TokMinus shift to state 78
-- On TokAmp shift to state 79
-- On shift_op shift to state 74
-- On plus_minus_op shift to state 80
-- On logical_op shift to state 82
## Reductions:
-- On TokRParen reduce production clause_expr -> TokIspower2 arith_expr
-- On TokPipePipe reduce production clause_expr -> TokIspower2 arith_expr
-- On TokOutput reduce production clause_expr -> TokIspower2 arith_expr
-- On TokInput reduce production clause_expr -> TokIspower2 arith_expr
-- On TokColon reduce production clause_expr -> TokIspower2 arith_expr
-- On TokAmpAmp reduce production clause_expr -> TokIspower2 arith_expr

State 218:
## Known stack suffix:
## TokLParen clause_expr
## LR(1) items:
clause_expr -> TokLParen clause_expr . TokRParen [ TokRParen TokPipePipe TokOutput TokInput TokColon TokAmpAmp ]
clause_expr -> clause_expr . bool_op clause_expr [ TokRParen TokPipePipe TokAmpAmp ]
## Transitions:
-- On TokRParen shift to state 219
-- On TokPipePipe shift to state 220
-- On TokAmpAmp shift to state 221
-- On bool_op shift to state 222
## Reductions:

State 219:
## Known stack suffix:
## TokLParen clause_expr TokRParen
## LR(1) items:
clause_expr -> TokLParen clause_expr TokRParen . [ TokRParen TokPipePipe TokOutput TokInput TokColon TokAmpAmp ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production clause_expr -> TokLParen clause_expr TokRParen

State 220:
## Known stack suffix:
## TokPipePipe
## LR(1) items:
bool_op -> TokPipePipe . [ TokTilde TokPow2 TokOCaml TokMinus TokLog2 TokLParen TokIspower2 TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bool_op -> TokPipePipe

State 221:
## Known stack suffix:
## TokAmpAmp
## LR(1) items:
bool_op -> TokAmpAmp . [ TokTilde TokPow2 TokOCaml TokMinus TokLog2 TokLParen TokIspower2 TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bool_op -> TokAmpAmp

State 222:
## Known stack suffix:
## clause_expr bool_op
## LR(1) items:
clause_expr -> clause_expr bool_op . clause_expr [ TokRParen TokPipePipe TokOutput TokInput TokColon TokAmpAmp ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokOCaml shift to state 214
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 215
-- On TokIspower2 shift to state 216
-- On TokInt shift to state 69
-- On TokIdent shift to state 70
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On clause_expr shift to state 223
-- On arith_expr shift to state 224
## Reductions:

State 223:
## Known stack suffix:
## clause_expr bool_op clause_expr
## LR(1) items:
clause_expr -> clause_expr . bool_op clause_expr [ TokRParen TokPipePipe TokOutput TokInput TokColon TokAmpAmp ]
clause_expr -> clause_expr bool_op clause_expr . [ TokRParen TokPipePipe TokOutput TokInput TokColon TokAmpAmp ]
## Transitions:
-- On bool_op shift to state 222
## Default reduction:
-- After reading the next token, reduce production clause_expr -> clause_expr bool_op clause_expr

State 224:
## Known stack suffix:
## arith_expr
## LR(1) items:
arith_expr -> arith_expr . plus_minus_op arith_expr [ TokShr TokShl TokSar TokPlus TokPipe TokNotEqual TokMinus TokLessThan TokLessEqual TokGreaterThan TokGreaterEqual TokEqual TokAmp ]
arith_expr -> arith_expr . logical_op arith_expr [ TokShr TokShl TokSar TokPlus TokPipe TokNotEqual TokMinus TokLessThan TokLessEqual TokGreaterThan TokGreaterEqual TokEqual TokAmp ]
arith_expr -> arith_expr . shift_op arith_expr [ TokShr TokShl TokSar TokPlus TokPipe TokNotEqual TokMinus TokLessThan TokLessEqual TokGreaterThan TokGreaterEqual TokEqual TokAmp ]
clause_expr -> arith_expr . relop arith_expr [ TokRParen TokPipePipe TokOutput TokInput TokColon TokAmpAmp ]
## Transitions:
-- On TokShr shift to state 85
-- On TokShl shift to state 86
-- On TokSar shift to state 87
-- On TokPlus shift to state 76
-- On TokPipe shift to state 77
-- On TokNotEqual shift to state 225
-- On TokMinus shift to state 78
-- On TokLessThan shift to state 226
-- On TokLessEqual shift to state 227
-- On TokGreaterThan shift to state 228
-- On TokGreaterEqual shift to state 229
-- On TokEqual shift to state 230
-- On TokAmp shift to state 79
-- On shift_op shift to state 74
-- On relop shift to state 231
-- On plus_minus_op shift to state 80
-- On logical_op shift to state 82
## Reductions:

State 225:
## Known stack suffix:
## TokNotEqual
## LR(1) items:
relop -> TokNotEqual . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relop -> TokNotEqual

State 226:
## Known stack suffix:
## TokLessThan
## LR(1) items:
relop -> TokLessThan . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relop -> TokLessThan

State 227:
## Known stack suffix:
## TokLessEqual
## LR(1) items:
relop -> TokLessEqual . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relop -> TokLessEqual

State 228:
## Known stack suffix:
## TokGreaterThan
## LR(1) items:
relop -> TokGreaterThan . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relop -> TokGreaterThan

State 229:
## Known stack suffix:
## TokGreaterEqual
## LR(1) items:
relop -> TokGreaterEqual . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relop -> TokGreaterEqual

State 230:
## Known stack suffix:
## TokEqual
## LR(1) items:
relop -> TokEqual . [ TokTilde TokPow2 TokMinus TokLog2 TokLParen TokInt TokIdent TokAbs ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relop -> TokEqual

State 231:
## Known stack suffix:
## arith_expr relop
## LR(1) items:
clause_expr -> arith_expr relop . arith_expr [ TokRParen TokPipePipe TokOutput TokInput TokColon TokAmpAmp ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 68
-- On TokInt shift to state 69
-- On TokIdent shift to state 70
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On arith_expr shift to state 232
## Reductions:

State 232:
## Known stack suffix:
## arith_expr relop arith_expr
## LR(1) items:
arith_expr -> arith_expr . plus_minus_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokMinus TokInput TokColon TokAmpAmp TokAmp ]
arith_expr -> arith_expr . logical_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokMinus TokInput TokColon TokAmpAmp TokAmp ]
arith_expr -> arith_expr . shift_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipePipe TokPipe TokOutput TokMinus TokInput TokColon TokAmpAmp TokAmp ]
clause_expr -> arith_expr relop arith_expr . [ TokRParen TokPipePipe TokOutput TokInput TokColon TokAmpAmp ]
## Transitions:
-- On TokShr shift to state 85
-- On TokShl shift to state 86
-- On TokSar shift to state 87
-- On TokPlus shift to state 76
-- On TokPipe shift to state 77
-- On TokMinus shift to state 78
-- On TokAmp shift to state 79
-- On shift_op shift to state 74
-- On plus_minus_op shift to state 80
-- On logical_op shift to state 82
## Reductions:
-- On TokRParen reduce production clause_expr -> arith_expr relop arith_expr
-- On TokPipePipe reduce production clause_expr -> arith_expr relop arith_expr
-- On TokOutput reduce production clause_expr -> arith_expr relop arith_expr
-- On TokInput reduce production clause_expr -> arith_expr relop arith_expr
-- On TokColon reduce production clause_expr -> arith_expr relop arith_expr
-- On TokAmpAmp reduce production clause_expr -> arith_expr relop arith_expr

State 233:
## Known stack suffix:
## TokLParen arith_expr
## LR(1) items:
arith_expr -> TokLParen arith_expr . TokRParen [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokNotEqual TokMinus TokLessThan TokLessEqual TokGreaterThan TokGreaterEqual TokEqual TokAmp ]
arith_expr -> arith_expr . plus_minus_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokNotEqual TokMinus TokLessThan TokLessEqual TokGreaterThan TokGreaterEqual TokEqual TokAmp ]
arith_expr -> arith_expr . logical_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokNotEqual TokMinus TokLessThan TokLessEqual TokGreaterThan TokGreaterEqual TokEqual TokAmp ]
arith_expr -> arith_expr . shift_op arith_expr [ TokShr TokShl TokSar TokRParen TokPlus TokPipe TokNotEqual TokMinus TokLessThan TokLessEqual TokGreaterThan TokGreaterEqual TokEqual TokAmp ]
clause_expr -> arith_expr . relop arith_expr [ TokRParen TokPipePipe TokAmpAmp ]
## Transitions:
-- On TokShr shift to state 85
-- On TokShl shift to state 86
-- On TokSar shift to state 87
-- On TokRParen shift to state 88
-- On TokPlus shift to state 76
-- On TokPipe shift to state 77
-- On TokNotEqual shift to state 225
-- On TokMinus shift to state 78
-- On TokLessThan shift to state 226
-- On TokLessEqual shift to state 227
-- On TokGreaterThan shift to state 228
-- On TokGreaterEqual shift to state 229
-- On TokEqual shift to state 230
-- On TokAmp shift to state 79
-- On shift_op shift to state 74
-- On relop shift to state 231
-- On plus_minus_op shift to state 80
-- On logical_op shift to state 82
## Reductions:

State 234:
## Known stack suffix:
## TokInput io_name TokColon in_pattern_list TokWhen clause_expr
## LR(1) items:
clause_expr -> clause_expr . bool_op clause_expr [ TokPipePipe TokOutput TokInput TokAmpAmp ]
io_input -> TokInput io_name TokColon in_pattern_list TokWhen clause_expr . [ TokOutput TokInput ]
## Transitions:
-- On TokPipePipe shift to state 220
-- On TokAmpAmp shift to state 221
-- On bool_op shift to state 222
## Reductions:
-- On TokOutput reduce production io_input -> TokInput io_name TokColon in_pattern_list TokWhen clause_expr
-- On TokInput reduce production io_input -> TokInput io_name TokColon in_pattern_list TokWhen clause_expr

State 235:
## Known stack suffix:
## in_pattern_expr
## LR(1) items:
in_pattern_list -> in_pattern_expr . TokSemi in_pattern_list [ TokWhen TokOutput TokInput ]
in_pattern_list -> in_pattern_expr . TokSemi [ TokWhen TokOutput TokInput ]
## Transitions:
-- On TokSemi shift to state 236
## Reductions:

State 236:
## Known stack suffix:
## in_pattern_expr TokSemi
## LR(1) items:
in_pattern_list -> in_pattern_expr TokSemi . in_pattern_list [ TokWhen TokOutput TokInput ]
in_pattern_list -> in_pattern_expr TokSemi . [ TokWhen TokOutput TokInput ]
## Transitions:
-- On TokUnder shift to state 166
-- On TokStar shift to state 205
-- On TokIdent shift to state 207
-- On TokCapIdent shift to state 208
-- On opcode_name shift to state 209
-- On in_pattern_list shift to state 237
-- On in_pattern_expr shift to state 235
## Reductions:
-- On TokWhen reduce production in_pattern_list -> in_pattern_expr TokSemi
-- On TokOutput reduce production in_pattern_list -> in_pattern_expr TokSemi
-- On TokInput reduce production in_pattern_list -> in_pattern_expr TokSemi

State 237:
## Known stack suffix:
## in_pattern_expr TokSemi in_pattern_list
## LR(1) items:
in_pattern_list -> in_pattern_expr TokSemi in_pattern_list . [ TokWhen TokOutput TokInput ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_pattern_list -> in_pattern_expr TokSemi in_pattern_list

State 238:
## Known stack suffix:
## TokEof
## LR(1) items:
prog -> TokEof . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production prog -> TokEof

State 239:
## Known stack suffix:
## trivial_statement
## LR(1) items:
expr -> trivial_statement . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> trivial_statement

State 240:
## Known stack suffix:
## transform_statement
## LR(1) items:
expr -> transform_statement . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> transform_statement

State 241:
## Known stack suffix:
## register_statement
## LR(1) items:
expr -> register_statement . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> register_statement

State 242:
## Known stack suffix:
## prog
## LR(1) items:
prog' -> prog . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept prog

State 243:
## Known stack suffix:
## open_statement
## LR(1) items:
expr -> open_statement . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> open_statement

State 244:
## Known stack suffix:
## name_statement
## LR(1) items:
expr -> name_statement . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> name_statement

State 245:
## Known stack suffix:
## io_input_list
## LR(1) items:
input_output_statement -> io_input_list . io_output_list [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokOutput shift to state 246
-- On io_output_list shift to state 274
-- On io_output shift to state 275
## Reductions:

State 246:
## Known stack suffix:
## TokOutput
## LR(1) items:
io_output -> TokOutput . TokWhen clause_expr TokColon out_pattern_list_opt [ TokTrivial TokTrans TokRegisters TokOutput TokOpen TokName TokInsts TokInput TokEof ]
io_output -> TokOutput . TokColon out_pattern_list_opt [ TokTrivial TokTrans TokRegisters TokOutput TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokWhen shift to state 247
-- On TokColon shift to state 272
## Reductions:

State 247:
## Known stack suffix:
## TokOutput TokWhen
## LR(1) items:
io_output -> TokOutput TokWhen . clause_expr TokColon out_pattern_list_opt [ TokTrivial TokTrans TokRegisters TokOutput TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokOCaml shift to state 214
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 215
-- On TokIspower2 shift to state 216
-- On TokInt shift to state 69
-- On TokIdent shift to state 70
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On clause_expr shift to state 248
-- On arith_expr shift to state 224
## Reductions:

State 248:
## Known stack suffix:
## TokOutput TokWhen clause_expr
## LR(1) items:
clause_expr -> clause_expr . bool_op clause_expr [ TokPipePipe TokColon TokAmpAmp ]
io_output -> TokOutput TokWhen clause_expr . TokColon out_pattern_list_opt [ TokTrivial TokTrans TokRegisters TokOutput TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokPipePipe shift to state 220
-- On TokColon shift to state 249
-- On TokAmpAmp shift to state 221
-- On bool_op shift to state 222
## Reductions:

State 249:
## Known stack suffix:
## TokOutput TokWhen clause_expr TokColon
## LR(1) items:
io_output -> TokOutput TokWhen clause_expr TokColon . out_pattern_list_opt [ TokTrivial TokTrans TokRegisters TokOutput TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokNew shift to state 250
-- On TokIdent shift to state 253
-- On TokCopy shift to state 260
-- On TokCapIdent shift to state 208
-- On out_pattern_list_opt shift to state 265
-- On out_pattern_list shift to state 266
-- On out_pattern_expr shift to state 267
-- On opcode_name shift to state 270
## Reductions:
-- On TokTrivial reduce production out_pattern_list_opt ->
-- On TokTrans reduce production out_pattern_list_opt ->
-- On TokRegisters reduce production out_pattern_list_opt ->
-- On TokOutput reduce production out_pattern_list_opt ->
-- On TokOpen reduce production out_pattern_list_opt ->
-- On TokName reduce production out_pattern_list_opt ->
-- On TokInsts reduce production out_pattern_list_opt ->
-- On TokInput reduce production out_pattern_list_opt ->
-- On TokEof reduce production out_pattern_list_opt ->

State 250:
## Known stack suffix:
## TokNew
## LR(1) items:
out_pattern_expr -> TokNew . TokPercent TokIdent [ TokSemi ]
## Transitions:
-- On TokPercent shift to state 251
## Reductions:

State 251:
## Known stack suffix:
## TokNew TokPercent
## LR(1) items:
out_pattern_expr -> TokNew TokPercent . TokIdent [ TokSemi ]
## Transitions:
-- On TokIdent shift to state 252
## Reductions:

State 252:
## Known stack suffix:
## TokNew TokPercent TokIdent
## LR(1) items:
out_pattern_expr -> TokNew TokPercent TokIdent . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_pattern_expr -> TokNew TokPercent TokIdent

State 253:
## Known stack suffix:
## TokIdent
## LR(1) items:
opcode_name -> TokIdent . [ TokStar TokSemi TokPercent TokIdent TokDollar TokCapIdent TokAt ]
out_pattern_expr -> TokIdent . TokInt TokComma arith_expr_list [ TokSemi ]
out_pattern_expr -> TokIdent . TokInt [ TokSemi ]
## Transitions:
-- On TokInt shift to state 254
## Reductions:
-- On TokStar reduce production opcode_name -> TokIdent
-- On TokSemi reduce production opcode_name -> TokIdent
-- On TokPercent reduce production opcode_name -> TokIdent
-- On TokIdent reduce production opcode_name -> TokIdent
-- On TokDollar reduce production opcode_name -> TokIdent
-- On TokCapIdent reduce production opcode_name -> TokIdent
-- On TokAt reduce production opcode_name -> TokIdent

State 254:
## Known stack suffix:
## TokIdent TokInt
## LR(1) items:
out_pattern_expr -> TokIdent TokInt . TokComma arith_expr_list [ TokSemi ]
out_pattern_expr -> TokIdent TokInt . [ TokSemi ]
## Transitions:
-- On TokComma shift to state 255
## Reductions:
-- On TokSemi reduce production out_pattern_expr -> TokIdent TokInt

State 255:
## Known stack suffix:
## TokIdent TokInt TokComma
## LR(1) items:
out_pattern_expr -> TokIdent TokInt TokComma . arith_expr_list [ TokSemi ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 68
-- On TokInt shift to state 69
-- On TokIdent shift to state 70
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On arith_expr_list shift to state 256
-- On arith_expr shift to state 257
## Reductions:

State 256:
## Known stack suffix:
## TokIdent TokInt TokComma arith_expr_list
## LR(1) items:
out_pattern_expr -> TokIdent TokInt TokComma arith_expr_list . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_pattern_expr -> TokIdent TokInt TokComma arith_expr_list

State 257:
## Known stack suffix:
## arith_expr
## LR(1) items:
arith_expr -> arith_expr . plus_minus_op arith_expr [ TokShr TokShl TokSemi TokSar TokPlus TokPipe TokMinus TokComma TokAmp ]
arith_expr -> arith_expr . logical_op arith_expr [ TokShr TokShl TokSemi TokSar TokPlus TokPipe TokMinus TokComma TokAmp ]
arith_expr -> arith_expr . shift_op arith_expr [ TokShr TokShl TokSemi TokSar TokPlus TokPipe TokMinus TokComma TokAmp ]
arith_expr_list -> arith_expr . TokComma arith_expr_list [ TokSemi ]
arith_expr_list -> arith_expr . [ TokSemi ]
## Transitions:
-- On TokShr shift to state 85
-- On TokShl shift to state 86
-- On TokSar shift to state 87
-- On TokPlus shift to state 76
-- On TokPipe shift to state 77
-- On TokMinus shift to state 78
-- On TokComma shift to state 258
-- On TokAmp shift to state 79
-- On shift_op shift to state 74
-- On plus_minus_op shift to state 80
-- On logical_op shift to state 82
## Reductions:
-- On TokSemi reduce production arith_expr_list -> arith_expr

State 258:
## Known stack suffix:
## arith_expr TokComma
## LR(1) items:
arith_expr_list -> arith_expr TokComma . arith_expr_list [ TokSemi ]
## Transitions:
-- On TokTilde shift to state 64
-- On TokPow2 shift to state 65
-- On TokMinus shift to state 66
-- On TokLog2 shift to state 67
-- On TokLParen shift to state 68
-- On TokInt shift to state 69
-- On TokIdent shift to state 70
-- On TokAbs shift to state 71
-- On unary_op shift to state 72
-- On arith_expr_list shift to state 259
-- On arith_expr shift to state 257
## Reductions:

State 259:
## Known stack suffix:
## arith_expr TokComma arith_expr_list
## LR(1) items:
arith_expr_list -> arith_expr TokComma arith_expr_list . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arith_expr_list -> arith_expr TokComma arith_expr_list

State 260:
## Known stack suffix:
## TokCopy
## LR(1) items:
out_pattern_expr -> TokCopy . out_integer_list [ TokSemi ]
## Transitions:
-- On TokInt shift to state 261
-- On out_integer_list shift to state 264
## Reductions:

State 261:
## Known stack suffix:
## TokInt
## LR(1) items:
out_integer_list -> TokInt . TokComma out_integer_list [ TokSemi ]
out_integer_list -> TokInt . [ TokSemi ]
## Transitions:
-- On TokComma shift to state 262
## Reductions:
-- On TokSemi reduce production out_integer_list -> TokInt

State 262:
## Known stack suffix:
## TokInt TokComma
## LR(1) items:
out_integer_list -> TokInt TokComma . out_integer_list [ TokSemi ]
## Transitions:
-- On TokInt shift to state 261
-- On out_integer_list shift to state 263
## Reductions:

State 263:
## Known stack suffix:
## TokInt TokComma out_integer_list
## LR(1) items:
out_integer_list -> TokInt TokComma out_integer_list . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_integer_list -> TokInt TokComma out_integer_list

State 264:
## Known stack suffix:
## TokCopy out_integer_list
## LR(1) items:
out_pattern_expr -> TokCopy out_integer_list . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_pattern_expr -> TokCopy out_integer_list

State 265:
## Known stack suffix:
## TokOutput TokWhen clause_expr TokColon out_pattern_list_opt
## LR(1) items:
io_output -> TokOutput TokWhen clause_expr TokColon out_pattern_list_opt . [ TokTrivial TokTrans TokRegisters TokOutput TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production io_output -> TokOutput TokWhen clause_expr TokColon out_pattern_list_opt

State 266:
## Known stack suffix:
## out_pattern_list
## LR(1) items:
out_pattern_list_opt -> out_pattern_list . [ TokTrivial TokTrans TokRegisters TokOutput TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_pattern_list_opt -> out_pattern_list

State 267:
## Known stack suffix:
## out_pattern_expr
## LR(1) items:
out_pattern_list -> out_pattern_expr . TokSemi out_pattern_list [ TokTrivial TokTrans TokRegisters TokOutput TokOpen TokName TokInsts TokInput TokEof ]
out_pattern_list -> out_pattern_expr . TokSemi [ TokTrivial TokTrans TokRegisters TokOutput TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokSemi shift to state 268
## Reductions:

State 268:
## Known stack suffix:
## out_pattern_expr TokSemi
## LR(1) items:
out_pattern_list -> out_pattern_expr TokSemi . out_pattern_list [ TokTrivial TokTrans TokRegisters TokOutput TokOpen TokName TokInsts TokInput TokEof ]
out_pattern_list -> out_pattern_expr TokSemi . [ TokTrivial TokTrans TokRegisters TokOutput TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokNew shift to state 250
-- On TokIdent shift to state 253
-- On TokCopy shift to state 260
-- On TokCapIdent shift to state 208
-- On out_pattern_list shift to state 269
-- On out_pattern_expr shift to state 267
-- On opcode_name shift to state 270
## Reductions:
-- On TokTrivial reduce production out_pattern_list -> out_pattern_expr TokSemi
-- On TokTrans reduce production out_pattern_list -> out_pattern_expr TokSemi
-- On TokRegisters reduce production out_pattern_list -> out_pattern_expr TokSemi
-- On TokOutput reduce production out_pattern_list -> out_pattern_expr TokSemi
-- On TokOpen reduce production out_pattern_list -> out_pattern_expr TokSemi
-- On TokName reduce production out_pattern_list -> out_pattern_expr TokSemi
-- On TokInsts reduce production out_pattern_list -> out_pattern_expr TokSemi
-- On TokInput reduce production out_pattern_list -> out_pattern_expr TokSemi
-- On TokEof reduce production out_pattern_list -> out_pattern_expr TokSemi

State 269:
## Known stack suffix:
## out_pattern_expr TokSemi out_pattern_list
## LR(1) items:
out_pattern_list -> out_pattern_expr TokSemi out_pattern_list . [ TokTrivial TokTrans TokRegisters TokOutput TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_pattern_list -> out_pattern_expr TokSemi out_pattern_list

State 270:
## Known stack suffix:
## opcode_name
## LR(1) items:
out_pattern_expr -> opcode_name . out_operand_list_opt [ TokSemi ]
## Transitions:
-- On TokStar shift to state 59
-- On TokPercent shift to state 97
-- On TokIdent shift to state 99
-- On TokDollar shift to state 100
-- On TokCapIdent shift to state 102
-- On TokAt shift to state 103
-- On out_operand_list_opt shift to state 271
-- On out_operand_list shift to state 111
-- On out_operand shift to state 112
## Reductions:
-- On TokSemi reduce production out_operand_list_opt ->

State 271:
## Known stack suffix:
## opcode_name out_operand_list_opt
## LR(1) items:
out_pattern_expr -> opcode_name out_operand_list_opt . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production out_pattern_expr -> opcode_name out_operand_list_opt

State 272:
## Known stack suffix:
## TokOutput TokColon
## LR(1) items:
io_output -> TokOutput TokColon . out_pattern_list_opt [ TokTrivial TokTrans TokRegisters TokOutput TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokNew shift to state 250
-- On TokIdent shift to state 253
-- On TokCopy shift to state 260
-- On TokCapIdent shift to state 208
-- On out_pattern_list_opt shift to state 273
-- On out_pattern_list shift to state 266
-- On out_pattern_expr shift to state 267
-- On opcode_name shift to state 270
## Reductions:
-- On TokTrivial reduce production out_pattern_list_opt ->
-- On TokTrans reduce production out_pattern_list_opt ->
-- On TokRegisters reduce production out_pattern_list_opt ->
-- On TokOutput reduce production out_pattern_list_opt ->
-- On TokOpen reduce production out_pattern_list_opt ->
-- On TokName reduce production out_pattern_list_opt ->
-- On TokInsts reduce production out_pattern_list_opt ->
-- On TokInput reduce production out_pattern_list_opt ->
-- On TokEof reduce production out_pattern_list_opt ->

State 273:
## Known stack suffix:
## TokOutput TokColon out_pattern_list_opt
## LR(1) items:
io_output -> TokOutput TokColon out_pattern_list_opt . [ TokTrivial TokTrans TokRegisters TokOutput TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production io_output -> TokOutput TokColon out_pattern_list_opt

State 274:
## Known stack suffix:
## io_input_list io_output_list
## LR(1) items:
input_output_statement -> io_input_list io_output_list . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production input_output_statement -> io_input_list io_output_list

State 275:
## Known stack suffix:
## io_output
## LR(1) items:
io_output_list -> io_output . io_output_list [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
io_output_list -> io_output . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
-- On TokOutput shift to state 246
-- On io_output_list shift to state 276
-- On io_output shift to state 275
## Reductions:
-- On TokTrivial reduce production io_output_list -> io_output
-- On TokTrans reduce production io_output_list -> io_output
-- On TokRegisters reduce production io_output_list -> io_output
-- On TokOpen reduce production io_output_list -> io_output
-- On TokName reduce production io_output_list -> io_output
-- On TokInsts reduce production io_output_list -> io_output
-- On TokInput reduce production io_output_list -> io_output
-- On TokEof reduce production io_output_list -> io_output

State 276:
## Known stack suffix:
## io_output io_output_list
## LR(1) items:
io_output_list -> io_output io_output_list . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production io_output_list -> io_output io_output_list

State 277:
## Known stack suffix:
## io_input
## LR(1) items:
io_input_list -> io_input . io_input_list [ TokOutput ]
io_input_list -> io_input . [ TokOutput ]
## Transitions:
-- On TokInput shift to state 162
-- On io_input_list shift to state 278
-- On io_input shift to state 277
## Reductions:
-- On TokOutput reduce production io_input_list -> io_input

State 278:
## Known stack suffix:
## io_input io_input_list
## LR(1) items:
io_input_list -> io_input io_input_list . [ TokOutput ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production io_input_list -> io_input io_input_list

State 279:
## Known stack suffix:
## instruction_statement
## LR(1) items:
expr -> instruction_statement . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> instruction_statement

State 280:
## Known stack suffix:
## input_output_statement
## LR(1) items:
expr -> input_output_statement . [ TokTrivial TokTrans TokRegisters TokOpen TokName TokInsts TokInput TokEof ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> input_output_statement

State 281:
## Known stack suffix:
## expr
## LR(1) items:
prog -> expr . prog [ # ]
## Transitions:
-- On TokTrivial shift to state 1
-- On TokTrans shift to state 3
-- On TokRegisters shift to state 124
-- On TokOpen shift to state 134
-- On TokName shift to state 136
-- On TokInsts shift to state 138
-- On TokInput shift to state 162
-- On TokEof shift to state 238
-- On trivial_statement shift to state 239
-- On transform_statement shift to state 240
-- On register_statement shift to state 241
-- On prog shift to state 282
-- On open_statement shift to state 243
-- On name_statement shift to state 244
-- On io_input_list shift to state 245
-- On io_input shift to state 277
-- On instruction_statement shift to state 279
-- On input_output_statement shift to state 280
-- On expr shift to state 281
## Reductions:

State 282:
## Known stack suffix:
## expr prog
## LR(1) items:
prog -> expr prog . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production prog -> expr prog

