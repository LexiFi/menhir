State 0:
## Known stack suffix:
##
## LR(1) items:
console' -> . console [ # ]
## Transitions:
-- On TokWhile shift to state 1
-- On TokUnit shift to state 196
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokRepeat shift to state 206
-- On TokProgram shift to state 211
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokIf shift to state 218
-- On TokId shift to state 12
-- On TokFor shift to state 226
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokEof shift to state 244
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokCase shift to state 245
-- On TokAmp shift to state 24
-- On while_statement shift to state 255
-- On unsigned_constant shift to state 256
-- On unit_header shift to state 264
-- On unit_body shift to state 403
-- On term shift to state 28
-- On statement shift to state 404
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On repeat_statement shift to state 405
-- On program_header shift to state 406
-- On program shift to state 409
-- On primary shift to state 35
-- On if_statement shift to state 410
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On for_statement shift to state 411
-- On factor shift to state 54
-- On expression shift to state 412
-- On exponentiation shift to state 55
-- On console shift to state 414
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On case_statement shift to state 415
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 1:
## Known stack suffix:
## TokWhile
## LR(1) items:
while_statement -> TokWhile . boolean_expression TokDo statement TokSemi [ # ]
while_statement -> TokWhile . boolean_expression TokDo statements TokSemi [ # ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 83
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On boolean_expression shift to state 84
-- On add_term shift to state 65
## Reductions:

State 2:
## Known stack suffix:
## TokTrue
## LR(1) items:
boolean_value -> TokTrue . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokColon TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokColon TokAssignEq TokAnd
--   reduce production boolean_value -> TokTrue

State 3:
## Known stack suffix:
## TokString
## LR(1) items:
unsigned_constant -> TokString . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production unsigned_constant -> TokString

State 4:
## Known stack suffix:
## TokPlus
## LR(1) items:
sign -> TokPlus . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production sign -> TokPlus

State 5:
## Known stack suffix:
## TokNot
## LR(1) items:
primary -> TokNot . primary [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On primary shift to state 82
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
## Reductions:

State 6:
## Known stack suffix:
## TokNil
## LR(1) items:
unsigned_constant -> TokNil . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production unsigned_constant -> TokNil

State 7:
## Known stack suffix:
## TokLeftParen
## LR(1) items:
primary -> TokLeftParen . expression TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 80
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 8:
## Known stack suffix:
## TokMinus
## LR(1) items:
sign -> TokMinus . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production sign -> TokMinus

State 9:
## Known stack suffix:
## TokInt
## LR(1) items:
unsigned_constant -> TokInt . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production unsigned_constant -> TokInt

State 10:
## Known stack suffix:
## TokInc
## LR(1) items:
unsigned_constant -> TokInc . TokLeftParen identifier TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
unsigned_constant -> TokInc . TokLeftParen identifier TokComma expression TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
-- On TokLeftParen shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## TokInc TokLeftParen
## LR(1) items:
unsigned_constant -> TokInc TokLeftParen . identifier TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
unsigned_constant -> TokInc TokLeftParen . identifier TokComma expression TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
-- On TokId shift to state 12
-- On identifier shift to state 13
## Reductions:

State 12:
## Known stack suffix:
## TokId
## LR(1) items:
identifier -> TokId . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokHat TokGt TokGe TokEq TokDownTo TokDot TokDo TokDiv TokComma TokColon TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokHat TokGt TokGe TokEq TokDownTo TokDot TokDo TokDiv TokComma TokColon TokAssignEq TokAnd
--   reduce production identifier -> TokId

State 13:
## Known stack suffix:
## TokInc TokLeftParen identifier
## LR(1) items:
unsigned_constant -> TokInc TokLeftParen identifier . TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
unsigned_constant -> TokInc TokLeftParen identifier . TokComma expression TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
-- On TokRightParen shift to state 14
-- On TokComma shift to state 15
## Reductions:

State 14:
## Known stack suffix:
## TokInc TokLeftParen identifier TokRightParen
## LR(1) items:
unsigned_constant -> TokInc TokLeftParen identifier TokRightParen . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production unsigned_constant -> TokInc TokLeftParen identifier TokRightParen

State 15:
## Known stack suffix:
## TokInc TokLeftParen identifier TokComma
## LR(1) items:
unsigned_constant -> TokInc TokLeftParen identifier TokComma . expression TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 78
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 16:
## Known stack suffix:
## TokFloat
## LR(1) items:
unsigned_constant -> TokFloat . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production unsigned_constant -> TokFloat

State 17:
## Known stack suffix:
## TokFalse
## LR(1) items:
boolean_value -> TokFalse . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokColon TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokColon TokAssignEq TokAnd
--   reduce production boolean_value -> TokFalse

State 18:
## Known stack suffix:
## TokDec
## LR(1) items:
unsigned_constant -> TokDec . TokLeftParen identifier TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
unsigned_constant -> TokDec . TokLeftParen identifier TokComma expression TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
-- On TokLeftParen shift to state 19
## Reductions:

State 19:
## Known stack suffix:
## TokDec TokLeftParen
## LR(1) items:
unsigned_constant -> TokDec TokLeftParen . identifier TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
unsigned_constant -> TokDec TokLeftParen . identifier TokComma expression TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
-- On TokId shift to state 12
-- On identifier shift to state 20
## Reductions:

State 20:
## Known stack suffix:
## TokDec TokLeftParen identifier
## LR(1) items:
unsigned_constant -> TokDec TokLeftParen identifier . TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
unsigned_constant -> TokDec TokLeftParen identifier . TokComma expression TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
-- On TokRightParen shift to state 21
-- On TokComma shift to state 22
## Reductions:

State 21:
## Known stack suffix:
## TokDec TokLeftParen identifier TokRightParen
## LR(1) items:
unsigned_constant -> TokDec TokLeftParen identifier TokRightParen . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production unsigned_constant -> TokDec TokLeftParen identifier TokRightParen

State 22:
## Known stack suffix:
## TokDec TokLeftParen identifier TokComma
## LR(1) items:
unsigned_constant -> TokDec TokLeftParen identifier TokComma . expression TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 76
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 23:
## Known stack suffix:
## TokChar
## LR(1) items:
unsigned_constant -> TokChar . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production unsigned_constant -> TokChar

State 24:
## Known stack suffix:
## TokAmp
## LR(1) items:
unsigned_constant -> TokAmp . identifier [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
-- On TokId shift to state 12
-- On identifier shift to state 25
## Reductions:

State 25:
## Known stack suffix:
## TokAmp identifier
## LR(1) items:
unsigned_constant -> TokAmp identifier . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production unsigned_constant -> TokAmp identifier

State 26:
## Known stack suffix:
## unsigned_constant
## LR(1) items:
primary -> unsigned_constant . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd ]
unsigned_constant -> unsigned_constant . TokHat [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd ]
## Transitions:
-- On TokHat shift to state 27
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd
--   reduce production primary -> unsigned_constant

State 27:
## Known stack suffix:
## unsigned_constant TokHat
## LR(1) items:
unsigned_constant -> unsigned_constant TokHat . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd
--   reduce production unsigned_constant -> unsigned_constant TokHat

State 28:
## Known stack suffix:
## term
## LR(1) items:
add_term -> term . [ TokXor TokTo TokThen TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokComma TokAnd ]
term -> term . mulop factor [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd ]
## Transitions:
-- On TokStar shift to state 29
-- On TokSlash shift to state 30
-- On TokMod shift to state 31
-- On TokDiv shift to state 32
-- On mulop shift to state 33
## Reductions:
-- On TokXor TokTo TokThen TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokComma TokAnd
--   reduce production add_term -> term

State 29:
## Known stack suffix:
## TokStar
## LR(1) items:
mulop -> TokStar . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production mulop -> TokStar

State 30:
## Known stack suffix:
## TokSlash
## LR(1) items:
mulop -> TokSlash . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production mulop -> TokSlash

State 31:
## Known stack suffix:
## TokMod
## LR(1) items:
mulop -> TokMod . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production mulop -> TokMod

State 32:
## Known stack suffix:
## TokDiv
## LR(1) items:
mulop -> TokDiv . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production mulop -> TokDiv

State 33:
## Known stack suffix:
## term mulop
## LR(1) items:
term -> term mulop . factor [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 75
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
## Reductions:

State 34:
## Known stack suffix:
## sign
## LR(1) items:
factor -> sign . factor [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 74
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
## Reductions:

State 35:
## Known stack suffix:
## primary
## LR(1) items:
exponentiation -> primary . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd
--   reduce production exponentiation -> primary

State 36:
## Known stack suffix:
## identifier
## LR(1) items:
function_call -> identifier . TokLeftParen expression_list TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
unsigned_constant -> identifier . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
unsigned_constant -> identifier . TokDot identifier [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
-- On TokLeftParen shift to state 37
-- On TokDot shift to state 72
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production unsigned_constant -> identifier

State 37:
## Known stack suffix:
## identifier TokLeftParen
## LR(1) items:
function_call -> identifier TokLeftParen . expression_list TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression_list_rev shift to state 66
-- On expression_list shift to state 69
-- On expression shift to state 71
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 38:
## Known stack suffix:
## simple_expression
## LR(1) items:
expression -> simple_expression . relop simple_expression [ TokTo TokThen TokSemi TokRightParen TokOf TokDownTo TokDo TokComma ]
expression -> simple_expression . [ TokTo TokThen TokSemi TokRightParen TokOf TokDownTo TokDo TokComma ]
simple_expression -> simple_expression . logop add_term [ TokXor TokTo TokThen TokShr TokShl TokSemi TokRightParen TokOr TokOf TokNotEq TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokComma TokAnd ]
## Transitions:
-- On TokXor shift to state 39
-- On TokShr shift to state 40
-- On TokShl shift to state 41
-- On TokOr shift to state 42
-- On TokNotEq shift to state 43
-- On TokLt shift to state 44
-- On TokLe shift to state 45
-- On TokGt shift to state 46
-- On TokGe shift to state 47
-- On TokEq shift to state 48
-- On TokAnd shift to state 49
-- On relop shift to state 50
-- On logop shift to state 52
## Reductions:
-- On TokTo TokThen TokSemi TokRightParen TokOf TokDownTo TokDo TokComma
--   reduce production expression -> simple_expression

State 39:
## Known stack suffix:
## TokXor
## LR(1) items:
logop -> TokXor . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production logop -> TokXor

State 40:
## Known stack suffix:
## TokShr
## LR(1) items:
logop -> TokShr . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production logop -> TokShr

State 41:
## Known stack suffix:
## TokShl
## LR(1) items:
logop -> TokShl . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production logop -> TokShl

State 42:
## Known stack suffix:
## TokOr
## LR(1) items:
logop -> TokOr . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production logop -> TokOr

State 43:
## Known stack suffix:
## TokNotEq
## LR(1) items:
relop -> TokNotEq . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production relop -> TokNotEq

State 44:
## Known stack suffix:
## TokLt
## LR(1) items:
relop -> TokLt . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production relop -> TokLt

State 45:
## Known stack suffix:
## TokLe
## LR(1) items:
relop -> TokLe . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production relop -> TokLe

State 46:
## Known stack suffix:
## TokGt
## LR(1) items:
relop -> TokGt . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production relop -> TokGt

State 47:
## Known stack suffix:
## TokGe
## LR(1) items:
relop -> TokGe . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production relop -> TokGe

State 48:
## Known stack suffix:
## TokEq
## LR(1) items:
relop -> TokEq . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production relop -> TokEq

State 49:
## Known stack suffix:
## TokAnd
## LR(1) items:
logop -> TokAnd . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production logop -> TokAnd

State 50:
## Known stack suffix:
## simple_expression relop
## LR(1) items:
expression -> simple_expression relop . simple_expression [ TokTo TokThen TokSemi TokRightParen TokOf TokDownTo TokDo TokComma ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 51
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 51:
## Known stack suffix:
## simple_expression relop simple_expression
## LR(1) items:
expression -> simple_expression relop simple_expression . [ TokTo TokThen TokSemi TokRightParen TokOf TokDownTo TokDo TokComma ]
simple_expression -> simple_expression . logop add_term [ TokXor TokTo TokThen TokShr TokShl TokSemi TokRightParen TokOr TokOf TokDownTo TokDo TokComma TokAnd ]
## Transitions:
-- On TokXor shift to state 39
-- On TokShr shift to state 40
-- On TokShl shift to state 41
-- On TokOr shift to state 42
-- On TokAnd shift to state 49
-- On logop shift to state 52
## Reductions:
-- On TokTo TokThen TokSemi TokRightParen TokOf TokDownTo TokDo TokComma
--   reduce production expression -> simple_expression relop simple_expression

State 52:
## Known stack suffix:
## simple_expression logop
## LR(1) items:
simple_expression -> simple_expression logop . add_term [ TokXor TokTo TokThen TokShr TokShl TokSemi TokRightParen TokOr TokOf TokNotEq TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokComma TokAnd ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 60
## Reductions:

State 53:
## Known stack suffix:
## function_call
## LR(1) items:
unsigned_constant -> function_call . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production unsigned_constant -> function_call

State 54:
## Known stack suffix:
## factor
## LR(1) items:
term -> factor . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd
--   reduce production term -> factor

State 55:
## Known stack suffix:
## exponentiation
## LR(1) items:
factor -> exponentiation . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd
--   reduce production factor -> exponentiation

State 56:
## Known stack suffix:
## character_string_rev
## LR(1) items:
character_string -> character_string_rev . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokColon TokAssignEq TokAnd ]
character_string_rev -> character_string_rev . TokChar [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokColon TokChar TokAssignEq TokAnd ]
## Transitions:
-- On TokChar shift to state 57
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokColon TokAssignEq TokAnd
--   reduce production character_string -> character_string_rev

State 57:
## Known stack suffix:
## character_string_rev TokChar
## LR(1) items:
character_string_rev -> character_string_rev TokChar . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokColon TokChar TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokColon TokChar TokAssignEq TokAnd
--   reduce production character_string_rev -> character_string_rev TokChar

State 58:
## Known stack suffix:
## character_string
## LR(1) items:
unsigned_constant -> character_string . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production unsigned_constant -> character_string

State 59:
## Known stack suffix:
## boolean_value
## LR(1) items:
unsigned_constant -> boolean_value . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production unsigned_constant -> boolean_value

State 60:
## Known stack suffix:
## simple_expression logop add_term
## LR(1) items:
add_term -> add_term . addop term [ TokXor TokTo TokThen TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokComma TokAnd ]
simple_expression -> simple_expression logop add_term . [ TokXor TokTo TokThen TokShr TokShl TokSemi TokRightParen TokOr TokOf TokNotEq TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokComma TokAnd ]
## Transitions:
-- On TokPlus shift to state 61
-- On TokMinus shift to state 62
-- On addop shift to state 63
## Reductions:
-- On TokXor TokTo TokThen TokShr TokShl TokSemi TokRightParen TokOr TokOf TokNotEq TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokComma TokAnd
--   reduce production simple_expression -> simple_expression logop add_term

State 61:
## Known stack suffix:
## TokPlus
## LR(1) items:
addop -> TokPlus . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production addop -> TokPlus

State 62:
## Known stack suffix:
## TokMinus
## LR(1) items:
addop -> TokMinus . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokId TokFloat TokFalse TokDec TokChar TokAmp
--   reduce production addop -> TokMinus

State 63:
## Known stack suffix:
## add_term addop
## LR(1) items:
add_term -> add_term addop . term [ TokXor TokTo TokThen TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokComma TokAnd ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 64
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
## Reductions:

State 64:
## Known stack suffix:
## add_term addop term
## LR(1) items:
add_term -> add_term addop term . [ TokXor TokTo TokThen TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokComma TokAnd ]
term -> term . mulop factor [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd ]
## Transitions:
-- On TokStar shift to state 29
-- On TokSlash shift to state 30
-- On TokMod shift to state 31
-- On TokDiv shift to state 32
-- On mulop shift to state 33
## Reductions:
-- On TokXor TokTo TokThen TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokComma TokAnd
--   reduce production add_term -> add_term addop term

State 65:
## Known stack suffix:
## add_term
## LR(1) items:
add_term -> add_term . addop term [ TokXor TokTo TokThen TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokComma TokAnd ]
simple_expression -> add_term . [ TokXor TokTo TokThen TokShr TokShl TokSemi TokRightParen TokOr TokOf TokNotEq TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokComma TokAnd ]
## Transitions:
-- On TokPlus shift to state 61
-- On TokMinus shift to state 62
-- On addop shift to state 63
## Reductions:
-- On TokXor TokTo TokThen TokShr TokShl TokSemi TokRightParen TokOr TokOf TokNotEq TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokComma TokAnd
--   reduce production simple_expression -> add_term

State 66:
## Known stack suffix:
## expression_list_rev
## LR(1) items:
expression_list -> expression_list_rev . [ TokRightParen ]
expression_list_rev -> expression_list_rev . TokComma expression [ TokRightParen TokComma ]
## Transitions:
-- On TokComma shift to state 67
## Reductions:
-- On TokRightParen
--   reduce production expression_list -> expression_list_rev

State 67:
## Known stack suffix:
## expression_list_rev TokComma
## LR(1) items:
expression_list_rev -> expression_list_rev TokComma . expression [ TokRightParen TokComma ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 68
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 68:
## Known stack suffix:
## expression_list_rev TokComma expression
## LR(1) items:
expression_list_rev -> expression_list_rev TokComma expression . [ TokRightParen TokComma ]
## Transitions:
## Reductions:
-- On TokRightParen TokComma
--   reduce production expression_list_rev -> expression_list_rev TokComma expression

State 69:
## Known stack suffix:
## identifier TokLeftParen expression_list
## LR(1) items:
function_call -> identifier TokLeftParen expression_list . TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
-- On TokRightParen shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## identifier TokLeftParen expression_list TokRightParen
## LR(1) items:
function_call -> identifier TokLeftParen expression_list TokRightParen . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production function_call -> identifier TokLeftParen expression_list TokRightParen

State 71:
## Known stack suffix:
## expression
## LR(1) items:
expression_list_rev -> expression . [ TokRightParen TokComma ]
## Transitions:
## Reductions:
-- On TokRightParen TokComma
--   reduce production expression_list_rev -> expression

State 72:
## Known stack suffix:
## identifier TokDot
## LR(1) items:
unsigned_constant -> identifier TokDot . identifier [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
-- On TokId shift to state 12
-- On identifier shift to state 73
## Reductions:

State 73:
## Known stack suffix:
## identifier TokDot identifier
## LR(1) items:
unsigned_constant -> identifier TokDot identifier . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production unsigned_constant -> identifier TokDot identifier

State 74:
## Known stack suffix:
## sign factor
## LR(1) items:
factor -> sign factor . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd
--   reduce production factor -> sign factor

State 75:
## Known stack suffix:
## term mulop factor
## LR(1) items:
term -> term mulop factor . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd
--   reduce production term -> term mulop factor

State 76:
## Known stack suffix:
## TokDec TokLeftParen identifier TokComma expression
## LR(1) items:
unsigned_constant -> TokDec TokLeftParen identifier TokComma expression . TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
-- On TokRightParen shift to state 77
## Reductions:

State 77:
## Known stack suffix:
## TokDec TokLeftParen identifier TokComma expression TokRightParen
## LR(1) items:
unsigned_constant -> TokDec TokLeftParen identifier TokComma expression TokRightParen . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production unsigned_constant -> TokDec TokLeftParen identifier TokComma expression TokRightParen

State 78:
## Known stack suffix:
## TokInc TokLeftParen identifier TokComma expression
## LR(1) items:
unsigned_constant -> TokInc TokLeftParen identifier TokComma expression . TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
-- On TokRightParen shift to state 79
## Reductions:

State 79:
## Known stack suffix:
## TokInc TokLeftParen identifier TokComma expression TokRightParen
## LR(1) items:
unsigned_constant -> TokInc TokLeftParen identifier TokComma expression TokRightParen . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production unsigned_constant -> TokInc TokLeftParen identifier TokComma expression TokRightParen

State 80:
## Known stack suffix:
## TokLeftParen expression
## LR(1) items:
primary -> TokLeftParen expression . TokRightParen [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd ]
## Transitions:
-- On TokRightParen shift to state 81
## Reductions:

State 81:
## Known stack suffix:
## TokLeftParen expression TokRightParen
## LR(1) items:
primary -> TokLeftParen expression TokRightParen . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd
--   reduce production primary -> TokLeftParen expression TokRightParen

State 82:
## Known stack suffix:
## TokNot primary
## LR(1) items:
primary -> TokNot primary . [ TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightParen TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDownTo TokDo TokDiv TokComma TokAnd
--   reduce production primary -> TokNot primary

State 83:
## Known stack suffix:
## expression
## LR(1) items:
boolean_expression -> expression . [ TokThen TokSemi TokDo ]
## Transitions:
## Reductions:
-- On TokThen TokSemi TokDo
--   reduce production boolean_expression -> expression

State 84:
## Known stack suffix:
## TokWhile boolean_expression
## LR(1) items:
while_statement -> TokWhile boolean_expression . TokDo statement TokSemi [ # ]
while_statement -> TokWhile boolean_expression . TokDo statements TokSemi [ # ]
## Transitions:
-- On TokDo shift to state 85
## Reductions:

State 85:
## Known stack suffix:
## TokWhile boolean_expression TokDo
## LR(1) items:
while_statement -> TokWhile boolean_expression TokDo . statement TokSemi [ # ]
while_statement -> TokWhile boolean_expression TokDo . statements TokSemi [ # ]
## Transitions:
-- On TokWhile shift to state 86
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokRepeat shift to state 89
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokIf shift to state 90
-- On TokId shift to state 12
-- On TokFor shift to state 94
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokCase shift to state 101
-- On TokBegin shift to state 93
-- On TokAmp shift to state 24
-- On while_statement shift to state 135
-- On unsigned_constant shift to state 136
-- On term shift to state 28
-- On statements shift to state 192
-- On statement shift to state 194
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On repeat_statement shift to state 147
-- On primary shift to state 35
-- On if_statement shift to state 148
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On for_statement shift to state 149
-- On factor shift to state 54
-- On expression shift to state 150
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On case_statement shift to state 152
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 86:
## Known stack suffix:
## TokWhile
## LR(1) items:
while_statement -> TokWhile . boolean_expression TokDo statement TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
while_statement -> TokWhile . boolean_expression TokDo statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 83
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On boolean_expression shift to state 87
-- On add_term shift to state 65
## Reductions:

State 87:
## Known stack suffix:
## TokWhile boolean_expression
## LR(1) items:
while_statement -> TokWhile boolean_expression . TokDo statement TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
while_statement -> TokWhile boolean_expression . TokDo statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokDo shift to state 88
## Reductions:

State 88:
## Known stack suffix:
## TokWhile boolean_expression TokDo
## LR(1) items:
while_statement -> TokWhile boolean_expression TokDo . statement TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
while_statement -> TokWhile boolean_expression TokDo . statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokWhile shift to state 86
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokRepeat shift to state 89
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokIf shift to state 90
-- On TokId shift to state 12
-- On TokFor shift to state 94
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokCase shift to state 101
-- On TokBegin shift to state 93
-- On TokAmp shift to state 24
-- On while_statement shift to state 135
-- On unsigned_constant shift to state 136
-- On term shift to state 28
-- On statements shift to state 188
-- On statement shift to state 190
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On repeat_statement shift to state 147
-- On primary shift to state 35
-- On if_statement shift to state 148
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On for_statement shift to state 149
-- On factor shift to state 54
-- On expression shift to state 150
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On case_statement shift to state 152
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 89:
## Known stack suffix:
## TokRepeat
## LR(1) items:
repeat_statement -> TokRepeat . statement_list TokUntil boolean_expression TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokWhile shift to state 86
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokRepeat shift to state 89
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokIf shift to state 90
-- On TokId shift to state 12
-- On TokFor shift to state 94
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokCase shift to state 101
-- On TokAmp shift to state 24
-- On while_statement shift to state 135
-- On unsigned_constant shift to state 136
-- On term shift to state 28
-- On statement_list_rev shift to state 174
-- On statement_list shift to state 184
-- On statement shift to state 178
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On repeat_statement shift to state 147
-- On primary shift to state 35
-- On if_statement shift to state 148
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On for_statement shift to state 149
-- On factor shift to state 54
-- On expression shift to state 150
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On case_statement shift to state 152
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 90:
## Known stack suffix:
## TokIf
## LR(1) items:
if_statement -> TokIf . boolean_expression TokThen statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
if_statement -> TokIf . boolean_expression TokThen statements TokElse statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 83
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On boolean_expression shift to state 91
-- On add_term shift to state 65
## Reductions:

State 91:
## Known stack suffix:
## TokIf boolean_expression
## LR(1) items:
if_statement -> TokIf boolean_expression . TokThen statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
if_statement -> TokIf boolean_expression . TokThen statements TokElse statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokThen shift to state 92
## Reductions:

State 92:
## Known stack suffix:
## TokIf boolean_expression TokThen
## LR(1) items:
if_statement -> TokIf boolean_expression TokThen . statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
if_statement -> TokIf boolean_expression TokThen . statements TokElse statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokBegin shift to state 93
-- On statements shift to state 179
## Reductions:

State 93:
## Known stack suffix:
## TokBegin
## LR(1) items:
statements -> TokBegin . statement_list TokEnd [ TokSemi TokElse TokDot ]
## Transitions:
-- On TokWhile shift to state 86
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokRepeat shift to state 89
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokIf shift to state 90
-- On TokId shift to state 12
-- On TokFor shift to state 94
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokCase shift to state 101
-- On TokAmp shift to state 24
-- On while_statement shift to state 135
-- On unsigned_constant shift to state 136
-- On term shift to state 28
-- On statement_list_rev shift to state 174
-- On statement_list shift to state 176
-- On statement shift to state 178
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On repeat_statement shift to state 147
-- On primary shift to state 35
-- On if_statement shift to state 148
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On for_statement shift to state 149
-- On factor shift to state 54
-- On expression shift to state 150
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On case_statement shift to state 152
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 94:
## Known stack suffix:
## TokFor
## LR(1) items:
for_statement -> TokFor . identifier TokAssignEq expression TokTo expression TokDo statement TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor . identifier TokAssignEq expression TokTo expression TokDo statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor . identifier TokAssignEq expression TokDownTo expression TokDo statement TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor . identifier TokAssignEq expression TokDownTo expression TokDo statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokId shift to state 12
-- On identifier shift to state 95
## Reductions:

State 95:
## Known stack suffix:
## TokFor identifier
## LR(1) items:
for_statement -> TokFor identifier . TokAssignEq expression TokTo expression TokDo statement TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor identifier . TokAssignEq expression TokTo expression TokDo statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor identifier . TokAssignEq expression TokDownTo expression TokDo statement TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor identifier . TokAssignEq expression TokDownTo expression TokDo statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokAssignEq shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## TokFor identifier TokAssignEq
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq . expression TokTo expression TokDo statement TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor identifier TokAssignEq . expression TokTo expression TokDo statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor identifier TokAssignEq . expression TokDownTo expression TokDo statement TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor identifier TokAssignEq . expression TokDownTo expression TokDo statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 97
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 97:
## Known stack suffix:
## TokFor identifier TokAssignEq expression
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression . TokTo expression TokDo statement TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor identifier TokAssignEq expression . TokTo expression TokDo statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor identifier TokAssignEq expression . TokDownTo expression TokDo statement TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor identifier TokAssignEq expression . TokDownTo expression TokDo statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokTo shift to state 98
-- On TokDownTo shift to state 167
## Reductions:

State 98:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo . expression TokDo statement TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor identifier TokAssignEq expression TokTo . expression TokDo statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 99
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 99:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo expression
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo expression . TokDo statement TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor identifier TokAssignEq expression TokTo expression . TokDo statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokDo shift to state 100
## Reductions:

State 100:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo expression TokDo
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo . statement TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo . statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokWhile shift to state 86
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokRepeat shift to state 89
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokIf shift to state 90
-- On TokId shift to state 12
-- On TokFor shift to state 94
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokCase shift to state 101
-- On TokBegin shift to state 93
-- On TokAmp shift to state 24
-- On while_statement shift to state 135
-- On unsigned_constant shift to state 136
-- On term shift to state 28
-- On statements shift to state 163
-- On statement shift to state 165
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On repeat_statement shift to state 147
-- On primary shift to state 35
-- On if_statement shift to state 148
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On for_statement shift to state 149
-- On factor shift to state 54
-- On expression shift to state 150
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On case_statement shift to state 152
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 101:
## Known stack suffix:
## TokCase
## LR(1) items:
case_statement -> TokCase . expression TokOf case_element_list TokEnd TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
case_statement -> TokCase . expression TokOf case_element_list TokElse statement TokEnd TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 102
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 102:
## Known stack suffix:
## TokCase expression
## LR(1) items:
case_statement -> TokCase expression . TokOf case_element_list TokEnd TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
case_statement -> TokCase expression . TokOf case_element_list TokElse statement TokEnd TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokOf shift to state 103
## Reductions:

State 103:
## Known stack suffix:
## TokCase expression TokOf
## LR(1) items:
case_statement -> TokCase expression TokOf . case_element_list TokEnd TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
case_statement -> TokCase expression TokOf . case_element_list TokElse statement TokEnd TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 104
-- On TokPlus shift to state 4
-- On TokNot shift to state 105
-- On TokNil shift to state 106
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 107
-- On TokInt shift to state 108
-- On TokFloat shift to state 109
-- On TokFalse shift to state 17
-- On TokChar shift to state 110
-- On sign shift to state 111
-- On constant_unsigned_constant shift to state 112
-- On constant_term shift to state 118
-- On constant_simple_expression shift to state 121
-- On constant_primary shift to state 113
-- On constant_factor shift to state 125
-- On constant_expression shift to state 133
-- On constant_exponentiation shift to state 115
-- On constant_add_term shift to state 129
-- On character_string_rev shift to state 56
-- On character_string shift to state 116
-- On case_element_list_rev shift to state 153
-- On case_element_list shift to state 155
-- On case_element shift to state 162
-- On boolean_value shift to state 117
## Reductions:

State 104:
## Known stack suffix:
## TokString
## LR(1) items:
constant_unsigned_constant -> TokString . [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd
--   reduce production constant_unsigned_constant -> TokString

State 105:
## Known stack suffix:
## TokNot
## LR(1) items:
constant_primary -> TokNot . constant_primary [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 104
-- On TokNot shift to state 105
-- On TokNil shift to state 106
-- On TokLeftParen shift to state 107
-- On TokInt shift to state 108
-- On TokFloat shift to state 109
-- On TokFalse shift to state 17
-- On TokChar shift to state 110
-- On constant_unsigned_constant shift to state 112
-- On constant_primary shift to state 132
-- On character_string_rev shift to state 56
-- On character_string shift to state 116
-- On boolean_value shift to state 117
## Reductions:

State 106:
## Known stack suffix:
## TokNil
## LR(1) items:
constant_unsigned_constant -> TokNil . [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd
--   reduce production constant_unsigned_constant -> TokNil

State 107:
## Known stack suffix:
## TokLeftParen
## LR(1) items:
constant_primary -> TokLeftParen . constant_expression TokRightParen [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 104
-- On TokPlus shift to state 4
-- On TokNot shift to state 105
-- On TokNil shift to state 106
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 107
-- On TokInt shift to state 108
-- On TokFloat shift to state 109
-- On TokFalse shift to state 17
-- On TokChar shift to state 110
-- On sign shift to state 111
-- On constant_unsigned_constant shift to state 112
-- On constant_term shift to state 118
-- On constant_simple_expression shift to state 121
-- On constant_primary shift to state 113
-- On constant_factor shift to state 125
-- On constant_expression shift to state 130
-- On constant_exponentiation shift to state 115
-- On constant_add_term shift to state 129
-- On character_string_rev shift to state 56
-- On character_string shift to state 116
-- On boolean_value shift to state 117
## Reductions:

State 108:
## Known stack suffix:
## TokInt
## LR(1) items:
constant_unsigned_constant -> TokInt . [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd
--   reduce production constant_unsigned_constant -> TokInt

State 109:
## Known stack suffix:
## TokFloat
## LR(1) items:
constant_unsigned_constant -> TokFloat . [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd
--   reduce production constant_unsigned_constant -> TokFloat

State 110:
## Known stack suffix:
## TokChar
## LR(1) items:
constant_unsigned_constant -> TokChar . [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd
--   reduce production constant_unsigned_constant -> TokChar

State 111:
## Known stack suffix:
## sign
## LR(1) items:
constant_factor -> sign . constant_factor [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 104
-- On TokPlus shift to state 4
-- On TokNot shift to state 105
-- On TokNil shift to state 106
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 107
-- On TokInt shift to state 108
-- On TokFloat shift to state 109
-- On TokFalse shift to state 17
-- On TokChar shift to state 110
-- On sign shift to state 111
-- On constant_unsigned_constant shift to state 112
-- On constant_primary shift to state 113
-- On constant_factor shift to state 114
-- On constant_exponentiation shift to state 115
-- On character_string_rev shift to state 56
-- On character_string shift to state 116
-- On boolean_value shift to state 117
## Reductions:

State 112:
## Known stack suffix:
## constant_unsigned_constant
## LR(1) items:
constant_primary -> constant_unsigned_constant . [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd
--   reduce production constant_primary -> constant_unsigned_constant

State 113:
## Known stack suffix:
## constant_primary
## LR(1) items:
constant_exponentiation -> constant_primary . [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd
--   reduce production constant_exponentiation -> constant_primary

State 114:
## Known stack suffix:
## sign constant_factor
## LR(1) items:
constant_factor -> sign constant_factor . [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd
--   reduce production constant_factor -> sign constant_factor

State 115:
## Known stack suffix:
## constant_exponentiation
## LR(1) items:
constant_factor -> constant_exponentiation . [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd
--   reduce production constant_factor -> constant_exponentiation

State 116:
## Known stack suffix:
## character_string
## LR(1) items:
constant_unsigned_constant -> character_string . [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd
--   reduce production constant_unsigned_constant -> character_string

State 117:
## Known stack suffix:
## boolean_value
## LR(1) items:
constant_unsigned_constant -> boolean_value . [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd
--   reduce production constant_unsigned_constant -> boolean_value

State 118:
## Known stack suffix:
## constant_term
## LR(1) items:
constant_add_term -> constant_term . [ TokXor TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokColon TokAnd ]
constant_term -> constant_term . mulop constant_factor [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
-- On TokStar shift to state 29
-- On TokSlash shift to state 30
-- On TokMod shift to state 31
-- On TokDiv shift to state 32
-- On mulop shift to state 119
## Reductions:
-- On TokXor TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokColon TokAnd
--   reduce production constant_add_term -> constant_term

State 119:
## Known stack suffix:
## constant_term mulop
## LR(1) items:
constant_term -> constant_term mulop . constant_factor [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 104
-- On TokPlus shift to state 4
-- On TokNot shift to state 105
-- On TokNil shift to state 106
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 107
-- On TokInt shift to state 108
-- On TokFloat shift to state 109
-- On TokFalse shift to state 17
-- On TokChar shift to state 110
-- On sign shift to state 111
-- On constant_unsigned_constant shift to state 112
-- On constant_primary shift to state 113
-- On constant_factor shift to state 120
-- On constant_exponentiation shift to state 115
-- On character_string_rev shift to state 56
-- On character_string shift to state 116
-- On boolean_value shift to state 117
## Reductions:

State 120:
## Known stack suffix:
## constant_term mulop constant_factor
## LR(1) items:
constant_term -> constant_term mulop constant_factor . [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd
--   reduce production constant_term -> constant_term mulop constant_factor

State 121:
## Known stack suffix:
## constant_simple_expression
## LR(1) items:
constant_expression -> constant_simple_expression . relop constant_simple_expression [ TokRightParen TokColon ]
constant_expression -> constant_simple_expression . [ TokRightParen TokColon ]
constant_simple_expression -> constant_simple_expression . logop constant_add_term [ TokXor TokShr TokShl TokRightParen TokOr TokNotEq TokLt TokLe TokGt TokGe TokEq TokColon TokAnd ]
## Transitions:
-- On TokXor shift to state 39
-- On TokShr shift to state 40
-- On TokShl shift to state 41
-- On TokOr shift to state 42
-- On TokNotEq shift to state 43
-- On TokLt shift to state 44
-- On TokLe shift to state 45
-- On TokGt shift to state 46
-- On TokGe shift to state 47
-- On TokEq shift to state 48
-- On TokAnd shift to state 49
-- On relop shift to state 122
-- On logop shift to state 124
## Reductions:
-- On TokRightParen TokColon
--   reduce production constant_expression -> constant_simple_expression

State 122:
## Known stack suffix:
## constant_simple_expression relop
## LR(1) items:
constant_expression -> constant_simple_expression relop . constant_simple_expression [ TokRightParen TokColon ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 104
-- On TokPlus shift to state 4
-- On TokNot shift to state 105
-- On TokNil shift to state 106
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 107
-- On TokInt shift to state 108
-- On TokFloat shift to state 109
-- On TokFalse shift to state 17
-- On TokChar shift to state 110
-- On sign shift to state 111
-- On constant_unsigned_constant shift to state 112
-- On constant_term shift to state 118
-- On constant_simple_expression shift to state 123
-- On constant_primary shift to state 113
-- On constant_factor shift to state 125
-- On constant_exponentiation shift to state 115
-- On constant_add_term shift to state 129
-- On character_string_rev shift to state 56
-- On character_string shift to state 116
-- On boolean_value shift to state 117
## Reductions:

State 123:
## Known stack suffix:
## constant_simple_expression relop constant_simple_expression
## LR(1) items:
constant_expression -> constant_simple_expression relop constant_simple_expression . [ TokRightParen TokColon ]
constant_simple_expression -> constant_simple_expression . logop constant_add_term [ TokXor TokShr TokShl TokRightParen TokOr TokColon TokAnd ]
## Transitions:
-- On TokXor shift to state 39
-- On TokShr shift to state 40
-- On TokShl shift to state 41
-- On TokOr shift to state 42
-- On TokAnd shift to state 49
-- On logop shift to state 124
## Reductions:
-- On TokRightParen TokColon
--   reduce production constant_expression -> constant_simple_expression relop constant_simple_expression

State 124:
## Known stack suffix:
## constant_simple_expression logop
## LR(1) items:
constant_simple_expression -> constant_simple_expression logop . constant_add_term [ TokXor TokShr TokShl TokRightParen TokOr TokNotEq TokLt TokLe TokGt TokGe TokEq TokColon TokAnd ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 104
-- On TokPlus shift to state 4
-- On TokNot shift to state 105
-- On TokNil shift to state 106
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 107
-- On TokInt shift to state 108
-- On TokFloat shift to state 109
-- On TokFalse shift to state 17
-- On TokChar shift to state 110
-- On sign shift to state 111
-- On constant_unsigned_constant shift to state 112
-- On constant_term shift to state 118
-- On constant_primary shift to state 113
-- On constant_factor shift to state 125
-- On constant_exponentiation shift to state 115
-- On constant_add_term shift to state 126
-- On character_string_rev shift to state 56
-- On character_string shift to state 116
-- On boolean_value shift to state 117
## Reductions:

State 125:
## Known stack suffix:
## constant_factor
## LR(1) items:
constant_term -> constant_factor . [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd
--   reduce production constant_term -> constant_factor

State 126:
## Known stack suffix:
## constant_simple_expression logop constant_add_term
## LR(1) items:
constant_add_term -> constant_add_term . addop constant_term [ TokXor TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokColon TokAnd ]
constant_simple_expression -> constant_simple_expression logop constant_add_term . [ TokXor TokShr TokShl TokRightParen TokOr TokNotEq TokLt TokLe TokGt TokGe TokEq TokColon TokAnd ]
## Transitions:
-- On TokPlus shift to state 61
-- On TokMinus shift to state 62
-- On addop shift to state 127
## Reductions:
-- On TokXor TokShr TokShl TokRightParen TokOr TokNotEq TokLt TokLe TokGt TokGe TokEq TokColon TokAnd
--   reduce production constant_simple_expression -> constant_simple_expression logop constant_add_term

State 127:
## Known stack suffix:
## constant_add_term addop
## LR(1) items:
constant_add_term -> constant_add_term addop . constant_term [ TokXor TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokColon TokAnd ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 104
-- On TokPlus shift to state 4
-- On TokNot shift to state 105
-- On TokNil shift to state 106
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 107
-- On TokInt shift to state 108
-- On TokFloat shift to state 109
-- On TokFalse shift to state 17
-- On TokChar shift to state 110
-- On sign shift to state 111
-- On constant_unsigned_constant shift to state 112
-- On constant_term shift to state 128
-- On constant_primary shift to state 113
-- On constant_factor shift to state 125
-- On constant_exponentiation shift to state 115
-- On character_string_rev shift to state 56
-- On character_string shift to state 116
-- On boolean_value shift to state 117
## Reductions:

State 128:
## Known stack suffix:
## constant_add_term addop constant_term
## LR(1) items:
constant_add_term -> constant_add_term addop constant_term . [ TokXor TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokColon TokAnd ]
constant_term -> constant_term . mulop constant_factor [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
-- On TokStar shift to state 29
-- On TokSlash shift to state 30
-- On TokMod shift to state 31
-- On TokDiv shift to state 32
-- On mulop shift to state 119
## Reductions:
-- On TokXor TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokColon TokAnd
--   reduce production constant_add_term -> constant_add_term addop constant_term

State 129:
## Known stack suffix:
## constant_add_term
## LR(1) items:
constant_add_term -> constant_add_term . addop constant_term [ TokXor TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokColon TokAnd ]
constant_simple_expression -> constant_add_term . [ TokXor TokShr TokShl TokRightParen TokOr TokNotEq TokLt TokLe TokGt TokGe TokEq TokColon TokAnd ]
## Transitions:
-- On TokPlus shift to state 61
-- On TokMinus shift to state 62
-- On addop shift to state 127
## Reductions:
-- On TokXor TokShr TokShl TokRightParen TokOr TokNotEq TokLt TokLe TokGt TokGe TokEq TokColon TokAnd
--   reduce production constant_simple_expression -> constant_add_term

State 130:
## Known stack suffix:
## TokLeftParen constant_expression
## LR(1) items:
constant_primary -> TokLeftParen constant_expression . TokRightParen [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
-- On TokRightParen shift to state 131
## Reductions:

State 131:
## Known stack suffix:
## TokLeftParen constant_expression TokRightParen
## LR(1) items:
constant_primary -> TokLeftParen constant_expression TokRightParen . [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd
--   reduce production constant_primary -> TokLeftParen constant_expression TokRightParen

State 132:
## Known stack suffix:
## TokNot constant_primary
## LR(1) items:
constant_primary -> TokNot constant_primary . [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd ]
## Transitions:
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokColon TokAnd
--   reduce production constant_primary -> TokNot constant_primary

State 133:
## Known stack suffix:
## constant_expression
## LR(1) items:
case_element -> constant_expression . TokColon statement [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar ]
case_element -> constant_expression . TokColon statements TokSemi [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar ]
## Transitions:
-- On TokColon shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## constant_expression TokColon
## LR(1) items:
case_element -> constant_expression TokColon . statement [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar ]
case_element -> constant_expression TokColon . statements TokSemi [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar ]
## Transitions:
-- On TokWhile shift to state 86
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokRepeat shift to state 89
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokIf shift to state 90
-- On TokId shift to state 12
-- On TokFor shift to state 94
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokCase shift to state 101
-- On TokBegin shift to state 93
-- On TokAmp shift to state 24
-- On while_statement shift to state 135
-- On unsigned_constant shift to state 136
-- On term shift to state 28
-- On statements shift to state 144
-- On statement shift to state 146
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On repeat_statement shift to state 147
-- On primary shift to state 35
-- On if_statement shift to state 148
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On for_statement shift to state 149
-- On factor shift to state 54
-- On expression shift to state 150
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On case_statement shift to state 152
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 135:
## Known stack suffix:
## while_statement
## LR(1) items:
statement -> while_statement . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production statement -> while_statement

State 136:
## Known stack suffix:
## unsigned_constant
## LR(1) items:
primary -> unsigned_constant . [ TokXor TokStar TokSlash TokShr TokShl TokSemi TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokAnd ]
statement -> unsigned_constant . TokAssignEq expression TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
statement -> unsigned_constant . TokHat TokAssignEq expression TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
unsigned_constant -> unsigned_constant . TokHat [ TokXor TokStar TokSlash TokShr TokShl TokSemi TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDiv TokAssignEq TokAnd ]
## Transitions:
-- On TokHat shift to state 137
-- On TokAssignEq shift to state 141
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokSemi TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokAnd
--   reduce production primary -> unsigned_constant

State 137:
## Known stack suffix:
## unsigned_constant TokHat
## LR(1) items:
statement -> unsigned_constant TokHat . TokAssignEq expression TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
unsigned_constant -> unsigned_constant TokHat . [ TokXor TokStar TokSlash TokShr TokShl TokSemi TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDiv TokAssignEq TokAnd ]
## Transitions:
-- On TokAssignEq shift to state 138
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokSemi TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDiv TokAssignEq TokAnd
--   reduce production unsigned_constant -> unsigned_constant TokHat
** Conflict on TokAssignEq

State 138:
## Known stack suffix:
## unsigned_constant TokHat TokAssignEq
## LR(1) items:
statement -> unsigned_constant TokHat TokAssignEq . expression TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 139
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 139:
## Known stack suffix:
## unsigned_constant TokHat TokAssignEq expression
## LR(1) items:
statement -> unsigned_constant TokHat TokAssignEq expression . TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokSemi shift to state 140
## Reductions:

State 140:
## Known stack suffix:
## unsigned_constant TokHat TokAssignEq expression TokSemi
## LR(1) items:
statement -> unsigned_constant TokHat TokAssignEq expression TokSemi . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production statement -> unsigned_constant TokHat TokAssignEq expression TokSemi

State 141:
## Known stack suffix:
## unsigned_constant TokAssignEq
## LR(1) items:
statement -> unsigned_constant TokAssignEq . expression TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 142
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 142:
## Known stack suffix:
## unsigned_constant TokAssignEq expression
## LR(1) items:
statement -> unsigned_constant TokAssignEq expression . TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokSemi shift to state 143
## Reductions:

State 143:
## Known stack suffix:
## unsigned_constant TokAssignEq expression TokSemi
## LR(1) items:
statement -> unsigned_constant TokAssignEq expression TokSemi . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production statement -> unsigned_constant TokAssignEq expression TokSemi

State 144:
## Known stack suffix:
## constant_expression TokColon statements
## LR(1) items:
case_element -> constant_expression TokColon statements . TokSemi [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar ]
## Transitions:
-- On TokSemi shift to state 145
## Reductions:

State 145:
## Known stack suffix:
## constant_expression TokColon statements TokSemi
## LR(1) items:
case_element -> constant_expression TokColon statements TokSemi . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar
--   reduce production case_element -> constant_expression TokColon statements TokSemi

State 146:
## Known stack suffix:
## constant_expression TokColon statement
## LR(1) items:
case_element -> constant_expression TokColon statement . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar
--   reduce production case_element -> constant_expression TokColon statement

State 147:
## Known stack suffix:
## repeat_statement
## LR(1) items:
statement -> repeat_statement . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production statement -> repeat_statement

State 148:
## Known stack suffix:
## if_statement
## LR(1) items:
statement -> if_statement . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production statement -> if_statement

State 149:
## Known stack suffix:
## for_statement
## LR(1) items:
statement -> for_statement . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production statement -> for_statement

State 150:
## Known stack suffix:
## expression
## LR(1) items:
statement -> expression . TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokSemi shift to state 151
## Reductions:

State 151:
## Known stack suffix:
## expression TokSemi
## LR(1) items:
statement -> expression TokSemi . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production statement -> expression TokSemi

State 152:
## Known stack suffix:
## case_statement
## LR(1) items:
statement -> case_statement . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production statement -> case_statement

State 153:
## Known stack suffix:
## case_element_list_rev
## LR(1) items:
case_element_list -> case_element_list_rev . [ TokEnd TokElse ]
case_element_list_rev -> case_element_list_rev . case_element [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 104
-- On TokPlus shift to state 4
-- On TokNot shift to state 105
-- On TokNil shift to state 106
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 107
-- On TokInt shift to state 108
-- On TokFloat shift to state 109
-- On TokFalse shift to state 17
-- On TokChar shift to state 110
-- On sign shift to state 111
-- On constant_unsigned_constant shift to state 112
-- On constant_term shift to state 118
-- On constant_simple_expression shift to state 121
-- On constant_primary shift to state 113
-- On constant_factor shift to state 125
-- On constant_expression shift to state 133
-- On constant_exponentiation shift to state 115
-- On constant_add_term shift to state 129
-- On character_string_rev shift to state 56
-- On character_string shift to state 116
-- On case_element shift to state 154
-- On boolean_value shift to state 117
## Reductions:
-- On TokEnd TokElse
--   reduce production case_element_list -> case_element_list_rev

State 154:
## Known stack suffix:
## case_element_list_rev case_element
## LR(1) items:
case_element_list_rev -> case_element_list_rev case_element . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar
--   reduce production case_element_list_rev -> case_element_list_rev case_element

State 155:
## Known stack suffix:
## TokCase expression TokOf case_element_list
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list . TokEnd TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
case_statement -> TokCase expression TokOf case_element_list . TokElse statement TokEnd TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokEnd shift to state 156
-- On TokElse shift to state 158
## Reductions:

State 156:
## Known stack suffix:
## TokCase expression TokOf case_element_list TokEnd
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list TokEnd . TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokSemi shift to state 157
## Reductions:

State 157:
## Known stack suffix:
## TokCase expression TokOf case_element_list TokEnd TokSemi
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list TokEnd TokSemi . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production case_statement -> TokCase expression TokOf case_element_list TokEnd TokSemi

State 158:
## Known stack suffix:
## TokCase expression TokOf case_element_list TokElse
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list TokElse . statement TokEnd TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokWhile shift to state 86
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokRepeat shift to state 89
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokIf shift to state 90
-- On TokId shift to state 12
-- On TokFor shift to state 94
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokCase shift to state 101
-- On TokAmp shift to state 24
-- On while_statement shift to state 135
-- On unsigned_constant shift to state 136
-- On term shift to state 28
-- On statement shift to state 159
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On repeat_statement shift to state 147
-- On primary shift to state 35
-- On if_statement shift to state 148
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On for_statement shift to state 149
-- On factor shift to state 54
-- On expression shift to state 150
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On case_statement shift to state 152
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 159:
## Known stack suffix:
## TokCase expression TokOf case_element_list TokElse statement
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list TokElse statement . TokEnd TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokEnd shift to state 160
## Reductions:

State 160:
## Known stack suffix:
## TokCase expression TokOf case_element_list TokElse statement TokEnd
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list TokElse statement TokEnd . TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokSemi shift to state 161
## Reductions:

State 161:
## Known stack suffix:
## TokCase expression TokOf case_element_list TokElse statement TokEnd TokSemi
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list TokElse statement TokEnd TokSemi . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production case_statement -> TokCase expression TokOf case_element_list TokElse statement TokEnd TokSemi

State 162:
## Known stack suffix:
## case_element
## LR(1) items:
case_element_list_rev -> case_element . [ TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar ]
## Transitions:
## Reductions:
-- On TokTrue TokString TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar
--   reduce production case_element_list_rev -> case_element

State 163:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo expression TokDo statements
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo statements . TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokSemi shift to state 164
## Reductions:

State 164:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo expression TokDo statements TokSemi
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo statements TokSemi . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo statements TokSemi

State 165:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo expression TokDo statement
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo statement . TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokSemi shift to state 166
## Reductions:

State 166:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo expression TokDo statement TokSemi
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo statement TokSemi . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo statement TokSemi

State 167:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo . expression TokDo statement TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor identifier TokAssignEq expression TokDownTo . expression TokDo statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 168
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 168:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo expression
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression . TokDo statement TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression . TokDo statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokDo shift to state 169
## Reductions:

State 169:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo expression TokDo
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo . statement TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo . statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokWhile shift to state 86
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokRepeat shift to state 89
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokIf shift to state 90
-- On TokId shift to state 12
-- On TokFor shift to state 94
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokCase shift to state 101
-- On TokBegin shift to state 93
-- On TokAmp shift to state 24
-- On while_statement shift to state 135
-- On unsigned_constant shift to state 136
-- On term shift to state 28
-- On statements shift to state 170
-- On statement shift to state 172
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On repeat_statement shift to state 147
-- On primary shift to state 35
-- On if_statement shift to state 148
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On for_statement shift to state 149
-- On factor shift to state 54
-- On expression shift to state 150
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On case_statement shift to state 152
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 170:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo expression TokDo statements
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo statements . TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokSemi shift to state 171
## Reductions:

State 171:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo expression TokDo statements TokSemi
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo statements TokSemi . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo statements TokSemi

State 172:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo expression TokDo statement
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo statement . TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokSemi shift to state 173
## Reductions:

State 173:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo expression TokDo statement TokSemi
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo statement TokSemi . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo statement TokSemi

State 174:
## Known stack suffix:
## statement_list_rev
## LR(1) items:
statement_list -> statement_list_rev . [ TokUntil TokEnd ]
statement_list_rev -> statement_list_rev . statement [ TokWhile TokUntil TokTrue TokString TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokWhile shift to state 86
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokRepeat shift to state 89
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokIf shift to state 90
-- On TokId shift to state 12
-- On TokFor shift to state 94
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokCase shift to state 101
-- On TokAmp shift to state 24
-- On while_statement shift to state 135
-- On unsigned_constant shift to state 136
-- On term shift to state 28
-- On statement shift to state 175
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On repeat_statement shift to state 147
-- On primary shift to state 35
-- On if_statement shift to state 148
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On for_statement shift to state 149
-- On factor shift to state 54
-- On expression shift to state 150
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On case_statement shift to state 152
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:
-- On TokUntil TokEnd
--   reduce production statement_list -> statement_list_rev

State 175:
## Known stack suffix:
## statement_list_rev statement
## LR(1) items:
statement_list_rev -> statement_list_rev statement . [ TokWhile TokUntil TokTrue TokString TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokDec TokChar TokCase TokAmp
--   reduce production statement_list_rev -> statement_list_rev statement

State 176:
## Known stack suffix:
## TokBegin statement_list
## LR(1) items:
statements -> TokBegin statement_list . TokEnd [ TokSemi TokElse TokDot ]
## Transitions:
-- On TokEnd shift to state 177
## Reductions:

State 177:
## Known stack suffix:
## TokBegin statement_list TokEnd
## LR(1) items:
statements -> TokBegin statement_list TokEnd . [ TokSemi TokElse TokDot ]
## Transitions:
## Reductions:
-- On TokSemi TokElse TokDot
--   reduce production statements -> TokBegin statement_list TokEnd

State 178:
## Known stack suffix:
## statement
## LR(1) items:
statement_list_rev -> statement . [ TokWhile TokUntil TokTrue TokString TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokDec TokChar TokCase TokAmp
--   reduce production statement_list_rev -> statement

State 179:
## Known stack suffix:
## TokIf boolean_expression TokThen statements
## LR(1) items:
if_statement -> TokIf boolean_expression TokThen statements . TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
if_statement -> TokIf boolean_expression TokThen statements . TokElse statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokSemi shift to state 180
-- On TokElse shift to state 181
## Reductions:

State 180:
## Known stack suffix:
## TokIf boolean_expression TokThen statements TokSemi
## LR(1) items:
if_statement -> TokIf boolean_expression TokThen statements TokSemi . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production if_statement -> TokIf boolean_expression TokThen statements TokSemi

State 181:
## Known stack suffix:
## TokIf boolean_expression TokThen statements TokElse
## LR(1) items:
if_statement -> TokIf boolean_expression TokThen statements TokElse . statements TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokBegin shift to state 93
-- On statements shift to state 182
## Reductions:

State 182:
## Known stack suffix:
## TokIf boolean_expression TokThen statements TokElse statements
## LR(1) items:
if_statement -> TokIf boolean_expression TokThen statements TokElse statements . TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokSemi shift to state 183
## Reductions:

State 183:
## Known stack suffix:
## TokIf boolean_expression TokThen statements TokElse statements TokSemi
## LR(1) items:
if_statement -> TokIf boolean_expression TokThen statements TokElse statements TokSemi . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production if_statement -> TokIf boolean_expression TokThen statements TokElse statements TokSemi

State 184:
## Known stack suffix:
## TokRepeat statement_list
## LR(1) items:
repeat_statement -> TokRepeat statement_list . TokUntil boolean_expression TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokUntil shift to state 185
## Reductions:

State 185:
## Known stack suffix:
## TokRepeat statement_list TokUntil
## LR(1) items:
repeat_statement -> TokRepeat statement_list TokUntil . boolean_expression TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 83
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On boolean_expression shift to state 186
-- On add_term shift to state 65
## Reductions:

State 186:
## Known stack suffix:
## TokRepeat statement_list TokUntil boolean_expression
## LR(1) items:
repeat_statement -> TokRepeat statement_list TokUntil boolean_expression . TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokSemi shift to state 187
## Reductions:

State 187:
## Known stack suffix:
## TokRepeat statement_list TokUntil boolean_expression TokSemi
## LR(1) items:
repeat_statement -> TokRepeat statement_list TokUntil boolean_expression TokSemi . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production repeat_statement -> TokRepeat statement_list TokUntil boolean_expression TokSemi

State 188:
## Known stack suffix:
## TokWhile boolean_expression TokDo statements
## LR(1) items:
while_statement -> TokWhile boolean_expression TokDo statements . TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokSemi shift to state 189
## Reductions:

State 189:
## Known stack suffix:
## TokWhile boolean_expression TokDo statements TokSemi
## LR(1) items:
while_statement -> TokWhile boolean_expression TokDo statements TokSemi . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production while_statement -> TokWhile boolean_expression TokDo statements TokSemi

State 190:
## Known stack suffix:
## TokWhile boolean_expression TokDo statement
## LR(1) items:
while_statement -> TokWhile boolean_expression TokDo statement . TokSemi [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
-- On TokSemi shift to state 191
## Reductions:

State 191:
## Known stack suffix:
## TokWhile boolean_expression TokDo statement TokSemi
## LR(1) items:
while_statement -> TokWhile boolean_expression TokDo statement TokSemi . [ TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp ]
## Transitions:
## Reductions:
-- On TokWhile TokUntil TokTrue TokString TokSemi TokRepeat TokPlus TokNot TokNil TokMinus TokLeftParen TokInt TokInc TokIf TokId TokFor TokFloat TokFalse TokEnd TokElse TokDec TokChar TokCase TokAmp
--   reduce production while_statement -> TokWhile boolean_expression TokDo statement TokSemi

State 192:
## Known stack suffix:
## TokWhile boolean_expression TokDo statements
## LR(1) items:
while_statement -> TokWhile boolean_expression TokDo statements . TokSemi [ # ]
## Transitions:
-- On TokSemi shift to state 193
## Reductions:

State 193:
## Known stack suffix:
## TokWhile boolean_expression TokDo statements TokSemi
## LR(1) items:
while_statement -> TokWhile boolean_expression TokDo statements TokSemi . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production while_statement -> TokWhile boolean_expression TokDo statements TokSemi

State 194:
## Known stack suffix:
## TokWhile boolean_expression TokDo statement
## LR(1) items:
while_statement -> TokWhile boolean_expression TokDo statement . TokSemi [ # ]
## Transitions:
-- On TokSemi shift to state 195
## Reductions:

State 195:
## Known stack suffix:
## TokWhile boolean_expression TokDo statement TokSemi
## LR(1) items:
while_statement -> TokWhile boolean_expression TokDo statement TokSemi . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production while_statement -> TokWhile boolean_expression TokDo statement TokSemi

State 196:
## Known stack suffix:
## TokUnit
## LR(1) items:
unit_header -> TokUnit . identifier TokSemi [ TokInterface ]
unit_header -> TokUnit . identifier TokSemi TokUses identifier_list TokSemi [ TokInterface ]
## Transitions:
-- On TokId shift to state 12
-- On identifier shift to state 197
## Reductions:

State 197:
## Known stack suffix:
## TokUnit identifier
## LR(1) items:
unit_header -> TokUnit identifier . TokSemi [ TokInterface ]
unit_header -> TokUnit identifier . TokSemi TokUses identifier_list TokSemi [ TokInterface ]
## Transitions:
-- On TokSemi shift to state 198
## Reductions:

State 198:
## Known stack suffix:
## TokUnit identifier TokSemi
## LR(1) items:
unit_header -> TokUnit identifier TokSemi . [ TokInterface ]
unit_header -> TokUnit identifier TokSemi . TokUses identifier_list TokSemi [ TokInterface ]
## Transitions:
-- On TokUses shift to state 199
## Reductions:
-- On TokInterface
--   reduce production unit_header -> TokUnit identifier TokSemi

State 199:
## Known stack suffix:
## TokUnit identifier TokSemi TokUses
## LR(1) items:
unit_header -> TokUnit identifier TokSemi TokUses . identifier_list TokSemi [ TokInterface ]
## Transitions:
-- On TokId shift to state 12
-- On identifier_list_rev shift to state 200
-- On identifier_list shift to state 203
-- On identifier shift to state 205
## Reductions:

State 200:
## Known stack suffix:
## identifier_list_rev
## LR(1) items:
identifier_list -> identifier_list_rev . [ TokSemi TokRightParen TokColon ]
identifier_list_rev -> identifier_list_rev . TokComma identifier [ TokSemi TokRightParen TokComma TokColon ]
## Transitions:
-- On TokComma shift to state 201
## Reductions:
-- On TokSemi TokRightParen TokColon
--   reduce production identifier_list -> identifier_list_rev

State 201:
## Known stack suffix:
## identifier_list_rev TokComma
## LR(1) items:
identifier_list_rev -> identifier_list_rev TokComma . identifier [ TokSemi TokRightParen TokComma TokColon ]
## Transitions:
-- On TokId shift to state 12
-- On identifier shift to state 202
## Reductions:

State 202:
## Known stack suffix:
## identifier_list_rev TokComma identifier
## LR(1) items:
identifier_list_rev -> identifier_list_rev TokComma identifier . [ TokSemi TokRightParen TokComma TokColon ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen TokComma TokColon
--   reduce production identifier_list_rev -> identifier_list_rev TokComma identifier

State 203:
## Known stack suffix:
## TokUnit identifier TokSemi TokUses identifier_list
## LR(1) items:
unit_header -> TokUnit identifier TokSemi TokUses identifier_list . TokSemi [ TokInterface ]
## Transitions:
-- On TokSemi shift to state 204
## Reductions:

State 204:
## Known stack suffix:
## TokUnit identifier TokSemi TokUses identifier_list TokSemi
## LR(1) items:
unit_header -> TokUnit identifier TokSemi TokUses identifier_list TokSemi . [ TokInterface ]
## Transitions:
## Reductions:
-- On TokInterface
--   reduce production unit_header -> TokUnit identifier TokSemi TokUses identifier_list TokSemi

State 205:
## Known stack suffix:
## identifier
## LR(1) items:
identifier_list_rev -> identifier . [ TokSemi TokRightParen TokComma TokColon ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen TokComma TokColon
--   reduce production identifier_list_rev -> identifier

State 206:
## Known stack suffix:
## TokRepeat
## LR(1) items:
repeat_statement -> TokRepeat . statement_list TokUntil boolean_expression TokSemi [ # ]
## Transitions:
-- On TokWhile shift to state 86
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokRepeat shift to state 89
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokIf shift to state 90
-- On TokId shift to state 12
-- On TokFor shift to state 94
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokCase shift to state 101
-- On TokAmp shift to state 24
-- On while_statement shift to state 135
-- On unsigned_constant shift to state 136
-- On term shift to state 28
-- On statement_list_rev shift to state 174
-- On statement_list shift to state 207
-- On statement shift to state 178
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On repeat_statement shift to state 147
-- On primary shift to state 35
-- On if_statement shift to state 148
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On for_statement shift to state 149
-- On factor shift to state 54
-- On expression shift to state 150
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On case_statement shift to state 152
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 207:
## Known stack suffix:
## TokRepeat statement_list
## LR(1) items:
repeat_statement -> TokRepeat statement_list . TokUntil boolean_expression TokSemi [ # ]
## Transitions:
-- On TokUntil shift to state 208
## Reductions:

State 208:
## Known stack suffix:
## TokRepeat statement_list TokUntil
## LR(1) items:
repeat_statement -> TokRepeat statement_list TokUntil . boolean_expression TokSemi [ # ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 83
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On boolean_expression shift to state 209
-- On add_term shift to state 65
## Reductions:

State 209:
## Known stack suffix:
## TokRepeat statement_list TokUntil boolean_expression
## LR(1) items:
repeat_statement -> TokRepeat statement_list TokUntil boolean_expression . TokSemi [ # ]
## Transitions:
-- On TokSemi shift to state 210
## Reductions:

State 210:
## Known stack suffix:
## TokRepeat statement_list TokUntil boolean_expression TokSemi
## LR(1) items:
repeat_statement -> TokRepeat statement_list TokUntil boolean_expression TokSemi . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production repeat_statement -> TokRepeat statement_list TokUntil boolean_expression TokSemi

State 211:
## Known stack suffix:
## TokProgram
## LR(1) items:
program_header -> TokProgram . identifier TokSemi [ TokVar TokType TokProcedure TokFunction TokBegin ]
program_header -> TokProgram . identifier TokLeftParen identifier_list TokRightParen TokSemi [ TokVar TokType TokProcedure TokFunction TokBegin ]
## Transitions:
-- On TokId shift to state 12
-- On identifier shift to state 212
## Reductions:

State 212:
## Known stack suffix:
## TokProgram identifier
## LR(1) items:
program_header -> TokProgram identifier . TokSemi [ TokVar TokType TokProcedure TokFunction TokBegin ]
program_header -> TokProgram identifier . TokLeftParen identifier_list TokRightParen TokSemi [ TokVar TokType TokProcedure TokFunction TokBegin ]
## Transitions:
-- On TokSemi shift to state 213
-- On TokLeftParen shift to state 214
## Reductions:

State 213:
## Known stack suffix:
## TokProgram identifier TokSemi
## LR(1) items:
program_header -> TokProgram identifier TokSemi . [ TokVar TokType TokProcedure TokFunction TokBegin ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokFunction TokBegin
--   reduce production program_header -> TokProgram identifier TokSemi

State 214:
## Known stack suffix:
## TokProgram identifier TokLeftParen
## LR(1) items:
program_header -> TokProgram identifier TokLeftParen . identifier_list TokRightParen TokSemi [ TokVar TokType TokProcedure TokFunction TokBegin ]
## Transitions:
-- On TokId shift to state 12
-- On identifier_list_rev shift to state 200
-- On identifier_list shift to state 215
-- On identifier shift to state 205
## Reductions:

State 215:
## Known stack suffix:
## TokProgram identifier TokLeftParen identifier_list
## LR(1) items:
program_header -> TokProgram identifier TokLeftParen identifier_list . TokRightParen TokSemi [ TokVar TokType TokProcedure TokFunction TokBegin ]
## Transitions:
-- On TokRightParen shift to state 216
## Reductions:

State 216:
## Known stack suffix:
## TokProgram identifier TokLeftParen identifier_list TokRightParen
## LR(1) items:
program_header -> TokProgram identifier TokLeftParen identifier_list TokRightParen . TokSemi [ TokVar TokType TokProcedure TokFunction TokBegin ]
## Transitions:
-- On TokSemi shift to state 217
## Reductions:

State 217:
## Known stack suffix:
## TokProgram identifier TokLeftParen identifier_list TokRightParen TokSemi
## LR(1) items:
program_header -> TokProgram identifier TokLeftParen identifier_list TokRightParen TokSemi . [ TokVar TokType TokProcedure TokFunction TokBegin ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokFunction TokBegin
--   reduce production program_header -> TokProgram identifier TokLeftParen identifier_list TokRightParen TokSemi

State 218:
## Known stack suffix:
## TokIf
## LR(1) items:
if_statement -> TokIf . boolean_expression TokThen statements TokSemi [ # ]
if_statement -> TokIf . boolean_expression TokThen statements TokElse statements TokSemi [ # ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 83
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On boolean_expression shift to state 219
-- On add_term shift to state 65
## Reductions:

State 219:
## Known stack suffix:
## TokIf boolean_expression
## LR(1) items:
if_statement -> TokIf boolean_expression . TokThen statements TokSemi [ # ]
if_statement -> TokIf boolean_expression . TokThen statements TokElse statements TokSemi [ # ]
## Transitions:
-- On TokThen shift to state 220
## Reductions:

State 220:
## Known stack suffix:
## TokIf boolean_expression TokThen
## LR(1) items:
if_statement -> TokIf boolean_expression TokThen . statements TokSemi [ # ]
if_statement -> TokIf boolean_expression TokThen . statements TokElse statements TokSemi [ # ]
## Transitions:
-- On TokBegin shift to state 93
-- On statements shift to state 221
## Reductions:

State 221:
## Known stack suffix:
## TokIf boolean_expression TokThen statements
## LR(1) items:
if_statement -> TokIf boolean_expression TokThen statements . TokSemi [ # ]
if_statement -> TokIf boolean_expression TokThen statements . TokElse statements TokSemi [ # ]
## Transitions:
-- On TokSemi shift to state 222
-- On TokElse shift to state 223
## Reductions:

State 222:
## Known stack suffix:
## TokIf boolean_expression TokThen statements TokSemi
## LR(1) items:
if_statement -> TokIf boolean_expression TokThen statements TokSemi . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production if_statement -> TokIf boolean_expression TokThen statements TokSemi

State 223:
## Known stack suffix:
## TokIf boolean_expression TokThen statements TokElse
## LR(1) items:
if_statement -> TokIf boolean_expression TokThen statements TokElse . statements TokSemi [ # ]
## Transitions:
-- On TokBegin shift to state 93
-- On statements shift to state 224
## Reductions:

State 224:
## Known stack suffix:
## TokIf boolean_expression TokThen statements TokElse statements
## LR(1) items:
if_statement -> TokIf boolean_expression TokThen statements TokElse statements . TokSemi [ # ]
## Transitions:
-- On TokSemi shift to state 225
## Reductions:

State 225:
## Known stack suffix:
## TokIf boolean_expression TokThen statements TokElse statements TokSemi
## LR(1) items:
if_statement -> TokIf boolean_expression TokThen statements TokElse statements TokSemi . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production if_statement -> TokIf boolean_expression TokThen statements TokElse statements TokSemi

State 226:
## Known stack suffix:
## TokFor
## LR(1) items:
for_statement -> TokFor . identifier TokAssignEq expression TokTo expression TokDo statement TokSemi [ # ]
for_statement -> TokFor . identifier TokAssignEq expression TokTo expression TokDo statements TokSemi [ # ]
for_statement -> TokFor . identifier TokAssignEq expression TokDownTo expression TokDo statement TokSemi [ # ]
for_statement -> TokFor . identifier TokAssignEq expression TokDownTo expression TokDo statements TokSemi [ # ]
## Transitions:
-- On TokId shift to state 12
-- On identifier shift to state 227
## Reductions:

State 227:
## Known stack suffix:
## TokFor identifier
## LR(1) items:
for_statement -> TokFor identifier . TokAssignEq expression TokTo expression TokDo statement TokSemi [ # ]
for_statement -> TokFor identifier . TokAssignEq expression TokTo expression TokDo statements TokSemi [ # ]
for_statement -> TokFor identifier . TokAssignEq expression TokDownTo expression TokDo statement TokSemi [ # ]
for_statement -> TokFor identifier . TokAssignEq expression TokDownTo expression TokDo statements TokSemi [ # ]
## Transitions:
-- On TokAssignEq shift to state 228
## Reductions:

State 228:
## Known stack suffix:
## TokFor identifier TokAssignEq
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq . expression TokTo expression TokDo statement TokSemi [ # ]
for_statement -> TokFor identifier TokAssignEq . expression TokTo expression TokDo statements TokSemi [ # ]
for_statement -> TokFor identifier TokAssignEq . expression TokDownTo expression TokDo statement TokSemi [ # ]
for_statement -> TokFor identifier TokAssignEq . expression TokDownTo expression TokDo statements TokSemi [ # ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 229
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 229:
## Known stack suffix:
## TokFor identifier TokAssignEq expression
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression . TokTo expression TokDo statement TokSemi [ # ]
for_statement -> TokFor identifier TokAssignEq expression . TokTo expression TokDo statements TokSemi [ # ]
for_statement -> TokFor identifier TokAssignEq expression . TokDownTo expression TokDo statement TokSemi [ # ]
for_statement -> TokFor identifier TokAssignEq expression . TokDownTo expression TokDo statements TokSemi [ # ]
## Transitions:
-- On TokTo shift to state 230
-- On TokDownTo shift to state 237
## Reductions:

State 230:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo . expression TokDo statement TokSemi [ # ]
for_statement -> TokFor identifier TokAssignEq expression TokTo . expression TokDo statements TokSemi [ # ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 231
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 231:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo expression
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo expression . TokDo statement TokSemi [ # ]
for_statement -> TokFor identifier TokAssignEq expression TokTo expression . TokDo statements TokSemi [ # ]
## Transitions:
-- On TokDo shift to state 232
## Reductions:

State 232:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo expression TokDo
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo . statement TokSemi [ # ]
for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo . statements TokSemi [ # ]
## Transitions:
-- On TokWhile shift to state 86
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokRepeat shift to state 89
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokIf shift to state 90
-- On TokId shift to state 12
-- On TokFor shift to state 94
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokCase shift to state 101
-- On TokBegin shift to state 93
-- On TokAmp shift to state 24
-- On while_statement shift to state 135
-- On unsigned_constant shift to state 136
-- On term shift to state 28
-- On statements shift to state 233
-- On statement shift to state 235
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On repeat_statement shift to state 147
-- On primary shift to state 35
-- On if_statement shift to state 148
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On for_statement shift to state 149
-- On factor shift to state 54
-- On expression shift to state 150
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On case_statement shift to state 152
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 233:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo expression TokDo statements
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo statements . TokSemi [ # ]
## Transitions:
-- On TokSemi shift to state 234
## Reductions:

State 234:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo expression TokDo statements TokSemi
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo statements TokSemi . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo statements TokSemi

State 235:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo expression TokDo statement
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo statement . TokSemi [ # ]
## Transitions:
-- On TokSemi shift to state 236
## Reductions:

State 236:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo expression TokDo statement TokSemi
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo statement TokSemi . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo statement TokSemi

State 237:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo . expression TokDo statement TokSemi [ # ]
for_statement -> TokFor identifier TokAssignEq expression TokDownTo . expression TokDo statements TokSemi [ # ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 238
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 238:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo expression
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression . TokDo statement TokSemi [ # ]
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression . TokDo statements TokSemi [ # ]
## Transitions:
-- On TokDo shift to state 239
## Reductions:

State 239:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo expression TokDo
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo . statement TokSemi [ # ]
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo . statements TokSemi [ # ]
## Transitions:
-- On TokWhile shift to state 86
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokRepeat shift to state 89
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokIf shift to state 90
-- On TokId shift to state 12
-- On TokFor shift to state 94
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokCase shift to state 101
-- On TokBegin shift to state 93
-- On TokAmp shift to state 24
-- On while_statement shift to state 135
-- On unsigned_constant shift to state 136
-- On term shift to state 28
-- On statements shift to state 240
-- On statement shift to state 242
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On repeat_statement shift to state 147
-- On primary shift to state 35
-- On if_statement shift to state 148
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On for_statement shift to state 149
-- On factor shift to state 54
-- On expression shift to state 150
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On case_statement shift to state 152
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 240:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo expression TokDo statements
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo statements . TokSemi [ # ]
## Transitions:
-- On TokSemi shift to state 241
## Reductions:

State 241:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo expression TokDo statements TokSemi
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo statements TokSemi . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo statements TokSemi

State 242:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo expression TokDo statement
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo statement . TokSemi [ # ]
## Transitions:
-- On TokSemi shift to state 243
## Reductions:

State 243:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo expression TokDo statement TokSemi
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo statement TokSemi . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo statement TokSemi

State 244:
## Known stack suffix:
## TokEof
## LR(1) items:
console -> TokEof . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production console -> TokEof

State 245:
## Known stack suffix:
## TokCase
## LR(1) items:
case_statement -> TokCase . expression TokOf case_element_list TokEnd TokSemi [ # ]
case_statement -> TokCase . expression TokOf case_element_list TokElse statement TokEnd TokSemi [ # ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 246
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 246:
## Known stack suffix:
## TokCase expression
## LR(1) items:
case_statement -> TokCase expression . TokOf case_element_list TokEnd TokSemi [ # ]
case_statement -> TokCase expression . TokOf case_element_list TokElse statement TokEnd TokSemi [ # ]
## Transitions:
-- On TokOf shift to state 247
## Reductions:

State 247:
## Known stack suffix:
## TokCase expression TokOf
## LR(1) items:
case_statement -> TokCase expression TokOf . case_element_list TokEnd TokSemi [ # ]
case_statement -> TokCase expression TokOf . case_element_list TokElse statement TokEnd TokSemi [ # ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 104
-- On TokPlus shift to state 4
-- On TokNot shift to state 105
-- On TokNil shift to state 106
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 107
-- On TokInt shift to state 108
-- On TokFloat shift to state 109
-- On TokFalse shift to state 17
-- On TokChar shift to state 110
-- On sign shift to state 111
-- On constant_unsigned_constant shift to state 112
-- On constant_term shift to state 118
-- On constant_simple_expression shift to state 121
-- On constant_primary shift to state 113
-- On constant_factor shift to state 125
-- On constant_expression shift to state 133
-- On constant_exponentiation shift to state 115
-- On constant_add_term shift to state 129
-- On character_string_rev shift to state 56
-- On character_string shift to state 116
-- On case_element_list_rev shift to state 153
-- On case_element_list shift to state 248
-- On case_element shift to state 162
-- On boolean_value shift to state 117
## Reductions:

State 248:
## Known stack suffix:
## TokCase expression TokOf case_element_list
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list . TokEnd TokSemi [ # ]
case_statement -> TokCase expression TokOf case_element_list . TokElse statement TokEnd TokSemi [ # ]
## Transitions:
-- On TokEnd shift to state 249
-- On TokElse shift to state 251
## Reductions:

State 249:
## Known stack suffix:
## TokCase expression TokOf case_element_list TokEnd
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list TokEnd . TokSemi [ # ]
## Transitions:
-- On TokSemi shift to state 250
## Reductions:

State 250:
## Known stack suffix:
## TokCase expression TokOf case_element_list TokEnd TokSemi
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list TokEnd TokSemi . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production case_statement -> TokCase expression TokOf case_element_list TokEnd TokSemi

State 251:
## Known stack suffix:
## TokCase expression TokOf case_element_list TokElse
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list TokElse . statement TokEnd TokSemi [ # ]
## Transitions:
-- On TokWhile shift to state 86
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokRepeat shift to state 89
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokIf shift to state 90
-- On TokId shift to state 12
-- On TokFor shift to state 94
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokCase shift to state 101
-- On TokAmp shift to state 24
-- On while_statement shift to state 135
-- On unsigned_constant shift to state 136
-- On term shift to state 28
-- On statement shift to state 252
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On repeat_statement shift to state 147
-- On primary shift to state 35
-- On if_statement shift to state 148
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On for_statement shift to state 149
-- On factor shift to state 54
-- On expression shift to state 150
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On case_statement shift to state 152
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 252:
## Known stack suffix:
## TokCase expression TokOf case_element_list TokElse statement
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list TokElse statement . TokEnd TokSemi [ # ]
## Transitions:
-- On TokEnd shift to state 253
## Reductions:

State 253:
## Known stack suffix:
## TokCase expression TokOf case_element_list TokElse statement TokEnd
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list TokElse statement TokEnd . TokSemi [ # ]
## Transitions:
-- On TokSemi shift to state 254
## Reductions:

State 254:
## Known stack suffix:
## TokCase expression TokOf case_element_list TokElse statement TokEnd TokSemi
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list TokElse statement TokEnd TokSemi . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production case_statement -> TokCase expression TokOf case_element_list TokElse statement TokEnd TokSemi

State 255:
## Known stack suffix:
## while_statement
## LR(1) items:
statement -> while_statement . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production statement -> while_statement

State 256:
## Known stack suffix:
## unsigned_constant
## LR(1) items:
primary -> unsigned_constant . [ TokXor TokStar TokSlash TokShr TokShl TokSemi TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokAnd ]
statement -> unsigned_constant . TokAssignEq expression TokSemi [ # ]
statement -> unsigned_constant . TokHat TokAssignEq expression TokSemi [ # ]
unsigned_constant -> unsigned_constant . TokHat [ TokXor TokStar TokSlash TokShr TokShl TokSemi TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDiv TokAssignEq TokAnd ]
## Transitions:
-- On TokHat shift to state 257
-- On TokAssignEq shift to state 261
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokSemi TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokAnd
--   reduce production primary -> unsigned_constant

State 257:
## Known stack suffix:
## unsigned_constant TokHat
## LR(1) items:
statement -> unsigned_constant TokHat . TokAssignEq expression TokSemi [ # ]
unsigned_constant -> unsigned_constant TokHat . [ TokXor TokStar TokSlash TokShr TokShl TokSemi TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDiv TokAssignEq TokAnd ]
## Transitions:
-- On TokAssignEq shift to state 258
## Reductions:
-- On TokXor TokStar TokSlash TokShr TokShl TokSemi TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokHat TokGt TokGe TokEq TokDiv TokAssignEq TokAnd
--   reduce production unsigned_constant -> unsigned_constant TokHat
** Conflict on TokAssignEq

State 258:
## Known stack suffix:
## unsigned_constant TokHat TokAssignEq
## LR(1) items:
statement -> unsigned_constant TokHat TokAssignEq . expression TokSemi [ # ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 259
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 259:
## Known stack suffix:
## unsigned_constant TokHat TokAssignEq expression
## LR(1) items:
statement -> unsigned_constant TokHat TokAssignEq expression . TokSemi [ # ]
## Transitions:
-- On TokSemi shift to state 260
## Reductions:

State 260:
## Known stack suffix:
## unsigned_constant TokHat TokAssignEq expression TokSemi
## LR(1) items:
statement -> unsigned_constant TokHat TokAssignEq expression TokSemi . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production statement -> unsigned_constant TokHat TokAssignEq expression TokSemi

State 261:
## Known stack suffix:
## unsigned_constant TokAssignEq
## LR(1) items:
statement -> unsigned_constant TokAssignEq . expression TokSemi [ # ]
## Transitions:
-- On TokTrue shift to state 2
-- On TokString shift to state 3
-- On TokPlus shift to state 4
-- On TokNot shift to state 5
-- On TokNil shift to state 6
-- On TokMinus shift to state 8
-- On TokLeftParen shift to state 7
-- On TokInt shift to state 9
-- On TokInc shift to state 10
-- On TokId shift to state 12
-- On TokFloat shift to state 16
-- On TokFalse shift to state 17
-- On TokDec shift to state 18
-- On TokChar shift to state 23
-- On TokAmp shift to state 24
-- On unsigned_constant shift to state 26
-- On term shift to state 28
-- On simple_expression shift to state 38
-- On sign shift to state 34
-- On primary shift to state 35
-- On identifier shift to state 36
-- On function_call shift to state 53
-- On factor shift to state 54
-- On expression shift to state 262
-- On exponentiation shift to state 55
-- On character_string_rev shift to state 56
-- On character_string shift to state 58
-- On boolean_value shift to state 59
-- On add_term shift to state 65
## Reductions:

State 262:
## Known stack suffix:
## unsigned_constant TokAssignEq expression
## LR(1) items:
statement -> unsigned_constant TokAssignEq expression . TokSemi [ # ]
## Transitions:
-- On TokSemi shift to state 263
## Reductions:

State 263:
## Known stack suffix:
## unsigned_constant TokAssignEq expression TokSemi
## LR(1) items:
statement -> unsigned_constant TokAssignEq expression TokSemi . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production statement -> unsigned_constant TokAssignEq expression TokSemi

State 264:
## Known stack suffix:
## unit_header
## LR(1) items:
unit_body -> unit_header . interface_body implementation_body statements TokDot [ # ]
unit_body -> unit_header . interface_body implementation_body TokEnd TokDot [ # ]
## Transitions:
-- On TokInterface shift to state 265
-- On interface_body shift to state 371
## Reductions:

State 265:
## Known stack suffix:
## TokInterface
## LR(1) items:
interface_body -> TokInterface . interface_body_rev [ TokImplementation ]
## Transitions:
-- On TokVar shift to state 266
-- On TokType shift to state 333
-- On TokProcedure shift to state 342
-- On TokFunction shift to state 347
-- On variable_decl shift to state 356
-- On type_def shift to state 357
-- On procedure_heading shift to state 358
-- On interface_body_rev shift to state 364
-- On interface_body_element shift to state 370
-- On function_heading shift to state 366
## Reductions:

State 266:
## Known stack suffix:
## TokVar
## LR(1) items:
variable_decl -> TokVar . variable_declaration_list TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction TokEnd TokBegin ]
## Transitions:
-- On TokId shift to state 12
-- On variable_declaration_list shift to state 267
-- On variable_declaration shift to state 332
-- On identifier_list_rev shift to state 200
-- On identifier_list shift to state 270
-- On identifier shift to state 205
## Reductions:

State 267:
## Known stack suffix:
## TokVar variable_declaration_list
## LR(1) items:
variable_decl -> TokVar variable_declaration_list . TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction TokEnd TokBegin ]
variable_declaration_list -> variable_declaration_list . TokSemi variable_declaration [ TokSemi ]
## Transitions:
-- On TokSemi shift to state 268
## Reductions:

State 268:
## Known stack suffix:
## TokVar variable_declaration_list TokSemi
## LR(1) items:
variable_decl -> TokVar variable_declaration_list TokSemi . [ TokVar TokType TokProcedure TokImplementation TokFunction TokEnd TokBegin ]
variable_declaration_list -> variable_declaration_list TokSemi . variable_declaration [ TokSemi ]
## Transitions:
-- On TokId shift to state 12
-- On variable_declaration shift to state 269
-- On identifier_list_rev shift to state 200
-- On identifier_list shift to state 270
-- On identifier shift to state 205
## Reductions:
-- On TokVar TokType TokProcedure TokImplementation TokFunction TokEnd TokBegin
--   reduce production variable_decl -> TokVar variable_declaration_list TokSemi

State 269:
## Known stack suffix:
## variable_declaration_list TokSemi variable_declaration
## LR(1) items:
variable_declaration_list -> variable_declaration_list TokSemi variable_declaration . [ TokSemi ]
## Transitions:
## Reductions:
-- On TokSemi
--   reduce production variable_declaration_list -> variable_declaration_list TokSemi variable_declaration

State 270:
## Known stack suffix:
## identifier_list
## LR(1) items:
variable_declaration -> identifier_list . TokColon type_denoter [ TokSemi ]
## Transitions:
-- On TokColon shift to state 271
## Reductions:

State 271:
## Known stack suffix:
## identifier_list TokColon
## LR(1) items:
variable_declaration -> identifier_list TokColon . type_denoter [ TokSemi ]
## Transitions:
-- On TokTypeString shift to state 272
-- On TokTypeSingle shift to state 273
-- On TokTypeInteger shift to state 274
-- On TokTypeChar shift to state 275
-- On TokRecord shift to state 276
-- On TokProcedure shift to state 283
-- On TokId shift to state 12
-- On TokHat shift to state 289
-- On TokFunction shift to state 290
-- On TokArray shift to state 300
-- On type_denoter shift to state 331
-- On record_type shift to state 312
-- On procedure_type_heading shift to state 313
-- On new_type shift to state 314
-- On new_structured_type shift to state 315
-- On new_pointer_type shift to state 316
-- On identifier shift to state 317
-- On function_type_heading shift to state 318
-- On array_type shift to state 319
## Reductions:

State 272:
## Known stack suffix:
## TokTypeString
## LR(1) items:
type_denoter -> TokTypeString . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production type_denoter -> TokTypeString

State 273:
## Known stack suffix:
## TokTypeSingle
## LR(1) items:
type_denoter -> TokTypeSingle . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production type_denoter -> TokTypeSingle

State 274:
## Known stack suffix:
## TokTypeInteger
## LR(1) items:
type_denoter -> TokTypeInteger . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production type_denoter -> TokTypeInteger

State 275:
## Known stack suffix:
## TokTypeChar
## LR(1) items:
type_denoter -> TokTypeChar . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production type_denoter -> TokTypeChar

State 276:
## Known stack suffix:
## TokRecord
## LR(1) items:
record_type -> TokRecord . record_section_list TokSemi TokEnd [ TokSemi TokRightParen ]
## Transitions:
-- On TokId shift to state 12
-- On record_section_list shift to state 277
-- On record_section shift to state 330
-- On identifier_list_rev shift to state 200
-- On identifier_list shift to state 281
-- On identifier shift to state 205
## Reductions:

State 277:
## Known stack suffix:
## TokRecord record_section_list
## LR(1) items:
record_section_list -> record_section_list . TokSemi record_section [ TokSemi ]
record_type -> TokRecord record_section_list . TokSemi TokEnd [ TokSemi TokRightParen ]
## Transitions:
-- On TokSemi shift to state 278
## Reductions:

State 278:
## Known stack suffix:
## TokRecord record_section_list TokSemi
## LR(1) items:
record_section_list -> record_section_list TokSemi . record_section [ TokSemi ]
record_type -> TokRecord record_section_list TokSemi . TokEnd [ TokSemi TokRightParen ]
## Transitions:
-- On TokId shift to state 12
-- On TokEnd shift to state 279
-- On record_section shift to state 280
-- On identifier_list_rev shift to state 200
-- On identifier_list shift to state 281
-- On identifier shift to state 205
## Reductions:

State 279:
## Known stack suffix:
## TokRecord record_section_list TokSemi TokEnd
## LR(1) items:
record_type -> TokRecord record_section_list TokSemi TokEnd . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production record_type -> TokRecord record_section_list TokSemi TokEnd

State 280:
## Known stack suffix:
## record_section_list TokSemi record_section
## LR(1) items:
record_section_list -> record_section_list TokSemi record_section . [ TokSemi ]
## Transitions:
## Reductions:
-- On TokSemi
--   reduce production record_section_list -> record_section_list TokSemi record_section

State 281:
## Known stack suffix:
## identifier_list
## LR(1) items:
record_section -> identifier_list . TokColon type_denoter [ TokSemi ]
## Transitions:
-- On TokColon shift to state 282
## Reductions:

State 282:
## Known stack suffix:
## identifier_list TokColon
## LR(1) items:
record_section -> identifier_list TokColon . type_denoter [ TokSemi ]
## Transitions:
-- On TokTypeString shift to state 272
-- On TokTypeSingle shift to state 273
-- On TokTypeInteger shift to state 274
-- On TokTypeChar shift to state 275
-- On TokRecord shift to state 276
-- On TokProcedure shift to state 283
-- On TokId shift to state 12
-- On TokHat shift to state 289
-- On TokFunction shift to state 290
-- On TokArray shift to state 300
-- On type_denoter shift to state 329
-- On record_type shift to state 312
-- On procedure_type_heading shift to state 313
-- On new_type shift to state 314
-- On new_structured_type shift to state 315
-- On new_pointer_type shift to state 316
-- On identifier shift to state 317
-- On function_type_heading shift to state 318
-- On array_type shift to state 319
## Reductions:

State 283:
## Known stack suffix:
## TokProcedure
## LR(1) items:
procedure_type_heading -> TokProcedure . identifier [ TokSemi TokRightParen ]
procedure_type_heading -> TokProcedure . TokLeftParen formal_parameters TokRightParen [ TokSemi TokRightParen ]
## Transitions:
-- On TokLeftParen shift to state 284
-- On TokId shift to state 12
-- On identifier shift to state 328
## Reductions:

State 284:
## Known stack suffix:
## TokProcedure TokLeftParen
## LR(1) items:
procedure_type_heading -> TokProcedure TokLeftParen . formal_parameters TokRightParen [ TokSemi TokRightParen ]
## Transitions:
-- On TokVar shift to state 285
-- On TokId shift to state 12
-- On var_parameter_set shift to state 292
-- On value_parameter_set shift to state 293
-- On identifier_list_rev shift to state 200
-- On identifier_list shift to state 287
-- On identifier shift to state 205
-- On formal_parameters shift to state 326
## Reductions:

State 285:
## Known stack suffix:
## TokVar
## LR(1) items:
var_parameter_set -> TokVar . value_parameter_set [ TokSemi TokRightParen ]
## Transitions:
-- On TokId shift to state 12
-- On value_parameter_set shift to state 286
-- On identifier_list_rev shift to state 200
-- On identifier_list shift to state 287
-- On identifier shift to state 205
## Reductions:

State 286:
## Known stack suffix:
## TokVar value_parameter_set
## LR(1) items:
var_parameter_set -> TokVar value_parameter_set . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production var_parameter_set -> TokVar value_parameter_set

State 287:
## Known stack suffix:
## identifier_list
## LR(1) items:
value_parameter_set -> identifier_list . TokColon type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokColon shift to state 288
## Reductions:

State 288:
## Known stack suffix:
## identifier_list TokColon
## LR(1) items:
value_parameter_set -> identifier_list TokColon . type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokTypeString shift to state 272
-- On TokTypeSingle shift to state 273
-- On TokTypeInteger shift to state 274
-- On TokTypeChar shift to state 275
-- On TokRecord shift to state 276
-- On TokProcedure shift to state 283
-- On TokId shift to state 12
-- On TokHat shift to state 289
-- On TokFunction shift to state 290
-- On TokArray shift to state 300
-- On type_denoter shift to state 325
-- On record_type shift to state 312
-- On procedure_type_heading shift to state 313
-- On new_type shift to state 314
-- On new_structured_type shift to state 315
-- On new_pointer_type shift to state 316
-- On identifier shift to state 317
-- On function_type_heading shift to state 318
-- On array_type shift to state 319
## Reductions:

State 289:
## Known stack suffix:
## TokHat
## LR(1) items:
new_pointer_type -> TokHat . type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokTypeString shift to state 272
-- On TokTypeSingle shift to state 273
-- On TokTypeInteger shift to state 274
-- On TokTypeChar shift to state 275
-- On TokRecord shift to state 276
-- On TokProcedure shift to state 283
-- On TokId shift to state 12
-- On TokHat shift to state 289
-- On TokFunction shift to state 290
-- On TokArray shift to state 300
-- On type_denoter shift to state 324
-- On record_type shift to state 312
-- On procedure_type_heading shift to state 313
-- On new_type shift to state 314
-- On new_structured_type shift to state 315
-- On new_pointer_type shift to state 316
-- On identifier shift to state 317
-- On function_type_heading shift to state 318
-- On array_type shift to state 319
## Reductions:

State 290:
## Known stack suffix:
## TokFunction
## LR(1) items:
function_type_heading -> TokFunction . TokColon type_denoter [ TokSemi TokRightParen ]
function_type_heading -> TokFunction . TokLeftParen formal_parameters TokRightParen TokColon type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokLeftParen shift to state 291
-- On TokColon shift to state 322
## Reductions:

State 291:
## Known stack suffix:
## TokFunction TokLeftParen
## LR(1) items:
function_type_heading -> TokFunction TokLeftParen . formal_parameters TokRightParen TokColon type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokVar shift to state 285
-- On TokId shift to state 12
-- On var_parameter_set shift to state 292
-- On value_parameter_set shift to state 293
-- On identifier_list_rev shift to state 200
-- On identifier_list shift to state 287
-- On identifier shift to state 205
-- On formal_parameters shift to state 294
## Reductions:

State 292:
## Known stack suffix:
## var_parameter_set
## LR(1) items:
formal_parameters -> var_parameter_set . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production formal_parameters -> var_parameter_set

State 293:
## Known stack suffix:
## value_parameter_set
## LR(1) items:
formal_parameters -> value_parameter_set . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production formal_parameters -> value_parameter_set

State 294:
## Known stack suffix:
## TokFunction TokLeftParen formal_parameters
## LR(1) items:
formal_parameters -> formal_parameters . TokSemi value_parameter_set [ TokSemi TokRightParen ]
formal_parameters -> formal_parameters . TokSemi var_parameter_set [ TokSemi TokRightParen ]
function_type_heading -> TokFunction TokLeftParen formal_parameters . TokRightParen TokColon type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokSemi shift to state 295
-- On TokRightParen shift to state 298
## Reductions:

State 295:
## Known stack suffix:
## formal_parameters TokSemi
## LR(1) items:
formal_parameters -> formal_parameters TokSemi . value_parameter_set [ TokSemi TokRightParen ]
formal_parameters -> formal_parameters TokSemi . var_parameter_set [ TokSemi TokRightParen ]
## Transitions:
-- On TokVar shift to state 285
-- On TokId shift to state 12
-- On var_parameter_set shift to state 296
-- On value_parameter_set shift to state 297
-- On identifier_list_rev shift to state 200
-- On identifier_list shift to state 287
-- On identifier shift to state 205
## Reductions:

State 296:
## Known stack suffix:
## formal_parameters TokSemi var_parameter_set
## LR(1) items:
formal_parameters -> formal_parameters TokSemi var_parameter_set . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production formal_parameters -> formal_parameters TokSemi var_parameter_set

State 297:
## Known stack suffix:
## formal_parameters TokSemi value_parameter_set
## LR(1) items:
formal_parameters -> formal_parameters TokSemi value_parameter_set . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production formal_parameters -> formal_parameters TokSemi value_parameter_set

State 298:
## Known stack suffix:
## TokFunction TokLeftParen formal_parameters TokRightParen
## LR(1) items:
function_type_heading -> TokFunction TokLeftParen formal_parameters TokRightParen . TokColon type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokColon shift to state 299
## Reductions:

State 299:
## Known stack suffix:
## TokFunction TokLeftParen formal_parameters TokRightParen TokColon
## LR(1) items:
function_type_heading -> TokFunction TokLeftParen formal_parameters TokRightParen TokColon . type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokTypeString shift to state 272
-- On TokTypeSingle shift to state 273
-- On TokTypeInteger shift to state 274
-- On TokTypeChar shift to state 275
-- On TokRecord shift to state 276
-- On TokProcedure shift to state 283
-- On TokId shift to state 12
-- On TokHat shift to state 289
-- On TokFunction shift to state 290
-- On TokArray shift to state 300
-- On type_denoter shift to state 321
-- On record_type shift to state 312
-- On procedure_type_heading shift to state 313
-- On new_type shift to state 314
-- On new_structured_type shift to state 315
-- On new_pointer_type shift to state 316
-- On identifier shift to state 317
-- On function_type_heading shift to state 318
-- On array_type shift to state 319
## Reductions:

State 300:
## Known stack suffix:
## TokArray
## LR(1) items:
array_type -> TokArray . TokLeftBrack index_list TokRightBrack TokOf type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokLeftBrack shift to state 301
## Reductions:

State 301:
## Known stack suffix:
## TokArray TokLeftBrack
## LR(1) items:
array_type -> TokArray TokLeftBrack . index_list TokRightBrack TokOf type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokInt shift to state 302
-- On index_list_rev shift to state 305
-- On index_list shift to state 308
-- On index shift to state 320
## Reductions:

State 302:
## Known stack suffix:
## TokInt
## LR(1) items:
index -> TokInt . TokTwoDots TokInt [ TokRightBrack TokComma ]
## Transitions:
-- On TokTwoDots shift to state 303
## Reductions:

State 303:
## Known stack suffix:
## TokInt TokTwoDots
## LR(1) items:
index -> TokInt TokTwoDots . TokInt [ TokRightBrack TokComma ]
## Transitions:
-- On TokInt shift to state 304
## Reductions:

State 304:
## Known stack suffix:
## TokInt TokTwoDots TokInt
## LR(1) items:
index -> TokInt TokTwoDots TokInt . [ TokRightBrack TokComma ]
## Transitions:
## Reductions:
-- On TokRightBrack TokComma
--   reduce production index -> TokInt TokTwoDots TokInt

State 305:
## Known stack suffix:
## index_list_rev
## LR(1) items:
index_list -> index_list_rev . [ TokRightBrack ]
index_list_rev -> index_list_rev . TokComma index [ TokRightBrack TokComma ]
## Transitions:
-- On TokComma shift to state 306
## Reductions:
-- On TokRightBrack
--   reduce production index_list -> index_list_rev

State 306:
## Known stack suffix:
## index_list_rev TokComma
## LR(1) items:
index_list_rev -> index_list_rev TokComma . index [ TokRightBrack TokComma ]
## Transitions:
-- On TokInt shift to state 302
-- On index shift to state 307
## Reductions:

State 307:
## Known stack suffix:
## index_list_rev TokComma index
## LR(1) items:
index_list_rev -> index_list_rev TokComma index . [ TokRightBrack TokComma ]
## Transitions:
## Reductions:
-- On TokRightBrack TokComma
--   reduce production index_list_rev -> index_list_rev TokComma index

State 308:
## Known stack suffix:
## TokArray TokLeftBrack index_list
## LR(1) items:
array_type -> TokArray TokLeftBrack index_list . TokRightBrack TokOf type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokRightBrack shift to state 309
## Reductions:

State 309:
## Known stack suffix:
## TokArray TokLeftBrack index_list TokRightBrack
## LR(1) items:
array_type -> TokArray TokLeftBrack index_list TokRightBrack . TokOf type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokOf shift to state 310
## Reductions:

State 310:
## Known stack suffix:
## TokArray TokLeftBrack index_list TokRightBrack TokOf
## LR(1) items:
array_type -> TokArray TokLeftBrack index_list TokRightBrack TokOf . type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokTypeString shift to state 272
-- On TokTypeSingle shift to state 273
-- On TokTypeInteger shift to state 274
-- On TokTypeChar shift to state 275
-- On TokRecord shift to state 276
-- On TokProcedure shift to state 283
-- On TokId shift to state 12
-- On TokHat shift to state 289
-- On TokFunction shift to state 290
-- On TokArray shift to state 300
-- On type_denoter shift to state 311
-- On record_type shift to state 312
-- On procedure_type_heading shift to state 313
-- On new_type shift to state 314
-- On new_structured_type shift to state 315
-- On new_pointer_type shift to state 316
-- On identifier shift to state 317
-- On function_type_heading shift to state 318
-- On array_type shift to state 319
## Reductions:

State 311:
## Known stack suffix:
## TokArray TokLeftBrack index_list TokRightBrack TokOf type_denoter
## LR(1) items:
array_type -> TokArray TokLeftBrack index_list TokRightBrack TokOf type_denoter . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production array_type -> TokArray TokLeftBrack index_list TokRightBrack TokOf type_denoter

State 312:
## Known stack suffix:
## record_type
## LR(1) items:
new_structured_type -> record_type . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production new_structured_type -> record_type

State 313:
## Known stack suffix:
## procedure_type_heading
## LR(1) items:
type_denoter -> procedure_type_heading . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production type_denoter -> procedure_type_heading

State 314:
## Known stack suffix:
## new_type
## LR(1) items:
type_denoter -> new_type . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production type_denoter -> new_type

State 315:
## Known stack suffix:
## new_structured_type
## LR(1) items:
new_type -> new_structured_type . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production new_type -> new_structured_type

State 316:
## Known stack suffix:
## new_pointer_type
## LR(1) items:
new_type -> new_pointer_type . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production new_type -> new_pointer_type

State 317:
## Known stack suffix:
## identifier
## LR(1) items:
type_denoter -> identifier . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production type_denoter -> identifier

State 318:
## Known stack suffix:
## function_type_heading
## LR(1) items:
type_denoter -> function_type_heading . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production type_denoter -> function_type_heading

State 319:
## Known stack suffix:
## array_type
## LR(1) items:
new_structured_type -> array_type . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production new_structured_type -> array_type

State 320:
## Known stack suffix:
## index
## LR(1) items:
index_list_rev -> index . [ TokRightBrack TokComma ]
## Transitions:
## Reductions:
-- On TokRightBrack TokComma
--   reduce production index_list_rev -> index

State 321:
## Known stack suffix:
## TokFunction TokLeftParen formal_parameters TokRightParen TokColon type_denoter
## LR(1) items:
function_type_heading -> TokFunction TokLeftParen formal_parameters TokRightParen TokColon type_denoter . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production function_type_heading -> TokFunction TokLeftParen formal_parameters TokRightParen TokColon type_denoter

State 322:
## Known stack suffix:
## TokFunction TokColon
## LR(1) items:
function_type_heading -> TokFunction TokColon . type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokTypeString shift to state 272
-- On TokTypeSingle shift to state 273
-- On TokTypeInteger shift to state 274
-- On TokTypeChar shift to state 275
-- On TokRecord shift to state 276
-- On TokProcedure shift to state 283
-- On TokId shift to state 12
-- On TokHat shift to state 289
-- On TokFunction shift to state 290
-- On TokArray shift to state 300
-- On type_denoter shift to state 323
-- On record_type shift to state 312
-- On procedure_type_heading shift to state 313
-- On new_type shift to state 314
-- On new_structured_type shift to state 315
-- On new_pointer_type shift to state 316
-- On identifier shift to state 317
-- On function_type_heading shift to state 318
-- On array_type shift to state 319
## Reductions:

State 323:
## Known stack suffix:
## TokFunction TokColon type_denoter
## LR(1) items:
function_type_heading -> TokFunction TokColon type_denoter . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production function_type_heading -> TokFunction TokColon type_denoter

State 324:
## Known stack suffix:
## TokHat type_denoter
## LR(1) items:
new_pointer_type -> TokHat type_denoter . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production new_pointer_type -> TokHat type_denoter

State 325:
## Known stack suffix:
## identifier_list TokColon type_denoter
## LR(1) items:
value_parameter_set -> identifier_list TokColon type_denoter . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production value_parameter_set -> identifier_list TokColon type_denoter

State 326:
## Known stack suffix:
## TokProcedure TokLeftParen formal_parameters
## LR(1) items:
formal_parameters -> formal_parameters . TokSemi value_parameter_set [ TokSemi TokRightParen ]
formal_parameters -> formal_parameters . TokSemi var_parameter_set [ TokSemi TokRightParen ]
procedure_type_heading -> TokProcedure TokLeftParen formal_parameters . TokRightParen [ TokSemi TokRightParen ]
## Transitions:
-- On TokSemi shift to state 295
-- On TokRightParen shift to state 327
## Reductions:

State 327:
## Known stack suffix:
## TokProcedure TokLeftParen formal_parameters TokRightParen
## LR(1) items:
procedure_type_heading -> TokProcedure TokLeftParen formal_parameters TokRightParen . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production procedure_type_heading -> TokProcedure TokLeftParen formal_parameters TokRightParen

State 328:
## Known stack suffix:
## TokProcedure identifier
## LR(1) items:
procedure_type_heading -> TokProcedure identifier . [ TokSemi TokRightParen ]
## Transitions:
## Reductions:
-- On TokSemi TokRightParen
--   reduce production procedure_type_heading -> TokProcedure identifier

State 329:
## Known stack suffix:
## identifier_list TokColon type_denoter
## LR(1) items:
record_section -> identifier_list TokColon type_denoter . [ TokSemi ]
## Transitions:
## Reductions:
-- On TokSemi
--   reduce production record_section -> identifier_list TokColon type_denoter

State 330:
## Known stack suffix:
## record_section
## LR(1) items:
record_section_list -> record_section . [ TokSemi ]
## Transitions:
## Reductions:
-- On TokSemi
--   reduce production record_section_list -> record_section

State 331:
## Known stack suffix:
## identifier_list TokColon type_denoter
## LR(1) items:
variable_declaration -> identifier_list TokColon type_denoter . [ TokSemi ]
## Transitions:
## Reductions:
-- On TokSemi
--   reduce production variable_declaration -> identifier_list TokColon type_denoter

State 332:
## Known stack suffix:
## variable_declaration
## LR(1) items:
variable_declaration_list -> variable_declaration . [ TokSemi ]
## Transitions:
## Reductions:
-- On TokSemi
--   reduce production variable_declaration_list -> variable_declaration

State 333:
## Known stack suffix:
## TokType
## LR(1) items:
type_def -> TokType . type_definition_list [ TokVar TokType TokProcedure TokImplementation TokFunction TokEnd TokBegin ]
## Transitions:
-- On TokId shift to state 12
-- On type_definition_list_rev shift to state 334
-- On type_definition_list shift to state 340
-- On type_definition shift to state 341
-- On identifier shift to state 336
## Reductions:

State 334:
## Known stack suffix:
## type_definition_list_rev
## LR(1) items:
type_definition_list -> type_definition_list_rev . [ TokVar TokType TokProcedure TokImplementation TokFunction TokEnd TokBegin ]
type_definition_list_rev -> type_definition_list_rev . type_definition [ TokVar TokType TokProcedure TokImplementation TokId TokFunction TokEnd TokBegin ]
## Transitions:
-- On TokId shift to state 12
-- On type_definition shift to state 335
-- On identifier shift to state 336
## Reductions:
-- On TokVar TokType TokProcedure TokImplementation TokFunction TokEnd TokBegin
--   reduce production type_definition_list -> type_definition_list_rev

State 335:
## Known stack suffix:
## type_definition_list_rev type_definition
## LR(1) items:
type_definition_list_rev -> type_definition_list_rev type_definition . [ TokVar TokType TokProcedure TokImplementation TokId TokFunction TokEnd TokBegin ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokImplementation TokId TokFunction TokEnd TokBegin
--   reduce production type_definition_list_rev -> type_definition_list_rev type_definition

State 336:
## Known stack suffix:
## identifier
## LR(1) items:
type_definition -> identifier . TokEq type_denoter TokSemi [ TokVar TokType TokProcedure TokImplementation TokId TokFunction TokEnd TokBegin ]
## Transitions:
-- On TokEq shift to state 337
## Reductions:

State 337:
## Known stack suffix:
## identifier TokEq
## LR(1) items:
type_definition -> identifier TokEq . type_denoter TokSemi [ TokVar TokType TokProcedure TokImplementation TokId TokFunction TokEnd TokBegin ]
## Transitions:
-- On TokTypeString shift to state 272
-- On TokTypeSingle shift to state 273
-- On TokTypeInteger shift to state 274
-- On TokTypeChar shift to state 275
-- On TokRecord shift to state 276
-- On TokProcedure shift to state 283
-- On TokId shift to state 12
-- On TokHat shift to state 289
-- On TokFunction shift to state 290
-- On TokArray shift to state 300
-- On type_denoter shift to state 338
-- On record_type shift to state 312
-- On procedure_type_heading shift to state 313
-- On new_type shift to state 314
-- On new_structured_type shift to state 315
-- On new_pointer_type shift to state 316
-- On identifier shift to state 317
-- On function_type_heading shift to state 318
-- On array_type shift to state 319
## Reductions:

State 338:
## Known stack suffix:
## identifier TokEq type_denoter
## LR(1) items:
type_definition -> identifier TokEq type_denoter . TokSemi [ TokVar TokType TokProcedure TokImplementation TokId TokFunction TokEnd TokBegin ]
## Transitions:
-- On TokSemi shift to state 339
## Reductions:

State 339:
## Known stack suffix:
## identifier TokEq type_denoter TokSemi
## LR(1) items:
type_definition -> identifier TokEq type_denoter TokSemi . [ TokVar TokType TokProcedure TokImplementation TokId TokFunction TokEnd TokBegin ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokImplementation TokId TokFunction TokEnd TokBegin
--   reduce production type_definition -> identifier TokEq type_denoter TokSemi

State 340:
## Known stack suffix:
## TokType type_definition_list
## LR(1) items:
type_def -> TokType type_definition_list . [ TokVar TokType TokProcedure TokImplementation TokFunction TokEnd TokBegin ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokImplementation TokFunction TokEnd TokBegin
--   reduce production type_def -> TokType type_definition_list

State 341:
## Known stack suffix:
## type_definition
## LR(1) items:
type_definition_list_rev -> type_definition . [ TokVar TokType TokProcedure TokImplementation TokId TokFunction TokEnd TokBegin ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokImplementation TokId TokFunction TokEnd TokBegin
--   reduce production type_definition_list_rev -> type_definition

State 342:
## Known stack suffix:
## TokProcedure
## LR(1) items:
procedure_heading -> TokProcedure . identifier [ TokSemi ]
procedure_heading -> TokProcedure . identifier TokLeftParen formal_parameters TokRightParen [ TokSemi ]
## Transitions:
-- On TokId shift to state 12
-- On identifier shift to state 343
## Reductions:

State 343:
## Known stack suffix:
## TokProcedure identifier
## LR(1) items:
procedure_heading -> TokProcedure identifier . [ TokSemi ]
procedure_heading -> TokProcedure identifier . TokLeftParen formal_parameters TokRightParen [ TokSemi ]
## Transitions:
-- On TokLeftParen shift to state 344
## Reductions:
-- On TokSemi
--   reduce production procedure_heading -> TokProcedure identifier

State 344:
## Known stack suffix:
## TokProcedure identifier TokLeftParen
## LR(1) items:
procedure_heading -> TokProcedure identifier TokLeftParen . formal_parameters TokRightParen [ TokSemi ]
## Transitions:
-- On TokVar shift to state 285
-- On TokId shift to state 12
-- On var_parameter_set shift to state 292
-- On value_parameter_set shift to state 293
-- On identifier_list_rev shift to state 200
-- On identifier_list shift to state 287
-- On identifier shift to state 205
-- On formal_parameters shift to state 345
## Reductions:

State 345:
## Known stack suffix:
## TokProcedure identifier TokLeftParen formal_parameters
## LR(1) items:
formal_parameters -> formal_parameters . TokSemi value_parameter_set [ TokSemi TokRightParen ]
formal_parameters -> formal_parameters . TokSemi var_parameter_set [ TokSemi TokRightParen ]
procedure_heading -> TokProcedure identifier TokLeftParen formal_parameters . TokRightParen [ TokSemi ]
## Transitions:
-- On TokSemi shift to state 295
-- On TokRightParen shift to state 346
## Reductions:

State 346:
## Known stack suffix:
## TokProcedure identifier TokLeftParen formal_parameters TokRightParen
## LR(1) items:
procedure_heading -> TokProcedure identifier TokLeftParen formal_parameters TokRightParen . [ TokSemi ]
## Transitions:
## Reductions:
-- On TokSemi
--   reduce production procedure_heading -> TokProcedure identifier TokLeftParen formal_parameters TokRightParen

State 347:
## Known stack suffix:
## TokFunction
## LR(1) items:
function_heading -> TokFunction . identifier TokColon type_denoter [ TokSemi ]
function_heading -> TokFunction . identifier TokLeftParen formal_parameters TokRightParen TokColon type_denoter [ TokSemi ]
## Transitions:
-- On TokId shift to state 12
-- On identifier shift to state 348
## Reductions:

State 348:
## Known stack suffix:
## TokFunction identifier
## LR(1) items:
function_heading -> TokFunction identifier . TokColon type_denoter [ TokSemi ]
function_heading -> TokFunction identifier . TokLeftParen formal_parameters TokRightParen TokColon type_denoter [ TokSemi ]
## Transitions:
-- On TokLeftParen shift to state 349
-- On TokColon shift to state 354
## Reductions:

State 349:
## Known stack suffix:
## TokFunction identifier TokLeftParen
## LR(1) items:
function_heading -> TokFunction identifier TokLeftParen . formal_parameters TokRightParen TokColon type_denoter [ TokSemi ]
## Transitions:
-- On TokVar shift to state 285
-- On TokId shift to state 12
-- On var_parameter_set shift to state 292
-- On value_parameter_set shift to state 293
-- On identifier_list_rev shift to state 200
-- On identifier_list shift to state 287
-- On identifier shift to state 205
-- On formal_parameters shift to state 350
## Reductions:

State 350:
## Known stack suffix:
## TokFunction identifier TokLeftParen formal_parameters
## LR(1) items:
formal_parameters -> formal_parameters . TokSemi value_parameter_set [ TokSemi TokRightParen ]
formal_parameters -> formal_parameters . TokSemi var_parameter_set [ TokSemi TokRightParen ]
function_heading -> TokFunction identifier TokLeftParen formal_parameters . TokRightParen TokColon type_denoter [ TokSemi ]
## Transitions:
-- On TokSemi shift to state 295
-- On TokRightParen shift to state 351
## Reductions:

State 351:
## Known stack suffix:
## TokFunction identifier TokLeftParen formal_parameters TokRightParen
## LR(1) items:
function_heading -> TokFunction identifier TokLeftParen formal_parameters TokRightParen . TokColon type_denoter [ TokSemi ]
## Transitions:
-- On TokColon shift to state 352
## Reductions:

State 352:
## Known stack suffix:
## TokFunction identifier TokLeftParen formal_parameters TokRightParen TokColon
## LR(1) items:
function_heading -> TokFunction identifier TokLeftParen formal_parameters TokRightParen TokColon . type_denoter [ TokSemi ]
## Transitions:
-- On TokTypeString shift to state 272
-- On TokTypeSingle shift to state 273
-- On TokTypeInteger shift to state 274
-- On TokTypeChar shift to state 275
-- On TokRecord shift to state 276
-- On TokProcedure shift to state 283
-- On TokId shift to state 12
-- On TokHat shift to state 289
-- On TokFunction shift to state 290
-- On TokArray shift to state 300
-- On type_denoter shift to state 353
-- On record_type shift to state 312
-- On procedure_type_heading shift to state 313
-- On new_type shift to state 314
-- On new_structured_type shift to state 315
-- On new_pointer_type shift to state 316
-- On identifier shift to state 317
-- On function_type_heading shift to state 318
-- On array_type shift to state 319
## Reductions:

State 353:
## Known stack suffix:
## TokFunction identifier TokLeftParen formal_parameters TokRightParen TokColon type_denoter
## LR(1) items:
function_heading -> TokFunction identifier TokLeftParen formal_parameters TokRightParen TokColon type_denoter . [ TokSemi ]
## Transitions:
## Reductions:
-- On TokSemi
--   reduce production function_heading -> TokFunction identifier TokLeftParen formal_parameters TokRightParen TokColon type_denoter

State 354:
## Known stack suffix:
## TokFunction identifier TokColon
## LR(1) items:
function_heading -> TokFunction identifier TokColon . type_denoter [ TokSemi ]
## Transitions:
-- On TokTypeString shift to state 272
-- On TokTypeSingle shift to state 273
-- On TokTypeInteger shift to state 274
-- On TokTypeChar shift to state 275
-- On TokRecord shift to state 276
-- On TokProcedure shift to state 283
-- On TokId shift to state 12
-- On TokHat shift to state 289
-- On TokFunction shift to state 290
-- On TokArray shift to state 300
-- On type_denoter shift to state 355
-- On record_type shift to state 312
-- On procedure_type_heading shift to state 313
-- On new_type shift to state 314
-- On new_structured_type shift to state 315
-- On new_pointer_type shift to state 316
-- On identifier shift to state 317
-- On function_type_heading shift to state 318
-- On array_type shift to state 319
## Reductions:

State 355:
## Known stack suffix:
## TokFunction identifier TokColon type_denoter
## LR(1) items:
function_heading -> TokFunction identifier TokColon type_denoter . [ TokSemi ]
## Transitions:
## Reductions:
-- On TokSemi
--   reduce production function_heading -> TokFunction identifier TokColon type_denoter

State 356:
## Known stack suffix:
## variable_decl
## LR(1) items:
interface_body_element -> variable_decl . [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokImplementation TokFunction
--   reduce production interface_body_element -> variable_decl

State 357:
## Known stack suffix:
## type_def
## LR(1) items:
interface_body_element -> type_def . [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokImplementation TokFunction
--   reduce production interface_body_element -> type_def

State 358:
## Known stack suffix:
## procedure_heading
## LR(1) items:
interface_body_element -> procedure_heading . TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction ]
interface_body_element -> procedure_heading . TokSemi directive TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
-- On TokSemi shift to state 359
## Reductions:

State 359:
## Known stack suffix:
## procedure_heading TokSemi
## LR(1) items:
interface_body_element -> procedure_heading TokSemi . [ TokVar TokType TokProcedure TokImplementation TokFunction ]
interface_body_element -> procedure_heading TokSemi . directive TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
-- On TokForward shift to state 360
-- On TokExternal shift to state 361
-- On directive shift to state 362
## Reductions:
-- On TokVar TokType TokProcedure TokImplementation TokFunction
--   reduce production interface_body_element -> procedure_heading TokSemi

State 360:
## Known stack suffix:
## TokForward
## LR(1) items:
directive -> TokForward . [ TokSemi ]
## Transitions:
## Reductions:
-- On TokSemi
--   reduce production directive -> TokForward

State 361:
## Known stack suffix:
## TokExternal
## LR(1) items:
directive -> TokExternal . [ TokSemi ]
## Transitions:
## Reductions:
-- On TokSemi
--   reduce production directive -> TokExternal

State 362:
## Known stack suffix:
## procedure_heading TokSemi directive
## LR(1) items:
interface_body_element -> procedure_heading TokSemi directive . TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
-- On TokSemi shift to state 363
## Reductions:

State 363:
## Known stack suffix:
## procedure_heading TokSemi directive TokSemi
## LR(1) items:
interface_body_element -> procedure_heading TokSemi directive TokSemi . [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokImplementation TokFunction
--   reduce production interface_body_element -> procedure_heading TokSemi directive TokSemi

State 364:
## Known stack suffix:
## TokInterface interface_body_rev
## LR(1) items:
interface_body -> TokInterface interface_body_rev . [ TokImplementation ]
interface_body_rev -> interface_body_rev . interface_body_element [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
-- On TokVar shift to state 266
-- On TokType shift to state 333
-- On TokProcedure shift to state 342
-- On TokFunction shift to state 347
-- On variable_decl shift to state 356
-- On type_def shift to state 357
-- On procedure_heading shift to state 358
-- On interface_body_element shift to state 365
-- On function_heading shift to state 366
## Reductions:
-- On TokImplementation
--   reduce production interface_body -> TokInterface interface_body_rev

State 365:
## Known stack suffix:
## interface_body_rev interface_body_element
## LR(1) items:
interface_body_rev -> interface_body_rev interface_body_element . [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokImplementation TokFunction
--   reduce production interface_body_rev -> interface_body_rev interface_body_element

State 366:
## Known stack suffix:
## function_heading
## LR(1) items:
interface_body_element -> function_heading . TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction ]
interface_body_element -> function_heading . TokSemi directive TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
-- On TokSemi shift to state 367
## Reductions:

State 367:
## Known stack suffix:
## function_heading TokSemi
## LR(1) items:
interface_body_element -> function_heading TokSemi . [ TokVar TokType TokProcedure TokImplementation TokFunction ]
interface_body_element -> function_heading TokSemi . directive TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
-- On TokForward shift to state 360
-- On TokExternal shift to state 361
-- On directive shift to state 368
## Reductions:
-- On TokVar TokType TokProcedure TokImplementation TokFunction
--   reduce production interface_body_element -> function_heading TokSemi

State 368:
## Known stack suffix:
## function_heading TokSemi directive
## LR(1) items:
interface_body_element -> function_heading TokSemi directive . TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
-- On TokSemi shift to state 369
## Reductions:

State 369:
## Known stack suffix:
## function_heading TokSemi directive TokSemi
## LR(1) items:
interface_body_element -> function_heading TokSemi directive TokSemi . [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokImplementation TokFunction
--   reduce production interface_body_element -> function_heading TokSemi directive TokSemi

State 370:
## Known stack suffix:
## interface_body_element
## LR(1) items:
interface_body_rev -> interface_body_element . [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokImplementation TokFunction
--   reduce production interface_body_rev -> interface_body_element

State 371:
## Known stack suffix:
## unit_header interface_body
## LR(1) items:
unit_body -> unit_header interface_body . implementation_body statements TokDot [ # ]
unit_body -> unit_header interface_body . implementation_body TokEnd TokDot [ # ]
## Transitions:
-- On TokImplementation shift to state 372
-- On implementation_body shift to state 398
## Reductions:

State 372:
## Known stack suffix:
## TokImplementation
## LR(1) items:
implementation_body -> TokImplementation . block_list [ TokEnd TokBegin ]
## Transitions:
-- On TokVar shift to state 266
-- On TokType shift to state 333
-- On TokProcedure shift to state 342
-- On TokFunction shift to state 347
-- On variable_decl shift to state 373
-- On type_def shift to state 374
-- On procedure_heading shift to state 375
-- On procedure_decl shift to state 378
-- On function_heading shift to state 381
-- On function_decl shift to state 383
-- On block_list_rev shift to state 389
-- On block_list shift to state 397
-- On block shift to state 393
## Reductions:

State 373:
## Known stack suffix:
## variable_decl
## LR(1) items:
block -> variable_decl . [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokFunction TokEnd TokBegin
--   reduce production block -> variable_decl

State 374:
## Known stack suffix:
## type_def
## LR(1) items:
block -> type_def . [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokFunction TokEnd TokBegin
--   reduce production block -> type_def

State 375:
## Known stack suffix:
## procedure_heading
## LR(1) items:
procedure_decl -> procedure_heading . TokSemi directive TokSemi [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
procedure_decl -> procedure_heading . TokSemi procedure_body TokSemi [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
-- On TokSemi shift to state 376
## Reductions:

State 376:
## Known stack suffix:
## procedure_heading TokSemi
## LR(1) items:
procedure_decl -> procedure_heading TokSemi . directive TokSemi [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
procedure_decl -> procedure_heading TokSemi . procedure_body TokSemi [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
-- On TokVar shift to state 266
-- On TokType shift to state 333
-- On TokProcedure shift to state 342
-- On TokFunction shift to state 347
-- On TokForward shift to state 360
-- On TokExternal shift to state 361
-- On TokBegin shift to state 93
-- On variable_decl shift to state 373
-- On type_def shift to state 374
-- On statements shift to state 377
-- On procedure_heading shift to state 375
-- On procedure_decl shift to state 378
-- On procedure_body shift to state 379
-- On function_heading shift to state 381
-- On function_decl shift to state 383
-- On directive shift to state 394
-- On body shift to state 396
-- On block_list_rev shift to state 389
-- On block_list shift to state 391
-- On block shift to state 393
## Reductions:

State 377:
## Known stack suffix:
## statements
## LR(1) items:
body -> statements . [ TokSemi TokDot ]
## Transitions:
## Reductions:
-- On TokSemi TokDot
--   reduce production body -> statements

State 378:
## Known stack suffix:
## procedure_decl
## LR(1) items:
block -> procedure_decl . [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokFunction TokEnd TokBegin
--   reduce production block -> procedure_decl

State 379:
## Known stack suffix:
## procedure_heading TokSemi procedure_body
## LR(1) items:
procedure_decl -> procedure_heading TokSemi procedure_body . TokSemi [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
-- On TokSemi shift to state 380
## Reductions:

State 380:
## Known stack suffix:
## procedure_heading TokSemi procedure_body TokSemi
## LR(1) items:
procedure_decl -> procedure_heading TokSemi procedure_body TokSemi . [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokFunction TokEnd TokBegin
--   reduce production procedure_decl -> procedure_heading TokSemi procedure_body TokSemi

State 381:
## Known stack suffix:
## function_heading
## LR(1) items:
function_decl -> function_heading . TokSemi directive TokSemi [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
function_decl -> function_heading . TokSemi function_body TokSemi [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
-- On TokSemi shift to state 382
## Reductions:

State 382:
## Known stack suffix:
## function_heading TokSemi
## LR(1) items:
function_decl -> function_heading TokSemi . directive TokSemi [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
function_decl -> function_heading TokSemi . function_body TokSemi [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
-- On TokVar shift to state 266
-- On TokType shift to state 333
-- On TokProcedure shift to state 342
-- On TokFunction shift to state 347
-- On TokForward shift to state 360
-- On TokExternal shift to state 361
-- On TokBegin shift to state 93
-- On variable_decl shift to state 373
-- On type_def shift to state 374
-- On statements shift to state 377
-- On procedure_heading shift to state 375
-- On procedure_decl shift to state 378
-- On function_heading shift to state 381
-- On function_decl shift to state 383
-- On function_body shift to state 384
-- On directive shift to state 386
-- On body shift to state 388
-- On block_list_rev shift to state 389
-- On block_list shift to state 391
-- On block shift to state 393
## Reductions:

State 383:
## Known stack suffix:
## function_decl
## LR(1) items:
block -> function_decl . [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokFunction TokEnd TokBegin
--   reduce production block -> function_decl

State 384:
## Known stack suffix:
## function_heading TokSemi function_body
## LR(1) items:
function_decl -> function_heading TokSemi function_body . TokSemi [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
-- On TokSemi shift to state 385
## Reductions:

State 385:
## Known stack suffix:
## function_heading TokSemi function_body TokSemi
## LR(1) items:
function_decl -> function_heading TokSemi function_body TokSemi . [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokFunction TokEnd TokBegin
--   reduce production function_decl -> function_heading TokSemi function_body TokSemi

State 386:
## Known stack suffix:
## function_heading TokSemi directive
## LR(1) items:
function_decl -> function_heading TokSemi directive . TokSemi [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
-- On TokSemi shift to state 387
## Reductions:

State 387:
## Known stack suffix:
## function_heading TokSemi directive TokSemi
## LR(1) items:
function_decl -> function_heading TokSemi directive TokSemi . [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokFunction TokEnd TokBegin
--   reduce production function_decl -> function_heading TokSemi directive TokSemi

State 388:
## Known stack suffix:
## body
## LR(1) items:
function_body -> body . [ TokSemi ]
## Transitions:
## Reductions:
-- On TokSemi
--   reduce production function_body -> body

State 389:
## Known stack suffix:
## block_list_rev
## LR(1) items:
block_list -> block_list_rev . [ TokEnd TokBegin ]
block_list_rev -> block_list_rev . block [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
-- On TokVar shift to state 266
-- On TokType shift to state 333
-- On TokProcedure shift to state 342
-- On TokFunction shift to state 347
-- On variable_decl shift to state 373
-- On type_def shift to state 374
-- On procedure_heading shift to state 375
-- On procedure_decl shift to state 378
-- On function_heading shift to state 381
-- On function_decl shift to state 383
-- On block shift to state 390
## Reductions:
-- On TokEnd TokBegin
--   reduce production block_list -> block_list_rev

State 390:
## Known stack suffix:
## block_list_rev block
## LR(1) items:
block_list_rev -> block_list_rev block . [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokFunction TokEnd TokBegin
--   reduce production block_list_rev -> block_list_rev block

State 391:
## Known stack suffix:
## block_list
## LR(1) items:
body -> block_list . statements [ TokSemi TokDot ]
## Transitions:
-- On TokBegin shift to state 93
-- On statements shift to state 392
## Reductions:

State 392:
## Known stack suffix:
## block_list statements
## LR(1) items:
body -> block_list statements . [ TokSemi TokDot ]
## Transitions:
## Reductions:
-- On TokSemi TokDot
--   reduce production body -> block_list statements

State 393:
## Known stack suffix:
## block
## LR(1) items:
block_list_rev -> block . [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokFunction TokEnd TokBegin
--   reduce production block_list_rev -> block

State 394:
## Known stack suffix:
## procedure_heading TokSemi directive
## LR(1) items:
procedure_decl -> procedure_heading TokSemi directive . TokSemi [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
-- On TokSemi shift to state 395
## Reductions:

State 395:
## Known stack suffix:
## procedure_heading TokSemi directive TokSemi
## LR(1) items:
procedure_decl -> procedure_heading TokSemi directive TokSemi . [ TokVar TokType TokProcedure TokFunction TokEnd TokBegin ]
## Transitions:
## Reductions:
-- On TokVar TokType TokProcedure TokFunction TokEnd TokBegin
--   reduce production procedure_decl -> procedure_heading TokSemi directive TokSemi

State 396:
## Known stack suffix:
## body
## LR(1) items:
procedure_body -> body . [ TokSemi ]
## Transitions:
## Reductions:
-- On TokSemi
--   reduce production procedure_body -> body

State 397:
## Known stack suffix:
## TokImplementation block_list
## LR(1) items:
implementation_body -> TokImplementation block_list . [ TokEnd TokBegin ]
## Transitions:
## Reductions:
-- On TokEnd TokBegin
--   reduce production implementation_body -> TokImplementation block_list

State 398:
## Known stack suffix:
## unit_header interface_body implementation_body
## LR(1) items:
unit_body -> unit_header interface_body implementation_body . statements TokDot [ # ]
unit_body -> unit_header interface_body implementation_body . TokEnd TokDot [ # ]
## Transitions:
-- On TokEnd shift to state 399
-- On TokBegin shift to state 93
-- On statements shift to state 401
## Reductions:

State 399:
## Known stack suffix:
## unit_header interface_body implementation_body TokEnd
## LR(1) items:
unit_body -> unit_header interface_body implementation_body TokEnd . TokDot [ # ]
## Transitions:
-- On TokDot shift to state 400
## Reductions:

State 400:
## Known stack suffix:
## unit_header interface_body implementation_body TokEnd TokDot
## LR(1) items:
unit_body -> unit_header interface_body implementation_body TokEnd TokDot . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production unit_body -> unit_header interface_body implementation_body TokEnd TokDot

State 401:
## Known stack suffix:
## unit_header interface_body implementation_body statements
## LR(1) items:
unit_body -> unit_header interface_body implementation_body statements . TokDot [ # ]
## Transitions:
-- On TokDot shift to state 402
## Reductions:

State 402:
## Known stack suffix:
## unit_header interface_body implementation_body statements TokDot
## LR(1) items:
unit_body -> unit_header interface_body implementation_body statements TokDot . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production unit_body -> unit_header interface_body implementation_body statements TokDot

State 403:
## Known stack suffix:
## unit_body
## LR(1) items:
console -> unit_body . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production console -> unit_body

State 404:
## Known stack suffix:
## statement
## LR(1) items:
console -> statement . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production console -> statement

State 405:
## Known stack suffix:
## repeat_statement
## LR(1) items:
statement -> repeat_statement . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production statement -> repeat_statement

State 406:
## Known stack suffix:
## program_header
## LR(1) items:
program -> program_header . body TokDot [ # ]
## Transitions:
-- On TokVar shift to state 266
-- On TokType shift to state 333
-- On TokProcedure shift to state 342
-- On TokFunction shift to state 347
-- On TokBegin shift to state 93
-- On variable_decl shift to state 373
-- On type_def shift to state 374
-- On statements shift to state 377
-- On procedure_heading shift to state 375
-- On procedure_decl shift to state 378
-- On function_heading shift to state 381
-- On function_decl shift to state 383
-- On body shift to state 407
-- On block_list_rev shift to state 389
-- On block_list shift to state 391
-- On block shift to state 393
## Reductions:

State 407:
## Known stack suffix:
## program_header body
## LR(1) items:
program -> program_header body . TokDot [ # ]
## Transitions:
-- On TokDot shift to state 408
## Reductions:

State 408:
## Known stack suffix:
## program_header body TokDot
## LR(1) items:
program -> program_header body TokDot . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production program -> program_header body TokDot

State 409:
## Known stack suffix:
## program
## LR(1) items:
console -> program . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production console -> program

State 410:
## Known stack suffix:
## if_statement
## LR(1) items:
statement -> if_statement . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production statement -> if_statement

State 411:
## Known stack suffix:
## for_statement
## LR(1) items:
statement -> for_statement . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production statement -> for_statement

State 412:
## Known stack suffix:
## expression
## LR(1) items:
statement -> expression . TokSemi [ # ]
## Transitions:
-- On TokSemi shift to state 413
## Reductions:

State 413:
## Known stack suffix:
## expression TokSemi
## LR(1) items:
statement -> expression TokSemi . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production statement -> expression TokSemi

State 414:
## Known stack suffix:
## console
## LR(1) items:
console' -> console . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept console

State 415:
## Known stack suffix:
## case_statement
## LR(1) items:
statement -> case_statement . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production statement -> case_statement

State 416:
## Known stack suffix:
##
## LR(1) items:
program' -> . program [ # ]
## Transitions:
-- On TokProgram shift to state 211
-- On program_header shift to state 406
-- On program shift to state 417
## Reductions:

State 417:
## Known stack suffix:
## program
## LR(1) items:
program' -> program . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept program

State 418:
## Known stack suffix:
##
## LR(1) items:
unit_body' -> . unit_body [ # ]
## Transitions:
-- On TokUnit shift to state 196
-- On unit_header shift to state 264
-- On unit_body shift to state 419
## Reductions:

State 419:
## Known stack suffix:
## unit_body
## LR(1) items:
unit_body' -> unit_body . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept unit_body

