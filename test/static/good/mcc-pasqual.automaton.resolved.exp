State 0:
## Known stack suffix:
##
## LR(1) items:
bootstrap' -> . bootstrap [ # ]
## Transitions:
-- On TokVar shift to state 1
-- On TokType shift to state 219
-- On TokProcedure shift to state 228
-- On TokOperator shift to state 276
-- On TokLabel shift to state 301
-- On TokFunction shift to state 309
-- On TokException shift to state 321
-- On TokEof shift to state 327
-- On TokConst shift to state 328
-- On TokBegin shift to state 341
-- On variable_decl shift to state 506
-- On type_def shift to state 507
-- On statements shift to state 508
-- On program_body shift to state 513
-- On procedure_heading shift to state 514
-- On procedure_definition shift to state 523
-- On procedure_declaration shift to state 524
-- On operator_heading shift to state 527
-- On label_declaration shift to state 529
-- On function_heading shift to state 530
-- On function_definition shift to state 538
-- On function_declaration shift to state 539
-- On exception_declaration shift to state 542
-- On constant_declaration shift to state 543
-- On bootstrap shift to state 561
-- On block_list shift to state 562
-- On block shift to state 548
## Reductions:

State 1:
## Known stack suffix:
## TokVar
## LR(1) items:
variable_decl -> TokVar . variable_declaration_list TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokLeftParen shift to state 2
-- On TokId shift to state 3
-- On variable_init_declaration shift to state 9
-- On variable_declaration_list shift to state 10
-- On variable_declaration shift to state 218
-- On var_pattern_list shift to state 14
-- On var_pattern shift to state 217
-- On identifier shift to state 21
## Reductions:

State 2:
## Known stack suffix:
## TokLeftParen
## LR(1) items:
var_pattern -> TokLeftParen . plain_identifier_list TokRightParen [ TokEq TokComma TokColon ]
## Transitions:
-- On TokId shift to state 3
-- On plain_identifier_list shift to state 4
-- On identifier shift to state 8
## Reductions:

State 3:
## Known stack suffix:
## TokId
## LR(1) items:
identifier -> TokId . [ TokXor TokUntil TokTwoDots TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLeftBrack TokLe TokHat TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDot TokDo TokDiv TokComma TokColon TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production identifier -> TokId

State 4:
## Known stack suffix:
## TokLeftParen plain_identifier_list
## LR(1) items:
plain_identifier_list -> plain_identifier_list . TokComma identifier [ TokRightParen TokComma ]
var_pattern -> TokLeftParen plain_identifier_list . TokRightParen [ TokEq TokComma TokColon ]
## Transitions:
-- On TokRightParen shift to state 5
-- On TokComma shift to state 6
## Reductions:

State 5:
## Known stack suffix:
## TokLeftParen plain_identifier_list TokRightParen
## LR(1) items:
var_pattern -> TokLeftParen plain_identifier_list TokRightParen . [ TokEq TokComma TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production var_pattern -> TokLeftParen plain_identifier_list TokRightParen

State 6:
## Known stack suffix:
## plain_identifier_list TokComma
## LR(1) items:
plain_identifier_list -> plain_identifier_list TokComma . identifier [ TokSemi TokRightParen TokEq TokComma TokColon ]
## Transitions:
-- On TokId shift to state 3
-- On identifier shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## plain_identifier_list TokComma identifier
## LR(1) items:
plain_identifier_list -> plain_identifier_list TokComma identifier . [ TokSemi TokRightParen TokEq TokComma TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plain_identifier_list -> plain_identifier_list TokComma identifier

State 8:
## Known stack suffix:
## identifier
## LR(1) items:
plain_identifier_list -> identifier . [ TokSemi TokRightParen TokEq TokComma TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production plain_identifier_list -> identifier

State 9:
## Known stack suffix:
## variable_init_declaration
## LR(1) items:
variable_declaration_list -> variable_init_declaration . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable_declaration_list -> variable_init_declaration

State 10:
## Known stack suffix:
## TokVar variable_declaration_list
## LR(1) items:
variable_decl -> TokVar variable_declaration_list . TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
variable_declaration_list -> variable_declaration_list . TokSemi variable_declaration [ TokSemi ]
variable_declaration_list -> variable_declaration_list . TokSemi variable_init_declaration [ TokSemi ]
## Transitions:
-- On TokSemi shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## TokVar variable_declaration_list TokSemi
## LR(1) items:
variable_decl -> TokVar variable_declaration_list TokSemi . [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
variable_declaration_list -> variable_declaration_list TokSemi . variable_declaration [ TokSemi ]
variable_declaration_list -> variable_declaration_list TokSemi . variable_init_declaration [ TokSemi ]
## Transitions:
-- On TokLeftParen shift to state 2
-- On TokId shift to state 3
-- On variable_init_declaration shift to state 12
-- On variable_declaration shift to state 13
-- On var_pattern_list shift to state 14
-- On var_pattern shift to state 217
-- On identifier shift to state 21
## Reductions:
-- On TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin
--   reduce production variable_decl -> TokVar variable_declaration_list TokSemi

State 12:
## Known stack suffix:
## variable_declaration_list TokSemi variable_init_declaration
## LR(1) items:
variable_declaration_list -> variable_declaration_list TokSemi variable_init_declaration . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable_declaration_list -> variable_declaration_list TokSemi variable_init_declaration

State 13:
## Known stack suffix:
## variable_declaration_list TokSemi variable_declaration
## LR(1) items:
variable_declaration_list -> variable_declaration_list TokSemi variable_declaration . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable_declaration_list -> variable_declaration_list TokSemi variable_declaration

State 14:
## Known stack suffix:
## var_pattern_list
## LR(1) items:
var_pattern_list -> var_pattern_list . TokComma var_pattern [ TokEq TokComma TokColon ]
variable_declaration -> var_pattern_list . TokColon type_denoter [ TokSemi ]
variable_init_declaration -> var_pattern_list . TokEq TokInt [ TokSemi ]
variable_init_declaration -> var_pattern_list . TokEq TokFloat [ TokSemi ]
variable_init_declaration -> var_pattern_list . TokEq TokString [ TokSemi ]
variable_init_declaration -> var_pattern_list . TokColon type_denoter TokEq expression [ TokSemi ]
variable_init_declaration -> var_pattern_list . TokColon type_denoter TokEq array_init_expression [ TokSemi ]
## Transitions:
-- On TokEq shift to state 15
-- On TokComma shift to state 19
-- On TokColon shift to state 22
## Reductions:

State 15:
## Known stack suffix:
## var_pattern_list TokEq
## LR(1) items:
variable_init_declaration -> var_pattern_list TokEq . TokInt [ TokSemi ]
variable_init_declaration -> var_pattern_list TokEq . TokFloat [ TokSemi ]
variable_init_declaration -> var_pattern_list TokEq . TokString [ TokSemi ]
## Transitions:
-- On TokString shift to state 16
-- On TokInt shift to state 17
-- On TokFloat shift to state 18
## Reductions:

State 16:
## Known stack suffix:
## var_pattern_list TokEq TokString
## LR(1) items:
variable_init_declaration -> var_pattern_list TokEq TokString . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable_init_declaration -> var_pattern_list TokEq TokString

State 17:
## Known stack suffix:
## var_pattern_list TokEq TokInt
## LR(1) items:
variable_init_declaration -> var_pattern_list TokEq TokInt . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable_init_declaration -> var_pattern_list TokEq TokInt

State 18:
## Known stack suffix:
## var_pattern_list TokEq TokFloat
## LR(1) items:
variable_init_declaration -> var_pattern_list TokEq TokFloat . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable_init_declaration -> var_pattern_list TokEq TokFloat

State 19:
## Known stack suffix:
## var_pattern_list TokComma
## LR(1) items:
var_pattern_list -> var_pattern_list TokComma . var_pattern [ TokEq TokComma TokColon ]
## Transitions:
-- On TokLeftParen shift to state 2
-- On TokId shift to state 3
-- On var_pattern shift to state 20
-- On identifier shift to state 21
## Reductions:

State 20:
## Known stack suffix:
## var_pattern_list TokComma var_pattern
## LR(1) items:
var_pattern_list -> var_pattern_list TokComma var_pattern . [ TokEq TokComma TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production var_pattern_list -> var_pattern_list TokComma var_pattern

State 21:
## Known stack suffix:
## identifier
## LR(1) items:
var_pattern -> identifier . [ TokEq TokComma TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production var_pattern -> identifier

State 22:
## Known stack suffix:
## var_pattern_list TokColon
## LR(1) items:
variable_declaration -> var_pattern_list TokColon . type_denoter [ TokSemi ]
variable_init_declaration -> var_pattern_list TokColon . type_denoter TokEq expression [ TokSemi ]
variable_init_declaration -> var_pattern_list TokColon . type_denoter TokEq array_init_expression [ TokSemi ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRef shift to state 39
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokMutable shift to state 52
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokHat shift to state 160
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On type_denoter shift to state 206
-- On tuple_type shift to state 173
-- On ref_or_basic_type shift to state 174
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 181
-- On array_type shift to state 182
## Reductions:

State 23:
## Known stack suffix:
## TokTypeWord
## LR(1) items:
type_identifier -> TokTypeWord . [ TokSemi TokRightParen TokLeftParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_identifier -> TokTypeWord

State 24:
## Known stack suffix:
## TokTypeUInt64
## LR(1) items:
type_identifier -> TokTypeUInt64 . [ TokSemi TokRightParen TokLeftParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_identifier -> TokTypeUInt64

State 25:
## Known stack suffix:
## TokTypeShort
## LR(1) items:
type_identifier -> TokTypeShort . [ TokSemi TokRightParen TokLeftParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_identifier -> TokTypeShort

State 26:
## Known stack suffix:
## TokTypeReal
## LR(1) items:
type_identifier -> TokTypeReal . [ TokSemi TokRightParen TokLeftParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_identifier -> TokTypeReal

State 27:
## Known stack suffix:
## TokTypeLongDouble
## LR(1) items:
type_identifier -> TokTypeLongDouble . [ TokSemi TokRightParen TokLeftParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_identifier -> TokTypeLongDouble

State 28:
## Known stack suffix:
## TokTypeInteger
## LR(1) items:
type_identifier -> TokTypeInteger . [ TokSemi TokRightParen TokLeftParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_identifier -> TokTypeInteger

State 29:
## Known stack suffix:
## TokTypeInt64
## LR(1) items:
type_identifier -> TokTypeInt64 . [ TokSemi TokRightParen TokLeftParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_identifier -> TokTypeInt64

State 30:
## Known stack suffix:
## TokTypeDouble
## LR(1) items:
type_identifier -> TokTypeDouble . [ TokSemi TokRightParen TokLeftParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_identifier -> TokTypeDouble

State 31:
## Known stack suffix:
## TokTypeDWord
## LR(1) items:
type_identifier -> TokTypeDWord . [ TokSemi TokRightParen TokLeftParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_identifier -> TokTypeDWord

State 32:
## Known stack suffix:
## TokTypeChar
## LR(1) items:
type_identifier -> TokTypeChar . [ TokSemi TokRightParen TokLeftParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_identifier -> TokTypeChar

State 33:
## Known stack suffix:
## TokTypeCString
## LR(1) items:
type_identifier -> TokTypeCString . [ TokSemi TokRightParen TokLeftParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_identifier -> TokTypeCString

State 34:
## Known stack suffix:
## TokTypeByte
## LR(1) items:
type_identifier -> TokTypeByte . [ TokSemi TokRightParen TokLeftParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_identifier -> TokTypeByte

State 35:
## Known stack suffix:
## TokTypeBoolean
## LR(1) items:
type_identifier -> TokTypeBoolean . [ TokSemi TokRightParen TokLeftParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_identifier -> TokTypeBoolean

State 36:
## Known stack suffix:
## TokTuple
## LR(1) items:
tuple_type -> TokTuple . TokOf TokLeftParen type_list_with_comma TokRightParen [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokOf shift to state 37
## Reductions:

State 37:
## Known stack suffix:
## TokTuple TokOf
## LR(1) items:
tuple_type -> TokTuple TokOf . TokLeftParen type_list_with_comma TokRightParen [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokLeftParen shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## TokTuple TokOf TokLeftParen
## LR(1) items:
tuple_type -> TokTuple TokOf TokLeftParen . type_list_with_comma TokRightParen [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRef shift to state 39
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokMutable shift to state 52
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokHat shift to state 160
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_list_with_comma shift to state 201
-- On type_identifier shift to state 171
-- On type_denoter shift to state 205
-- On tuple_type shift to state 173
-- On ref_or_basic_type shift to state 174
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 181
-- On array_type shift to state 182
## Reductions:

State 39:
## Known stack suffix:
## TokRef
## LR(1) items:
ref_or_basic_type -> TokRef . basic_type [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On tuple_type shift to state 173
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 200
-- On array_type shift to state 182
## Reductions:

State 40:
## Known stack suffix:
## TokRecord
## LR(1) items:
record_type -> TokRecord . record_section_list TokSemi TokEnd [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokId shift to state 3
-- On record_section_list shift to state 41
-- On record_section shift to state 199
-- On plain_identifier_list shift to state 45
-- On identifier shift to state 8
## Reductions:

State 41:
## Known stack suffix:
## TokRecord record_section_list
## LR(1) items:
record_section_list -> record_section_list . TokSemi record_section [ TokSemi ]
record_type -> TokRecord record_section_list . TokSemi TokEnd [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokSemi shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## TokRecord record_section_list TokSemi
## LR(1) items:
record_section_list -> record_section_list TokSemi . record_section [ TokSemi ]
record_type -> TokRecord record_section_list TokSemi . TokEnd [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokId shift to state 3
-- On TokEnd shift to state 43
-- On record_section shift to state 44
-- On plain_identifier_list shift to state 45
-- On identifier shift to state 8
## Reductions:

State 43:
## Known stack suffix:
## TokRecord record_section_list TokSemi TokEnd
## LR(1) items:
record_type -> TokRecord record_section_list TokSemi TokEnd . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production record_type -> TokRecord record_section_list TokSemi TokEnd

State 44:
## Known stack suffix:
## record_section_list TokSemi record_section
## LR(1) items:
record_section_list -> record_section_list TokSemi record_section . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production record_section_list -> record_section_list TokSemi record_section

State 45:
## Known stack suffix:
## plain_identifier_list
## LR(1) items:
plain_identifier_list -> plain_identifier_list . TokComma identifier [ TokComma TokColon ]
record_section -> plain_identifier_list . TokColon type_denoter [ TokSemi ]
## Transitions:
-- On TokComma shift to state 6
-- On TokColon shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## plain_identifier_list TokColon
## LR(1) items:
record_section -> plain_identifier_list TokColon . type_denoter [ TokSemi ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRef shift to state 39
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokMutable shift to state 52
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokHat shift to state 160
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On type_denoter shift to state 198
-- On tuple_type shift to state 173
-- On ref_or_basic_type shift to state 174
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 181
-- On array_type shift to state 182
## Reductions:

State 47:
## Known stack suffix:
## TokProcedure
## LR(1) items:
procedure_type -> TokProcedure . TokLeftParen TokRightParen [ TokSemi TokRightParen TokEq TokComma ]
procedure_type -> TokProcedure . TokLeftParen type_list TokRightParen [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokLeftParen shift to state 48
## Reductions:

State 48:
## Known stack suffix:
## TokProcedure TokLeftParen
## LR(1) items:
procedure_type -> TokProcedure TokLeftParen . TokRightParen [ TokSemi TokRightParen TokEq TokComma ]
procedure_type -> TokProcedure TokLeftParen . type_list TokRightParen [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRightParen shift to state 49
-- On TokRef shift to state 39
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokMutable shift to state 52
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokHat shift to state 160
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_list shift to state 196
-- On type_identifier shift to state 171
-- On type_denoter shift to state 194
-- On tuple_type shift to state 173
-- On ref_or_basic_type shift to state 174
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 181
-- On array_type shift to state 182
## Reductions:

State 49:
## Known stack suffix:
## TokProcedure TokLeftParen TokRightParen
## LR(1) items:
procedure_type -> TokProcedure TokLeftParen TokRightParen . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production procedure_type -> TokProcedure TokLeftParen TokRightParen

State 50:
## Known stack suffix:
## TokPoly
## LR(1) items:
basic_type -> TokPoly . identifier [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokId shift to state 3
-- On identifier shift to state 51
## Reductions:

State 51:
## Known stack suffix:
## TokPoly identifier
## LR(1) items:
basic_type -> TokPoly identifier . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_type -> TokPoly identifier

State 52:
## Known stack suffix:
## TokMutable
## LR(1) items:
ref_or_basic_type -> TokMutable . basic_type [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On tuple_type shift to state 173
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 195
-- On array_type shift to state 182
## Reductions:

State 53:
## Known stack suffix:
## TokLeftParen
## LR(1) items:
enum_type -> TokLeftParen . identifier_and_expr_list TokRightParen [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokId shift to state 3
-- On identifier_and_expr_list shift to state 54
-- On identifier_and_expr shift to state 155
-- On identifier shift to state 58
## Reductions:

State 54:
## Known stack suffix:
## TokLeftParen identifier_and_expr_list
## LR(1) items:
enum_type -> TokLeftParen identifier_and_expr_list . TokRightParen [ TokSemi TokRightParen TokEq TokComma ]
identifier_and_expr_list -> identifier_and_expr_list . TokComma identifier_and_expr [ TokRightParen TokComma ]
## Transitions:
-- On TokRightParen shift to state 55
-- On TokComma shift to state 56
## Reductions:

State 55:
## Known stack suffix:
## TokLeftParen identifier_and_expr_list TokRightParen
## LR(1) items:
enum_type -> TokLeftParen identifier_and_expr_list TokRightParen . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_type -> TokLeftParen identifier_and_expr_list TokRightParen

State 56:
## Known stack suffix:
## identifier_and_expr_list TokComma
## LR(1) items:
identifier_and_expr_list -> identifier_and_expr_list TokComma . identifier_and_expr [ TokRightParen TokComma ]
## Transitions:
-- On TokId shift to state 3
-- On identifier_and_expr shift to state 57
-- On identifier shift to state 58
## Reductions:

State 57:
## Known stack suffix:
## identifier_and_expr_list TokComma identifier_and_expr
## LR(1) items:
identifier_and_expr_list -> identifier_and_expr_list TokComma identifier_and_expr . [ TokRightParen TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production identifier_and_expr_list -> identifier_and_expr_list TokComma identifier_and_expr

State 58:
## Known stack suffix:
## identifier
## LR(1) items:
identifier_and_expr -> identifier . TokEq expression [ TokRightParen TokComma ]
identifier_and_expr -> identifier . [ TokRightParen TokComma ]
## Transitions:
-- On TokEq shift to state 59
## Reductions:
-- On TokRightParen TokComma
--   reduce production identifier_and_expr -> identifier

State 59:
## Known stack suffix:
## identifier TokEq
## LR(1) items:
identifier_and_expr -> identifier TokEq . expression [ TokRightParen TokComma ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 154
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 60:
## Known stack suffix:
## TokTrue
## LR(1) items:
boolean_value -> TokTrue . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokColon TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production boolean_value -> TokTrue

State 61:
## Known stack suffix:
## TokString
## LR(1) items:
unsigned_constant -> TokString . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unsigned_constant -> TokString

State 62:
## Known stack suffix:
## TokSizeOf
## LR(1) items:
function_call -> TokSizeOf . TokLeftParen expression TokRightParen [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
function_call -> TokSizeOf . TokLeftParen type_identifier TokRightParen [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokLeftParen shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## TokSizeOf TokLeftParen
## LR(1) items:
function_call -> TokSizeOf TokLeftParen . expression TokRightParen [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
function_call -> TokSizeOf TokLeftParen . type_identifier TokRightParen [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 150
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 152
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 64:
## Known stack suffix:
## TokRef
## LR(1) items:
primary -> TokRef . primary [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On primary shift to state 149
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
## Reductions:

State 65:
## Known stack suffix:
## TokNot
## LR(1) items:
primary -> TokNot . primary [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On primary shift to state 148
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
## Reductions:

State 66:
## Known stack suffix:
## TokLeftParen
## LR(1) items:
unsigned_constant -> TokLeftParen . expression TokRightParen [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 146
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 67:
## Known stack suffix:
## TokMinus
## LR(1) items:
factor -> TokMinus . factor [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAnd # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 145
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
## Reductions:

State 68:
## Known stack suffix:
## TokInt
## LR(1) items:
unsigned_constant -> TokInt . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unsigned_constant -> TokInt

State 69:
## Known stack suffix:
## TokFloat
## LR(1) items:
unsigned_constant -> TokFloat . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unsigned_constant -> TokFloat

State 70:
## Known stack suffix:
## TokFalse
## LR(1) items:
boolean_value -> TokFalse . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokColon TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production boolean_value -> TokFalse

State 71:
## Known stack suffix:
## TokDeref
## LR(1) items:
primary -> TokDeref . primary [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On primary shift to state 144
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
## Reductions:

State 72:
## Known stack suffix:
## TokChar
## LR(1) items:
unsigned_constant -> TokChar . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unsigned_constant -> TokChar

State 73:
## Known stack suffix:
## TokAt
## LR(1) items:
primary -> TokAt . primary [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On primary shift to state 143
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
## Reductions:

State 74:
## Known stack suffix:
## unsigned_constant
## LR(1) items:
function_call -> unsigned_constant . TokLeftParen expression_list TokRightParen [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
function_call -> unsigned_constant . TokLeftParen TokRightParen [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
primary -> unsigned_constant . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokLeftParen shift to state 75
## Reductions:
-- On TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production primary -> unsigned_constant

State 75:
## Known stack suffix:
## unsigned_constant TokLeftParen
## LR(1) items:
function_call -> unsigned_constant TokLeftParen . expression_list TokRightParen [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
function_call -> unsigned_constant TokLeftParen . TokRightParen [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRightParen shift to state 76
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression_list_rev shift to state 123
-- On expression_list shift to state 141
-- On expression shift to state 128
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 76:
## Known stack suffix:
## unsigned_constant TokLeftParen TokRightParen
## LR(1) items:
function_call -> unsigned_constant TokLeftParen TokRightParen . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_call -> unsigned_constant TokLeftParen TokRightParen

State 77:
## Known stack suffix:
## TokLeftTuple
## LR(1) items:
expression -> TokLeftTuple . relop_expression_list TokRightTuple [ TokUntil TokTo TokThen TokSemi TokRightParen TokRightBrack TokOf TokExcept TokEnd TokElse TokDownTo TokDo TokComma # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression_list shift to state 135
-- On relop_expression shift to state 137
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 78:
## Known stack suffix:
## type_identifier
## LR(1) items:
function_call -> type_identifier . TokLeftParen expression TokRightParen [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokLeftParen shift to state 79
## Reductions:

State 79:
## Known stack suffix:
## type_identifier TokLeftParen
## LR(1) items:
function_call -> type_identifier TokLeftParen . expression TokRightParen [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 133
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 80:
## Known stack suffix:
## term
## LR(1) items:
add_term -> term . [ TokXor TokUntil TokTo TokThen TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokComma TokAnd # ]
term -> term . mulop factor [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAnd # ]
## Transitions:
-- On TokStar shift to state 81
-- On TokSlash shift to state 82
-- On TokMod shift to state 83
-- On TokDiv shift to state 84
-- On mulop shift to state 85
## Reductions:
-- On TokXor TokUntil TokTo TokThen TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokComma TokAnd
--   reduce production add_term -> term

State 81:
## Known stack suffix:
## TokStar
## LR(1) items:
mulop -> TokStar . [ TokTypeWord TokTypeUInt64 TokTypeShort TokTypeReal TokTypeLongDouble TokTypeInteger TokTypeInt64 TokTypeDouble TokTypeDWord TokTypeChar TokTypeCString TokTypeByte TokTypeBoolean TokTrue TokString TokSizeOf TokRef TokNot TokNil TokMinus TokLeftParen TokInt TokId TokFloat TokFalse TokDeref TokChar TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mulop -> TokStar

State 82:
## Known stack suffix:
## TokSlash
## LR(1) items:
mulop -> TokSlash . [ TokTypeWord TokTypeUInt64 TokTypeShort TokTypeReal TokTypeLongDouble TokTypeInteger TokTypeInt64 TokTypeDouble TokTypeDWord TokTypeChar TokTypeCString TokTypeByte TokTypeBoolean TokTrue TokString TokSizeOf TokRef TokNot TokNil TokMinus TokLeftParen TokInt TokId TokFloat TokFalse TokDeref TokChar TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mulop -> TokSlash

State 83:
## Known stack suffix:
## TokMod
## LR(1) items:
mulop -> TokMod . [ TokTypeWord TokTypeUInt64 TokTypeShort TokTypeReal TokTypeLongDouble TokTypeInteger TokTypeInt64 TokTypeDouble TokTypeDWord TokTypeChar TokTypeCString TokTypeByte TokTypeBoolean TokTrue TokString TokSizeOf TokRef TokNot TokNil TokMinus TokLeftParen TokInt TokId TokFloat TokFalse TokDeref TokChar TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mulop -> TokMod

State 84:
## Known stack suffix:
## TokDiv
## LR(1) items:
mulop -> TokDiv . [ TokTypeWord TokTypeUInt64 TokTypeShort TokTypeReal TokTypeLongDouble TokTypeInteger TokTypeInt64 TokTypeDouble TokTypeDWord TokTypeChar TokTypeCString TokTypeByte TokTypeBoolean TokTrue TokString TokSizeOf TokRef TokNot TokNil TokMinus TokLeftParen TokInt TokId TokFloat TokFalse TokDeref TokChar TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mulop -> TokDiv

State 85:
## Known stack suffix:
## term mulop
## LR(1) items:
term -> term mulop . factor [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAnd # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 132
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
## Reductions:

State 86:
## Known stack suffix:
## primary
## LR(1) items:
exponentiation -> primary . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exponentiation -> primary

State 87:
## Known stack suffix:
## lvalue
## LR(1) items:
field_designator -> lvalue . TokDot identifier [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLeftBrack TokLe TokHat TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDot TokDo TokDiv TokComma TokAssignEq TokAnd # ]
identified_variable -> lvalue . TokHat [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLeftBrack TokLe TokHat TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDot TokDo TokDiv TokComma TokAssignEq TokAnd # ]
indexed_variable -> lvalue . TokLeftBrack expression_list TokRightBrack [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLeftBrack TokLe TokHat TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDot TokDo TokDiv TokComma TokAssignEq TokAnd # ]
unsigned_constant -> lvalue . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokLeftBrack shift to state 88
-- On TokHat shift to state 129
-- On TokDot shift to state 130
## Reductions:
-- On TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd
--   reduce production unsigned_constant -> lvalue

State 88:
## Known stack suffix:
## lvalue TokLeftBrack
## LR(1) items:
indexed_variable -> lvalue TokLeftBrack . expression_list TokRightBrack [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLeftBrack TokLe TokHat TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDot TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression_list_rev shift to state 123
-- On expression_list shift to state 126
-- On expression shift to state 128
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 89:
## Known stack suffix:
## simple_expression
## LR(1) items:
relop_expression -> simple_expression . relop simple_expression [ TokUntil TokTo TokThen TokSemi TokRightTuple TokRightParen TokRightBrack TokOf TokExcept TokEnd TokElse TokDownTo TokDo TokComma # ]
relop_expression -> simple_expression . [ TokUntil TokTo TokThen TokSemi TokRightTuple TokRightParen TokRightBrack TokOf TokExcept TokEnd TokElse TokDownTo TokDo TokComma # ]
simple_expression -> simple_expression . logop add_term [ TokXor TokUntil TokTo TokThen TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokOr TokOf TokNotEq TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokComma TokAnd # ]
## Transitions:
-- On TokXor shift to state 90
-- On TokShr shift to state 91
-- On TokShl shift to state 92
-- On TokOr shift to state 93
-- On TokNotEq shift to state 94
-- On TokLt shift to state 95
-- On TokLe shift to state 96
-- On TokGt shift to state 97
-- On TokGe shift to state 98
-- On TokEq shift to state 99
-- On TokAnd shift to state 100
-- On relop shift to state 101
-- On logop shift to state 103
## Reductions:
-- On TokUntil TokTo TokThen TokSemi TokRightTuple TokRightParen TokRightBrack TokOf TokExcept TokEnd TokElse TokDownTo TokDo TokComma
--   reduce production relop_expression -> simple_expression

State 90:
## Known stack suffix:
## TokXor
## LR(1) items:
logop -> TokXor . [ TokTypeWord TokTypeUInt64 TokTypeShort TokTypeReal TokTypeLongDouble TokTypeInteger TokTypeInt64 TokTypeDouble TokTypeDWord TokTypeChar TokTypeCString TokTypeByte TokTypeBoolean TokTrue TokString TokSizeOf TokRef TokNot TokNil TokMinus TokLeftParen TokInt TokId TokFloat TokFalse TokDeref TokChar TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production logop -> TokXor

State 91:
## Known stack suffix:
## TokShr
## LR(1) items:
logop -> TokShr . [ TokTypeWord TokTypeUInt64 TokTypeShort TokTypeReal TokTypeLongDouble TokTypeInteger TokTypeInt64 TokTypeDouble TokTypeDWord TokTypeChar TokTypeCString TokTypeByte TokTypeBoolean TokTrue TokString TokSizeOf TokRef TokNot TokNil TokMinus TokLeftParen TokInt TokId TokFloat TokFalse TokDeref TokChar TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production logop -> TokShr

State 92:
## Known stack suffix:
## TokShl
## LR(1) items:
logop -> TokShl . [ TokTypeWord TokTypeUInt64 TokTypeShort TokTypeReal TokTypeLongDouble TokTypeInteger TokTypeInt64 TokTypeDouble TokTypeDWord TokTypeChar TokTypeCString TokTypeByte TokTypeBoolean TokTrue TokString TokSizeOf TokRef TokNot TokNil TokMinus TokLeftParen TokInt TokId TokFloat TokFalse TokDeref TokChar TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production logop -> TokShl

State 93:
## Known stack suffix:
## TokOr
## LR(1) items:
logop -> TokOr . [ TokTypeWord TokTypeUInt64 TokTypeShort TokTypeReal TokTypeLongDouble TokTypeInteger TokTypeInt64 TokTypeDouble TokTypeDWord TokTypeChar TokTypeCString TokTypeByte TokTypeBoolean TokTrue TokString TokSizeOf TokRef TokNot TokNil TokMinus TokLeftParen TokInt TokId TokFloat TokFalse TokDeref TokChar TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production logop -> TokOr

State 94:
## Known stack suffix:
## TokNotEq
## LR(1) items:
relop -> TokNotEq . [ TokTypeWord TokTypeUInt64 TokTypeShort TokTypeReal TokTypeLongDouble TokTypeInteger TokTypeInt64 TokTypeDouble TokTypeDWord TokTypeChar TokTypeCString TokTypeByte TokTypeBoolean TokTrue TokString TokSizeOf TokRef TokNot TokNil TokMinus TokLeftParen TokInt TokId TokFloat TokFalse TokDeref TokChar TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relop -> TokNotEq

State 95:
## Known stack suffix:
## TokLt
## LR(1) items:
relop -> TokLt . [ TokTypeWord TokTypeUInt64 TokTypeShort TokTypeReal TokTypeLongDouble TokTypeInteger TokTypeInt64 TokTypeDouble TokTypeDWord TokTypeChar TokTypeCString TokTypeByte TokTypeBoolean TokTrue TokString TokSizeOf TokRef TokNot TokNil TokMinus TokLeftParen TokInt TokId TokFloat TokFalse TokDeref TokChar TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relop -> TokLt

State 96:
## Known stack suffix:
## TokLe
## LR(1) items:
relop -> TokLe . [ TokTypeWord TokTypeUInt64 TokTypeShort TokTypeReal TokTypeLongDouble TokTypeInteger TokTypeInt64 TokTypeDouble TokTypeDWord TokTypeChar TokTypeCString TokTypeByte TokTypeBoolean TokTrue TokString TokSizeOf TokRef TokNot TokNil TokMinus TokLeftParen TokInt TokId TokFloat TokFalse TokDeref TokChar TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relop -> TokLe

State 97:
## Known stack suffix:
## TokGt
## LR(1) items:
relop -> TokGt . [ TokTypeWord TokTypeUInt64 TokTypeShort TokTypeReal TokTypeLongDouble TokTypeInteger TokTypeInt64 TokTypeDouble TokTypeDWord TokTypeChar TokTypeCString TokTypeByte TokTypeBoolean TokTrue TokString TokSizeOf TokRef TokNot TokNil TokMinus TokLeftParen TokInt TokId TokFloat TokFalse TokDeref TokChar TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relop -> TokGt

State 98:
## Known stack suffix:
## TokGe
## LR(1) items:
relop -> TokGe . [ TokTypeWord TokTypeUInt64 TokTypeShort TokTypeReal TokTypeLongDouble TokTypeInteger TokTypeInt64 TokTypeDouble TokTypeDWord TokTypeChar TokTypeCString TokTypeByte TokTypeBoolean TokTrue TokString TokSizeOf TokRef TokNot TokNil TokMinus TokLeftParen TokInt TokId TokFloat TokFalse TokDeref TokChar TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relop -> TokGe

State 99:
## Known stack suffix:
## TokEq
## LR(1) items:
relop -> TokEq . [ TokTypeWord TokTypeUInt64 TokTypeShort TokTypeReal TokTypeLongDouble TokTypeInteger TokTypeInt64 TokTypeDouble TokTypeDWord TokTypeChar TokTypeCString TokTypeByte TokTypeBoolean TokTrue TokString TokSizeOf TokRef TokNot TokNil TokMinus TokLeftParen TokInt TokId TokFloat TokFalse TokDeref TokChar TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relop -> TokEq

State 100:
## Known stack suffix:
## TokAnd
## LR(1) items:
logop -> TokAnd . [ TokTypeWord TokTypeUInt64 TokTypeShort TokTypeReal TokTypeLongDouble TokTypeInteger TokTypeInt64 TokTypeDouble TokTypeDWord TokTypeChar TokTypeCString TokTypeByte TokTypeBoolean TokTrue TokString TokSizeOf TokRef TokNot TokNil TokMinus TokLeftParen TokInt TokId TokFloat TokFalse TokDeref TokChar TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production logop -> TokAnd

State 101:
## Known stack suffix:
## simple_expression relop
## LR(1) items:
relop_expression -> simple_expression relop . simple_expression [ TokUntil TokTo TokThen TokSemi TokRightTuple TokRightParen TokRightBrack TokOf TokExcept TokEnd TokElse TokDownTo TokDo TokComma # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 102
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 102:
## Known stack suffix:
## simple_expression relop simple_expression
## LR(1) items:
relop_expression -> simple_expression relop simple_expression . [ TokUntil TokTo TokThen TokSemi TokRightTuple TokRightParen TokRightBrack TokOf TokExcept TokEnd TokElse TokDownTo TokDo TokComma # ]
simple_expression -> simple_expression . logop add_term [ TokXor TokUntil TokTo TokThen TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokOr TokOf TokExcept TokEnd TokElse TokDownTo TokDo TokComma TokAnd # ]
## Transitions:
-- On TokXor shift to state 90
-- On TokShr shift to state 91
-- On TokShl shift to state 92
-- On TokOr shift to state 93
-- On TokAnd shift to state 100
-- On logop shift to state 103
## Reductions:
-- On TokUntil TokTo TokThen TokSemi TokRightTuple TokRightParen TokRightBrack TokOf TokExcept TokEnd TokElse TokDownTo TokDo TokComma
--   reduce production relop_expression -> simple_expression relop simple_expression

State 103:
## Known stack suffix:
## simple_expression logop
## LR(1) items:
simple_expression -> simple_expression logop . add_term [ TokXor TokUntil TokTo TokThen TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokOr TokOf TokNotEq TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokComma TokAnd # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 116
## Reductions:

State 104:
## Known stack suffix:
## indexed_variable
## LR(1) items:
component_variable -> indexed_variable . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLeftBrack TokLe TokHat TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDot TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_variable -> indexed_variable

State 105:
## Known stack suffix:
## identifier
## LR(1) items:
lvalue -> identifier . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLeftBrack TokLe TokHat TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDot TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lvalue -> identifier

State 106:
## Known stack suffix:
## identified_variable
## LR(1) items:
lvalue -> identified_variable . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLeftBrack TokLe TokHat TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDot TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lvalue -> identified_variable

State 107:
## Known stack suffix:
## function_call
## LR(1) items:
unsigned_constant -> function_call . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unsigned_constant -> function_call

State 108:
## Known stack suffix:
## field_designator
## LR(1) items:
component_variable -> field_designator . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLeftBrack TokLe TokHat TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDot TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production component_variable -> field_designator

State 109:
## Known stack suffix:
## factor
## LR(1) items:
term -> factor . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term -> factor

State 110:
## Known stack suffix:
## exponentiation
## LR(1) items:
factor -> exponentiation . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production factor -> exponentiation

State 111:
## Known stack suffix:
## component_variable
## LR(1) items:
lvalue -> component_variable . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLeftBrack TokLe TokHat TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDot TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lvalue -> component_variable

State 112:
## Known stack suffix:
## character_string_rev
## LR(1) items:
character_string -> character_string_rev . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokColon TokAssignEq TokAnd # ]
character_string_rev -> character_string_rev . TokChar [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokColon TokChar TokAssignEq TokAnd # ]
## Transitions:
-- On TokChar shift to state 113
## Reductions:
-- On TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokColon TokAssignEq TokAnd
--   reduce production character_string -> character_string_rev

State 113:
## Known stack suffix:
## character_string_rev TokChar
## LR(1) items:
character_string_rev -> character_string_rev TokChar . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokColon TokChar TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production character_string_rev -> character_string_rev TokChar

State 114:
## Known stack suffix:
## character_string
## LR(1) items:
unsigned_constant -> character_string . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unsigned_constant -> character_string

State 115:
## Known stack suffix:
## boolean_value
## LR(1) items:
unsigned_constant -> boolean_value . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unsigned_constant -> boolean_value

State 116:
## Known stack suffix:
## simple_expression logop add_term
## LR(1) items:
add_term -> add_term . addop term [ TokXor TokUntil TokTo TokThen TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokComma TokAnd # ]
simple_expression -> simple_expression logop add_term . [ TokXor TokUntil TokTo TokThen TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokOr TokOf TokNotEq TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokComma TokAnd # ]
## Transitions:
-- On TokPlus shift to state 117
-- On TokMinus shift to state 118
-- On addop shift to state 119
## Reductions:
-- On TokXor TokUntil TokTo TokThen TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokOr TokOf TokNotEq TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokComma TokAnd
--   reduce production simple_expression -> simple_expression logop add_term

State 117:
## Known stack suffix:
## TokPlus
## LR(1) items:
addop -> TokPlus . [ TokTypeWord TokTypeUInt64 TokTypeShort TokTypeReal TokTypeLongDouble TokTypeInteger TokTypeInt64 TokTypeDouble TokTypeDWord TokTypeChar TokTypeCString TokTypeByte TokTypeBoolean TokTrue TokString TokSizeOf TokRef TokNot TokNil TokMinus TokLeftParen TokInt TokId TokFloat TokFalse TokDeref TokChar TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production addop -> TokPlus

State 118:
## Known stack suffix:
## TokMinus
## LR(1) items:
addop -> TokMinus . [ TokTypeWord TokTypeUInt64 TokTypeShort TokTypeReal TokTypeLongDouble TokTypeInteger TokTypeInt64 TokTypeDouble TokTypeDWord TokTypeChar TokTypeCString TokTypeByte TokTypeBoolean TokTrue TokString TokSizeOf TokRef TokNot TokNil TokMinus TokLeftParen TokInt TokId TokFloat TokFalse TokDeref TokChar TokAt ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production addop -> TokMinus

State 119:
## Known stack suffix:
## add_term addop
## LR(1) items:
add_term -> add_term addop . term [ TokXor TokUntil TokTo TokThen TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokComma TokAnd # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 120
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
## Reductions:

State 120:
## Known stack suffix:
## add_term addop term
## LR(1) items:
add_term -> add_term addop term . [ TokXor TokUntil TokTo TokThen TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokComma TokAnd # ]
term -> term . mulop factor [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAnd # ]
## Transitions:
-- On TokStar shift to state 81
-- On TokSlash shift to state 82
-- On TokMod shift to state 83
-- On TokDiv shift to state 84
-- On mulop shift to state 85
## Reductions:
-- On TokXor TokUntil TokTo TokThen TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokComma TokAnd
--   reduce production add_term -> add_term addop term

State 121:
## Known stack suffix:
## add_term
## LR(1) items:
add_term -> add_term . addop term [ TokXor TokUntil TokTo TokThen TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokComma TokAnd # ]
simple_expression -> add_term . [ TokXor TokUntil TokTo TokThen TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokOr TokOf TokNotEq TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokComma TokAnd # ]
## Transitions:
-- On TokPlus shift to state 117
-- On TokMinus shift to state 118
-- On addop shift to state 119
## Reductions:
-- On TokXor TokUntil TokTo TokThen TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokOr TokOf TokNotEq TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokComma TokAnd
--   reduce production simple_expression -> add_term

State 122:
## Known stack suffix:
## relop_expression
## LR(1) items:
expression -> relop_expression . [ TokUntil TokTo TokThen TokSemi TokRightParen TokRightBrack TokOf TokExcept TokEnd TokElse TokDownTo TokDo TokComma # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression -> relop_expression

State 123:
## Known stack suffix:
## expression_list_rev
## LR(1) items:
expression_list -> expression_list_rev . [ TokRightParen TokRightBrack ]
expression_list_rev -> expression_list_rev . TokComma expression [ TokRightParen TokRightBrack TokComma ]
## Transitions:
-- On TokComma shift to state 124
## Reductions:
-- On TokRightParen TokRightBrack
--   reduce production expression_list -> expression_list_rev

State 124:
## Known stack suffix:
## expression_list_rev TokComma
## LR(1) items:
expression_list_rev -> expression_list_rev TokComma . expression [ TokRightParen TokRightBrack TokComma ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 125
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 125:
## Known stack suffix:
## expression_list_rev TokComma expression
## LR(1) items:
expression_list_rev -> expression_list_rev TokComma expression . [ TokRightParen TokRightBrack TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_list_rev -> expression_list_rev TokComma expression

State 126:
## Known stack suffix:
## lvalue TokLeftBrack expression_list
## LR(1) items:
indexed_variable -> lvalue TokLeftBrack expression_list . TokRightBrack [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLeftBrack TokLe TokHat TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDot TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokRightBrack shift to state 127
## Reductions:

State 127:
## Known stack suffix:
## lvalue TokLeftBrack expression_list TokRightBrack
## LR(1) items:
indexed_variable -> lvalue TokLeftBrack expression_list TokRightBrack . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLeftBrack TokLe TokHat TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDot TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production indexed_variable -> lvalue TokLeftBrack expression_list TokRightBrack

State 128:
## Known stack suffix:
## expression
## LR(1) items:
expression_list_rev -> expression . [ TokRightParen TokRightBrack TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_list_rev -> expression

State 129:
## Known stack suffix:
## lvalue TokHat
## LR(1) items:
identified_variable -> lvalue TokHat . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLeftBrack TokLe TokHat TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDot TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production identified_variable -> lvalue TokHat

State 130:
## Known stack suffix:
## lvalue TokDot
## LR(1) items:
field_designator -> lvalue TokDot . identifier [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLeftBrack TokLe TokHat TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDot TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokId shift to state 3
-- On identifier shift to state 131
## Reductions:

State 131:
## Known stack suffix:
## lvalue TokDot identifier
## LR(1) items:
field_designator -> lvalue TokDot identifier . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLeftBrack TokLe TokHat TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDot TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production field_designator -> lvalue TokDot identifier

State 132:
## Known stack suffix:
## term mulop factor
## LR(1) items:
term -> term mulop factor . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term -> term mulop factor

State 133:
## Known stack suffix:
## type_identifier TokLeftParen expression
## LR(1) items:
function_call -> type_identifier TokLeftParen expression . TokRightParen [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokRightParen shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## type_identifier TokLeftParen expression TokRightParen
## LR(1) items:
function_call -> type_identifier TokLeftParen expression TokRightParen . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_call -> type_identifier TokLeftParen expression TokRightParen

State 135:
## Known stack suffix:
## TokLeftTuple relop_expression_list
## LR(1) items:
expression -> TokLeftTuple relop_expression_list . TokRightTuple [ TokUntil TokTo TokThen TokSemi TokRightParen TokRightBrack TokOf TokExcept TokEnd TokElse TokDownTo TokDo TokComma # ]
## Transitions:
-- On TokRightTuple shift to state 136
## Reductions:

State 136:
## Known stack suffix:
## TokLeftTuple relop_expression_list TokRightTuple
## LR(1) items:
expression -> TokLeftTuple relop_expression_list TokRightTuple . [ TokUntil TokTo TokThen TokSemi TokRightParen TokRightBrack TokOf TokExcept TokEnd TokElse TokDownTo TokDo TokComma # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression -> TokLeftTuple relop_expression_list TokRightTuple

State 137:
## Known stack suffix:
## relop_expression
## LR(1) items:
relop_expression_list -> relop_expression . TokComma relop_expression_list [ TokRightTuple ]
relop_expression_list -> relop_expression . TokComma relop_expression [ TokRightTuple ]
## Transitions:
-- On TokComma shift to state 138
## Reductions:

State 138:
## Known stack suffix:
## relop_expression TokComma
## LR(1) items:
relop_expression_list -> relop_expression TokComma . relop_expression_list [ TokRightTuple ]
relop_expression_list -> relop_expression TokComma . relop_expression [ TokRightTuple ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression_list shift to state 139
-- On relop_expression shift to state 140
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 139:
## Known stack suffix:
## relop_expression TokComma relop_expression_list
## LR(1) items:
relop_expression_list -> relop_expression TokComma relop_expression_list . [ TokRightTuple ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relop_expression_list -> relop_expression TokComma relop_expression_list

State 140:
## Known stack suffix:
## relop_expression TokComma relop_expression
## LR(1) items:
relop_expression_list -> relop_expression . TokComma relop_expression_list [ TokRightTuple ]
relop_expression_list -> relop_expression . TokComma relop_expression [ TokRightTuple ]
relop_expression_list -> relop_expression TokComma relop_expression . [ TokRightTuple ]
## Transitions:
-- On TokComma shift to state 138
## Reductions:
-- On TokRightTuple
--   reduce production relop_expression_list -> relop_expression TokComma relop_expression

State 141:
## Known stack suffix:
## unsigned_constant TokLeftParen expression_list
## LR(1) items:
function_call -> unsigned_constant TokLeftParen expression_list . TokRightParen [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokRightParen shift to state 142
## Reductions:

State 142:
## Known stack suffix:
## unsigned_constant TokLeftParen expression_list TokRightParen
## LR(1) items:
function_call -> unsigned_constant TokLeftParen expression_list TokRightParen . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_call -> unsigned_constant TokLeftParen expression_list TokRightParen

State 143:
## Known stack suffix:
## TokAt primary
## LR(1) items:
primary -> TokAt primary . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary -> TokAt primary

State 144:
## Known stack suffix:
## TokDeref primary
## LR(1) items:
primary -> TokDeref primary . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary -> TokDeref primary

State 145:
## Known stack suffix:
## TokMinus factor
## LR(1) items:
factor -> TokMinus factor . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production factor -> TokMinus factor

State 146:
## Known stack suffix:
## TokLeftParen expression
## LR(1) items:
unsigned_constant -> TokLeftParen expression . TokRightParen [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokRightParen shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## TokLeftParen expression TokRightParen
## LR(1) items:
unsigned_constant -> TokLeftParen expression TokRightParen . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unsigned_constant -> TokLeftParen expression TokRightParen

State 148:
## Known stack suffix:
## TokNot primary
## LR(1) items:
primary -> TokNot primary . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary -> TokNot primary

State 149:
## Known stack suffix:
## TokRef primary
## LR(1) items:
primary -> TokRef primary . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary -> TokRef primary

State 150:
## Known stack suffix:
## TokSizeOf TokLeftParen type_identifier
## LR(1) items:
function_call -> type_identifier . TokLeftParen expression TokRightParen [ TokXor TokStar TokSlash TokShr TokShl TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokEq TokDiv TokAnd ]
function_call -> TokSizeOf TokLeftParen type_identifier . TokRightParen [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokRightParen shift to state 151
-- On TokLeftParen shift to state 79
## Reductions:

State 151:
## Known stack suffix:
## TokSizeOf TokLeftParen type_identifier TokRightParen
## LR(1) items:
function_call -> TokSizeOf TokLeftParen type_identifier TokRightParen . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_call -> TokSizeOf TokLeftParen type_identifier TokRightParen

State 152:
## Known stack suffix:
## TokSizeOf TokLeftParen expression
## LR(1) items:
function_call -> TokSizeOf TokLeftParen expression . TokRightParen [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
-- On TokRightParen shift to state 153
## Reductions:

State 153:
## Known stack suffix:
## TokSizeOf TokLeftParen expression TokRightParen
## LR(1) items:
function_call -> TokSizeOf TokLeftParen expression TokRightParen . [ TokXor TokUntil TokTo TokThen TokStar TokSlash TokShr TokShl TokSemi TokRightTuple TokRightParen TokRightBrack TokPlus TokOr TokOf TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokExcept TokEq TokEnd TokElse TokDownTo TokDo TokDiv TokComma TokAssignEq TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_call -> TokSizeOf TokLeftParen expression TokRightParen

State 154:
## Known stack suffix:
## identifier TokEq expression
## LR(1) items:
identifier_and_expr -> identifier TokEq expression . [ TokRightParen TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production identifier_and_expr -> identifier TokEq expression

State 155:
## Known stack suffix:
## identifier_and_expr
## LR(1) items:
identifier_and_expr_list -> identifier_and_expr . [ TokRightParen TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production identifier_and_expr_list -> identifier_and_expr

State 156:
## Known stack suffix:
## TokFunction
## LR(1) items:
function_type -> TokFunction . TokLeftParen TokRightParen TokArrow type_denoter [ TokSemi TokRightParen TokEq TokComma ]
function_type -> TokFunction . TokLeftParen type_list TokRightParen TokArrow type_denoter [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokLeftParen shift to state 157
## Reductions:

State 157:
## Known stack suffix:
## TokFunction TokLeftParen
## LR(1) items:
function_type -> TokFunction TokLeftParen . TokRightParen TokArrow type_denoter [ TokSemi TokRightParen TokEq TokComma ]
function_type -> TokFunction TokLeftParen . type_list TokRightParen TokArrow type_denoter [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRightParen shift to state 158
-- On TokRef shift to state 39
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokMutable shift to state 52
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokHat shift to state 160
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_list shift to state 188
-- On type_identifier shift to state 171
-- On type_denoter shift to state 194
-- On tuple_type shift to state 173
-- On ref_or_basic_type shift to state 174
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 181
-- On array_type shift to state 182
## Reductions:

State 158:
## Known stack suffix:
## TokFunction TokLeftParen TokRightParen
## LR(1) items:
function_type -> TokFunction TokLeftParen TokRightParen . TokArrow type_denoter [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokArrow shift to state 159
## Reductions:

State 159:
## Known stack suffix:
## TokFunction TokLeftParen TokRightParen TokArrow
## LR(1) items:
function_type -> TokFunction TokLeftParen TokRightParen TokArrow . type_denoter [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRef shift to state 39
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokMutable shift to state 52
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokHat shift to state 160
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On type_denoter shift to state 187
-- On tuple_type shift to state 173
-- On ref_or_basic_type shift to state 174
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 181
-- On array_type shift to state 182
## Reductions:

State 160:
## Known stack suffix:
## TokHat
## LR(1) items:
ref_or_basic_type -> TokHat . basic_type [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On tuple_type shift to state 173
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 186
-- On array_type shift to state 182
## Reductions:

State 161:
## Known stack suffix:
## TokArray
## LR(1) items:
array_type -> TokArray . TokLeftBrack index_list TokRightBrack TokOf type_denoter [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokLeftBrack shift to state 162
## Reductions:

State 162:
## Known stack suffix:
## TokArray TokLeftBrack
## LR(1) items:
array_type -> TokArray TokLeftBrack . index_list TokRightBrack TokOf type_denoter [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokInt shift to state 163
-- On TokId shift to state 3
-- On index_prim shift to state 164
-- On index_list shift to state 168
-- On index shift to state 185
-- On identifier shift to state 167
## Reductions:

State 163:
## Known stack suffix:
## TokInt
## LR(1) items:
index_prim -> TokInt . [ TokTwoDots TokRightBrack TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production index_prim -> TokInt

State 164:
## Known stack suffix:
## index_prim
## LR(1) items:
index -> index_prim . TokTwoDots index_prim [ TokRightBrack TokComma ]
## Transitions:
-- On TokTwoDots shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## index_prim TokTwoDots
## LR(1) items:
index -> index_prim TokTwoDots . index_prim [ TokRightBrack TokComma ]
## Transitions:
-- On TokInt shift to state 163
-- On TokId shift to state 3
-- On index_prim shift to state 166
-- On identifier shift to state 167
## Reductions:

State 166:
## Known stack suffix:
## index_prim TokTwoDots index_prim
## LR(1) items:
index -> index_prim TokTwoDots index_prim . [ TokRightBrack TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production index -> index_prim TokTwoDots index_prim

State 167:
## Known stack suffix:
## identifier
## LR(1) items:
index_prim -> identifier . [ TokTwoDots TokRightBrack TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production index_prim -> identifier

State 168:
## Known stack suffix:
## TokArray TokLeftBrack index_list
## LR(1) items:
array_type -> TokArray TokLeftBrack index_list . TokRightBrack TokOf type_denoter [ TokSemi TokRightParen TokEq TokComma ]
index_list -> index_list . TokComma index [ TokRightBrack TokComma ]
## Transitions:
-- On TokRightBrack shift to state 169
-- On TokComma shift to state 183
## Reductions:

State 169:
## Known stack suffix:
## TokArray TokLeftBrack index_list TokRightBrack
## LR(1) items:
array_type -> TokArray TokLeftBrack index_list TokRightBrack . TokOf type_denoter [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokOf shift to state 170
## Reductions:

State 170:
## Known stack suffix:
## TokArray TokLeftBrack index_list TokRightBrack TokOf
## LR(1) items:
array_type -> TokArray TokLeftBrack index_list TokRightBrack TokOf . type_denoter [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRef shift to state 39
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokMutable shift to state 52
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokHat shift to state 160
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On type_denoter shift to state 172
-- On tuple_type shift to state 173
-- On ref_or_basic_type shift to state 174
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 181
-- On array_type shift to state 182
## Reductions:

State 171:
## Known stack suffix:
## type_identifier
## LR(1) items:
basic_type -> type_identifier . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_type -> type_identifier

State 172:
## Known stack suffix:
## TokArray TokLeftBrack index_list TokRightBrack TokOf type_denoter
## LR(1) items:
array_type -> TokArray TokLeftBrack index_list TokRightBrack TokOf type_denoter . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production array_type -> TokArray TokLeftBrack index_list TokRightBrack TokOf type_denoter

State 173:
## Known stack suffix:
## tuple_type
## LR(1) items:
basic_type -> tuple_type . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_type -> tuple_type

State 174:
## Known stack suffix:
## ref_or_basic_type
## LR(1) items:
type_denoter -> ref_or_basic_type . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_denoter -> ref_or_basic_type

State 175:
## Known stack suffix:
## record_type
## LR(1) items:
new_structured_type -> record_type . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production new_structured_type -> record_type

State 176:
## Known stack suffix:
## procedure_type
## LR(1) items:
basic_type -> procedure_type . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_type -> procedure_type

State 177:
## Known stack suffix:
## new_structured_type
## LR(1) items:
basic_type -> new_structured_type . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_type -> new_structured_type

State 178:
## Known stack suffix:
## identifier
## LR(1) items:
basic_type -> identifier . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_type -> identifier

State 179:
## Known stack suffix:
## function_type
## LR(1) items:
basic_type -> function_type . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_type -> function_type

State 180:
## Known stack suffix:
## enum_type
## LR(1) items:
basic_type -> enum_type . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_type -> enum_type

State 181:
## Known stack suffix:
## basic_type
## LR(1) items:
ref_or_basic_type -> basic_type . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ref_or_basic_type -> basic_type

State 182:
## Known stack suffix:
## array_type
## LR(1) items:
new_structured_type -> array_type . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production new_structured_type -> array_type

State 183:
## Known stack suffix:
## index_list TokComma
## LR(1) items:
index_list -> index_list TokComma . index [ TokRightBrack TokComma ]
## Transitions:
-- On TokInt shift to state 163
-- On TokId shift to state 3
-- On index_prim shift to state 164
-- On index shift to state 184
-- On identifier shift to state 167
## Reductions:

State 184:
## Known stack suffix:
## index_list TokComma index
## LR(1) items:
index_list -> index_list TokComma index . [ TokRightBrack TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production index_list -> index_list TokComma index

State 185:
## Known stack suffix:
## index
## LR(1) items:
index_list -> index . [ TokRightBrack TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production index_list -> index

State 186:
## Known stack suffix:
## TokHat basic_type
## LR(1) items:
ref_or_basic_type -> TokHat basic_type . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ref_or_basic_type -> TokHat basic_type

State 187:
## Known stack suffix:
## TokFunction TokLeftParen TokRightParen TokArrow type_denoter
## LR(1) items:
function_type -> TokFunction TokLeftParen TokRightParen TokArrow type_denoter . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_type -> TokFunction TokLeftParen TokRightParen TokArrow type_denoter

State 188:
## Known stack suffix:
## TokFunction TokLeftParen type_list
## LR(1) items:
function_type -> TokFunction TokLeftParen type_list . TokRightParen TokArrow type_denoter [ TokSemi TokRightParen TokEq TokComma ]
type_list -> type_list . TokSemi type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokSemi shift to state 189
-- On TokRightParen shift to state 191
## Reductions:

State 189:
## Known stack suffix:
## type_list TokSemi
## LR(1) items:
type_list -> type_list TokSemi . type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRef shift to state 39
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokMutable shift to state 52
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokHat shift to state 160
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On type_denoter shift to state 190
-- On tuple_type shift to state 173
-- On ref_or_basic_type shift to state 174
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 181
-- On array_type shift to state 182
## Reductions:

State 190:
## Known stack suffix:
## type_list TokSemi type_denoter
## LR(1) items:
type_list -> type_list TokSemi type_denoter . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_list -> type_list TokSemi type_denoter

State 191:
## Known stack suffix:
## TokFunction TokLeftParen type_list TokRightParen
## LR(1) items:
function_type -> TokFunction TokLeftParen type_list TokRightParen . TokArrow type_denoter [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokArrow shift to state 192
## Reductions:

State 192:
## Known stack suffix:
## TokFunction TokLeftParen type_list TokRightParen TokArrow
## LR(1) items:
function_type -> TokFunction TokLeftParen type_list TokRightParen TokArrow . type_denoter [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRef shift to state 39
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokMutable shift to state 52
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokHat shift to state 160
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On type_denoter shift to state 193
-- On tuple_type shift to state 173
-- On ref_or_basic_type shift to state 174
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 181
-- On array_type shift to state 182
## Reductions:

State 193:
## Known stack suffix:
## TokFunction TokLeftParen type_list TokRightParen TokArrow type_denoter
## LR(1) items:
function_type -> TokFunction TokLeftParen type_list TokRightParen TokArrow type_denoter . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_type -> TokFunction TokLeftParen type_list TokRightParen TokArrow type_denoter

State 194:
## Known stack suffix:
## type_denoter
## LR(1) items:
type_list -> type_denoter . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_list -> type_denoter

State 195:
## Known stack suffix:
## TokMutable basic_type
## LR(1) items:
ref_or_basic_type -> TokMutable basic_type . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ref_or_basic_type -> TokMutable basic_type

State 196:
## Known stack suffix:
## TokProcedure TokLeftParen type_list
## LR(1) items:
procedure_type -> TokProcedure TokLeftParen type_list . TokRightParen [ TokSemi TokRightParen TokEq TokComma ]
type_list -> type_list . TokSemi type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokSemi shift to state 189
-- On TokRightParen shift to state 197
## Reductions:

State 197:
## Known stack suffix:
## TokProcedure TokLeftParen type_list TokRightParen
## LR(1) items:
procedure_type -> TokProcedure TokLeftParen type_list TokRightParen . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production procedure_type -> TokProcedure TokLeftParen type_list TokRightParen

State 198:
## Known stack suffix:
## plain_identifier_list TokColon type_denoter
## LR(1) items:
record_section -> plain_identifier_list TokColon type_denoter . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production record_section -> plain_identifier_list TokColon type_denoter

State 199:
## Known stack suffix:
## record_section
## LR(1) items:
record_section_list -> record_section . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production record_section_list -> record_section

State 200:
## Known stack suffix:
## TokRef basic_type
## LR(1) items:
ref_or_basic_type -> TokRef basic_type . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ref_or_basic_type -> TokRef basic_type

State 201:
## Known stack suffix:
## TokTuple TokOf TokLeftParen type_list_with_comma
## LR(1) items:
tuple_type -> TokTuple TokOf TokLeftParen type_list_with_comma . TokRightParen [ TokSemi TokRightParen TokEq TokComma ]
type_list_with_comma -> type_list_with_comma . TokComma type_denoter [ TokRightParen TokComma ]
## Transitions:
-- On TokRightParen shift to state 202
-- On TokComma shift to state 203
## Reductions:

State 202:
## Known stack suffix:
## TokTuple TokOf TokLeftParen type_list_with_comma TokRightParen
## LR(1) items:
tuple_type -> TokTuple TokOf TokLeftParen type_list_with_comma TokRightParen . [ TokSemi TokRightParen TokEq TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tuple_type -> TokTuple TokOf TokLeftParen type_list_with_comma TokRightParen

State 203:
## Known stack suffix:
## type_list_with_comma TokComma
## LR(1) items:
type_list_with_comma -> type_list_with_comma TokComma . type_denoter [ TokRightParen TokComma ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRef shift to state 39
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokMutable shift to state 52
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokHat shift to state 160
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On type_denoter shift to state 204
-- On tuple_type shift to state 173
-- On ref_or_basic_type shift to state 174
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 181
-- On array_type shift to state 182
## Reductions:

State 204:
## Known stack suffix:
## type_list_with_comma TokComma type_denoter
## LR(1) items:
type_list_with_comma -> type_list_with_comma TokComma type_denoter . [ TokRightParen TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_list_with_comma -> type_list_with_comma TokComma type_denoter

State 205:
## Known stack suffix:
## type_denoter
## LR(1) items:
type_list_with_comma -> type_denoter . [ TokRightParen TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_list_with_comma -> type_denoter

State 206:
## Known stack suffix:
## var_pattern_list TokColon type_denoter
## LR(1) items:
variable_declaration -> var_pattern_list TokColon type_denoter . [ TokSemi ]
variable_init_declaration -> var_pattern_list TokColon type_denoter . TokEq expression [ TokSemi ]
variable_init_declaration -> var_pattern_list TokColon type_denoter . TokEq array_init_expression [ TokSemi ]
## Transitions:
-- On TokEq shift to state 207
## Reductions:
-- On TokSemi
--   reduce production variable_declaration -> var_pattern_list TokColon type_denoter

State 207:
## Known stack suffix:
## var_pattern_list TokColon type_denoter TokEq
## LR(1) items:
variable_init_declaration -> var_pattern_list TokColon type_denoter TokEq . expression [ TokSemi ]
variable_init_declaration -> var_pattern_list TokColon type_denoter TokEq . array_init_expression [ TokSemi ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 208
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 215
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On array_init_expression shift to state 216
-- On add_term shift to state 121
## Reductions:

State 208:
## Known stack suffix:
## TokLeftParen
## LR(1) items:
array_init_expression -> TokLeftParen . relop_expression_list_as_list TokRightParen [ TokSemi ]
unsigned_constant -> TokLeftParen . expression TokRightParen [ TokXor TokStar TokSlash TokShr TokShl TokSemi TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLeftParen TokLe TokGt TokGe TokEq TokDiv TokAnd ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression_list_as_list shift to state 209
-- On relop_expression shift to state 211
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 146
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 209:
## Known stack suffix:
## TokLeftParen relop_expression_list_as_list
## LR(1) items:
array_init_expression -> TokLeftParen relop_expression_list_as_list . TokRightParen [ TokSemi ]
## Transitions:
-- On TokRightParen shift to state 210
## Reductions:

State 210:
## Known stack suffix:
## TokLeftParen relop_expression_list_as_list TokRightParen
## LR(1) items:
array_init_expression -> TokLeftParen relop_expression_list_as_list TokRightParen . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production array_init_expression -> TokLeftParen relop_expression_list_as_list TokRightParen

State 211:
## Known stack suffix:
## relop_expression
## LR(1) items:
expression -> relop_expression . [ TokRightParen ]
relop_expression_list_as_list -> relop_expression . TokComma relop_expression_list_as_list [ TokRightParen ]
relop_expression_list_as_list -> relop_expression . TokComma relop_expression [ TokRightParen ]
## Transitions:
-- On TokComma shift to state 212
## Reductions:
-- On TokRightParen
--   reduce production expression -> relop_expression

State 212:
## Known stack suffix:
## relop_expression TokComma
## LR(1) items:
relop_expression_list_as_list -> relop_expression TokComma . relop_expression_list_as_list [ TokRightParen ]
relop_expression_list_as_list -> relop_expression TokComma . relop_expression [ TokRightParen ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression_list_as_list shift to state 213
-- On relop_expression shift to state 214
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 213:
## Known stack suffix:
## relop_expression TokComma relop_expression_list_as_list
## LR(1) items:
relop_expression_list_as_list -> relop_expression TokComma relop_expression_list_as_list . [ TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relop_expression_list_as_list -> relop_expression TokComma relop_expression_list_as_list

State 214:
## Known stack suffix:
## relop_expression TokComma relop_expression
## LR(1) items:
relop_expression_list_as_list -> relop_expression . TokComma relop_expression_list_as_list [ TokRightParen ]
relop_expression_list_as_list -> relop_expression . TokComma relop_expression [ TokRightParen ]
relop_expression_list_as_list -> relop_expression TokComma relop_expression . [ TokRightParen ]
## Transitions:
-- On TokComma shift to state 212
## Reductions:
-- On TokRightParen
--   reduce production relop_expression_list_as_list -> relop_expression TokComma relop_expression

State 215:
## Known stack suffix:
## var_pattern_list TokColon type_denoter TokEq expression
## LR(1) items:
variable_init_declaration -> var_pattern_list TokColon type_denoter TokEq expression . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable_init_declaration -> var_pattern_list TokColon type_denoter TokEq expression

State 216:
## Known stack suffix:
## var_pattern_list TokColon type_denoter TokEq array_init_expression
## LR(1) items:
variable_init_declaration -> var_pattern_list TokColon type_denoter TokEq array_init_expression . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable_init_declaration -> var_pattern_list TokColon type_denoter TokEq array_init_expression

State 217:
## Known stack suffix:
## var_pattern
## LR(1) items:
var_pattern_list -> var_pattern . [ TokEq TokComma TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production var_pattern_list -> var_pattern

State 218:
## Known stack suffix:
## variable_declaration
## LR(1) items:
variable_declaration_list -> variable_declaration . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable_declaration_list -> variable_declaration

State 219:
## Known stack suffix:
## TokType
## LR(1) items:
type_def -> TokType . type_definition_list [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokId shift to state 3
-- On type_definition_list_rev shift to state 220
-- On type_definition_list shift to state 226
-- On type_definition shift to state 227
-- On identifier shift to state 222
## Reductions:

State 220:
## Known stack suffix:
## type_definition_list_rev
## LR(1) items:
type_definition_list -> type_definition_list_rev . [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
type_definition_list_rev -> type_definition_list_rev . type_definition [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokId TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokId shift to state 3
-- On type_definition shift to state 221
-- On identifier shift to state 222
## Reductions:
-- On TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin
--   reduce production type_definition_list -> type_definition_list_rev

State 221:
## Known stack suffix:
## type_definition_list_rev type_definition
## LR(1) items:
type_definition_list_rev -> type_definition_list_rev type_definition . [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokId TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_definition_list_rev -> type_definition_list_rev type_definition

State 222:
## Known stack suffix:
## identifier
## LR(1) items:
type_definition -> identifier . TokEq type_denoter TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokId TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokEq shift to state 223
## Reductions:

State 223:
## Known stack suffix:
## identifier TokEq
## LR(1) items:
type_definition -> identifier TokEq . type_denoter TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokId TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRef shift to state 39
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokMutable shift to state 52
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokHat shift to state 160
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On type_denoter shift to state 224
-- On tuple_type shift to state 173
-- On ref_or_basic_type shift to state 174
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 181
-- On array_type shift to state 182
## Reductions:

State 224:
## Known stack suffix:
## identifier TokEq type_denoter
## LR(1) items:
type_definition -> identifier TokEq type_denoter . TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokId TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 225
## Reductions:

State 225:
## Known stack suffix:
## identifier TokEq type_denoter TokSemi
## LR(1) items:
type_definition -> identifier TokEq type_denoter TokSemi . [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokId TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_definition -> identifier TokEq type_denoter TokSemi

State 226:
## Known stack suffix:
## TokType type_definition_list
## LR(1) items:
type_def -> TokType type_definition_list . [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_def -> TokType type_definition_list

State 227:
## Known stack suffix:
## type_definition
## LR(1) items:
type_definition_list_rev -> type_definition . [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokId TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_definition_list_rev -> type_definition

State 228:
## Known stack suffix:
## TokProcedure
## LR(1) items:
procedure_heading -> TokProcedure . identifier TokLeftParen TokRightParen [ TokSemi TokEq ]
procedure_heading -> TokProcedure . identifier [ TokSemi TokEq ]
procedure_heading -> TokProcedure . identifier TokLeftParen formal_parameters TokRightParen [ TokSemi TokEq ]
## Transitions:
-- On TokId shift to state 3
-- On identifier shift to state 229
## Reductions:

State 229:
## Known stack suffix:
## TokProcedure identifier
## LR(1) items:
procedure_heading -> TokProcedure identifier . TokLeftParen TokRightParen [ TokSemi TokEq ]
procedure_heading -> TokProcedure identifier . [ TokSemi TokEq ]
procedure_heading -> TokProcedure identifier . TokLeftParen formal_parameters TokRightParen [ TokSemi TokEq ]
## Transitions:
-- On TokLeftParen shift to state 230
## Reductions:
-- On TokSemi TokEq
--   reduce production procedure_heading -> TokProcedure identifier

State 230:
## Known stack suffix:
## TokProcedure identifier TokLeftParen
## LR(1) items:
procedure_heading -> TokProcedure identifier TokLeftParen . TokRightParen [ TokSemi TokEq ]
procedure_heading -> TokProcedure identifier TokLeftParen . formal_parameters TokRightParen [ TokSemi TokEq ]
## Transitions:
-- On TokVar shift to state 231
-- On TokRightParen shift to state 266
-- On TokMutable shift to state 267
-- On TokLeftParen shift to state 2
-- On TokId shift to state 3
-- On var_pattern_list shift to state 232
-- On var_pattern shift to state 217
-- On var_parameter_set shift to state 269
-- On value_parameter_set shift to state 270
-- On identifier shift to state 21
-- On formal_parameters shift to state 271
## Reductions:

State 231:
## Known stack suffix:
## TokVar
## LR(1) items:
var_parameter_set -> TokVar . value_parameter_set [ TokSemi TokRightParen ]
## Transitions:
-- On TokLeftParen shift to state 2
-- On TokId shift to state 3
-- On var_pattern_list shift to state 232
-- On var_pattern shift to state 217
-- On value_parameter_set shift to state 265
-- On identifier shift to state 21
## Reductions:

State 232:
## Known stack suffix:
## var_pattern_list
## LR(1) items:
value_parameter_set -> var_pattern_list . TokColon parameter_type_denoter [ TokSemi TokRightParen ]
var_pattern_list -> var_pattern_list . TokComma var_pattern [ TokComma TokColon ]
## Transitions:
-- On TokComma shift to state 19
-- On TokColon shift to state 233
## Reductions:

State 233:
## Known stack suffix:
## var_pattern_list TokColon
## LR(1) items:
value_parameter_set -> var_pattern_list TokColon . parameter_type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRef shift to state 234
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 236
-- On TokMutable shift to state 238
-- On TokId shift to state 3
-- On TokHat shift to state 240
-- On TokFunction shift to state 156
-- On TokArray shift to state 242
-- On type_identifier shift to state 250
-- On tuple_type shift to state 251
-- On ref_or_basic_parameter_type shift to state 252
-- On record_type shift to state 253
-- On procedure_type shift to state 254
-- On parameter_type_denoter shift to state 264
-- On new_parameter_structured_type shift to state 256
-- On identifier shift to state 257
-- On function_type shift to state 258
-- On conformant_array_type shift to state 259
-- On basic_parameter_type shift to state 260
## Reductions:

State 234:
## Known stack suffix:
## TokRef
## LR(1) items:
ref_or_basic_parameter_type -> TokRef . basic_type [ TokSemi TokRightParen ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On tuple_type shift to state 173
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 235
-- On array_type shift to state 182
## Reductions:

State 235:
## Known stack suffix:
## TokRef basic_type
## LR(1) items:
ref_or_basic_parameter_type -> TokRef basic_type . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ref_or_basic_parameter_type -> TokRef basic_type

State 236:
## Known stack suffix:
## TokPoly
## LR(1) items:
basic_parameter_type -> TokPoly . identifier [ TokSemi TokRightParen ]
## Transitions:
-- On TokId shift to state 3
-- On identifier shift to state 237
## Reductions:

State 237:
## Known stack suffix:
## TokPoly identifier
## LR(1) items:
basic_parameter_type -> TokPoly identifier . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_parameter_type -> TokPoly identifier

State 238:
## Known stack suffix:
## TokMutable
## LR(1) items:
ref_or_basic_parameter_type -> TokMutable . basic_type [ TokSemi TokRightParen ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On tuple_type shift to state 173
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 239
-- On array_type shift to state 182
## Reductions:

State 239:
## Known stack suffix:
## TokMutable basic_type
## LR(1) items:
ref_or_basic_parameter_type -> TokMutable basic_type . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ref_or_basic_parameter_type -> TokMutable basic_type

State 240:
## Known stack suffix:
## TokHat
## LR(1) items:
ref_or_basic_parameter_type -> TokHat . basic_type [ TokSemi TokRightParen ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On tuple_type shift to state 173
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 241
-- On array_type shift to state 182
## Reductions:

State 241:
## Known stack suffix:
## TokHat basic_type
## LR(1) items:
ref_or_basic_parameter_type -> TokHat basic_type . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ref_or_basic_parameter_type -> TokHat basic_type

State 242:
## Known stack suffix:
## TokArray
## LR(1) items:
conformant_array_type -> TokArray . TokLeftBrack conf_index_list TokRightBrack TokOf parameter_type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokLeftBrack shift to state 243
## Reductions:

State 243:
## Known stack suffix:
## TokArray TokLeftBrack
## LR(1) items:
conformant_array_type -> TokArray TokLeftBrack . conf_index_list TokRightBrack TokOf parameter_type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokId shift to state 3
-- On identifier shift to state 244
-- On conf_index_list shift to state 247
-- On conf_index shift to state 263
## Reductions:

State 244:
## Known stack suffix:
## identifier
## LR(1) items:
conf_index -> identifier . TokTwoDots identifier [ TokRightBrack TokComma ]
## Transitions:
-- On TokTwoDots shift to state 245
## Reductions:

State 245:
## Known stack suffix:
## identifier TokTwoDots
## LR(1) items:
conf_index -> identifier TokTwoDots . identifier [ TokRightBrack TokComma ]
## Transitions:
-- On TokId shift to state 3
-- On identifier shift to state 246
## Reductions:

State 246:
## Known stack suffix:
## identifier TokTwoDots identifier
## LR(1) items:
conf_index -> identifier TokTwoDots identifier . [ TokRightBrack TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production conf_index -> identifier TokTwoDots identifier

State 247:
## Known stack suffix:
## TokArray TokLeftBrack conf_index_list
## LR(1) items:
conf_index_list -> conf_index_list . TokComma conf_index [ TokRightBrack TokComma ]
conformant_array_type -> TokArray TokLeftBrack conf_index_list . TokRightBrack TokOf parameter_type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokRightBrack shift to state 248
-- On TokComma shift to state 261
## Reductions:

State 248:
## Known stack suffix:
## TokArray TokLeftBrack conf_index_list TokRightBrack
## LR(1) items:
conformant_array_type -> TokArray TokLeftBrack conf_index_list TokRightBrack . TokOf parameter_type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokOf shift to state 249
## Reductions:

State 249:
## Known stack suffix:
## TokArray TokLeftBrack conf_index_list TokRightBrack TokOf
## LR(1) items:
conformant_array_type -> TokArray TokLeftBrack conf_index_list TokRightBrack TokOf . parameter_type_denoter [ TokSemi TokRightParen ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRef shift to state 234
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 236
-- On TokMutable shift to state 238
-- On TokId shift to state 3
-- On TokHat shift to state 240
-- On TokFunction shift to state 156
-- On TokArray shift to state 242
-- On type_identifier shift to state 250
-- On tuple_type shift to state 251
-- On ref_or_basic_parameter_type shift to state 252
-- On record_type shift to state 253
-- On procedure_type shift to state 254
-- On parameter_type_denoter shift to state 255
-- On new_parameter_structured_type shift to state 256
-- On identifier shift to state 257
-- On function_type shift to state 258
-- On conformant_array_type shift to state 259
-- On basic_parameter_type shift to state 260
## Reductions:

State 250:
## Known stack suffix:
## type_identifier
## LR(1) items:
basic_parameter_type -> type_identifier . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_parameter_type -> type_identifier

State 251:
## Known stack suffix:
## tuple_type
## LR(1) items:
basic_parameter_type -> tuple_type . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_parameter_type -> tuple_type

State 252:
## Known stack suffix:
## ref_or_basic_parameter_type
## LR(1) items:
parameter_type_denoter -> ref_or_basic_parameter_type . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_type_denoter -> ref_or_basic_parameter_type

State 253:
## Known stack suffix:
## record_type
## LR(1) items:
new_parameter_structured_type -> record_type . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production new_parameter_structured_type -> record_type

State 254:
## Known stack suffix:
## procedure_type
## LR(1) items:
basic_parameter_type -> procedure_type . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_parameter_type -> procedure_type

State 255:
## Known stack suffix:
## TokArray TokLeftBrack conf_index_list TokRightBrack TokOf parameter_type_denoter
## LR(1) items:
conformant_array_type -> TokArray TokLeftBrack conf_index_list TokRightBrack TokOf parameter_type_denoter . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production conformant_array_type -> TokArray TokLeftBrack conf_index_list TokRightBrack TokOf parameter_type_denoter

State 256:
## Known stack suffix:
## new_parameter_structured_type
## LR(1) items:
basic_parameter_type -> new_parameter_structured_type . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_parameter_type -> new_parameter_structured_type

State 257:
## Known stack suffix:
## identifier
## LR(1) items:
basic_parameter_type -> identifier . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_parameter_type -> identifier

State 258:
## Known stack suffix:
## function_type
## LR(1) items:
basic_parameter_type -> function_type . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_parameter_type -> function_type

State 259:
## Known stack suffix:
## conformant_array_type
## LR(1) items:
new_parameter_structured_type -> conformant_array_type . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production new_parameter_structured_type -> conformant_array_type

State 260:
## Known stack suffix:
## basic_parameter_type
## LR(1) items:
ref_or_basic_parameter_type -> basic_parameter_type . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ref_or_basic_parameter_type -> basic_parameter_type

State 261:
## Known stack suffix:
## conf_index_list TokComma
## LR(1) items:
conf_index_list -> conf_index_list TokComma . conf_index [ TokRightBrack TokComma ]
## Transitions:
-- On TokId shift to state 3
-- On identifier shift to state 244
-- On conf_index shift to state 262
## Reductions:

State 262:
## Known stack suffix:
## conf_index_list TokComma conf_index
## LR(1) items:
conf_index_list -> conf_index_list TokComma conf_index . [ TokRightBrack TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production conf_index_list -> conf_index_list TokComma conf_index

State 263:
## Known stack suffix:
## conf_index
## LR(1) items:
conf_index_list -> conf_index . [ TokRightBrack TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production conf_index_list -> conf_index

State 264:
## Known stack suffix:
## var_pattern_list TokColon parameter_type_denoter
## LR(1) items:
value_parameter_set -> var_pattern_list TokColon parameter_type_denoter . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production value_parameter_set -> var_pattern_list TokColon parameter_type_denoter

State 265:
## Known stack suffix:
## TokVar value_parameter_set
## LR(1) items:
var_parameter_set -> TokVar value_parameter_set . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production var_parameter_set -> TokVar value_parameter_set

State 266:
## Known stack suffix:
## TokProcedure identifier TokLeftParen TokRightParen
## LR(1) items:
procedure_heading -> TokProcedure identifier TokLeftParen TokRightParen . [ TokSemi TokEq ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production procedure_heading -> TokProcedure identifier TokLeftParen TokRightParen

State 267:
## Known stack suffix:
## TokMutable
## LR(1) items:
var_parameter_set -> TokMutable . value_parameter_set [ TokSemi TokRightParen ]
## Transitions:
-- On TokLeftParen shift to state 2
-- On TokId shift to state 3
-- On var_pattern_list shift to state 232
-- On var_pattern shift to state 217
-- On value_parameter_set shift to state 268
-- On identifier shift to state 21
## Reductions:

State 268:
## Known stack suffix:
## TokMutable value_parameter_set
## LR(1) items:
var_parameter_set -> TokMutable value_parameter_set . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production var_parameter_set -> TokMutable value_parameter_set

State 269:
## Known stack suffix:
## var_parameter_set
## LR(1) items:
formal_parameters -> var_parameter_set . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production formal_parameters -> var_parameter_set

State 270:
## Known stack suffix:
## value_parameter_set
## LR(1) items:
formal_parameters -> value_parameter_set . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production formal_parameters -> value_parameter_set

State 271:
## Known stack suffix:
## TokProcedure identifier TokLeftParen formal_parameters
## LR(1) items:
formal_parameters -> formal_parameters . TokSemi value_parameter_set [ TokSemi TokRightParen ]
formal_parameters -> formal_parameters . TokSemi var_parameter_set [ TokSemi TokRightParen ]
procedure_heading -> TokProcedure identifier TokLeftParen formal_parameters . TokRightParen [ TokSemi TokEq ]
## Transitions:
-- On TokSemi shift to state 272
-- On TokRightParen shift to state 275
## Reductions:

State 272:
## Known stack suffix:
## formal_parameters TokSemi
## LR(1) items:
formal_parameters -> formal_parameters TokSemi . value_parameter_set [ TokSemi TokRightParen ]
formal_parameters -> formal_parameters TokSemi . var_parameter_set [ TokSemi TokRightParen ]
## Transitions:
-- On TokVar shift to state 231
-- On TokMutable shift to state 267
-- On TokLeftParen shift to state 2
-- On TokId shift to state 3
-- On var_pattern_list shift to state 232
-- On var_pattern shift to state 217
-- On var_parameter_set shift to state 273
-- On value_parameter_set shift to state 274
-- On identifier shift to state 21
## Reductions:

State 273:
## Known stack suffix:
## formal_parameters TokSemi var_parameter_set
## LR(1) items:
formal_parameters -> formal_parameters TokSemi var_parameter_set . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production formal_parameters -> formal_parameters TokSemi var_parameter_set

State 274:
## Known stack suffix:
## formal_parameters TokSemi value_parameter_set
## LR(1) items:
formal_parameters -> formal_parameters TokSemi value_parameter_set . [ TokSemi TokRightParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production formal_parameters -> formal_parameters TokSemi value_parameter_set

State 275:
## Known stack suffix:
## TokProcedure identifier TokLeftParen formal_parameters TokRightParen
## LR(1) items:
procedure_heading -> TokProcedure identifier TokLeftParen formal_parameters TokRightParen . [ TokSemi TokEq ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production procedure_heading -> TokProcedure identifier TokLeftParen formal_parameters TokRightParen

State 276:
## Known stack suffix:
## TokOperator
## LR(1) items:
operator_heading -> TokOperator . operator_symbol TokLeftParen formal_parameters TokRightParen TokColon type_denoter [ TokSemi TokEq ]
operator_heading -> TokOperator . operator_symbol TokLeftParen formal_parameters TokRightParen [ TokSemi TokEq ]
## Transitions:
-- On TokXor shift to state 277
-- On TokStar shift to state 278
-- On TokSlash shift to state 279
-- On TokShr shift to state 280
-- On TokShl shift to state 281
-- On TokPlus shift to state 282
-- On TokOr shift to state 283
-- On TokMod shift to state 284
-- On TokMinus shift to state 285
-- On TokLt shift to state 286
-- On TokLe shift to state 287
-- On TokGt shift to state 288
-- On TokGe shift to state 289
-- On TokEq shift to state 290
-- On TokDiv shift to state 291
-- On TokBrackets shift to state 292
-- On TokAssignEq shift to state 293
-- On TokAnd shift to state 294
-- On operator_symbol shift to state 295
## Reductions:

State 277:
## Known stack suffix:
## TokXor
## LR(1) items:
operator_symbol -> TokXor . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokXor

State 278:
## Known stack suffix:
## TokStar
## LR(1) items:
operator_symbol -> TokStar . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokStar

State 279:
## Known stack suffix:
## TokSlash
## LR(1) items:
operator_symbol -> TokSlash . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokSlash

State 280:
## Known stack suffix:
## TokShr
## LR(1) items:
operator_symbol -> TokShr . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokShr

State 281:
## Known stack suffix:
## TokShl
## LR(1) items:
operator_symbol -> TokShl . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokShl

State 282:
## Known stack suffix:
## TokPlus
## LR(1) items:
operator_symbol -> TokPlus . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokPlus

State 283:
## Known stack suffix:
## TokOr
## LR(1) items:
operator_symbol -> TokOr . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokOr

State 284:
## Known stack suffix:
## TokMod
## LR(1) items:
operator_symbol -> TokMod . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokMod

State 285:
## Known stack suffix:
## TokMinus
## LR(1) items:
operator_symbol -> TokMinus . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokMinus

State 286:
## Known stack suffix:
## TokLt
## LR(1) items:
operator_symbol -> TokLt . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokLt

State 287:
## Known stack suffix:
## TokLe
## LR(1) items:
operator_symbol -> TokLe . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokLe

State 288:
## Known stack suffix:
## TokGt
## LR(1) items:
operator_symbol -> TokGt . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokGt

State 289:
## Known stack suffix:
## TokGe
## LR(1) items:
operator_symbol -> TokGe . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokGe

State 290:
## Known stack suffix:
## TokEq
## LR(1) items:
operator_symbol -> TokEq . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokEq

State 291:
## Known stack suffix:
## TokDiv
## LR(1) items:
operator_symbol -> TokDiv . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokDiv

State 292:
## Known stack suffix:
## TokBrackets
## LR(1) items:
operator_symbol -> TokBrackets . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokBrackets

State 293:
## Known stack suffix:
## TokAssignEq
## LR(1) items:
operator_symbol -> TokAssignEq . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokAssignEq

State 294:
## Known stack suffix:
## TokAnd
## LR(1) items:
operator_symbol -> TokAnd . [ TokLeftParen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_symbol -> TokAnd

State 295:
## Known stack suffix:
## TokOperator operator_symbol
## LR(1) items:
operator_heading -> TokOperator operator_symbol . TokLeftParen formal_parameters TokRightParen TokColon type_denoter [ TokSemi TokEq ]
operator_heading -> TokOperator operator_symbol . TokLeftParen formal_parameters TokRightParen [ TokSemi TokEq ]
## Transitions:
-- On TokLeftParen shift to state 296
## Reductions:

State 296:
## Known stack suffix:
## TokOperator operator_symbol TokLeftParen
## LR(1) items:
operator_heading -> TokOperator operator_symbol TokLeftParen . formal_parameters TokRightParen TokColon type_denoter [ TokSemi TokEq ]
operator_heading -> TokOperator operator_symbol TokLeftParen . formal_parameters TokRightParen [ TokSemi TokEq ]
## Transitions:
-- On TokVar shift to state 231
-- On TokMutable shift to state 267
-- On TokLeftParen shift to state 2
-- On TokId shift to state 3
-- On var_pattern_list shift to state 232
-- On var_pattern shift to state 217
-- On var_parameter_set shift to state 269
-- On value_parameter_set shift to state 270
-- On identifier shift to state 21
-- On formal_parameters shift to state 297
## Reductions:

State 297:
## Known stack suffix:
## TokOperator operator_symbol TokLeftParen formal_parameters
## LR(1) items:
formal_parameters -> formal_parameters . TokSemi value_parameter_set [ TokSemi TokRightParen ]
formal_parameters -> formal_parameters . TokSemi var_parameter_set [ TokSemi TokRightParen ]
operator_heading -> TokOperator operator_symbol TokLeftParen formal_parameters . TokRightParen TokColon type_denoter [ TokSemi TokEq ]
operator_heading -> TokOperator operator_symbol TokLeftParen formal_parameters . TokRightParen [ TokSemi TokEq ]
## Transitions:
-- On TokSemi shift to state 272
-- On TokRightParen shift to state 298
## Reductions:

State 298:
## Known stack suffix:
## TokOperator operator_symbol TokLeftParen formal_parameters TokRightParen
## LR(1) items:
operator_heading -> TokOperator operator_symbol TokLeftParen formal_parameters TokRightParen . TokColon type_denoter [ TokSemi TokEq ]
operator_heading -> TokOperator operator_symbol TokLeftParen formal_parameters TokRightParen . [ TokSemi TokEq ]
## Transitions:
-- On TokColon shift to state 299
## Reductions:
-- On TokSemi TokEq
--   reduce production operator_heading -> TokOperator operator_symbol TokLeftParen formal_parameters TokRightParen

State 299:
## Known stack suffix:
## TokOperator operator_symbol TokLeftParen formal_parameters TokRightParen TokColon
## LR(1) items:
operator_heading -> TokOperator operator_symbol TokLeftParen formal_parameters TokRightParen TokColon . type_denoter [ TokSemi TokEq ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRef shift to state 39
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokMutable shift to state 52
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokHat shift to state 160
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On type_denoter shift to state 300
-- On tuple_type shift to state 173
-- On ref_or_basic_type shift to state 174
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 181
-- On array_type shift to state 182
## Reductions:

State 300:
## Known stack suffix:
## TokOperator operator_symbol TokLeftParen formal_parameters TokRightParen TokColon type_denoter
## LR(1) items:
operator_heading -> TokOperator operator_symbol TokLeftParen formal_parameters TokRightParen TokColon type_denoter . [ TokSemi TokEq ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_heading -> TokOperator operator_symbol TokLeftParen formal_parameters TokRightParen TokColon type_denoter

State 301:
## Known stack suffix:
## TokLabel
## LR(1) items:
label_declaration -> TokLabel . label_list TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokInt shift to state 302
-- On TokId shift to state 3
-- On label_list shift to state 303
-- On label shift to state 308
-- On identifier shift to state 307
## Reductions:

State 302:
## Known stack suffix:
## TokInt
## LR(1) items:
label -> TokInt . [ TokSemi TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label -> TokInt

State 303:
## Known stack suffix:
## TokLabel label_list
## LR(1) items:
label_declaration -> TokLabel label_list . TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
label_list -> label_list . TokComma label [ TokSemi TokComma ]
## Transitions:
-- On TokSemi shift to state 304
-- On TokComma shift to state 305
## Reductions:

State 304:
## Known stack suffix:
## TokLabel label_list TokSemi
## LR(1) items:
label_declaration -> TokLabel label_list TokSemi . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_declaration -> TokLabel label_list TokSemi

State 305:
## Known stack suffix:
## label_list TokComma
## LR(1) items:
label_list -> label_list TokComma . label [ TokSemi TokComma ]
## Transitions:
-- On TokInt shift to state 302
-- On TokId shift to state 3
-- On label shift to state 306
-- On identifier shift to state 307
## Reductions:

State 306:
## Known stack suffix:
## label_list TokComma label
## LR(1) items:
label_list -> label_list TokComma label . [ TokSemi TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_list -> label_list TokComma label

State 307:
## Known stack suffix:
## identifier
## LR(1) items:
label -> identifier . [ TokSemi TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label -> identifier

State 308:
## Known stack suffix:
## label
## LR(1) items:
label_list -> label . [ TokSemi TokComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_list -> label

State 309:
## Known stack suffix:
## TokFunction
## LR(1) items:
function_heading -> TokFunction . identifier TokLeftParen TokRightParen TokColon type_denoter [ TokSemi TokEq ]
function_heading -> TokFunction . identifier TokColon type_denoter [ TokSemi TokEq ]
function_heading -> TokFunction . identifier TokLeftParen formal_parameters TokRightParen TokColon type_denoter [ TokSemi TokEq ]
## Transitions:
-- On TokId shift to state 3
-- On identifier shift to state 310
## Reductions:

State 310:
## Known stack suffix:
## TokFunction identifier
## LR(1) items:
function_heading -> TokFunction identifier . TokLeftParen TokRightParen TokColon type_denoter [ TokSemi TokEq ]
function_heading -> TokFunction identifier . TokColon type_denoter [ TokSemi TokEq ]
function_heading -> TokFunction identifier . TokLeftParen formal_parameters TokRightParen TokColon type_denoter [ TokSemi TokEq ]
## Transitions:
-- On TokLeftParen shift to state 311
-- On TokColon shift to state 319
## Reductions:

State 311:
## Known stack suffix:
## TokFunction identifier TokLeftParen
## LR(1) items:
function_heading -> TokFunction identifier TokLeftParen . TokRightParen TokColon type_denoter [ TokSemi TokEq ]
function_heading -> TokFunction identifier TokLeftParen . formal_parameters TokRightParen TokColon type_denoter [ TokSemi TokEq ]
## Transitions:
-- On TokVar shift to state 231
-- On TokRightParen shift to state 312
-- On TokMutable shift to state 267
-- On TokLeftParen shift to state 2
-- On TokId shift to state 3
-- On var_pattern_list shift to state 232
-- On var_pattern shift to state 217
-- On var_parameter_set shift to state 269
-- On value_parameter_set shift to state 270
-- On identifier shift to state 21
-- On formal_parameters shift to state 315
## Reductions:

State 312:
## Known stack suffix:
## TokFunction identifier TokLeftParen TokRightParen
## LR(1) items:
function_heading -> TokFunction identifier TokLeftParen TokRightParen . TokColon type_denoter [ TokSemi TokEq ]
## Transitions:
-- On TokColon shift to state 313
## Reductions:

State 313:
## Known stack suffix:
## TokFunction identifier TokLeftParen TokRightParen TokColon
## LR(1) items:
function_heading -> TokFunction identifier TokLeftParen TokRightParen TokColon . type_denoter [ TokSemi TokEq ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRef shift to state 39
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokMutable shift to state 52
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokHat shift to state 160
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On type_denoter shift to state 314
-- On tuple_type shift to state 173
-- On ref_or_basic_type shift to state 174
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 181
-- On array_type shift to state 182
## Reductions:

State 314:
## Known stack suffix:
## TokFunction identifier TokLeftParen TokRightParen TokColon type_denoter
## LR(1) items:
function_heading -> TokFunction identifier TokLeftParen TokRightParen TokColon type_denoter . [ TokSemi TokEq ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_heading -> TokFunction identifier TokLeftParen TokRightParen TokColon type_denoter

State 315:
## Known stack suffix:
## TokFunction identifier TokLeftParen formal_parameters
## LR(1) items:
formal_parameters -> formal_parameters . TokSemi value_parameter_set [ TokSemi TokRightParen ]
formal_parameters -> formal_parameters . TokSemi var_parameter_set [ TokSemi TokRightParen ]
function_heading -> TokFunction identifier TokLeftParen formal_parameters . TokRightParen TokColon type_denoter [ TokSemi TokEq ]
## Transitions:
-- On TokSemi shift to state 272
-- On TokRightParen shift to state 316
## Reductions:

State 316:
## Known stack suffix:
## TokFunction identifier TokLeftParen formal_parameters TokRightParen
## LR(1) items:
function_heading -> TokFunction identifier TokLeftParen formal_parameters TokRightParen . TokColon type_denoter [ TokSemi TokEq ]
## Transitions:
-- On TokColon shift to state 317
## Reductions:

State 317:
## Known stack suffix:
## TokFunction identifier TokLeftParen formal_parameters TokRightParen TokColon
## LR(1) items:
function_heading -> TokFunction identifier TokLeftParen formal_parameters TokRightParen TokColon . type_denoter [ TokSemi TokEq ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRef shift to state 39
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokMutable shift to state 52
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokHat shift to state 160
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On type_denoter shift to state 318
-- On tuple_type shift to state 173
-- On ref_or_basic_type shift to state 174
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 181
-- On array_type shift to state 182
## Reductions:

State 318:
## Known stack suffix:
## TokFunction identifier TokLeftParen formal_parameters TokRightParen TokColon type_denoter
## LR(1) items:
function_heading -> TokFunction identifier TokLeftParen formal_parameters TokRightParen TokColon type_denoter . [ TokSemi TokEq ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_heading -> TokFunction identifier TokLeftParen formal_parameters TokRightParen TokColon type_denoter

State 319:
## Known stack suffix:
## TokFunction identifier TokColon
## LR(1) items:
function_heading -> TokFunction identifier TokColon . type_denoter [ TokSemi TokEq ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTuple shift to state 36
-- On TokRef shift to state 39
-- On TokRecord shift to state 40
-- On TokProcedure shift to state 47
-- On TokPoly shift to state 50
-- On TokMutable shift to state 52
-- On TokLeftParen shift to state 53
-- On TokId shift to state 3
-- On TokHat shift to state 160
-- On TokFunction shift to state 156
-- On TokArray shift to state 161
-- On type_identifier shift to state 171
-- On type_denoter shift to state 320
-- On tuple_type shift to state 173
-- On ref_or_basic_type shift to state 174
-- On record_type shift to state 175
-- On procedure_type shift to state 176
-- On new_structured_type shift to state 177
-- On identifier shift to state 178
-- On function_type shift to state 179
-- On enum_type shift to state 180
-- On basic_type shift to state 181
-- On array_type shift to state 182
## Reductions:

State 320:
## Known stack suffix:
## TokFunction identifier TokColon type_denoter
## LR(1) items:
function_heading -> TokFunction identifier TokColon type_denoter . [ TokSemi TokEq ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_heading -> TokFunction identifier TokColon type_denoter

State 321:
## Known stack suffix:
## TokException
## LR(1) items:
exception_declaration -> TokException . identifier TokColon type_identifier TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
exception_declaration -> TokException . identifier TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokId shift to state 3
-- On identifier shift to state 322
## Reductions:

State 322:
## Known stack suffix:
## TokException identifier
## LR(1) items:
exception_declaration -> TokException identifier . TokColon type_identifier TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
exception_declaration -> TokException identifier . TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 323
-- On TokColon shift to state 324
## Reductions:

State 323:
## Known stack suffix:
## TokException identifier TokSemi
## LR(1) items:
exception_declaration -> TokException identifier TokSemi . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exception_declaration -> TokException identifier TokSemi

State 324:
## Known stack suffix:
## TokException identifier TokColon
## LR(1) items:
exception_declaration -> TokException identifier TokColon . type_identifier TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On type_identifier shift to state 325
## Reductions:

State 325:
## Known stack suffix:
## TokException identifier TokColon type_identifier
## LR(1) items:
exception_declaration -> TokException identifier TokColon type_identifier . TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 326
## Reductions:

State 326:
## Known stack suffix:
## TokException identifier TokColon type_identifier TokSemi
## LR(1) items:
exception_declaration -> TokException identifier TokColon type_identifier TokSemi . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exception_declaration -> TokException identifier TokColon type_identifier TokSemi

State 327:
## Known stack suffix:
## TokEof
## LR(1) items:
bootstrap -> TokEof . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production bootstrap -> TokEof

State 328:
## Known stack suffix:
## TokConst
## LR(1) items:
constant_declaration -> TokConst . constant_declaration_list TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokId shift to state 3
-- On plain_identifier_list shift to state 329
-- On identifier shift to state 8
-- On constant_declaration_list shift to state 337
-- On constant_decl_prim shift to state 340
## Reductions:

State 329:
## Known stack suffix:
## plain_identifier_list
## LR(1) items:
constant_decl_prim -> plain_identifier_list . TokEq TokInt [ TokSemi ]
constant_decl_prim -> plain_identifier_list . TokEq TokMinus TokInt [ TokSemi ]
constant_decl_prim -> plain_identifier_list . TokEq TokFloat [ TokSemi ]
constant_decl_prim -> plain_identifier_list . TokEq TokMinus TokFloat [ TokSemi ]
constant_decl_prim -> plain_identifier_list . TokEq TokString [ TokSemi ]
plain_identifier_list -> plain_identifier_list . TokComma identifier [ TokEq TokComma ]
## Transitions:
-- On TokEq shift to state 330
-- On TokComma shift to state 6
## Reductions:

State 330:
## Known stack suffix:
## plain_identifier_list TokEq
## LR(1) items:
constant_decl_prim -> plain_identifier_list TokEq . TokInt [ TokSemi ]
constant_decl_prim -> plain_identifier_list TokEq . TokMinus TokInt [ TokSemi ]
constant_decl_prim -> plain_identifier_list TokEq . TokFloat [ TokSemi ]
constant_decl_prim -> plain_identifier_list TokEq . TokMinus TokFloat [ TokSemi ]
constant_decl_prim -> plain_identifier_list TokEq . TokString [ TokSemi ]
## Transitions:
-- On TokString shift to state 331
-- On TokMinus shift to state 332
-- On TokInt shift to state 335
-- On TokFloat shift to state 336
## Reductions:

State 331:
## Known stack suffix:
## plain_identifier_list TokEq TokString
## LR(1) items:
constant_decl_prim -> plain_identifier_list TokEq TokString . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_decl_prim -> plain_identifier_list TokEq TokString

State 332:
## Known stack suffix:
## plain_identifier_list TokEq TokMinus
## LR(1) items:
constant_decl_prim -> plain_identifier_list TokEq TokMinus . TokInt [ TokSemi ]
constant_decl_prim -> plain_identifier_list TokEq TokMinus . TokFloat [ TokSemi ]
## Transitions:
-- On TokInt shift to state 333
-- On TokFloat shift to state 334
## Reductions:

State 333:
## Known stack suffix:
## plain_identifier_list TokEq TokMinus TokInt
## LR(1) items:
constant_decl_prim -> plain_identifier_list TokEq TokMinus TokInt . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_decl_prim -> plain_identifier_list TokEq TokMinus TokInt

State 334:
## Known stack suffix:
## plain_identifier_list TokEq TokMinus TokFloat
## LR(1) items:
constant_decl_prim -> plain_identifier_list TokEq TokMinus TokFloat . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_decl_prim -> plain_identifier_list TokEq TokMinus TokFloat

State 335:
## Known stack suffix:
## plain_identifier_list TokEq TokInt
## LR(1) items:
constant_decl_prim -> plain_identifier_list TokEq TokInt . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_decl_prim -> plain_identifier_list TokEq TokInt

State 336:
## Known stack suffix:
## plain_identifier_list TokEq TokFloat
## LR(1) items:
constant_decl_prim -> plain_identifier_list TokEq TokFloat . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_decl_prim -> plain_identifier_list TokEq TokFloat

State 337:
## Known stack suffix:
## TokConst constant_declaration_list
## LR(1) items:
constant_declaration -> TokConst constant_declaration_list . TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
constant_declaration_list -> constant_declaration_list . TokSemi constant_decl_prim [ TokSemi ]
## Transitions:
-- On TokSemi shift to state 338
## Reductions:

State 338:
## Known stack suffix:
## TokConst constant_declaration_list TokSemi
## LR(1) items:
constant_declaration -> TokConst constant_declaration_list TokSemi . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
constant_declaration_list -> constant_declaration_list TokSemi . constant_decl_prim [ TokSemi ]
## Transitions:
-- On TokId shift to state 3
-- On plain_identifier_list shift to state 329
-- On identifier shift to state 8
-- On constant_decl_prim shift to state 339
## Reductions:
-- On TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin
--   reduce production constant_declaration -> TokConst constant_declaration_list TokSemi

State 339:
## Known stack suffix:
## constant_declaration_list TokSemi constant_decl_prim
## LR(1) items:
constant_declaration_list -> constant_declaration_list TokSemi constant_decl_prim . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_declaration_list -> constant_declaration_list TokSemi constant_decl_prim

State 340:
## Known stack suffix:
## constant_decl_prim
## LR(1) items:
constant_declaration_list -> constant_decl_prim . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_declaration_list -> constant_decl_prim

State 341:
## Known stack suffix:
## TokBegin
## LR(1) items:
statements -> TokBegin . statement_list TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse TokDot TokAnd # ]
statements -> TokBegin . statement_list TokSemi TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse TokDot TokAnd # ]
statements -> TokBegin . TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse TokDot TokAnd # ]
## Transitions:
-- On TokWith shift to state 342
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokSemi shift to state 350
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokEnd shift to state 501
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokAt shift to state 73
-- On with_statement shift to state 415
-- On while_statement shift to state 416
-- On unsigned_constant shift to state 417
-- On type_identifier shift to state 78
-- On try_statement shift to state 418
-- On statement_list shift to state 502
-- On statement shift to state 478
-- On return_statement shift to state 423
-- On repeat_statement shift to state 424
-- On raise_statement shift to state 425
-- On primary shift to state 426
-- On lvalue shift to state 87
-- On label_statement shift to state 429
-- On indexed_variable shift to state 104
-- On if_statement shift to state 430
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 450
-- On function_call shift to state 107
-- On for_statement shift to state 451
-- On field_designator shift to state 108
-- On continue_statement shift to state 452
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 453
-- On break_statement shift to state 454
-- On boolean_value shift to state 115
-- On assignment_statement shift to state 455
## Reductions:

State 342:
## Known stack suffix:
## TokWith
## LR(1) items:
with_statement -> TokWith . expression TokDo statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 343
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 343:
## Known stack suffix:
## TokWith expression
## LR(1) items:
with_statement -> TokWith expression . TokDo statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokDo shift to state 344
## Reductions:

State 344:
## Known stack suffix:
## TokWith expression TokDo
## LR(1) items:
with_statement -> TokWith expression TokDo . statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokWith shift to state 342
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokSemi shift to state 350
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokBegin shift to state 341
-- On TokAt shift to state 73
-- On with_statement shift to state 415
-- On while_statement shift to state 416
-- On unsigned_constant shift to state 417
-- On type_identifier shift to state 78
-- On try_statement shift to state 418
-- On statements shift to state 419
-- On statement_body shift to state 500
-- On statement shift to state 422
-- On return_statement shift to state 423
-- On repeat_statement shift to state 424
-- On raise_statement shift to state 425
-- On primary shift to state 426
-- On lvalue shift to state 87
-- On label_statement shift to state 429
-- On indexed_variable shift to state 104
-- On if_statement shift to state 430
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 450
-- On function_call shift to state 107
-- On for_statement shift to state 451
-- On field_designator shift to state 108
-- On continue_statement shift to state 452
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 453
-- On break_statement shift to state 454
-- On boolean_value shift to state 115
-- On assignment_statement shift to state 455
## Reductions:

State 345:
## Known stack suffix:
## TokWhile
## LR(1) items:
while_statement -> TokWhile . boolean_expression TokDo statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 346
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On boolean_expression shift to state 347
-- On add_term shift to state 121
## Reductions:

State 346:
## Known stack suffix:
## expression
## LR(1) items:
boolean_expression -> expression . [ TokUntil TokThen TokSemi TokExcept TokEnd TokElse TokDo # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production boolean_expression -> expression

State 347:
## Known stack suffix:
## TokWhile boolean_expression
## LR(1) items:
while_statement -> TokWhile boolean_expression . TokDo statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokDo shift to state 348
## Reductions:

State 348:
## Known stack suffix:
## TokWhile boolean_expression TokDo
## LR(1) items:
while_statement -> TokWhile boolean_expression TokDo . statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokWith shift to state 342
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokSemi shift to state 350
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokBegin shift to state 341
-- On TokAt shift to state 73
-- On with_statement shift to state 415
-- On while_statement shift to state 416
-- On unsigned_constant shift to state 417
-- On type_identifier shift to state 78
-- On try_statement shift to state 418
-- On statements shift to state 419
-- On statement_body shift to state 499
-- On statement shift to state 422
-- On return_statement shift to state 423
-- On repeat_statement shift to state 424
-- On raise_statement shift to state 425
-- On primary shift to state 426
-- On lvalue shift to state 87
-- On label_statement shift to state 429
-- On indexed_variable shift to state 104
-- On if_statement shift to state 430
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 450
-- On function_call shift to state 107
-- On for_statement shift to state 451
-- On field_designator shift to state 108
-- On continue_statement shift to state 452
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 453
-- On break_statement shift to state 454
-- On boolean_value shift to state 115
-- On assignment_statement shift to state 455
## Reductions:

State 349:
## Known stack suffix:
## TokTry
## LR(1) items:
try_statement -> TokTry . statement_body TokExcept pattern_element_list TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
try_statement -> TokTry . statement_body TokExcept pattern_element_list TokFinally statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokWith shift to state 342
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokSemi shift to state 350
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokBegin shift to state 341
-- On TokAt shift to state 73
-- On with_statement shift to state 415
-- On while_statement shift to state 416
-- On unsigned_constant shift to state 417
-- On type_identifier shift to state 78
-- On try_statement shift to state 418
-- On statements shift to state 419
-- On statement_body shift to state 479
-- On statement shift to state 422
-- On return_statement shift to state 423
-- On repeat_statement shift to state 424
-- On raise_statement shift to state 425
-- On primary shift to state 426
-- On lvalue shift to state 87
-- On label_statement shift to state 429
-- On indexed_variable shift to state 104
-- On if_statement shift to state 430
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 450
-- On function_call shift to state 107
-- On for_statement shift to state 451
-- On field_designator shift to state 108
-- On continue_statement shift to state 452
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 453
-- On break_statement shift to state 454
-- On boolean_value shift to state 115
-- On assignment_statement shift to state 455
## Reductions:

State 350:
## Known stack suffix:
## TokSemi
## LR(1) items:
statement -> TokSemi . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TokSemi

State 351:
## Known stack suffix:
## TokReturn
## LR(1) items:
return_statement -> TokReturn . expression [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
return_statement -> TokReturn . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 352
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:
-- On TokUntil TokSemi TokExcept TokEnd TokElse
--   reduce production return_statement -> TokReturn

State 352:
## Known stack suffix:
## TokReturn expression
## LR(1) items:
return_statement -> TokReturn expression . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production return_statement -> TokReturn expression

State 353:
## Known stack suffix:
## TokRepeat
## LR(1) items:
repeat_statement -> TokRepeat . statement_list TokUntil boolean_expression [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokWith shift to state 342
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokSemi shift to state 350
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokAt shift to state 73
-- On with_statement shift to state 415
-- On while_statement shift to state 416
-- On unsigned_constant shift to state 417
-- On type_identifier shift to state 78
-- On try_statement shift to state 418
-- On statement_list shift to state 473
-- On statement shift to state 478
-- On return_statement shift to state 423
-- On repeat_statement shift to state 424
-- On raise_statement shift to state 425
-- On primary shift to state 426
-- On lvalue shift to state 87
-- On label_statement shift to state 429
-- On indexed_variable shift to state 104
-- On if_statement shift to state 430
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 450
-- On function_call shift to state 107
-- On for_statement shift to state 451
-- On field_designator shift to state 108
-- On continue_statement shift to state 452
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 453
-- On break_statement shift to state 454
-- On boolean_value shift to state 115
-- On assignment_statement shift to state 455
## Reductions:

State 354:
## Known stack suffix:
## TokRaise
## LR(1) items:
raise_statement -> TokRaise . expression [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 355
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 355:
## Known stack suffix:
## TokRaise expression
## LR(1) items:
raise_statement -> TokRaise expression . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raise_statement -> TokRaise expression

State 356:
## Known stack suffix:
## TokInt
## LR(1) items:
label_statement -> TokInt . TokColon [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
label_statement -> TokInt . TokColon nonempty_statement [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
unsigned_constant -> TokInt . [ TokUntil TokSemi TokLeftParen TokExcept TokEnd TokElse TokAssignEq # ]
## Transitions:
-- On TokColon shift to state 357
## Reductions:
-- On TokUntil TokSemi TokLeftParen TokExcept TokEnd TokElse TokAssignEq
--   reduce production unsigned_constant -> TokInt

State 357:
## Known stack suffix:
## TokInt TokColon
## LR(1) items:
label_statement -> TokInt TokColon . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
label_statement -> TokInt TokColon . nonempty_statement [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokAt shift to state 73
-- On while_statement shift to state 433
-- On unsigned_constant shift to state 434
-- On type_identifier shift to state 78
-- On try_statement shift to state 435
-- On return_statement shift to state 436
-- On repeat_statement shift to state 437
-- On raise_statement shift to state 438
-- On primary shift to state 439
-- On nonempty_statement shift to state 472
-- On lvalue shift to state 87
-- On label_statement shift to state 443
-- On indexed_variable shift to state 104
-- On if_statement shift to state 444
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 445
-- On function_call shift to state 107
-- On for_statement shift to state 446
-- On field_designator shift to state 108
-- On continue_statement shift to state 447
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 448
-- On break_statement shift to state 449
-- On boolean_value shift to state 115
## Reductions:
-- On TokUntil TokSemi TokExcept TokEnd TokElse
--   reduce production label_statement -> TokInt TokColon

State 358:
## Known stack suffix:
## TokIf
## LR(1) items:
if_statement -> TokIf . boolean_expression TokThen statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
if_statement -> TokIf . boolean_expression TokThen statement_body TokElse statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 346
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On boolean_expression shift to state 359
-- On add_term shift to state 121
## Reductions:

State 359:
## Known stack suffix:
## TokIf boolean_expression
## LR(1) items:
if_statement -> TokIf boolean_expression . TokThen statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
if_statement -> TokIf boolean_expression . TokThen statement_body TokElse statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokThen shift to state 360
## Reductions:

State 360:
## Known stack suffix:
## TokIf boolean_expression TokThen
## LR(1) items:
if_statement -> TokIf boolean_expression TokThen . statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
if_statement -> TokIf boolean_expression TokThen . statement_body TokElse statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokWith shift to state 342
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokSemi shift to state 350
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokBegin shift to state 341
-- On TokAt shift to state 73
-- On with_statement shift to state 415
-- On while_statement shift to state 416
-- On unsigned_constant shift to state 417
-- On type_identifier shift to state 78
-- On try_statement shift to state 418
-- On statements shift to state 419
-- On statement_body shift to state 469
-- On statement shift to state 422
-- On return_statement shift to state 423
-- On repeat_statement shift to state 424
-- On raise_statement shift to state 425
-- On primary shift to state 426
-- On lvalue shift to state 87
-- On label_statement shift to state 429
-- On indexed_variable shift to state 104
-- On if_statement shift to state 430
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 450
-- On function_call shift to state 107
-- On for_statement shift to state 451
-- On field_designator shift to state 108
-- On continue_statement shift to state 452
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 453
-- On break_statement shift to state 454
-- On boolean_value shift to state 115
-- On assignment_statement shift to state 455
## Reductions:

State 361:
## Known stack suffix:
## TokGoto
## LR(1) items:
goto_statement -> TokGoto . identifier [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
goto_statement -> TokGoto . TokInt [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokInt shift to state 362
-- On TokId shift to state 3
-- On identifier shift to state 363
## Reductions:

State 362:
## Known stack suffix:
## TokGoto TokInt
## LR(1) items:
goto_statement -> TokGoto TokInt . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production goto_statement -> TokGoto TokInt

State 363:
## Known stack suffix:
## TokGoto identifier
## LR(1) items:
goto_statement -> TokGoto identifier . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production goto_statement -> TokGoto identifier

State 364:
## Known stack suffix:
## TokFor
## LR(1) items:
for_statement -> TokFor . identifier TokAssignEq expression TokTo expression TokDo statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
for_statement -> TokFor . identifier TokAssignEq expression TokDownTo expression TokDo statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokId shift to state 3
-- On identifier shift to state 365
## Reductions:

State 365:
## Known stack suffix:
## TokFor identifier
## LR(1) items:
for_statement -> TokFor identifier . TokAssignEq expression TokTo expression TokDo statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
for_statement -> TokFor identifier . TokAssignEq expression TokDownTo expression TokDo statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokAssignEq shift to state 366
## Reductions:

State 366:
## Known stack suffix:
## TokFor identifier TokAssignEq
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq . expression TokTo expression TokDo statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
for_statement -> TokFor identifier TokAssignEq . expression TokDownTo expression TokDo statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 367
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 367:
## Known stack suffix:
## TokFor identifier TokAssignEq expression
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression . TokTo expression TokDo statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
for_statement -> TokFor identifier TokAssignEq expression . TokDownTo expression TokDo statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokTo shift to state 368
-- On TokDownTo shift to state 465
## Reductions:

State 368:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo . expression TokDo statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 369
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 369:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo expression
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo expression . TokDo statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokDo shift to state 370
## Reductions:

State 370:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo expression TokDo
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo . statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokWith shift to state 342
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokSemi shift to state 350
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokBegin shift to state 341
-- On TokAt shift to state 73
-- On with_statement shift to state 415
-- On while_statement shift to state 416
-- On unsigned_constant shift to state 417
-- On type_identifier shift to state 78
-- On try_statement shift to state 418
-- On statements shift to state 419
-- On statement_body shift to state 464
-- On statement shift to state 422
-- On return_statement shift to state 423
-- On repeat_statement shift to state 424
-- On raise_statement shift to state 425
-- On primary shift to state 426
-- On lvalue shift to state 87
-- On label_statement shift to state 429
-- On indexed_variable shift to state 104
-- On if_statement shift to state 430
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 450
-- On function_call shift to state 107
-- On for_statement shift to state 451
-- On field_designator shift to state 108
-- On continue_statement shift to state 452
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 453
-- On break_statement shift to state 454
-- On boolean_value shift to state 115
-- On assignment_statement shift to state 455
## Reductions:

State 371:
## Known stack suffix:
## TokContinue
## LR(1) items:
continue_statement -> TokContinue . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production continue_statement -> TokContinue

State 372:
## Known stack suffix:
## TokCase
## LR(1) items:
case_statement -> TokCase . expression TokOf case_element_list TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
case_statement -> TokCase . expression TokOf case_element_list TokElse statement_body TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 373
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 373:
## Known stack suffix:
## TokCase expression
## LR(1) items:
case_statement -> TokCase expression . TokOf case_element_list TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
case_statement -> TokCase expression . TokOf case_element_list TokElse statement_body TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokOf shift to state 374
## Reductions:

State 374:
## Known stack suffix:
## TokCase expression TokOf
## LR(1) items:
case_statement -> TokCase expression TokOf . case_element_list TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
case_statement -> TokCase expression TokOf . case_element_list TokElse statement_body TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokTrue shift to state 60
-- On TokString shift to state 375
-- On TokNot shift to state 376
-- On TokNil shift to state 377
-- On TokMinus shift to state 379
-- On TokLeftTuple shift to state 389
-- On TokLeftParen shift to state 378
-- On TokInt shift to state 380
-- On TokFloat shift to state 381
-- On TokFalse shift to state 70
-- On TokChar shift to state 382
-- On constant_unsigned_constant shift to state 383
-- On constant_term shift to state 390
-- On constant_simple_expression shift to state 393
-- On constant_relop_expression shift to state 408
-- On constant_primary shift to state 384
-- On constant_factor shift to state 397
-- On constant_expression shift to state 412
-- On constant_exponentiation shift to state 386
-- On constant_add_term shift to state 401
-- On character_string_rev shift to state 112
-- On character_string shift to state 387
-- On case_element_list_rev shift to state 456
-- On case_element_list shift to state 458
-- On case_element shift to state 463
-- On boolean_value shift to state 388
## Reductions:

State 375:
## Known stack suffix:
## TokString
## LR(1) items:
constant_unsigned_constant -> TokString . [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_unsigned_constant -> TokString

State 376:
## Known stack suffix:
## TokNot
## LR(1) items:
constant_primary -> TokNot . constant_primary [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
-- On TokTrue shift to state 60
-- On TokString shift to state 375
-- On TokNot shift to state 376
-- On TokNil shift to state 377
-- On TokLeftParen shift to state 378
-- On TokInt shift to state 380
-- On TokFloat shift to state 381
-- On TokFalse shift to state 70
-- On TokChar shift to state 382
-- On constant_unsigned_constant shift to state 383
-- On constant_primary shift to state 411
-- On character_string_rev shift to state 112
-- On character_string shift to state 387
-- On boolean_value shift to state 388
## Reductions:

State 377:
## Known stack suffix:
## TokNil
## LR(1) items:
constant_unsigned_constant -> TokNil . [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_unsigned_constant -> TokNil

State 378:
## Known stack suffix:
## TokLeftParen
## LR(1) items:
constant_primary -> TokLeftParen . constant_expression TokRightParen [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
-- On TokTrue shift to state 60
-- On TokString shift to state 375
-- On TokNot shift to state 376
-- On TokNil shift to state 377
-- On TokMinus shift to state 379
-- On TokLeftTuple shift to state 389
-- On TokLeftParen shift to state 378
-- On TokInt shift to state 380
-- On TokFloat shift to state 381
-- On TokFalse shift to state 70
-- On TokChar shift to state 382
-- On constant_unsigned_constant shift to state 383
-- On constant_term shift to state 390
-- On constant_simple_expression shift to state 393
-- On constant_relop_expression shift to state 408
-- On constant_primary shift to state 384
-- On constant_factor shift to state 397
-- On constant_expression shift to state 409
-- On constant_exponentiation shift to state 386
-- On constant_add_term shift to state 401
-- On character_string_rev shift to state 112
-- On character_string shift to state 387
-- On boolean_value shift to state 388
## Reductions:

State 379:
## Known stack suffix:
## TokMinus
## LR(1) items:
constant_factor -> TokMinus . constant_factor [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
-- On TokTrue shift to state 60
-- On TokString shift to state 375
-- On TokNot shift to state 376
-- On TokNil shift to state 377
-- On TokMinus shift to state 379
-- On TokLeftParen shift to state 378
-- On TokInt shift to state 380
-- On TokFloat shift to state 381
-- On TokFalse shift to state 70
-- On TokChar shift to state 382
-- On constant_unsigned_constant shift to state 383
-- On constant_primary shift to state 384
-- On constant_factor shift to state 385
-- On constant_exponentiation shift to state 386
-- On character_string_rev shift to state 112
-- On character_string shift to state 387
-- On boolean_value shift to state 388
## Reductions:

State 380:
## Known stack suffix:
## TokInt
## LR(1) items:
constant_unsigned_constant -> TokInt . [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_unsigned_constant -> TokInt

State 381:
## Known stack suffix:
## TokFloat
## LR(1) items:
constant_unsigned_constant -> TokFloat . [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_unsigned_constant -> TokFloat

State 382:
## Known stack suffix:
## TokChar
## LR(1) items:
constant_unsigned_constant -> TokChar . [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_unsigned_constant -> TokChar

State 383:
## Known stack suffix:
## constant_unsigned_constant
## LR(1) items:
constant_primary -> constant_unsigned_constant . [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_primary -> constant_unsigned_constant

State 384:
## Known stack suffix:
## constant_primary
## LR(1) items:
constant_exponentiation -> constant_primary . [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_exponentiation -> constant_primary

State 385:
## Known stack suffix:
## TokMinus constant_factor
## LR(1) items:
constant_factor -> TokMinus constant_factor . [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_factor -> TokMinus constant_factor

State 386:
## Known stack suffix:
## constant_exponentiation
## LR(1) items:
constant_factor -> constant_exponentiation . [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_factor -> constant_exponentiation

State 387:
## Known stack suffix:
## character_string
## LR(1) items:
constant_unsigned_constant -> character_string . [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_unsigned_constant -> character_string

State 388:
## Known stack suffix:
## boolean_value
## LR(1) items:
constant_unsigned_constant -> boolean_value . [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_unsigned_constant -> boolean_value

State 389:
## Known stack suffix:
## TokLeftTuple
## LR(1) items:
constant_expression -> TokLeftTuple . constant_relop_expression_list TokRightTuple [ TokRightParen TokColon ]
## Transitions:
-- On TokTrue shift to state 60
-- On TokString shift to state 375
-- On TokNot shift to state 376
-- On TokNil shift to state 377
-- On TokMinus shift to state 379
-- On TokLeftParen shift to state 378
-- On TokInt shift to state 380
-- On TokFloat shift to state 381
-- On TokFalse shift to state 70
-- On TokChar shift to state 382
-- On constant_unsigned_constant shift to state 383
-- On constant_term shift to state 390
-- On constant_simple_expression shift to state 393
-- On constant_relop_expression_list shift to state 402
-- On constant_relop_expression shift to state 404
-- On constant_primary shift to state 384
-- On constant_factor shift to state 397
-- On constant_exponentiation shift to state 386
-- On constant_add_term shift to state 401
-- On character_string_rev shift to state 112
-- On character_string shift to state 387
-- On boolean_value shift to state 388
## Reductions:

State 390:
## Known stack suffix:
## constant_term
## LR(1) items:
constant_add_term -> constant_term . [ TokXor TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokComma TokColon TokAnd ]
constant_term -> constant_term . mulop constant_factor [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
-- On TokStar shift to state 81
-- On TokSlash shift to state 82
-- On TokMod shift to state 83
-- On TokDiv shift to state 84
-- On mulop shift to state 391
## Reductions:
-- On TokXor TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokComma TokColon TokAnd
--   reduce production constant_add_term -> constant_term

State 391:
## Known stack suffix:
## constant_term mulop
## LR(1) items:
constant_term -> constant_term mulop . constant_factor [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
-- On TokTrue shift to state 60
-- On TokString shift to state 375
-- On TokNot shift to state 376
-- On TokNil shift to state 377
-- On TokMinus shift to state 379
-- On TokLeftParen shift to state 378
-- On TokInt shift to state 380
-- On TokFloat shift to state 381
-- On TokFalse shift to state 70
-- On TokChar shift to state 382
-- On constant_unsigned_constant shift to state 383
-- On constant_primary shift to state 384
-- On constant_factor shift to state 392
-- On constant_exponentiation shift to state 386
-- On character_string_rev shift to state 112
-- On character_string shift to state 387
-- On boolean_value shift to state 388
## Reductions:

State 392:
## Known stack suffix:
## constant_term mulop constant_factor
## LR(1) items:
constant_term -> constant_term mulop constant_factor . [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_term -> constant_term mulop constant_factor

State 393:
## Known stack suffix:
## constant_simple_expression
## LR(1) items:
constant_relop_expression -> constant_simple_expression . relop constant_simple_expression [ TokRightTuple TokRightParen TokComma TokColon ]
constant_relop_expression -> constant_simple_expression . [ TokRightTuple TokRightParen TokComma TokColon ]
constant_simple_expression -> constant_simple_expression . logop constant_add_term [ TokXor TokShr TokShl TokRightTuple TokRightParen TokOr TokNotEq TokLt TokLe TokGt TokGe TokEq TokComma TokColon TokAnd ]
## Transitions:
-- On TokXor shift to state 90
-- On TokShr shift to state 91
-- On TokShl shift to state 92
-- On TokOr shift to state 93
-- On TokNotEq shift to state 94
-- On TokLt shift to state 95
-- On TokLe shift to state 96
-- On TokGt shift to state 97
-- On TokGe shift to state 98
-- On TokEq shift to state 99
-- On TokAnd shift to state 100
-- On relop shift to state 394
-- On logop shift to state 396
## Reductions:
-- On TokRightTuple TokRightParen TokComma TokColon
--   reduce production constant_relop_expression -> constant_simple_expression

State 394:
## Known stack suffix:
## constant_simple_expression relop
## LR(1) items:
constant_relop_expression -> constant_simple_expression relop . constant_simple_expression [ TokRightTuple TokRightParen TokComma TokColon ]
## Transitions:
-- On TokTrue shift to state 60
-- On TokString shift to state 375
-- On TokNot shift to state 376
-- On TokNil shift to state 377
-- On TokMinus shift to state 379
-- On TokLeftParen shift to state 378
-- On TokInt shift to state 380
-- On TokFloat shift to state 381
-- On TokFalse shift to state 70
-- On TokChar shift to state 382
-- On constant_unsigned_constant shift to state 383
-- On constant_term shift to state 390
-- On constant_simple_expression shift to state 395
-- On constant_primary shift to state 384
-- On constant_factor shift to state 397
-- On constant_exponentiation shift to state 386
-- On constant_add_term shift to state 401
-- On character_string_rev shift to state 112
-- On character_string shift to state 387
-- On boolean_value shift to state 388
## Reductions:

State 395:
## Known stack suffix:
## constant_simple_expression relop constant_simple_expression
## LR(1) items:
constant_relop_expression -> constant_simple_expression relop constant_simple_expression . [ TokRightTuple TokRightParen TokComma TokColon ]
constant_simple_expression -> constant_simple_expression . logop constant_add_term [ TokXor TokShr TokShl TokRightTuple TokRightParen TokOr TokComma TokColon TokAnd ]
## Transitions:
-- On TokXor shift to state 90
-- On TokShr shift to state 91
-- On TokShl shift to state 92
-- On TokOr shift to state 93
-- On TokAnd shift to state 100
-- On logop shift to state 396
## Reductions:
-- On TokRightTuple TokRightParen TokComma TokColon
--   reduce production constant_relop_expression -> constant_simple_expression relop constant_simple_expression

State 396:
## Known stack suffix:
## constant_simple_expression logop
## LR(1) items:
constant_simple_expression -> constant_simple_expression logop . constant_add_term [ TokXor TokShr TokShl TokRightTuple TokRightParen TokOr TokNotEq TokLt TokLe TokGt TokGe TokEq TokComma TokColon TokAnd ]
## Transitions:
-- On TokTrue shift to state 60
-- On TokString shift to state 375
-- On TokNot shift to state 376
-- On TokNil shift to state 377
-- On TokMinus shift to state 379
-- On TokLeftParen shift to state 378
-- On TokInt shift to state 380
-- On TokFloat shift to state 381
-- On TokFalse shift to state 70
-- On TokChar shift to state 382
-- On constant_unsigned_constant shift to state 383
-- On constant_term shift to state 390
-- On constant_primary shift to state 384
-- On constant_factor shift to state 397
-- On constant_exponentiation shift to state 386
-- On constant_add_term shift to state 398
-- On character_string_rev shift to state 112
-- On character_string shift to state 387
-- On boolean_value shift to state 388
## Reductions:

State 397:
## Known stack suffix:
## constant_factor
## LR(1) items:
constant_term -> constant_factor . [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_term -> constant_factor

State 398:
## Known stack suffix:
## constant_simple_expression logop constant_add_term
## LR(1) items:
constant_add_term -> constant_add_term . addop constant_term [ TokXor TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokComma TokColon TokAnd ]
constant_simple_expression -> constant_simple_expression logop constant_add_term . [ TokXor TokShr TokShl TokRightTuple TokRightParen TokOr TokNotEq TokLt TokLe TokGt TokGe TokEq TokComma TokColon TokAnd ]
## Transitions:
-- On TokPlus shift to state 117
-- On TokMinus shift to state 118
-- On addop shift to state 399
## Reductions:
-- On TokXor TokShr TokShl TokRightTuple TokRightParen TokOr TokNotEq TokLt TokLe TokGt TokGe TokEq TokComma TokColon TokAnd
--   reduce production constant_simple_expression -> constant_simple_expression logop constant_add_term

State 399:
## Known stack suffix:
## constant_add_term addop
## LR(1) items:
constant_add_term -> constant_add_term addop . constant_term [ TokXor TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokComma TokColon TokAnd ]
## Transitions:
-- On TokTrue shift to state 60
-- On TokString shift to state 375
-- On TokNot shift to state 376
-- On TokNil shift to state 377
-- On TokMinus shift to state 379
-- On TokLeftParen shift to state 378
-- On TokInt shift to state 380
-- On TokFloat shift to state 381
-- On TokFalse shift to state 70
-- On TokChar shift to state 382
-- On constant_unsigned_constant shift to state 383
-- On constant_term shift to state 400
-- On constant_primary shift to state 384
-- On constant_factor shift to state 397
-- On constant_exponentiation shift to state 386
-- On character_string_rev shift to state 112
-- On character_string shift to state 387
-- On boolean_value shift to state 388
## Reductions:

State 400:
## Known stack suffix:
## constant_add_term addop constant_term
## LR(1) items:
constant_add_term -> constant_add_term addop constant_term . [ TokXor TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokComma TokColon TokAnd ]
constant_term -> constant_term . mulop constant_factor [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
-- On TokStar shift to state 81
-- On TokSlash shift to state 82
-- On TokMod shift to state 83
-- On TokDiv shift to state 84
-- On mulop shift to state 391
## Reductions:
-- On TokXor TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokComma TokColon TokAnd
--   reduce production constant_add_term -> constant_add_term addop constant_term

State 401:
## Known stack suffix:
## constant_add_term
## LR(1) items:
constant_add_term -> constant_add_term . addop constant_term [ TokXor TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMinus TokLt TokLe TokGt TokGe TokEq TokComma TokColon TokAnd ]
constant_simple_expression -> constant_add_term . [ TokXor TokShr TokShl TokRightTuple TokRightParen TokOr TokNotEq TokLt TokLe TokGt TokGe TokEq TokComma TokColon TokAnd ]
## Transitions:
-- On TokPlus shift to state 117
-- On TokMinus shift to state 118
-- On addop shift to state 399
## Reductions:
-- On TokXor TokShr TokShl TokRightTuple TokRightParen TokOr TokNotEq TokLt TokLe TokGt TokGe TokEq TokComma TokColon TokAnd
--   reduce production constant_simple_expression -> constant_add_term

State 402:
## Known stack suffix:
## TokLeftTuple constant_relop_expression_list
## LR(1) items:
constant_expression -> TokLeftTuple constant_relop_expression_list . TokRightTuple [ TokRightParen TokColon ]
## Transitions:
-- On TokRightTuple shift to state 403
## Reductions:

State 403:
## Known stack suffix:
## TokLeftTuple constant_relop_expression_list TokRightTuple
## LR(1) items:
constant_expression -> TokLeftTuple constant_relop_expression_list TokRightTuple . [ TokRightParen TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_expression -> TokLeftTuple constant_relop_expression_list TokRightTuple

State 404:
## Known stack suffix:
## constant_relop_expression
## LR(1) items:
constant_relop_expression_list -> constant_relop_expression . TokComma constant_relop_expression_list [ TokRightTuple ]
constant_relop_expression_list -> constant_relop_expression . TokComma constant_relop_expression [ TokRightTuple ]
## Transitions:
-- On TokComma shift to state 405
## Reductions:

State 405:
## Known stack suffix:
## constant_relop_expression TokComma
## LR(1) items:
constant_relop_expression_list -> constant_relop_expression TokComma . constant_relop_expression_list [ TokRightTuple ]
constant_relop_expression_list -> constant_relop_expression TokComma . constant_relop_expression [ TokRightTuple ]
## Transitions:
-- On TokTrue shift to state 60
-- On TokString shift to state 375
-- On TokNot shift to state 376
-- On TokNil shift to state 377
-- On TokMinus shift to state 379
-- On TokLeftParen shift to state 378
-- On TokInt shift to state 380
-- On TokFloat shift to state 381
-- On TokFalse shift to state 70
-- On TokChar shift to state 382
-- On constant_unsigned_constant shift to state 383
-- On constant_term shift to state 390
-- On constant_simple_expression shift to state 393
-- On constant_relop_expression_list shift to state 406
-- On constant_relop_expression shift to state 407
-- On constant_primary shift to state 384
-- On constant_factor shift to state 397
-- On constant_exponentiation shift to state 386
-- On constant_add_term shift to state 401
-- On character_string_rev shift to state 112
-- On character_string shift to state 387
-- On boolean_value shift to state 388
## Reductions:

State 406:
## Known stack suffix:
## constant_relop_expression TokComma constant_relop_expression_list
## LR(1) items:
constant_relop_expression_list -> constant_relop_expression TokComma constant_relop_expression_list . [ TokRightTuple ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_relop_expression_list -> constant_relop_expression TokComma constant_relop_expression_list

State 407:
## Known stack suffix:
## constant_relop_expression TokComma constant_relop_expression
## LR(1) items:
constant_relop_expression_list -> constant_relop_expression . TokComma constant_relop_expression_list [ TokRightTuple ]
constant_relop_expression_list -> constant_relop_expression . TokComma constant_relop_expression [ TokRightTuple ]
constant_relop_expression_list -> constant_relop_expression TokComma constant_relop_expression . [ TokRightTuple ]
## Transitions:
-- On TokComma shift to state 405
## Reductions:
-- On TokRightTuple
--   reduce production constant_relop_expression_list -> constant_relop_expression TokComma constant_relop_expression

State 408:
## Known stack suffix:
## constant_relop_expression
## LR(1) items:
constant_expression -> constant_relop_expression . [ TokRightParen TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_expression -> constant_relop_expression

State 409:
## Known stack suffix:
## TokLeftParen constant_expression
## LR(1) items:
constant_primary -> TokLeftParen constant_expression . TokRightParen [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
-- On TokRightParen shift to state 410
## Reductions:

State 410:
## Known stack suffix:
## TokLeftParen constant_expression TokRightParen
## LR(1) items:
constant_primary -> TokLeftParen constant_expression TokRightParen . [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_primary -> TokLeftParen constant_expression TokRightParen

State 411:
## Known stack suffix:
## TokNot constant_primary
## LR(1) items:
constant_primary -> TokNot constant_primary . [ TokXor TokStar TokSlash TokShr TokShl TokRightTuple TokRightParen TokPlus TokOr TokNotEq TokMod TokMinus TokLt TokLe TokGt TokGe TokEq TokDiv TokComma TokColon TokAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_primary -> TokNot constant_primary

State 412:
## Known stack suffix:
## constant_expression
## LR(1) items:
case_element -> constant_expression . TokColon statement_body TokSemi [ TokTrue TokString TokNot TokNil TokMinus TokLeftTuple TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar ]
## Transitions:
-- On TokColon shift to state 413
## Reductions:

State 413:
## Known stack suffix:
## constant_expression TokColon
## LR(1) items:
case_element -> constant_expression TokColon . statement_body TokSemi [ TokTrue TokString TokNot TokNil TokMinus TokLeftTuple TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar ]
## Transitions:
-- On TokWith shift to state 342
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokSemi shift to state 350
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokBegin shift to state 341
-- On TokAt shift to state 73
-- On with_statement shift to state 415
-- On while_statement shift to state 416
-- On unsigned_constant shift to state 417
-- On type_identifier shift to state 78
-- On try_statement shift to state 418
-- On statements shift to state 419
-- On statement_body shift to state 420
-- On statement shift to state 422
-- On return_statement shift to state 423
-- On repeat_statement shift to state 424
-- On raise_statement shift to state 425
-- On primary shift to state 426
-- On lvalue shift to state 87
-- On label_statement shift to state 429
-- On indexed_variable shift to state 104
-- On if_statement shift to state 430
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 450
-- On function_call shift to state 107
-- On for_statement shift to state 451
-- On field_designator shift to state 108
-- On continue_statement shift to state 452
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 453
-- On break_statement shift to state 454
-- On boolean_value shift to state 115
-- On assignment_statement shift to state 455
## Reductions:

State 414:
## Known stack suffix:
## TokBreak
## LR(1) items:
break_statement -> TokBreak . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production break_statement -> TokBreak

State 415:
## Known stack suffix:
## with_statement
## LR(1) items:
statement -> with_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> with_statement

State 416:
## Known stack suffix:
## while_statement
## LR(1) items:
statement -> while_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> while_statement

State 417:
## Known stack suffix:
## unsigned_constant
## LR(1) items:
function_call -> unsigned_constant . TokLeftParen expression_list TokRightParen [ TokUntil TokSemi TokLeftParen TokExcept TokEnd TokElse TokAssignEq # ]
function_call -> unsigned_constant . TokLeftParen TokRightParen [ TokUntil TokSemi TokLeftParen TokExcept TokEnd TokElse TokAssignEq # ]
primary -> unsigned_constant . [ TokAssignEq ]
statement -> unsigned_constant . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokLeftParen shift to state 75
## Reductions:
-- On TokAssignEq
--   reduce production primary -> unsigned_constant
-- On TokUntil TokSemi TokExcept TokEnd TokElse
--   reduce production statement -> unsigned_constant

State 418:
## Known stack suffix:
## try_statement
## LR(1) items:
statement -> try_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> try_statement

State 419:
## Known stack suffix:
## statements
## LR(1) items:
statement_body -> statements . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement_body -> statements

State 420:
## Known stack suffix:
## constant_expression TokColon statement_body
## LR(1) items:
case_element -> constant_expression TokColon statement_body . TokSemi [ TokTrue TokString TokNot TokNil TokMinus TokLeftTuple TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar ]
## Transitions:
-- On TokSemi shift to state 421
## Reductions:

State 421:
## Known stack suffix:
## constant_expression TokColon statement_body TokSemi
## LR(1) items:
case_element -> constant_expression TokColon statement_body TokSemi . [ TokTrue TokString TokNot TokNil TokMinus TokLeftTuple TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production case_element -> constant_expression TokColon statement_body TokSemi

State 422:
## Known stack suffix:
## statement
## LR(1) items:
statement_body -> statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement_body -> statement

State 423:
## Known stack suffix:
## return_statement
## LR(1) items:
statement -> return_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> return_statement

State 424:
## Known stack suffix:
## repeat_statement
## LR(1) items:
statement -> repeat_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> repeat_statement

State 425:
## Known stack suffix:
## raise_statement
## LR(1) items:
statement -> raise_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> raise_statement

State 426:
## Known stack suffix:
## primary
## LR(1) items:
assignment_statement -> primary . TokAssignEq expression [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokAssignEq shift to state 427
## Reductions:

State 427:
## Known stack suffix:
## primary TokAssignEq
## LR(1) items:
assignment_statement -> primary TokAssignEq . expression [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 428
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 428:
## Known stack suffix:
## primary TokAssignEq expression
## LR(1) items:
assignment_statement -> primary TokAssignEq expression . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment_statement -> primary TokAssignEq expression

State 429:
## Known stack suffix:
## label_statement
## LR(1) items:
statement -> label_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> label_statement

State 430:
## Known stack suffix:
## if_statement
## LR(1) items:
statement -> if_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> if_statement

State 431:
## Known stack suffix:
## identifier
## LR(1) items:
label_statement -> identifier . TokColon [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
label_statement -> identifier . TokColon nonempty_statement [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
lvalue -> identifier . [ TokUntil TokSemi TokLeftParen TokLeftBrack TokHat TokExcept TokEnd TokElse TokDot TokAssignEq # ]
## Transitions:
-- On TokColon shift to state 432
## Reductions:
-- On TokUntil TokSemi TokLeftParen TokLeftBrack TokHat TokExcept TokEnd TokElse TokDot TokAssignEq
--   reduce production lvalue -> identifier

State 432:
## Known stack suffix:
## identifier TokColon
## LR(1) items:
label_statement -> identifier TokColon . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
label_statement -> identifier TokColon . nonempty_statement [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokAt shift to state 73
-- On while_statement shift to state 433
-- On unsigned_constant shift to state 434
-- On type_identifier shift to state 78
-- On try_statement shift to state 435
-- On return_statement shift to state 436
-- On repeat_statement shift to state 437
-- On raise_statement shift to state 438
-- On primary shift to state 439
-- On nonempty_statement shift to state 442
-- On lvalue shift to state 87
-- On label_statement shift to state 443
-- On indexed_variable shift to state 104
-- On if_statement shift to state 444
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 445
-- On function_call shift to state 107
-- On for_statement shift to state 446
-- On field_designator shift to state 108
-- On continue_statement shift to state 447
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 448
-- On break_statement shift to state 449
-- On boolean_value shift to state 115
## Reductions:
-- On TokUntil TokSemi TokExcept TokEnd TokElse
--   reduce production label_statement -> identifier TokColon

State 433:
## Known stack suffix:
## while_statement
## LR(1) items:
nonempty_statement -> while_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_statement -> while_statement

State 434:
## Known stack suffix:
## unsigned_constant
## LR(1) items:
function_call -> unsigned_constant . TokLeftParen expression_list TokRightParen [ TokUntil TokSemi TokLeftParen TokExcept TokEnd TokElse TokAssignEq # ]
function_call -> unsigned_constant . TokLeftParen TokRightParen [ TokUntil TokSemi TokLeftParen TokExcept TokEnd TokElse TokAssignEq # ]
nonempty_statement -> unsigned_constant . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
primary -> unsigned_constant . [ TokAssignEq ]
## Transitions:
-- On TokLeftParen shift to state 75
## Reductions:
-- On TokUntil TokSemi TokExcept TokEnd TokElse
--   reduce production nonempty_statement -> unsigned_constant
-- On TokAssignEq
--   reduce production primary -> unsigned_constant

State 435:
## Known stack suffix:
## try_statement
## LR(1) items:
nonempty_statement -> try_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_statement -> try_statement

State 436:
## Known stack suffix:
## return_statement
## LR(1) items:
nonempty_statement -> return_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_statement -> return_statement

State 437:
## Known stack suffix:
## repeat_statement
## LR(1) items:
nonempty_statement -> repeat_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_statement -> repeat_statement

State 438:
## Known stack suffix:
## raise_statement
## LR(1) items:
nonempty_statement -> raise_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_statement -> raise_statement

State 439:
## Known stack suffix:
## primary
## LR(1) items:
nonempty_statement -> primary . TokAssignEq expression [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokAssignEq shift to state 440
## Reductions:

State 440:
## Known stack suffix:
## primary TokAssignEq
## LR(1) items:
nonempty_statement -> primary TokAssignEq . expression [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 441
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 441:
## Known stack suffix:
## primary TokAssignEq expression
## LR(1) items:
nonempty_statement -> primary TokAssignEq expression . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_statement -> primary TokAssignEq expression

State 442:
## Known stack suffix:
## identifier TokColon nonempty_statement
## LR(1) items:
label_statement -> identifier TokColon nonempty_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_statement -> identifier TokColon nonempty_statement

State 443:
## Known stack suffix:
## label_statement
## LR(1) items:
nonempty_statement -> label_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_statement -> label_statement

State 444:
## Known stack suffix:
## if_statement
## LR(1) items:
nonempty_statement -> if_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_statement -> if_statement

State 445:
## Known stack suffix:
## goto_statement
## LR(1) items:
nonempty_statement -> goto_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_statement -> goto_statement

State 446:
## Known stack suffix:
## for_statement
## LR(1) items:
nonempty_statement -> for_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_statement -> for_statement

State 447:
## Known stack suffix:
## continue_statement
## LR(1) items:
nonempty_statement -> continue_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_statement -> continue_statement

State 448:
## Known stack suffix:
## case_statement
## LR(1) items:
nonempty_statement -> case_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_statement -> case_statement

State 449:
## Known stack suffix:
## break_statement
## LR(1) items:
nonempty_statement -> break_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_statement -> break_statement

State 450:
## Known stack suffix:
## goto_statement
## LR(1) items:
statement -> goto_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> goto_statement

State 451:
## Known stack suffix:
## for_statement
## LR(1) items:
statement -> for_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> for_statement

State 452:
## Known stack suffix:
## continue_statement
## LR(1) items:
statement -> continue_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> continue_statement

State 453:
## Known stack suffix:
## case_statement
## LR(1) items:
statement -> case_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> case_statement

State 454:
## Known stack suffix:
## break_statement
## LR(1) items:
statement -> break_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> break_statement

State 455:
## Known stack suffix:
## assignment_statement
## LR(1) items:
statement -> assignment_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> assignment_statement

State 456:
## Known stack suffix:
## case_element_list_rev
## LR(1) items:
case_element_list -> case_element_list_rev . [ TokEnd TokElse ]
case_element_list_rev -> case_element_list_rev . case_element [ TokTrue TokString TokNot TokNil TokMinus TokLeftTuple TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar ]
## Transitions:
-- On TokTrue shift to state 60
-- On TokString shift to state 375
-- On TokNot shift to state 376
-- On TokNil shift to state 377
-- On TokMinus shift to state 379
-- On TokLeftTuple shift to state 389
-- On TokLeftParen shift to state 378
-- On TokInt shift to state 380
-- On TokFloat shift to state 381
-- On TokFalse shift to state 70
-- On TokChar shift to state 382
-- On constant_unsigned_constant shift to state 383
-- On constant_term shift to state 390
-- On constant_simple_expression shift to state 393
-- On constant_relop_expression shift to state 408
-- On constant_primary shift to state 384
-- On constant_factor shift to state 397
-- On constant_expression shift to state 412
-- On constant_exponentiation shift to state 386
-- On constant_add_term shift to state 401
-- On character_string_rev shift to state 112
-- On character_string shift to state 387
-- On case_element shift to state 457
-- On boolean_value shift to state 388
## Reductions:
-- On TokEnd TokElse
--   reduce production case_element_list -> case_element_list_rev

State 457:
## Known stack suffix:
## case_element_list_rev case_element
## LR(1) items:
case_element_list_rev -> case_element_list_rev case_element . [ TokTrue TokString TokNot TokNil TokMinus TokLeftTuple TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production case_element_list_rev -> case_element_list_rev case_element

State 458:
## Known stack suffix:
## TokCase expression TokOf case_element_list
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list . TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
case_statement -> TokCase expression TokOf case_element_list . TokElse statement_body TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokEnd shift to state 459
-- On TokElse shift to state 460
## Reductions:

State 459:
## Known stack suffix:
## TokCase expression TokOf case_element_list TokEnd
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list TokEnd . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production case_statement -> TokCase expression TokOf case_element_list TokEnd

State 460:
## Known stack suffix:
## TokCase expression TokOf case_element_list TokElse
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list TokElse . statement_body TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokWith shift to state 342
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokSemi shift to state 350
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokBegin shift to state 341
-- On TokAt shift to state 73
-- On with_statement shift to state 415
-- On while_statement shift to state 416
-- On unsigned_constant shift to state 417
-- On type_identifier shift to state 78
-- On try_statement shift to state 418
-- On statements shift to state 419
-- On statement_body shift to state 461
-- On statement shift to state 422
-- On return_statement shift to state 423
-- On repeat_statement shift to state 424
-- On raise_statement shift to state 425
-- On primary shift to state 426
-- On lvalue shift to state 87
-- On label_statement shift to state 429
-- On indexed_variable shift to state 104
-- On if_statement shift to state 430
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 450
-- On function_call shift to state 107
-- On for_statement shift to state 451
-- On field_designator shift to state 108
-- On continue_statement shift to state 452
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 453
-- On break_statement shift to state 454
-- On boolean_value shift to state 115
-- On assignment_statement shift to state 455
## Reductions:

State 461:
## Known stack suffix:
## TokCase expression TokOf case_element_list TokElse statement_body
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list TokElse statement_body . TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokEnd shift to state 462
## Reductions:

State 462:
## Known stack suffix:
## TokCase expression TokOf case_element_list TokElse statement_body TokEnd
## LR(1) items:
case_statement -> TokCase expression TokOf case_element_list TokElse statement_body TokEnd . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production case_statement -> TokCase expression TokOf case_element_list TokElse statement_body TokEnd

State 463:
## Known stack suffix:
## case_element
## LR(1) items:
case_element_list_rev -> case_element . [ TokTrue TokString TokNot TokNil TokMinus TokLeftTuple TokLeftParen TokInt TokFloat TokFalse TokEnd TokElse TokChar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production case_element_list_rev -> case_element

State 464:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokTo expression TokDo statement_body
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo statement_body . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production for_statement -> TokFor identifier TokAssignEq expression TokTo expression TokDo statement_body

State 465:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo . expression TokDo statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 466
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 466:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo expression
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression . TokDo statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokDo shift to state 467
## Reductions:

State 467:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo expression TokDo
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo . statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokWith shift to state 342
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokSemi shift to state 350
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokBegin shift to state 341
-- On TokAt shift to state 73
-- On with_statement shift to state 415
-- On while_statement shift to state 416
-- On unsigned_constant shift to state 417
-- On type_identifier shift to state 78
-- On try_statement shift to state 418
-- On statements shift to state 419
-- On statement_body shift to state 468
-- On statement shift to state 422
-- On return_statement shift to state 423
-- On repeat_statement shift to state 424
-- On raise_statement shift to state 425
-- On primary shift to state 426
-- On lvalue shift to state 87
-- On label_statement shift to state 429
-- On indexed_variable shift to state 104
-- On if_statement shift to state 430
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 450
-- On function_call shift to state 107
-- On for_statement shift to state 451
-- On field_designator shift to state 108
-- On continue_statement shift to state 452
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 453
-- On break_statement shift to state 454
-- On boolean_value shift to state 115
-- On assignment_statement shift to state 455
## Reductions:

State 468:
## Known stack suffix:
## TokFor identifier TokAssignEq expression TokDownTo expression TokDo statement_body
## LR(1) items:
for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo statement_body . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production for_statement -> TokFor identifier TokAssignEq expression TokDownTo expression TokDo statement_body

State 469:
## Known stack suffix:
## TokIf boolean_expression TokThen statement_body
## LR(1) items:
if_statement -> TokIf boolean_expression TokThen statement_body . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
if_statement -> TokIf boolean_expression TokThen statement_body . TokElse statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokElse shift to state 470
## Reductions:
-- On TokUntil TokSemi TokExcept TokEnd
--   reduce production if_statement -> TokIf boolean_expression TokThen statement_body

State 470:
## Known stack suffix:
## TokIf boolean_expression TokThen statement_body TokElse
## LR(1) items:
if_statement -> TokIf boolean_expression TokThen statement_body TokElse . statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokWith shift to state 342
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokSemi shift to state 350
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokBegin shift to state 341
-- On TokAt shift to state 73
-- On with_statement shift to state 415
-- On while_statement shift to state 416
-- On unsigned_constant shift to state 417
-- On type_identifier shift to state 78
-- On try_statement shift to state 418
-- On statements shift to state 419
-- On statement_body shift to state 471
-- On statement shift to state 422
-- On return_statement shift to state 423
-- On repeat_statement shift to state 424
-- On raise_statement shift to state 425
-- On primary shift to state 426
-- On lvalue shift to state 87
-- On label_statement shift to state 429
-- On indexed_variable shift to state 104
-- On if_statement shift to state 430
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 450
-- On function_call shift to state 107
-- On for_statement shift to state 451
-- On field_designator shift to state 108
-- On continue_statement shift to state 452
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 453
-- On break_statement shift to state 454
-- On boolean_value shift to state 115
-- On assignment_statement shift to state 455
## Reductions:

State 471:
## Known stack suffix:
## TokIf boolean_expression TokThen statement_body TokElse statement_body
## LR(1) items:
if_statement -> TokIf boolean_expression TokThen statement_body TokElse statement_body . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production if_statement -> TokIf boolean_expression TokThen statement_body TokElse statement_body

State 472:
## Known stack suffix:
## TokInt TokColon nonempty_statement
## LR(1) items:
label_statement -> TokInt TokColon nonempty_statement . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label_statement -> TokInt TokColon nonempty_statement

State 473:
## Known stack suffix:
## TokRepeat statement_list
## LR(1) items:
repeat_statement -> TokRepeat statement_list . TokUntil boolean_expression [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
statement_list -> statement_list . TokSemi statement [ TokUntil TokSemi ]
## Transitions:
-- On TokUntil shift to state 474
-- On TokSemi shift to state 476
## Reductions:

State 474:
## Known stack suffix:
## TokRepeat statement_list TokUntil
## LR(1) items:
repeat_statement -> TokRepeat statement_list TokUntil . boolean_expression [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 346
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On boolean_expression shift to state 475
-- On add_term shift to state 121
## Reductions:

State 475:
## Known stack suffix:
## TokRepeat statement_list TokUntil boolean_expression
## LR(1) items:
repeat_statement -> TokRepeat statement_list TokUntil boolean_expression . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production repeat_statement -> TokRepeat statement_list TokUntil boolean_expression

State 476:
## Known stack suffix:
## statement_list TokSemi
## LR(1) items:
statement_list -> statement_list TokSemi . statement [ TokUntil TokSemi ]
## Transitions:
-- On TokWith shift to state 342
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokSemi shift to state 350
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokAt shift to state 73
-- On with_statement shift to state 415
-- On while_statement shift to state 416
-- On unsigned_constant shift to state 417
-- On type_identifier shift to state 78
-- On try_statement shift to state 418
-- On statement shift to state 477
-- On return_statement shift to state 423
-- On repeat_statement shift to state 424
-- On raise_statement shift to state 425
-- On primary shift to state 426
-- On lvalue shift to state 87
-- On label_statement shift to state 429
-- On indexed_variable shift to state 104
-- On if_statement shift to state 430
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 450
-- On function_call shift to state 107
-- On for_statement shift to state 451
-- On field_designator shift to state 108
-- On continue_statement shift to state 452
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 453
-- On break_statement shift to state 454
-- On boolean_value shift to state 115
-- On assignment_statement shift to state 455
## Reductions:

State 477:
## Known stack suffix:
## statement_list TokSemi statement
## LR(1) items:
statement_list -> statement_list TokSemi statement . [ TokUntil TokSemi TokEnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement_list -> statement_list TokSemi statement

State 478:
## Known stack suffix:
## statement
## LR(1) items:
statement_list -> statement . [ TokUntil TokSemi TokEnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement_list -> statement

State 479:
## Known stack suffix:
## TokTry statement_body
## LR(1) items:
try_statement -> TokTry statement_body . TokExcept pattern_element_list TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
try_statement -> TokTry statement_body . TokExcept pattern_element_list TokFinally statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokExcept shift to state 480
## Reductions:

State 480:
## Known stack suffix:
## TokTry statement_body TokExcept
## LR(1) items:
try_statement -> TokTry statement_body TokExcept . pattern_element_list TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
try_statement -> TokTry statement_body TokExcept . pattern_element_list TokFinally statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokString shift to state 481
-- On TokInt shift to state 482
-- On TokId shift to state 483
-- On TokFloat shift to state 487
-- On TokChar shift to state 488
-- On pattern_element_list shift to state 489
-- On pattern_element shift to state 493
-- On pattern shift to state 495
## Reductions:

State 481:
## Known stack suffix:
## TokString
## LR(1) items:
pattern -> TokString . [ TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> TokString

State 482:
## Known stack suffix:
## TokInt
## LR(1) items:
pattern -> TokInt . [ TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> TokInt

State 483:
## Known stack suffix:
## TokId
## LR(1) items:
pattern -> TokId . [ TokColon ]
pattern -> TokId . TokLeftParen plain_identifier_list TokRightParen [ TokColon ]
## Transitions:
-- On TokLeftParen shift to state 484
## Reductions:
-- On TokColon
--   reduce production pattern -> TokId

State 484:
## Known stack suffix:
## TokId TokLeftParen
## LR(1) items:
pattern -> TokId TokLeftParen . plain_identifier_list TokRightParen [ TokColon ]
## Transitions:
-- On TokId shift to state 3
-- On plain_identifier_list shift to state 485
-- On identifier shift to state 8
## Reductions:

State 485:
## Known stack suffix:
## TokId TokLeftParen plain_identifier_list
## LR(1) items:
pattern -> TokId TokLeftParen plain_identifier_list . TokRightParen [ TokColon ]
plain_identifier_list -> plain_identifier_list . TokComma identifier [ TokRightParen TokComma ]
## Transitions:
-- On TokRightParen shift to state 486
-- On TokComma shift to state 6
## Reductions:

State 486:
## Known stack suffix:
## TokId TokLeftParen plain_identifier_list TokRightParen
## LR(1) items:
pattern -> TokId TokLeftParen plain_identifier_list TokRightParen . [ TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> TokId TokLeftParen plain_identifier_list TokRightParen

State 487:
## Known stack suffix:
## TokFloat
## LR(1) items:
pattern -> TokFloat . [ TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> TokFloat

State 488:
## Known stack suffix:
## TokChar
## LR(1) items:
pattern -> TokChar . [ TokColon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern -> TokChar

State 489:
## Known stack suffix:
## TokTry statement_body TokExcept pattern_element_list
## LR(1) items:
try_statement -> TokTry statement_body TokExcept pattern_element_list . TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
try_statement -> TokTry statement_body TokExcept pattern_element_list . TokFinally statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokFinally shift to state 490
-- On TokEnd shift to state 492
## Reductions:

State 490:
## Known stack suffix:
## TokTry statement_body TokExcept pattern_element_list TokFinally
## LR(1) items:
try_statement -> TokTry statement_body TokExcept pattern_element_list TokFinally . statement_body [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
-- On TokWith shift to state 342
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokSemi shift to state 350
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokBegin shift to state 341
-- On TokAt shift to state 73
-- On with_statement shift to state 415
-- On while_statement shift to state 416
-- On unsigned_constant shift to state 417
-- On type_identifier shift to state 78
-- On try_statement shift to state 418
-- On statements shift to state 419
-- On statement_body shift to state 491
-- On statement shift to state 422
-- On return_statement shift to state 423
-- On repeat_statement shift to state 424
-- On raise_statement shift to state 425
-- On primary shift to state 426
-- On lvalue shift to state 87
-- On label_statement shift to state 429
-- On indexed_variable shift to state 104
-- On if_statement shift to state 430
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 450
-- On function_call shift to state 107
-- On for_statement shift to state 451
-- On field_designator shift to state 108
-- On continue_statement shift to state 452
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 453
-- On break_statement shift to state 454
-- On boolean_value shift to state 115
-- On assignment_statement shift to state 455
## Reductions:

State 491:
## Known stack suffix:
## TokTry statement_body TokExcept pattern_element_list TokFinally statement_body
## LR(1) items:
try_statement -> TokTry statement_body TokExcept pattern_element_list TokFinally statement_body . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production try_statement -> TokTry statement_body TokExcept pattern_element_list TokFinally statement_body

State 492:
## Known stack suffix:
## TokTry statement_body TokExcept pattern_element_list TokEnd
## LR(1) items:
try_statement -> TokTry statement_body TokExcept pattern_element_list TokEnd . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production try_statement -> TokTry statement_body TokExcept pattern_element_list TokEnd

State 493:
## Known stack suffix:
## pattern_element
## LR(1) items:
pattern_element_list -> pattern_element . pattern_element_list [ TokFinally TokEnd ]
pattern_element_list -> pattern_element . [ TokFinally TokEnd ]
## Transitions:
-- On TokString shift to state 481
-- On TokInt shift to state 482
-- On TokId shift to state 483
-- On TokFloat shift to state 487
-- On TokChar shift to state 488
-- On pattern_element_list shift to state 494
-- On pattern_element shift to state 493
-- On pattern shift to state 495
## Reductions:
-- On TokFinally TokEnd
--   reduce production pattern_element_list -> pattern_element

State 494:
## Known stack suffix:
## pattern_element pattern_element_list
## LR(1) items:
pattern_element_list -> pattern_element pattern_element_list . [ TokFinally TokEnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern_element_list -> pattern_element pattern_element_list

State 495:
## Known stack suffix:
## pattern
## LR(1) items:
pattern_element -> pattern . TokColon statement_body TokSemi [ TokString TokInt TokId TokFloat TokFinally TokEnd TokChar ]
## Transitions:
-- On TokColon shift to state 496
## Reductions:

State 496:
## Known stack suffix:
## pattern TokColon
## LR(1) items:
pattern_element -> pattern TokColon . statement_body TokSemi [ TokString TokInt TokId TokFloat TokFinally TokEnd TokChar ]
## Transitions:
-- On TokWith shift to state 342
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokSemi shift to state 350
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokBegin shift to state 341
-- On TokAt shift to state 73
-- On with_statement shift to state 415
-- On while_statement shift to state 416
-- On unsigned_constant shift to state 417
-- On type_identifier shift to state 78
-- On try_statement shift to state 418
-- On statements shift to state 419
-- On statement_body shift to state 497
-- On statement shift to state 422
-- On return_statement shift to state 423
-- On repeat_statement shift to state 424
-- On raise_statement shift to state 425
-- On primary shift to state 426
-- On lvalue shift to state 87
-- On label_statement shift to state 429
-- On indexed_variable shift to state 104
-- On if_statement shift to state 430
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 450
-- On function_call shift to state 107
-- On for_statement shift to state 451
-- On field_designator shift to state 108
-- On continue_statement shift to state 452
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 453
-- On break_statement shift to state 454
-- On boolean_value shift to state 115
-- On assignment_statement shift to state 455
## Reductions:

State 497:
## Known stack suffix:
## pattern TokColon statement_body
## LR(1) items:
pattern_element -> pattern TokColon statement_body . TokSemi [ TokString TokInt TokId TokFloat TokFinally TokEnd TokChar ]
## Transitions:
-- On TokSemi shift to state 498
## Reductions:

State 498:
## Known stack suffix:
## pattern TokColon statement_body TokSemi
## LR(1) items:
pattern_element -> pattern TokColon statement_body TokSemi . [ TokString TokInt TokId TokFloat TokFinally TokEnd TokChar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pattern_element -> pattern TokColon statement_body TokSemi

State 499:
## Known stack suffix:
## TokWhile boolean_expression TokDo statement_body
## LR(1) items:
while_statement -> TokWhile boolean_expression TokDo statement_body . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production while_statement -> TokWhile boolean_expression TokDo statement_body

State 500:
## Known stack suffix:
## TokWith expression TokDo statement_body
## LR(1) items:
with_statement -> TokWith expression TokDo statement_body . [ TokUntil TokSemi TokExcept TokEnd TokElse # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production with_statement -> TokWith expression TokDo statement_body

State 501:
## Known stack suffix:
## TokBegin TokEnd
## LR(1) items:
statements -> TokBegin TokEnd . [ TokUntil TokSemi TokExcept TokEnd TokElse TokDot TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statements -> TokBegin TokEnd

State 502:
## Known stack suffix:
## TokBegin statement_list
## LR(1) items:
statement_list -> statement_list . TokSemi statement [ TokSemi TokEnd ]
statements -> TokBegin statement_list . TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse TokDot TokAnd # ]
statements -> TokBegin statement_list . TokSemi TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse TokDot TokAnd # ]
## Transitions:
-- On TokSemi shift to state 503
-- On TokEnd shift to state 505
## Reductions:

State 503:
## Known stack suffix:
## TokBegin statement_list TokSemi
## LR(1) items:
statement_list -> statement_list TokSemi . statement [ TokSemi TokEnd ]
statements -> TokBegin statement_list TokSemi . TokEnd [ TokUntil TokSemi TokExcept TokEnd TokElse TokDot TokAnd # ]
## Transitions:
-- On TokWith shift to state 342
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokSemi shift to state 350
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokEnd shift to state 504
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokAt shift to state 73
-- On with_statement shift to state 415
-- On while_statement shift to state 416
-- On unsigned_constant shift to state 417
-- On type_identifier shift to state 78
-- On try_statement shift to state 418
-- On statement shift to state 477
-- On return_statement shift to state 423
-- On repeat_statement shift to state 424
-- On raise_statement shift to state 425
-- On primary shift to state 426
-- On lvalue shift to state 87
-- On label_statement shift to state 429
-- On indexed_variable shift to state 104
-- On if_statement shift to state 430
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 450
-- On function_call shift to state 107
-- On for_statement shift to state 451
-- On field_designator shift to state 108
-- On continue_statement shift to state 452
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 453
-- On break_statement shift to state 454
-- On boolean_value shift to state 115
-- On assignment_statement shift to state 455
## Reductions:

State 504:
## Known stack suffix:
## TokBegin statement_list TokSemi TokEnd
## LR(1) items:
statements -> TokBegin statement_list TokSemi TokEnd . [ TokUntil TokSemi TokExcept TokEnd TokElse TokDot TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statements -> TokBegin statement_list TokSemi TokEnd

State 505:
## Known stack suffix:
## TokBegin statement_list TokEnd
## LR(1) items:
statements -> TokBegin statement_list TokEnd . [ TokUntil TokSemi TokExcept TokEnd TokElse TokDot TokAnd # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statements -> TokBegin statement_list TokEnd

State 506:
## Known stack suffix:
## variable_decl
## LR(1) items:
block -> variable_decl . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block -> variable_decl

State 507:
## Known stack suffix:
## type_def
## LR(1) items:
block -> type_def . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block -> type_def

State 508:
## Known stack suffix:
## statements
## LR(1) items:
program_body -> statements . TokDot [ # ]
program_body -> statements . TokAnd TokReturn TokDot [ # ]
## Transitions:
-- On TokDot shift to state 509
-- On TokAnd shift to state 510
## Reductions:

State 509:
## Known stack suffix:
## statements TokDot
## LR(1) items:
program_body -> statements TokDot . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production program_body -> statements TokDot

State 510:
## Known stack suffix:
## statements TokAnd
## LR(1) items:
program_body -> statements TokAnd . TokReturn TokDot [ # ]
## Transitions:
-- On TokReturn shift to state 511
## Reductions:

State 511:
## Known stack suffix:
## statements TokAnd TokReturn
## LR(1) items:
program_body -> statements TokAnd TokReturn . TokDot [ # ]
## Transitions:
-- On TokDot shift to state 512
## Reductions:

State 512:
## Known stack suffix:
## statements TokAnd TokReturn TokDot
## LR(1) items:
program_body -> statements TokAnd TokReturn TokDot . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production program_body -> statements TokAnd TokReturn TokDot

State 513:
## Known stack suffix:
## program_body
## LR(1) items:
bootstrap -> program_body . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production bootstrap -> program_body

State 514:
## Known stack suffix:
## procedure_heading
## LR(1) items:
procedure_declaration -> procedure_heading . TokSemi TokForward TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
procedure_declaration -> procedure_heading . TokSemi TokExternal TokEq TokString TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
procedure_definition -> procedure_heading . TokSemi procedure_body TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
procedure_definition -> procedure_heading . TokEq statement TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 515
-- On TokEq shift to state 558
## Reductions:

State 515:
## Known stack suffix:
## procedure_heading TokSemi
## LR(1) items:
procedure_declaration -> procedure_heading TokSemi . TokForward TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
procedure_declaration -> procedure_heading TokSemi . TokExternal TokEq TokString TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
procedure_definition -> procedure_heading TokSemi . procedure_body TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokVar shift to state 1
-- On TokType shift to state 219
-- On TokProcedure shift to state 228
-- On TokOperator shift to state 276
-- On TokLabel shift to state 301
-- On TokFunction shift to state 309
-- On TokForward shift to state 516
-- On TokExternal shift to state 518
-- On TokException shift to state 321
-- On TokConst shift to state 328
-- On TokBegin shift to state 341
-- On variable_decl shift to state 506
-- On type_def shift to state 507
-- On statements shift to state 522
-- On procedure_heading shift to state 514
-- On procedure_definition shift to state 523
-- On procedure_declaration shift to state 524
-- On procedure_body shift to state 525
-- On operator_heading shift to state 527
-- On label_declaration shift to state 529
-- On function_heading shift to state 530
-- On function_definition shift to state 538
-- On function_declaration shift to state 539
-- On exception_declaration shift to state 542
-- On constant_declaration shift to state 543
-- On body shift to state 557
-- On block_list shift to state 545
-- On block shift to state 548
## Reductions:

State 516:
## Known stack suffix:
## procedure_heading TokSemi TokForward
## LR(1) items:
procedure_declaration -> procedure_heading TokSemi TokForward . TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 517
## Reductions:

State 517:
## Known stack suffix:
## procedure_heading TokSemi TokForward TokSemi
## LR(1) items:
procedure_declaration -> procedure_heading TokSemi TokForward TokSemi . [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production procedure_declaration -> procedure_heading TokSemi TokForward TokSemi

State 518:
## Known stack suffix:
## procedure_heading TokSemi TokExternal
## LR(1) items:
procedure_declaration -> procedure_heading TokSemi TokExternal . TokEq TokString TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokEq shift to state 519
## Reductions:

State 519:
## Known stack suffix:
## procedure_heading TokSemi TokExternal TokEq
## LR(1) items:
procedure_declaration -> procedure_heading TokSemi TokExternal TokEq . TokString TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokString shift to state 520
## Reductions:

State 520:
## Known stack suffix:
## procedure_heading TokSemi TokExternal TokEq TokString
## LR(1) items:
procedure_declaration -> procedure_heading TokSemi TokExternal TokEq TokString . TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 521
## Reductions:

State 521:
## Known stack suffix:
## procedure_heading TokSemi TokExternal TokEq TokString TokSemi
## LR(1) items:
procedure_declaration -> procedure_heading TokSemi TokExternal TokEq TokString TokSemi . [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production procedure_declaration -> procedure_heading TokSemi TokExternal TokEq TokString TokSemi

State 522:
## Known stack suffix:
## statements
## LR(1) items:
body -> statements . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production body -> statements

State 523:
## Known stack suffix:
## procedure_definition
## LR(1) items:
block -> procedure_definition . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block -> procedure_definition

State 524:
## Known stack suffix:
## procedure_declaration
## LR(1) items:
block -> procedure_declaration . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block -> procedure_declaration

State 525:
## Known stack suffix:
## procedure_heading TokSemi procedure_body
## LR(1) items:
procedure_definition -> procedure_heading TokSemi procedure_body . TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 526
## Reductions:

State 526:
## Known stack suffix:
## procedure_heading TokSemi procedure_body TokSemi
## LR(1) items:
procedure_definition -> procedure_heading TokSemi procedure_body TokSemi . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production procedure_definition -> procedure_heading TokSemi procedure_body TokSemi

State 527:
## Known stack suffix:
## operator_heading
## LR(1) items:
function_definition -> operator_heading . TokSemi function_body TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
function_definition -> operator_heading . TokEq expression TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 528
-- On TokEq shift to state 554
## Reductions:

State 528:
## Known stack suffix:
## operator_heading TokSemi
## LR(1) items:
function_definition -> operator_heading TokSemi . function_body TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokVar shift to state 1
-- On TokType shift to state 219
-- On TokProcedure shift to state 228
-- On TokOperator shift to state 276
-- On TokLabel shift to state 301
-- On TokFunction shift to state 309
-- On TokException shift to state 321
-- On TokConst shift to state 328
-- On TokBegin shift to state 341
-- On variable_decl shift to state 506
-- On type_def shift to state 507
-- On statements shift to state 522
-- On procedure_heading shift to state 514
-- On procedure_definition shift to state 523
-- On procedure_declaration shift to state 524
-- On operator_heading shift to state 527
-- On label_declaration shift to state 529
-- On function_heading shift to state 530
-- On function_definition shift to state 538
-- On function_declaration shift to state 539
-- On function_body shift to state 552
-- On exception_declaration shift to state 542
-- On constant_declaration shift to state 543
-- On body shift to state 544
-- On block_list shift to state 545
-- On block shift to state 548
## Reductions:

State 529:
## Known stack suffix:
## label_declaration
## LR(1) items:
block -> label_declaration . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block -> label_declaration

State 530:
## Known stack suffix:
## function_heading
## LR(1) items:
function_declaration -> function_heading . TokSemi TokForward TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
function_declaration -> function_heading . TokSemi TokExternal TokEq TokString TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
function_definition -> function_heading . TokSemi function_body TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
function_definition -> function_heading . TokEq expression TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 531
-- On TokEq shift to state 549
## Reductions:

State 531:
## Known stack suffix:
## function_heading TokSemi
## LR(1) items:
function_declaration -> function_heading TokSemi . TokForward TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
function_declaration -> function_heading TokSemi . TokExternal TokEq TokString TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
function_definition -> function_heading TokSemi . function_body TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokVar shift to state 1
-- On TokType shift to state 219
-- On TokProcedure shift to state 228
-- On TokOperator shift to state 276
-- On TokLabel shift to state 301
-- On TokFunction shift to state 309
-- On TokForward shift to state 532
-- On TokExternal shift to state 534
-- On TokException shift to state 321
-- On TokConst shift to state 328
-- On TokBegin shift to state 341
-- On variable_decl shift to state 506
-- On type_def shift to state 507
-- On statements shift to state 522
-- On procedure_heading shift to state 514
-- On procedure_definition shift to state 523
-- On procedure_declaration shift to state 524
-- On operator_heading shift to state 527
-- On label_declaration shift to state 529
-- On function_heading shift to state 530
-- On function_definition shift to state 538
-- On function_declaration shift to state 539
-- On function_body shift to state 540
-- On exception_declaration shift to state 542
-- On constant_declaration shift to state 543
-- On body shift to state 544
-- On block_list shift to state 545
-- On block shift to state 548
## Reductions:

State 532:
## Known stack suffix:
## function_heading TokSemi TokForward
## LR(1) items:
function_declaration -> function_heading TokSemi TokForward . TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 533
## Reductions:

State 533:
## Known stack suffix:
## function_heading TokSemi TokForward TokSemi
## LR(1) items:
function_declaration -> function_heading TokSemi TokForward TokSemi . [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_declaration -> function_heading TokSemi TokForward TokSemi

State 534:
## Known stack suffix:
## function_heading TokSemi TokExternal
## LR(1) items:
function_declaration -> function_heading TokSemi TokExternal . TokEq TokString TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokEq shift to state 535
## Reductions:

State 535:
## Known stack suffix:
## function_heading TokSemi TokExternal TokEq
## LR(1) items:
function_declaration -> function_heading TokSemi TokExternal TokEq . TokString TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokString shift to state 536
## Reductions:

State 536:
## Known stack suffix:
## function_heading TokSemi TokExternal TokEq TokString
## LR(1) items:
function_declaration -> function_heading TokSemi TokExternal TokEq TokString . TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 537
## Reductions:

State 537:
## Known stack suffix:
## function_heading TokSemi TokExternal TokEq TokString TokSemi
## LR(1) items:
function_declaration -> function_heading TokSemi TokExternal TokEq TokString TokSemi . [ TokVar TokType TokProcedure TokOperator TokLabel TokImplementation TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_declaration -> function_heading TokSemi TokExternal TokEq TokString TokSemi

State 538:
## Known stack suffix:
## function_definition
## LR(1) items:
block -> function_definition . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block -> function_definition

State 539:
## Known stack suffix:
## function_declaration
## LR(1) items:
block -> function_declaration . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block -> function_declaration

State 540:
## Known stack suffix:
## function_heading TokSemi function_body
## LR(1) items:
function_definition -> function_heading TokSemi function_body . TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 541
## Reductions:

State 541:
## Known stack suffix:
## function_heading TokSemi function_body TokSemi
## LR(1) items:
function_definition -> function_heading TokSemi function_body TokSemi . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_definition -> function_heading TokSemi function_body TokSemi

State 542:
## Known stack suffix:
## exception_declaration
## LR(1) items:
block -> exception_declaration . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block -> exception_declaration

State 543:
## Known stack suffix:
## constant_declaration
## LR(1) items:
block -> constant_declaration . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block -> constant_declaration

State 544:
## Known stack suffix:
## body
## LR(1) items:
function_body -> body . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_body -> body

State 545:
## Known stack suffix:
## block_list
## LR(1) items:
block_list -> block_list . block [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokConst TokBegin ]
body -> block_list . statements [ TokSemi ]
## Transitions:
-- On TokVar shift to state 1
-- On TokType shift to state 219
-- On TokProcedure shift to state 228
-- On TokOperator shift to state 276
-- On TokLabel shift to state 301
-- On TokFunction shift to state 309
-- On TokException shift to state 321
-- On TokConst shift to state 328
-- On TokBegin shift to state 341
-- On variable_decl shift to state 506
-- On type_def shift to state 507
-- On statements shift to state 546
-- On procedure_heading shift to state 514
-- On procedure_definition shift to state 523
-- On procedure_declaration shift to state 524
-- On operator_heading shift to state 527
-- On label_declaration shift to state 529
-- On function_heading shift to state 530
-- On function_definition shift to state 538
-- On function_declaration shift to state 539
-- On exception_declaration shift to state 542
-- On constant_declaration shift to state 543
-- On block shift to state 547
## Reductions:

State 546:
## Known stack suffix:
## block_list statements
## LR(1) items:
body -> block_list statements . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production body -> block_list statements

State 547:
## Known stack suffix:
## block_list block
## LR(1) items:
block_list -> block_list block . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_list -> block_list block

State 548:
## Known stack suffix:
## block
## LR(1) items:
block_list -> block . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_list -> block

State 549:
## Known stack suffix:
## function_heading TokEq
## LR(1) items:
function_definition -> function_heading TokEq . expression TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 550
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 550:
## Known stack suffix:
## function_heading TokEq expression
## LR(1) items:
function_definition -> function_heading TokEq expression . TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 551
## Reductions:

State 551:
## Known stack suffix:
## function_heading TokEq expression TokSemi
## LR(1) items:
function_definition -> function_heading TokEq expression TokSemi . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_definition -> function_heading TokEq expression TokSemi

State 552:
## Known stack suffix:
## operator_heading TokSemi function_body
## LR(1) items:
function_definition -> operator_heading TokSemi function_body . TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 553
## Reductions:

State 553:
## Known stack suffix:
## operator_heading TokSemi function_body TokSemi
## LR(1) items:
function_definition -> operator_heading TokSemi function_body TokSemi . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_definition -> operator_heading TokSemi function_body TokSemi

State 554:
## Known stack suffix:
## operator_heading TokEq
## LR(1) items:
function_definition -> operator_heading TokEq . expression TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokRef shift to state 64
-- On TokNot shift to state 65
-- On TokMinus shift to state 67
-- On TokLeftTuple shift to state 77
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 68
-- On TokId shift to state 3
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokChar shift to state 72
-- On TokAt shift to state 73
-- On unsigned_constant shift to state 74
-- On type_identifier shift to state 78
-- On term shift to state 80
-- On simple_expression shift to state 89
-- On relop_expression shift to state 122
-- On primary shift to state 86
-- On lvalue shift to state 87
-- On indexed_variable shift to state 104
-- On identifier shift to state 105
-- On identified_variable shift to state 106
-- On function_call shift to state 107
-- On field_designator shift to state 108
-- On factor shift to state 109
-- On expression shift to state 555
-- On exponentiation shift to state 110
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On boolean_value shift to state 115
-- On add_term shift to state 121
## Reductions:

State 555:
## Known stack suffix:
## operator_heading TokEq expression
## LR(1) items:
function_definition -> operator_heading TokEq expression . TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 556
## Reductions:

State 556:
## Known stack suffix:
## operator_heading TokEq expression TokSemi
## LR(1) items:
function_definition -> operator_heading TokEq expression TokSemi . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_definition -> operator_heading TokEq expression TokSemi

State 557:
## Known stack suffix:
## body
## LR(1) items:
procedure_body -> body . [ TokSemi ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production procedure_body -> body

State 558:
## Known stack suffix:
## procedure_heading TokEq
## LR(1) items:
procedure_definition -> procedure_heading TokEq . statement TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokWith shift to state 342
-- On TokWhile shift to state 345
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokSemi shift to state 350
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokAt shift to state 73
-- On with_statement shift to state 415
-- On while_statement shift to state 416
-- On unsigned_constant shift to state 417
-- On type_identifier shift to state 78
-- On try_statement shift to state 418
-- On statement shift to state 559
-- On return_statement shift to state 423
-- On repeat_statement shift to state 424
-- On raise_statement shift to state 425
-- On primary shift to state 426
-- On lvalue shift to state 87
-- On label_statement shift to state 429
-- On indexed_variable shift to state 104
-- On if_statement shift to state 430
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 450
-- On function_call shift to state 107
-- On for_statement shift to state 451
-- On field_designator shift to state 108
-- On continue_statement shift to state 452
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 453
-- On break_statement shift to state 454
-- On boolean_value shift to state 115
-- On assignment_statement shift to state 455
## Reductions:

State 559:
## Known stack suffix:
## procedure_heading TokEq statement
## LR(1) items:
procedure_definition -> procedure_heading TokEq statement . TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 560
## Reductions:

State 560:
## Known stack suffix:
## procedure_heading TokEq statement TokSemi
## LR(1) items:
procedure_definition -> procedure_heading TokEq statement TokSemi . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokEnd TokDot TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production procedure_definition -> procedure_heading TokEq statement TokSemi

State 561:
## Known stack suffix:
## bootstrap
## LR(1) items:
bootstrap' -> bootstrap . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept bootstrap

State 562:
## Known stack suffix:
## block_list
## LR(1) items:
block_list -> block_list . block [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEof TokDot TokConst TokBegin ]
bootstrap -> block_list . TokEof [ # ]
program_body -> block_list . statements TokDot [ # ]
program_body -> block_list . statements TokAnd TokReturn TokDot [ # ]
program_body -> block_list . TokDot [ # ]
## Transitions:
-- On TokVar shift to state 1
-- On TokType shift to state 219
-- On TokProcedure shift to state 228
-- On TokOperator shift to state 276
-- On TokLabel shift to state 301
-- On TokFunction shift to state 309
-- On TokException shift to state 321
-- On TokEof shift to state 563
-- On TokDot shift to state 564
-- On TokConst shift to state 328
-- On TokBegin shift to state 341
-- On variable_decl shift to state 506
-- On type_def shift to state 507
-- On statements shift to state 565
-- On procedure_heading shift to state 514
-- On procedure_definition shift to state 523
-- On procedure_declaration shift to state 524
-- On operator_heading shift to state 527
-- On label_declaration shift to state 529
-- On function_heading shift to state 530
-- On function_definition shift to state 538
-- On function_declaration shift to state 539
-- On exception_declaration shift to state 542
-- On constant_declaration shift to state 543
-- On block shift to state 547
## Reductions:

State 563:
## Known stack suffix:
## block_list TokEof
## LR(1) items:
bootstrap -> block_list TokEof . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production bootstrap -> block_list TokEof

State 564:
## Known stack suffix:
## block_list TokDot
## LR(1) items:
program_body -> block_list TokDot . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production program_body -> block_list TokDot

State 565:
## Known stack suffix:
## block_list statements
## LR(1) items:
program_body -> block_list statements . TokDot [ # ]
program_body -> block_list statements . TokAnd TokReturn TokDot [ # ]
## Transitions:
-- On TokDot shift to state 566
-- On TokAnd shift to state 567
## Reductions:

State 566:
## Known stack suffix:
## block_list statements TokDot
## LR(1) items:
program_body -> block_list statements TokDot . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production program_body -> block_list statements TokDot

State 567:
## Known stack suffix:
## block_list statements TokAnd
## LR(1) items:
program_body -> block_list statements TokAnd . TokReturn TokDot [ # ]
## Transitions:
-- On TokReturn shift to state 568
## Reductions:

State 568:
## Known stack suffix:
## block_list statements TokAnd TokReturn
## LR(1) items:
program_body -> block_list statements TokAnd TokReturn . TokDot [ # ]
## Transitions:
-- On TokDot shift to state 569
## Reductions:

State 569:
## Known stack suffix:
## block_list statements TokAnd TokReturn TokDot
## LR(1) items:
program_body -> block_list statements TokAnd TokReturn TokDot . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production program_body -> block_list statements TokAnd TokReturn TokDot

State 570:
## Known stack suffix:
##
## LR(1) items:
console' -> . console [ # ]
## Transitions:
-- On TokWith shift to state 342
-- On TokWhile shift to state 345
-- On TokUnit shift to state 571
-- On TokTypeWord shift to state 23
-- On TokTypeUInt64 shift to state 24
-- On TokTypeShort shift to state 25
-- On TokTypeReal shift to state 26
-- On TokTypeLongDouble shift to state 27
-- On TokTypeInteger shift to state 28
-- On TokTypeInt64 shift to state 29
-- On TokTypeDouble shift to state 30
-- On TokTypeDWord shift to state 31
-- On TokTypeChar shift to state 32
-- On TokTypeCString shift to state 33
-- On TokTypeByte shift to state 34
-- On TokTypeBoolean shift to state 35
-- On TokTry shift to state 349
-- On TokTrue shift to state 60
-- On TokString shift to state 61
-- On TokSizeOf shift to state 62
-- On TokSemi shift to state 350
-- On TokReturn shift to state 351
-- On TokRepeat shift to state 353
-- On TokRef shift to state 64
-- On TokRaise shift to state 354
-- On TokProgram shift to state 574
-- On TokNot shift to state 65
-- On TokLeftParen shift to state 66
-- On TokInt shift to state 356
-- On TokIf shift to state 358
-- On TokId shift to state 3
-- On TokGoto shift to state 361
-- On TokFor shift to state 364
-- On TokFloat shift to state 69
-- On TokFalse shift to state 70
-- On TokEof shift to state 581
-- On TokDeref shift to state 71
-- On TokContinue shift to state 371
-- On TokChar shift to state 72
-- On TokCase shift to state 372
-- On TokBreak shift to state 414
-- On TokAt shift to state 73
-- On with_statement shift to state 415
-- On while_statement shift to state 416
-- On unsigned_constant shift to state 417
-- On unit_header shift to state 582
-- On unit_body shift to state 611
-- On type_identifier shift to state 78
-- On try_statement shift to state 418
-- On statement shift to state 612
-- On return_statement shift to state 423
-- On repeat_statement shift to state 424
-- On raise_statement shift to state 425
-- On program_header shift to state 613
-- On program shift to state 618
-- On primary shift to state 426
-- On lvalue shift to state 87
-- On label_statement shift to state 429
-- On indexed_variable shift to state 104
-- On if_statement shift to state 430
-- On identifier shift to state 431
-- On identified_variable shift to state 106
-- On goto_statement shift to state 450
-- On function_call shift to state 107
-- On for_statement shift to state 451
-- On field_designator shift to state 108
-- On continue_statement shift to state 452
-- On console shift to state 619
-- On component_variable shift to state 111
-- On character_string_rev shift to state 112
-- On character_string shift to state 114
-- On case_statement shift to state 453
-- On break_statement shift to state 454
-- On boolean_value shift to state 115
-- On assignment_statement shift to state 455
## Reductions:

State 571:
## Known stack suffix:
## TokUnit
## LR(1) items:
unit_header -> TokUnit . identifier TokSemi [ TokVar TokUses TokType TokProcedure TokFunction ]
## Transitions:
-- On TokId shift to state 3
-- On identifier shift to state 572
## Reductions:

State 572:
## Known stack suffix:
## TokUnit identifier
## LR(1) items:
unit_header -> TokUnit identifier . TokSemi [ TokVar TokUses TokType TokProcedure TokFunction ]
## Transitions:
-- On TokSemi shift to state 573
## Reductions:

State 573:
## Known stack suffix:
## TokUnit identifier TokSemi
## LR(1) items:
unit_header -> TokUnit identifier TokSemi . [ TokVar TokUses TokType TokProcedure TokFunction ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unit_header -> TokUnit identifier TokSemi

State 574:
## Known stack suffix:
## TokProgram
## LR(1) items:
program_header -> TokProgram . identifier TokSemi [ TokVar TokUses TokType TokProcedure TokOperator TokLabel TokFunction TokException TokConst TokBegin ]
program_header -> TokProgram . identifier TokLeftParen plain_identifier_list TokRightParen TokSemi [ TokVar TokUses TokType TokProcedure TokOperator TokLabel TokFunction TokException TokConst TokBegin ]
## Transitions:
-- On TokId shift to state 3
-- On identifier shift to state 575
## Reductions:

State 575:
## Known stack suffix:
## TokProgram identifier
## LR(1) items:
program_header -> TokProgram identifier . TokSemi [ TokVar TokUses TokType TokProcedure TokOperator TokLabel TokFunction TokException TokConst TokBegin ]
program_header -> TokProgram identifier . TokLeftParen plain_identifier_list TokRightParen TokSemi [ TokVar TokUses TokType TokProcedure TokOperator TokLabel TokFunction TokException TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 576
-- On TokLeftParen shift to state 577
## Reductions:

State 576:
## Known stack suffix:
## TokProgram identifier TokSemi
## LR(1) items:
program_header -> TokProgram identifier TokSemi . [ TokVar TokUses TokType TokProcedure TokOperator TokLabel TokFunction TokException TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production program_header -> TokProgram identifier TokSemi

State 577:
## Known stack suffix:
## TokProgram identifier TokLeftParen
## LR(1) items:
program_header -> TokProgram identifier TokLeftParen . plain_identifier_list TokRightParen TokSemi [ TokVar TokUses TokType TokProcedure TokOperator TokLabel TokFunction TokException TokConst TokBegin ]
## Transitions:
-- On TokId shift to state 3
-- On plain_identifier_list shift to state 578
-- On identifier shift to state 8
## Reductions:

State 578:
## Known stack suffix:
## TokProgram identifier TokLeftParen plain_identifier_list
## LR(1) items:
plain_identifier_list -> plain_identifier_list . TokComma identifier [ TokRightParen TokComma ]
program_header -> TokProgram identifier TokLeftParen plain_identifier_list . TokRightParen TokSemi [ TokVar TokUses TokType TokProcedure TokOperator TokLabel TokFunction TokException TokConst TokBegin ]
## Transitions:
-- On TokRightParen shift to state 579
-- On TokComma shift to state 6
## Reductions:

State 579:
## Known stack suffix:
## TokProgram identifier TokLeftParen plain_identifier_list TokRightParen
## LR(1) items:
program_header -> TokProgram identifier TokLeftParen plain_identifier_list TokRightParen . TokSemi [ TokVar TokUses TokType TokProcedure TokOperator TokLabel TokFunction TokException TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 580
## Reductions:

State 580:
## Known stack suffix:
## TokProgram identifier TokLeftParen plain_identifier_list TokRightParen TokSemi
## LR(1) items:
program_header -> TokProgram identifier TokLeftParen plain_identifier_list TokRightParen TokSemi . [ TokVar TokUses TokType TokProcedure TokOperator TokLabel TokFunction TokException TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production program_header -> TokProgram identifier TokLeftParen plain_identifier_list TokRightParen TokSemi

State 581:
## Known stack suffix:
## TokEof
## LR(1) items:
console -> TokEof . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production console -> TokEof

State 582:
## Known stack suffix:
## unit_header
## LR(1) items:
unit_body -> unit_header . uses_clause interface_body implementation_body statements TokDot [ # ]
unit_body -> unit_header . interface_body implementation_body statements TokDot [ # ]
unit_body -> unit_header . uses_clause interface_body implementation_body TokEnd TokDot [ # ]
unit_body -> unit_header . interface_body implementation_body TokEnd TokDot [ # ]
## Transitions:
-- On TokVar shift to state 1
-- On TokUses shift to state 583
-- On TokType shift to state 219
-- On TokProcedure shift to state 228
-- On TokFunction shift to state 309
-- On variable_decl shift to state 586
-- On uses_clause shift to state 587
-- On type_def shift to state 588
-- On procedure_heading shift to state 589
-- On procedure_declaration shift to state 591
-- On interface_body_element shift to state 592
-- On interface_body shift to state 605
-- On function_heading shift to state 602
-- On function_declaration shift to state 604
## Reductions:

State 583:
## Known stack suffix:
## TokUses
## LR(1) items:
uses_clause -> TokUses . plain_identifier_list TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokConst TokBegin ]
## Transitions:
-- On TokId shift to state 3
-- On plain_identifier_list shift to state 584
-- On identifier shift to state 8
## Reductions:

State 584:
## Known stack suffix:
## TokUses plain_identifier_list
## LR(1) items:
plain_identifier_list -> plain_identifier_list . TokComma identifier [ TokSemi TokComma ]
uses_clause -> TokUses plain_identifier_list . TokSemi [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokConst TokBegin ]
## Transitions:
-- On TokSemi shift to state 585
-- On TokComma shift to state 6
## Reductions:

State 585:
## Known stack suffix:
## TokUses plain_identifier_list TokSemi
## LR(1) items:
uses_clause -> TokUses plain_identifier_list TokSemi . [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokConst TokBegin ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production uses_clause -> TokUses plain_identifier_list TokSemi

State 586:
## Known stack suffix:
## variable_decl
## LR(1) items:
interface_body_element -> variable_decl . [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface_body_element -> variable_decl

State 587:
## Known stack suffix:
## unit_header uses_clause
## LR(1) items:
unit_body -> unit_header uses_clause . interface_body implementation_body statements TokDot [ # ]
unit_body -> unit_header uses_clause . interface_body implementation_body TokEnd TokDot [ # ]
## Transitions:
-- On TokVar shift to state 1
-- On TokType shift to state 219
-- On TokProcedure shift to state 228
-- On TokFunction shift to state 309
-- On variable_decl shift to state 586
-- On type_def shift to state 588
-- On procedure_heading shift to state 589
-- On procedure_declaration shift to state 591
-- On interface_body_element shift to state 592
-- On interface_body shift to state 593
-- On function_heading shift to state 602
-- On function_declaration shift to state 604
## Reductions:

State 588:
## Known stack suffix:
## type_def
## LR(1) items:
interface_body_element -> type_def . [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface_body_element -> type_def

State 589:
## Known stack suffix:
## procedure_heading
## LR(1) items:
procedure_declaration -> procedure_heading . TokSemi TokForward TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction ]
procedure_declaration -> procedure_heading . TokSemi TokExternal TokEq TokString TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
-- On TokSemi shift to state 590
## Reductions:

State 590:
## Known stack suffix:
## procedure_heading TokSemi
## LR(1) items:
procedure_declaration -> procedure_heading TokSemi . TokForward TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction ]
procedure_declaration -> procedure_heading TokSemi . TokExternal TokEq TokString TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
-- On TokForward shift to state 516
-- On TokExternal shift to state 518
## Reductions:

State 591:
## Known stack suffix:
## procedure_declaration
## LR(1) items:
interface_body_element -> procedure_declaration . [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface_body_element -> procedure_declaration

State 592:
## Known stack suffix:
## interface_body_element
## LR(1) items:
interface_body -> interface_body_element . [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface_body -> interface_body_element

State 593:
## Known stack suffix:
## unit_header uses_clause interface_body
## LR(1) items:
interface_body -> interface_body . interface_body_element [ TokVar TokType TokProcedure TokImplementation TokFunction ]
unit_body -> unit_header uses_clause interface_body . implementation_body statements TokDot [ # ]
unit_body -> unit_header uses_clause interface_body . implementation_body TokEnd TokDot [ # ]
## Transitions:
-- On TokVar shift to state 1
-- On TokType shift to state 219
-- On TokProcedure shift to state 228
-- On TokImplementation shift to state 594
-- On TokFunction shift to state 309
-- On variable_decl shift to state 586
-- On type_def shift to state 588
-- On procedure_heading shift to state 589
-- On procedure_declaration shift to state 591
-- On interface_body_element shift to state 596
-- On implementation_body shift to state 597
-- On function_heading shift to state 602
-- On function_declaration shift to state 604
## Reductions:

State 594:
## Known stack suffix:
## TokImplementation
## LR(1) items:
implementation_body -> TokImplementation . block_list [ TokEnd TokBegin ]
## Transitions:
-- On TokVar shift to state 1
-- On TokType shift to state 219
-- On TokProcedure shift to state 228
-- On TokOperator shift to state 276
-- On TokLabel shift to state 301
-- On TokFunction shift to state 309
-- On TokException shift to state 321
-- On TokConst shift to state 328
-- On variable_decl shift to state 506
-- On type_def shift to state 507
-- On procedure_heading shift to state 514
-- On procedure_definition shift to state 523
-- On procedure_declaration shift to state 524
-- On operator_heading shift to state 527
-- On label_declaration shift to state 529
-- On function_heading shift to state 530
-- On function_definition shift to state 538
-- On function_declaration shift to state 539
-- On exception_declaration shift to state 542
-- On constant_declaration shift to state 543
-- On block_list shift to state 595
-- On block shift to state 548
## Reductions:

State 595:
## Known stack suffix:
## TokImplementation block_list
## LR(1) items:
block_list -> block_list . block [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokEnd TokConst TokBegin ]
implementation_body -> TokImplementation block_list . [ TokEnd TokBegin ]
## Transitions:
-- On TokVar shift to state 1
-- On TokType shift to state 219
-- On TokProcedure shift to state 228
-- On TokOperator shift to state 276
-- On TokLabel shift to state 301
-- On TokFunction shift to state 309
-- On TokException shift to state 321
-- On TokConst shift to state 328
-- On variable_decl shift to state 506
-- On type_def shift to state 507
-- On procedure_heading shift to state 514
-- On procedure_definition shift to state 523
-- On procedure_declaration shift to state 524
-- On operator_heading shift to state 527
-- On label_declaration shift to state 529
-- On function_heading shift to state 530
-- On function_definition shift to state 538
-- On function_declaration shift to state 539
-- On exception_declaration shift to state 542
-- On constant_declaration shift to state 543
-- On block shift to state 547
## Reductions:
-- On TokEnd TokBegin
--   reduce production implementation_body -> TokImplementation block_list

State 596:
## Known stack suffix:
## interface_body interface_body_element
## LR(1) items:
interface_body -> interface_body interface_body_element . [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface_body -> interface_body interface_body_element

State 597:
## Known stack suffix:
## unit_header uses_clause interface_body implementation_body
## LR(1) items:
unit_body -> unit_header uses_clause interface_body implementation_body . statements TokDot [ # ]
unit_body -> unit_header uses_clause interface_body implementation_body . TokEnd TokDot [ # ]
## Transitions:
-- On TokEnd shift to state 598
-- On TokBegin shift to state 341
-- On statements shift to state 600
## Reductions:

State 598:
## Known stack suffix:
## unit_header uses_clause interface_body implementation_body TokEnd
## LR(1) items:
unit_body -> unit_header uses_clause interface_body implementation_body TokEnd . TokDot [ # ]
## Transitions:
-- On TokDot shift to state 599
## Reductions:

State 599:
## Known stack suffix:
## unit_header uses_clause interface_body implementation_body TokEnd TokDot
## LR(1) items:
unit_body -> unit_header uses_clause interface_body implementation_body TokEnd TokDot . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production unit_body -> unit_header uses_clause interface_body implementation_body TokEnd TokDot

State 600:
## Known stack suffix:
## unit_header uses_clause interface_body implementation_body statements
## LR(1) items:
unit_body -> unit_header uses_clause interface_body implementation_body statements . TokDot [ # ]
## Transitions:
-- On TokDot shift to state 601
## Reductions:

State 601:
## Known stack suffix:
## unit_header uses_clause interface_body implementation_body statements TokDot
## LR(1) items:
unit_body -> unit_header uses_clause interface_body implementation_body statements TokDot . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production unit_body -> unit_header uses_clause interface_body implementation_body statements TokDot

State 602:
## Known stack suffix:
## function_heading
## LR(1) items:
function_declaration -> function_heading . TokSemi TokForward TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction ]
function_declaration -> function_heading . TokSemi TokExternal TokEq TokString TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
-- On TokSemi shift to state 603
## Reductions:

State 603:
## Known stack suffix:
## function_heading TokSemi
## LR(1) items:
function_declaration -> function_heading TokSemi . TokForward TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction ]
function_declaration -> function_heading TokSemi . TokExternal TokEq TokString TokSemi [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
-- On TokForward shift to state 532
-- On TokExternal shift to state 534
## Reductions:

State 604:
## Known stack suffix:
## function_declaration
## LR(1) items:
interface_body_element -> function_declaration . [ TokVar TokType TokProcedure TokImplementation TokFunction ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface_body_element -> function_declaration

State 605:
## Known stack suffix:
## unit_header interface_body
## LR(1) items:
interface_body -> interface_body . interface_body_element [ TokVar TokType TokProcedure TokImplementation TokFunction ]
unit_body -> unit_header interface_body . implementation_body statements TokDot [ # ]
unit_body -> unit_header interface_body . implementation_body TokEnd TokDot [ # ]
## Transitions:
-- On TokVar shift to state 1
-- On TokType shift to state 219
-- On TokProcedure shift to state 228
-- On TokImplementation shift to state 594
-- On TokFunction shift to state 309
-- On variable_decl shift to state 586
-- On type_def shift to state 588
-- On procedure_heading shift to state 589
-- On procedure_declaration shift to state 591
-- On interface_body_element shift to state 596
-- On implementation_body shift to state 606
-- On function_heading shift to state 602
-- On function_declaration shift to state 604
## Reductions:

State 606:
## Known stack suffix:
## unit_header interface_body implementation_body
## LR(1) items:
unit_body -> unit_header interface_body implementation_body . statements TokDot [ # ]
unit_body -> unit_header interface_body implementation_body . TokEnd TokDot [ # ]
## Transitions:
-- On TokEnd shift to state 607
-- On TokBegin shift to state 341
-- On statements shift to state 609
## Reductions:

State 607:
## Known stack suffix:
## unit_header interface_body implementation_body TokEnd
## LR(1) items:
unit_body -> unit_header interface_body implementation_body TokEnd . TokDot [ # ]
## Transitions:
-- On TokDot shift to state 608
## Reductions:

State 608:
## Known stack suffix:
## unit_header interface_body implementation_body TokEnd TokDot
## LR(1) items:
unit_body -> unit_header interface_body implementation_body TokEnd TokDot . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production unit_body -> unit_header interface_body implementation_body TokEnd TokDot

State 609:
## Known stack suffix:
## unit_header interface_body implementation_body statements
## LR(1) items:
unit_body -> unit_header interface_body implementation_body statements . TokDot [ # ]
## Transitions:
-- On TokDot shift to state 610
## Reductions:

State 610:
## Known stack suffix:
## unit_header interface_body implementation_body statements TokDot
## LR(1) items:
unit_body -> unit_header interface_body implementation_body statements TokDot . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production unit_body -> unit_header interface_body implementation_body statements TokDot

State 611:
## Known stack suffix:
## unit_body
## LR(1) items:
console -> unit_body . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production console -> unit_body

State 612:
## Known stack suffix:
## statement
## LR(1) items:
console -> statement . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production console -> statement

State 613:
## Known stack suffix:
## program_header
## LR(1) items:
program -> program_header . uses_clause program_body [ # ]
program -> program_header . program_body [ # ]
## Transitions:
-- On TokVar shift to state 1
-- On TokUses shift to state 583
-- On TokType shift to state 219
-- On TokProcedure shift to state 228
-- On TokOperator shift to state 276
-- On TokLabel shift to state 301
-- On TokFunction shift to state 309
-- On TokException shift to state 321
-- On TokConst shift to state 328
-- On TokBegin shift to state 341
-- On variable_decl shift to state 506
-- On uses_clause shift to state 614
-- On type_def shift to state 507
-- On statements shift to state 508
-- On program_body shift to state 617
-- On procedure_heading shift to state 514
-- On procedure_definition shift to state 523
-- On procedure_declaration shift to state 524
-- On operator_heading shift to state 527
-- On label_declaration shift to state 529
-- On function_heading shift to state 530
-- On function_definition shift to state 538
-- On function_declaration shift to state 539
-- On exception_declaration shift to state 542
-- On constant_declaration shift to state 543
-- On block_list shift to state 616
-- On block shift to state 548
## Reductions:

State 614:
## Known stack suffix:
## program_header uses_clause
## LR(1) items:
program -> program_header uses_clause . program_body [ # ]
## Transitions:
-- On TokVar shift to state 1
-- On TokType shift to state 219
-- On TokProcedure shift to state 228
-- On TokOperator shift to state 276
-- On TokLabel shift to state 301
-- On TokFunction shift to state 309
-- On TokException shift to state 321
-- On TokConst shift to state 328
-- On TokBegin shift to state 341
-- On variable_decl shift to state 506
-- On type_def shift to state 507
-- On statements shift to state 508
-- On program_body shift to state 615
-- On procedure_heading shift to state 514
-- On procedure_definition shift to state 523
-- On procedure_declaration shift to state 524
-- On operator_heading shift to state 527
-- On label_declaration shift to state 529
-- On function_heading shift to state 530
-- On function_definition shift to state 538
-- On function_declaration shift to state 539
-- On exception_declaration shift to state 542
-- On constant_declaration shift to state 543
-- On block_list shift to state 616
-- On block shift to state 548
## Reductions:

State 615:
## Known stack suffix:
## program_header uses_clause program_body
## LR(1) items:
program -> program_header uses_clause program_body . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production program -> program_header uses_clause program_body

State 616:
## Known stack suffix:
## block_list
## LR(1) items:
block_list -> block_list . block [ TokVar TokType TokProcedure TokOperator TokLabel TokFunction TokException TokDot TokConst TokBegin ]
program_body -> block_list . statements TokDot [ # ]
program_body -> block_list . statements TokAnd TokReturn TokDot [ # ]
program_body -> block_list . TokDot [ # ]
## Transitions:
-- On TokVar shift to state 1
-- On TokType shift to state 219
-- On TokProcedure shift to state 228
-- On TokOperator shift to state 276
-- On TokLabel shift to state 301
-- On TokFunction shift to state 309
-- On TokException shift to state 321
-- On TokDot shift to state 564
-- On TokConst shift to state 328
-- On TokBegin shift to state 341
-- On variable_decl shift to state 506
-- On type_def shift to state 507
-- On statements shift to state 565
-- On procedure_heading shift to state 514
-- On procedure_definition shift to state 523
-- On procedure_declaration shift to state 524
-- On operator_heading shift to state 527
-- On label_declaration shift to state 529
-- On function_heading shift to state 530
-- On function_definition shift to state 538
-- On function_declaration shift to state 539
-- On exception_declaration shift to state 542
-- On constant_declaration shift to state 543
-- On block shift to state 547
## Reductions:

State 617:
## Known stack suffix:
## program_header program_body
## LR(1) items:
program -> program_header program_body . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production program -> program_header program_body

State 618:
## Known stack suffix:
## program
## LR(1) items:
console -> program . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production console -> program

State 619:
## Known stack suffix:
## console
## LR(1) items:
console' -> console . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept console

State 620:
## Known stack suffix:
##
## LR(1) items:
program' -> . program [ # ]
## Transitions:
-- On TokProgram shift to state 574
-- On program_header shift to state 613
-- On program shift to state 621
## Reductions:

State 621:
## Known stack suffix:
## program
## LR(1) items:
program' -> program . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept program

State 622:
## Known stack suffix:
##
## LR(1) items:
unit_body' -> . unit_body [ # ]
## Transitions:
-- On TokUnit shift to state 571
-- On unit_header shift to state 582
-- On unit_body shift to state 623
## Reductions:

State 623:
## Known stack suffix:
## unit_body
## LR(1) items:
unit_body' -> unit_body . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept unit_body

