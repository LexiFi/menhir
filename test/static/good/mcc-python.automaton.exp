State 0:
file_input' -> . file_input [ # ]
-- On While shift to state 1
-- On Try shift to state 201
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 363
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On If shift to state 301
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On For shift to state 314
-- On Float shift to state 33
-- On Del shift to state 232
-- On Def shift to state 323
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Class shift to state 333
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On while_stmt shift to state 344
-- On u_expr shift to state 38
-- On try_stmt shift to state 345
-- On try_fin_stmt shift to state 346
-- On try_exc_stmt shift to state 347
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 348
-- On statement shift to state 364
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On if_stmt shift to state 353
-- On global_stmt shift to state 270
-- On funcdef shift to state 354
-- On for_stmt shift to state 355
-- On file_input_list shift to state 365
-- On file_input shift to state 368
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On compound_stmt shift to state 356
-- On comparison shift to state 94
-- On classdef shift to state 357
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 1:
while_stmt -> While . expression Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
while_stmt -> While . expression Colon suite Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 182
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 2:
u_expr -> Tilde . u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 181
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54

State 3:
literal -> String . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production literal -> String 
-- On StarStar reduce production literal -> String 
-- On StarEqual reduce production literal -> String 
-- On Star reduce production literal -> String 
-- On SlashEqual reduce production literal -> String 
-- On Slash reduce production literal -> String 
-- On Semicolon reduce production literal -> String 
-- On RightshiftEqual reduce production literal -> String 
-- On Rightshift reduce production literal -> String 
-- On Rightparen reduce production literal -> String 
-- On Rightbracket reduce production literal -> String 
-- On Rightbrace reduce production literal -> String 
-- On PlusEqual reduce production literal -> String 
-- On Plus reduce production literal -> String 
-- On Period reduce production literal -> String 
-- On PercentEqual reduce production literal -> String 
-- On Percent reduce production literal -> String 
-- On Or reduce production literal -> String 
-- On NotEqual reduce production literal -> String 
-- On Not reduce production literal -> String 
-- On Newline reduce production literal -> String 
-- On LessthanEq reduce production literal -> String 
-- On Lessthan reduce production literal -> String 
-- On LeftshiftEqual reduce production literal -> String 
-- On Leftshift reduce production literal -> String 
-- On Leftparen reduce production literal -> String 
-- On Leftbracket reduce production literal -> String 
-- On Is reduce production literal -> String 
-- On In reduce production literal -> String 
-- On GreaterthanEq reduce production literal -> String 
-- On Greaterthan reduce production literal -> String 
-- On EqualEqual reduce production literal -> String 
-- On Equal reduce production literal -> String 
-- On DashEqual reduce production literal -> String 
-- On Dash reduce production literal -> String 
-- On Comma reduce production literal -> String 
-- On Colon reduce production literal -> String 
-- On CaretEqual reduce production literal -> String 
-- On Caret reduce production literal -> String 
-- On BarEqual reduce production literal -> String 
-- On Bar reduce production literal -> String 
-- On Backquote reduce production literal -> String 
-- On And reduce production literal -> String 
-- On AmpersandEqual reduce production literal -> String 
-- On Ampersand reduce production literal -> String 

State 4:
u_expr -> Plus . u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 180
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54

State 5:
literal -> Longinteger . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production literal -> Longinteger 
-- On StarStar reduce production literal -> Longinteger 
-- On StarEqual reduce production literal -> Longinteger 
-- On Star reduce production literal -> Longinteger 
-- On SlashEqual reduce production literal -> Longinteger 
-- On Slash reduce production literal -> Longinteger 
-- On Semicolon reduce production literal -> Longinteger 
-- On RightshiftEqual reduce production literal -> Longinteger 
-- On Rightshift reduce production literal -> Longinteger 
-- On Rightparen reduce production literal -> Longinteger 
-- On Rightbracket reduce production literal -> Longinteger 
-- On Rightbrace reduce production literal -> Longinteger 
-- On PlusEqual reduce production literal -> Longinteger 
-- On Plus reduce production literal -> Longinteger 
-- On Period reduce production literal -> Longinteger 
-- On PercentEqual reduce production literal -> Longinteger 
-- On Percent reduce production literal -> Longinteger 
-- On Or reduce production literal -> Longinteger 
-- On NotEqual reduce production literal -> Longinteger 
-- On Not reduce production literal -> Longinteger 
-- On Newline reduce production literal -> Longinteger 
-- On LessthanEq reduce production literal -> Longinteger 
-- On Lessthan reduce production literal -> Longinteger 
-- On LeftshiftEqual reduce production literal -> Longinteger 
-- On Leftshift reduce production literal -> Longinteger 
-- On Leftparen reduce production literal -> Longinteger 
-- On Leftbracket reduce production literal -> Longinteger 
-- On Is reduce production literal -> Longinteger 
-- On In reduce production literal -> Longinteger 
-- On GreaterthanEq reduce production literal -> Longinteger 
-- On Greaterthan reduce production literal -> Longinteger 
-- On EqualEqual reduce production literal -> Longinteger 
-- On Equal reduce production literal -> Longinteger 
-- On DashEqual reduce production literal -> Longinteger 
-- On Dash reduce production literal -> Longinteger 
-- On Comma reduce production literal -> Longinteger 
-- On Colon reduce production literal -> Longinteger 
-- On CaretEqual reduce production literal -> Longinteger 
-- On Caret reduce production literal -> Longinteger 
-- On BarEqual reduce production literal -> Longinteger 
-- On Bar reduce production literal -> Longinteger 
-- On Backquote reduce production literal -> Longinteger 
-- On And reduce production literal -> Longinteger 
-- On AmpersandEqual reduce production literal -> Longinteger 
-- On Ampersand reduce production literal -> Longinteger 

State 6:
parenth_form -> Leftparen . Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
parenth_form -> Leftparen . expr_list_without_comma Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
parenth_form -> Leftparen . expr_list_without_comma Comma Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Rightparen shift to state 7
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 176
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 7:
parenth_form -> Leftparen Rightparen . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production parenth_form -> Leftparen Rightparen 
-- On StarStar reduce production parenth_form -> Leftparen Rightparen 
-- On StarEqual reduce production parenth_form -> Leftparen Rightparen 
-- On Star reduce production parenth_form -> Leftparen Rightparen 
-- On SlashEqual reduce production parenth_form -> Leftparen Rightparen 
-- On Slash reduce production parenth_form -> Leftparen Rightparen 
-- On Semicolon reduce production parenth_form -> Leftparen Rightparen 
-- On RightshiftEqual reduce production parenth_form -> Leftparen Rightparen 
-- On Rightshift reduce production parenth_form -> Leftparen Rightparen 
-- On Rightparen reduce production parenth_form -> Leftparen Rightparen 
-- On Rightbracket reduce production parenth_form -> Leftparen Rightparen 
-- On Rightbrace reduce production parenth_form -> Leftparen Rightparen 
-- On PlusEqual reduce production parenth_form -> Leftparen Rightparen 
-- On Plus reduce production parenth_form -> Leftparen Rightparen 
-- On Period reduce production parenth_form -> Leftparen Rightparen 
-- On PercentEqual reduce production parenth_form -> Leftparen Rightparen 
-- On Percent reduce production parenth_form -> Leftparen Rightparen 
-- On Or reduce production parenth_form -> Leftparen Rightparen 
-- On NotEqual reduce production parenth_form -> Leftparen Rightparen 
-- On Not reduce production parenth_form -> Leftparen Rightparen 
-- On Newline reduce production parenth_form -> Leftparen Rightparen 
-- On LessthanEq reduce production parenth_form -> Leftparen Rightparen 
-- On Lessthan reduce production parenth_form -> Leftparen Rightparen 
-- On LeftshiftEqual reduce production parenth_form -> Leftparen Rightparen 
-- On Leftshift reduce production parenth_form -> Leftparen Rightparen 
-- On Leftparen reduce production parenth_form -> Leftparen Rightparen 
-- On Leftbracket reduce production parenth_form -> Leftparen Rightparen 
-- On Is reduce production parenth_form -> Leftparen Rightparen 
-- On In reduce production parenth_form -> Leftparen Rightparen 
-- On GreaterthanEq reduce production parenth_form -> Leftparen Rightparen 
-- On Greaterthan reduce production parenth_form -> Leftparen Rightparen 
-- On EqualEqual reduce production parenth_form -> Leftparen Rightparen 
-- On Equal reduce production parenth_form -> Leftparen Rightparen 
-- On DashEqual reduce production parenth_form -> Leftparen Rightparen 
-- On Dash reduce production parenth_form -> Leftparen Rightparen 
-- On Comma reduce production parenth_form -> Leftparen Rightparen 
-- On Colon reduce production parenth_form -> Leftparen Rightparen 
-- On CaretEqual reduce production parenth_form -> Leftparen Rightparen 
-- On Caret reduce production parenth_form -> Leftparen Rightparen 
-- On BarEqual reduce production parenth_form -> Leftparen Rightparen 
-- On Bar reduce production parenth_form -> Leftparen Rightparen 
-- On Backquote reduce production parenth_form -> Leftparen Rightparen 
-- On And reduce production parenth_form -> Leftparen Rightparen 
-- On AmpersandEqual reduce production parenth_form -> Leftparen Rightparen 
-- On Ampersand reduce production parenth_form -> Leftparen Rightparen 

State 8:
not_test -> Not . not_test [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote And ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_expr shift to state 73
-- On not_test shift to state 175
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 9:
list_display -> Leftbracket . Rightbracket [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
list_display -> Leftbracket . listmaker Rightbracket [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Rightbracket shift to state 10
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On listmaker shift to state 170
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 174
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 10:
list_display -> Leftbracket Rightbracket . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production list_display -> Leftbracket Rightbracket 
-- On StarStar reduce production list_display -> Leftbracket Rightbracket 
-- On StarEqual reduce production list_display -> Leftbracket Rightbracket 
-- On Star reduce production list_display -> Leftbracket Rightbracket 
-- On SlashEqual reduce production list_display -> Leftbracket Rightbracket 
-- On Slash reduce production list_display -> Leftbracket Rightbracket 
-- On Semicolon reduce production list_display -> Leftbracket Rightbracket 
-- On RightshiftEqual reduce production list_display -> Leftbracket Rightbracket 
-- On Rightshift reduce production list_display -> Leftbracket Rightbracket 
-- On Rightparen reduce production list_display -> Leftbracket Rightbracket 
-- On Rightbracket reduce production list_display -> Leftbracket Rightbracket 
-- On Rightbrace reduce production list_display -> Leftbracket Rightbracket 
-- On PlusEqual reduce production list_display -> Leftbracket Rightbracket 
-- On Plus reduce production list_display -> Leftbracket Rightbracket 
-- On Period reduce production list_display -> Leftbracket Rightbracket 
-- On PercentEqual reduce production list_display -> Leftbracket Rightbracket 
-- On Percent reduce production list_display -> Leftbracket Rightbracket 
-- On Or reduce production list_display -> Leftbracket Rightbracket 
-- On NotEqual reduce production list_display -> Leftbracket Rightbracket 
-- On Not reduce production list_display -> Leftbracket Rightbracket 
-- On Newline reduce production list_display -> Leftbracket Rightbracket 
-- On LessthanEq reduce production list_display -> Leftbracket Rightbracket 
-- On Lessthan reduce production list_display -> Leftbracket Rightbracket 
-- On LeftshiftEqual reduce production list_display -> Leftbracket Rightbracket 
-- On Leftshift reduce production list_display -> Leftbracket Rightbracket 
-- On Leftparen reduce production list_display -> Leftbracket Rightbracket 
-- On Leftbracket reduce production list_display -> Leftbracket Rightbracket 
-- On Is reduce production list_display -> Leftbracket Rightbracket 
-- On In reduce production list_display -> Leftbracket Rightbracket 
-- On GreaterthanEq reduce production list_display -> Leftbracket Rightbracket 
-- On Greaterthan reduce production list_display -> Leftbracket Rightbracket 
-- On EqualEqual reduce production list_display -> Leftbracket Rightbracket 
-- On Equal reduce production list_display -> Leftbracket Rightbracket 
-- On DashEqual reduce production list_display -> Leftbracket Rightbracket 
-- On Dash reduce production list_display -> Leftbracket Rightbracket 
-- On Comma reduce production list_display -> Leftbracket Rightbracket 
-- On Colon reduce production list_display -> Leftbracket Rightbracket 
-- On CaretEqual reduce production list_display -> Leftbracket Rightbracket 
-- On Caret reduce production list_display -> Leftbracket Rightbracket 
-- On BarEqual reduce production list_display -> Leftbracket Rightbracket 
-- On Bar reduce production list_display -> Leftbracket Rightbracket 
-- On Backquote reduce production list_display -> Leftbracket Rightbracket 
-- On And reduce production list_display -> Leftbracket Rightbracket 
-- On AmpersandEqual reduce production list_display -> Leftbracket Rightbracket 
-- On Ampersand reduce production list_display -> Leftbracket Rightbracket 

State 11:
dict_display -> Leftbrace . Rightbrace [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
dict_display -> Leftbrace . key_datum_list Rightbrace [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Rightbrace shift to state 12
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On key_datum_list_without_comma shift to state 161
-- On key_datum_list shift to state 167
-- On key_datum shift to state 169
-- On expression shift to state 164
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 12:
dict_display -> Leftbrace Rightbrace . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production dict_display -> Leftbrace Rightbrace 
-- On StarStar reduce production dict_display -> Leftbrace Rightbrace 
-- On StarEqual reduce production dict_display -> Leftbrace Rightbrace 
-- On Star reduce production dict_display -> Leftbrace Rightbrace 
-- On SlashEqual reduce production dict_display -> Leftbrace Rightbrace 
-- On Slash reduce production dict_display -> Leftbrace Rightbrace 
-- On Semicolon reduce production dict_display -> Leftbrace Rightbrace 
-- On RightshiftEqual reduce production dict_display -> Leftbrace Rightbrace 
-- On Rightshift reduce production dict_display -> Leftbrace Rightbrace 
-- On Rightparen reduce production dict_display -> Leftbrace Rightbrace 
-- On Rightbracket reduce production dict_display -> Leftbrace Rightbrace 
-- On Rightbrace reduce production dict_display -> Leftbrace Rightbrace 
-- On PlusEqual reduce production dict_display -> Leftbrace Rightbrace 
-- On Plus reduce production dict_display -> Leftbrace Rightbrace 
-- On Period reduce production dict_display -> Leftbrace Rightbrace 
-- On PercentEqual reduce production dict_display -> Leftbrace Rightbrace 
-- On Percent reduce production dict_display -> Leftbrace Rightbrace 
-- On Or reduce production dict_display -> Leftbrace Rightbrace 
-- On NotEqual reduce production dict_display -> Leftbrace Rightbrace 
-- On Not reduce production dict_display -> Leftbrace Rightbrace 
-- On Newline reduce production dict_display -> Leftbrace Rightbrace 
-- On LessthanEq reduce production dict_display -> Leftbrace Rightbrace 
-- On Lessthan reduce production dict_display -> Leftbrace Rightbrace 
-- On LeftshiftEqual reduce production dict_display -> Leftbrace Rightbrace 
-- On Leftshift reduce production dict_display -> Leftbrace Rightbrace 
-- On Leftparen reduce production dict_display -> Leftbrace Rightbrace 
-- On Leftbracket reduce production dict_display -> Leftbrace Rightbrace 
-- On Is reduce production dict_display -> Leftbrace Rightbrace 
-- On In reduce production dict_display -> Leftbrace Rightbrace 
-- On GreaterthanEq reduce production dict_display -> Leftbrace Rightbrace 
-- On Greaterthan reduce production dict_display -> Leftbrace Rightbrace 
-- On EqualEqual reduce production dict_display -> Leftbrace Rightbrace 
-- On Equal reduce production dict_display -> Leftbrace Rightbrace 
-- On DashEqual reduce production dict_display -> Leftbrace Rightbrace 
-- On Dash reduce production dict_display -> Leftbrace Rightbrace 
-- On Comma reduce production dict_display -> Leftbrace Rightbrace 
-- On Colon reduce production dict_display -> Leftbrace Rightbrace 
-- On CaretEqual reduce production dict_display -> Leftbrace Rightbrace 
-- On Caret reduce production dict_display -> Leftbrace Rightbrace 
-- On BarEqual reduce production dict_display -> Leftbrace Rightbrace 
-- On Bar reduce production dict_display -> Leftbrace Rightbrace 
-- On Backquote reduce production dict_display -> Leftbrace Rightbrace 
-- On And reduce production dict_display -> Leftbrace Rightbrace 
-- On AmpersandEqual reduce production dict_display -> Leftbrace Rightbrace 
-- On Ampersand reduce production dict_display -> Leftbrace Rightbrace 

State 13:
lambda_form -> Lambda . Colon expression [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
lambda_form -> Lambda . parameter_list Colon expression [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
-- On StarStar shift to state 14
-- On Star shift to state 16
-- On Leftparen shift to state 21
-- On Identifier shift to state 22
-- On Colon shift to state 29
-- On parameter_list shift to state 143
-- On parameter shift to state 146
-- On defparams shift to state 149
-- On defparam shift to state 160

State 14:
parameter_list -> StarStar . Identifier [ Rightparen Colon ]
-- On Identifier shift to state 15

State 15:
parameter_list -> StarStar Identifier . [ Rightparen Colon ]
-- On Rightparen reduce production parameter_list -> StarStar Identifier 
-- On Colon reduce production parameter_list -> StarStar Identifier 

State 16:
parameter_list -> Star . Identifier [ Rightparen Colon ]
parameter_list -> Star . Identifier Comma StarStar Identifier [ Rightparen Colon ]
-- On Identifier shift to state 17

State 17:
parameter_list -> Star Identifier . [ Rightparen Colon ]
parameter_list -> Star Identifier . Comma StarStar Identifier [ Rightparen Colon ]
-- On Comma shift to state 18
-- On Rightparen reduce production parameter_list -> Star Identifier 
-- On Colon reduce production parameter_list -> Star Identifier 

State 18:
parameter_list -> Star Identifier Comma . StarStar Identifier [ Rightparen Colon ]
-- On StarStar shift to state 19

State 19:
parameter_list -> Star Identifier Comma StarStar . Identifier [ Rightparen Colon ]
-- On Identifier shift to state 20

State 20:
parameter_list -> Star Identifier Comma StarStar Identifier . [ Rightparen Colon ]
-- On Rightparen reduce production parameter_list -> Star Identifier Comma StarStar Identifier 
-- On Colon reduce production parameter_list -> Star Identifier Comma StarStar Identifier 

State 21:
parameter -> Leftparen . sublist Rightparen [ Rightparen Equal Comma Colon ]
-- On Leftparen shift to state 21
-- On Identifier shift to state 22
-- On sublist_without_comma shift to state 23
-- On sublist shift to state 26
-- On parameter shift to state 28

State 22:
parameter -> Identifier . [ Rightparen Equal Comma Colon ]
-- On Rightparen reduce production parameter -> Identifier 
-- On Equal reduce production parameter -> Identifier 
-- On Comma reduce production parameter -> Identifier 
-- On Colon reduce production parameter -> Identifier 

State 23:
sublist -> sublist_without_comma . [ Rightparen ]
sublist -> sublist_without_comma . Comma [ Rightparen ]
sublist_without_comma -> sublist_without_comma . Comma parameter [ Rightparen Comma ]
-- On Comma shift to state 24
-- On Rightparen reduce production sublist -> sublist_without_comma 

State 24:
sublist -> sublist_without_comma Comma . [ Rightparen ]
sublist_without_comma -> sublist_without_comma Comma . parameter [ Rightparen Comma ]
-- On Leftparen shift to state 21
-- On Identifier shift to state 22
-- On parameter shift to state 25
-- On Rightparen reduce production sublist -> sublist_without_comma Comma 

State 25:
sublist_without_comma -> sublist_without_comma Comma parameter . [ Rightparen Comma ]
-- On Rightparen reduce production sublist_without_comma -> sublist_without_comma Comma parameter 
-- On Comma reduce production sublist_without_comma -> sublist_without_comma Comma parameter 

State 26:
parameter -> Leftparen sublist . Rightparen [ Rightparen Equal Comma Colon ]
-- On Rightparen shift to state 27

State 27:
parameter -> Leftparen sublist Rightparen . [ Rightparen Equal Comma Colon ]
-- On Rightparen reduce production parameter -> Leftparen sublist Rightparen 
-- On Equal reduce production parameter -> Leftparen sublist Rightparen 
-- On Comma reduce production parameter -> Leftparen sublist Rightparen 
-- On Colon reduce production parameter -> Leftparen sublist Rightparen 

State 28:
sublist_without_comma -> parameter . [ Rightparen Comma ]
-- On Rightparen reduce production sublist_without_comma -> parameter 
-- On Comma reduce production sublist_without_comma -> parameter 

State 29:
lambda_form -> Lambda Colon . expression [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 142
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 30:
literal -> Integer . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production literal -> Integer 
-- On StarStar reduce production literal -> Integer 
-- On StarEqual reduce production literal -> Integer 
-- On Star reduce production literal -> Integer 
-- On SlashEqual reduce production literal -> Integer 
-- On Slash reduce production literal -> Integer 
-- On Semicolon reduce production literal -> Integer 
-- On RightshiftEqual reduce production literal -> Integer 
-- On Rightshift reduce production literal -> Integer 
-- On Rightparen reduce production literal -> Integer 
-- On Rightbracket reduce production literal -> Integer 
-- On Rightbrace reduce production literal -> Integer 
-- On PlusEqual reduce production literal -> Integer 
-- On Plus reduce production literal -> Integer 
-- On Period reduce production literal -> Integer 
-- On PercentEqual reduce production literal -> Integer 
-- On Percent reduce production literal -> Integer 
-- On Or reduce production literal -> Integer 
-- On NotEqual reduce production literal -> Integer 
-- On Not reduce production literal -> Integer 
-- On Newline reduce production literal -> Integer 
-- On LessthanEq reduce production literal -> Integer 
-- On Lessthan reduce production literal -> Integer 
-- On LeftshiftEqual reduce production literal -> Integer 
-- On Leftshift reduce production literal -> Integer 
-- On Leftparen reduce production literal -> Integer 
-- On Leftbracket reduce production literal -> Integer 
-- On Is reduce production literal -> Integer 
-- On In reduce production literal -> Integer 
-- On GreaterthanEq reduce production literal -> Integer 
-- On Greaterthan reduce production literal -> Integer 
-- On EqualEqual reduce production literal -> Integer 
-- On Equal reduce production literal -> Integer 
-- On DashEqual reduce production literal -> Integer 
-- On Dash reduce production literal -> Integer 
-- On Comma reduce production literal -> Integer 
-- On Colon reduce production literal -> Integer 
-- On CaretEqual reduce production literal -> Integer 
-- On Caret reduce production literal -> Integer 
-- On BarEqual reduce production literal -> Integer 
-- On Bar reduce production literal -> Integer 
-- On Backquote reduce production literal -> Integer 
-- On And reduce production literal -> Integer 
-- On AmpersandEqual reduce production literal -> Integer 
-- On Ampersand reduce production literal -> Integer 

State 31:
literal -> Imaginary . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production literal -> Imaginary 
-- On StarStar reduce production literal -> Imaginary 
-- On StarEqual reduce production literal -> Imaginary 
-- On Star reduce production literal -> Imaginary 
-- On SlashEqual reduce production literal -> Imaginary 
-- On Slash reduce production literal -> Imaginary 
-- On Semicolon reduce production literal -> Imaginary 
-- On RightshiftEqual reduce production literal -> Imaginary 
-- On Rightshift reduce production literal -> Imaginary 
-- On Rightparen reduce production literal -> Imaginary 
-- On Rightbracket reduce production literal -> Imaginary 
-- On Rightbrace reduce production literal -> Imaginary 
-- On PlusEqual reduce production literal -> Imaginary 
-- On Plus reduce production literal -> Imaginary 
-- On Period reduce production literal -> Imaginary 
-- On PercentEqual reduce production literal -> Imaginary 
-- On Percent reduce production literal -> Imaginary 
-- On Or reduce production literal -> Imaginary 
-- On NotEqual reduce production literal -> Imaginary 
-- On Not reduce production literal -> Imaginary 
-- On Newline reduce production literal -> Imaginary 
-- On LessthanEq reduce production literal -> Imaginary 
-- On Lessthan reduce production literal -> Imaginary 
-- On LeftshiftEqual reduce production literal -> Imaginary 
-- On Leftshift reduce production literal -> Imaginary 
-- On Leftparen reduce production literal -> Imaginary 
-- On Leftbracket reduce production literal -> Imaginary 
-- On Is reduce production literal -> Imaginary 
-- On In reduce production literal -> Imaginary 
-- On GreaterthanEq reduce production literal -> Imaginary 
-- On Greaterthan reduce production literal -> Imaginary 
-- On EqualEqual reduce production literal -> Imaginary 
-- On Equal reduce production literal -> Imaginary 
-- On DashEqual reduce production literal -> Imaginary 
-- On Dash reduce production literal -> Imaginary 
-- On Comma reduce production literal -> Imaginary 
-- On Colon reduce production literal -> Imaginary 
-- On CaretEqual reduce production literal -> Imaginary 
-- On Caret reduce production literal -> Imaginary 
-- On BarEqual reduce production literal -> Imaginary 
-- On Bar reduce production literal -> Imaginary 
-- On Backquote reduce production literal -> Imaginary 
-- On And reduce production literal -> Imaginary 
-- On AmpersandEqual reduce production literal -> Imaginary 
-- On Ampersand reduce production literal -> Imaginary 

State 32:
atom -> Identifier . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production atom -> Identifier 
-- On StarStar reduce production atom -> Identifier 
-- On StarEqual reduce production atom -> Identifier 
-- On Star reduce production atom -> Identifier 
-- On SlashEqual reduce production atom -> Identifier 
-- On Slash reduce production atom -> Identifier 
-- On Semicolon reduce production atom -> Identifier 
-- On RightshiftEqual reduce production atom -> Identifier 
-- On Rightshift reduce production atom -> Identifier 
-- On Rightparen reduce production atom -> Identifier 
-- On Rightbracket reduce production atom -> Identifier 
-- On Rightbrace reduce production atom -> Identifier 
-- On PlusEqual reduce production atom -> Identifier 
-- On Plus reduce production atom -> Identifier 
-- On Period reduce production atom -> Identifier 
-- On PercentEqual reduce production atom -> Identifier 
-- On Percent reduce production atom -> Identifier 
-- On Or reduce production atom -> Identifier 
-- On NotEqual reduce production atom -> Identifier 
-- On Not reduce production atom -> Identifier 
-- On Newline reduce production atom -> Identifier 
-- On LessthanEq reduce production atom -> Identifier 
-- On Lessthan reduce production atom -> Identifier 
-- On LeftshiftEqual reduce production atom -> Identifier 
-- On Leftshift reduce production atom -> Identifier 
-- On Leftparen reduce production atom -> Identifier 
-- On Leftbracket reduce production atom -> Identifier 
-- On Is reduce production atom -> Identifier 
-- On In reduce production atom -> Identifier 
-- On GreaterthanEq reduce production atom -> Identifier 
-- On Greaterthan reduce production atom -> Identifier 
-- On EqualEqual reduce production atom -> Identifier 
-- On Equal reduce production atom -> Identifier 
-- On DashEqual reduce production atom -> Identifier 
-- On Dash reduce production atom -> Identifier 
-- On Comma reduce production atom -> Identifier 
-- On Colon reduce production atom -> Identifier 
-- On CaretEqual reduce production atom -> Identifier 
-- On Caret reduce production atom -> Identifier 
-- On BarEqual reduce production atom -> Identifier 
-- On Bar reduce production atom -> Identifier 
-- On Backquote reduce production atom -> Identifier 
-- On And reduce production atom -> Identifier 
-- On AmpersandEqual reduce production atom -> Identifier 
-- On Ampersand reduce production atom -> Identifier 

State 33:
literal -> Float . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production literal -> Float 
-- On StarStar reduce production literal -> Float 
-- On StarEqual reduce production literal -> Float 
-- On Star reduce production literal -> Float 
-- On SlashEqual reduce production literal -> Float 
-- On Slash reduce production literal -> Float 
-- On Semicolon reduce production literal -> Float 
-- On RightshiftEqual reduce production literal -> Float 
-- On Rightshift reduce production literal -> Float 
-- On Rightparen reduce production literal -> Float 
-- On Rightbracket reduce production literal -> Float 
-- On Rightbrace reduce production literal -> Float 
-- On PlusEqual reduce production literal -> Float 
-- On Plus reduce production literal -> Float 
-- On Period reduce production literal -> Float 
-- On PercentEqual reduce production literal -> Float 
-- On Percent reduce production literal -> Float 
-- On Or reduce production literal -> Float 
-- On NotEqual reduce production literal -> Float 
-- On Not reduce production literal -> Float 
-- On Newline reduce production literal -> Float 
-- On LessthanEq reduce production literal -> Float 
-- On Lessthan reduce production literal -> Float 
-- On LeftshiftEqual reduce production literal -> Float 
-- On Leftshift reduce production literal -> Float 
-- On Leftparen reduce production literal -> Float 
-- On Leftbracket reduce production literal -> Float 
-- On Is reduce production literal -> Float 
-- On In reduce production literal -> Float 
-- On GreaterthanEq reduce production literal -> Float 
-- On Greaterthan reduce production literal -> Float 
-- On EqualEqual reduce production literal -> Float 
-- On Equal reduce production literal -> Float 
-- On DashEqual reduce production literal -> Float 
-- On Dash reduce production literal -> Float 
-- On Comma reduce production literal -> Float 
-- On Colon reduce production literal -> Float 
-- On CaretEqual reduce production literal -> Float 
-- On Caret reduce production literal -> Float 
-- On BarEqual reduce production literal -> Float 
-- On Bar reduce production literal -> Float 
-- On Backquote reduce production literal -> Float 
-- On And reduce production literal -> Float 
-- On AmpersandEqual reduce production literal -> Float 
-- On Ampersand reduce production literal -> Float 

State 34:
u_expr -> Dash . u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 141
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54

State 35:
string_conversion -> Backquote . expr_list_without_comma Backquote [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 137
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 36:
or_expr -> xor_expr . [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Bar Backquote And ]
xor_expr -> xor_expr . Caret and_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And ]
-- On Caret shift to state 37
-- On Semicolon reduce production or_expr -> xor_expr 
-- On Rightparen reduce production or_expr -> xor_expr 
-- On Rightbracket reduce production or_expr -> xor_expr 
-- On Rightbrace reduce production or_expr -> xor_expr 
-- On Or reduce production or_expr -> xor_expr 
-- On NotEqual reduce production or_expr -> xor_expr 
-- On Not reduce production or_expr -> xor_expr 
-- On Newline reduce production or_expr -> xor_expr 
-- On LessthanEq reduce production or_expr -> xor_expr 
-- On Lessthan reduce production or_expr -> xor_expr 
-- On Is reduce production or_expr -> xor_expr 
-- On In reduce production or_expr -> xor_expr 
-- On GreaterthanEq reduce production or_expr -> xor_expr 
-- On Greaterthan reduce production or_expr -> xor_expr 
-- On EqualEqual reduce production or_expr -> xor_expr 
-- On Equal reduce production or_expr -> xor_expr 
-- On Comma reduce production or_expr -> xor_expr 
-- On Colon reduce production or_expr -> xor_expr 
-- On Bar reduce production or_expr -> xor_expr 
-- On Backquote reduce production or_expr -> xor_expr 
-- On And reduce production or_expr -> xor_expr 

State 37:
xor_expr -> xor_expr Caret . and_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_expr shift to state 135
-- On a_expr shift to state 92

State 38:
m_expr -> u_expr . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Star reduce production m_expr -> u_expr 
-- On Slash reduce production m_expr -> u_expr 
-- On Semicolon reduce production m_expr -> u_expr 
-- On Rightshift reduce production m_expr -> u_expr 
-- On Rightparen reduce production m_expr -> u_expr 
-- On Rightbracket reduce production m_expr -> u_expr 
-- On Rightbrace reduce production m_expr -> u_expr 
-- On Plus reduce production m_expr -> u_expr 
-- On Percent reduce production m_expr -> u_expr 
-- On Or reduce production m_expr -> u_expr 
-- On NotEqual reduce production m_expr -> u_expr 
-- On Not reduce production m_expr -> u_expr 
-- On Newline reduce production m_expr -> u_expr 
-- On LessthanEq reduce production m_expr -> u_expr 
-- On Lessthan reduce production m_expr -> u_expr 
-- On Leftshift reduce production m_expr -> u_expr 
-- On Is reduce production m_expr -> u_expr 
-- On In reduce production m_expr -> u_expr 
-- On GreaterthanEq reduce production m_expr -> u_expr 
-- On Greaterthan reduce production m_expr -> u_expr 
-- On EqualEqual reduce production m_expr -> u_expr 
-- On Equal reduce production m_expr -> u_expr 
-- On Dash reduce production m_expr -> u_expr 
-- On Comma reduce production m_expr -> u_expr 
-- On Colon reduce production m_expr -> u_expr 
-- On Caret reduce production m_expr -> u_expr 
-- On Bar reduce production m_expr -> u_expr 
-- On Backquote reduce production m_expr -> u_expr 
-- On And reduce production m_expr -> u_expr 
-- On Ampersand reduce production m_expr -> u_expr 

State 39:
enclosure -> string_conversion . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production enclosure -> string_conversion 
-- On StarStar reduce production enclosure -> string_conversion 
-- On StarEqual reduce production enclosure -> string_conversion 
-- On Star reduce production enclosure -> string_conversion 
-- On SlashEqual reduce production enclosure -> string_conversion 
-- On Slash reduce production enclosure -> string_conversion 
-- On Semicolon reduce production enclosure -> string_conversion 
-- On RightshiftEqual reduce production enclosure -> string_conversion 
-- On Rightshift reduce production enclosure -> string_conversion 
-- On Rightparen reduce production enclosure -> string_conversion 
-- On Rightbracket reduce production enclosure -> string_conversion 
-- On Rightbrace reduce production enclosure -> string_conversion 
-- On PlusEqual reduce production enclosure -> string_conversion 
-- On Plus reduce production enclosure -> string_conversion 
-- On Period reduce production enclosure -> string_conversion 
-- On PercentEqual reduce production enclosure -> string_conversion 
-- On Percent reduce production enclosure -> string_conversion 
-- On Or reduce production enclosure -> string_conversion 
-- On NotEqual reduce production enclosure -> string_conversion 
-- On Not reduce production enclosure -> string_conversion 
-- On Newline reduce production enclosure -> string_conversion 
-- On LessthanEq reduce production enclosure -> string_conversion 
-- On Lessthan reduce production enclosure -> string_conversion 
-- On LeftshiftEqual reduce production enclosure -> string_conversion 
-- On Leftshift reduce production enclosure -> string_conversion 
-- On Leftparen reduce production enclosure -> string_conversion 
-- On Leftbracket reduce production enclosure -> string_conversion 
-- On Is reduce production enclosure -> string_conversion 
-- On In reduce production enclosure -> string_conversion 
-- On GreaterthanEq reduce production enclosure -> string_conversion 
-- On Greaterthan reduce production enclosure -> string_conversion 
-- On EqualEqual reduce production enclosure -> string_conversion 
-- On Equal reduce production enclosure -> string_conversion 
-- On DashEqual reduce production enclosure -> string_conversion 
-- On Dash reduce production enclosure -> string_conversion 
-- On Comma reduce production enclosure -> string_conversion 
-- On Colon reduce production enclosure -> string_conversion 
-- On CaretEqual reduce production enclosure -> string_conversion 
-- On Caret reduce production enclosure -> string_conversion 
-- On BarEqual reduce production enclosure -> string_conversion 
-- On Bar reduce production enclosure -> string_conversion 
-- On Backquote reduce production enclosure -> string_conversion 
-- On And reduce production enclosure -> string_conversion 
-- On AmpersandEqual reduce production enclosure -> string_conversion 
-- On Ampersand reduce production enclosure -> string_conversion 

State 40:
primary -> slicing . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production primary -> slicing 
-- On StarStar reduce production primary -> slicing 
-- On StarEqual reduce production primary -> slicing 
-- On Star reduce production primary -> slicing 
-- On SlashEqual reduce production primary -> slicing 
-- On Slash reduce production primary -> slicing 
-- On Semicolon reduce production primary -> slicing 
-- On RightshiftEqual reduce production primary -> slicing 
-- On Rightshift reduce production primary -> slicing 
-- On Rightparen reduce production primary -> slicing 
-- On Rightbracket reduce production primary -> slicing 
-- On Rightbrace reduce production primary -> slicing 
-- On PlusEqual reduce production primary -> slicing 
-- On Plus reduce production primary -> slicing 
-- On Period reduce production primary -> slicing 
-- On PercentEqual reduce production primary -> slicing 
-- On Percent reduce production primary -> slicing 
-- On Or reduce production primary -> slicing 
-- On NotEqual reduce production primary -> slicing 
-- On Not reduce production primary -> slicing 
-- On Newline reduce production primary -> slicing 
-- On LessthanEq reduce production primary -> slicing 
-- On Lessthan reduce production primary -> slicing 
-- On LeftshiftEqual reduce production primary -> slicing 
-- On Leftshift reduce production primary -> slicing 
-- On Leftparen reduce production primary -> slicing 
-- On Leftbracket reduce production primary -> slicing 
-- On Is reduce production primary -> slicing 
-- On In reduce production primary -> slicing 
-- On GreaterthanEq reduce production primary -> slicing 
-- On Greaterthan reduce production primary -> slicing 
-- On EqualEqual reduce production primary -> slicing 
-- On Equal reduce production primary -> slicing 
-- On DashEqual reduce production primary -> slicing 
-- On Dash reduce production primary -> slicing 
-- On Comma reduce production primary -> slicing 
-- On Colon reduce production primary -> slicing 
-- On CaretEqual reduce production primary -> slicing 
-- On Caret reduce production primary -> slicing 
-- On BarEqual reduce production primary -> slicing 
-- On Bar reduce production primary -> slicing 
-- On Backquote reduce production primary -> slicing 
-- On And reduce production primary -> slicing 
-- On AmpersandEqual reduce production primary -> slicing 
-- On Ampersand reduce production primary -> slicing 

State 41:
and_expr -> shift_expr . [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
shift_expr -> shift_expr . Leftshift a_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
shift_expr -> shift_expr . Rightshift a_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
-- On Rightshift shift to state 42
-- On Leftshift shift to state 86
-- On Semicolon reduce production and_expr -> shift_expr 
-- On Rightparen reduce production and_expr -> shift_expr 
-- On Rightbracket reduce production and_expr -> shift_expr 
-- On Rightbrace reduce production and_expr -> shift_expr 
-- On Or reduce production and_expr -> shift_expr 
-- On NotEqual reduce production and_expr -> shift_expr 
-- On Not reduce production and_expr -> shift_expr 
-- On Newline reduce production and_expr -> shift_expr 
-- On LessthanEq reduce production and_expr -> shift_expr 
-- On Lessthan reduce production and_expr -> shift_expr 
-- On Is reduce production and_expr -> shift_expr 
-- On In reduce production and_expr -> shift_expr 
-- On GreaterthanEq reduce production and_expr -> shift_expr 
-- On Greaterthan reduce production and_expr -> shift_expr 
-- On EqualEqual reduce production and_expr -> shift_expr 
-- On Equal reduce production and_expr -> shift_expr 
-- On Comma reduce production and_expr -> shift_expr 
-- On Colon reduce production and_expr -> shift_expr 
-- On Caret reduce production and_expr -> shift_expr 
-- On Bar reduce production and_expr -> shift_expr 
-- On Backquote reduce production and_expr -> shift_expr 
-- On And reduce production and_expr -> shift_expr 
-- On Ampersand reduce production and_expr -> shift_expr 

State 42:
shift_expr -> shift_expr Rightshift . a_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On a_expr shift to state 134

State 43:
attributeref -> primary . Period Identifier [ StarStar Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Period Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
call -> primary . Leftparen Rightparen [ StarStar Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Period Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
call -> primary . Leftparen arg_list Rightparen [ StarStar Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Period Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
power -> primary . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
power -> primary . StarStar u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
slicing -> primary . Leftbracket slice_list Rightbracket [ StarStar Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Period Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On StarStar shift to state 44
-- On Period shift to state 55
-- On Leftparen shift to state 57
-- On Leftbracket shift to state 118
-- On Star reduce production power -> primary 
-- On Slash reduce production power -> primary 
-- On Semicolon reduce production power -> primary 
-- On Rightshift reduce production power -> primary 
-- On Rightparen reduce production power -> primary 
-- On Rightbracket reduce production power -> primary 
-- On Rightbrace reduce production power -> primary 
-- On Plus reduce production power -> primary 
-- On Percent reduce production power -> primary 
-- On Or reduce production power -> primary 
-- On NotEqual reduce production power -> primary 
-- On Not reduce production power -> primary 
-- On Newline reduce production power -> primary 
-- On LessthanEq reduce production power -> primary 
-- On Lessthan reduce production power -> primary 
-- On Leftshift reduce production power -> primary 
-- On Is reduce production power -> primary 
-- On In reduce production power -> primary 
-- On GreaterthanEq reduce production power -> primary 
-- On Greaterthan reduce production power -> primary 
-- On EqualEqual reduce production power -> primary 
-- On Equal reduce production power -> primary 
-- On Dash reduce production power -> primary 
-- On Comma reduce production power -> primary 
-- On Colon reduce production power -> primary 
-- On Caret reduce production power -> primary 
-- On Bar reduce production power -> primary 
-- On Backquote reduce production power -> primary 
-- On And reduce production power -> primary 
-- On Ampersand reduce production power -> primary 

State 44:
power -> primary StarStar . u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 45
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54

State 45:
power -> primary StarStar u_expr . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Star reduce production power -> primary StarStar u_expr 
-- On Slash reduce production power -> primary StarStar u_expr 
-- On Semicolon reduce production power -> primary StarStar u_expr 
-- On Rightshift reduce production power -> primary StarStar u_expr 
-- On Rightparen reduce production power -> primary StarStar u_expr 
-- On Rightbracket reduce production power -> primary StarStar u_expr 
-- On Rightbrace reduce production power -> primary StarStar u_expr 
-- On Plus reduce production power -> primary StarStar u_expr 
-- On Percent reduce production power -> primary StarStar u_expr 
-- On Or reduce production power -> primary StarStar u_expr 
-- On NotEqual reduce production power -> primary StarStar u_expr 
-- On Not reduce production power -> primary StarStar u_expr 
-- On Newline reduce production power -> primary StarStar u_expr 
-- On LessthanEq reduce production power -> primary StarStar u_expr 
-- On Lessthan reduce production power -> primary StarStar u_expr 
-- On Leftshift reduce production power -> primary StarStar u_expr 
-- On Is reduce production power -> primary StarStar u_expr 
-- On In reduce production power -> primary StarStar u_expr 
-- On GreaterthanEq reduce production power -> primary StarStar u_expr 
-- On Greaterthan reduce production power -> primary StarStar u_expr 
-- On EqualEqual reduce production power -> primary StarStar u_expr 
-- On Equal reduce production power -> primary StarStar u_expr 
-- On Dash reduce production power -> primary StarStar u_expr 
-- On Comma reduce production power -> primary StarStar u_expr 
-- On Colon reduce production power -> primary StarStar u_expr 
-- On Caret reduce production power -> primary StarStar u_expr 
-- On Bar reduce production power -> primary StarStar u_expr 
-- On Backquote reduce production power -> primary StarStar u_expr 
-- On And reduce production power -> primary StarStar u_expr 
-- On Ampersand reduce production power -> primary StarStar u_expr 

State 46:
u_expr -> power . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Star reduce production u_expr -> power 
-- On Slash reduce production u_expr -> power 
-- On Semicolon reduce production u_expr -> power 
-- On Rightshift reduce production u_expr -> power 
-- On Rightparen reduce production u_expr -> power 
-- On Rightbracket reduce production u_expr -> power 
-- On Rightbrace reduce production u_expr -> power 
-- On Plus reduce production u_expr -> power 
-- On Percent reduce production u_expr -> power 
-- On Or reduce production u_expr -> power 
-- On NotEqual reduce production u_expr -> power 
-- On Not reduce production u_expr -> power 
-- On Newline reduce production u_expr -> power 
-- On LessthanEq reduce production u_expr -> power 
-- On Lessthan reduce production u_expr -> power 
-- On Leftshift reduce production u_expr -> power 
-- On Is reduce production u_expr -> power 
-- On In reduce production u_expr -> power 
-- On GreaterthanEq reduce production u_expr -> power 
-- On Greaterthan reduce production u_expr -> power 
-- On EqualEqual reduce production u_expr -> power 
-- On Equal reduce production u_expr -> power 
-- On Dash reduce production u_expr -> power 
-- On Comma reduce production u_expr -> power 
-- On Colon reduce production u_expr -> power 
-- On Caret reduce production u_expr -> power 
-- On Bar reduce production u_expr -> power 
-- On Backquote reduce production u_expr -> power 
-- On And reduce production u_expr -> power 
-- On Ampersand reduce production u_expr -> power 

State 47:
enclosure -> parenth_form . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production enclosure -> parenth_form 
-- On StarStar reduce production enclosure -> parenth_form 
-- On StarEqual reduce production enclosure -> parenth_form 
-- On Star reduce production enclosure -> parenth_form 
-- On SlashEqual reduce production enclosure -> parenth_form 
-- On Slash reduce production enclosure -> parenth_form 
-- On Semicolon reduce production enclosure -> parenth_form 
-- On RightshiftEqual reduce production enclosure -> parenth_form 
-- On Rightshift reduce production enclosure -> parenth_form 
-- On Rightparen reduce production enclosure -> parenth_form 
-- On Rightbracket reduce production enclosure -> parenth_form 
-- On Rightbrace reduce production enclosure -> parenth_form 
-- On PlusEqual reduce production enclosure -> parenth_form 
-- On Plus reduce production enclosure -> parenth_form 
-- On Period reduce production enclosure -> parenth_form 
-- On PercentEqual reduce production enclosure -> parenth_form 
-- On Percent reduce production enclosure -> parenth_form 
-- On Or reduce production enclosure -> parenth_form 
-- On NotEqual reduce production enclosure -> parenth_form 
-- On Not reduce production enclosure -> parenth_form 
-- On Newline reduce production enclosure -> parenth_form 
-- On LessthanEq reduce production enclosure -> parenth_form 
-- On Lessthan reduce production enclosure -> parenth_form 
-- On LeftshiftEqual reduce production enclosure -> parenth_form 
-- On Leftshift reduce production enclosure -> parenth_form 
-- On Leftparen reduce production enclosure -> parenth_form 
-- On Leftbracket reduce production enclosure -> parenth_form 
-- On Is reduce production enclosure -> parenth_form 
-- On In reduce production enclosure -> parenth_form 
-- On GreaterthanEq reduce production enclosure -> parenth_form 
-- On Greaterthan reduce production enclosure -> parenth_form 
-- On EqualEqual reduce production enclosure -> parenth_form 
-- On Equal reduce production enclosure -> parenth_form 
-- On DashEqual reduce production enclosure -> parenth_form 
-- On Dash reduce production enclosure -> parenth_form 
-- On Comma reduce production enclosure -> parenth_form 
-- On Colon reduce production enclosure -> parenth_form 
-- On CaretEqual reduce production enclosure -> parenth_form 
-- On Caret reduce production enclosure -> parenth_form 
-- On BarEqual reduce production enclosure -> parenth_form 
-- On Bar reduce production enclosure -> parenth_form 
-- On Backquote reduce production enclosure -> parenth_form 
-- On And reduce production enclosure -> parenth_form 
-- On AmpersandEqual reduce production enclosure -> parenth_form 
-- On Ampersand reduce production enclosure -> parenth_form 

State 48:
atom -> literal . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production atom -> literal 
-- On StarStar reduce production atom -> literal 
-- On StarEqual reduce production atom -> literal 
-- On Star reduce production atom -> literal 
-- On SlashEqual reduce production atom -> literal 
-- On Slash reduce production atom -> literal 
-- On Semicolon reduce production atom -> literal 
-- On RightshiftEqual reduce production atom -> literal 
-- On Rightshift reduce production atom -> literal 
-- On Rightparen reduce production atom -> literal 
-- On Rightbracket reduce production atom -> literal 
-- On Rightbrace reduce production atom -> literal 
-- On PlusEqual reduce production atom -> literal 
-- On Plus reduce production atom -> literal 
-- On Period reduce production atom -> literal 
-- On PercentEqual reduce production atom -> literal 
-- On Percent reduce production atom -> literal 
-- On Or reduce production atom -> literal 
-- On NotEqual reduce production atom -> literal 
-- On Not reduce production atom -> literal 
-- On Newline reduce production atom -> literal 
-- On LessthanEq reduce production atom -> literal 
-- On Lessthan reduce production atom -> literal 
-- On LeftshiftEqual reduce production atom -> literal 
-- On Leftshift reduce production atom -> literal 
-- On Leftparen reduce production atom -> literal 
-- On Leftbracket reduce production atom -> literal 
-- On Is reduce production atom -> literal 
-- On In reduce production atom -> literal 
-- On GreaterthanEq reduce production atom -> literal 
-- On Greaterthan reduce production atom -> literal 
-- On EqualEqual reduce production atom -> literal 
-- On Equal reduce production atom -> literal 
-- On DashEqual reduce production atom -> literal 
-- On Dash reduce production atom -> literal 
-- On Comma reduce production atom -> literal 
-- On Colon reduce production atom -> literal 
-- On CaretEqual reduce production atom -> literal 
-- On Caret reduce production atom -> literal 
-- On BarEqual reduce production atom -> literal 
-- On Bar reduce production atom -> literal 
-- On Backquote reduce production atom -> literal 
-- On And reduce production atom -> literal 
-- On AmpersandEqual reduce production atom -> literal 
-- On Ampersand reduce production atom -> literal 

State 49:
enclosure -> list_display . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production enclosure -> list_display 
-- On StarStar reduce production enclosure -> list_display 
-- On StarEqual reduce production enclosure -> list_display 
-- On Star reduce production enclosure -> list_display 
-- On SlashEqual reduce production enclosure -> list_display 
-- On Slash reduce production enclosure -> list_display 
-- On Semicolon reduce production enclosure -> list_display 
-- On RightshiftEqual reduce production enclosure -> list_display 
-- On Rightshift reduce production enclosure -> list_display 
-- On Rightparen reduce production enclosure -> list_display 
-- On Rightbracket reduce production enclosure -> list_display 
-- On Rightbrace reduce production enclosure -> list_display 
-- On PlusEqual reduce production enclosure -> list_display 
-- On Plus reduce production enclosure -> list_display 
-- On Period reduce production enclosure -> list_display 
-- On PercentEqual reduce production enclosure -> list_display 
-- On Percent reduce production enclosure -> list_display 
-- On Or reduce production enclosure -> list_display 
-- On NotEqual reduce production enclosure -> list_display 
-- On Not reduce production enclosure -> list_display 
-- On Newline reduce production enclosure -> list_display 
-- On LessthanEq reduce production enclosure -> list_display 
-- On Lessthan reduce production enclosure -> list_display 
-- On LeftshiftEqual reduce production enclosure -> list_display 
-- On Leftshift reduce production enclosure -> list_display 
-- On Leftparen reduce production enclosure -> list_display 
-- On Leftbracket reduce production enclosure -> list_display 
-- On Is reduce production enclosure -> list_display 
-- On In reduce production enclosure -> list_display 
-- On GreaterthanEq reduce production enclosure -> list_display 
-- On Greaterthan reduce production enclosure -> list_display 
-- On EqualEqual reduce production enclosure -> list_display 
-- On Equal reduce production enclosure -> list_display 
-- On DashEqual reduce production enclosure -> list_display 
-- On Dash reduce production enclosure -> list_display 
-- On Comma reduce production enclosure -> list_display 
-- On Colon reduce production enclosure -> list_display 
-- On CaretEqual reduce production enclosure -> list_display 
-- On Caret reduce production enclosure -> list_display 
-- On BarEqual reduce production enclosure -> list_display 
-- On Bar reduce production enclosure -> list_display 
-- On Backquote reduce production enclosure -> list_display 
-- On And reduce production enclosure -> list_display 
-- On AmpersandEqual reduce production enclosure -> list_display 
-- On Ampersand reduce production enclosure -> list_display 

State 50:
atom -> enclosure . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production atom -> enclosure 
-- On StarStar reduce production atom -> enclosure 
-- On StarEqual reduce production atom -> enclosure 
-- On Star reduce production atom -> enclosure 
-- On SlashEqual reduce production atom -> enclosure 
-- On Slash reduce production atom -> enclosure 
-- On Semicolon reduce production atom -> enclosure 
-- On RightshiftEqual reduce production atom -> enclosure 
-- On Rightshift reduce production atom -> enclosure 
-- On Rightparen reduce production atom -> enclosure 
-- On Rightbracket reduce production atom -> enclosure 
-- On Rightbrace reduce production atom -> enclosure 
-- On PlusEqual reduce production atom -> enclosure 
-- On Plus reduce production atom -> enclosure 
-- On Period reduce production atom -> enclosure 
-- On PercentEqual reduce production atom -> enclosure 
-- On Percent reduce production atom -> enclosure 
-- On Or reduce production atom -> enclosure 
-- On NotEqual reduce production atom -> enclosure 
-- On Not reduce production atom -> enclosure 
-- On Newline reduce production atom -> enclosure 
-- On LessthanEq reduce production atom -> enclosure 
-- On Lessthan reduce production atom -> enclosure 
-- On LeftshiftEqual reduce production atom -> enclosure 
-- On Leftshift reduce production atom -> enclosure 
-- On Leftparen reduce production atom -> enclosure 
-- On Leftbracket reduce production atom -> enclosure 
-- On Is reduce production atom -> enclosure 
-- On In reduce production atom -> enclosure 
-- On GreaterthanEq reduce production atom -> enclosure 
-- On Greaterthan reduce production atom -> enclosure 
-- On EqualEqual reduce production atom -> enclosure 
-- On Equal reduce production atom -> enclosure 
-- On DashEqual reduce production atom -> enclosure 
-- On Dash reduce production atom -> enclosure 
-- On Comma reduce production atom -> enclosure 
-- On Colon reduce production atom -> enclosure 
-- On CaretEqual reduce production atom -> enclosure 
-- On Caret reduce production atom -> enclosure 
-- On BarEqual reduce production atom -> enclosure 
-- On Bar reduce production atom -> enclosure 
-- On Backquote reduce production atom -> enclosure 
-- On And reduce production atom -> enclosure 
-- On AmpersandEqual reduce production atom -> enclosure 
-- On Ampersand reduce production atom -> enclosure 

State 51:
enclosure -> dict_display . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production enclosure -> dict_display 
-- On StarStar reduce production enclosure -> dict_display 
-- On StarEqual reduce production enclosure -> dict_display 
-- On Star reduce production enclosure -> dict_display 
-- On SlashEqual reduce production enclosure -> dict_display 
-- On Slash reduce production enclosure -> dict_display 
-- On Semicolon reduce production enclosure -> dict_display 
-- On RightshiftEqual reduce production enclosure -> dict_display 
-- On Rightshift reduce production enclosure -> dict_display 
-- On Rightparen reduce production enclosure -> dict_display 
-- On Rightbracket reduce production enclosure -> dict_display 
-- On Rightbrace reduce production enclosure -> dict_display 
-- On PlusEqual reduce production enclosure -> dict_display 
-- On Plus reduce production enclosure -> dict_display 
-- On Period reduce production enclosure -> dict_display 
-- On PercentEqual reduce production enclosure -> dict_display 
-- On Percent reduce production enclosure -> dict_display 
-- On Or reduce production enclosure -> dict_display 
-- On NotEqual reduce production enclosure -> dict_display 
-- On Not reduce production enclosure -> dict_display 
-- On Newline reduce production enclosure -> dict_display 
-- On LessthanEq reduce production enclosure -> dict_display 
-- On Lessthan reduce production enclosure -> dict_display 
-- On LeftshiftEqual reduce production enclosure -> dict_display 
-- On Leftshift reduce production enclosure -> dict_display 
-- On Leftparen reduce production enclosure -> dict_display 
-- On Leftbracket reduce production enclosure -> dict_display 
-- On Is reduce production enclosure -> dict_display 
-- On In reduce production enclosure -> dict_display 
-- On GreaterthanEq reduce production enclosure -> dict_display 
-- On Greaterthan reduce production enclosure -> dict_display 
-- On EqualEqual reduce production enclosure -> dict_display 
-- On Equal reduce production enclosure -> dict_display 
-- On DashEqual reduce production enclosure -> dict_display 
-- On Dash reduce production enclosure -> dict_display 
-- On Comma reduce production enclosure -> dict_display 
-- On Colon reduce production enclosure -> dict_display 
-- On CaretEqual reduce production enclosure -> dict_display 
-- On Caret reduce production enclosure -> dict_display 
-- On BarEqual reduce production enclosure -> dict_display 
-- On Bar reduce production enclosure -> dict_display 
-- On Backquote reduce production enclosure -> dict_display 
-- On And reduce production enclosure -> dict_display 
-- On AmpersandEqual reduce production enclosure -> dict_display 
-- On Ampersand reduce production enclosure -> dict_display 

State 52:
primary -> call . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production primary -> call 
-- On StarStar reduce production primary -> call 
-- On StarEqual reduce production primary -> call 
-- On Star reduce production primary -> call 
-- On SlashEqual reduce production primary -> call 
-- On Slash reduce production primary -> call 
-- On Semicolon reduce production primary -> call 
-- On RightshiftEqual reduce production primary -> call 
-- On Rightshift reduce production primary -> call 
-- On Rightparen reduce production primary -> call 
-- On Rightbracket reduce production primary -> call 
-- On Rightbrace reduce production primary -> call 
-- On PlusEqual reduce production primary -> call 
-- On Plus reduce production primary -> call 
-- On Period reduce production primary -> call 
-- On PercentEqual reduce production primary -> call 
-- On Percent reduce production primary -> call 
-- On Or reduce production primary -> call 
-- On NotEqual reduce production primary -> call 
-- On Not reduce production primary -> call 
-- On Newline reduce production primary -> call 
-- On LessthanEq reduce production primary -> call 
-- On Lessthan reduce production primary -> call 
-- On LeftshiftEqual reduce production primary -> call 
-- On Leftshift reduce production primary -> call 
-- On Leftparen reduce production primary -> call 
-- On Leftbracket reduce production primary -> call 
-- On Is reduce production primary -> call 
-- On In reduce production primary -> call 
-- On GreaterthanEq reduce production primary -> call 
-- On Greaterthan reduce production primary -> call 
-- On EqualEqual reduce production primary -> call 
-- On Equal reduce production primary -> call 
-- On DashEqual reduce production primary -> call 
-- On Dash reduce production primary -> call 
-- On Comma reduce production primary -> call 
-- On Colon reduce production primary -> call 
-- On CaretEqual reduce production primary -> call 
-- On Caret reduce production primary -> call 
-- On BarEqual reduce production primary -> call 
-- On Bar reduce production primary -> call 
-- On Backquote reduce production primary -> call 
-- On And reduce production primary -> call 
-- On AmpersandEqual reduce production primary -> call 
-- On Ampersand reduce production primary -> call 

State 53:
primary -> attributeref . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production primary -> attributeref 
-- On StarStar reduce production primary -> attributeref 
-- On StarEqual reduce production primary -> attributeref 
-- On Star reduce production primary -> attributeref 
-- On SlashEqual reduce production primary -> attributeref 
-- On Slash reduce production primary -> attributeref 
-- On Semicolon reduce production primary -> attributeref 
-- On RightshiftEqual reduce production primary -> attributeref 
-- On Rightshift reduce production primary -> attributeref 
-- On Rightparen reduce production primary -> attributeref 
-- On Rightbracket reduce production primary -> attributeref 
-- On Rightbrace reduce production primary -> attributeref 
-- On PlusEqual reduce production primary -> attributeref 
-- On Plus reduce production primary -> attributeref 
-- On Period reduce production primary -> attributeref 
-- On PercentEqual reduce production primary -> attributeref 
-- On Percent reduce production primary -> attributeref 
-- On Or reduce production primary -> attributeref 
-- On NotEqual reduce production primary -> attributeref 
-- On Not reduce production primary -> attributeref 
-- On Newline reduce production primary -> attributeref 
-- On LessthanEq reduce production primary -> attributeref 
-- On Lessthan reduce production primary -> attributeref 
-- On LeftshiftEqual reduce production primary -> attributeref 
-- On Leftshift reduce production primary -> attributeref 
-- On Leftparen reduce production primary -> attributeref 
-- On Leftbracket reduce production primary -> attributeref 
-- On Is reduce production primary -> attributeref 
-- On In reduce production primary -> attributeref 
-- On GreaterthanEq reduce production primary -> attributeref 
-- On Greaterthan reduce production primary -> attributeref 
-- On EqualEqual reduce production primary -> attributeref 
-- On Equal reduce production primary -> attributeref 
-- On DashEqual reduce production primary -> attributeref 
-- On Dash reduce production primary -> attributeref 
-- On Comma reduce production primary -> attributeref 
-- On Colon reduce production primary -> attributeref 
-- On CaretEqual reduce production primary -> attributeref 
-- On Caret reduce production primary -> attributeref 
-- On BarEqual reduce production primary -> attributeref 
-- On Bar reduce production primary -> attributeref 
-- On Backquote reduce production primary -> attributeref 
-- On And reduce production primary -> attributeref 
-- On AmpersandEqual reduce production primary -> attributeref 
-- On Ampersand reduce production primary -> attributeref 

State 54:
primary -> atom . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production primary -> atom 
-- On StarStar reduce production primary -> atom 
-- On StarEqual reduce production primary -> atom 
-- On Star reduce production primary -> atom 
-- On SlashEqual reduce production primary -> atom 
-- On Slash reduce production primary -> atom 
-- On Semicolon reduce production primary -> atom 
-- On RightshiftEqual reduce production primary -> atom 
-- On Rightshift reduce production primary -> atom 
-- On Rightparen reduce production primary -> atom 
-- On Rightbracket reduce production primary -> atom 
-- On Rightbrace reduce production primary -> atom 
-- On PlusEqual reduce production primary -> atom 
-- On Plus reduce production primary -> atom 
-- On Period reduce production primary -> atom 
-- On PercentEqual reduce production primary -> atom 
-- On Percent reduce production primary -> atom 
-- On Or reduce production primary -> atom 
-- On NotEqual reduce production primary -> atom 
-- On Not reduce production primary -> atom 
-- On Newline reduce production primary -> atom 
-- On LessthanEq reduce production primary -> atom 
-- On Lessthan reduce production primary -> atom 
-- On LeftshiftEqual reduce production primary -> atom 
-- On Leftshift reduce production primary -> atom 
-- On Leftparen reduce production primary -> atom 
-- On Leftbracket reduce production primary -> atom 
-- On Is reduce production primary -> atom 
-- On In reduce production primary -> atom 
-- On GreaterthanEq reduce production primary -> atom 
-- On Greaterthan reduce production primary -> atom 
-- On EqualEqual reduce production primary -> atom 
-- On Equal reduce production primary -> atom 
-- On DashEqual reduce production primary -> atom 
-- On Dash reduce production primary -> atom 
-- On Comma reduce production primary -> atom 
-- On Colon reduce production primary -> atom 
-- On CaretEqual reduce production primary -> atom 
-- On Caret reduce production primary -> atom 
-- On BarEqual reduce production primary -> atom 
-- On Bar reduce production primary -> atom 
-- On Backquote reduce production primary -> atom 
-- On And reduce production primary -> atom 
-- On AmpersandEqual reduce production primary -> atom 
-- On Ampersand reduce production primary -> atom 

State 55:
attributeref -> primary Period . Identifier [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On Identifier shift to state 56

State 56:
attributeref -> primary Period Identifier . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production attributeref -> primary Period Identifier 
-- On StarStar reduce production attributeref -> primary Period Identifier 
-- On StarEqual reduce production attributeref -> primary Period Identifier 
-- On Star reduce production attributeref -> primary Period Identifier 
-- On SlashEqual reduce production attributeref -> primary Period Identifier 
-- On Slash reduce production attributeref -> primary Period Identifier 
-- On Semicolon reduce production attributeref -> primary Period Identifier 
-- On RightshiftEqual reduce production attributeref -> primary Period Identifier 
-- On Rightshift reduce production attributeref -> primary Period Identifier 
-- On Rightparen reduce production attributeref -> primary Period Identifier 
-- On Rightbracket reduce production attributeref -> primary Period Identifier 
-- On Rightbrace reduce production attributeref -> primary Period Identifier 
-- On PlusEqual reduce production attributeref -> primary Period Identifier 
-- On Plus reduce production attributeref -> primary Period Identifier 
-- On Period reduce production attributeref -> primary Period Identifier 
-- On PercentEqual reduce production attributeref -> primary Period Identifier 
-- On Percent reduce production attributeref -> primary Period Identifier 
-- On Or reduce production attributeref -> primary Period Identifier 
-- On NotEqual reduce production attributeref -> primary Period Identifier 
-- On Not reduce production attributeref -> primary Period Identifier 
-- On Newline reduce production attributeref -> primary Period Identifier 
-- On LessthanEq reduce production attributeref -> primary Period Identifier 
-- On Lessthan reduce production attributeref -> primary Period Identifier 
-- On LeftshiftEqual reduce production attributeref -> primary Period Identifier 
-- On Leftshift reduce production attributeref -> primary Period Identifier 
-- On Leftparen reduce production attributeref -> primary Period Identifier 
-- On Leftbracket reduce production attributeref -> primary Period Identifier 
-- On Is reduce production attributeref -> primary Period Identifier 
-- On In reduce production attributeref -> primary Period Identifier 
-- On GreaterthanEq reduce production attributeref -> primary Period Identifier 
-- On Greaterthan reduce production attributeref -> primary Period Identifier 
-- On EqualEqual reduce production attributeref -> primary Period Identifier 
-- On Equal reduce production attributeref -> primary Period Identifier 
-- On DashEqual reduce production attributeref -> primary Period Identifier 
-- On Dash reduce production attributeref -> primary Period Identifier 
-- On Comma reduce production attributeref -> primary Period Identifier 
-- On Colon reduce production attributeref -> primary Period Identifier 
-- On CaretEqual reduce production attributeref -> primary Period Identifier 
-- On Caret reduce production attributeref -> primary Period Identifier 
-- On BarEqual reduce production attributeref -> primary Period Identifier 
-- On Bar reduce production attributeref -> primary Period Identifier 
-- On Backquote reduce production attributeref -> primary Period Identifier 
-- On And reduce production attributeref -> primary Period Identifier 
-- On AmpersandEqual reduce production attributeref -> primary Period Identifier 
-- On Ampersand reduce production attributeref -> primary Period Identifier 

State 57:
call -> primary Leftparen . Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
call -> primary Leftparen . arg_list Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On Rightparen shift to state 58
-- On arg_list shift to state 59
-- On arg_comma_star shift to state 61
-- On Tilde reduce production arg_comma_star -> 
-- On String reduce production arg_comma_star -> 
-- On StarStar reduce production arg_comma_star -> 
-- On Star reduce production arg_comma_star -> 
-- On Plus reduce production arg_comma_star -> 
-- On Not reduce production arg_comma_star -> 
-- On Longinteger reduce production arg_comma_star -> 
-- On Leftparen reduce production arg_comma_star -> 
-- On Leftbracket reduce production arg_comma_star -> 
-- On Leftbrace reduce production arg_comma_star -> 
-- On Lambda reduce production arg_comma_star -> 
-- On Integer reduce production arg_comma_star -> 
-- On Imaginary reduce production arg_comma_star -> 
-- On Identifier reduce production arg_comma_star -> 
-- On Float reduce production arg_comma_star -> 
-- On Dash reduce production arg_comma_star -> 
-- On Backquote reduce production arg_comma_star -> 

State 58:
call -> primary Leftparen Rightparen . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production call -> primary Leftparen Rightparen 
-- On StarStar reduce production call -> primary Leftparen Rightparen 
-- On StarEqual reduce production call -> primary Leftparen Rightparen 
-- On Star reduce production call -> primary Leftparen Rightparen 
-- On SlashEqual reduce production call -> primary Leftparen Rightparen 
-- On Slash reduce production call -> primary Leftparen Rightparen 
-- On Semicolon reduce production call -> primary Leftparen Rightparen 
-- On RightshiftEqual reduce production call -> primary Leftparen Rightparen 
-- On Rightshift reduce production call -> primary Leftparen Rightparen 
-- On Rightparen reduce production call -> primary Leftparen Rightparen 
-- On Rightbracket reduce production call -> primary Leftparen Rightparen 
-- On Rightbrace reduce production call -> primary Leftparen Rightparen 
-- On PlusEqual reduce production call -> primary Leftparen Rightparen 
-- On Plus reduce production call -> primary Leftparen Rightparen 
-- On Period reduce production call -> primary Leftparen Rightparen 
-- On PercentEqual reduce production call -> primary Leftparen Rightparen 
-- On Percent reduce production call -> primary Leftparen Rightparen 
-- On Or reduce production call -> primary Leftparen Rightparen 
-- On NotEqual reduce production call -> primary Leftparen Rightparen 
-- On Not reduce production call -> primary Leftparen Rightparen 
-- On Newline reduce production call -> primary Leftparen Rightparen 
-- On LessthanEq reduce production call -> primary Leftparen Rightparen 
-- On Lessthan reduce production call -> primary Leftparen Rightparen 
-- On LeftshiftEqual reduce production call -> primary Leftparen Rightparen 
-- On Leftshift reduce production call -> primary Leftparen Rightparen 
-- On Leftparen reduce production call -> primary Leftparen Rightparen 
-- On Leftbracket reduce production call -> primary Leftparen Rightparen 
-- On Is reduce production call -> primary Leftparen Rightparen 
-- On In reduce production call -> primary Leftparen Rightparen 
-- On GreaterthanEq reduce production call -> primary Leftparen Rightparen 
-- On Greaterthan reduce production call -> primary Leftparen Rightparen 
-- On EqualEqual reduce production call -> primary Leftparen Rightparen 
-- On Equal reduce production call -> primary Leftparen Rightparen 
-- On DashEqual reduce production call -> primary Leftparen Rightparen 
-- On Dash reduce production call -> primary Leftparen Rightparen 
-- On Comma reduce production call -> primary Leftparen Rightparen 
-- On Colon reduce production call -> primary Leftparen Rightparen 
-- On CaretEqual reduce production call -> primary Leftparen Rightparen 
-- On Caret reduce production call -> primary Leftparen Rightparen 
-- On BarEqual reduce production call -> primary Leftparen Rightparen 
-- On Bar reduce production call -> primary Leftparen Rightparen 
-- On Backquote reduce production call -> primary Leftparen Rightparen 
-- On And reduce production call -> primary Leftparen Rightparen 
-- On AmpersandEqual reduce production call -> primary Leftparen Rightparen 
-- On Ampersand reduce production call -> primary Leftparen Rightparen 

State 59:
call -> primary Leftparen arg_list . Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On Rightparen shift to state 60

State 60:
call -> primary Leftparen arg_list Rightparen . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production call -> primary Leftparen arg_list Rightparen 
-- On StarStar reduce production call -> primary Leftparen arg_list Rightparen 
-- On StarEqual reduce production call -> primary Leftparen arg_list Rightparen 
-- On Star reduce production call -> primary Leftparen arg_list Rightparen 
-- On SlashEqual reduce production call -> primary Leftparen arg_list Rightparen 
-- On Slash reduce production call -> primary Leftparen arg_list Rightparen 
-- On Semicolon reduce production call -> primary Leftparen arg_list Rightparen 
-- On RightshiftEqual reduce production call -> primary Leftparen arg_list Rightparen 
-- On Rightshift reduce production call -> primary Leftparen arg_list Rightparen 
-- On Rightparen reduce production call -> primary Leftparen arg_list Rightparen 
-- On Rightbracket reduce production call -> primary Leftparen arg_list Rightparen 
-- On Rightbrace reduce production call -> primary Leftparen arg_list Rightparen 
-- On PlusEqual reduce production call -> primary Leftparen arg_list Rightparen 
-- On Plus reduce production call -> primary Leftparen arg_list Rightparen 
-- On Period reduce production call -> primary Leftparen arg_list Rightparen 
-- On PercentEqual reduce production call -> primary Leftparen arg_list Rightparen 
-- On Percent reduce production call -> primary Leftparen arg_list Rightparen 
-- On Or reduce production call -> primary Leftparen arg_list Rightparen 
-- On NotEqual reduce production call -> primary Leftparen arg_list Rightparen 
-- On Not reduce production call -> primary Leftparen arg_list Rightparen 
-- On Newline reduce production call -> primary Leftparen arg_list Rightparen 
-- On LessthanEq reduce production call -> primary Leftparen arg_list Rightparen 
-- On Lessthan reduce production call -> primary Leftparen arg_list Rightparen 
-- On LeftshiftEqual reduce production call -> primary Leftparen arg_list Rightparen 
-- On Leftshift reduce production call -> primary Leftparen arg_list Rightparen 
-- On Leftparen reduce production call -> primary Leftparen arg_list Rightparen 
-- On Leftbracket reduce production call -> primary Leftparen arg_list Rightparen 
-- On Is reduce production call -> primary Leftparen arg_list Rightparen 
-- On In reduce production call -> primary Leftparen arg_list Rightparen 
-- On GreaterthanEq reduce production call -> primary Leftparen arg_list Rightparen 
-- On Greaterthan reduce production call -> primary Leftparen arg_list Rightparen 
-- On EqualEqual reduce production call -> primary Leftparen arg_list Rightparen 
-- On Equal reduce production call -> primary Leftparen arg_list Rightparen 
-- On DashEqual reduce production call -> primary Leftparen arg_list Rightparen 
-- On Dash reduce production call -> primary Leftparen arg_list Rightparen 
-- On Comma reduce production call -> primary Leftparen arg_list Rightparen 
-- On Colon reduce production call -> primary Leftparen arg_list Rightparen 
-- On CaretEqual reduce production call -> primary Leftparen arg_list Rightparen 
-- On Caret reduce production call -> primary Leftparen arg_list Rightparen 
-- On BarEqual reduce production call -> primary Leftparen arg_list Rightparen 
-- On Bar reduce production call -> primary Leftparen arg_list Rightparen 
-- On Backquote reduce production call -> primary Leftparen arg_list Rightparen 
-- On And reduce production call -> primary Leftparen arg_list Rightparen 
-- On AmpersandEqual reduce production call -> primary Leftparen arg_list Rightparen 
-- On Ampersand reduce production call -> primary Leftparen arg_list Rightparen 

State 61:
arg_comma_star -> arg_comma_star . argument Comma [ Tilde String StarStar Star Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
arg_list -> arg_comma_star . argument optional_comma [ Rightparen ]
arg_list -> arg_comma_star . Star atom [ Rightparen ]
arg_list -> arg_comma_star . Star atom Comma StarStar atom [ Rightparen ]
arg_list -> arg_comma_star . StarStar atom [ Rightparen ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On StarStar shift to state 62
-- On Star shift to state 64
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 69
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 114
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On argument shift to state 115
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 62:
arg_list -> arg_comma_star StarStar . atom [ Rightparen ]
-- On String shift to state 3
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Backquote shift to state 35
-- On string_conversion shift to state 39
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On atom shift to state 63

State 63:
arg_list -> arg_comma_star StarStar atom . [ Rightparen ]
-- On Rightparen reduce production arg_list -> arg_comma_star StarStar atom 

State 64:
arg_list -> arg_comma_star Star . atom [ Rightparen ]
arg_list -> arg_comma_star Star . atom Comma StarStar atom [ Rightparen ]
-- On String shift to state 3
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Backquote shift to state 35
-- On string_conversion shift to state 39
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On atom shift to state 65

State 65:
arg_list -> arg_comma_star Star atom . [ Rightparen ]
arg_list -> arg_comma_star Star atom . Comma StarStar atom [ Rightparen ]
-- On Comma shift to state 66
-- On Rightparen reduce production arg_list -> arg_comma_star Star atom 

State 66:
arg_list -> arg_comma_star Star atom Comma . StarStar atom [ Rightparen ]
-- On StarStar shift to state 67

State 67:
arg_list -> arg_comma_star Star atom Comma StarStar . atom [ Rightparen ]
-- On String shift to state 3
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Backquote shift to state 35
-- On string_conversion shift to state 39
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On atom shift to state 68

State 68:
arg_list -> arg_comma_star Star atom Comma StarStar atom . [ Rightparen ]
-- On Rightparen reduce production arg_list -> arg_comma_star Star atom Comma StarStar atom 

State 69:
argument -> Identifier . Equal expression [ Rightparen Comma ]
atom -> Identifier . [ StarStar Star Slash Rightshift Rightparen Plus Period Percent Or NotEqual Not LessthanEq Lessthan Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Dash Comma Caret Bar And Ampersand ]
-- On Equal shift to state 70
-- On StarStar reduce production atom -> Identifier 
-- On Star reduce production atom -> Identifier 
-- On Slash reduce production atom -> Identifier 
-- On Rightshift reduce production atom -> Identifier 
-- On Rightparen reduce production atom -> Identifier 
-- On Plus reduce production atom -> Identifier 
-- On Period reduce production atom -> Identifier 
-- On Percent reduce production atom -> Identifier 
-- On Or reduce production atom -> Identifier 
-- On NotEqual reduce production atom -> Identifier 
-- On Not reduce production atom -> Identifier 
-- On LessthanEq reduce production atom -> Identifier 
-- On Lessthan reduce production atom -> Identifier 
-- On Leftshift reduce production atom -> Identifier 
-- On Leftparen reduce production atom -> Identifier 
-- On Leftbracket reduce production atom -> Identifier 
-- On Is reduce production atom -> Identifier 
-- On In reduce production atom -> Identifier 
-- On GreaterthanEq reduce production atom -> Identifier 
-- On Greaterthan reduce production atom -> Identifier 
-- On EqualEqual reduce production atom -> Identifier 
-- On Dash reduce production atom -> Identifier 
-- On Comma reduce production atom -> Identifier 
-- On Caret reduce production atom -> Identifier 
-- On Bar reduce production atom -> Identifier 
-- On And reduce production atom -> Identifier 
-- On Ampersand reduce production atom -> Identifier 

State 70:
argument -> Identifier Equal . expression [ Rightparen Comma ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 112
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 71:
expression -> or_test . [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
or_test -> or_test . Or and_test [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote ]
-- On Or shift to state 72
-- On Semicolon reduce production expression -> or_test 
-- On Rightparen reduce production expression -> or_test 
-- On Rightbracket reduce production expression -> or_test 
-- On Rightbrace reduce production expression -> or_test 
-- On Newline reduce production expression -> or_test 
-- On Equal reduce production expression -> or_test 
-- On Comma reduce production expression -> or_test 
-- On Colon reduce production expression -> or_test 
-- On Backquote reduce production expression -> or_test 

State 72:
or_test -> or_test Or . and_test [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 108
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 73:
comparison -> or_expr . [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Backquote And ]
or_expr -> or_expr . Bar xor_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Bar Backquote And ]
-- On Bar shift to state 74
-- On Semicolon reduce production comparison -> or_expr 
-- On Rightparen reduce production comparison -> or_expr 
-- On Rightbracket reduce production comparison -> or_expr 
-- On Rightbrace reduce production comparison -> or_expr 
-- On Or reduce production comparison -> or_expr 
-- On NotEqual reduce production comparison -> or_expr 
-- On Not reduce production comparison -> or_expr 
-- On Newline reduce production comparison -> or_expr 
-- On LessthanEq reduce production comparison -> or_expr 
-- On Lessthan reduce production comparison -> or_expr 
-- On Is reduce production comparison -> or_expr 
-- On In reduce production comparison -> or_expr 
-- On GreaterthanEq reduce production comparison -> or_expr 
-- On Greaterthan reduce production comparison -> or_expr 
-- On EqualEqual reduce production comparison -> or_expr 
-- On Equal reduce production comparison -> or_expr 
-- On Comma reduce production comparison -> or_expr 
-- On Colon reduce production comparison -> or_expr 
-- On Backquote reduce production comparison -> or_expr 
-- On And reduce production comparison -> or_expr 

State 74:
or_expr -> or_expr Bar . xor_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Bar Backquote And ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 75
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 75:
or_expr -> or_expr Bar xor_expr . [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Bar Backquote And ]
xor_expr -> xor_expr . Caret and_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And ]
-- On Caret shift to state 37
-- On Semicolon reduce production or_expr -> or_expr Bar xor_expr 
-- On Rightparen reduce production or_expr -> or_expr Bar xor_expr 
-- On Rightbracket reduce production or_expr -> or_expr Bar xor_expr 
-- On Rightbrace reduce production or_expr -> or_expr Bar xor_expr 
-- On Or reduce production or_expr -> or_expr Bar xor_expr 
-- On NotEqual reduce production or_expr -> or_expr Bar xor_expr 
-- On Not reduce production or_expr -> or_expr Bar xor_expr 
-- On Newline reduce production or_expr -> or_expr Bar xor_expr 
-- On LessthanEq reduce production or_expr -> or_expr Bar xor_expr 
-- On Lessthan reduce production or_expr -> or_expr Bar xor_expr 
-- On Is reduce production or_expr -> or_expr Bar xor_expr 
-- On In reduce production or_expr -> or_expr Bar xor_expr 
-- On GreaterthanEq reduce production or_expr -> or_expr Bar xor_expr 
-- On Greaterthan reduce production or_expr -> or_expr Bar xor_expr 
-- On EqualEqual reduce production or_expr -> or_expr Bar xor_expr 
-- On Equal reduce production or_expr -> or_expr Bar xor_expr 
-- On Comma reduce production or_expr -> or_expr Bar xor_expr 
-- On Colon reduce production or_expr -> or_expr Bar xor_expr 
-- On Bar reduce production or_expr -> or_expr Bar xor_expr 
-- On Backquote reduce production or_expr -> or_expr Bar xor_expr 
-- On And reduce production or_expr -> or_expr Bar xor_expr 

State 76:
a_expr -> m_expr . [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Star u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Slash u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Percent u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Star shift to state 77
-- On Slash shift to state 79
-- On Percent shift to state 81
-- On Semicolon reduce production a_expr -> m_expr 
-- On Rightshift reduce production a_expr -> m_expr 
-- On Rightparen reduce production a_expr -> m_expr 
-- On Rightbracket reduce production a_expr -> m_expr 
-- On Rightbrace reduce production a_expr -> m_expr 
-- On Plus reduce production a_expr -> m_expr 
-- On Or reduce production a_expr -> m_expr 
-- On NotEqual reduce production a_expr -> m_expr 
-- On Not reduce production a_expr -> m_expr 
-- On Newline reduce production a_expr -> m_expr 
-- On LessthanEq reduce production a_expr -> m_expr 
-- On Lessthan reduce production a_expr -> m_expr 
-- On Leftshift reduce production a_expr -> m_expr 
-- On Is reduce production a_expr -> m_expr 
-- On In reduce production a_expr -> m_expr 
-- On GreaterthanEq reduce production a_expr -> m_expr 
-- On Greaterthan reduce production a_expr -> m_expr 
-- On EqualEqual reduce production a_expr -> m_expr 
-- On Equal reduce production a_expr -> m_expr 
-- On Dash reduce production a_expr -> m_expr 
-- On Comma reduce production a_expr -> m_expr 
-- On Colon reduce production a_expr -> m_expr 
-- On Caret reduce production a_expr -> m_expr 
-- On Bar reduce production a_expr -> m_expr 
-- On Backquote reduce production a_expr -> m_expr 
-- On And reduce production a_expr -> m_expr 
-- On Ampersand reduce production a_expr -> m_expr 

State 77:
m_expr -> m_expr Star . u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 78
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54

State 78:
m_expr -> m_expr Star u_expr . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Star reduce production m_expr -> m_expr Star u_expr 
-- On Slash reduce production m_expr -> m_expr Star u_expr 
-- On Semicolon reduce production m_expr -> m_expr Star u_expr 
-- On Rightshift reduce production m_expr -> m_expr Star u_expr 
-- On Rightparen reduce production m_expr -> m_expr Star u_expr 
-- On Rightbracket reduce production m_expr -> m_expr Star u_expr 
-- On Rightbrace reduce production m_expr -> m_expr Star u_expr 
-- On Plus reduce production m_expr -> m_expr Star u_expr 
-- On Percent reduce production m_expr -> m_expr Star u_expr 
-- On Or reduce production m_expr -> m_expr Star u_expr 
-- On NotEqual reduce production m_expr -> m_expr Star u_expr 
-- On Not reduce production m_expr -> m_expr Star u_expr 
-- On Newline reduce production m_expr -> m_expr Star u_expr 
-- On LessthanEq reduce production m_expr -> m_expr Star u_expr 
-- On Lessthan reduce production m_expr -> m_expr Star u_expr 
-- On Leftshift reduce production m_expr -> m_expr Star u_expr 
-- On Is reduce production m_expr -> m_expr Star u_expr 
-- On In reduce production m_expr -> m_expr Star u_expr 
-- On GreaterthanEq reduce production m_expr -> m_expr Star u_expr 
-- On Greaterthan reduce production m_expr -> m_expr Star u_expr 
-- On EqualEqual reduce production m_expr -> m_expr Star u_expr 
-- On Equal reduce production m_expr -> m_expr Star u_expr 
-- On Dash reduce production m_expr -> m_expr Star u_expr 
-- On Comma reduce production m_expr -> m_expr Star u_expr 
-- On Colon reduce production m_expr -> m_expr Star u_expr 
-- On Caret reduce production m_expr -> m_expr Star u_expr 
-- On Bar reduce production m_expr -> m_expr Star u_expr 
-- On Backquote reduce production m_expr -> m_expr Star u_expr 
-- On And reduce production m_expr -> m_expr Star u_expr 
-- On Ampersand reduce production m_expr -> m_expr Star u_expr 

State 79:
m_expr -> m_expr Slash . u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 80
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54

State 80:
m_expr -> m_expr Slash u_expr . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Star reduce production m_expr -> m_expr Slash u_expr 
-- On Slash reduce production m_expr -> m_expr Slash u_expr 
-- On Semicolon reduce production m_expr -> m_expr Slash u_expr 
-- On Rightshift reduce production m_expr -> m_expr Slash u_expr 
-- On Rightparen reduce production m_expr -> m_expr Slash u_expr 
-- On Rightbracket reduce production m_expr -> m_expr Slash u_expr 
-- On Rightbrace reduce production m_expr -> m_expr Slash u_expr 
-- On Plus reduce production m_expr -> m_expr Slash u_expr 
-- On Percent reduce production m_expr -> m_expr Slash u_expr 
-- On Or reduce production m_expr -> m_expr Slash u_expr 
-- On NotEqual reduce production m_expr -> m_expr Slash u_expr 
-- On Not reduce production m_expr -> m_expr Slash u_expr 
-- On Newline reduce production m_expr -> m_expr Slash u_expr 
-- On LessthanEq reduce production m_expr -> m_expr Slash u_expr 
-- On Lessthan reduce production m_expr -> m_expr Slash u_expr 
-- On Leftshift reduce production m_expr -> m_expr Slash u_expr 
-- On Is reduce production m_expr -> m_expr Slash u_expr 
-- On In reduce production m_expr -> m_expr Slash u_expr 
-- On GreaterthanEq reduce production m_expr -> m_expr Slash u_expr 
-- On Greaterthan reduce production m_expr -> m_expr Slash u_expr 
-- On EqualEqual reduce production m_expr -> m_expr Slash u_expr 
-- On Equal reduce production m_expr -> m_expr Slash u_expr 
-- On Dash reduce production m_expr -> m_expr Slash u_expr 
-- On Comma reduce production m_expr -> m_expr Slash u_expr 
-- On Colon reduce production m_expr -> m_expr Slash u_expr 
-- On Caret reduce production m_expr -> m_expr Slash u_expr 
-- On Bar reduce production m_expr -> m_expr Slash u_expr 
-- On Backquote reduce production m_expr -> m_expr Slash u_expr 
-- On And reduce production m_expr -> m_expr Slash u_expr 
-- On Ampersand reduce production m_expr -> m_expr Slash u_expr 

State 81:
m_expr -> m_expr Percent . u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 82
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54

State 82:
m_expr -> m_expr Percent u_expr . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Star reduce production m_expr -> m_expr Percent u_expr 
-- On Slash reduce production m_expr -> m_expr Percent u_expr 
-- On Semicolon reduce production m_expr -> m_expr Percent u_expr 
-- On Rightshift reduce production m_expr -> m_expr Percent u_expr 
-- On Rightparen reduce production m_expr -> m_expr Percent u_expr 
-- On Rightbracket reduce production m_expr -> m_expr Percent u_expr 
-- On Rightbrace reduce production m_expr -> m_expr Percent u_expr 
-- On Plus reduce production m_expr -> m_expr Percent u_expr 
-- On Percent reduce production m_expr -> m_expr Percent u_expr 
-- On Or reduce production m_expr -> m_expr Percent u_expr 
-- On NotEqual reduce production m_expr -> m_expr Percent u_expr 
-- On Not reduce production m_expr -> m_expr Percent u_expr 
-- On Newline reduce production m_expr -> m_expr Percent u_expr 
-- On LessthanEq reduce production m_expr -> m_expr Percent u_expr 
-- On Lessthan reduce production m_expr -> m_expr Percent u_expr 
-- On Leftshift reduce production m_expr -> m_expr Percent u_expr 
-- On Is reduce production m_expr -> m_expr Percent u_expr 
-- On In reduce production m_expr -> m_expr Percent u_expr 
-- On GreaterthanEq reduce production m_expr -> m_expr Percent u_expr 
-- On Greaterthan reduce production m_expr -> m_expr Percent u_expr 
-- On EqualEqual reduce production m_expr -> m_expr Percent u_expr 
-- On Equal reduce production m_expr -> m_expr Percent u_expr 
-- On Dash reduce production m_expr -> m_expr Percent u_expr 
-- On Comma reduce production m_expr -> m_expr Percent u_expr 
-- On Colon reduce production m_expr -> m_expr Percent u_expr 
-- On Caret reduce production m_expr -> m_expr Percent u_expr 
-- On Bar reduce production m_expr -> m_expr Percent u_expr 
-- On Backquote reduce production m_expr -> m_expr Percent u_expr 
-- On And reduce production m_expr -> m_expr Percent u_expr 
-- On Ampersand reduce production m_expr -> m_expr Percent u_expr 

State 83:
and_expr -> and_expr . Ampersand shift_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
xor_expr -> and_expr . [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And ]
-- On Ampersand shift to state 84
-- On Semicolon reduce production xor_expr -> and_expr 
-- On Rightparen reduce production xor_expr -> and_expr 
-- On Rightbracket reduce production xor_expr -> and_expr 
-- On Rightbrace reduce production xor_expr -> and_expr 
-- On Or reduce production xor_expr -> and_expr 
-- On NotEqual reduce production xor_expr -> and_expr 
-- On Not reduce production xor_expr -> and_expr 
-- On Newline reduce production xor_expr -> and_expr 
-- On LessthanEq reduce production xor_expr -> and_expr 
-- On Lessthan reduce production xor_expr -> and_expr 
-- On Is reduce production xor_expr -> and_expr 
-- On In reduce production xor_expr -> and_expr 
-- On GreaterthanEq reduce production xor_expr -> and_expr 
-- On Greaterthan reduce production xor_expr -> and_expr 
-- On EqualEqual reduce production xor_expr -> and_expr 
-- On Equal reduce production xor_expr -> and_expr 
-- On Comma reduce production xor_expr -> and_expr 
-- On Colon reduce production xor_expr -> and_expr 
-- On Caret reduce production xor_expr -> and_expr 
-- On Bar reduce production xor_expr -> and_expr 
-- On Backquote reduce production xor_expr -> and_expr 
-- On And reduce production xor_expr -> and_expr 

State 84:
and_expr -> and_expr Ampersand . shift_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 85
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On a_expr shift to state 92

State 85:
and_expr -> and_expr Ampersand shift_expr . [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
shift_expr -> shift_expr . Leftshift a_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
shift_expr -> shift_expr . Rightshift a_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
-- On Rightshift shift to state 42
-- On Leftshift shift to state 86
-- On Semicolon reduce production and_expr -> and_expr Ampersand shift_expr 
-- On Rightparen reduce production and_expr -> and_expr Ampersand shift_expr 
-- On Rightbracket reduce production and_expr -> and_expr Ampersand shift_expr 
-- On Rightbrace reduce production and_expr -> and_expr Ampersand shift_expr 
-- On Or reduce production and_expr -> and_expr Ampersand shift_expr 
-- On NotEqual reduce production and_expr -> and_expr Ampersand shift_expr 
-- On Not reduce production and_expr -> and_expr Ampersand shift_expr 
-- On Newline reduce production and_expr -> and_expr Ampersand shift_expr 
-- On LessthanEq reduce production and_expr -> and_expr Ampersand shift_expr 
-- On Lessthan reduce production and_expr -> and_expr Ampersand shift_expr 
-- On Is reduce production and_expr -> and_expr Ampersand shift_expr 
-- On In reduce production and_expr -> and_expr Ampersand shift_expr 
-- On GreaterthanEq reduce production and_expr -> and_expr Ampersand shift_expr 
-- On Greaterthan reduce production and_expr -> and_expr Ampersand shift_expr 
-- On EqualEqual reduce production and_expr -> and_expr Ampersand shift_expr 
-- On Equal reduce production and_expr -> and_expr Ampersand shift_expr 
-- On Comma reduce production and_expr -> and_expr Ampersand shift_expr 
-- On Colon reduce production and_expr -> and_expr Ampersand shift_expr 
-- On Caret reduce production and_expr -> and_expr Ampersand shift_expr 
-- On Bar reduce production and_expr -> and_expr Ampersand shift_expr 
-- On Backquote reduce production and_expr -> and_expr Ampersand shift_expr 
-- On And reduce production and_expr -> and_expr Ampersand shift_expr 
-- On Ampersand reduce production and_expr -> and_expr Ampersand shift_expr 

State 86:
shift_expr -> shift_expr Leftshift . a_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On a_expr shift to state 87

State 87:
a_expr -> a_expr . Plus m_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
a_expr -> a_expr . Dash m_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
shift_expr -> shift_expr Leftshift a_expr . [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
-- On Plus shift to state 88
-- On Dash shift to state 90
-- On Semicolon reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Rightshift reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Rightparen reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Rightbracket reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Rightbrace reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Or reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On NotEqual reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Not reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Newline reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On LessthanEq reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Lessthan reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Leftshift reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Is reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On In reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On GreaterthanEq reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Greaterthan reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On EqualEqual reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Equal reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Comma reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Colon reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Caret reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Bar reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Backquote reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On And reduce production shift_expr -> shift_expr Leftshift a_expr 
-- On Ampersand reduce production shift_expr -> shift_expr Leftshift a_expr 

State 88:
a_expr -> a_expr Plus . m_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On m_expr shift to state 89
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54

State 89:
a_expr -> a_expr Plus m_expr . [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Star u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Slash u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Percent u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Star shift to state 77
-- On Slash shift to state 79
-- On Percent shift to state 81
-- On Semicolon reduce production a_expr -> a_expr Plus m_expr 
-- On Rightshift reduce production a_expr -> a_expr Plus m_expr 
-- On Rightparen reduce production a_expr -> a_expr Plus m_expr 
-- On Rightbracket reduce production a_expr -> a_expr Plus m_expr 
-- On Rightbrace reduce production a_expr -> a_expr Plus m_expr 
-- On Plus reduce production a_expr -> a_expr Plus m_expr 
-- On Or reduce production a_expr -> a_expr Plus m_expr 
-- On NotEqual reduce production a_expr -> a_expr Plus m_expr 
-- On Not reduce production a_expr -> a_expr Plus m_expr 
-- On Newline reduce production a_expr -> a_expr Plus m_expr 
-- On LessthanEq reduce production a_expr -> a_expr Plus m_expr 
-- On Lessthan reduce production a_expr -> a_expr Plus m_expr 
-- On Leftshift reduce production a_expr -> a_expr Plus m_expr 
-- On Is reduce production a_expr -> a_expr Plus m_expr 
-- On In reduce production a_expr -> a_expr Plus m_expr 
-- On GreaterthanEq reduce production a_expr -> a_expr Plus m_expr 
-- On Greaterthan reduce production a_expr -> a_expr Plus m_expr 
-- On EqualEqual reduce production a_expr -> a_expr Plus m_expr 
-- On Equal reduce production a_expr -> a_expr Plus m_expr 
-- On Dash reduce production a_expr -> a_expr Plus m_expr 
-- On Comma reduce production a_expr -> a_expr Plus m_expr 
-- On Colon reduce production a_expr -> a_expr Plus m_expr 
-- On Caret reduce production a_expr -> a_expr Plus m_expr 
-- On Bar reduce production a_expr -> a_expr Plus m_expr 
-- On Backquote reduce production a_expr -> a_expr Plus m_expr 
-- On And reduce production a_expr -> a_expr Plus m_expr 
-- On Ampersand reduce production a_expr -> a_expr Plus m_expr 

State 90:
a_expr -> a_expr Dash . m_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On m_expr shift to state 91
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54

State 91:
a_expr -> a_expr Dash m_expr . [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Star u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Slash u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Percent u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Star shift to state 77
-- On Slash shift to state 79
-- On Percent shift to state 81
-- On Semicolon reduce production a_expr -> a_expr Dash m_expr 
-- On Rightshift reduce production a_expr -> a_expr Dash m_expr 
-- On Rightparen reduce production a_expr -> a_expr Dash m_expr 
-- On Rightbracket reduce production a_expr -> a_expr Dash m_expr 
-- On Rightbrace reduce production a_expr -> a_expr Dash m_expr 
-- On Plus reduce production a_expr -> a_expr Dash m_expr 
-- On Or reduce production a_expr -> a_expr Dash m_expr 
-- On NotEqual reduce production a_expr -> a_expr Dash m_expr 
-- On Not reduce production a_expr -> a_expr Dash m_expr 
-- On Newline reduce production a_expr -> a_expr Dash m_expr 
-- On LessthanEq reduce production a_expr -> a_expr Dash m_expr 
-- On Lessthan reduce production a_expr -> a_expr Dash m_expr 
-- On Leftshift reduce production a_expr -> a_expr Dash m_expr 
-- On Is reduce production a_expr -> a_expr Dash m_expr 
-- On In reduce production a_expr -> a_expr Dash m_expr 
-- On GreaterthanEq reduce production a_expr -> a_expr Dash m_expr 
-- On Greaterthan reduce production a_expr -> a_expr Dash m_expr 
-- On EqualEqual reduce production a_expr -> a_expr Dash m_expr 
-- On Equal reduce production a_expr -> a_expr Dash m_expr 
-- On Dash reduce production a_expr -> a_expr Dash m_expr 
-- On Comma reduce production a_expr -> a_expr Dash m_expr 
-- On Colon reduce production a_expr -> a_expr Dash m_expr 
-- On Caret reduce production a_expr -> a_expr Dash m_expr 
-- On Bar reduce production a_expr -> a_expr Dash m_expr 
-- On Backquote reduce production a_expr -> a_expr Dash m_expr 
-- On And reduce production a_expr -> a_expr Dash m_expr 
-- On Ampersand reduce production a_expr -> a_expr Dash m_expr 

State 92:
a_expr -> a_expr . Plus m_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
a_expr -> a_expr . Dash m_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
shift_expr -> a_expr . [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
-- On Plus shift to state 88
-- On Dash shift to state 90
-- On Semicolon reduce production shift_expr -> a_expr 
-- On Rightshift reduce production shift_expr -> a_expr 
-- On Rightparen reduce production shift_expr -> a_expr 
-- On Rightbracket reduce production shift_expr -> a_expr 
-- On Rightbrace reduce production shift_expr -> a_expr 
-- On Or reduce production shift_expr -> a_expr 
-- On NotEqual reduce production shift_expr -> a_expr 
-- On Not reduce production shift_expr -> a_expr 
-- On Newline reduce production shift_expr -> a_expr 
-- On LessthanEq reduce production shift_expr -> a_expr 
-- On Lessthan reduce production shift_expr -> a_expr 
-- On Leftshift reduce production shift_expr -> a_expr 
-- On Is reduce production shift_expr -> a_expr 
-- On In reduce production shift_expr -> a_expr 
-- On GreaterthanEq reduce production shift_expr -> a_expr 
-- On Greaterthan reduce production shift_expr -> a_expr 
-- On EqualEqual reduce production shift_expr -> a_expr 
-- On Equal reduce production shift_expr -> a_expr 
-- On Comma reduce production shift_expr -> a_expr 
-- On Colon reduce production shift_expr -> a_expr 
-- On Caret reduce production shift_expr -> a_expr 
-- On Bar reduce production shift_expr -> a_expr 
-- On Backquote reduce production shift_expr -> a_expr 
-- On And reduce production shift_expr -> a_expr 
-- On Ampersand reduce production shift_expr -> a_expr 

State 93:
and_test -> not_test . [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote And ]
-- On Semicolon reduce production and_test -> not_test 
-- On Rightparen reduce production and_test -> not_test 
-- On Rightbracket reduce production and_test -> not_test 
-- On Rightbrace reduce production and_test -> not_test 
-- On Or reduce production and_test -> not_test 
-- On Newline reduce production and_test -> not_test 
-- On Equal reduce production and_test -> not_test 
-- On Comma reduce production and_test -> not_test 
-- On Colon reduce production and_test -> not_test 
-- On Backquote reduce production and_test -> not_test 
-- On And reduce production and_test -> not_test 

State 94:
comparison -> comparison . comp_operator or_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Backquote And ]
not_test -> comparison . [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote And ]
-- On NotEqual shift to state 95
-- On Not shift to state 96
-- On LessthanEq shift to state 98
-- On Lessthan shift to state 99
-- On Is shift to state 100
-- On In shift to state 102
-- On GreaterthanEq shift to state 103
-- On Greaterthan shift to state 104
-- On EqualEqual shift to state 105
-- On comp_operator shift to state 106
-- On Semicolon reduce production not_test -> comparison 
-- On Rightparen reduce production not_test -> comparison 
-- On Rightbracket reduce production not_test -> comparison 
-- On Rightbrace reduce production not_test -> comparison 
-- On Or reduce production not_test -> comparison 
-- On Newline reduce production not_test -> comparison 
-- On Equal reduce production not_test -> comparison 
-- On Comma reduce production not_test -> comparison 
-- On Colon reduce production not_test -> comparison 
-- On Backquote reduce production not_test -> comparison 
-- On And reduce production not_test -> comparison 

State 95:
comp_operator -> NotEqual . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production comp_operator -> NotEqual 
-- On String reduce production comp_operator -> NotEqual 
-- On Plus reduce production comp_operator -> NotEqual 
-- On Longinteger reduce production comp_operator -> NotEqual 
-- On Leftparen reduce production comp_operator -> NotEqual 
-- On Leftbracket reduce production comp_operator -> NotEqual 
-- On Leftbrace reduce production comp_operator -> NotEqual 
-- On Integer reduce production comp_operator -> NotEqual 
-- On Imaginary reduce production comp_operator -> NotEqual 
-- On Identifier reduce production comp_operator -> NotEqual 
-- On Float reduce production comp_operator -> NotEqual 
-- On Dash reduce production comp_operator -> NotEqual 
-- On Backquote reduce production comp_operator -> NotEqual 

State 96:
comp_operator -> Not . In [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
-- On In shift to state 97

State 97:
comp_operator -> Not In . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production comp_operator -> Not In 
-- On String reduce production comp_operator -> Not In 
-- On Plus reduce production comp_operator -> Not In 
-- On Longinteger reduce production comp_operator -> Not In 
-- On Leftparen reduce production comp_operator -> Not In 
-- On Leftbracket reduce production comp_operator -> Not In 
-- On Leftbrace reduce production comp_operator -> Not In 
-- On Integer reduce production comp_operator -> Not In 
-- On Imaginary reduce production comp_operator -> Not In 
-- On Identifier reduce production comp_operator -> Not In 
-- On Float reduce production comp_operator -> Not In 
-- On Dash reduce production comp_operator -> Not In 
-- On Backquote reduce production comp_operator -> Not In 

State 98:
comp_operator -> LessthanEq . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production comp_operator -> LessthanEq 
-- On String reduce production comp_operator -> LessthanEq 
-- On Plus reduce production comp_operator -> LessthanEq 
-- On Longinteger reduce production comp_operator -> LessthanEq 
-- On Leftparen reduce production comp_operator -> LessthanEq 
-- On Leftbracket reduce production comp_operator -> LessthanEq 
-- On Leftbrace reduce production comp_operator -> LessthanEq 
-- On Integer reduce production comp_operator -> LessthanEq 
-- On Imaginary reduce production comp_operator -> LessthanEq 
-- On Identifier reduce production comp_operator -> LessthanEq 
-- On Float reduce production comp_operator -> LessthanEq 
-- On Dash reduce production comp_operator -> LessthanEq 
-- On Backquote reduce production comp_operator -> LessthanEq 

State 99:
comp_operator -> Lessthan . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production comp_operator -> Lessthan 
-- On String reduce production comp_operator -> Lessthan 
-- On Plus reduce production comp_operator -> Lessthan 
-- On Longinteger reduce production comp_operator -> Lessthan 
-- On Leftparen reduce production comp_operator -> Lessthan 
-- On Leftbracket reduce production comp_operator -> Lessthan 
-- On Leftbrace reduce production comp_operator -> Lessthan 
-- On Integer reduce production comp_operator -> Lessthan 
-- On Imaginary reduce production comp_operator -> Lessthan 
-- On Identifier reduce production comp_operator -> Lessthan 
-- On Float reduce production comp_operator -> Lessthan 
-- On Dash reduce production comp_operator -> Lessthan 
-- On Backquote reduce production comp_operator -> Lessthan 

State 100:
comp_operator -> Is . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
comp_operator -> Is . Not [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
-- On Not shift to state 101
-- On Tilde reduce production comp_operator -> Is 
-- On String reduce production comp_operator -> Is 
-- On Plus reduce production comp_operator -> Is 
-- On Longinteger reduce production comp_operator -> Is 
-- On Leftparen reduce production comp_operator -> Is 
-- On Leftbracket reduce production comp_operator -> Is 
-- On Leftbrace reduce production comp_operator -> Is 
-- On Integer reduce production comp_operator -> Is 
-- On Imaginary reduce production comp_operator -> Is 
-- On Identifier reduce production comp_operator -> Is 
-- On Float reduce production comp_operator -> Is 
-- On Dash reduce production comp_operator -> Is 
-- On Backquote reduce production comp_operator -> Is 

State 101:
comp_operator -> Is Not . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production comp_operator -> Is Not 
-- On String reduce production comp_operator -> Is Not 
-- On Plus reduce production comp_operator -> Is Not 
-- On Longinteger reduce production comp_operator -> Is Not 
-- On Leftparen reduce production comp_operator -> Is Not 
-- On Leftbracket reduce production comp_operator -> Is Not 
-- On Leftbrace reduce production comp_operator -> Is Not 
-- On Integer reduce production comp_operator -> Is Not 
-- On Imaginary reduce production comp_operator -> Is Not 
-- On Identifier reduce production comp_operator -> Is Not 
-- On Float reduce production comp_operator -> Is Not 
-- On Dash reduce production comp_operator -> Is Not 
-- On Backquote reduce production comp_operator -> Is Not 

State 102:
comp_operator -> In . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production comp_operator -> In 
-- On String reduce production comp_operator -> In 
-- On Plus reduce production comp_operator -> In 
-- On Longinteger reduce production comp_operator -> In 
-- On Leftparen reduce production comp_operator -> In 
-- On Leftbracket reduce production comp_operator -> In 
-- On Leftbrace reduce production comp_operator -> In 
-- On Integer reduce production comp_operator -> In 
-- On Imaginary reduce production comp_operator -> In 
-- On Identifier reduce production comp_operator -> In 
-- On Float reduce production comp_operator -> In 
-- On Dash reduce production comp_operator -> In 
-- On Backquote reduce production comp_operator -> In 

State 103:
comp_operator -> GreaterthanEq . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production comp_operator -> GreaterthanEq 
-- On String reduce production comp_operator -> GreaterthanEq 
-- On Plus reduce production comp_operator -> GreaterthanEq 
-- On Longinteger reduce production comp_operator -> GreaterthanEq 
-- On Leftparen reduce production comp_operator -> GreaterthanEq 
-- On Leftbracket reduce production comp_operator -> GreaterthanEq 
-- On Leftbrace reduce production comp_operator -> GreaterthanEq 
-- On Integer reduce production comp_operator -> GreaterthanEq 
-- On Imaginary reduce production comp_operator -> GreaterthanEq 
-- On Identifier reduce production comp_operator -> GreaterthanEq 
-- On Float reduce production comp_operator -> GreaterthanEq 
-- On Dash reduce production comp_operator -> GreaterthanEq 
-- On Backquote reduce production comp_operator -> GreaterthanEq 

State 104:
comp_operator -> Greaterthan . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production comp_operator -> Greaterthan 
-- On String reduce production comp_operator -> Greaterthan 
-- On Plus reduce production comp_operator -> Greaterthan 
-- On Longinteger reduce production comp_operator -> Greaterthan 
-- On Leftparen reduce production comp_operator -> Greaterthan 
-- On Leftbracket reduce production comp_operator -> Greaterthan 
-- On Leftbrace reduce production comp_operator -> Greaterthan 
-- On Integer reduce production comp_operator -> Greaterthan 
-- On Imaginary reduce production comp_operator -> Greaterthan 
-- On Identifier reduce production comp_operator -> Greaterthan 
-- On Float reduce production comp_operator -> Greaterthan 
-- On Dash reduce production comp_operator -> Greaterthan 
-- On Backquote reduce production comp_operator -> Greaterthan 

State 105:
comp_operator -> EqualEqual . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production comp_operator -> EqualEqual 
-- On String reduce production comp_operator -> EqualEqual 
-- On Plus reduce production comp_operator -> EqualEqual 
-- On Longinteger reduce production comp_operator -> EqualEqual 
-- On Leftparen reduce production comp_operator -> EqualEqual 
-- On Leftbracket reduce production comp_operator -> EqualEqual 
-- On Leftbrace reduce production comp_operator -> EqualEqual 
-- On Integer reduce production comp_operator -> EqualEqual 
-- On Imaginary reduce production comp_operator -> EqualEqual 
-- On Identifier reduce production comp_operator -> EqualEqual 
-- On Float reduce production comp_operator -> EqualEqual 
-- On Dash reduce production comp_operator -> EqualEqual 
-- On Backquote reduce production comp_operator -> EqualEqual 

State 106:
comparison -> comparison comp_operator . or_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Backquote And ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_expr shift to state 107
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 107:
comparison -> comparison comp_operator or_expr . [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Backquote And ]
or_expr -> or_expr . Bar xor_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Bar Backquote And ]
-- On Bar shift to state 74
-- On Semicolon reduce production comparison -> comparison comp_operator or_expr 
-- On Rightparen reduce production comparison -> comparison comp_operator or_expr 
-- On Rightbracket reduce production comparison -> comparison comp_operator or_expr 
-- On Rightbrace reduce production comparison -> comparison comp_operator or_expr 
-- On Or reduce production comparison -> comparison comp_operator or_expr 
-- On NotEqual reduce production comparison -> comparison comp_operator or_expr 
-- On Not reduce production comparison -> comparison comp_operator or_expr 
-- On Newline reduce production comparison -> comparison comp_operator or_expr 
-- On LessthanEq reduce production comparison -> comparison comp_operator or_expr 
-- On Lessthan reduce production comparison -> comparison comp_operator or_expr 
-- On Is reduce production comparison -> comparison comp_operator or_expr 
-- On In reduce production comparison -> comparison comp_operator or_expr 
-- On GreaterthanEq reduce production comparison -> comparison comp_operator or_expr 
-- On Greaterthan reduce production comparison -> comparison comp_operator or_expr 
-- On EqualEqual reduce production comparison -> comparison comp_operator or_expr 
-- On Equal reduce production comparison -> comparison comp_operator or_expr 
-- On Comma reduce production comparison -> comparison comp_operator or_expr 
-- On Colon reduce production comparison -> comparison comp_operator or_expr 
-- On Backquote reduce production comparison -> comparison comp_operator or_expr 
-- On And reduce production comparison -> comparison comp_operator or_expr 

State 108:
and_test -> and_test . And not_test [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote And ]
or_test -> or_test Or and_test . [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote ]
-- On And shift to state 109
-- On Semicolon reduce production or_test -> or_test Or and_test 
-- On Rightparen reduce production or_test -> or_test Or and_test 
-- On Rightbracket reduce production or_test -> or_test Or and_test 
-- On Rightbrace reduce production or_test -> or_test Or and_test 
-- On Or reduce production or_test -> or_test Or and_test 
-- On Newline reduce production or_test -> or_test Or and_test 
-- On Equal reduce production or_test -> or_test Or and_test 
-- On Comma reduce production or_test -> or_test Or and_test 
-- On Colon reduce production or_test -> or_test Or and_test 
-- On Backquote reduce production or_test -> or_test Or and_test 

State 109:
and_test -> and_test And . not_test [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote And ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_expr shift to state 73
-- On not_test shift to state 110
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 110:
and_test -> and_test And not_test . [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote And ]
-- On Semicolon reduce production and_test -> and_test And not_test 
-- On Rightparen reduce production and_test -> and_test And not_test 
-- On Rightbracket reduce production and_test -> and_test And not_test 
-- On Rightbrace reduce production and_test -> and_test And not_test 
-- On Or reduce production and_test -> and_test And not_test 
-- On Newline reduce production and_test -> and_test And not_test 
-- On Equal reduce production and_test -> and_test And not_test 
-- On Comma reduce production and_test -> and_test And not_test 
-- On Colon reduce production and_test -> and_test And not_test 
-- On Backquote reduce production and_test -> and_test And not_test 
-- On And reduce production and_test -> and_test And not_test 

State 111:
expression -> lambda_form . [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
-- On Semicolon reduce production expression -> lambda_form 
-- On Rightparen reduce production expression -> lambda_form 
-- On Rightbracket reduce production expression -> lambda_form 
-- On Rightbrace reduce production expression -> lambda_form 
-- On Newline reduce production expression -> lambda_form 
-- On Equal reduce production expression -> lambda_form 
-- On Comma reduce production expression -> lambda_form 
-- On Colon reduce production expression -> lambda_form 
-- On Backquote reduce production expression -> lambda_form 

State 112:
argument -> Identifier Equal expression . [ Rightparen Comma ]
-- On Rightparen reduce production argument -> Identifier Equal expression 
-- On Comma reduce production argument -> Identifier Equal expression 

State 113:
and_test -> and_test . And not_test [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote And ]
or_test -> and_test . [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote ]
-- On And shift to state 109
-- On Semicolon reduce production or_test -> and_test 
-- On Rightparen reduce production or_test -> and_test 
-- On Rightbracket reduce production or_test -> and_test 
-- On Rightbrace reduce production or_test -> and_test 
-- On Or reduce production or_test -> and_test 
-- On Newline reduce production or_test -> and_test 
-- On Equal reduce production or_test -> and_test 
-- On Comma reduce production or_test -> and_test 
-- On Colon reduce production or_test -> and_test 
-- On Backquote reduce production or_test -> and_test 

State 114:
argument -> expression . [ Rightparen Comma ]
-- On Rightparen reduce production argument -> expression 
-- On Comma reduce production argument -> expression 

State 115:
arg_comma_star -> arg_comma_star argument . Comma [ Tilde String StarStar Star Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
arg_list -> arg_comma_star argument . optional_comma [ Rightparen ]
-- On Comma shift to state 116
-- On optional_comma shift to state 117
-- On Rightparen reduce production optional_comma -> 

State 116:
arg_comma_star -> arg_comma_star argument Comma . [ Tilde String StarStar Star Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
optional_comma -> Comma . [ Rightparen ]
-- On Tilde reduce production arg_comma_star -> arg_comma_star argument Comma 
-- On String reduce production arg_comma_star -> arg_comma_star argument Comma 
-- On StarStar reduce production arg_comma_star -> arg_comma_star argument Comma 
-- On Star reduce production arg_comma_star -> arg_comma_star argument Comma 
-- On Rightparen reduce production optional_comma -> Comma 
-- On Plus reduce production arg_comma_star -> arg_comma_star argument Comma 
-- On Not reduce production arg_comma_star -> arg_comma_star argument Comma 
-- On Longinteger reduce production arg_comma_star -> arg_comma_star argument Comma 
-- On Leftparen reduce production arg_comma_star -> arg_comma_star argument Comma 
-- On Leftbracket reduce production arg_comma_star -> arg_comma_star argument Comma 
-- On Leftbrace reduce production arg_comma_star -> arg_comma_star argument Comma 
-- On Lambda reduce production arg_comma_star -> arg_comma_star argument Comma 
-- On Integer reduce production arg_comma_star -> arg_comma_star argument Comma 
-- On Imaginary reduce production arg_comma_star -> arg_comma_star argument Comma 
-- On Identifier reduce production arg_comma_star -> arg_comma_star argument Comma 
-- On Float reduce production arg_comma_star -> arg_comma_star argument Comma 
-- On Dash reduce production arg_comma_star -> arg_comma_star argument Comma 
-- On Backquote reduce production arg_comma_star -> arg_comma_star argument Comma 

State 117:
arg_list -> arg_comma_star argument optional_comma . [ Rightparen ]
-- On Rightparen reduce production arg_list -> arg_comma_star argument optional_comma 

State 118:
slicing -> primary Leftbracket . slice_list Rightbracket [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Ellipsis shift to state 119
-- On Dash shift to state 34
-- On Colon shift to state 120
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On slice_list_without_comma shift to state 122
-- On slice_list shift to state 131
-- On slice_item shift to state 133
-- On short_slice shift to state 125
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 128
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 119:
slice_item -> Ellipsis . [ Rightbracket Comma ]
-- On Rightbracket reduce production slice_item -> Ellipsis 
-- On Comma reduce production slice_item -> Ellipsis 

State 120:
short_slice -> Colon . [ Rightbracket Comma Colon ]
short_slice -> Colon . expression [ Rightbracket Comma Colon ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 121
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
-- On Rightbracket reduce production short_slice -> Colon 
-- On Comma reduce production short_slice -> Colon 
-- On Colon reduce production short_slice -> Colon 

State 121:
short_slice -> Colon expression . [ Rightbracket Comma Colon ]
-- On Rightbracket reduce production short_slice -> Colon expression 
-- On Comma reduce production short_slice -> Colon expression 
-- On Colon reduce production short_slice -> Colon expression 

State 122:
slice_list -> slice_list_without_comma . [ Rightbracket ]
slice_list -> slice_list_without_comma . Comma [ Rightbracket ]
slice_list_without_comma -> slice_list_without_comma . Comma slice_item [ Rightbracket Comma ]
-- On Comma shift to state 123
-- On Rightbracket reduce production slice_list -> slice_list_without_comma 

State 123:
slice_list -> slice_list_without_comma Comma . [ Rightbracket ]
slice_list_without_comma -> slice_list_without_comma Comma . slice_item [ Rightbracket Comma ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Ellipsis shift to state 119
-- On Dash shift to state 34
-- On Colon shift to state 120
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On slice_item shift to state 124
-- On short_slice shift to state 125
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 128
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
-- On Rightbracket reduce production slice_list -> slice_list_without_comma Comma 

State 124:
slice_list_without_comma -> slice_list_without_comma Comma slice_item . [ Rightbracket Comma ]
-- On Rightbracket reduce production slice_list_without_comma -> slice_list_without_comma Comma slice_item 
-- On Comma reduce production slice_list_without_comma -> slice_list_without_comma Comma slice_item 

State 125:
slice_item -> short_slice . [ Rightbracket Comma ]
slice_item -> short_slice . Colon [ Rightbracket Comma ]
slice_item -> short_slice . Colon expression [ Rightbracket Comma ]
-- On Colon shift to state 126
-- On Rightbracket reduce production slice_item -> short_slice 
-- On Comma reduce production slice_item -> short_slice 

State 126:
slice_item -> short_slice Colon . [ Rightbracket Comma ]
slice_item -> short_slice Colon . expression [ Rightbracket Comma ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 127
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
-- On Rightbracket reduce production slice_item -> short_slice Colon 
-- On Comma reduce production slice_item -> short_slice Colon 

State 127:
slice_item -> short_slice Colon expression . [ Rightbracket Comma ]
-- On Rightbracket reduce production slice_item -> short_slice Colon expression 
-- On Comma reduce production slice_item -> short_slice Colon expression 

State 128:
short_slice -> expression . Colon [ Rightbracket Comma Colon ]
short_slice -> expression . Colon expression [ Rightbracket Comma Colon ]
slice_item -> expression . [ Rightbracket Comma ]
-- On Colon shift to state 129
-- On Rightbracket reduce production slice_item -> expression 
-- On Comma reduce production slice_item -> expression 

State 129:
short_slice -> expression Colon . [ Rightbracket Comma Colon ]
short_slice -> expression Colon . expression [ Rightbracket Comma Colon ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 130
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
-- On Rightbracket reduce production short_slice -> expression Colon 
-- On Comma reduce production short_slice -> expression Colon 
-- On Colon reduce production short_slice -> expression Colon 

State 130:
short_slice -> expression Colon expression . [ Rightbracket Comma Colon ]
-- On Rightbracket reduce production short_slice -> expression Colon expression 
-- On Comma reduce production short_slice -> expression Colon expression 
-- On Colon reduce production short_slice -> expression Colon expression 

State 131:
slicing -> primary Leftbracket slice_list . Rightbracket [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On Rightbracket shift to state 132

State 132:
slicing -> primary Leftbracket slice_list Rightbracket . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On StarStar reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On StarEqual reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Star reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On SlashEqual reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Slash reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Semicolon reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On RightshiftEqual reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Rightshift reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Rightparen reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Rightbracket reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Rightbrace reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On PlusEqual reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Plus reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Period reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On PercentEqual reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Percent reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Or reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On NotEqual reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Not reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Newline reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On LessthanEq reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Lessthan reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On LeftshiftEqual reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Leftshift reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Leftparen reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Leftbracket reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Is reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On In reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On GreaterthanEq reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Greaterthan reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On EqualEqual reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Equal reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On DashEqual reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Dash reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Comma reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Colon reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On CaretEqual reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Caret reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On BarEqual reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Bar reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Backquote reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On And reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On AmpersandEqual reduce production slicing -> primary Leftbracket slice_list Rightbracket 
-- On Ampersand reduce production slicing -> primary Leftbracket slice_list Rightbracket 

State 133:
slice_list_without_comma -> slice_item . [ Rightbracket Comma ]
-- On Rightbracket reduce production slice_list_without_comma -> slice_item 
-- On Comma reduce production slice_list_without_comma -> slice_item 

State 134:
a_expr -> a_expr . Plus m_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
a_expr -> a_expr . Dash m_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
shift_expr -> shift_expr Rightshift a_expr . [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
-- On Plus shift to state 88
-- On Dash shift to state 90
-- On Semicolon reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Rightshift reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Rightparen reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Rightbracket reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Rightbrace reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Or reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On NotEqual reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Not reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Newline reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On LessthanEq reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Lessthan reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Leftshift reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Is reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On In reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On GreaterthanEq reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Greaterthan reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On EqualEqual reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Equal reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Comma reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Colon reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Caret reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Bar reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Backquote reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On And reduce production shift_expr -> shift_expr Rightshift a_expr 
-- On Ampersand reduce production shift_expr -> shift_expr Rightshift a_expr 

State 135:
and_expr -> and_expr . Ampersand shift_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
xor_expr -> xor_expr Caret and_expr . [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And ]
-- On Ampersand shift to state 84
-- On Semicolon reduce production xor_expr -> xor_expr Caret and_expr 
-- On Rightparen reduce production xor_expr -> xor_expr Caret and_expr 
-- On Rightbracket reduce production xor_expr -> xor_expr Caret and_expr 
-- On Rightbrace reduce production xor_expr -> xor_expr Caret and_expr 
-- On Or reduce production xor_expr -> xor_expr Caret and_expr 
-- On NotEqual reduce production xor_expr -> xor_expr Caret and_expr 
-- On Not reduce production xor_expr -> xor_expr Caret and_expr 
-- On Newline reduce production xor_expr -> xor_expr Caret and_expr 
-- On LessthanEq reduce production xor_expr -> xor_expr Caret and_expr 
-- On Lessthan reduce production xor_expr -> xor_expr Caret and_expr 
-- On Is reduce production xor_expr -> xor_expr Caret and_expr 
-- On In reduce production xor_expr -> xor_expr Caret and_expr 
-- On GreaterthanEq reduce production xor_expr -> xor_expr Caret and_expr 
-- On Greaterthan reduce production xor_expr -> xor_expr Caret and_expr 
-- On EqualEqual reduce production xor_expr -> xor_expr Caret and_expr 
-- On Equal reduce production xor_expr -> xor_expr Caret and_expr 
-- On Comma reduce production xor_expr -> xor_expr Caret and_expr 
-- On Colon reduce production xor_expr -> xor_expr Caret and_expr 
-- On Caret reduce production xor_expr -> xor_expr Caret and_expr 
-- On Bar reduce production xor_expr -> xor_expr Caret and_expr 
-- On Backquote reduce production xor_expr -> xor_expr Caret and_expr 
-- On And reduce production xor_expr -> xor_expr Caret and_expr 

State 136:
expr_list_without_comma -> expression . [ Semicolon Rightparen Rightbracket Newline Equal Comma Colon Backquote ]
-- On Semicolon reduce production expr_list_without_comma -> expression 
-- On Rightparen reduce production expr_list_without_comma -> expression 
-- On Rightbracket reduce production expr_list_without_comma -> expression 
-- On Newline reduce production expr_list_without_comma -> expression 
-- On Equal reduce production expr_list_without_comma -> expression 
-- On Comma reduce production expr_list_without_comma -> expression 
-- On Colon reduce production expr_list_without_comma -> expression 
-- On Backquote reduce production expr_list_without_comma -> expression 

State 137:
expr_list_without_comma -> expr_list_without_comma . Comma expression [ Comma Backquote ]
string_conversion -> Backquote expr_list_without_comma . Backquote [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On Comma shift to state 138
-- On Backquote shift to state 140

State 138:
expr_list_without_comma -> expr_list_without_comma Comma . expression [ Comma Backquote ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 139
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 139:
expr_list_without_comma -> expr_list_without_comma Comma expression . [ Semicolon Rightparen Rightbracket Newline Equal Comma Colon Backquote ]
-- On Semicolon reduce production expr_list_without_comma -> expr_list_without_comma Comma expression 
-- On Rightparen reduce production expr_list_without_comma -> expr_list_without_comma Comma expression 
-- On Rightbracket reduce production expr_list_without_comma -> expr_list_without_comma Comma expression 
-- On Newline reduce production expr_list_without_comma -> expr_list_without_comma Comma expression 
-- On Equal reduce production expr_list_without_comma -> expr_list_without_comma Comma expression 
-- On Comma reduce production expr_list_without_comma -> expr_list_without_comma Comma expression 
-- On Colon reduce production expr_list_without_comma -> expr_list_without_comma Comma expression 
-- On Backquote reduce production expr_list_without_comma -> expr_list_without_comma Comma expression 

State 140:
string_conversion -> Backquote expr_list_without_comma Backquote . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On StarStar reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On StarEqual reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Star reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On SlashEqual reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Slash reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Semicolon reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On RightshiftEqual reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Rightshift reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Rightparen reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Rightbracket reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Rightbrace reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On PlusEqual reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Plus reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Period reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On PercentEqual reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Percent reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Or reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On NotEqual reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Not reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Newline reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On LessthanEq reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Lessthan reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On LeftshiftEqual reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Leftshift reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Leftparen reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Leftbracket reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Is reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On In reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On GreaterthanEq reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Greaterthan reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On EqualEqual reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Equal reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On DashEqual reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Dash reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Comma reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Colon reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On CaretEqual reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Caret reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On BarEqual reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Bar reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Backquote reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On And reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On AmpersandEqual reduce production string_conversion -> Backquote expr_list_without_comma Backquote 
-- On Ampersand reduce production string_conversion -> Backquote expr_list_without_comma Backquote 

State 141:
u_expr -> Dash u_expr . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Star reduce production u_expr -> Dash u_expr 
-- On Slash reduce production u_expr -> Dash u_expr 
-- On Semicolon reduce production u_expr -> Dash u_expr 
-- On Rightshift reduce production u_expr -> Dash u_expr 
-- On Rightparen reduce production u_expr -> Dash u_expr 
-- On Rightbracket reduce production u_expr -> Dash u_expr 
-- On Rightbrace reduce production u_expr -> Dash u_expr 
-- On Plus reduce production u_expr -> Dash u_expr 
-- On Percent reduce production u_expr -> Dash u_expr 
-- On Or reduce production u_expr -> Dash u_expr 
-- On NotEqual reduce production u_expr -> Dash u_expr 
-- On Not reduce production u_expr -> Dash u_expr 
-- On Newline reduce production u_expr -> Dash u_expr 
-- On LessthanEq reduce production u_expr -> Dash u_expr 
-- On Lessthan reduce production u_expr -> Dash u_expr 
-- On Leftshift reduce production u_expr -> Dash u_expr 
-- On Is reduce production u_expr -> Dash u_expr 
-- On In reduce production u_expr -> Dash u_expr 
-- On GreaterthanEq reduce production u_expr -> Dash u_expr 
-- On Greaterthan reduce production u_expr -> Dash u_expr 
-- On EqualEqual reduce production u_expr -> Dash u_expr 
-- On Equal reduce production u_expr -> Dash u_expr 
-- On Dash reduce production u_expr -> Dash u_expr 
-- On Comma reduce production u_expr -> Dash u_expr 
-- On Colon reduce production u_expr -> Dash u_expr 
-- On Caret reduce production u_expr -> Dash u_expr 
-- On Bar reduce production u_expr -> Dash u_expr 
-- On Backquote reduce production u_expr -> Dash u_expr 
-- On And reduce production u_expr -> Dash u_expr 
-- On Ampersand reduce production u_expr -> Dash u_expr 

State 142:
lambda_form -> Lambda Colon expression . [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
-- On Semicolon reduce production lambda_form -> Lambda Colon expression 
-- On Rightparen reduce production lambda_form -> Lambda Colon expression 
-- On Rightbracket reduce production lambda_form -> Lambda Colon expression 
-- On Rightbrace reduce production lambda_form -> Lambda Colon expression 
-- On Newline reduce production lambda_form -> Lambda Colon expression 
-- On Equal reduce production lambda_form -> Lambda Colon expression 
-- On Comma reduce production lambda_form -> Lambda Colon expression 
-- On Colon reduce production lambda_form -> Lambda Colon expression 
-- On Backquote reduce production lambda_form -> Lambda Colon expression 

State 143:
lambda_form -> Lambda parameter_list . Colon expression [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
-- On Colon shift to state 144

State 144:
lambda_form -> Lambda parameter_list Colon . expression [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 145
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 145:
lambda_form -> Lambda parameter_list Colon expression . [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
-- On Semicolon reduce production lambda_form -> Lambda parameter_list Colon expression 
-- On Rightparen reduce production lambda_form -> Lambda parameter_list Colon expression 
-- On Rightbracket reduce production lambda_form -> Lambda parameter_list Colon expression 
-- On Rightbrace reduce production lambda_form -> Lambda parameter_list Colon expression 
-- On Newline reduce production lambda_form -> Lambda parameter_list Colon expression 
-- On Equal reduce production lambda_form -> Lambda parameter_list Colon expression 
-- On Comma reduce production lambda_form -> Lambda parameter_list Colon expression 
-- On Colon reduce production lambda_form -> Lambda parameter_list Colon expression 
-- On Backquote reduce production lambda_form -> Lambda parameter_list Colon expression 

State 146:
defparam -> parameter . [ Rightparen Comma Colon ]
defparam -> parameter . Equal expression [ Rightparen Comma Colon ]
-- On Equal shift to state 147
-- On Rightparen reduce production defparam -> parameter 
-- On Comma reduce production defparam -> parameter 
-- On Colon reduce production defparam -> parameter 

State 147:
defparam -> parameter Equal . expression [ Rightparen Comma Colon ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 148
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 148:
defparam -> parameter Equal expression . [ Rightparen Comma Colon ]
-- On Rightparen reduce production defparam -> parameter Equal expression 
-- On Comma reduce production defparam -> parameter Equal expression 
-- On Colon reduce production defparam -> parameter Equal expression 

State 149:
defparams -> defparams . Comma defparam [ Rightparen Comma Colon ]
parameter_list -> defparams . optional_comma [ Rightparen Colon ]
parameter_list -> defparams . Comma Star Identifier [ Rightparen Colon ]
parameter_list -> defparams . Comma StarStar Identifier [ Rightparen Colon ]
parameter_list -> defparams . Comma Star Identifier Comma StarStar Identifier [ Rightparen Colon ]
-- On Comma shift to state 150
-- On optional_comma shift to state 159
-- On Rightparen reduce production optional_comma -> 
-- On Colon reduce production optional_comma -> 

State 150:
defparams -> defparams Comma . defparam [ Rightparen Comma Colon ]
optional_comma -> Comma . [ Rightparen Colon ]
parameter_list -> defparams Comma . Star Identifier [ Rightparen Colon ]
parameter_list -> defparams Comma . StarStar Identifier [ Rightparen Colon ]
parameter_list -> defparams Comma . Star Identifier Comma StarStar Identifier [ Rightparen Colon ]
-- On StarStar shift to state 151
-- On Star shift to state 153
-- On Leftparen shift to state 21
-- On Identifier shift to state 22
-- On parameter shift to state 146
-- On defparam shift to state 158
-- On Rightparen reduce production optional_comma -> Comma 
-- On Colon reduce production optional_comma -> Comma 

State 151:
parameter_list -> defparams Comma StarStar . Identifier [ Rightparen Colon ]
-- On Identifier shift to state 152

State 152:
parameter_list -> defparams Comma StarStar Identifier . [ Rightparen Colon ]
-- On Rightparen reduce production parameter_list -> defparams Comma StarStar Identifier 
-- On Colon reduce production parameter_list -> defparams Comma StarStar Identifier 

State 153:
parameter_list -> defparams Comma Star . Identifier [ Rightparen Colon ]
parameter_list -> defparams Comma Star . Identifier Comma StarStar Identifier [ Rightparen Colon ]
-- On Identifier shift to state 154

State 154:
parameter_list -> defparams Comma Star Identifier . [ Rightparen Colon ]
parameter_list -> defparams Comma Star Identifier . Comma StarStar Identifier [ Rightparen Colon ]
-- On Comma shift to state 155
-- On Rightparen reduce production parameter_list -> defparams Comma Star Identifier 
-- On Colon reduce production parameter_list -> defparams Comma Star Identifier 

State 155:
parameter_list -> defparams Comma Star Identifier Comma . StarStar Identifier [ Rightparen Colon ]
-- On StarStar shift to state 156

State 156:
parameter_list -> defparams Comma Star Identifier Comma StarStar . Identifier [ Rightparen Colon ]
-- On Identifier shift to state 157

State 157:
parameter_list -> defparams Comma Star Identifier Comma StarStar Identifier . [ Rightparen Colon ]
-- On Rightparen reduce production parameter_list -> defparams Comma Star Identifier Comma StarStar Identifier 
-- On Colon reduce production parameter_list -> defparams Comma Star Identifier Comma StarStar Identifier 

State 158:
defparams -> defparams Comma defparam . [ Rightparen Comma Colon ]
-- On Rightparen reduce production defparams -> defparams Comma defparam 
-- On Comma reduce production defparams -> defparams Comma defparam 
-- On Colon reduce production defparams -> defparams Comma defparam 

State 159:
parameter_list -> defparams optional_comma . [ Rightparen Colon ]
-- On Rightparen reduce production parameter_list -> defparams optional_comma 
-- On Colon reduce production parameter_list -> defparams optional_comma 

State 160:
defparams -> defparam . [ Rightparen Comma Colon ]
-- On Rightparen reduce production defparams -> defparam 
-- On Comma reduce production defparams -> defparam 
-- On Colon reduce production defparams -> defparam 

State 161:
key_datum_list -> key_datum_list_without_comma . [ Rightbrace ]
key_datum_list -> key_datum_list_without_comma . Comma [ Rightbrace ]
key_datum_list_without_comma -> key_datum_list_without_comma . Comma key_datum [ Rightbrace Comma ]
-- On Comma shift to state 162
-- On Rightbrace reduce production key_datum_list -> key_datum_list_without_comma 

State 162:
key_datum_list -> key_datum_list_without_comma Comma . [ Rightbrace ]
key_datum_list_without_comma -> key_datum_list_without_comma Comma . key_datum [ Rightbrace Comma ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On key_datum shift to state 163
-- On expression shift to state 164
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
-- On Rightbrace reduce production key_datum_list -> key_datum_list_without_comma Comma 

State 163:
key_datum_list_without_comma -> key_datum_list_without_comma Comma key_datum . [ Rightbrace Comma ]
-- On Rightbrace reduce production key_datum_list_without_comma -> key_datum_list_without_comma Comma key_datum 
-- On Comma reduce production key_datum_list_without_comma -> key_datum_list_without_comma Comma key_datum 

State 164:
key_datum -> expression . Colon expression [ Rightbrace Comma ]
-- On Colon shift to state 165

State 165:
key_datum -> expression Colon . expression [ Rightbrace Comma ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 166
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 166:
key_datum -> expression Colon expression . [ Rightbrace Comma ]
-- On Rightbrace reduce production key_datum -> expression Colon expression 
-- On Comma reduce production key_datum -> expression Colon expression 

State 167:
dict_display -> Leftbrace key_datum_list . Rightbrace [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On Rightbrace shift to state 168

State 168:
dict_display -> Leftbrace key_datum_list Rightbrace . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On StarStar reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On StarEqual reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Star reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On SlashEqual reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Slash reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Semicolon reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On RightshiftEqual reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Rightshift reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Rightparen reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Rightbracket reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Rightbrace reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On PlusEqual reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Plus reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Period reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On PercentEqual reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Percent reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Or reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On NotEqual reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Not reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Newline reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On LessthanEq reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Lessthan reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On LeftshiftEqual reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Leftshift reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Leftparen reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Leftbracket reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Is reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On In reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On GreaterthanEq reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Greaterthan reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On EqualEqual reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Equal reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On DashEqual reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Dash reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Comma reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Colon reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On CaretEqual reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Caret reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On BarEqual reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Bar reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Backquote reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On And reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On AmpersandEqual reduce production dict_display -> Leftbrace key_datum_list Rightbrace 
-- On Ampersand reduce production dict_display -> Leftbrace key_datum_list Rightbrace 

State 169:
key_datum_list_without_comma -> key_datum . [ Rightbrace Comma ]
-- On Rightbrace reduce production key_datum_list_without_comma -> key_datum 
-- On Comma reduce production key_datum_list_without_comma -> key_datum 

State 170:
list_display -> Leftbracket listmaker . Rightbracket [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On Rightbracket shift to state 171

State 171:
list_display -> Leftbracket listmaker Rightbracket . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On StarStar reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On StarEqual reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Star reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On SlashEqual reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Slash reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Semicolon reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On RightshiftEqual reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Rightshift reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Rightparen reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Rightbracket reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Rightbrace reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On PlusEqual reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Plus reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Period reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On PercentEqual reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Percent reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Or reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On NotEqual reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Not reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Newline reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On LessthanEq reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Lessthan reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On LeftshiftEqual reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Leftshift reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Leftparen reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Leftbracket reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Is reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On In reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On GreaterthanEq reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Greaterthan reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On EqualEqual reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Equal reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On DashEqual reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Dash reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Comma reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Colon reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On CaretEqual reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Caret reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On BarEqual reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Bar reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Backquote reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On And reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On AmpersandEqual reduce production list_display -> Leftbracket listmaker Rightbracket 
-- On Ampersand reduce production list_display -> Leftbracket listmaker Rightbracket 

State 172:
expr_list -> expr_list_without_comma . [ Semicolon Rightparen Rightbracket Newline Equal Colon ]
expr_list -> expr_list_without_comma . Comma [ Semicolon Rightparen Rightbracket Newline Equal Colon ]
expr_list_without_comma -> expr_list_without_comma . Comma expression [ Semicolon Rightparen Rightbracket Newline Equal Comma Colon ]
-- On Comma shift to state 173
-- On Semicolon reduce production expr_list -> expr_list_without_comma 
-- On Rightparen reduce production expr_list -> expr_list_without_comma 
-- On Rightbracket reduce production expr_list -> expr_list_without_comma 
-- On Newline reduce production expr_list -> expr_list_without_comma 
-- On Equal reduce production expr_list -> expr_list_without_comma 
-- On Colon reduce production expr_list -> expr_list_without_comma 

State 173:
expr_list -> expr_list_without_comma Comma . [ Semicolon Rightparen Rightbracket Newline Equal Colon ]
expr_list_without_comma -> expr_list_without_comma Comma . expression [ Semicolon Rightparen Rightbracket Newline Equal Comma Colon ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 139
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
-- On Semicolon reduce production expr_list -> expr_list_without_comma Comma 
-- On Rightparen reduce production expr_list -> expr_list_without_comma Comma 
-- On Rightbracket reduce production expr_list -> expr_list_without_comma Comma 
-- On Newline reduce production expr_list -> expr_list_without_comma Comma 
-- On Equal reduce production expr_list -> expr_list_without_comma Comma 
-- On Colon reduce production expr_list -> expr_list_without_comma Comma 

State 174:
listmaker -> expr_list . [ Rightbracket ]
-- On Rightbracket reduce production listmaker -> expr_list 

State 175:
not_test -> Not not_test . [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote And ]
-- On Semicolon reduce production not_test -> Not not_test 
-- On Rightparen reduce production not_test -> Not not_test 
-- On Rightbracket reduce production not_test -> Not not_test 
-- On Rightbrace reduce production not_test -> Not not_test 
-- On Or reduce production not_test -> Not not_test 
-- On Newline reduce production not_test -> Not not_test 
-- On Equal reduce production not_test -> Not not_test 
-- On Comma reduce production not_test -> Not not_test 
-- On Colon reduce production not_test -> Not not_test 
-- On Backquote reduce production not_test -> Not not_test 
-- On And reduce production not_test -> Not not_test 

State 176:
expr_list_without_comma -> expr_list_without_comma . Comma expression [ Rightparen Comma ]
parenth_form -> Leftparen expr_list_without_comma . Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
parenth_form -> Leftparen expr_list_without_comma . Comma Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On Rightparen shift to state 177
-- On Comma shift to state 178

State 177:
parenth_form -> Leftparen expr_list_without_comma Rightparen . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On StarStar reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On StarEqual reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Star reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On SlashEqual reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Slash reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Semicolon reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On RightshiftEqual reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Rightshift reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Rightparen reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Rightbracket reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Rightbrace reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On PlusEqual reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Plus reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Period reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On PercentEqual reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Percent reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Or reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On NotEqual reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Not reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Newline reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On LessthanEq reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Lessthan reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On LeftshiftEqual reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Leftshift reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Leftparen reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Leftbracket reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Is reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On In reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On GreaterthanEq reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Greaterthan reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On EqualEqual reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Equal reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On DashEqual reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Dash reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Comma reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Colon reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On CaretEqual reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Caret reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On BarEqual reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Bar reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Backquote reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On And reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On AmpersandEqual reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 
-- On Ampersand reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen 

State 178:
expr_list_without_comma -> expr_list_without_comma Comma . expression [ Rightparen Comma ]
parenth_form -> Leftparen expr_list_without_comma Comma . Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Rightparen shift to state 179
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 139
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 179:
parenth_form -> Leftparen expr_list_without_comma Comma Rightparen . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
-- On StarStarEqual reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On StarStar reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On StarEqual reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Star reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On SlashEqual reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Slash reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Semicolon reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On RightshiftEqual reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Rightshift reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Rightparen reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Rightbracket reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Rightbrace reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On PlusEqual reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Plus reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Period reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On PercentEqual reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Percent reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Or reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On NotEqual reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Not reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Newline reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On LessthanEq reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Lessthan reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On LeftshiftEqual reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Leftshift reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Leftparen reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Leftbracket reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Is reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On In reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On GreaterthanEq reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Greaterthan reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On EqualEqual reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Equal reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On DashEqual reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Dash reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Comma reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Colon reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On CaretEqual reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Caret reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On BarEqual reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Bar reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Backquote reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On And reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On AmpersandEqual reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 
-- On Ampersand reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen 

State 180:
u_expr -> Plus u_expr . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Star reduce production u_expr -> Plus u_expr 
-- On Slash reduce production u_expr -> Plus u_expr 
-- On Semicolon reduce production u_expr -> Plus u_expr 
-- On Rightshift reduce production u_expr -> Plus u_expr 
-- On Rightparen reduce production u_expr -> Plus u_expr 
-- On Rightbracket reduce production u_expr -> Plus u_expr 
-- On Rightbrace reduce production u_expr -> Plus u_expr 
-- On Plus reduce production u_expr -> Plus u_expr 
-- On Percent reduce production u_expr -> Plus u_expr 
-- On Or reduce production u_expr -> Plus u_expr 
-- On NotEqual reduce production u_expr -> Plus u_expr 
-- On Not reduce production u_expr -> Plus u_expr 
-- On Newline reduce production u_expr -> Plus u_expr 
-- On LessthanEq reduce production u_expr -> Plus u_expr 
-- On Lessthan reduce production u_expr -> Plus u_expr 
-- On Leftshift reduce production u_expr -> Plus u_expr 
-- On Is reduce production u_expr -> Plus u_expr 
-- On In reduce production u_expr -> Plus u_expr 
-- On GreaterthanEq reduce production u_expr -> Plus u_expr 
-- On Greaterthan reduce production u_expr -> Plus u_expr 
-- On EqualEqual reduce production u_expr -> Plus u_expr 
-- On Equal reduce production u_expr -> Plus u_expr 
-- On Dash reduce production u_expr -> Plus u_expr 
-- On Comma reduce production u_expr -> Plus u_expr 
-- On Colon reduce production u_expr -> Plus u_expr 
-- On Caret reduce production u_expr -> Plus u_expr 
-- On Bar reduce production u_expr -> Plus u_expr 
-- On Backquote reduce production u_expr -> Plus u_expr 
-- On And reduce production u_expr -> Plus u_expr 
-- On Ampersand reduce production u_expr -> Plus u_expr 

State 181:
u_expr -> Tilde u_expr . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
-- On Star reduce production u_expr -> Tilde u_expr 
-- On Slash reduce production u_expr -> Tilde u_expr 
-- On Semicolon reduce production u_expr -> Tilde u_expr 
-- On Rightshift reduce production u_expr -> Tilde u_expr 
-- On Rightparen reduce production u_expr -> Tilde u_expr 
-- On Rightbracket reduce production u_expr -> Tilde u_expr 
-- On Rightbrace reduce production u_expr -> Tilde u_expr 
-- On Plus reduce production u_expr -> Tilde u_expr 
-- On Percent reduce production u_expr -> Tilde u_expr 
-- On Or reduce production u_expr -> Tilde u_expr 
-- On NotEqual reduce production u_expr -> Tilde u_expr 
-- On Not reduce production u_expr -> Tilde u_expr 
-- On Newline reduce production u_expr -> Tilde u_expr 
-- On LessthanEq reduce production u_expr -> Tilde u_expr 
-- On Lessthan reduce production u_expr -> Tilde u_expr 
-- On Leftshift reduce production u_expr -> Tilde u_expr 
-- On Is reduce production u_expr -> Tilde u_expr 
-- On In reduce production u_expr -> Tilde u_expr 
-- On GreaterthanEq reduce production u_expr -> Tilde u_expr 
-- On Greaterthan reduce production u_expr -> Tilde u_expr 
-- On EqualEqual reduce production u_expr -> Tilde u_expr 
-- On Equal reduce production u_expr -> Tilde u_expr 
-- On Dash reduce production u_expr -> Tilde u_expr 
-- On Comma reduce production u_expr -> Tilde u_expr 
-- On Colon reduce production u_expr -> Tilde u_expr 
-- On Caret reduce production u_expr -> Tilde u_expr 
-- On Bar reduce production u_expr -> Tilde u_expr 
-- On Backquote reduce production u_expr -> Tilde u_expr 
-- On And reduce production u_expr -> Tilde u_expr 
-- On Ampersand reduce production u_expr -> Tilde u_expr 

State 182:
while_stmt -> While expression . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
while_stmt -> While expression . Colon suite Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Colon shift to state 183

State 183:
while_stmt -> While expression Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
while_stmt -> While expression Colon . suite Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 359
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 184:
return_stmt -> Return . [ Semicolon Newline ]
return_stmt -> Return . expr_list [ Semicolon Newline ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 185
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
-- On Semicolon reduce production return_stmt -> Return 
-- On Newline reduce production return_stmt -> Return 

State 185:
return_stmt -> Return expr_list . [ Semicolon Newline ]
-- On Semicolon reduce production return_stmt -> Return expr_list 
-- On Newline reduce production return_stmt -> Return expr_list 

State 186:
raise_stmt -> Raise . [ Semicolon Newline ]
raise_stmt -> Raise . expression [ Semicolon Newline ]
raise_stmt -> Raise . expression Comma expression [ Semicolon Newline ]
raise_stmt -> Raise . expression Comma expression Comma expression [ Semicolon Newline ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 187
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
-- On Semicolon reduce production raise_stmt -> Raise 
-- On Newline reduce production raise_stmt -> Raise 

State 187:
raise_stmt -> Raise expression . [ Semicolon Newline ]
raise_stmt -> Raise expression . Comma expression [ Semicolon Newline ]
raise_stmt -> Raise expression . Comma expression Comma expression [ Semicolon Newline ]
-- On Comma shift to state 188
-- On Semicolon reduce production raise_stmt -> Raise expression 
-- On Newline reduce production raise_stmt -> Raise expression 

State 188:
raise_stmt -> Raise expression Comma . expression [ Semicolon Newline ]
raise_stmt -> Raise expression Comma . expression Comma expression [ Semicolon Newline ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 189
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 189:
raise_stmt -> Raise expression Comma expression . [ Semicolon Newline ]
raise_stmt -> Raise expression Comma expression . Comma expression [ Semicolon Newline ]
-- On Comma shift to state 190
-- On Semicolon reduce production raise_stmt -> Raise expression Comma expression 
-- On Newline reduce production raise_stmt -> Raise expression Comma expression 

State 190:
raise_stmt -> Raise expression Comma expression Comma . expression [ Semicolon Newline ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 191
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 191:
raise_stmt -> Raise expression Comma expression Comma expression . [ Semicolon Newline ]
-- On Semicolon reduce production raise_stmt -> Raise expression Comma expression Comma expression 
-- On Newline reduce production raise_stmt -> Raise expression Comma expression Comma expression 

State 192:
print_stmt -> Print . [ Semicolon Newline ]
print_stmt -> Print . expr_list [ Semicolon Newline ]
print_stmt -> Print . Rightshift expression [ Semicolon Newline ]
print_stmt -> Print . Rightshift expression Comma expr_list [ Semicolon Newline ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Rightshift shift to state 193
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 197
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
-- On Semicolon reduce production print_stmt -> Print 
-- On Newline reduce production print_stmt -> Print 

State 193:
print_stmt -> Print Rightshift . expression [ Semicolon Newline ]
print_stmt -> Print Rightshift . expression Comma expr_list [ Semicolon Newline ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 194
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 194:
print_stmt -> Print Rightshift expression . [ Semicolon Newline ]
print_stmt -> Print Rightshift expression . Comma expr_list [ Semicolon Newline ]
-- On Comma shift to state 195
-- On Semicolon reduce production print_stmt -> Print Rightshift expression 
-- On Newline reduce production print_stmt -> Print Rightshift expression 

State 195:
print_stmt -> Print Rightshift expression Comma . expr_list [ Semicolon Newline ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 196
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 196:
print_stmt -> Print Rightshift expression Comma expr_list . [ Semicolon Newline ]
-- On Semicolon reduce production print_stmt -> Print Rightshift expression Comma expr_list 
-- On Newline reduce production print_stmt -> Print Rightshift expression Comma expr_list 

State 197:
print_stmt -> Print expr_list . [ Semicolon Newline ]
-- On Semicolon reduce production print_stmt -> Print expr_list 
-- On Newline reduce production print_stmt -> Print expr_list 

State 198:
pass_stmt -> Pass . [ Semicolon Newline ]
-- On Semicolon reduce production pass_stmt -> Pass 
-- On Newline reduce production pass_stmt -> Pass 

State 199:
suite -> Newline . Indent statement_plus Dedent [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Finally Except Else Elif Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Indent shift to state 200

State 200:
suite -> Newline Indent . statement_plus Dedent [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Finally Except Else Elif Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While shift to state 1
-- On Try shift to state 201
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On If shift to state 301
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On For shift to state 314
-- On Float shift to state 33
-- On Del shift to state 232
-- On Def shift to state 323
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Class shift to state 333
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On while_stmt shift to state 344
-- On u_expr shift to state 38
-- On try_stmt shift to state 345
-- On try_fin_stmt shift to state 346
-- On try_exc_stmt shift to state 347
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 348
-- On statement_plus shift to state 350
-- On statement shift to state 358
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On if_stmt shift to state 353
-- On global_stmt shift to state 270
-- On funcdef shift to state 354
-- On for_stmt shift to state 355
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On compound_stmt shift to state 356
-- On comparison shift to state 94
-- On classdef shift to state 357
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 201:
try_exc_stmt -> Try . Colon suite exc_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
try_exc_stmt -> Try . Colon suite exc_list Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
try_fin_stmt -> Try . Colon suite Finally Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Colon shift to state 202

State 202:
try_exc_stmt -> Try Colon . suite exc_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
try_exc_stmt -> Try Colon . suite exc_list Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
try_fin_stmt -> Try Colon . suite Finally Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 244
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 203:
import_stmt -> Import . module_list [ Semicolon Newline ]
-- On Identifier shift to state 204
-- On module_name shift to state 205
-- On module_list shift to state 210

State 204:
module_name -> Identifier . [ Semicolon Period Newline Import Identifier Comma ]
-- On Semicolon reduce production module_name -> Identifier 
-- On Period reduce production module_name -> Identifier 
-- On Newline reduce production module_name -> Identifier 
-- On Import reduce production module_name -> Identifier 
-- On Identifier reduce production module_name -> Identifier 
-- On Comma reduce production module_name -> Identifier 

State 205:
module_list -> module_name . [ Semicolon Newline Comma ]
module_list -> module_name . Identifier Identifier [ Semicolon Newline Comma ]
module_name -> module_name . Period Identifier [ Semicolon Period Newline Identifier Comma ]
-- On Period shift to state 206
-- On Identifier shift to state 208
-- On Semicolon reduce production module_list -> module_name 
-- On Newline reduce production module_list -> module_name 
-- On Comma reduce production module_list -> module_name 

State 206:
module_name -> module_name Period . Identifier [ Semicolon Period Newline Import Identifier Comma ]
-- On Identifier shift to state 207

State 207:
module_name -> module_name Period Identifier . [ Semicolon Period Newline Import Identifier Comma ]
-- On Semicolon reduce production module_name -> module_name Period Identifier 
-- On Period reduce production module_name -> module_name Period Identifier 
-- On Newline reduce production module_name -> module_name Period Identifier 
-- On Import reduce production module_name -> module_name Period Identifier 
-- On Identifier reduce production module_name -> module_name Period Identifier 
-- On Comma reduce production module_name -> module_name Period Identifier 

State 208:
module_list -> module_name Identifier . Identifier [ Semicolon Newline Comma ]
-- On Identifier shift to state 209

State 209:
module_list -> module_name Identifier Identifier . [ Semicolon Newline Comma ]
-- On Semicolon reduce production module_list -> module_name Identifier Identifier 
-- On Newline reduce production module_list -> module_name Identifier Identifier 
-- On Comma reduce production module_list -> module_name Identifier Identifier 

State 210:
import_stmt -> Import module_list . [ Semicolon Newline ]
module_list -> module_list . Comma module_name [ Semicolon Newline Comma ]
module_list -> module_list . Comma module_name Identifier Identifier [ Semicolon Newline Comma ]
-- On Comma shift to state 211
-- On Semicolon reduce production import_stmt -> Import module_list 
-- On Newline reduce production import_stmt -> Import module_list 

State 211:
module_list -> module_list Comma . module_name [ Semicolon Newline Comma ]
module_list -> module_list Comma . module_name Identifier Identifier [ Semicolon Newline Comma ]
-- On Identifier shift to state 204
-- On module_name shift to state 212

State 212:
module_list -> module_list Comma module_name . [ Semicolon Newline Comma ]
module_list -> module_list Comma module_name . Identifier Identifier [ Semicolon Newline Comma ]
module_name -> module_name . Period Identifier [ Semicolon Period Newline Identifier Comma ]
-- On Period shift to state 206
-- On Identifier shift to state 213
-- On Semicolon reduce production module_list -> module_list Comma module_name 
-- On Newline reduce production module_list -> module_list Comma module_name 
-- On Comma reduce production module_list -> module_list Comma module_name 

State 213:
module_list -> module_list Comma module_name Identifier . Identifier [ Semicolon Newline Comma ]
-- On Identifier shift to state 214

State 214:
module_list -> module_list Comma module_name Identifier Identifier . [ Semicolon Newline Comma ]
-- On Semicolon reduce production module_list -> module_list Comma module_name Identifier Identifier 
-- On Newline reduce production module_list -> module_list Comma module_name Identifier Identifier 
-- On Comma reduce production module_list -> module_list Comma module_name Identifier Identifier 

State 215:
global_stmt -> Global . identifier_list [ Semicolon Newline ]
-- On Identifier shift to state 216
-- On identifier_list shift to state 217

State 216:
identifier_list -> Identifier . [ Semicolon Newline Comma ]
-- On Semicolon reduce production identifier_list -> Identifier 
-- On Newline reduce production identifier_list -> Identifier 
-- On Comma reduce production identifier_list -> Identifier 

State 217:
global_stmt -> Global identifier_list . [ Semicolon Newline ]
identifier_list -> identifier_list . Comma Identifier [ Semicolon Newline Comma ]
-- On Comma shift to state 218
-- On Semicolon reduce production global_stmt -> Global identifier_list 
-- On Newline reduce production global_stmt -> Global identifier_list 

State 218:
identifier_list -> identifier_list Comma . Identifier [ Semicolon Newline Comma ]
-- On Identifier shift to state 219

State 219:
identifier_list -> identifier_list Comma Identifier . [ Semicolon Newline Comma ]
-- On Semicolon reduce production identifier_list -> identifier_list Comma Identifier 
-- On Newline reduce production identifier_list -> identifier_list Comma Identifier 
-- On Comma reduce production identifier_list -> identifier_list Comma Identifier 

State 220:
import_stmt -> From . module_name Import Star [ Semicolon Newline ]
import_stmt -> From . module_name Import import_ident_list [ Semicolon Newline ]
-- On Identifier shift to state 204
-- On module_name shift to state 221

State 221:
import_stmt -> From module_name . Import Star [ Semicolon Newline ]
import_stmt -> From module_name . Import import_ident_list [ Semicolon Newline ]
module_name -> module_name . Period Identifier [ Period Import ]
-- On Period shift to state 206
-- On Import shift to state 222

State 222:
import_stmt -> From module_name Import . Star [ Semicolon Newline ]
import_stmt -> From module_name Import . import_ident_list [ Semicolon Newline ]
-- On Star shift to state 223
-- On Identifier shift to state 224
-- On import_ident_list shift to state 227

State 223:
import_stmt -> From module_name Import Star . [ Semicolon Newline ]
-- On Semicolon reduce production import_stmt -> From module_name Import Star 
-- On Newline reduce production import_stmt -> From module_name Import Star 

State 224:
import_ident_list -> Identifier . [ Semicolon Newline Comma ]
import_ident_list -> Identifier . Identifier Identifier [ Semicolon Newline Comma ]
-- On Identifier shift to state 225
-- On Semicolon reduce production import_ident_list -> Identifier 
-- On Newline reduce production import_ident_list -> Identifier 
-- On Comma reduce production import_ident_list -> Identifier 

State 225:
import_ident_list -> Identifier Identifier . Identifier [ Semicolon Newline Comma ]
-- On Identifier shift to state 226

State 226:
import_ident_list -> Identifier Identifier Identifier . [ Semicolon Newline Comma ]
-- On Semicolon reduce production import_ident_list -> Identifier Identifier Identifier 
-- On Newline reduce production import_ident_list -> Identifier Identifier Identifier 
-- On Comma reduce production import_ident_list -> Identifier Identifier Identifier 

State 227:
import_ident_list -> import_ident_list . Comma Identifier [ Semicolon Newline Comma ]
import_ident_list -> import_ident_list . Comma Identifier Identifier Identifier [ Semicolon Newline Comma ]
import_stmt -> From module_name Import import_ident_list . [ Semicolon Newline ]
-- On Comma shift to state 228
-- On Semicolon reduce production import_stmt -> From module_name Import import_ident_list 
-- On Newline reduce production import_stmt -> From module_name Import import_ident_list 

State 228:
import_ident_list -> import_ident_list Comma . Identifier [ Semicolon Newline Comma ]
import_ident_list -> import_ident_list Comma . Identifier Identifier Identifier [ Semicolon Newline Comma ]
-- On Identifier shift to state 229

State 229:
import_ident_list -> import_ident_list Comma Identifier . [ Semicolon Newline Comma ]
import_ident_list -> import_ident_list Comma Identifier . Identifier Identifier [ Semicolon Newline Comma ]
-- On Identifier shift to state 230
-- On Semicolon reduce production import_ident_list -> import_ident_list Comma Identifier 
-- On Newline reduce production import_ident_list -> import_ident_list Comma Identifier 
-- On Comma reduce production import_ident_list -> import_ident_list Comma Identifier 

State 230:
import_ident_list -> import_ident_list Comma Identifier Identifier . Identifier [ Semicolon Newline Comma ]
-- On Identifier shift to state 231

State 231:
import_ident_list -> import_ident_list Comma Identifier Identifier Identifier . [ Semicolon Newline Comma ]
-- On Semicolon reduce production import_ident_list -> import_ident_list Comma Identifier Identifier Identifier 
-- On Newline reduce production import_ident_list -> import_ident_list Comma Identifier Identifier Identifier 
-- On Comma reduce production import_ident_list -> import_ident_list Comma Identifier Identifier Identifier 

State 232:
del_stmt -> Del . target_list [ Semicolon Newline ]
-- On String shift to state 3
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Backquote shift to state 35
-- On target_list_without_comma shift to state 233
-- On target_list shift to state 236
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 237
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54

State 233:
target_list -> target_list_without_comma . [ Semicolon Newline In ]
target_list -> target_list_without_comma . Comma [ Semicolon Newline In ]
target_list_without_comma -> target_list_without_comma . Comma primary [ Semicolon Newline In Comma ]
-- On Comma shift to state 234
-- On Semicolon reduce production target_list -> target_list_without_comma 
-- On Newline reduce production target_list -> target_list_without_comma 
-- On In reduce production target_list -> target_list_without_comma 

State 234:
target_list -> target_list_without_comma Comma . [ Semicolon Newline In ]
target_list_without_comma -> target_list_without_comma Comma . primary [ Semicolon Newline In Comma ]
-- On String shift to state 3
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Backquote shift to state 35
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 235
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On Semicolon reduce production target_list -> target_list_without_comma Comma 
-- On Newline reduce production target_list -> target_list_without_comma Comma 
-- On In reduce production target_list -> target_list_without_comma Comma 

State 235:
attributeref -> primary . Period Identifier [ Semicolon Period Newline Leftparen Leftbracket In Comma ]
call -> primary . Leftparen Rightparen [ Semicolon Period Newline Leftparen Leftbracket In Comma ]
call -> primary . Leftparen arg_list Rightparen [ Semicolon Period Newline Leftparen Leftbracket In Comma ]
slicing -> primary . Leftbracket slice_list Rightbracket [ Semicolon Period Newline Leftparen Leftbracket In Comma ]
target_list_without_comma -> target_list_without_comma Comma primary . [ Semicolon Newline In Comma ]
-- On Period shift to state 55
-- On Leftparen shift to state 57
-- On Leftbracket shift to state 118
-- On Semicolon reduce production target_list_without_comma -> target_list_without_comma Comma primary 
-- On Newline reduce production target_list_without_comma -> target_list_without_comma Comma primary 
-- On In reduce production target_list_without_comma -> target_list_without_comma Comma primary 
-- On Comma reduce production target_list_without_comma -> target_list_without_comma Comma primary 

State 236:
del_stmt -> Del target_list . [ Semicolon Newline ]
-- On Semicolon reduce production del_stmt -> Del target_list 
-- On Newline reduce production del_stmt -> Del target_list 

State 237:
attributeref -> primary . Period Identifier [ Semicolon Period Newline Leftparen Leftbracket In Comma ]
call -> primary . Leftparen Rightparen [ Semicolon Period Newline Leftparen Leftbracket In Comma ]
call -> primary . Leftparen arg_list Rightparen [ Semicolon Period Newline Leftparen Leftbracket In Comma ]
slicing -> primary . Leftbracket slice_list Rightbracket [ Semicolon Period Newline Leftparen Leftbracket In Comma ]
target_list_without_comma -> primary . [ Semicolon Newline In Comma ]
-- On Period shift to state 55
-- On Leftparen shift to state 57
-- On Leftbracket shift to state 118
-- On Semicolon reduce production target_list_without_comma -> primary 
-- On Newline reduce production target_list_without_comma -> primary 
-- On In reduce production target_list_without_comma -> primary 
-- On Comma reduce production target_list_without_comma -> primary 

State 238:
continue_stmt -> Continue . [ Semicolon Newline ]
-- On Semicolon reduce production continue_stmt -> Continue 
-- On Newline reduce production continue_stmt -> Continue 

State 239:
break_stmt -> Break . [ Semicolon Newline ]
-- On Semicolon reduce production break_stmt -> Break 
-- On Newline reduce production break_stmt -> Break 

State 240:
assert_stmt -> Assert . expression [ Semicolon Newline ]
assert_stmt -> Assert . expression Comma expression [ Semicolon Newline ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 241
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 241:
assert_stmt -> Assert expression . [ Semicolon Newline ]
assert_stmt -> Assert expression . Comma expression [ Semicolon Newline ]
-- On Comma shift to state 242
-- On Semicolon reduce production assert_stmt -> Assert expression 
-- On Newline reduce production assert_stmt -> Assert expression 

State 242:
assert_stmt -> Assert expression Comma . expression [ Semicolon Newline ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 243
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 243:
assert_stmt -> Assert expression Comma expression . [ Semicolon Newline ]
-- On Semicolon reduce production assert_stmt -> Assert expression Comma expression 
-- On Newline reduce production assert_stmt -> Assert expression Comma expression 

State 244:
try_exc_stmt -> Try Colon suite . exc_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
try_exc_stmt -> Try Colon suite . exc_list Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
try_fin_stmt -> Try Colon suite . Finally Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Finally shift to state 245
-- On Except shift to state 285
-- On exc_list shift to state 295
-- On exc_item shift to state 300

State 245:
try_fin_stmt -> Try Colon suite Finally . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Colon shift to state 246

State 246:
try_fin_stmt -> Try Colon suite Finally Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 247
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 247:
try_fin_stmt -> Try Colon suite Finally Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Try reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Tilde reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On String reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Return reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Raise reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Print reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Plus reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Pass reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Not reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Newline reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Longinteger reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Leftparen reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Leftbracket reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Leftbrace reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Lambda reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Integer reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Import reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Imaginary reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On If reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Identifier reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Global reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On From reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On For reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Float reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Del reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Def reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Dedent reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Dash reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Continue reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Class reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Break reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Backquote reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On Assert reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 
-- On # reduce production try_fin_stmt -> Try Colon suite Finally Colon suite 

State 248:
stmt_list -> stmt_list_without_semicolon . [ Newline ]
stmt_list -> stmt_list_without_semicolon . Semicolon [ Newline ]
stmt_list_without_semicolon -> stmt_list_without_semicolon . Semicolon simple_stmt [ Semicolon Newline ]
-- On Semicolon shift to state 249
-- On Newline reduce production stmt_list -> stmt_list_without_semicolon 

State 249:
stmt_list -> stmt_list_without_semicolon Semicolon . [ Newline ]
stmt_list_without_semicolon -> stmt_list_without_semicolon Semicolon . simple_stmt [ Semicolon Newline ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On simple_stmt shift to state 250
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
-- On Newline reduce production stmt_list -> stmt_list_without_semicolon Semicolon 

State 250:
stmt_list_without_semicolon -> stmt_list_without_semicolon Semicolon simple_stmt . [ Semicolon Newline ]
-- On Semicolon reduce production stmt_list_without_semicolon -> stmt_list_without_semicolon Semicolon simple_stmt 
-- On Newline reduce production stmt_list_without_semicolon -> stmt_list_without_semicolon Semicolon simple_stmt 

State 251:
simple_stmt -> return_stmt . [ Semicolon Newline ]
-- On Semicolon reduce production simple_stmt -> return_stmt 
-- On Newline reduce production simple_stmt -> return_stmt 

State 252:
simple_stmt -> raise_stmt . [ Semicolon Newline ]
-- On Semicolon reduce production simple_stmt -> raise_stmt 
-- On Newline reduce production simple_stmt -> raise_stmt 

State 253:
simple_stmt -> print_stmt . [ Semicolon Newline ]
-- On Semicolon reduce production simple_stmt -> print_stmt 
-- On Newline reduce production simple_stmt -> print_stmt 

State 254:
attributeref -> primary . Period Identifier [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma CaretEqual Caret BarEqual Bar And AmpersandEqual Ampersand ]
augmented_assignment_stmt -> primary . augop expr_list [ Semicolon Newline ]
call -> primary . Leftparen Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma CaretEqual Caret BarEqual Bar And AmpersandEqual Ampersand ]
call -> primary . Leftparen arg_list Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma CaretEqual Caret BarEqual Bar And AmpersandEqual Ampersand ]
power -> primary . [ Star Slash Semicolon Rightshift Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Caret Bar And Ampersand ]
power -> primary . StarStar u_expr [ Star Slash Semicolon Rightshift Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Caret Bar And Ampersand ]
slicing -> primary . Leftbracket slice_list Rightbracket [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma CaretEqual Caret BarEqual Bar And AmpersandEqual Ampersand ]
-- On StarStarEqual shift to state 255
-- On StarStar shift to state 44
-- On StarEqual shift to state 256
-- On SlashEqual shift to state 257
-- On RightshiftEqual shift to state 258
-- On PlusEqual shift to state 259
-- On Period shift to state 55
-- On PercentEqual shift to state 260
-- On LeftshiftEqual shift to state 261
-- On Leftparen shift to state 57
-- On Leftbracket shift to state 118
-- On DashEqual shift to state 262
-- On CaretEqual shift to state 263
-- On BarEqual shift to state 264
-- On AmpersandEqual shift to state 265
-- On augop shift to state 266
-- On Star reduce production power -> primary 
-- On Slash reduce production power -> primary 
-- On Semicolon reduce production power -> primary 
-- On Rightshift reduce production power -> primary 
-- On Plus reduce production power -> primary 
-- On Percent reduce production power -> primary 
-- On Or reduce production power -> primary 
-- On NotEqual reduce production power -> primary 
-- On Not reduce production power -> primary 
-- On Newline reduce production power -> primary 
-- On LessthanEq reduce production power -> primary 
-- On Lessthan reduce production power -> primary 
-- On Leftshift reduce production power -> primary 
-- On Is reduce production power -> primary 
-- On In reduce production power -> primary 
-- On GreaterthanEq reduce production power -> primary 
-- On Greaterthan reduce production power -> primary 
-- On EqualEqual reduce production power -> primary 
-- On Equal reduce production power -> primary 
-- On Dash reduce production power -> primary 
-- On Comma reduce production power -> primary 
-- On Caret reduce production power -> primary 
-- On Bar reduce production power -> primary 
-- On And reduce production power -> primary 
-- On Ampersand reduce production power -> primary 

State 255:
augop -> StarStarEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production augop -> StarStarEqual 
-- On String reduce production augop -> StarStarEqual 
-- On Plus reduce production augop -> StarStarEqual 
-- On Not reduce production augop -> StarStarEqual 
-- On Longinteger reduce production augop -> StarStarEqual 
-- On Leftparen reduce production augop -> StarStarEqual 
-- On Leftbracket reduce production augop -> StarStarEqual 
-- On Leftbrace reduce production augop -> StarStarEqual 
-- On Lambda reduce production augop -> StarStarEqual 
-- On Integer reduce production augop -> StarStarEqual 
-- On Imaginary reduce production augop -> StarStarEqual 
-- On Identifier reduce production augop -> StarStarEqual 
-- On Float reduce production augop -> StarStarEqual 
-- On Dash reduce production augop -> StarStarEqual 
-- On Backquote reduce production augop -> StarStarEqual 

State 256:
augop -> StarEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production augop -> StarEqual 
-- On String reduce production augop -> StarEqual 
-- On Plus reduce production augop -> StarEqual 
-- On Not reduce production augop -> StarEqual 
-- On Longinteger reduce production augop -> StarEqual 
-- On Leftparen reduce production augop -> StarEqual 
-- On Leftbracket reduce production augop -> StarEqual 
-- On Leftbrace reduce production augop -> StarEqual 
-- On Lambda reduce production augop -> StarEqual 
-- On Integer reduce production augop -> StarEqual 
-- On Imaginary reduce production augop -> StarEqual 
-- On Identifier reduce production augop -> StarEqual 
-- On Float reduce production augop -> StarEqual 
-- On Dash reduce production augop -> StarEqual 
-- On Backquote reduce production augop -> StarEqual 

State 257:
augop -> SlashEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production augop -> SlashEqual 
-- On String reduce production augop -> SlashEqual 
-- On Plus reduce production augop -> SlashEqual 
-- On Not reduce production augop -> SlashEqual 
-- On Longinteger reduce production augop -> SlashEqual 
-- On Leftparen reduce production augop -> SlashEqual 
-- On Leftbracket reduce production augop -> SlashEqual 
-- On Leftbrace reduce production augop -> SlashEqual 
-- On Lambda reduce production augop -> SlashEqual 
-- On Integer reduce production augop -> SlashEqual 
-- On Imaginary reduce production augop -> SlashEqual 
-- On Identifier reduce production augop -> SlashEqual 
-- On Float reduce production augop -> SlashEqual 
-- On Dash reduce production augop -> SlashEqual 
-- On Backquote reduce production augop -> SlashEqual 

State 258:
augop -> RightshiftEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production augop -> RightshiftEqual 
-- On String reduce production augop -> RightshiftEqual 
-- On Plus reduce production augop -> RightshiftEqual 
-- On Not reduce production augop -> RightshiftEqual 
-- On Longinteger reduce production augop -> RightshiftEqual 
-- On Leftparen reduce production augop -> RightshiftEqual 
-- On Leftbracket reduce production augop -> RightshiftEqual 
-- On Leftbrace reduce production augop -> RightshiftEqual 
-- On Lambda reduce production augop -> RightshiftEqual 
-- On Integer reduce production augop -> RightshiftEqual 
-- On Imaginary reduce production augop -> RightshiftEqual 
-- On Identifier reduce production augop -> RightshiftEqual 
-- On Float reduce production augop -> RightshiftEqual 
-- On Dash reduce production augop -> RightshiftEqual 
-- On Backquote reduce production augop -> RightshiftEqual 

State 259:
augop -> PlusEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production augop -> PlusEqual 
-- On String reduce production augop -> PlusEqual 
-- On Plus reduce production augop -> PlusEqual 
-- On Not reduce production augop -> PlusEqual 
-- On Longinteger reduce production augop -> PlusEqual 
-- On Leftparen reduce production augop -> PlusEqual 
-- On Leftbracket reduce production augop -> PlusEqual 
-- On Leftbrace reduce production augop -> PlusEqual 
-- On Lambda reduce production augop -> PlusEqual 
-- On Integer reduce production augop -> PlusEqual 
-- On Imaginary reduce production augop -> PlusEqual 
-- On Identifier reduce production augop -> PlusEqual 
-- On Float reduce production augop -> PlusEqual 
-- On Dash reduce production augop -> PlusEqual 
-- On Backquote reduce production augop -> PlusEqual 

State 260:
augop -> PercentEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production augop -> PercentEqual 
-- On String reduce production augop -> PercentEqual 
-- On Plus reduce production augop -> PercentEqual 
-- On Not reduce production augop -> PercentEqual 
-- On Longinteger reduce production augop -> PercentEqual 
-- On Leftparen reduce production augop -> PercentEqual 
-- On Leftbracket reduce production augop -> PercentEqual 
-- On Leftbrace reduce production augop -> PercentEqual 
-- On Lambda reduce production augop -> PercentEqual 
-- On Integer reduce production augop -> PercentEqual 
-- On Imaginary reduce production augop -> PercentEqual 
-- On Identifier reduce production augop -> PercentEqual 
-- On Float reduce production augop -> PercentEqual 
-- On Dash reduce production augop -> PercentEqual 
-- On Backquote reduce production augop -> PercentEqual 

State 261:
augop -> LeftshiftEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production augop -> LeftshiftEqual 
-- On String reduce production augop -> LeftshiftEqual 
-- On Plus reduce production augop -> LeftshiftEqual 
-- On Not reduce production augop -> LeftshiftEqual 
-- On Longinteger reduce production augop -> LeftshiftEqual 
-- On Leftparen reduce production augop -> LeftshiftEqual 
-- On Leftbracket reduce production augop -> LeftshiftEqual 
-- On Leftbrace reduce production augop -> LeftshiftEqual 
-- On Lambda reduce production augop -> LeftshiftEqual 
-- On Integer reduce production augop -> LeftshiftEqual 
-- On Imaginary reduce production augop -> LeftshiftEqual 
-- On Identifier reduce production augop -> LeftshiftEqual 
-- On Float reduce production augop -> LeftshiftEqual 
-- On Dash reduce production augop -> LeftshiftEqual 
-- On Backquote reduce production augop -> LeftshiftEqual 

State 262:
augop -> DashEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production augop -> DashEqual 
-- On String reduce production augop -> DashEqual 
-- On Plus reduce production augop -> DashEqual 
-- On Not reduce production augop -> DashEqual 
-- On Longinteger reduce production augop -> DashEqual 
-- On Leftparen reduce production augop -> DashEqual 
-- On Leftbracket reduce production augop -> DashEqual 
-- On Leftbrace reduce production augop -> DashEqual 
-- On Lambda reduce production augop -> DashEqual 
-- On Integer reduce production augop -> DashEqual 
-- On Imaginary reduce production augop -> DashEqual 
-- On Identifier reduce production augop -> DashEqual 
-- On Float reduce production augop -> DashEqual 
-- On Dash reduce production augop -> DashEqual 
-- On Backquote reduce production augop -> DashEqual 

State 263:
augop -> CaretEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production augop -> CaretEqual 
-- On String reduce production augop -> CaretEqual 
-- On Plus reduce production augop -> CaretEqual 
-- On Not reduce production augop -> CaretEqual 
-- On Longinteger reduce production augop -> CaretEqual 
-- On Leftparen reduce production augop -> CaretEqual 
-- On Leftbracket reduce production augop -> CaretEqual 
-- On Leftbrace reduce production augop -> CaretEqual 
-- On Lambda reduce production augop -> CaretEqual 
-- On Integer reduce production augop -> CaretEqual 
-- On Imaginary reduce production augop -> CaretEqual 
-- On Identifier reduce production augop -> CaretEqual 
-- On Float reduce production augop -> CaretEqual 
-- On Dash reduce production augop -> CaretEqual 
-- On Backquote reduce production augop -> CaretEqual 

State 264:
augop -> BarEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production augop -> BarEqual 
-- On String reduce production augop -> BarEqual 
-- On Plus reduce production augop -> BarEqual 
-- On Not reduce production augop -> BarEqual 
-- On Longinteger reduce production augop -> BarEqual 
-- On Leftparen reduce production augop -> BarEqual 
-- On Leftbracket reduce production augop -> BarEqual 
-- On Leftbrace reduce production augop -> BarEqual 
-- On Lambda reduce production augop -> BarEqual 
-- On Integer reduce production augop -> BarEqual 
-- On Imaginary reduce production augop -> BarEqual 
-- On Identifier reduce production augop -> BarEqual 
-- On Float reduce production augop -> BarEqual 
-- On Dash reduce production augop -> BarEqual 
-- On Backquote reduce production augop -> BarEqual 

State 265:
augop -> AmpersandEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
-- On Tilde reduce production augop -> AmpersandEqual 
-- On String reduce production augop -> AmpersandEqual 
-- On Plus reduce production augop -> AmpersandEqual 
-- On Not reduce production augop -> AmpersandEqual 
-- On Longinteger reduce production augop -> AmpersandEqual 
-- On Leftparen reduce production augop -> AmpersandEqual 
-- On Leftbracket reduce production augop -> AmpersandEqual 
-- On Leftbrace reduce production augop -> AmpersandEqual 
-- On Lambda reduce production augop -> AmpersandEqual 
-- On Integer reduce production augop -> AmpersandEqual 
-- On Imaginary reduce production augop -> AmpersandEqual 
-- On Identifier reduce production augop -> AmpersandEqual 
-- On Float reduce production augop -> AmpersandEqual 
-- On Dash reduce production augop -> AmpersandEqual 
-- On Backquote reduce production augop -> AmpersandEqual 

State 266:
augmented_assignment_stmt -> primary augop . expr_list [ Semicolon Newline ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 267
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 267:
augmented_assignment_stmt -> primary augop expr_list . [ Semicolon Newline ]
-- On Semicolon reduce production augmented_assignment_stmt -> primary augop expr_list 
-- On Newline reduce production augmented_assignment_stmt -> primary augop expr_list 

State 268:
simple_stmt -> pass_stmt . [ Semicolon Newline ]
-- On Semicolon reduce production simple_stmt -> pass_stmt 
-- On Newline reduce production simple_stmt -> pass_stmt 

State 269:
simple_stmt -> import_stmt . [ Semicolon Newline ]
-- On Semicolon reduce production simple_stmt -> import_stmt 
-- On Newline reduce production simple_stmt -> import_stmt 

State 270:
simple_stmt -> global_stmt . [ Semicolon Newline ]
-- On Semicolon reduce production simple_stmt -> global_stmt 
-- On Newline reduce production simple_stmt -> global_stmt 

State 271:
simple_stmt -> expression_stmt . [ Semicolon Newline ]
-- On Semicolon reduce production simple_stmt -> expression_stmt 
-- On Newline reduce production simple_stmt -> expression_stmt 

State 272:
assignment_stmt -> expr_list . Equal expr_list [ Semicolon Newline ]
assignment_stmt -> expr_list . Equal assignment_stmt [ Semicolon Newline ]
expression_stmt -> expr_list . [ Semicolon Newline ]
-- On Equal shift to state 273
-- On Semicolon reduce production expression_stmt -> expr_list 
-- On Newline reduce production expression_stmt -> expr_list 

State 273:
assignment_stmt -> expr_list Equal . expr_list [ Semicolon Newline ]
assignment_stmt -> expr_list Equal . assignment_stmt [ Semicolon Newline ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 274
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 275
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 274:
assignment_stmt -> expr_list . Equal expr_list [ Semicolon Newline ]
assignment_stmt -> expr_list Equal expr_list . [ Semicolon Newline ]
assignment_stmt -> expr_list . Equal assignment_stmt [ Semicolon Newline ]
-- On Equal shift to state 273
-- On Semicolon reduce production assignment_stmt -> expr_list Equal expr_list 
-- On Newline reduce production assignment_stmt -> expr_list Equal expr_list 

State 275:
assignment_stmt -> expr_list Equal assignment_stmt . [ Semicolon Newline ]
-- On Semicolon reduce production assignment_stmt -> expr_list Equal assignment_stmt 
-- On Newline reduce production assignment_stmt -> expr_list Equal assignment_stmt 

State 276:
simple_stmt -> del_stmt . [ Semicolon Newline ]
-- On Semicolon reduce production simple_stmt -> del_stmt 
-- On Newline reduce production simple_stmt -> del_stmt 

State 277:
simple_stmt -> continue_stmt . [ Semicolon Newline ]
-- On Semicolon reduce production simple_stmt -> continue_stmt 
-- On Newline reduce production simple_stmt -> continue_stmt 

State 278:
simple_stmt -> break_stmt . [ Semicolon Newline ]
-- On Semicolon reduce production simple_stmt -> break_stmt 
-- On Newline reduce production simple_stmt -> break_stmt 

State 279:
simple_stmt -> augmented_assignment_stmt . [ Semicolon Newline ]
-- On Semicolon reduce production simple_stmt -> augmented_assignment_stmt 
-- On Newline reduce production simple_stmt -> augmented_assignment_stmt 

State 280:
simple_stmt -> assignment_stmt . [ Semicolon Newline ]
-- On Semicolon reduce production simple_stmt -> assignment_stmt 
-- On Newline reduce production simple_stmt -> assignment_stmt 

State 281:
simple_stmt -> assert_stmt . [ Semicolon Newline ]
-- On Semicolon reduce production simple_stmt -> assert_stmt 
-- On Newline reduce production simple_stmt -> assert_stmt 

State 282:
suite -> stmt_list . Newline [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Finally Except Else Elif Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Newline shift to state 283

State 283:
suite -> stmt_list Newline . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Finally Except Else Elif Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production suite -> stmt_list Newline 
-- On Try reduce production suite -> stmt_list Newline 
-- On Tilde reduce production suite -> stmt_list Newline 
-- On String reduce production suite -> stmt_list Newline 
-- On Return reduce production suite -> stmt_list Newline 
-- On Raise reduce production suite -> stmt_list Newline 
-- On Print reduce production suite -> stmt_list Newline 
-- On Plus reduce production suite -> stmt_list Newline 
-- On Pass reduce production suite -> stmt_list Newline 
-- On Not reduce production suite -> stmt_list Newline 
-- On Newline reduce production suite -> stmt_list Newline 
-- On Longinteger reduce production suite -> stmt_list Newline 
-- On Leftparen reduce production suite -> stmt_list Newline 
-- On Leftbracket reduce production suite -> stmt_list Newline 
-- On Leftbrace reduce production suite -> stmt_list Newline 
-- On Lambda reduce production suite -> stmt_list Newline 
-- On Integer reduce production suite -> stmt_list Newline 
-- On Import reduce production suite -> stmt_list Newline 
-- On Imaginary reduce production suite -> stmt_list Newline 
-- On If reduce production suite -> stmt_list Newline 
-- On Identifier reduce production suite -> stmt_list Newline 
-- On Global reduce production suite -> stmt_list Newline 
-- On From reduce production suite -> stmt_list Newline 
-- On For reduce production suite -> stmt_list Newline 
-- On Float reduce production suite -> stmt_list Newline 
-- On Finally reduce production suite -> stmt_list Newline 
-- On Except reduce production suite -> stmt_list Newline 
-- On Else reduce production suite -> stmt_list Newline 
-- On Elif reduce production suite -> stmt_list Newline 
-- On Del reduce production suite -> stmt_list Newline 
-- On Def reduce production suite -> stmt_list Newline 
-- On Dedent reduce production suite -> stmt_list Newline 
-- On Dash reduce production suite -> stmt_list Newline 
-- On Continue reduce production suite -> stmt_list Newline 
-- On Class reduce production suite -> stmt_list Newline 
-- On Break reduce production suite -> stmt_list Newline 
-- On Backquote reduce production suite -> stmt_list Newline 
-- On Assert reduce production suite -> stmt_list Newline 
-- On # reduce production suite -> stmt_list Newline 

State 284:
stmt_list_without_semicolon -> simple_stmt . [ Semicolon Newline ]
-- On Semicolon reduce production stmt_list_without_semicolon -> simple_stmt 
-- On Newline reduce production stmt_list_without_semicolon -> simple_stmt 

State 285:
exc_item -> Except . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
exc_item -> Except . expression Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
exc_item -> Except . expression Comma primary Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Colon shift to state 286
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 288
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 286:
exc_item -> Except Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 287
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 287:
exc_item -> Except Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production exc_item -> Except Colon suite 
-- On Try reduce production exc_item -> Except Colon suite 
-- On Tilde reduce production exc_item -> Except Colon suite 
-- On String reduce production exc_item -> Except Colon suite 
-- On Return reduce production exc_item -> Except Colon suite 
-- On Raise reduce production exc_item -> Except Colon suite 
-- On Print reduce production exc_item -> Except Colon suite 
-- On Plus reduce production exc_item -> Except Colon suite 
-- On Pass reduce production exc_item -> Except Colon suite 
-- On Not reduce production exc_item -> Except Colon suite 
-- On Newline reduce production exc_item -> Except Colon suite 
-- On Longinteger reduce production exc_item -> Except Colon suite 
-- On Leftparen reduce production exc_item -> Except Colon suite 
-- On Leftbracket reduce production exc_item -> Except Colon suite 
-- On Leftbrace reduce production exc_item -> Except Colon suite 
-- On Lambda reduce production exc_item -> Except Colon suite 
-- On Integer reduce production exc_item -> Except Colon suite 
-- On Import reduce production exc_item -> Except Colon suite 
-- On Imaginary reduce production exc_item -> Except Colon suite 
-- On If reduce production exc_item -> Except Colon suite 
-- On Identifier reduce production exc_item -> Except Colon suite 
-- On Global reduce production exc_item -> Except Colon suite 
-- On From reduce production exc_item -> Except Colon suite 
-- On For reduce production exc_item -> Except Colon suite 
-- On Float reduce production exc_item -> Except Colon suite 
-- On Except reduce production exc_item -> Except Colon suite 
-- On Else reduce production exc_item -> Except Colon suite 
-- On Del reduce production exc_item -> Except Colon suite 
-- On Def reduce production exc_item -> Except Colon suite 
-- On Dedent reduce production exc_item -> Except Colon suite 
-- On Dash reduce production exc_item -> Except Colon suite 
-- On Continue reduce production exc_item -> Except Colon suite 
-- On Class reduce production exc_item -> Except Colon suite 
-- On Break reduce production exc_item -> Except Colon suite 
-- On Backquote reduce production exc_item -> Except Colon suite 
-- On Assert reduce production exc_item -> Except Colon suite 
-- On # reduce production exc_item -> Except Colon suite 

State 288:
exc_item -> Except expression . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
exc_item -> Except expression . Comma primary Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Comma shift to state 289
-- On Colon shift to state 293

State 289:
exc_item -> Except expression Comma . primary Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On String shift to state 3
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Backquote shift to state 35
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 290
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54

State 290:
attributeref -> primary . Period Identifier [ Period Leftparen Leftbracket Colon ]
call -> primary . Leftparen Rightparen [ Period Leftparen Leftbracket Colon ]
call -> primary . Leftparen arg_list Rightparen [ Period Leftparen Leftbracket Colon ]
exc_item -> Except expression Comma primary . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
slicing -> primary . Leftbracket slice_list Rightbracket [ Period Leftparen Leftbracket Colon ]
-- On Period shift to state 55
-- On Leftparen shift to state 57
-- On Leftbracket shift to state 118
-- On Colon shift to state 291

State 291:
exc_item -> Except expression Comma primary Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 292
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 292:
exc_item -> Except expression Comma primary Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Try reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Tilde reduce production exc_item -> Except expression Comma primary Colon suite 
-- On String reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Return reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Raise reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Print reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Plus reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Pass reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Not reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Newline reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Longinteger reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Leftparen reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Leftbracket reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Leftbrace reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Lambda reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Integer reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Import reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Imaginary reduce production exc_item -> Except expression Comma primary Colon suite 
-- On If reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Identifier reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Global reduce production exc_item -> Except expression Comma primary Colon suite 
-- On From reduce production exc_item -> Except expression Comma primary Colon suite 
-- On For reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Float reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Except reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Else reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Del reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Def reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Dedent reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Dash reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Continue reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Class reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Break reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Backquote reduce production exc_item -> Except expression Comma primary Colon suite 
-- On Assert reduce production exc_item -> Except expression Comma primary Colon suite 
-- On # reduce production exc_item -> Except expression Comma primary Colon suite 

State 293:
exc_item -> Except expression Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 294
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 294:
exc_item -> Except expression Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production exc_item -> Except expression Colon suite 
-- On Try reduce production exc_item -> Except expression Colon suite 
-- On Tilde reduce production exc_item -> Except expression Colon suite 
-- On String reduce production exc_item -> Except expression Colon suite 
-- On Return reduce production exc_item -> Except expression Colon suite 
-- On Raise reduce production exc_item -> Except expression Colon suite 
-- On Print reduce production exc_item -> Except expression Colon suite 
-- On Plus reduce production exc_item -> Except expression Colon suite 
-- On Pass reduce production exc_item -> Except expression Colon suite 
-- On Not reduce production exc_item -> Except expression Colon suite 
-- On Newline reduce production exc_item -> Except expression Colon suite 
-- On Longinteger reduce production exc_item -> Except expression Colon suite 
-- On Leftparen reduce production exc_item -> Except expression Colon suite 
-- On Leftbracket reduce production exc_item -> Except expression Colon suite 
-- On Leftbrace reduce production exc_item -> Except expression Colon suite 
-- On Lambda reduce production exc_item -> Except expression Colon suite 
-- On Integer reduce production exc_item -> Except expression Colon suite 
-- On Import reduce production exc_item -> Except expression Colon suite 
-- On Imaginary reduce production exc_item -> Except expression Colon suite 
-- On If reduce production exc_item -> Except expression Colon suite 
-- On Identifier reduce production exc_item -> Except expression Colon suite 
-- On Global reduce production exc_item -> Except expression Colon suite 
-- On From reduce production exc_item -> Except expression Colon suite 
-- On For reduce production exc_item -> Except expression Colon suite 
-- On Float reduce production exc_item -> Except expression Colon suite 
-- On Except reduce production exc_item -> Except expression Colon suite 
-- On Else reduce production exc_item -> Except expression Colon suite 
-- On Del reduce production exc_item -> Except expression Colon suite 
-- On Def reduce production exc_item -> Except expression Colon suite 
-- On Dedent reduce production exc_item -> Except expression Colon suite 
-- On Dash reduce production exc_item -> Except expression Colon suite 
-- On Continue reduce production exc_item -> Except expression Colon suite 
-- On Class reduce production exc_item -> Except expression Colon suite 
-- On Break reduce production exc_item -> Except expression Colon suite 
-- On Backquote reduce production exc_item -> Except expression Colon suite 
-- On Assert reduce production exc_item -> Except expression Colon suite 
-- On # reduce production exc_item -> Except expression Colon suite 

State 295:
exc_list -> exc_list . exc_item [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
try_exc_stmt -> Try Colon suite exc_list . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
try_exc_stmt -> Try Colon suite exc_list . Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Except shift to state 285
-- On Else shift to state 296
-- On exc_item shift to state 299
-- On While reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Try reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Tilde reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On String reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Return reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Raise reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Print reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Plus reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Pass reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Not reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Newline reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Longinteger reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Leftparen reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Leftbracket reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Leftbrace reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Lambda reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Integer reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Import reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Imaginary reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On If reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Identifier reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Global reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On From reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On For reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Float reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Del reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Def reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Dedent reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Dash reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Continue reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Class reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Break reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Backquote reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On Assert reduce production try_exc_stmt -> Try Colon suite exc_list 
-- On # reduce production try_exc_stmt -> Try Colon suite exc_list 

State 296:
try_exc_stmt -> Try Colon suite exc_list Else . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Colon shift to state 297

State 297:
try_exc_stmt -> Try Colon suite exc_list Else Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 298
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 298:
try_exc_stmt -> Try Colon suite exc_list Else Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Try reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Tilde reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On String reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Return reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Raise reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Print reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Plus reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Pass reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Not reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Newline reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Longinteger reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Leftparen reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Leftbracket reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Leftbrace reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Lambda reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Integer reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Import reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Imaginary reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On If reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Identifier reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Global reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On From reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On For reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Float reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Del reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Def reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Dedent reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Dash reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Continue reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Class reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Break reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Backquote reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On Assert reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
-- On # reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 

State 299:
exc_list -> exc_list exc_item . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production exc_list -> exc_list exc_item 
-- On Try reduce production exc_list -> exc_list exc_item 
-- On Tilde reduce production exc_list -> exc_list exc_item 
-- On String reduce production exc_list -> exc_list exc_item 
-- On Return reduce production exc_list -> exc_list exc_item 
-- On Raise reduce production exc_list -> exc_list exc_item 
-- On Print reduce production exc_list -> exc_list exc_item 
-- On Plus reduce production exc_list -> exc_list exc_item 
-- On Pass reduce production exc_list -> exc_list exc_item 
-- On Not reduce production exc_list -> exc_list exc_item 
-- On Newline reduce production exc_list -> exc_list exc_item 
-- On Longinteger reduce production exc_list -> exc_list exc_item 
-- On Leftparen reduce production exc_list -> exc_list exc_item 
-- On Leftbracket reduce production exc_list -> exc_list exc_item 
-- On Leftbrace reduce production exc_list -> exc_list exc_item 
-- On Lambda reduce production exc_list -> exc_list exc_item 
-- On Integer reduce production exc_list -> exc_list exc_item 
-- On Import reduce production exc_list -> exc_list exc_item 
-- On Imaginary reduce production exc_list -> exc_list exc_item 
-- On If reduce production exc_list -> exc_list exc_item 
-- On Identifier reduce production exc_list -> exc_list exc_item 
-- On Global reduce production exc_list -> exc_list exc_item 
-- On From reduce production exc_list -> exc_list exc_item 
-- On For reduce production exc_list -> exc_list exc_item 
-- On Float reduce production exc_list -> exc_list exc_item 
-- On Except reduce production exc_list -> exc_list exc_item 
-- On Else reduce production exc_list -> exc_list exc_item 
-- On Del reduce production exc_list -> exc_list exc_item 
-- On Def reduce production exc_list -> exc_list exc_item 
-- On Dedent reduce production exc_list -> exc_list exc_item 
-- On Dash reduce production exc_list -> exc_list exc_item 
-- On Continue reduce production exc_list -> exc_list exc_item 
-- On Class reduce production exc_list -> exc_list exc_item 
-- On Break reduce production exc_list -> exc_list exc_item 
-- On Backquote reduce production exc_list -> exc_list exc_item 
-- On Assert reduce production exc_list -> exc_list exc_item 
-- On # reduce production exc_list -> exc_list exc_item 

State 300:
exc_list -> exc_item . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production exc_list -> exc_item 
-- On Try reduce production exc_list -> exc_item 
-- On Tilde reduce production exc_list -> exc_item 
-- On String reduce production exc_list -> exc_item 
-- On Return reduce production exc_list -> exc_item 
-- On Raise reduce production exc_list -> exc_item 
-- On Print reduce production exc_list -> exc_item 
-- On Plus reduce production exc_list -> exc_item 
-- On Pass reduce production exc_list -> exc_item 
-- On Not reduce production exc_list -> exc_item 
-- On Newline reduce production exc_list -> exc_item 
-- On Longinteger reduce production exc_list -> exc_item 
-- On Leftparen reduce production exc_list -> exc_item 
-- On Leftbracket reduce production exc_list -> exc_item 
-- On Leftbrace reduce production exc_list -> exc_item 
-- On Lambda reduce production exc_list -> exc_item 
-- On Integer reduce production exc_list -> exc_item 
-- On Import reduce production exc_list -> exc_item 
-- On Imaginary reduce production exc_list -> exc_item 
-- On If reduce production exc_list -> exc_item 
-- On Identifier reduce production exc_list -> exc_item 
-- On Global reduce production exc_list -> exc_item 
-- On From reduce production exc_list -> exc_item 
-- On For reduce production exc_list -> exc_item 
-- On Float reduce production exc_list -> exc_item 
-- On Except reduce production exc_list -> exc_item 
-- On Else reduce production exc_list -> exc_item 
-- On Del reduce production exc_list -> exc_item 
-- On Def reduce production exc_list -> exc_item 
-- On Dedent reduce production exc_list -> exc_item 
-- On Dash reduce production exc_list -> exc_item 
-- On Continue reduce production exc_list -> exc_item 
-- On Class reduce production exc_list -> exc_item 
-- On Break reduce production exc_list -> exc_item 
-- On Backquote reduce production exc_list -> exc_item 
-- On Assert reduce production exc_list -> exc_item 
-- On # reduce production exc_list -> exc_item 

State 301:
if_stmt -> If . expression Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
if_stmt -> If . expression Colon suite elif_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 302
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 302:
if_stmt -> If expression . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
if_stmt -> If expression . Colon suite elif_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Colon shift to state 303

State 303:
if_stmt -> If expression Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
if_stmt -> If expression Colon . suite elif_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 304
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 304:
if_stmt -> If expression Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
if_stmt -> If expression Colon suite . elif_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Else shift to state 305
-- On Elif shift to state 308
-- On elif_list shift to state 313
-- On While reduce production if_stmt -> If expression Colon suite 
-- On Try reduce production if_stmt -> If expression Colon suite 
-- On Tilde reduce production if_stmt -> If expression Colon suite 
-- On String reduce production if_stmt -> If expression Colon suite 
-- On Return reduce production if_stmt -> If expression Colon suite 
-- On Raise reduce production if_stmt -> If expression Colon suite 
-- On Print reduce production if_stmt -> If expression Colon suite 
-- On Plus reduce production if_stmt -> If expression Colon suite 
-- On Pass reduce production if_stmt -> If expression Colon suite 
-- On Not reduce production if_stmt -> If expression Colon suite 
-- On Newline reduce production if_stmt -> If expression Colon suite 
-- On Longinteger reduce production if_stmt -> If expression Colon suite 
-- On Leftparen reduce production if_stmt -> If expression Colon suite 
-- On Leftbracket reduce production if_stmt -> If expression Colon suite 
-- On Leftbrace reduce production if_stmt -> If expression Colon suite 
-- On Lambda reduce production if_stmt -> If expression Colon suite 
-- On Integer reduce production if_stmt -> If expression Colon suite 
-- On Import reduce production if_stmt -> If expression Colon suite 
-- On Imaginary reduce production if_stmt -> If expression Colon suite 
-- On If reduce production if_stmt -> If expression Colon suite 
-- On Identifier reduce production if_stmt -> If expression Colon suite 
-- On Global reduce production if_stmt -> If expression Colon suite 
-- On From reduce production if_stmt -> If expression Colon suite 
-- On For reduce production if_stmt -> If expression Colon suite 
-- On Float reduce production if_stmt -> If expression Colon suite 
-- On Del reduce production if_stmt -> If expression Colon suite 
-- On Def reduce production if_stmt -> If expression Colon suite 
-- On Dedent reduce production if_stmt -> If expression Colon suite 
-- On Dash reduce production if_stmt -> If expression Colon suite 
-- On Continue reduce production if_stmt -> If expression Colon suite 
-- On Class reduce production if_stmt -> If expression Colon suite 
-- On Break reduce production if_stmt -> If expression Colon suite 
-- On Backquote reduce production if_stmt -> If expression Colon suite 
-- On Assert reduce production if_stmt -> If expression Colon suite 
-- On # reduce production if_stmt -> If expression Colon suite 

State 305:
elif_list -> Else . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Colon shift to state 306

State 306:
elif_list -> Else Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 307
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 307:
elif_list -> Else Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production elif_list -> Else Colon suite 
-- On Try reduce production elif_list -> Else Colon suite 
-- On Tilde reduce production elif_list -> Else Colon suite 
-- On String reduce production elif_list -> Else Colon suite 
-- On Return reduce production elif_list -> Else Colon suite 
-- On Raise reduce production elif_list -> Else Colon suite 
-- On Print reduce production elif_list -> Else Colon suite 
-- On Plus reduce production elif_list -> Else Colon suite 
-- On Pass reduce production elif_list -> Else Colon suite 
-- On Not reduce production elif_list -> Else Colon suite 
-- On Newline reduce production elif_list -> Else Colon suite 
-- On Longinteger reduce production elif_list -> Else Colon suite 
-- On Leftparen reduce production elif_list -> Else Colon suite 
-- On Leftbracket reduce production elif_list -> Else Colon suite 
-- On Leftbrace reduce production elif_list -> Else Colon suite 
-- On Lambda reduce production elif_list -> Else Colon suite 
-- On Integer reduce production elif_list -> Else Colon suite 
-- On Import reduce production elif_list -> Else Colon suite 
-- On Imaginary reduce production elif_list -> Else Colon suite 
-- On If reduce production elif_list -> Else Colon suite 
-- On Identifier reduce production elif_list -> Else Colon suite 
-- On Global reduce production elif_list -> Else Colon suite 
-- On From reduce production elif_list -> Else Colon suite 
-- On For reduce production elif_list -> Else Colon suite 
-- On Float reduce production elif_list -> Else Colon suite 
-- On Del reduce production elif_list -> Else Colon suite 
-- On Def reduce production elif_list -> Else Colon suite 
-- On Dedent reduce production elif_list -> Else Colon suite 
-- On Dash reduce production elif_list -> Else Colon suite 
-- On Continue reduce production elif_list -> Else Colon suite 
-- On Class reduce production elif_list -> Else Colon suite 
-- On Break reduce production elif_list -> Else Colon suite 
-- On Backquote reduce production elif_list -> Else Colon suite 
-- On Assert reduce production elif_list -> Else Colon suite 
-- On # reduce production elif_list -> Else Colon suite 

State 308:
elif_list -> Elif . expression Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
elif_list -> Elif . expression Colon suite elif_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 309
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 309:
elif_list -> Elif expression . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
elif_list -> Elif expression . Colon suite elif_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Colon shift to state 310

State 310:
elif_list -> Elif expression Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
elif_list -> Elif expression Colon . suite elif_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 311
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 311:
elif_list -> Elif expression Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
elif_list -> Elif expression Colon suite . elif_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Else shift to state 305
-- On Elif shift to state 308
-- On elif_list shift to state 312
-- On While reduce production elif_list -> Elif expression Colon suite 
-- On Try reduce production elif_list -> Elif expression Colon suite 
-- On Tilde reduce production elif_list -> Elif expression Colon suite 
-- On String reduce production elif_list -> Elif expression Colon suite 
-- On Return reduce production elif_list -> Elif expression Colon suite 
-- On Raise reduce production elif_list -> Elif expression Colon suite 
-- On Print reduce production elif_list -> Elif expression Colon suite 
-- On Plus reduce production elif_list -> Elif expression Colon suite 
-- On Pass reduce production elif_list -> Elif expression Colon suite 
-- On Not reduce production elif_list -> Elif expression Colon suite 
-- On Newline reduce production elif_list -> Elif expression Colon suite 
-- On Longinteger reduce production elif_list -> Elif expression Colon suite 
-- On Leftparen reduce production elif_list -> Elif expression Colon suite 
-- On Leftbracket reduce production elif_list -> Elif expression Colon suite 
-- On Leftbrace reduce production elif_list -> Elif expression Colon suite 
-- On Lambda reduce production elif_list -> Elif expression Colon suite 
-- On Integer reduce production elif_list -> Elif expression Colon suite 
-- On Import reduce production elif_list -> Elif expression Colon suite 
-- On Imaginary reduce production elif_list -> Elif expression Colon suite 
-- On If reduce production elif_list -> Elif expression Colon suite 
-- On Identifier reduce production elif_list -> Elif expression Colon suite 
-- On Global reduce production elif_list -> Elif expression Colon suite 
-- On From reduce production elif_list -> Elif expression Colon suite 
-- On For reduce production elif_list -> Elif expression Colon suite 
-- On Float reduce production elif_list -> Elif expression Colon suite 
-- On Del reduce production elif_list -> Elif expression Colon suite 
-- On Def reduce production elif_list -> Elif expression Colon suite 
-- On Dedent reduce production elif_list -> Elif expression Colon suite 
-- On Dash reduce production elif_list -> Elif expression Colon suite 
-- On Continue reduce production elif_list -> Elif expression Colon suite 
-- On Class reduce production elif_list -> Elif expression Colon suite 
-- On Break reduce production elif_list -> Elif expression Colon suite 
-- On Backquote reduce production elif_list -> Elif expression Colon suite 
-- On Assert reduce production elif_list -> Elif expression Colon suite 
-- On # reduce production elif_list -> Elif expression Colon suite 

State 312:
elif_list -> Elif expression Colon suite elif_list . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Try reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Tilde reduce production elif_list -> Elif expression Colon suite elif_list 
-- On String reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Return reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Raise reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Print reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Plus reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Pass reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Not reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Newline reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Longinteger reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Leftparen reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Leftbracket reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Leftbrace reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Lambda reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Integer reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Import reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Imaginary reduce production elif_list -> Elif expression Colon suite elif_list 
-- On If reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Identifier reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Global reduce production elif_list -> Elif expression Colon suite elif_list 
-- On From reduce production elif_list -> Elif expression Colon suite elif_list 
-- On For reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Float reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Del reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Def reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Dedent reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Dash reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Continue reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Class reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Break reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Backquote reduce production elif_list -> Elif expression Colon suite elif_list 
-- On Assert reduce production elif_list -> Elif expression Colon suite elif_list 
-- On # reduce production elif_list -> Elif expression Colon suite elif_list 

State 313:
if_stmt -> If expression Colon suite elif_list . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production if_stmt -> If expression Colon suite elif_list 
-- On Try reduce production if_stmt -> If expression Colon suite elif_list 
-- On Tilde reduce production if_stmt -> If expression Colon suite elif_list 
-- On String reduce production if_stmt -> If expression Colon suite elif_list 
-- On Return reduce production if_stmt -> If expression Colon suite elif_list 
-- On Raise reduce production if_stmt -> If expression Colon suite elif_list 
-- On Print reduce production if_stmt -> If expression Colon suite elif_list 
-- On Plus reduce production if_stmt -> If expression Colon suite elif_list 
-- On Pass reduce production if_stmt -> If expression Colon suite elif_list 
-- On Not reduce production if_stmt -> If expression Colon suite elif_list 
-- On Newline reduce production if_stmt -> If expression Colon suite elif_list 
-- On Longinteger reduce production if_stmt -> If expression Colon suite elif_list 
-- On Leftparen reduce production if_stmt -> If expression Colon suite elif_list 
-- On Leftbracket reduce production if_stmt -> If expression Colon suite elif_list 
-- On Leftbrace reduce production if_stmt -> If expression Colon suite elif_list 
-- On Lambda reduce production if_stmt -> If expression Colon suite elif_list 
-- On Integer reduce production if_stmt -> If expression Colon suite elif_list 
-- On Import reduce production if_stmt -> If expression Colon suite elif_list 
-- On Imaginary reduce production if_stmt -> If expression Colon suite elif_list 
-- On If reduce production if_stmt -> If expression Colon suite elif_list 
-- On Identifier reduce production if_stmt -> If expression Colon suite elif_list 
-- On Global reduce production if_stmt -> If expression Colon suite elif_list 
-- On From reduce production if_stmt -> If expression Colon suite elif_list 
-- On For reduce production if_stmt -> If expression Colon suite elif_list 
-- On Float reduce production if_stmt -> If expression Colon suite elif_list 
-- On Del reduce production if_stmt -> If expression Colon suite elif_list 
-- On Def reduce production if_stmt -> If expression Colon suite elif_list 
-- On Dedent reduce production if_stmt -> If expression Colon suite elif_list 
-- On Dash reduce production if_stmt -> If expression Colon suite elif_list 
-- On Continue reduce production if_stmt -> If expression Colon suite elif_list 
-- On Class reduce production if_stmt -> If expression Colon suite elif_list 
-- On Break reduce production if_stmt -> If expression Colon suite elif_list 
-- On Backquote reduce production if_stmt -> If expression Colon suite elif_list 
-- On Assert reduce production if_stmt -> If expression Colon suite elif_list 
-- On # reduce production if_stmt -> If expression Colon suite elif_list 

State 314:
for_stmt -> For . target_list In expr_list Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
for_stmt -> For . target_list In expr_list Colon suite Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On String shift to state 3
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Backquote shift to state 35
-- On target_list_without_comma shift to state 233
-- On target_list shift to state 315
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 237
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54

State 315:
for_stmt -> For target_list . In expr_list Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
for_stmt -> For target_list . In expr_list Colon suite Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On In shift to state 316

State 316:
for_stmt -> For target_list In . expr_list Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
for_stmt -> For target_list In . expr_list Colon suite Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 317
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 317:
for_stmt -> For target_list In expr_list . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
for_stmt -> For target_list In expr_list . Colon suite Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Colon shift to state 318

State 318:
for_stmt -> For target_list In expr_list Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
for_stmt -> For target_list In expr_list Colon . suite Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 319
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 319:
for_stmt -> For target_list In expr_list Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
for_stmt -> For target_list In expr_list Colon suite . Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Else shift to state 320
-- On While reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Try reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Tilde reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On String reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Return reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Raise reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Print reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Plus reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Pass reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Not reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Newline reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Longinteger reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Leftparen reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Leftbracket reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Leftbrace reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Lambda reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Integer reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Import reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Imaginary reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On If reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Identifier reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Global reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On From reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On For reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Float reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Del reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Def reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Dedent reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Dash reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Continue reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Class reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Break reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Backquote reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On Assert reduce production for_stmt -> For target_list In expr_list Colon suite 
-- On # reduce production for_stmt -> For target_list In expr_list Colon suite 

State 320:
for_stmt -> For target_list In expr_list Colon suite Else . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Colon shift to state 321

State 321:
for_stmt -> For target_list In expr_list Colon suite Else Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 322
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 322:
for_stmt -> For target_list In expr_list Colon suite Else Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Try reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Tilde reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On String reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Return reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Raise reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Print reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Plus reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Pass reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Not reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Newline reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Longinteger reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Leftparen reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Leftbracket reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Leftbrace reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Lambda reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Integer reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Import reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Imaginary reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On If reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Identifier reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Global reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On From reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On For reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Float reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Del reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Def reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Dedent reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Dash reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Continue reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Class reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Break reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Backquote reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On Assert reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
-- On # reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 

State 323:
funcdef -> Def . Identifier Leftparen Rightparen Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
funcdef -> Def . Identifier Leftparen parameter_list Rightparen Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Identifier shift to state 324

State 324:
funcdef -> Def Identifier . Leftparen Rightparen Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
funcdef -> Def Identifier . Leftparen parameter_list Rightparen Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Leftparen shift to state 325

State 325:
funcdef -> Def Identifier Leftparen . Rightparen Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
funcdef -> Def Identifier Leftparen . parameter_list Rightparen Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On StarStar shift to state 14
-- On Star shift to state 16
-- On Rightparen shift to state 326
-- On Leftparen shift to state 21
-- On Identifier shift to state 22
-- On parameter_list shift to state 329
-- On parameter shift to state 146
-- On defparams shift to state 149
-- On defparam shift to state 160

State 326:
funcdef -> Def Identifier Leftparen Rightparen . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Colon shift to state 327

State 327:
funcdef -> Def Identifier Leftparen Rightparen Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 328
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 328:
funcdef -> Def Identifier Leftparen Rightparen Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Try reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Tilde reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On String reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Return reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Raise reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Print reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Plus reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Pass reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Not reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Newline reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Longinteger reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Leftparen reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Leftbracket reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Leftbrace reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Lambda reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Integer reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Import reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Imaginary reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On If reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Identifier reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Global reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On From reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On For reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Float reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Del reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Def reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Dedent reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Dash reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Continue reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Class reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Break reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Backquote reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On Assert reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
-- On # reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite 

State 329:
funcdef -> Def Identifier Leftparen parameter_list . Rightparen Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Rightparen shift to state 330

State 330:
funcdef -> Def Identifier Leftparen parameter_list Rightparen . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Colon shift to state 331

State 331:
funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 332
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 332:
funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Try reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Tilde reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On String reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Return reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Raise reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Print reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Plus reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Pass reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Not reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Newline reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Longinteger reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Leftparen reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Leftbracket reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Leftbrace reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Lambda reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Integer reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Import reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Imaginary reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On If reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Identifier reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Global reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On From reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On For reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Float reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Del reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Def reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Dedent reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Dash reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Continue reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Class reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Break reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Backquote reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On Assert reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
-- On # reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 

State 333:
classdef -> Class . Identifier Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
classdef -> Class . Identifier inheritance Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Identifier shift to state 334

State 334:
classdef -> Class Identifier . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
classdef -> Class Identifier . inheritance Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Leftparen shift to state 335
-- On Colon shift to state 339
-- On inheritance shift to state 341

State 335:
inheritance -> Leftparen . Rightparen [ Colon ]
inheritance -> Leftparen . expr_list Rightparen [ Colon ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Rightparen shift to state 336
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 337
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 336:
inheritance -> Leftparen Rightparen . [ Colon ]
-- On Colon reduce production inheritance -> Leftparen Rightparen 

State 337:
inheritance -> Leftparen expr_list . Rightparen [ Colon ]
-- On Rightparen shift to state 338

State 338:
inheritance -> Leftparen expr_list Rightparen . [ Colon ]
-- On Colon reduce production inheritance -> Leftparen expr_list Rightparen 

State 339:
classdef -> Class Identifier Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 340
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 340:
classdef -> Class Identifier Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production classdef -> Class Identifier Colon suite 
-- On Try reduce production classdef -> Class Identifier Colon suite 
-- On Tilde reduce production classdef -> Class Identifier Colon suite 
-- On String reduce production classdef -> Class Identifier Colon suite 
-- On Return reduce production classdef -> Class Identifier Colon suite 
-- On Raise reduce production classdef -> Class Identifier Colon suite 
-- On Print reduce production classdef -> Class Identifier Colon suite 
-- On Plus reduce production classdef -> Class Identifier Colon suite 
-- On Pass reduce production classdef -> Class Identifier Colon suite 
-- On Not reduce production classdef -> Class Identifier Colon suite 
-- On Newline reduce production classdef -> Class Identifier Colon suite 
-- On Longinteger reduce production classdef -> Class Identifier Colon suite 
-- On Leftparen reduce production classdef -> Class Identifier Colon suite 
-- On Leftbracket reduce production classdef -> Class Identifier Colon suite 
-- On Leftbrace reduce production classdef -> Class Identifier Colon suite 
-- On Lambda reduce production classdef -> Class Identifier Colon suite 
-- On Integer reduce production classdef -> Class Identifier Colon suite 
-- On Import reduce production classdef -> Class Identifier Colon suite 
-- On Imaginary reduce production classdef -> Class Identifier Colon suite 
-- On If reduce production classdef -> Class Identifier Colon suite 
-- On Identifier reduce production classdef -> Class Identifier Colon suite 
-- On Global reduce production classdef -> Class Identifier Colon suite 
-- On From reduce production classdef -> Class Identifier Colon suite 
-- On For reduce production classdef -> Class Identifier Colon suite 
-- On Float reduce production classdef -> Class Identifier Colon suite 
-- On Del reduce production classdef -> Class Identifier Colon suite 
-- On Def reduce production classdef -> Class Identifier Colon suite 
-- On Dedent reduce production classdef -> Class Identifier Colon suite 
-- On Dash reduce production classdef -> Class Identifier Colon suite 
-- On Continue reduce production classdef -> Class Identifier Colon suite 
-- On Class reduce production classdef -> Class Identifier Colon suite 
-- On Break reduce production classdef -> Class Identifier Colon suite 
-- On Backquote reduce production classdef -> Class Identifier Colon suite 
-- On Assert reduce production classdef -> Class Identifier Colon suite 
-- On # reduce production classdef -> Class Identifier Colon suite 

State 341:
classdef -> Class Identifier inheritance . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Colon shift to state 342

State 342:
classdef -> Class Identifier inheritance Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 343
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 343:
classdef -> Class Identifier inheritance Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Try reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Tilde reduce production classdef -> Class Identifier inheritance Colon suite 
-- On String reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Return reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Raise reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Print reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Plus reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Pass reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Not reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Newline reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Longinteger reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Leftparen reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Leftbracket reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Leftbrace reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Lambda reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Integer reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Import reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Imaginary reduce production classdef -> Class Identifier inheritance Colon suite 
-- On If reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Identifier reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Global reduce production classdef -> Class Identifier inheritance Colon suite 
-- On From reduce production classdef -> Class Identifier inheritance Colon suite 
-- On For reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Float reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Del reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Def reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Dedent reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Dash reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Continue reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Class reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Break reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Backquote reduce production classdef -> Class Identifier inheritance Colon suite 
-- On Assert reduce production classdef -> Class Identifier inheritance Colon suite 
-- On # reduce production classdef -> Class Identifier inheritance Colon suite 

State 344:
compound_stmt -> while_stmt . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production compound_stmt -> while_stmt 
-- On Try reduce production compound_stmt -> while_stmt 
-- On Tilde reduce production compound_stmt -> while_stmt 
-- On String reduce production compound_stmt -> while_stmt 
-- On Return reduce production compound_stmt -> while_stmt 
-- On Raise reduce production compound_stmt -> while_stmt 
-- On Print reduce production compound_stmt -> while_stmt 
-- On Plus reduce production compound_stmt -> while_stmt 
-- On Pass reduce production compound_stmt -> while_stmt 
-- On Not reduce production compound_stmt -> while_stmt 
-- On Newline reduce production compound_stmt -> while_stmt 
-- On Longinteger reduce production compound_stmt -> while_stmt 
-- On Leftparen reduce production compound_stmt -> while_stmt 
-- On Leftbracket reduce production compound_stmt -> while_stmt 
-- On Leftbrace reduce production compound_stmt -> while_stmt 
-- On Lambda reduce production compound_stmt -> while_stmt 
-- On Integer reduce production compound_stmt -> while_stmt 
-- On Import reduce production compound_stmt -> while_stmt 
-- On Imaginary reduce production compound_stmt -> while_stmt 
-- On If reduce production compound_stmt -> while_stmt 
-- On Identifier reduce production compound_stmt -> while_stmt 
-- On Global reduce production compound_stmt -> while_stmt 
-- On From reduce production compound_stmt -> while_stmt 
-- On For reduce production compound_stmt -> while_stmt 
-- On Float reduce production compound_stmt -> while_stmt 
-- On Del reduce production compound_stmt -> while_stmt 
-- On Def reduce production compound_stmt -> while_stmt 
-- On Dedent reduce production compound_stmt -> while_stmt 
-- On Dash reduce production compound_stmt -> while_stmt 
-- On Continue reduce production compound_stmt -> while_stmt 
-- On Class reduce production compound_stmt -> while_stmt 
-- On Break reduce production compound_stmt -> while_stmt 
-- On Backquote reduce production compound_stmt -> while_stmt 
-- On Assert reduce production compound_stmt -> while_stmt 
-- On # reduce production compound_stmt -> while_stmt 

State 345:
compound_stmt -> try_stmt . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production compound_stmt -> try_stmt 
-- On Try reduce production compound_stmt -> try_stmt 
-- On Tilde reduce production compound_stmt -> try_stmt 
-- On String reduce production compound_stmt -> try_stmt 
-- On Return reduce production compound_stmt -> try_stmt 
-- On Raise reduce production compound_stmt -> try_stmt 
-- On Print reduce production compound_stmt -> try_stmt 
-- On Plus reduce production compound_stmt -> try_stmt 
-- On Pass reduce production compound_stmt -> try_stmt 
-- On Not reduce production compound_stmt -> try_stmt 
-- On Newline reduce production compound_stmt -> try_stmt 
-- On Longinteger reduce production compound_stmt -> try_stmt 
-- On Leftparen reduce production compound_stmt -> try_stmt 
-- On Leftbracket reduce production compound_stmt -> try_stmt 
-- On Leftbrace reduce production compound_stmt -> try_stmt 
-- On Lambda reduce production compound_stmt -> try_stmt 
-- On Integer reduce production compound_stmt -> try_stmt 
-- On Import reduce production compound_stmt -> try_stmt 
-- On Imaginary reduce production compound_stmt -> try_stmt 
-- On If reduce production compound_stmt -> try_stmt 
-- On Identifier reduce production compound_stmt -> try_stmt 
-- On Global reduce production compound_stmt -> try_stmt 
-- On From reduce production compound_stmt -> try_stmt 
-- On For reduce production compound_stmt -> try_stmt 
-- On Float reduce production compound_stmt -> try_stmt 
-- On Del reduce production compound_stmt -> try_stmt 
-- On Def reduce production compound_stmt -> try_stmt 
-- On Dedent reduce production compound_stmt -> try_stmt 
-- On Dash reduce production compound_stmt -> try_stmt 
-- On Continue reduce production compound_stmt -> try_stmt 
-- On Class reduce production compound_stmt -> try_stmt 
-- On Break reduce production compound_stmt -> try_stmt 
-- On Backquote reduce production compound_stmt -> try_stmt 
-- On Assert reduce production compound_stmt -> try_stmt 
-- On # reduce production compound_stmt -> try_stmt 

State 346:
try_stmt -> try_fin_stmt . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production try_stmt -> try_fin_stmt 
-- On Try reduce production try_stmt -> try_fin_stmt 
-- On Tilde reduce production try_stmt -> try_fin_stmt 
-- On String reduce production try_stmt -> try_fin_stmt 
-- On Return reduce production try_stmt -> try_fin_stmt 
-- On Raise reduce production try_stmt -> try_fin_stmt 
-- On Print reduce production try_stmt -> try_fin_stmt 
-- On Plus reduce production try_stmt -> try_fin_stmt 
-- On Pass reduce production try_stmt -> try_fin_stmt 
-- On Not reduce production try_stmt -> try_fin_stmt 
-- On Newline reduce production try_stmt -> try_fin_stmt 
-- On Longinteger reduce production try_stmt -> try_fin_stmt 
-- On Leftparen reduce production try_stmt -> try_fin_stmt 
-- On Leftbracket reduce production try_stmt -> try_fin_stmt 
-- On Leftbrace reduce production try_stmt -> try_fin_stmt 
-- On Lambda reduce production try_stmt -> try_fin_stmt 
-- On Integer reduce production try_stmt -> try_fin_stmt 
-- On Import reduce production try_stmt -> try_fin_stmt 
-- On Imaginary reduce production try_stmt -> try_fin_stmt 
-- On If reduce production try_stmt -> try_fin_stmt 
-- On Identifier reduce production try_stmt -> try_fin_stmt 
-- On Global reduce production try_stmt -> try_fin_stmt 
-- On From reduce production try_stmt -> try_fin_stmt 
-- On For reduce production try_stmt -> try_fin_stmt 
-- On Float reduce production try_stmt -> try_fin_stmt 
-- On Del reduce production try_stmt -> try_fin_stmt 
-- On Def reduce production try_stmt -> try_fin_stmt 
-- On Dedent reduce production try_stmt -> try_fin_stmt 
-- On Dash reduce production try_stmt -> try_fin_stmt 
-- On Continue reduce production try_stmt -> try_fin_stmt 
-- On Class reduce production try_stmt -> try_fin_stmt 
-- On Break reduce production try_stmt -> try_fin_stmt 
-- On Backquote reduce production try_stmt -> try_fin_stmt 
-- On Assert reduce production try_stmt -> try_fin_stmt 
-- On # reduce production try_stmt -> try_fin_stmt 

State 347:
try_stmt -> try_exc_stmt . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production try_stmt -> try_exc_stmt 
-- On Try reduce production try_stmt -> try_exc_stmt 
-- On Tilde reduce production try_stmt -> try_exc_stmt 
-- On String reduce production try_stmt -> try_exc_stmt 
-- On Return reduce production try_stmt -> try_exc_stmt 
-- On Raise reduce production try_stmt -> try_exc_stmt 
-- On Print reduce production try_stmt -> try_exc_stmt 
-- On Plus reduce production try_stmt -> try_exc_stmt 
-- On Pass reduce production try_stmt -> try_exc_stmt 
-- On Not reduce production try_stmt -> try_exc_stmt 
-- On Newline reduce production try_stmt -> try_exc_stmt 
-- On Longinteger reduce production try_stmt -> try_exc_stmt 
-- On Leftparen reduce production try_stmt -> try_exc_stmt 
-- On Leftbracket reduce production try_stmt -> try_exc_stmt 
-- On Leftbrace reduce production try_stmt -> try_exc_stmt 
-- On Lambda reduce production try_stmt -> try_exc_stmt 
-- On Integer reduce production try_stmt -> try_exc_stmt 
-- On Import reduce production try_stmt -> try_exc_stmt 
-- On Imaginary reduce production try_stmt -> try_exc_stmt 
-- On If reduce production try_stmt -> try_exc_stmt 
-- On Identifier reduce production try_stmt -> try_exc_stmt 
-- On Global reduce production try_stmt -> try_exc_stmt 
-- On From reduce production try_stmt -> try_exc_stmt 
-- On For reduce production try_stmt -> try_exc_stmt 
-- On Float reduce production try_stmt -> try_exc_stmt 
-- On Del reduce production try_stmt -> try_exc_stmt 
-- On Def reduce production try_stmt -> try_exc_stmt 
-- On Dedent reduce production try_stmt -> try_exc_stmt 
-- On Dash reduce production try_stmt -> try_exc_stmt 
-- On Continue reduce production try_stmt -> try_exc_stmt 
-- On Class reduce production try_stmt -> try_exc_stmt 
-- On Break reduce production try_stmt -> try_exc_stmt 
-- On Backquote reduce production try_stmt -> try_exc_stmt 
-- On Assert reduce production try_stmt -> try_exc_stmt 
-- On # reduce production try_stmt -> try_exc_stmt 

State 348:
statement -> stmt_list . Newline [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Newline shift to state 349

State 349:
statement -> stmt_list Newline . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production statement -> stmt_list Newline 
-- On Try reduce production statement -> stmt_list Newline 
-- On Tilde reduce production statement -> stmt_list Newline 
-- On String reduce production statement -> stmt_list Newline 
-- On Return reduce production statement -> stmt_list Newline 
-- On Raise reduce production statement -> stmt_list Newline 
-- On Print reduce production statement -> stmt_list Newline 
-- On Plus reduce production statement -> stmt_list Newline 
-- On Pass reduce production statement -> stmt_list Newline 
-- On Not reduce production statement -> stmt_list Newline 
-- On Newline reduce production statement -> stmt_list Newline 
-- On Longinteger reduce production statement -> stmt_list Newline 
-- On Leftparen reduce production statement -> stmt_list Newline 
-- On Leftbracket reduce production statement -> stmt_list Newline 
-- On Leftbrace reduce production statement -> stmt_list Newline 
-- On Lambda reduce production statement -> stmt_list Newline 
-- On Integer reduce production statement -> stmt_list Newline 
-- On Import reduce production statement -> stmt_list Newline 
-- On Imaginary reduce production statement -> stmt_list Newline 
-- On If reduce production statement -> stmt_list Newline 
-- On Identifier reduce production statement -> stmt_list Newline 
-- On Global reduce production statement -> stmt_list Newline 
-- On From reduce production statement -> stmt_list Newline 
-- On For reduce production statement -> stmt_list Newline 
-- On Float reduce production statement -> stmt_list Newline 
-- On Del reduce production statement -> stmt_list Newline 
-- On Def reduce production statement -> stmt_list Newline 
-- On Dedent reduce production statement -> stmt_list Newline 
-- On Dash reduce production statement -> stmt_list Newline 
-- On Continue reduce production statement -> stmt_list Newline 
-- On Class reduce production statement -> stmt_list Newline 
-- On Break reduce production statement -> stmt_list Newline 
-- On Backquote reduce production statement -> stmt_list Newline 
-- On Assert reduce production statement -> stmt_list Newline 
-- On # reduce production statement -> stmt_list Newline 

State 350:
statement_plus -> statement_plus . statement [ While Try Tilde String Return Raise Print Plus Pass Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert ]
suite -> Newline Indent statement_plus . Dedent [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Finally Except Else Elif Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While shift to state 1
-- On Try shift to state 201
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On If shift to state 301
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On For shift to state 314
-- On Float shift to state 33
-- On Del shift to state 232
-- On Def shift to state 323
-- On Dedent shift to state 351
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Class shift to state 333
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On while_stmt shift to state 344
-- On u_expr shift to state 38
-- On try_stmt shift to state 345
-- On try_fin_stmt shift to state 346
-- On try_exc_stmt shift to state 347
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 348
-- On statement shift to state 352
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On if_stmt shift to state 353
-- On global_stmt shift to state 270
-- On funcdef shift to state 354
-- On for_stmt shift to state 355
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On compound_stmt shift to state 356
-- On comparison shift to state 94
-- On classdef shift to state 357
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 351:
suite -> Newline Indent statement_plus Dedent . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Finally Except Else Elif Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production suite -> Newline Indent statement_plus Dedent 
-- On Try reduce production suite -> Newline Indent statement_plus Dedent 
-- On Tilde reduce production suite -> Newline Indent statement_plus Dedent 
-- On String reduce production suite -> Newline Indent statement_plus Dedent 
-- On Return reduce production suite -> Newline Indent statement_plus Dedent 
-- On Raise reduce production suite -> Newline Indent statement_plus Dedent 
-- On Print reduce production suite -> Newline Indent statement_plus Dedent 
-- On Plus reduce production suite -> Newline Indent statement_plus Dedent 
-- On Pass reduce production suite -> Newline Indent statement_plus Dedent 
-- On Not reduce production suite -> Newline Indent statement_plus Dedent 
-- On Newline reduce production suite -> Newline Indent statement_plus Dedent 
-- On Longinteger reduce production suite -> Newline Indent statement_plus Dedent 
-- On Leftparen reduce production suite -> Newline Indent statement_plus Dedent 
-- On Leftbracket reduce production suite -> Newline Indent statement_plus Dedent 
-- On Leftbrace reduce production suite -> Newline Indent statement_plus Dedent 
-- On Lambda reduce production suite -> Newline Indent statement_plus Dedent 
-- On Integer reduce production suite -> Newline Indent statement_plus Dedent 
-- On Import reduce production suite -> Newline Indent statement_plus Dedent 
-- On Imaginary reduce production suite -> Newline Indent statement_plus Dedent 
-- On If reduce production suite -> Newline Indent statement_plus Dedent 
-- On Identifier reduce production suite -> Newline Indent statement_plus Dedent 
-- On Global reduce production suite -> Newline Indent statement_plus Dedent 
-- On From reduce production suite -> Newline Indent statement_plus Dedent 
-- On For reduce production suite -> Newline Indent statement_plus Dedent 
-- On Float reduce production suite -> Newline Indent statement_plus Dedent 
-- On Finally reduce production suite -> Newline Indent statement_plus Dedent 
-- On Except reduce production suite -> Newline Indent statement_plus Dedent 
-- On Else reduce production suite -> Newline Indent statement_plus Dedent 
-- On Elif reduce production suite -> Newline Indent statement_plus Dedent 
-- On Del reduce production suite -> Newline Indent statement_plus Dedent 
-- On Def reduce production suite -> Newline Indent statement_plus Dedent 
-- On Dedent reduce production suite -> Newline Indent statement_plus Dedent 
-- On Dash reduce production suite -> Newline Indent statement_plus Dedent 
-- On Continue reduce production suite -> Newline Indent statement_plus Dedent 
-- On Class reduce production suite -> Newline Indent statement_plus Dedent 
-- On Break reduce production suite -> Newline Indent statement_plus Dedent 
-- On Backquote reduce production suite -> Newline Indent statement_plus Dedent 
-- On Assert reduce production suite -> Newline Indent statement_plus Dedent 
-- On # reduce production suite -> Newline Indent statement_plus Dedent 

State 352:
statement_plus -> statement_plus statement . [ While Try Tilde String Return Raise Print Plus Pass Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert ]
-- On While reduce production statement_plus -> statement_plus statement 
-- On Try reduce production statement_plus -> statement_plus statement 
-- On Tilde reduce production statement_plus -> statement_plus statement 
-- On String reduce production statement_plus -> statement_plus statement 
-- On Return reduce production statement_plus -> statement_plus statement 
-- On Raise reduce production statement_plus -> statement_plus statement 
-- On Print reduce production statement_plus -> statement_plus statement 
-- On Plus reduce production statement_plus -> statement_plus statement 
-- On Pass reduce production statement_plus -> statement_plus statement 
-- On Not reduce production statement_plus -> statement_plus statement 
-- On Longinteger reduce production statement_plus -> statement_plus statement 
-- On Leftparen reduce production statement_plus -> statement_plus statement 
-- On Leftbracket reduce production statement_plus -> statement_plus statement 
-- On Leftbrace reduce production statement_plus -> statement_plus statement 
-- On Lambda reduce production statement_plus -> statement_plus statement 
-- On Integer reduce production statement_plus -> statement_plus statement 
-- On Import reduce production statement_plus -> statement_plus statement 
-- On Imaginary reduce production statement_plus -> statement_plus statement 
-- On If reduce production statement_plus -> statement_plus statement 
-- On Identifier reduce production statement_plus -> statement_plus statement 
-- On Global reduce production statement_plus -> statement_plus statement 
-- On From reduce production statement_plus -> statement_plus statement 
-- On For reduce production statement_plus -> statement_plus statement 
-- On Float reduce production statement_plus -> statement_plus statement 
-- On Del reduce production statement_plus -> statement_plus statement 
-- On Def reduce production statement_plus -> statement_plus statement 
-- On Dedent reduce production statement_plus -> statement_plus statement 
-- On Dash reduce production statement_plus -> statement_plus statement 
-- On Continue reduce production statement_plus -> statement_plus statement 
-- On Class reduce production statement_plus -> statement_plus statement 
-- On Break reduce production statement_plus -> statement_plus statement 
-- On Backquote reduce production statement_plus -> statement_plus statement 
-- On Assert reduce production statement_plus -> statement_plus statement 

State 353:
compound_stmt -> if_stmt . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production compound_stmt -> if_stmt 
-- On Try reduce production compound_stmt -> if_stmt 
-- On Tilde reduce production compound_stmt -> if_stmt 
-- On String reduce production compound_stmt -> if_stmt 
-- On Return reduce production compound_stmt -> if_stmt 
-- On Raise reduce production compound_stmt -> if_stmt 
-- On Print reduce production compound_stmt -> if_stmt 
-- On Plus reduce production compound_stmt -> if_stmt 
-- On Pass reduce production compound_stmt -> if_stmt 
-- On Not reduce production compound_stmt -> if_stmt 
-- On Newline reduce production compound_stmt -> if_stmt 
-- On Longinteger reduce production compound_stmt -> if_stmt 
-- On Leftparen reduce production compound_stmt -> if_stmt 
-- On Leftbracket reduce production compound_stmt -> if_stmt 
-- On Leftbrace reduce production compound_stmt -> if_stmt 
-- On Lambda reduce production compound_stmt -> if_stmt 
-- On Integer reduce production compound_stmt -> if_stmt 
-- On Import reduce production compound_stmt -> if_stmt 
-- On Imaginary reduce production compound_stmt -> if_stmt 
-- On If reduce production compound_stmt -> if_stmt 
-- On Identifier reduce production compound_stmt -> if_stmt 
-- On Global reduce production compound_stmt -> if_stmt 
-- On From reduce production compound_stmt -> if_stmt 
-- On For reduce production compound_stmt -> if_stmt 
-- On Float reduce production compound_stmt -> if_stmt 
-- On Del reduce production compound_stmt -> if_stmt 
-- On Def reduce production compound_stmt -> if_stmt 
-- On Dedent reduce production compound_stmt -> if_stmt 
-- On Dash reduce production compound_stmt -> if_stmt 
-- On Continue reduce production compound_stmt -> if_stmt 
-- On Class reduce production compound_stmt -> if_stmt 
-- On Break reduce production compound_stmt -> if_stmt 
-- On Backquote reduce production compound_stmt -> if_stmt 
-- On Assert reduce production compound_stmt -> if_stmt 
-- On # reduce production compound_stmt -> if_stmt 

State 354:
compound_stmt -> funcdef . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production compound_stmt -> funcdef 
-- On Try reduce production compound_stmt -> funcdef 
-- On Tilde reduce production compound_stmt -> funcdef 
-- On String reduce production compound_stmt -> funcdef 
-- On Return reduce production compound_stmt -> funcdef 
-- On Raise reduce production compound_stmt -> funcdef 
-- On Print reduce production compound_stmt -> funcdef 
-- On Plus reduce production compound_stmt -> funcdef 
-- On Pass reduce production compound_stmt -> funcdef 
-- On Not reduce production compound_stmt -> funcdef 
-- On Newline reduce production compound_stmt -> funcdef 
-- On Longinteger reduce production compound_stmt -> funcdef 
-- On Leftparen reduce production compound_stmt -> funcdef 
-- On Leftbracket reduce production compound_stmt -> funcdef 
-- On Leftbrace reduce production compound_stmt -> funcdef 
-- On Lambda reduce production compound_stmt -> funcdef 
-- On Integer reduce production compound_stmt -> funcdef 
-- On Import reduce production compound_stmt -> funcdef 
-- On Imaginary reduce production compound_stmt -> funcdef 
-- On If reduce production compound_stmt -> funcdef 
-- On Identifier reduce production compound_stmt -> funcdef 
-- On Global reduce production compound_stmt -> funcdef 
-- On From reduce production compound_stmt -> funcdef 
-- On For reduce production compound_stmt -> funcdef 
-- On Float reduce production compound_stmt -> funcdef 
-- On Del reduce production compound_stmt -> funcdef 
-- On Def reduce production compound_stmt -> funcdef 
-- On Dedent reduce production compound_stmt -> funcdef 
-- On Dash reduce production compound_stmt -> funcdef 
-- On Continue reduce production compound_stmt -> funcdef 
-- On Class reduce production compound_stmt -> funcdef 
-- On Break reduce production compound_stmt -> funcdef 
-- On Backquote reduce production compound_stmt -> funcdef 
-- On Assert reduce production compound_stmt -> funcdef 
-- On # reduce production compound_stmt -> funcdef 

State 355:
compound_stmt -> for_stmt . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production compound_stmt -> for_stmt 
-- On Try reduce production compound_stmt -> for_stmt 
-- On Tilde reduce production compound_stmt -> for_stmt 
-- On String reduce production compound_stmt -> for_stmt 
-- On Return reduce production compound_stmt -> for_stmt 
-- On Raise reduce production compound_stmt -> for_stmt 
-- On Print reduce production compound_stmt -> for_stmt 
-- On Plus reduce production compound_stmt -> for_stmt 
-- On Pass reduce production compound_stmt -> for_stmt 
-- On Not reduce production compound_stmt -> for_stmt 
-- On Newline reduce production compound_stmt -> for_stmt 
-- On Longinteger reduce production compound_stmt -> for_stmt 
-- On Leftparen reduce production compound_stmt -> for_stmt 
-- On Leftbracket reduce production compound_stmt -> for_stmt 
-- On Leftbrace reduce production compound_stmt -> for_stmt 
-- On Lambda reduce production compound_stmt -> for_stmt 
-- On Integer reduce production compound_stmt -> for_stmt 
-- On Import reduce production compound_stmt -> for_stmt 
-- On Imaginary reduce production compound_stmt -> for_stmt 
-- On If reduce production compound_stmt -> for_stmt 
-- On Identifier reduce production compound_stmt -> for_stmt 
-- On Global reduce production compound_stmt -> for_stmt 
-- On From reduce production compound_stmt -> for_stmt 
-- On For reduce production compound_stmt -> for_stmt 
-- On Float reduce production compound_stmt -> for_stmt 
-- On Del reduce production compound_stmt -> for_stmt 
-- On Def reduce production compound_stmt -> for_stmt 
-- On Dedent reduce production compound_stmt -> for_stmt 
-- On Dash reduce production compound_stmt -> for_stmt 
-- On Continue reduce production compound_stmt -> for_stmt 
-- On Class reduce production compound_stmt -> for_stmt 
-- On Break reduce production compound_stmt -> for_stmt 
-- On Backquote reduce production compound_stmt -> for_stmt 
-- On Assert reduce production compound_stmt -> for_stmt 
-- On # reduce production compound_stmt -> for_stmt 

State 356:
statement -> compound_stmt . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production statement -> compound_stmt 
-- On Try reduce production statement -> compound_stmt 
-- On Tilde reduce production statement -> compound_stmt 
-- On String reduce production statement -> compound_stmt 
-- On Return reduce production statement -> compound_stmt 
-- On Raise reduce production statement -> compound_stmt 
-- On Print reduce production statement -> compound_stmt 
-- On Plus reduce production statement -> compound_stmt 
-- On Pass reduce production statement -> compound_stmt 
-- On Not reduce production statement -> compound_stmt 
-- On Newline reduce production statement -> compound_stmt 
-- On Longinteger reduce production statement -> compound_stmt 
-- On Leftparen reduce production statement -> compound_stmt 
-- On Leftbracket reduce production statement -> compound_stmt 
-- On Leftbrace reduce production statement -> compound_stmt 
-- On Lambda reduce production statement -> compound_stmt 
-- On Integer reduce production statement -> compound_stmt 
-- On Import reduce production statement -> compound_stmt 
-- On Imaginary reduce production statement -> compound_stmt 
-- On If reduce production statement -> compound_stmt 
-- On Identifier reduce production statement -> compound_stmt 
-- On Global reduce production statement -> compound_stmt 
-- On From reduce production statement -> compound_stmt 
-- On For reduce production statement -> compound_stmt 
-- On Float reduce production statement -> compound_stmt 
-- On Del reduce production statement -> compound_stmt 
-- On Def reduce production statement -> compound_stmt 
-- On Dedent reduce production statement -> compound_stmt 
-- On Dash reduce production statement -> compound_stmt 
-- On Continue reduce production statement -> compound_stmt 
-- On Class reduce production statement -> compound_stmt 
-- On Break reduce production statement -> compound_stmt 
-- On Backquote reduce production statement -> compound_stmt 
-- On Assert reduce production statement -> compound_stmt 
-- On # reduce production statement -> compound_stmt 

State 357:
compound_stmt -> classdef . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production compound_stmt -> classdef 
-- On Try reduce production compound_stmt -> classdef 
-- On Tilde reduce production compound_stmt -> classdef 
-- On String reduce production compound_stmt -> classdef 
-- On Return reduce production compound_stmt -> classdef 
-- On Raise reduce production compound_stmt -> classdef 
-- On Print reduce production compound_stmt -> classdef 
-- On Plus reduce production compound_stmt -> classdef 
-- On Pass reduce production compound_stmt -> classdef 
-- On Not reduce production compound_stmt -> classdef 
-- On Newline reduce production compound_stmt -> classdef 
-- On Longinteger reduce production compound_stmt -> classdef 
-- On Leftparen reduce production compound_stmt -> classdef 
-- On Leftbracket reduce production compound_stmt -> classdef 
-- On Leftbrace reduce production compound_stmt -> classdef 
-- On Lambda reduce production compound_stmt -> classdef 
-- On Integer reduce production compound_stmt -> classdef 
-- On Import reduce production compound_stmt -> classdef 
-- On Imaginary reduce production compound_stmt -> classdef 
-- On If reduce production compound_stmt -> classdef 
-- On Identifier reduce production compound_stmt -> classdef 
-- On Global reduce production compound_stmt -> classdef 
-- On From reduce production compound_stmt -> classdef 
-- On For reduce production compound_stmt -> classdef 
-- On Float reduce production compound_stmt -> classdef 
-- On Del reduce production compound_stmt -> classdef 
-- On Def reduce production compound_stmt -> classdef 
-- On Dedent reduce production compound_stmt -> classdef 
-- On Dash reduce production compound_stmt -> classdef 
-- On Continue reduce production compound_stmt -> classdef 
-- On Class reduce production compound_stmt -> classdef 
-- On Break reduce production compound_stmt -> classdef 
-- On Backquote reduce production compound_stmt -> classdef 
-- On Assert reduce production compound_stmt -> classdef 
-- On # reduce production compound_stmt -> classdef 

State 358:
statement_plus -> statement . [ While Try Tilde String Return Raise Print Plus Pass Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert ]
-- On While reduce production statement_plus -> statement 
-- On Try reduce production statement_plus -> statement 
-- On Tilde reduce production statement_plus -> statement 
-- On String reduce production statement_plus -> statement 
-- On Return reduce production statement_plus -> statement 
-- On Raise reduce production statement_plus -> statement 
-- On Print reduce production statement_plus -> statement 
-- On Plus reduce production statement_plus -> statement 
-- On Pass reduce production statement_plus -> statement 
-- On Not reduce production statement_plus -> statement 
-- On Longinteger reduce production statement_plus -> statement 
-- On Leftparen reduce production statement_plus -> statement 
-- On Leftbracket reduce production statement_plus -> statement 
-- On Leftbrace reduce production statement_plus -> statement 
-- On Lambda reduce production statement_plus -> statement 
-- On Integer reduce production statement_plus -> statement 
-- On Import reduce production statement_plus -> statement 
-- On Imaginary reduce production statement_plus -> statement 
-- On If reduce production statement_plus -> statement 
-- On Identifier reduce production statement_plus -> statement 
-- On Global reduce production statement_plus -> statement 
-- On From reduce production statement_plus -> statement 
-- On For reduce production statement_plus -> statement 
-- On Float reduce production statement_plus -> statement 
-- On Del reduce production statement_plus -> statement 
-- On Def reduce production statement_plus -> statement 
-- On Dedent reduce production statement_plus -> statement 
-- On Dash reduce production statement_plus -> statement 
-- On Continue reduce production statement_plus -> statement 
-- On Class reduce production statement_plus -> statement 
-- On Break reduce production statement_plus -> statement 
-- On Backquote reduce production statement_plus -> statement 
-- On Assert reduce production statement_plus -> statement 

State 359:
while_stmt -> While expression Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
while_stmt -> While expression Colon suite . Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Else shift to state 360
-- On While reduce production while_stmt -> While expression Colon suite 
-- On Try reduce production while_stmt -> While expression Colon suite 
-- On Tilde reduce production while_stmt -> While expression Colon suite 
-- On String reduce production while_stmt -> While expression Colon suite 
-- On Return reduce production while_stmt -> While expression Colon suite 
-- On Raise reduce production while_stmt -> While expression Colon suite 
-- On Print reduce production while_stmt -> While expression Colon suite 
-- On Plus reduce production while_stmt -> While expression Colon suite 
-- On Pass reduce production while_stmt -> While expression Colon suite 
-- On Not reduce production while_stmt -> While expression Colon suite 
-- On Newline reduce production while_stmt -> While expression Colon suite 
-- On Longinteger reduce production while_stmt -> While expression Colon suite 
-- On Leftparen reduce production while_stmt -> While expression Colon suite 
-- On Leftbracket reduce production while_stmt -> While expression Colon suite 
-- On Leftbrace reduce production while_stmt -> While expression Colon suite 
-- On Lambda reduce production while_stmt -> While expression Colon suite 
-- On Integer reduce production while_stmt -> While expression Colon suite 
-- On Import reduce production while_stmt -> While expression Colon suite 
-- On Imaginary reduce production while_stmt -> While expression Colon suite 
-- On If reduce production while_stmt -> While expression Colon suite 
-- On Identifier reduce production while_stmt -> While expression Colon suite 
-- On Global reduce production while_stmt -> While expression Colon suite 
-- On From reduce production while_stmt -> While expression Colon suite 
-- On For reduce production while_stmt -> While expression Colon suite 
-- On Float reduce production while_stmt -> While expression Colon suite 
-- On Del reduce production while_stmt -> While expression Colon suite 
-- On Def reduce production while_stmt -> While expression Colon suite 
-- On Dedent reduce production while_stmt -> While expression Colon suite 
-- On Dash reduce production while_stmt -> While expression Colon suite 
-- On Continue reduce production while_stmt -> While expression Colon suite 
-- On Class reduce production while_stmt -> While expression Colon suite 
-- On Break reduce production while_stmt -> While expression Colon suite 
-- On Backquote reduce production while_stmt -> While expression Colon suite 
-- On Assert reduce production while_stmt -> While expression Colon suite 
-- On # reduce production while_stmt -> While expression Colon suite 

State 360:
while_stmt -> While expression Colon suite Else . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Colon shift to state 361

State 361:
while_stmt -> While expression Colon suite Else Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 362
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92

State 362:
while_stmt -> While expression Colon suite Else Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
-- On While reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Try reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Tilde reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On String reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Return reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Raise reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Print reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Plus reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Pass reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Not reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Newline reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Longinteger reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Leftparen reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Leftbracket reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Leftbrace reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Lambda reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Integer reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Import reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Imaginary reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On If reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Identifier reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Global reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On From reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On For reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Float reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Del reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Def reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Dedent reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Dash reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Continue reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Class reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Break reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Backquote reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On Assert reduce production while_stmt -> While expression Colon suite Else Colon suite 
-- On # reduce production while_stmt -> While expression Colon suite Else Colon suite 

State 363:
file_input_list -> Newline . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dash Continue Class Break Backquote Assert # ]
-- On While reduce production file_input_list -> Newline 
-- On Try reduce production file_input_list -> Newline 
-- On Tilde reduce production file_input_list -> Newline 
-- On String reduce production file_input_list -> Newline 
-- On Return reduce production file_input_list -> Newline 
-- On Raise reduce production file_input_list -> Newline 
-- On Print reduce production file_input_list -> Newline 
-- On Plus reduce production file_input_list -> Newline 
-- On Pass reduce production file_input_list -> Newline 
-- On Not reduce production file_input_list -> Newline 
-- On Newline reduce production file_input_list -> Newline 
-- On Longinteger reduce production file_input_list -> Newline 
-- On Leftparen reduce production file_input_list -> Newline 
-- On Leftbracket reduce production file_input_list -> Newline 
-- On Leftbrace reduce production file_input_list -> Newline 
-- On Lambda reduce production file_input_list -> Newline 
-- On Integer reduce production file_input_list -> Newline 
-- On Import reduce production file_input_list -> Newline 
-- On Imaginary reduce production file_input_list -> Newline 
-- On If reduce production file_input_list -> Newline 
-- On Identifier reduce production file_input_list -> Newline 
-- On Global reduce production file_input_list -> Newline 
-- On From reduce production file_input_list -> Newline 
-- On For reduce production file_input_list -> Newline 
-- On Float reduce production file_input_list -> Newline 
-- On Del reduce production file_input_list -> Newline 
-- On Def reduce production file_input_list -> Newline 
-- On Dash reduce production file_input_list -> Newline 
-- On Continue reduce production file_input_list -> Newline 
-- On Class reduce production file_input_list -> Newline 
-- On Break reduce production file_input_list -> Newline 
-- On Backquote reduce production file_input_list -> Newline 
-- On Assert reduce production file_input_list -> Newline 
-- On # reduce production file_input_list -> Newline 

State 364:
file_input_list -> statement . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dash Continue Class Break Backquote Assert # ]
-- On While reduce production file_input_list -> statement 
-- On Try reduce production file_input_list -> statement 
-- On Tilde reduce production file_input_list -> statement 
-- On String reduce production file_input_list -> statement 
-- On Return reduce production file_input_list -> statement 
-- On Raise reduce production file_input_list -> statement 
-- On Print reduce production file_input_list -> statement 
-- On Plus reduce production file_input_list -> statement 
-- On Pass reduce production file_input_list -> statement 
-- On Not reduce production file_input_list -> statement 
-- On Newline reduce production file_input_list -> statement 
-- On Longinteger reduce production file_input_list -> statement 
-- On Leftparen reduce production file_input_list -> statement 
-- On Leftbracket reduce production file_input_list -> statement 
-- On Leftbrace reduce production file_input_list -> statement 
-- On Lambda reduce production file_input_list -> statement 
-- On Integer reduce production file_input_list -> statement 
-- On Import reduce production file_input_list -> statement 
-- On Imaginary reduce production file_input_list -> statement 
-- On If reduce production file_input_list -> statement 
-- On Identifier reduce production file_input_list -> statement 
-- On Global reduce production file_input_list -> statement 
-- On From reduce production file_input_list -> statement 
-- On For reduce production file_input_list -> statement 
-- On Float reduce production file_input_list -> statement 
-- On Del reduce production file_input_list -> statement 
-- On Def reduce production file_input_list -> statement 
-- On Dash reduce production file_input_list -> statement 
-- On Continue reduce production file_input_list -> statement 
-- On Class reduce production file_input_list -> statement 
-- On Break reduce production file_input_list -> statement 
-- On Backquote reduce production file_input_list -> statement 
-- On Assert reduce production file_input_list -> statement 
-- On # reduce production file_input_list -> statement 

State 365:
file_input -> file_input_list . [ # ]
file_input_list -> file_input_list . Newline [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dash Continue Class Break Backquote Assert # ]
file_input_list -> file_input_list . statement [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dash Continue Class Break Backquote Assert # ]
-- On While shift to state 1
-- On Try shift to state 201
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 366
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On If shift to state 301
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On For shift to state 314
-- On Float shift to state 33
-- On Del shift to state 232
-- On Def shift to state 323
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Class shift to state 333
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On while_stmt shift to state 344
-- On u_expr shift to state 38
-- On try_stmt shift to state 345
-- On try_fin_stmt shift to state 346
-- On try_exc_stmt shift to state 347
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 348
-- On statement shift to state 367
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On if_stmt shift to state 353
-- On global_stmt shift to state 270
-- On funcdef shift to state 354
-- On for_stmt shift to state 355
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On compound_stmt shift to state 356
-- On comparison shift to state 94
-- On classdef shift to state 357
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
-- On # reduce production file_input -> file_input_list 

State 366:
file_input_list -> file_input_list Newline . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dash Continue Class Break Backquote Assert # ]
-- On While reduce production file_input_list -> file_input_list Newline 
-- On Try reduce production file_input_list -> file_input_list Newline 
-- On Tilde reduce production file_input_list -> file_input_list Newline 
-- On String reduce production file_input_list -> file_input_list Newline 
-- On Return reduce production file_input_list -> file_input_list Newline 
-- On Raise reduce production file_input_list -> file_input_list Newline 
-- On Print reduce production file_input_list -> file_input_list Newline 
-- On Plus reduce production file_input_list -> file_input_list Newline 
-- On Pass reduce production file_input_list -> file_input_list Newline 
-- On Not reduce production file_input_list -> file_input_list Newline 
-- On Newline reduce production file_input_list -> file_input_list Newline 
-- On Longinteger reduce production file_input_list -> file_input_list Newline 
-- On Leftparen reduce production file_input_list -> file_input_list Newline 
-- On Leftbracket reduce production file_input_list -> file_input_list Newline 
-- On Leftbrace reduce production file_input_list -> file_input_list Newline 
-- On Lambda reduce production file_input_list -> file_input_list Newline 
-- On Integer reduce production file_input_list -> file_input_list Newline 
-- On Import reduce production file_input_list -> file_input_list Newline 
-- On Imaginary reduce production file_input_list -> file_input_list Newline 
-- On If reduce production file_input_list -> file_input_list Newline 
-- On Identifier reduce production file_input_list -> file_input_list Newline 
-- On Global reduce production file_input_list -> file_input_list Newline 
-- On From reduce production file_input_list -> file_input_list Newline 
-- On For reduce production file_input_list -> file_input_list Newline 
-- On Float reduce production file_input_list -> file_input_list Newline 
-- On Del reduce production file_input_list -> file_input_list Newline 
-- On Def reduce production file_input_list -> file_input_list Newline 
-- On Dash reduce production file_input_list -> file_input_list Newline 
-- On Continue reduce production file_input_list -> file_input_list Newline 
-- On Class reduce production file_input_list -> file_input_list Newline 
-- On Break reduce production file_input_list -> file_input_list Newline 
-- On Backquote reduce production file_input_list -> file_input_list Newline 
-- On Assert reduce production file_input_list -> file_input_list Newline 
-- On # reduce production file_input_list -> file_input_list Newline 

State 367:
file_input_list -> file_input_list statement . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dash Continue Class Break Backquote Assert # ]
-- On While reduce production file_input_list -> file_input_list statement 
-- On Try reduce production file_input_list -> file_input_list statement 
-- On Tilde reduce production file_input_list -> file_input_list statement 
-- On String reduce production file_input_list -> file_input_list statement 
-- On Return reduce production file_input_list -> file_input_list statement 
-- On Raise reduce production file_input_list -> file_input_list statement 
-- On Print reduce production file_input_list -> file_input_list statement 
-- On Plus reduce production file_input_list -> file_input_list statement 
-- On Pass reduce production file_input_list -> file_input_list statement 
-- On Not reduce production file_input_list -> file_input_list statement 
-- On Newline reduce production file_input_list -> file_input_list statement 
-- On Longinteger reduce production file_input_list -> file_input_list statement 
-- On Leftparen reduce production file_input_list -> file_input_list statement 
-- On Leftbracket reduce production file_input_list -> file_input_list statement 
-- On Leftbrace reduce production file_input_list -> file_input_list statement 
-- On Lambda reduce production file_input_list -> file_input_list statement 
-- On Integer reduce production file_input_list -> file_input_list statement 
-- On Import reduce production file_input_list -> file_input_list statement 
-- On Imaginary reduce production file_input_list -> file_input_list statement 
-- On If reduce production file_input_list -> file_input_list statement 
-- On Identifier reduce production file_input_list -> file_input_list statement 
-- On Global reduce production file_input_list -> file_input_list statement 
-- On From reduce production file_input_list -> file_input_list statement 
-- On For reduce production file_input_list -> file_input_list statement 
-- On Float reduce production file_input_list -> file_input_list statement 
-- On Del reduce production file_input_list -> file_input_list statement 
-- On Def reduce production file_input_list -> file_input_list statement 
-- On Dash reduce production file_input_list -> file_input_list statement 
-- On Continue reduce production file_input_list -> file_input_list statement 
-- On Class reduce production file_input_list -> file_input_list statement 
-- On Break reduce production file_input_list -> file_input_list statement 
-- On Backquote reduce production file_input_list -> file_input_list statement 
-- On Assert reduce production file_input_list -> file_input_list statement 
-- On # reduce production file_input_list -> file_input_list statement 

State 368:
file_input' -> file_input . [ # ]
-- On # accept file_input

State 247 has an end-of-stream conflict. There is a tension between
(1) reducing production try_fin_stmt -> Try Colon suite Finally Colon suite 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 283 has an end-of-stream conflict. There is a tension between
(1) reducing production suite -> stmt_list Newline 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Finally Except Else Elif Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 287 has an end-of-stream conflict. There is a tension between
(1) reducing production exc_item -> Except Colon suite 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 292 has an end-of-stream conflict. There is a tension between
(1) reducing production exc_item -> Except expression Comma primary Colon suite 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 294 has an end-of-stream conflict. There is a tension between
(1) reducing production exc_item -> Except expression Colon suite 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 295 has an end-of-stream conflict. There is a tension between
(1) reducing production try_exc_stmt -> Try Colon suite exc_list 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 298 has an end-of-stream conflict. There is a tension between
(1) reducing production try_exc_stmt -> Try Colon suite exc_list Else Colon suite 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 299 has an end-of-stream conflict. There is a tension between
(1) reducing production exc_list -> exc_list exc_item 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 300 has an end-of-stream conflict. There is a tension between
(1) reducing production exc_list -> exc_item 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 304 has an end-of-stream conflict. There is a tension between
(1) reducing production if_stmt -> If expression Colon suite 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Else Elif Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 307 has an end-of-stream conflict. There is a tension between
(1) reducing production elif_list -> Else Colon suite 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 311 has an end-of-stream conflict. There is a tension between
(1) reducing production elif_list -> Elif expression Colon suite 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Else Elif Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 312 has an end-of-stream conflict. There is a tension between
(1) reducing production elif_list -> Elif expression Colon suite elif_list 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 313 has an end-of-stream conflict. There is a tension between
(1) reducing production if_stmt -> If expression Colon suite elif_list 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 319 has an end-of-stream conflict. There is a tension between
(1) reducing production for_stmt -> For target_list In expr_list Colon suite 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Else Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 322 has an end-of-stream conflict. There is a tension between
(1) reducing production for_stmt -> For target_list In expr_list Colon suite Else Colon suite 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 328 has an end-of-stream conflict. There is a tension between
(1) reducing production funcdef -> Def Identifier Leftparen Rightparen Colon suite 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 332 has an end-of-stream conflict. There is a tension between
(1) reducing production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 340 has an end-of-stream conflict. There is a tension between
(1) reducing production classdef -> Class Identifier Colon suite 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 343 has an end-of-stream conflict. There is a tension between
(1) reducing production classdef -> Class Identifier inheritance Colon suite 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 344 has an end-of-stream conflict. There is a tension between
(1) reducing production compound_stmt -> while_stmt 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 345 has an end-of-stream conflict. There is a tension between
(1) reducing production compound_stmt -> try_stmt 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 346 has an end-of-stream conflict. There is a tension between
(1) reducing production try_stmt -> try_fin_stmt 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 347 has an end-of-stream conflict. There is a tension between
(1) reducing production try_stmt -> try_exc_stmt 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 349 has an end-of-stream conflict. There is a tension between
(1) reducing production statement -> stmt_list Newline 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 351 has an end-of-stream conflict. There is a tension between
(1) reducing production suite -> Newline Indent statement_plus Dedent 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Finally Except Else Elif Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 353 has an end-of-stream conflict. There is a tension between
(1) reducing production compound_stmt -> if_stmt 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 354 has an end-of-stream conflict. There is a tension between
(1) reducing production compound_stmt -> funcdef 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 355 has an end-of-stream conflict. There is a tension between
(1) reducing production compound_stmt -> for_stmt 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 356 has an end-of-stream conflict. There is a tension between
(1) reducing production statement -> compound_stmt 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 357 has an end-of-stream conflict. There is a tension between
(1) reducing production compound_stmt -> classdef 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 359 has an end-of-stream conflict. There is a tension between
(1) reducing production while_stmt -> While expression Colon suite 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Else Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 362 has an end-of-stream conflict. There is a tension between
(1) reducing production while_stmt -> While expression Colon suite Else Colon suite 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert,
which would require some other action.

State 363 has an end-of-stream conflict. There is a tension between
(1) reducing production file_input_list -> Newline 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dash Continue Class Break Backquote Assert,
which would require some other action.

State 364 has an end-of-stream conflict. There is a tension between
(1) reducing production file_input_list -> statement 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dash Continue Class Break Backquote Assert,
which would require some other action.

State 365 has an end-of-stream conflict. There is a tension between
(1) reducing production file_input -> file_input_list 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dash Continue Class Break Backquote Assert,
which would require some other action.

State 366 has an end-of-stream conflict. There is a tension between
(1) reducing production file_input_list -> file_input_list Newline 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dash Continue Class Break Backquote Assert,
which would require some other action.

State 367 has an end-of-stream conflict. There is a tension between
(1) reducing production file_input_list -> file_input_list statement 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dash Continue Class Break Backquote Assert,
which would require some other action.

