State 0:
## Known stack suffix:
##
## LR(1) items:
file_input' -> . file_input [ # ]
## Transitions:
-- On While shift to state 1
-- On Try shift to state 201
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 363
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On If shift to state 301
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On For shift to state 314
-- On Float shift to state 33
-- On Del shift to state 232
-- On Def shift to state 323
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Class shift to state 333
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On while_stmt shift to state 344
-- On u_expr shift to state 38
-- On try_stmt shift to state 345
-- On try_fin_stmt shift to state 346
-- On try_exc_stmt shift to state 347
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 348
-- On statement shift to state 364
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On if_stmt shift to state 353
-- On global_stmt shift to state 270
-- On funcdef shift to state 354
-- On for_stmt shift to state 355
-- On file_input_list shift to state 365
-- On file_input shift to state 368
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On compound_stmt shift to state 356
-- On comparison shift to state 94
-- On classdef shift to state 357
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 1:
## Known stack suffix:
## While
## LR(1) items:
while_stmt -> While . expression Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
while_stmt -> While . expression Colon suite Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 182
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 2:
## Known stack suffix:
## Tilde
## LR(1) items:
u_expr -> Tilde . u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 181
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
## Reductions:

State 3:
## Known stack suffix:
## String
## LR(1) items:
literal -> String . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production literal -> String

State 4:
## Known stack suffix:
## Plus
## LR(1) items:
u_expr -> Plus . u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 180
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
## Reductions:

State 5:
## Known stack suffix:
## Longinteger
## LR(1) items:
literal -> Longinteger . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production literal -> Longinteger

State 6:
## Known stack suffix:
## Leftparen
## LR(1) items:
parenth_form -> Leftparen . Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
parenth_form -> Leftparen . expr_list_without_comma Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
parenth_form -> Leftparen . expr_list_without_comma Comma Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Rightparen shift to state 7
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 176
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 7:
## Known stack suffix:
## Leftparen Rightparen
## LR(1) items:
parenth_form -> Leftparen Rightparen . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parenth_form -> Leftparen Rightparen

State 8:
## Known stack suffix:
## Not
## LR(1) items:
not_test -> Not . not_test [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote And ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_expr shift to state 73
-- On not_test shift to state 175
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 9:
## Known stack suffix:
## Leftbracket
## LR(1) items:
list_display -> Leftbracket . Rightbracket [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
list_display -> Leftbracket . listmaker Rightbracket [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Rightbracket shift to state 10
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On listmaker shift to state 170
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 174
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 10:
## Known stack suffix:
## Leftbracket Rightbracket
## LR(1) items:
list_display -> Leftbracket Rightbracket . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_display -> Leftbracket Rightbracket

State 11:
## Known stack suffix:
## Leftbrace
## LR(1) items:
dict_display -> Leftbrace . Rightbrace [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
dict_display -> Leftbrace . key_datum_list Rightbrace [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Rightbrace shift to state 12
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On key_datum_list_without_comma shift to state 161
-- On key_datum_list shift to state 167
-- On key_datum shift to state 169
-- On expression shift to state 164
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 12:
## Known stack suffix:
## Leftbrace Rightbrace
## LR(1) items:
dict_display -> Leftbrace Rightbrace . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dict_display -> Leftbrace Rightbrace

State 13:
## Known stack suffix:
## Lambda
## LR(1) items:
lambda_form -> Lambda . Colon expression [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
lambda_form -> Lambda . parameter_list Colon expression [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
## Transitions:
-- On StarStar shift to state 14
-- On Star shift to state 16
-- On Leftparen shift to state 21
-- On Identifier shift to state 22
-- On Colon shift to state 29
-- On parameter_list shift to state 143
-- On parameter shift to state 146
-- On defparams shift to state 149
-- On defparam shift to state 160
## Reductions:

State 14:
## Known stack suffix:
## StarStar
## LR(1) items:
parameter_list -> StarStar . Identifier [ Rightparen Colon ]
## Transitions:
-- On Identifier shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## StarStar Identifier
## LR(1) items:
parameter_list -> StarStar Identifier . [ Rightparen Colon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_list -> StarStar Identifier

State 16:
## Known stack suffix:
## Star
## LR(1) items:
parameter_list -> Star . Identifier [ Rightparen Colon ]
parameter_list -> Star . Identifier Comma StarStar Identifier [ Rightparen Colon ]
## Transitions:
-- On Identifier shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## Star Identifier
## LR(1) items:
parameter_list -> Star Identifier . [ Rightparen Colon ]
parameter_list -> Star Identifier . Comma StarStar Identifier [ Rightparen Colon ]
## Transitions:
-- On Comma shift to state 18
## Reductions:
-- On Rightparen Colon
--   reduce production parameter_list -> Star Identifier

State 18:
## Known stack suffix:
## Star Identifier Comma
## LR(1) items:
parameter_list -> Star Identifier Comma . StarStar Identifier [ Rightparen Colon ]
## Transitions:
-- On StarStar shift to state 19
## Reductions:

State 19:
## Known stack suffix:
## Star Identifier Comma StarStar
## LR(1) items:
parameter_list -> Star Identifier Comma StarStar . Identifier [ Rightparen Colon ]
## Transitions:
-- On Identifier shift to state 20
## Reductions:

State 20:
## Known stack suffix:
## Star Identifier Comma StarStar Identifier
## LR(1) items:
parameter_list -> Star Identifier Comma StarStar Identifier . [ Rightparen Colon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_list -> Star Identifier Comma StarStar Identifier

State 21:
## Known stack suffix:
## Leftparen
## LR(1) items:
parameter -> Leftparen . sublist Rightparen [ Rightparen Equal Comma Colon ]
## Transitions:
-- On Leftparen shift to state 21
-- On Identifier shift to state 22
-- On sublist_without_comma shift to state 23
-- On sublist shift to state 26
-- On parameter shift to state 28
## Reductions:

State 22:
## Known stack suffix:
## Identifier
## LR(1) items:
parameter -> Identifier . [ Rightparen Equal Comma Colon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter -> Identifier

State 23:
## Known stack suffix:
## sublist_without_comma
## LR(1) items:
sublist -> sublist_without_comma . [ Rightparen ]
sublist -> sublist_without_comma . Comma [ Rightparen ]
sublist_without_comma -> sublist_without_comma . Comma parameter [ Rightparen Comma ]
## Transitions:
-- On Comma shift to state 24
## Reductions:
-- On Rightparen
--   reduce production sublist -> sublist_without_comma

State 24:
## Known stack suffix:
## sublist_without_comma Comma
## LR(1) items:
sublist -> sublist_without_comma Comma . [ Rightparen ]
sublist_without_comma -> sublist_without_comma Comma . parameter [ Rightparen Comma ]
## Transitions:
-- On Leftparen shift to state 21
-- On Identifier shift to state 22
-- On parameter shift to state 25
## Reductions:
-- On Rightparen
--   reduce production sublist -> sublist_without_comma Comma

State 25:
## Known stack suffix:
## sublist_without_comma Comma parameter
## LR(1) items:
sublist_without_comma -> sublist_without_comma Comma parameter . [ Rightparen Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sublist_without_comma -> sublist_without_comma Comma parameter

State 26:
## Known stack suffix:
## Leftparen sublist
## LR(1) items:
parameter -> Leftparen sublist . Rightparen [ Rightparen Equal Comma Colon ]
## Transitions:
-- On Rightparen shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## Leftparen sublist Rightparen
## LR(1) items:
parameter -> Leftparen sublist Rightparen . [ Rightparen Equal Comma Colon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter -> Leftparen sublist Rightparen

State 28:
## Known stack suffix:
## parameter
## LR(1) items:
sublist_without_comma -> parameter . [ Rightparen Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sublist_without_comma -> parameter

State 29:
## Known stack suffix:
## Lambda Colon
## LR(1) items:
lambda_form -> Lambda Colon . expression [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 142
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 30:
## Known stack suffix:
## Integer
## LR(1) items:
literal -> Integer . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production literal -> Integer

State 31:
## Known stack suffix:
## Imaginary
## LR(1) items:
literal -> Imaginary . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production literal -> Imaginary

State 32:
## Known stack suffix:
## Identifier
## LR(1) items:
atom -> Identifier . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> Identifier

State 33:
## Known stack suffix:
## Float
## LR(1) items:
literal -> Float . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production literal -> Float

State 34:
## Known stack suffix:
## Dash
## LR(1) items:
u_expr -> Dash . u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 141
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
## Reductions:

State 35:
## Known stack suffix:
## Backquote
## LR(1) items:
string_conversion -> Backquote . expr_list_without_comma Backquote [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 137
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 36:
## Known stack suffix:
## xor_expr
## LR(1) items:
or_expr -> xor_expr . [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Bar Backquote And ]
xor_expr -> xor_expr . Caret and_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And ]
## Transitions:
-- On Caret shift to state 37
## Reductions:
-- On Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Bar Backquote And
--   reduce production or_expr -> xor_expr

State 37:
## Known stack suffix:
## xor_expr Caret
## LR(1) items:
xor_expr -> xor_expr Caret . and_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_expr shift to state 135
-- On a_expr shift to state 92
## Reductions:

State 38:
## Known stack suffix:
## u_expr
## LR(1) items:
m_expr -> u_expr . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production m_expr -> u_expr

State 39:
## Known stack suffix:
## string_conversion
## LR(1) items:
enclosure -> string_conversion . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enclosure -> string_conversion

State 40:
## Known stack suffix:
## slicing
## LR(1) items:
primary -> slicing . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary -> slicing

State 41:
## Known stack suffix:
## shift_expr
## LR(1) items:
and_expr -> shift_expr . [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
shift_expr -> shift_expr . Leftshift a_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
shift_expr -> shift_expr . Rightshift a_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Rightshift shift to state 42
-- On Leftshift shift to state 86
## Reductions:
-- On Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand
--   reduce production and_expr -> shift_expr

State 42:
## Known stack suffix:
## shift_expr Rightshift
## LR(1) items:
shift_expr -> shift_expr Rightshift . a_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On a_expr shift to state 134
## Reductions:

State 43:
## Known stack suffix:
## primary
## LR(1) items:
attributeref -> primary . Period Identifier [ StarStar Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Period Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
call -> primary . Leftparen Rightparen [ StarStar Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Period Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
call -> primary . Leftparen arg_list Rightparen [ StarStar Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Period Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
power -> primary . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
power -> primary . StarStar u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
slicing -> primary . Leftbracket slice_list Rightbracket [ StarStar Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Period Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On StarStar shift to state 44
-- On Period shift to state 55
-- On Leftparen shift to state 57
-- On Leftbracket shift to state 118
## Reductions:
-- On Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand
--   reduce production power -> primary

State 44:
## Known stack suffix:
## primary StarStar
## LR(1) items:
power -> primary StarStar . u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 45
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
## Reductions:

State 45:
## Known stack suffix:
## primary StarStar u_expr
## LR(1) items:
power -> primary StarStar u_expr . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production power -> primary StarStar u_expr

State 46:
## Known stack suffix:
## power
## LR(1) items:
u_expr -> power . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production u_expr -> power

State 47:
## Known stack suffix:
## parenth_form
## LR(1) items:
enclosure -> parenth_form . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enclosure -> parenth_form

State 48:
## Known stack suffix:
## literal
## LR(1) items:
atom -> literal . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> literal

State 49:
## Known stack suffix:
## list_display
## LR(1) items:
enclosure -> list_display . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enclosure -> list_display

State 50:
## Known stack suffix:
## enclosure
## LR(1) items:
atom -> enclosure . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> enclosure

State 51:
## Known stack suffix:
## dict_display
## LR(1) items:
enclosure -> dict_display . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enclosure -> dict_display

State 52:
## Known stack suffix:
## call
## LR(1) items:
primary -> call . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary -> call

State 53:
## Known stack suffix:
## attributeref
## LR(1) items:
primary -> attributeref . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary -> attributeref

State 54:
## Known stack suffix:
## atom
## LR(1) items:
primary -> atom . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary -> atom

State 55:
## Known stack suffix:
## primary Period
## LR(1) items:
attributeref -> primary Period . Identifier [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
-- On Identifier shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## primary Period Identifier
## LR(1) items:
attributeref -> primary Period Identifier . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attributeref -> primary Period Identifier

State 57:
## Known stack suffix:
## primary Leftparen
## LR(1) items:
call -> primary Leftparen . Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
call -> primary Leftparen . arg_list Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
-- On Rightparen shift to state 58
-- On arg_list shift to state 59
-- On arg_comma_star shift to state 61
## Reductions:
-- On Tilde String StarStar Star Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote
--   reduce production arg_comma_star ->

State 58:
## Known stack suffix:
## primary Leftparen Rightparen
## LR(1) items:
call -> primary Leftparen Rightparen . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> primary Leftparen Rightparen

State 59:
## Known stack suffix:
## primary Leftparen arg_list
## LR(1) items:
call -> primary Leftparen arg_list . Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
-- On Rightparen shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## primary Leftparen arg_list Rightparen
## LR(1) items:
call -> primary Leftparen arg_list Rightparen . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> primary Leftparen arg_list Rightparen

State 61:
## Known stack suffix:
## arg_comma_star
## LR(1) items:
arg_comma_star -> arg_comma_star . argument Comma [ Tilde String StarStar Star Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
arg_list -> arg_comma_star . argument optional_comma [ Rightparen ]
arg_list -> arg_comma_star . Star atom [ Rightparen ]
arg_list -> arg_comma_star . Star atom Comma StarStar atom [ Rightparen ]
arg_list -> arg_comma_star . StarStar atom [ Rightparen ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On StarStar shift to state 62
-- On Star shift to state 64
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 69
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 114
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On argument shift to state 115
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 62:
## Known stack suffix:
## arg_comma_star StarStar
## LR(1) items:
arg_list -> arg_comma_star StarStar . atom [ Rightparen ]
## Transitions:
-- On String shift to state 3
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Backquote shift to state 35
-- On string_conversion shift to state 39
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On atom shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## arg_comma_star StarStar atom
## LR(1) items:
arg_list -> arg_comma_star StarStar atom . [ Rightparen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arg_list -> arg_comma_star StarStar atom

State 64:
## Known stack suffix:
## arg_comma_star Star
## LR(1) items:
arg_list -> arg_comma_star Star . atom [ Rightparen ]
arg_list -> arg_comma_star Star . atom Comma StarStar atom [ Rightparen ]
## Transitions:
-- On String shift to state 3
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Backquote shift to state 35
-- On string_conversion shift to state 39
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On atom shift to state 65
## Reductions:

State 65:
## Known stack suffix:
## arg_comma_star Star atom
## LR(1) items:
arg_list -> arg_comma_star Star atom . [ Rightparen ]
arg_list -> arg_comma_star Star atom . Comma StarStar atom [ Rightparen ]
## Transitions:
-- On Comma shift to state 66
## Reductions:
-- On Rightparen
--   reduce production arg_list -> arg_comma_star Star atom

State 66:
## Known stack suffix:
## arg_comma_star Star atom Comma
## LR(1) items:
arg_list -> arg_comma_star Star atom Comma . StarStar atom [ Rightparen ]
## Transitions:
-- On StarStar shift to state 67
## Reductions:

State 67:
## Known stack suffix:
## arg_comma_star Star atom Comma StarStar
## LR(1) items:
arg_list -> arg_comma_star Star atom Comma StarStar . atom [ Rightparen ]
## Transitions:
-- On String shift to state 3
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Backquote shift to state 35
-- On string_conversion shift to state 39
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On atom shift to state 68
## Reductions:

State 68:
## Known stack suffix:
## arg_comma_star Star atom Comma StarStar atom
## LR(1) items:
arg_list -> arg_comma_star Star atom Comma StarStar atom . [ Rightparen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arg_list -> arg_comma_star Star atom Comma StarStar atom

State 69:
## Known stack suffix:
## Identifier
## LR(1) items:
argument -> Identifier . Equal expression [ Rightparen Comma ]
atom -> Identifier . [ StarStar Star Slash Rightshift Rightparen Plus Period Percent Or NotEqual Not LessthanEq Lessthan Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Dash Comma Caret Bar And Ampersand ]
## Transitions:
-- On Equal shift to state 70
## Reductions:
-- On StarStar Star Slash Rightshift Rightparen Plus Period Percent Or NotEqual Not LessthanEq Lessthan Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Dash Comma Caret Bar And Ampersand
--   reduce production atom -> Identifier

State 70:
## Known stack suffix:
## Identifier Equal
## LR(1) items:
argument -> Identifier Equal . expression [ Rightparen Comma ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 112
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 71:
## Known stack suffix:
## or_test
## LR(1) items:
expression -> or_test . [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
or_test -> or_test . Or and_test [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote ]
## Transitions:
-- On Or shift to state 72
## Reductions:
-- On Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote
--   reduce production expression -> or_test

State 72:
## Known stack suffix:
## or_test Or
## LR(1) items:
or_test -> or_test Or . and_test [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 108
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 73:
## Known stack suffix:
## or_expr
## LR(1) items:
comparison -> or_expr . [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Backquote And ]
or_expr -> or_expr . Bar xor_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Bar Backquote And ]
## Transitions:
-- On Bar shift to state 74
## Reductions:
-- On Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Backquote And
--   reduce production comparison -> or_expr

State 74:
## Known stack suffix:
## or_expr Bar
## LR(1) items:
or_expr -> or_expr Bar . xor_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Bar Backquote And ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 75
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 75:
## Known stack suffix:
## or_expr Bar xor_expr
## LR(1) items:
or_expr -> or_expr Bar xor_expr . [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Bar Backquote And ]
xor_expr -> xor_expr . Caret and_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And ]
## Transitions:
-- On Caret shift to state 37
## Reductions:
-- On Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Bar Backquote And
--   reduce production or_expr -> or_expr Bar xor_expr

State 76:
## Known stack suffix:
## m_expr
## LR(1) items:
a_expr -> m_expr . [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Star u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Slash u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Percent u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Star shift to state 77
-- On Slash shift to state 79
-- On Percent shift to state 81
## Reductions:
-- On Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand
--   reduce production a_expr -> m_expr

State 77:
## Known stack suffix:
## m_expr Star
## LR(1) items:
m_expr -> m_expr Star . u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 78
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
## Reductions:

State 78:
## Known stack suffix:
## m_expr Star u_expr
## LR(1) items:
m_expr -> m_expr Star u_expr . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production m_expr -> m_expr Star u_expr

State 79:
## Known stack suffix:
## m_expr Slash
## LR(1) items:
m_expr -> m_expr Slash . u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 80
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
## Reductions:

State 80:
## Known stack suffix:
## m_expr Slash u_expr
## LR(1) items:
m_expr -> m_expr Slash u_expr . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production m_expr -> m_expr Slash u_expr

State 81:
## Known stack suffix:
## m_expr Percent
## LR(1) items:
m_expr -> m_expr Percent . u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 82
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
## Reductions:

State 82:
## Known stack suffix:
## m_expr Percent u_expr
## LR(1) items:
m_expr -> m_expr Percent u_expr . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production m_expr -> m_expr Percent u_expr

State 83:
## Known stack suffix:
## and_expr
## LR(1) items:
and_expr -> and_expr . Ampersand shift_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
xor_expr -> and_expr . [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And ]
## Transitions:
-- On Ampersand shift to state 84
## Reductions:
-- On Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And
--   reduce production xor_expr -> and_expr

State 84:
## Known stack suffix:
## and_expr Ampersand
## LR(1) items:
and_expr -> and_expr Ampersand . shift_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 85
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On a_expr shift to state 92
## Reductions:

State 85:
## Known stack suffix:
## and_expr Ampersand shift_expr
## LR(1) items:
and_expr -> and_expr Ampersand shift_expr . [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
shift_expr -> shift_expr . Leftshift a_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
shift_expr -> shift_expr . Rightshift a_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Rightshift shift to state 42
-- On Leftshift shift to state 86
## Reductions:
-- On Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand
--   reduce production and_expr -> and_expr Ampersand shift_expr

State 86:
## Known stack suffix:
## shift_expr Leftshift
## LR(1) items:
shift_expr -> shift_expr Leftshift . a_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On a_expr shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## shift_expr Leftshift a_expr
## LR(1) items:
a_expr -> a_expr . Plus m_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
a_expr -> a_expr . Dash m_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
shift_expr -> shift_expr Leftshift a_expr . [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Plus shift to state 88
-- On Dash shift to state 90
## Reductions:
-- On Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand
--   reduce production shift_expr -> shift_expr Leftshift a_expr

State 88:
## Known stack suffix:
## a_expr Plus
## LR(1) items:
a_expr -> a_expr Plus . m_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On m_expr shift to state 89
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
## Reductions:

State 89:
## Known stack suffix:
## a_expr Plus m_expr
## LR(1) items:
a_expr -> a_expr Plus m_expr . [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Star u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Slash u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Percent u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Star shift to state 77
-- On Slash shift to state 79
-- On Percent shift to state 81
## Reductions:
-- On Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand
--   reduce production a_expr -> a_expr Plus m_expr

State 90:
## Known stack suffix:
## a_expr Dash
## LR(1) items:
a_expr -> a_expr Dash . m_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On m_expr shift to state 91
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
## Reductions:

State 91:
## Known stack suffix:
## a_expr Dash m_expr
## LR(1) items:
a_expr -> a_expr Dash m_expr . [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Star u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Slash u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
m_expr -> m_expr . Percent u_expr [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Star shift to state 77
-- On Slash shift to state 79
-- On Percent shift to state 81
## Reductions:
-- On Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand
--   reduce production a_expr -> a_expr Dash m_expr

State 92:
## Known stack suffix:
## a_expr
## LR(1) items:
a_expr -> a_expr . Plus m_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
a_expr -> a_expr . Dash m_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
shift_expr -> a_expr . [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Plus shift to state 88
-- On Dash shift to state 90
## Reductions:
-- On Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand
--   reduce production shift_expr -> a_expr

State 93:
## Known stack suffix:
## not_test
## LR(1) items:
and_test -> not_test . [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote And ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production and_test -> not_test

State 94:
## Known stack suffix:
## comparison
## LR(1) items:
comparison -> comparison . comp_operator or_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Backquote And ]
not_test -> comparison . [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote And ]
## Transitions:
-- On NotEqual shift to state 95
-- On Not shift to state 96
-- On LessthanEq shift to state 98
-- On Lessthan shift to state 99
-- On Is shift to state 100
-- On In shift to state 102
-- On GreaterthanEq shift to state 103
-- On Greaterthan shift to state 104
-- On EqualEqual shift to state 105
-- On comp_operator shift to state 106
## Reductions:
-- On Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote And
--   reduce production not_test -> comparison

State 95:
## Known stack suffix:
## NotEqual
## LR(1) items:
comp_operator -> NotEqual . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production comp_operator -> NotEqual

State 96:
## Known stack suffix:
## Not
## LR(1) items:
comp_operator -> Not . In [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
-- On In shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## Not In
## LR(1) items:
comp_operator -> Not In . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production comp_operator -> Not In

State 98:
## Known stack suffix:
## LessthanEq
## LR(1) items:
comp_operator -> LessthanEq . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production comp_operator -> LessthanEq

State 99:
## Known stack suffix:
## Lessthan
## LR(1) items:
comp_operator -> Lessthan . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production comp_operator -> Lessthan

State 100:
## Known stack suffix:
## Is
## LR(1) items:
comp_operator -> Is . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
comp_operator -> Is . Not [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
-- On Not shift to state 101
## Reductions:
-- On Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote
--   reduce production comp_operator -> Is

State 101:
## Known stack suffix:
## Is Not
## LR(1) items:
comp_operator -> Is Not . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production comp_operator -> Is Not

State 102:
## Known stack suffix:
## In
## LR(1) items:
comp_operator -> In . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production comp_operator -> In

State 103:
## Known stack suffix:
## GreaterthanEq
## LR(1) items:
comp_operator -> GreaterthanEq . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production comp_operator -> GreaterthanEq

State 104:
## Known stack suffix:
## Greaterthan
## LR(1) items:
comp_operator -> Greaterthan . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production comp_operator -> Greaterthan

State 105:
## Known stack suffix:
## EqualEqual
## LR(1) items:
comp_operator -> EqualEqual . [ Tilde String Plus Longinteger Leftparen Leftbracket Leftbrace Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production comp_operator -> EqualEqual

State 106:
## Known stack suffix:
## comparison comp_operator
## LR(1) items:
comparison -> comparison comp_operator . or_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Backquote And ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_expr shift to state 107
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 107:
## Known stack suffix:
## comparison comp_operator or_expr
## LR(1) items:
comparison -> comparison comp_operator or_expr . [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Backquote And ]
or_expr -> or_expr . Bar xor_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Bar Backquote And ]
## Transitions:
-- On Bar shift to state 74
## Reductions:
-- On Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Backquote And
--   reduce production comparison -> comparison comp_operator or_expr

State 108:
## Known stack suffix:
## or_test Or and_test
## LR(1) items:
and_test -> and_test . And not_test [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote And ]
or_test -> or_test Or and_test . [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote ]
## Transitions:
-- On And shift to state 109
## Reductions:
-- On Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote
--   reduce production or_test -> or_test Or and_test

State 109:
## Known stack suffix:
## and_test And
## LR(1) items:
and_test -> and_test And . not_test [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote And ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_expr shift to state 73
-- On not_test shift to state 110
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 110:
## Known stack suffix:
## and_test And not_test
## LR(1) items:
and_test -> and_test And not_test . [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote And ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production and_test -> and_test And not_test

State 111:
## Known stack suffix:
## lambda_form
## LR(1) items:
expression -> lambda_form . [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression -> lambda_form

State 112:
## Known stack suffix:
## Identifier Equal expression
## LR(1) items:
argument -> Identifier Equal expression . [ Rightparen Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argument -> Identifier Equal expression

State 113:
## Known stack suffix:
## and_test
## LR(1) items:
and_test -> and_test . And not_test [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote And ]
or_test -> and_test . [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote ]
## Transitions:
-- On And shift to state 109
## Reductions:
-- On Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote
--   reduce production or_test -> and_test

State 114:
## Known stack suffix:
## expression
## LR(1) items:
argument -> expression . [ Rightparen Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argument -> expression

State 115:
## Known stack suffix:
## arg_comma_star argument
## LR(1) items:
arg_comma_star -> arg_comma_star argument . Comma [ Tilde String StarStar Star Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
arg_list -> arg_comma_star argument . optional_comma [ Rightparen ]
## Transitions:
-- On Comma shift to state 116
-- On optional_comma shift to state 117
## Reductions:
-- On Rightparen
--   reduce production optional_comma ->

State 116:
## Known stack suffix:
## arg_comma_star argument Comma
## LR(1) items:
arg_comma_star -> arg_comma_star argument Comma . [ Tilde String StarStar Star Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
optional_comma -> Comma . [ Rightparen ]
## Transitions:
## Reductions:
-- On Tilde String StarStar Star Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote
--   reduce production arg_comma_star -> arg_comma_star argument Comma
-- On Rightparen
--   reduce production optional_comma -> Comma

State 117:
## Known stack suffix:
## arg_comma_star argument optional_comma
## LR(1) items:
arg_list -> arg_comma_star argument optional_comma . [ Rightparen ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arg_list -> arg_comma_star argument optional_comma

State 118:
## Known stack suffix:
## primary Leftbracket
## LR(1) items:
slicing -> primary Leftbracket . slice_list Rightbracket [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Ellipsis shift to state 119
-- On Dash shift to state 34
-- On Colon shift to state 120
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On slice_list_without_comma shift to state 122
-- On slice_list shift to state 131
-- On slice_item shift to state 133
-- On short_slice shift to state 125
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 128
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 119:
## Known stack suffix:
## Ellipsis
## LR(1) items:
slice_item -> Ellipsis . [ Rightbracket Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production slice_item -> Ellipsis

State 120:
## Known stack suffix:
## Colon
## LR(1) items:
short_slice -> Colon . [ Rightbracket Comma Colon ]
short_slice -> Colon . expression [ Rightbracket Comma Colon ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 121
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:
-- On Rightbracket Comma Colon
--   reduce production short_slice -> Colon

State 121:
## Known stack suffix:
## Colon expression
## LR(1) items:
short_slice -> Colon expression . [ Rightbracket Comma Colon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production short_slice -> Colon expression

State 122:
## Known stack suffix:
## slice_list_without_comma
## LR(1) items:
slice_list -> slice_list_without_comma . [ Rightbracket ]
slice_list -> slice_list_without_comma . Comma [ Rightbracket ]
slice_list_without_comma -> slice_list_without_comma . Comma slice_item [ Rightbracket Comma ]
## Transitions:
-- On Comma shift to state 123
## Reductions:
-- On Rightbracket
--   reduce production slice_list -> slice_list_without_comma

State 123:
## Known stack suffix:
## slice_list_without_comma Comma
## LR(1) items:
slice_list -> slice_list_without_comma Comma . [ Rightbracket ]
slice_list_without_comma -> slice_list_without_comma Comma . slice_item [ Rightbracket Comma ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Ellipsis shift to state 119
-- On Dash shift to state 34
-- On Colon shift to state 120
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On slice_item shift to state 124
-- On short_slice shift to state 125
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 128
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:
-- On Rightbracket
--   reduce production slice_list -> slice_list_without_comma Comma

State 124:
## Known stack suffix:
## slice_list_without_comma Comma slice_item
## LR(1) items:
slice_list_without_comma -> slice_list_without_comma Comma slice_item . [ Rightbracket Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production slice_list_without_comma -> slice_list_without_comma Comma slice_item

State 125:
## Known stack suffix:
## short_slice
## LR(1) items:
slice_item -> short_slice . [ Rightbracket Comma ]
slice_item -> short_slice . Colon [ Rightbracket Comma ]
slice_item -> short_slice . Colon expression [ Rightbracket Comma ]
## Transitions:
-- On Colon shift to state 126
## Reductions:
-- On Rightbracket Comma
--   reduce production slice_item -> short_slice

State 126:
## Known stack suffix:
## short_slice Colon
## LR(1) items:
slice_item -> short_slice Colon . [ Rightbracket Comma ]
slice_item -> short_slice Colon . expression [ Rightbracket Comma ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 127
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:
-- On Rightbracket Comma
--   reduce production slice_item -> short_slice Colon

State 127:
## Known stack suffix:
## short_slice Colon expression
## LR(1) items:
slice_item -> short_slice Colon expression . [ Rightbracket Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production slice_item -> short_slice Colon expression

State 128:
## Known stack suffix:
## expression
## LR(1) items:
short_slice -> expression . Colon [ Rightbracket Comma Colon ]
short_slice -> expression . Colon expression [ Rightbracket Comma Colon ]
slice_item -> expression . [ Rightbracket Comma ]
## Transitions:
-- On Colon shift to state 129
## Reductions:
-- On Rightbracket Comma
--   reduce production slice_item -> expression

State 129:
## Known stack suffix:
## expression Colon
## LR(1) items:
short_slice -> expression Colon . [ Rightbracket Comma Colon ]
short_slice -> expression Colon . expression [ Rightbracket Comma Colon ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 130
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:
-- On Rightbracket Comma Colon
--   reduce production short_slice -> expression Colon

State 130:
## Known stack suffix:
## expression Colon expression
## LR(1) items:
short_slice -> expression Colon expression . [ Rightbracket Comma Colon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production short_slice -> expression Colon expression

State 131:
## Known stack suffix:
## primary Leftbracket slice_list
## LR(1) items:
slicing -> primary Leftbracket slice_list . Rightbracket [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
-- On Rightbracket shift to state 132
## Reductions:

State 132:
## Known stack suffix:
## primary Leftbracket slice_list Rightbracket
## LR(1) items:
slicing -> primary Leftbracket slice_list Rightbracket . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production slicing -> primary Leftbracket slice_list Rightbracket

State 133:
## Known stack suffix:
## slice_item
## LR(1) items:
slice_list_without_comma -> slice_item . [ Rightbracket Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production slice_list_without_comma -> slice_item

State 134:
## Known stack suffix:
## shift_expr Rightshift a_expr
## LR(1) items:
a_expr -> a_expr . Plus m_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
a_expr -> a_expr . Dash m_expr [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
shift_expr -> shift_expr Rightshift a_expr . [ Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
-- On Plus shift to state 88
-- On Dash shift to state 90
## Reductions:
-- On Semicolon Rightshift Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand
--   reduce production shift_expr -> shift_expr Rightshift a_expr

State 135:
## Known stack suffix:
## xor_expr Caret and_expr
## LR(1) items:
and_expr -> and_expr . Ampersand shift_expr [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And Ampersand ]
xor_expr -> xor_expr Caret and_expr . [ Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And ]
## Transitions:
-- On Ampersand shift to state 84
## Reductions:
-- On Semicolon Rightparen Rightbracket Rightbrace Or NotEqual Not Newline LessthanEq Lessthan Is In GreaterthanEq Greaterthan EqualEqual Equal Comma Colon Caret Bar Backquote And
--   reduce production xor_expr -> xor_expr Caret and_expr

State 136:
## Known stack suffix:
## expression
## LR(1) items:
expr_list_without_comma -> expression . [ Semicolon Rightparen Rightbracket Newline Equal Comma Colon Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr_list_without_comma -> expression

State 137:
## Known stack suffix:
## Backquote expr_list_without_comma
## LR(1) items:
expr_list_without_comma -> expr_list_without_comma . Comma expression [ Comma Backquote ]
string_conversion -> Backquote expr_list_without_comma . Backquote [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
-- On Comma shift to state 138
-- On Backquote shift to state 140
## Reductions:

State 138:
## Known stack suffix:
## expr_list_without_comma Comma
## LR(1) items:
expr_list_without_comma -> expr_list_without_comma Comma . expression [ Comma Backquote ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 139
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 139:
## Known stack suffix:
## expr_list_without_comma Comma expression
## LR(1) items:
expr_list_without_comma -> expr_list_without_comma Comma expression . [ Semicolon Rightparen Rightbracket Newline Equal Comma Colon Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr_list_without_comma -> expr_list_without_comma Comma expression

State 140:
## Known stack suffix:
## Backquote expr_list_without_comma Backquote
## LR(1) items:
string_conversion -> Backquote expr_list_without_comma Backquote . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production string_conversion -> Backquote expr_list_without_comma Backquote

State 141:
## Known stack suffix:
## Dash u_expr
## LR(1) items:
u_expr -> Dash u_expr . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production u_expr -> Dash u_expr

State 142:
## Known stack suffix:
## Lambda Colon expression
## LR(1) items:
lambda_form -> Lambda Colon expression . [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lambda_form -> Lambda Colon expression

State 143:
## Known stack suffix:
## Lambda parameter_list
## LR(1) items:
lambda_form -> Lambda parameter_list . Colon expression [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
## Transitions:
-- On Colon shift to state 144
## Reductions:

State 144:
## Known stack suffix:
## Lambda parameter_list Colon
## LR(1) items:
lambda_form -> Lambda parameter_list Colon . expression [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 145
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 145:
## Known stack suffix:
## Lambda parameter_list Colon expression
## LR(1) items:
lambda_form -> Lambda parameter_list Colon expression . [ Semicolon Rightparen Rightbracket Rightbrace Newline Equal Comma Colon Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lambda_form -> Lambda parameter_list Colon expression

State 146:
## Known stack suffix:
## parameter
## LR(1) items:
defparam -> parameter . [ Rightparen Comma Colon ]
defparam -> parameter . Equal expression [ Rightparen Comma Colon ]
## Transitions:
-- On Equal shift to state 147
## Reductions:
-- On Rightparen Comma Colon
--   reduce production defparam -> parameter

State 147:
## Known stack suffix:
## parameter Equal
## LR(1) items:
defparam -> parameter Equal . expression [ Rightparen Comma Colon ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 148
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 148:
## Known stack suffix:
## parameter Equal expression
## LR(1) items:
defparam -> parameter Equal expression . [ Rightparen Comma Colon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production defparam -> parameter Equal expression

State 149:
## Known stack suffix:
## defparams
## LR(1) items:
defparams -> defparams . Comma defparam [ Rightparen Comma Colon ]
parameter_list -> defparams . optional_comma [ Rightparen Colon ]
parameter_list -> defparams . Comma Star Identifier [ Rightparen Colon ]
parameter_list -> defparams . Comma StarStar Identifier [ Rightparen Colon ]
parameter_list -> defparams . Comma Star Identifier Comma StarStar Identifier [ Rightparen Colon ]
## Transitions:
-- On Comma shift to state 150
-- On optional_comma shift to state 159
## Reductions:
-- On Rightparen Colon
--   reduce production optional_comma ->

State 150:
## Known stack suffix:
## defparams Comma
## LR(1) items:
defparams -> defparams Comma . defparam [ Rightparen Comma Colon ]
optional_comma -> Comma . [ Rightparen Colon ]
parameter_list -> defparams Comma . Star Identifier [ Rightparen Colon ]
parameter_list -> defparams Comma . StarStar Identifier [ Rightparen Colon ]
parameter_list -> defparams Comma . Star Identifier Comma StarStar Identifier [ Rightparen Colon ]
## Transitions:
-- On StarStar shift to state 151
-- On Star shift to state 153
-- On Leftparen shift to state 21
-- On Identifier shift to state 22
-- On parameter shift to state 146
-- On defparam shift to state 158
## Reductions:
-- On Rightparen Colon
--   reduce production optional_comma -> Comma

State 151:
## Known stack suffix:
## defparams Comma StarStar
## LR(1) items:
parameter_list -> defparams Comma StarStar . Identifier [ Rightparen Colon ]
## Transitions:
-- On Identifier shift to state 152
## Reductions:

State 152:
## Known stack suffix:
## defparams Comma StarStar Identifier
## LR(1) items:
parameter_list -> defparams Comma StarStar Identifier . [ Rightparen Colon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_list -> defparams Comma StarStar Identifier

State 153:
## Known stack suffix:
## defparams Comma Star
## LR(1) items:
parameter_list -> defparams Comma Star . Identifier [ Rightparen Colon ]
parameter_list -> defparams Comma Star . Identifier Comma StarStar Identifier [ Rightparen Colon ]
## Transitions:
-- On Identifier shift to state 154
## Reductions:

State 154:
## Known stack suffix:
## defparams Comma Star Identifier
## LR(1) items:
parameter_list -> defparams Comma Star Identifier . [ Rightparen Colon ]
parameter_list -> defparams Comma Star Identifier . Comma StarStar Identifier [ Rightparen Colon ]
## Transitions:
-- On Comma shift to state 155
## Reductions:
-- On Rightparen Colon
--   reduce production parameter_list -> defparams Comma Star Identifier

State 155:
## Known stack suffix:
## defparams Comma Star Identifier Comma
## LR(1) items:
parameter_list -> defparams Comma Star Identifier Comma . StarStar Identifier [ Rightparen Colon ]
## Transitions:
-- On StarStar shift to state 156
## Reductions:

State 156:
## Known stack suffix:
## defparams Comma Star Identifier Comma StarStar
## LR(1) items:
parameter_list -> defparams Comma Star Identifier Comma StarStar . Identifier [ Rightparen Colon ]
## Transitions:
-- On Identifier shift to state 157
## Reductions:

State 157:
## Known stack suffix:
## defparams Comma Star Identifier Comma StarStar Identifier
## LR(1) items:
parameter_list -> defparams Comma Star Identifier Comma StarStar Identifier . [ Rightparen Colon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_list -> defparams Comma Star Identifier Comma StarStar Identifier

State 158:
## Known stack suffix:
## defparams Comma defparam
## LR(1) items:
defparams -> defparams Comma defparam . [ Rightparen Comma Colon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production defparams -> defparams Comma defparam

State 159:
## Known stack suffix:
## defparams optional_comma
## LR(1) items:
parameter_list -> defparams optional_comma . [ Rightparen Colon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_list -> defparams optional_comma

State 160:
## Known stack suffix:
## defparam
## LR(1) items:
defparams -> defparam . [ Rightparen Comma Colon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production defparams -> defparam

State 161:
## Known stack suffix:
## key_datum_list_without_comma
## LR(1) items:
key_datum_list -> key_datum_list_without_comma . [ Rightbrace ]
key_datum_list -> key_datum_list_without_comma . Comma [ Rightbrace ]
key_datum_list_without_comma -> key_datum_list_without_comma . Comma key_datum [ Rightbrace Comma ]
## Transitions:
-- On Comma shift to state 162
## Reductions:
-- On Rightbrace
--   reduce production key_datum_list -> key_datum_list_without_comma

State 162:
## Known stack suffix:
## key_datum_list_without_comma Comma
## LR(1) items:
key_datum_list -> key_datum_list_without_comma Comma . [ Rightbrace ]
key_datum_list_without_comma -> key_datum_list_without_comma Comma . key_datum [ Rightbrace Comma ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On key_datum shift to state 163
-- On expression shift to state 164
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:
-- On Rightbrace
--   reduce production key_datum_list -> key_datum_list_without_comma Comma

State 163:
## Known stack suffix:
## key_datum_list_without_comma Comma key_datum
## LR(1) items:
key_datum_list_without_comma -> key_datum_list_without_comma Comma key_datum . [ Rightbrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production key_datum_list_without_comma -> key_datum_list_without_comma Comma key_datum

State 164:
## Known stack suffix:
## expression
## LR(1) items:
key_datum -> expression . Colon expression [ Rightbrace Comma ]
## Transitions:
-- On Colon shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## expression Colon
## LR(1) items:
key_datum -> expression Colon . expression [ Rightbrace Comma ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 166
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 166:
## Known stack suffix:
## expression Colon expression
## LR(1) items:
key_datum -> expression Colon expression . [ Rightbrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production key_datum -> expression Colon expression

State 167:
## Known stack suffix:
## Leftbrace key_datum_list
## LR(1) items:
dict_display -> Leftbrace key_datum_list . Rightbrace [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
-- On Rightbrace shift to state 168
## Reductions:

State 168:
## Known stack suffix:
## Leftbrace key_datum_list Rightbrace
## LR(1) items:
dict_display -> Leftbrace key_datum_list Rightbrace . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dict_display -> Leftbrace key_datum_list Rightbrace

State 169:
## Known stack suffix:
## key_datum
## LR(1) items:
key_datum_list_without_comma -> key_datum . [ Rightbrace Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production key_datum_list_without_comma -> key_datum

State 170:
## Known stack suffix:
## Leftbracket listmaker
## LR(1) items:
list_display -> Leftbracket listmaker . Rightbracket [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
-- On Rightbracket shift to state 171
## Reductions:

State 171:
## Known stack suffix:
## Leftbracket listmaker Rightbracket
## LR(1) items:
list_display -> Leftbracket listmaker Rightbracket . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_display -> Leftbracket listmaker Rightbracket

State 172:
## Known stack suffix:
## expr_list_without_comma
## LR(1) items:
expr_list -> expr_list_without_comma . [ Semicolon Rightparen Rightbracket Newline Equal Colon ]
expr_list -> expr_list_without_comma . Comma [ Semicolon Rightparen Rightbracket Newline Equal Colon ]
expr_list_without_comma -> expr_list_without_comma . Comma expression [ Semicolon Rightparen Rightbracket Newline Equal Comma Colon ]
## Transitions:
-- On Comma shift to state 173
## Reductions:
-- On Semicolon Rightparen Rightbracket Newline Equal Colon
--   reduce production expr_list -> expr_list_without_comma

State 173:
## Known stack suffix:
## expr_list_without_comma Comma
## LR(1) items:
expr_list -> expr_list_without_comma Comma . [ Semicolon Rightparen Rightbracket Newline Equal Colon ]
expr_list_without_comma -> expr_list_without_comma Comma . expression [ Semicolon Rightparen Rightbracket Newline Equal Comma Colon ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 139
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:
-- On Semicolon Rightparen Rightbracket Newline Equal Colon
--   reduce production expr_list -> expr_list_without_comma Comma

State 174:
## Known stack suffix:
## expr_list
## LR(1) items:
listmaker -> expr_list . [ Rightbracket ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listmaker -> expr_list

State 175:
## Known stack suffix:
## Not not_test
## LR(1) items:
not_test -> Not not_test . [ Semicolon Rightparen Rightbracket Rightbrace Or Newline Equal Comma Colon Backquote And ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production not_test -> Not not_test

State 176:
## Known stack suffix:
## Leftparen expr_list_without_comma
## LR(1) items:
expr_list_without_comma -> expr_list_without_comma . Comma expression [ Rightparen Comma ]
parenth_form -> Leftparen expr_list_without_comma . Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
parenth_form -> Leftparen expr_list_without_comma . Comma Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
-- On Rightparen shift to state 177
-- On Comma shift to state 178
## Reductions:

State 177:
## Known stack suffix:
## Leftparen expr_list_without_comma Rightparen
## LR(1) items:
parenth_form -> Leftparen expr_list_without_comma Rightparen . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parenth_form -> Leftparen expr_list_without_comma Rightparen

State 178:
## Known stack suffix:
## Leftparen expr_list_without_comma Comma
## LR(1) items:
expr_list_without_comma -> expr_list_without_comma Comma . expression [ Rightparen Comma ]
parenth_form -> Leftparen expr_list_without_comma Comma . Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Rightparen shift to state 179
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 139
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 179:
## Known stack suffix:
## Leftparen expr_list_without_comma Comma Rightparen
## LR(1) items:
parenth_form -> Leftparen expr_list_without_comma Comma Rightparen . [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift Rightparen Rightbracket Rightbrace PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma Colon CaretEqual Caret BarEqual Bar Backquote And AmpersandEqual Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parenth_form -> Leftparen expr_list_without_comma Comma Rightparen

State 180:
## Known stack suffix:
## Plus u_expr
## LR(1) items:
u_expr -> Plus u_expr . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production u_expr -> Plus u_expr

State 181:
## Known stack suffix:
## Tilde u_expr
## LR(1) items:
u_expr -> Tilde u_expr . [ Star Slash Semicolon Rightshift Rightparen Rightbracket Rightbrace Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Colon Caret Bar Backquote And Ampersand ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production u_expr -> Tilde u_expr

State 182:
## Known stack suffix:
## While expression
## LR(1) items:
while_stmt -> While expression . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
while_stmt -> While expression . Colon suite Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Colon shift to state 183
## Reductions:

State 183:
## Known stack suffix:
## While expression Colon
## LR(1) items:
while_stmt -> While expression Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
while_stmt -> While expression Colon . suite Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 359
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 184:
## Known stack suffix:
## Return
## LR(1) items:
return_stmt -> Return . [ Semicolon Newline ]
return_stmt -> Return . expr_list [ Semicolon Newline ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 185
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:
-- On Semicolon Newline
--   reduce production return_stmt -> Return

State 185:
## Known stack suffix:
## Return expr_list
## LR(1) items:
return_stmt -> Return expr_list . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production return_stmt -> Return expr_list

State 186:
## Known stack suffix:
## Raise
## LR(1) items:
raise_stmt -> Raise . [ Semicolon Newline ]
raise_stmt -> Raise . expression [ Semicolon Newline ]
raise_stmt -> Raise . expression Comma expression [ Semicolon Newline ]
raise_stmt -> Raise . expression Comma expression Comma expression [ Semicolon Newline ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 187
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:
-- On Semicolon Newline
--   reduce production raise_stmt -> Raise

State 187:
## Known stack suffix:
## Raise expression
## LR(1) items:
raise_stmt -> Raise expression . [ Semicolon Newline ]
raise_stmt -> Raise expression . Comma expression [ Semicolon Newline ]
raise_stmt -> Raise expression . Comma expression Comma expression [ Semicolon Newline ]
## Transitions:
-- On Comma shift to state 188
## Reductions:
-- On Semicolon Newline
--   reduce production raise_stmt -> Raise expression

State 188:
## Known stack suffix:
## Raise expression Comma
## LR(1) items:
raise_stmt -> Raise expression Comma . expression [ Semicolon Newline ]
raise_stmt -> Raise expression Comma . expression Comma expression [ Semicolon Newline ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 189
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 189:
## Known stack suffix:
## Raise expression Comma expression
## LR(1) items:
raise_stmt -> Raise expression Comma expression . [ Semicolon Newline ]
raise_stmt -> Raise expression Comma expression . Comma expression [ Semicolon Newline ]
## Transitions:
-- On Comma shift to state 190
## Reductions:
-- On Semicolon Newline
--   reduce production raise_stmt -> Raise expression Comma expression

State 190:
## Known stack suffix:
## Raise expression Comma expression Comma
## LR(1) items:
raise_stmt -> Raise expression Comma expression Comma . expression [ Semicolon Newline ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 191
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 191:
## Known stack suffix:
## Raise expression Comma expression Comma expression
## LR(1) items:
raise_stmt -> Raise expression Comma expression Comma expression . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raise_stmt -> Raise expression Comma expression Comma expression

State 192:
## Known stack suffix:
## Print
## LR(1) items:
print_stmt -> Print . [ Semicolon Newline ]
print_stmt -> Print . expr_list [ Semicolon Newline ]
print_stmt -> Print . Rightshift expression [ Semicolon Newline ]
print_stmt -> Print . Rightshift expression Comma expr_list [ Semicolon Newline ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Rightshift shift to state 193
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 197
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:
-- On Semicolon Newline
--   reduce production print_stmt -> Print

State 193:
## Known stack suffix:
## Print Rightshift
## LR(1) items:
print_stmt -> Print Rightshift . expression [ Semicolon Newline ]
print_stmt -> Print Rightshift . expression Comma expr_list [ Semicolon Newline ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 194
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 194:
## Known stack suffix:
## Print Rightshift expression
## LR(1) items:
print_stmt -> Print Rightshift expression . [ Semicolon Newline ]
print_stmt -> Print Rightshift expression . Comma expr_list [ Semicolon Newline ]
## Transitions:
-- On Comma shift to state 195
## Reductions:
-- On Semicolon Newline
--   reduce production print_stmt -> Print Rightshift expression

State 195:
## Known stack suffix:
## Print Rightshift expression Comma
## LR(1) items:
print_stmt -> Print Rightshift expression Comma . expr_list [ Semicolon Newline ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 196
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 196:
## Known stack suffix:
## Print Rightshift expression Comma expr_list
## LR(1) items:
print_stmt -> Print Rightshift expression Comma expr_list . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production print_stmt -> Print Rightshift expression Comma expr_list

State 197:
## Known stack suffix:
## Print expr_list
## LR(1) items:
print_stmt -> Print expr_list . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production print_stmt -> Print expr_list

State 198:
## Known stack suffix:
## Pass
## LR(1) items:
pass_stmt -> Pass . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pass_stmt -> Pass

State 199:
## Known stack suffix:
## Newline
## LR(1) items:
suite -> Newline . Indent statement_plus Dedent [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Finally Except Else Elif Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Indent shift to state 200
## Reductions:

State 200:
## Known stack suffix:
## Newline Indent
## LR(1) items:
suite -> Newline Indent . statement_plus Dedent [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Finally Except Else Elif Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On While shift to state 1
-- On Try shift to state 201
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On If shift to state 301
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On For shift to state 314
-- On Float shift to state 33
-- On Del shift to state 232
-- On Def shift to state 323
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Class shift to state 333
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On while_stmt shift to state 344
-- On u_expr shift to state 38
-- On try_stmt shift to state 345
-- On try_fin_stmt shift to state 346
-- On try_exc_stmt shift to state 347
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 348
-- On statement_plus shift to state 350
-- On statement shift to state 358
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On if_stmt shift to state 353
-- On global_stmt shift to state 270
-- On funcdef shift to state 354
-- On for_stmt shift to state 355
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On compound_stmt shift to state 356
-- On comparison shift to state 94
-- On classdef shift to state 357
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 201:
## Known stack suffix:
## Try
## LR(1) items:
try_exc_stmt -> Try . Colon suite exc_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
try_exc_stmt -> Try . Colon suite exc_list Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
try_fin_stmt -> Try . Colon suite Finally Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Colon shift to state 202
## Reductions:

State 202:
## Known stack suffix:
## Try Colon
## LR(1) items:
try_exc_stmt -> Try Colon . suite exc_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
try_exc_stmt -> Try Colon . suite exc_list Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
try_fin_stmt -> Try Colon . suite Finally Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 244
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 203:
## Known stack suffix:
## Import
## LR(1) items:
import_stmt -> Import . module_list [ Semicolon Newline ]
## Transitions:
-- On Identifier shift to state 204
-- On module_name shift to state 205
-- On module_list shift to state 210
## Reductions:

State 204:
## Known stack suffix:
## Identifier
## LR(1) items:
module_name -> Identifier . [ Semicolon Period Newline Import Identifier Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_name -> Identifier

State 205:
## Known stack suffix:
## module_name
## LR(1) items:
module_list -> module_name . [ Semicolon Newline Comma ]
module_list -> module_name . Identifier Identifier [ Semicolon Newline Comma ]
module_name -> module_name . Period Identifier [ Semicolon Period Newline Identifier Comma ]
## Transitions:
-- On Period shift to state 206
-- On Identifier shift to state 208
## Reductions:
-- On Semicolon Newline Comma
--   reduce production module_list -> module_name

State 206:
## Known stack suffix:
## module_name Period
## LR(1) items:
module_name -> module_name Period . Identifier [ Semicolon Period Newline Import Identifier Comma ]
## Transitions:
-- On Identifier shift to state 207
## Reductions:

State 207:
## Known stack suffix:
## module_name Period Identifier
## LR(1) items:
module_name -> module_name Period Identifier . [ Semicolon Period Newline Import Identifier Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_name -> module_name Period Identifier

State 208:
## Known stack suffix:
## module_name Identifier
## LR(1) items:
module_list -> module_name Identifier . Identifier [ Semicolon Newline Comma ]
## Transitions:
-- On Identifier shift to state 209
## Reductions:

State 209:
## Known stack suffix:
## module_name Identifier Identifier
## LR(1) items:
module_list -> module_name Identifier Identifier . [ Semicolon Newline Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_list -> module_name Identifier Identifier

State 210:
## Known stack suffix:
## Import module_list
## LR(1) items:
import_stmt -> Import module_list . [ Semicolon Newline ]
module_list -> module_list . Comma module_name [ Semicolon Newline Comma ]
module_list -> module_list . Comma module_name Identifier Identifier [ Semicolon Newline Comma ]
## Transitions:
-- On Comma shift to state 211
## Reductions:
-- On Semicolon Newline
--   reduce production import_stmt -> Import module_list

State 211:
## Known stack suffix:
## module_list Comma
## LR(1) items:
module_list -> module_list Comma . module_name [ Semicolon Newline Comma ]
module_list -> module_list Comma . module_name Identifier Identifier [ Semicolon Newline Comma ]
## Transitions:
-- On Identifier shift to state 204
-- On module_name shift to state 212
## Reductions:

State 212:
## Known stack suffix:
## module_list Comma module_name
## LR(1) items:
module_list -> module_list Comma module_name . [ Semicolon Newline Comma ]
module_list -> module_list Comma module_name . Identifier Identifier [ Semicolon Newline Comma ]
module_name -> module_name . Period Identifier [ Semicolon Period Newline Identifier Comma ]
## Transitions:
-- On Period shift to state 206
-- On Identifier shift to state 213
## Reductions:
-- On Semicolon Newline Comma
--   reduce production module_list -> module_list Comma module_name

State 213:
## Known stack suffix:
## module_list Comma module_name Identifier
## LR(1) items:
module_list -> module_list Comma module_name Identifier . Identifier [ Semicolon Newline Comma ]
## Transitions:
-- On Identifier shift to state 214
## Reductions:

State 214:
## Known stack suffix:
## module_list Comma module_name Identifier Identifier
## LR(1) items:
module_list -> module_list Comma module_name Identifier Identifier . [ Semicolon Newline Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production module_list -> module_list Comma module_name Identifier Identifier

State 215:
## Known stack suffix:
## Global
## LR(1) items:
global_stmt -> Global . identifier_list [ Semicolon Newline ]
## Transitions:
-- On Identifier shift to state 216
-- On identifier_list shift to state 217
## Reductions:

State 216:
## Known stack suffix:
## Identifier
## LR(1) items:
identifier_list -> Identifier . [ Semicolon Newline Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production identifier_list -> Identifier

State 217:
## Known stack suffix:
## Global identifier_list
## LR(1) items:
global_stmt -> Global identifier_list . [ Semicolon Newline ]
identifier_list -> identifier_list . Comma Identifier [ Semicolon Newline Comma ]
## Transitions:
-- On Comma shift to state 218
## Reductions:
-- On Semicolon Newline
--   reduce production global_stmt -> Global identifier_list

State 218:
## Known stack suffix:
## identifier_list Comma
## LR(1) items:
identifier_list -> identifier_list Comma . Identifier [ Semicolon Newline Comma ]
## Transitions:
-- On Identifier shift to state 219
## Reductions:

State 219:
## Known stack suffix:
## identifier_list Comma Identifier
## LR(1) items:
identifier_list -> identifier_list Comma Identifier . [ Semicolon Newline Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production identifier_list -> identifier_list Comma Identifier

State 220:
## Known stack suffix:
## From
## LR(1) items:
import_stmt -> From . module_name Import Star [ Semicolon Newline ]
import_stmt -> From . module_name Import import_ident_list [ Semicolon Newline ]
## Transitions:
-- On Identifier shift to state 204
-- On module_name shift to state 221
## Reductions:

State 221:
## Known stack suffix:
## From module_name
## LR(1) items:
import_stmt -> From module_name . Import Star [ Semicolon Newline ]
import_stmt -> From module_name . Import import_ident_list [ Semicolon Newline ]
module_name -> module_name . Period Identifier [ Period Import ]
## Transitions:
-- On Period shift to state 206
-- On Import shift to state 222
## Reductions:

State 222:
## Known stack suffix:
## From module_name Import
## LR(1) items:
import_stmt -> From module_name Import . Star [ Semicolon Newline ]
import_stmt -> From module_name Import . import_ident_list [ Semicolon Newline ]
## Transitions:
-- On Star shift to state 223
-- On Identifier shift to state 224
-- On import_ident_list shift to state 227
## Reductions:

State 223:
## Known stack suffix:
## From module_name Import Star
## LR(1) items:
import_stmt -> From module_name Import Star . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production import_stmt -> From module_name Import Star

State 224:
## Known stack suffix:
## Identifier
## LR(1) items:
import_ident_list -> Identifier . [ Semicolon Newline Comma ]
import_ident_list -> Identifier . Identifier Identifier [ Semicolon Newline Comma ]
## Transitions:
-- On Identifier shift to state 225
## Reductions:
-- On Semicolon Newline Comma
--   reduce production import_ident_list -> Identifier

State 225:
## Known stack suffix:
## Identifier Identifier
## LR(1) items:
import_ident_list -> Identifier Identifier . Identifier [ Semicolon Newline Comma ]
## Transitions:
-- On Identifier shift to state 226
## Reductions:

State 226:
## Known stack suffix:
## Identifier Identifier Identifier
## LR(1) items:
import_ident_list -> Identifier Identifier Identifier . [ Semicolon Newline Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production import_ident_list -> Identifier Identifier Identifier

State 227:
## Known stack suffix:
## From module_name Import import_ident_list
## LR(1) items:
import_ident_list -> import_ident_list . Comma Identifier [ Semicolon Newline Comma ]
import_ident_list -> import_ident_list . Comma Identifier Identifier Identifier [ Semicolon Newline Comma ]
import_stmt -> From module_name Import import_ident_list . [ Semicolon Newline ]
## Transitions:
-- On Comma shift to state 228
## Reductions:
-- On Semicolon Newline
--   reduce production import_stmt -> From module_name Import import_ident_list

State 228:
## Known stack suffix:
## import_ident_list Comma
## LR(1) items:
import_ident_list -> import_ident_list Comma . Identifier [ Semicolon Newline Comma ]
import_ident_list -> import_ident_list Comma . Identifier Identifier Identifier [ Semicolon Newline Comma ]
## Transitions:
-- On Identifier shift to state 229
## Reductions:

State 229:
## Known stack suffix:
## import_ident_list Comma Identifier
## LR(1) items:
import_ident_list -> import_ident_list Comma Identifier . [ Semicolon Newline Comma ]
import_ident_list -> import_ident_list Comma Identifier . Identifier Identifier [ Semicolon Newline Comma ]
## Transitions:
-- On Identifier shift to state 230
## Reductions:
-- On Semicolon Newline Comma
--   reduce production import_ident_list -> import_ident_list Comma Identifier

State 230:
## Known stack suffix:
## import_ident_list Comma Identifier Identifier
## LR(1) items:
import_ident_list -> import_ident_list Comma Identifier Identifier . Identifier [ Semicolon Newline Comma ]
## Transitions:
-- On Identifier shift to state 231
## Reductions:

State 231:
## Known stack suffix:
## import_ident_list Comma Identifier Identifier Identifier
## LR(1) items:
import_ident_list -> import_ident_list Comma Identifier Identifier Identifier . [ Semicolon Newline Comma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production import_ident_list -> import_ident_list Comma Identifier Identifier Identifier

State 232:
## Known stack suffix:
## Del
## LR(1) items:
del_stmt -> Del . target_list [ Semicolon Newline ]
## Transitions:
-- On String shift to state 3
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Backquote shift to state 35
-- On target_list_without_comma shift to state 233
-- On target_list shift to state 236
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 237
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
## Reductions:

State 233:
## Known stack suffix:
## target_list_without_comma
## LR(1) items:
target_list -> target_list_without_comma . [ Semicolon Newline In ]
target_list -> target_list_without_comma . Comma [ Semicolon Newline In ]
target_list_without_comma -> target_list_without_comma . Comma primary [ Semicolon Newline In Comma ]
## Transitions:
-- On Comma shift to state 234
## Reductions:
-- On Semicolon Newline In
--   reduce production target_list -> target_list_without_comma

State 234:
## Known stack suffix:
## target_list_without_comma Comma
## LR(1) items:
target_list -> target_list_without_comma Comma . [ Semicolon Newline In ]
target_list_without_comma -> target_list_without_comma Comma . primary [ Semicolon Newline In Comma ]
## Transitions:
-- On String shift to state 3
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Backquote shift to state 35
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 235
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
## Reductions:
-- On Semicolon Newline In
--   reduce production target_list -> target_list_without_comma Comma

State 235:
## Known stack suffix:
## target_list_without_comma Comma primary
## LR(1) items:
attributeref -> primary . Period Identifier [ Semicolon Period Newline Leftparen Leftbracket In Comma ]
call -> primary . Leftparen Rightparen [ Semicolon Period Newline Leftparen Leftbracket In Comma ]
call -> primary . Leftparen arg_list Rightparen [ Semicolon Period Newline Leftparen Leftbracket In Comma ]
slicing -> primary . Leftbracket slice_list Rightbracket [ Semicolon Period Newline Leftparen Leftbracket In Comma ]
target_list_without_comma -> target_list_without_comma Comma primary . [ Semicolon Newline In Comma ]
## Transitions:
-- On Period shift to state 55
-- On Leftparen shift to state 57
-- On Leftbracket shift to state 118
## Reductions:
-- On Semicolon Newline In Comma
--   reduce production target_list_without_comma -> target_list_without_comma Comma primary

State 236:
## Known stack suffix:
## Del target_list
## LR(1) items:
del_stmt -> Del target_list . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production del_stmt -> Del target_list

State 237:
## Known stack suffix:
## primary
## LR(1) items:
attributeref -> primary . Period Identifier [ Semicolon Period Newline Leftparen Leftbracket In Comma ]
call -> primary . Leftparen Rightparen [ Semicolon Period Newline Leftparen Leftbracket In Comma ]
call -> primary . Leftparen arg_list Rightparen [ Semicolon Period Newline Leftparen Leftbracket In Comma ]
slicing -> primary . Leftbracket slice_list Rightbracket [ Semicolon Period Newline Leftparen Leftbracket In Comma ]
target_list_without_comma -> primary . [ Semicolon Newline In Comma ]
## Transitions:
-- On Period shift to state 55
-- On Leftparen shift to state 57
-- On Leftbracket shift to state 118
## Reductions:
-- On Semicolon Newline In Comma
--   reduce production target_list_without_comma -> primary

State 238:
## Known stack suffix:
## Continue
## LR(1) items:
continue_stmt -> Continue . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production continue_stmt -> Continue

State 239:
## Known stack suffix:
## Break
## LR(1) items:
break_stmt -> Break . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production break_stmt -> Break

State 240:
## Known stack suffix:
## Assert
## LR(1) items:
assert_stmt -> Assert . expression [ Semicolon Newline ]
assert_stmt -> Assert . expression Comma expression [ Semicolon Newline ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 241
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 241:
## Known stack suffix:
## Assert expression
## LR(1) items:
assert_stmt -> Assert expression . [ Semicolon Newline ]
assert_stmt -> Assert expression . Comma expression [ Semicolon Newline ]
## Transitions:
-- On Comma shift to state 242
## Reductions:
-- On Semicolon Newline
--   reduce production assert_stmt -> Assert expression

State 242:
## Known stack suffix:
## Assert expression Comma
## LR(1) items:
assert_stmt -> Assert expression Comma . expression [ Semicolon Newline ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 243
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 243:
## Known stack suffix:
## Assert expression Comma expression
## LR(1) items:
assert_stmt -> Assert expression Comma expression . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assert_stmt -> Assert expression Comma expression

State 244:
## Known stack suffix:
## Try Colon suite
## LR(1) items:
try_exc_stmt -> Try Colon suite . exc_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
try_exc_stmt -> Try Colon suite . exc_list Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
try_fin_stmt -> Try Colon suite . Finally Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Finally shift to state 245
-- On Except shift to state 285
-- On exc_list shift to state 295
-- On exc_item shift to state 300
## Reductions:

State 245:
## Known stack suffix:
## Try Colon suite Finally
## LR(1) items:
try_fin_stmt -> Try Colon suite Finally . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Colon shift to state 246
## Reductions:

State 246:
## Known stack suffix:
## Try Colon suite Finally Colon
## LR(1) items:
try_fin_stmt -> Try Colon suite Finally Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 247
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 247:
## Known stack suffix:
## Try Colon suite Finally Colon suite
## LR(1) items:
try_fin_stmt -> Try Colon suite Finally Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production try_fin_stmt -> Try Colon suite Finally Colon suite

State 248:
## Known stack suffix:
## stmt_list_without_semicolon
## LR(1) items:
stmt_list -> stmt_list_without_semicolon . [ Newline ]
stmt_list -> stmt_list_without_semicolon . Semicolon [ Newline ]
stmt_list_without_semicolon -> stmt_list_without_semicolon . Semicolon simple_stmt [ Semicolon Newline ]
## Transitions:
-- On Semicolon shift to state 249
## Reductions:
-- On Newline
--   reduce production stmt_list -> stmt_list_without_semicolon

State 249:
## Known stack suffix:
## stmt_list_without_semicolon Semicolon
## LR(1) items:
stmt_list -> stmt_list_without_semicolon Semicolon . [ Newline ]
stmt_list_without_semicolon -> stmt_list_without_semicolon Semicolon . simple_stmt [ Semicolon Newline ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On simple_stmt shift to state 250
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:
-- On Newline
--   reduce production stmt_list -> stmt_list_without_semicolon Semicolon

State 250:
## Known stack suffix:
## stmt_list_without_semicolon Semicolon simple_stmt
## LR(1) items:
stmt_list_without_semicolon -> stmt_list_without_semicolon Semicolon simple_stmt . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stmt_list_without_semicolon -> stmt_list_without_semicolon Semicolon simple_stmt

State 251:
## Known stack suffix:
## return_stmt
## LR(1) items:
simple_stmt -> return_stmt . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_stmt -> return_stmt

State 252:
## Known stack suffix:
## raise_stmt
## LR(1) items:
simple_stmt -> raise_stmt . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_stmt -> raise_stmt

State 253:
## Known stack suffix:
## print_stmt
## LR(1) items:
simple_stmt -> print_stmt . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_stmt -> print_stmt

State 254:
## Known stack suffix:
## primary
## LR(1) items:
attributeref -> primary . Period Identifier [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma CaretEqual Caret BarEqual Bar And AmpersandEqual Ampersand ]
augmented_assignment_stmt -> primary . augop expr_list [ Semicolon Newline ]
call -> primary . Leftparen Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma CaretEqual Caret BarEqual Bar And AmpersandEqual Ampersand ]
call -> primary . Leftparen arg_list Rightparen [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma CaretEqual Caret BarEqual Bar And AmpersandEqual Ampersand ]
power -> primary . [ Star Slash Semicolon Rightshift Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Caret Bar And Ampersand ]
power -> primary . StarStar u_expr [ Star Slash Semicolon Rightshift Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Caret Bar And Ampersand ]
slicing -> primary . Leftbracket slice_list Rightbracket [ StarStarEqual StarStar StarEqual Star SlashEqual Slash Semicolon RightshiftEqual Rightshift PlusEqual Plus Period PercentEqual Percent Or NotEqual Not Newline LessthanEq Lessthan LeftshiftEqual Leftshift Leftparen Leftbracket Is In GreaterthanEq Greaterthan EqualEqual Equal DashEqual Dash Comma CaretEqual Caret BarEqual Bar And AmpersandEqual Ampersand ]
## Transitions:
-- On StarStarEqual shift to state 255
-- On StarStar shift to state 44
-- On StarEqual shift to state 256
-- On SlashEqual shift to state 257
-- On RightshiftEqual shift to state 258
-- On PlusEqual shift to state 259
-- On Period shift to state 55
-- On PercentEqual shift to state 260
-- On LeftshiftEqual shift to state 261
-- On Leftparen shift to state 57
-- On Leftbracket shift to state 118
-- On DashEqual shift to state 262
-- On CaretEqual shift to state 263
-- On BarEqual shift to state 264
-- On AmpersandEqual shift to state 265
-- On augop shift to state 266
## Reductions:
-- On Star Slash Semicolon Rightshift Plus Percent Or NotEqual Not Newline LessthanEq Lessthan Leftshift Is In GreaterthanEq Greaterthan EqualEqual Equal Dash Comma Caret Bar And Ampersand
--   reduce production power -> primary

State 255:
## Known stack suffix:
## StarStarEqual
## LR(1) items:
augop -> StarStarEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production augop -> StarStarEqual

State 256:
## Known stack suffix:
## StarEqual
## LR(1) items:
augop -> StarEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production augop -> StarEqual

State 257:
## Known stack suffix:
## SlashEqual
## LR(1) items:
augop -> SlashEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production augop -> SlashEqual

State 258:
## Known stack suffix:
## RightshiftEqual
## LR(1) items:
augop -> RightshiftEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production augop -> RightshiftEqual

State 259:
## Known stack suffix:
## PlusEqual
## LR(1) items:
augop -> PlusEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production augop -> PlusEqual

State 260:
## Known stack suffix:
## PercentEqual
## LR(1) items:
augop -> PercentEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production augop -> PercentEqual

State 261:
## Known stack suffix:
## LeftshiftEqual
## LR(1) items:
augop -> LeftshiftEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production augop -> LeftshiftEqual

State 262:
## Known stack suffix:
## DashEqual
## LR(1) items:
augop -> DashEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production augop -> DashEqual

State 263:
## Known stack suffix:
## CaretEqual
## LR(1) items:
augop -> CaretEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production augop -> CaretEqual

State 264:
## Known stack suffix:
## BarEqual
## LR(1) items:
augop -> BarEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production augop -> BarEqual

State 265:
## Known stack suffix:
## AmpersandEqual
## LR(1) items:
augop -> AmpersandEqual . [ Tilde String Plus Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Imaginary Identifier Float Dash Backquote ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production augop -> AmpersandEqual

State 266:
## Known stack suffix:
## primary augop
## LR(1) items:
augmented_assignment_stmt -> primary augop . expr_list [ Semicolon Newline ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 267
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 267:
## Known stack suffix:
## primary augop expr_list
## LR(1) items:
augmented_assignment_stmt -> primary augop expr_list . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production augmented_assignment_stmt -> primary augop expr_list

State 268:
## Known stack suffix:
## pass_stmt
## LR(1) items:
simple_stmt -> pass_stmt . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_stmt -> pass_stmt

State 269:
## Known stack suffix:
## import_stmt
## LR(1) items:
simple_stmt -> import_stmt . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_stmt -> import_stmt

State 270:
## Known stack suffix:
## global_stmt
## LR(1) items:
simple_stmt -> global_stmt . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_stmt -> global_stmt

State 271:
## Known stack suffix:
## expression_stmt
## LR(1) items:
simple_stmt -> expression_stmt . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_stmt -> expression_stmt

State 272:
## Known stack suffix:
## expr_list
## LR(1) items:
assignment_stmt -> expr_list . Equal expr_list [ Semicolon Newline ]
assignment_stmt -> expr_list . Equal assignment_stmt [ Semicolon Newline ]
expression_stmt -> expr_list . [ Semicolon Newline ]
## Transitions:
-- On Equal shift to state 273
## Reductions:
-- On Semicolon Newline
--   reduce production expression_stmt -> expr_list

State 273:
## Known stack suffix:
## expr_list Equal
## LR(1) items:
assignment_stmt -> expr_list Equal . expr_list [ Semicolon Newline ]
assignment_stmt -> expr_list Equal . assignment_stmt [ Semicolon Newline ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 274
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 275
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 274:
## Known stack suffix:
## expr_list Equal expr_list
## LR(1) items:
assignment_stmt -> expr_list . Equal expr_list [ Semicolon Newline ]
assignment_stmt -> expr_list Equal expr_list . [ Semicolon Newline ]
assignment_stmt -> expr_list . Equal assignment_stmt [ Semicolon Newline ]
## Transitions:
-- On Equal shift to state 273
## Reductions:
-- On Semicolon Newline
--   reduce production assignment_stmt -> expr_list Equal expr_list

State 275:
## Known stack suffix:
## expr_list Equal assignment_stmt
## LR(1) items:
assignment_stmt -> expr_list Equal assignment_stmt . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment_stmt -> expr_list Equal assignment_stmt

State 276:
## Known stack suffix:
## del_stmt
## LR(1) items:
simple_stmt -> del_stmt . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_stmt -> del_stmt

State 277:
## Known stack suffix:
## continue_stmt
## LR(1) items:
simple_stmt -> continue_stmt . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_stmt -> continue_stmt

State 278:
## Known stack suffix:
## break_stmt
## LR(1) items:
simple_stmt -> break_stmt . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_stmt -> break_stmt

State 279:
## Known stack suffix:
## augmented_assignment_stmt
## LR(1) items:
simple_stmt -> augmented_assignment_stmt . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_stmt -> augmented_assignment_stmt

State 280:
## Known stack suffix:
## assignment_stmt
## LR(1) items:
simple_stmt -> assignment_stmt . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_stmt -> assignment_stmt

State 281:
## Known stack suffix:
## assert_stmt
## LR(1) items:
simple_stmt -> assert_stmt . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_stmt -> assert_stmt

State 282:
## Known stack suffix:
## stmt_list
## LR(1) items:
suite -> stmt_list . Newline [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Finally Except Else Elif Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Newline shift to state 283
## Reductions:

State 283:
## Known stack suffix:
## stmt_list Newline
## LR(1) items:
suite -> stmt_list Newline . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Finally Except Else Elif Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production suite -> stmt_list Newline

State 284:
## Known stack suffix:
## simple_stmt
## LR(1) items:
stmt_list_without_semicolon -> simple_stmt . [ Semicolon Newline ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stmt_list_without_semicolon -> simple_stmt

State 285:
## Known stack suffix:
## Except
## LR(1) items:
exc_item -> Except . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
exc_item -> Except . expression Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
exc_item -> Except . expression Comma primary Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Colon shift to state 286
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 288
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 286:
## Known stack suffix:
## Except Colon
## LR(1) items:
exc_item -> Except Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 287
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 287:
## Known stack suffix:
## Except Colon suite
## LR(1) items:
exc_item -> Except Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exc_item -> Except Colon suite

State 288:
## Known stack suffix:
## Except expression
## LR(1) items:
exc_item -> Except expression . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
exc_item -> Except expression . Comma primary Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Comma shift to state 289
-- On Colon shift to state 293
## Reductions:

State 289:
## Known stack suffix:
## Except expression Comma
## LR(1) items:
exc_item -> Except expression Comma . primary Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On String shift to state 3
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Backquote shift to state 35
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 290
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
## Reductions:

State 290:
## Known stack suffix:
## Except expression Comma primary
## LR(1) items:
attributeref -> primary . Period Identifier [ Period Leftparen Leftbracket Colon ]
call -> primary . Leftparen Rightparen [ Period Leftparen Leftbracket Colon ]
call -> primary . Leftparen arg_list Rightparen [ Period Leftparen Leftbracket Colon ]
exc_item -> Except expression Comma primary . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
slicing -> primary . Leftbracket slice_list Rightbracket [ Period Leftparen Leftbracket Colon ]
## Transitions:
-- On Period shift to state 55
-- On Leftparen shift to state 57
-- On Leftbracket shift to state 118
-- On Colon shift to state 291
## Reductions:

State 291:
## Known stack suffix:
## Except expression Comma primary Colon
## LR(1) items:
exc_item -> Except expression Comma primary Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 292
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 292:
## Known stack suffix:
## Except expression Comma primary Colon suite
## LR(1) items:
exc_item -> Except expression Comma primary Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exc_item -> Except expression Comma primary Colon suite

State 293:
## Known stack suffix:
## Except expression Colon
## LR(1) items:
exc_item -> Except expression Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 294
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 294:
## Known stack suffix:
## Except expression Colon suite
## LR(1) items:
exc_item -> Except expression Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exc_item -> Except expression Colon suite

State 295:
## Known stack suffix:
## Try Colon suite exc_list
## LR(1) items:
exc_list -> exc_list . exc_item [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
try_exc_stmt -> Try Colon suite exc_list . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
try_exc_stmt -> Try Colon suite exc_list . Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Except shift to state 285
-- On Else shift to state 296
-- On exc_item shift to state 299
## Reductions:
-- On While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert
--   reduce production try_exc_stmt -> Try Colon suite exc_list

State 296:
## Known stack suffix:
## Try Colon suite exc_list Else
## LR(1) items:
try_exc_stmt -> Try Colon suite exc_list Else . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Colon shift to state 297
## Reductions:

State 297:
## Known stack suffix:
## Try Colon suite exc_list Else Colon
## LR(1) items:
try_exc_stmt -> Try Colon suite exc_list Else Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 298
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 298:
## Known stack suffix:
## Try Colon suite exc_list Else Colon suite
## LR(1) items:
try_exc_stmt -> Try Colon suite exc_list Else Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production try_exc_stmt -> Try Colon suite exc_list Else Colon suite

State 299:
## Known stack suffix:
## exc_list exc_item
## LR(1) items:
exc_list -> exc_list exc_item . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exc_list -> exc_list exc_item

State 300:
## Known stack suffix:
## exc_item
## LR(1) items:
exc_list -> exc_item . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Except Else Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exc_list -> exc_item

State 301:
## Known stack suffix:
## If
## LR(1) items:
if_stmt -> If . expression Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
if_stmt -> If . expression Colon suite elif_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 302
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 302:
## Known stack suffix:
## If expression
## LR(1) items:
if_stmt -> If expression . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
if_stmt -> If expression . Colon suite elif_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Colon shift to state 303
## Reductions:

State 303:
## Known stack suffix:
## If expression Colon
## LR(1) items:
if_stmt -> If expression Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
if_stmt -> If expression Colon . suite elif_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 304
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 304:
## Known stack suffix:
## If expression Colon suite
## LR(1) items:
if_stmt -> If expression Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
if_stmt -> If expression Colon suite . elif_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Else shift to state 305
-- On Elif shift to state 308
-- On elif_list shift to state 313
## Reductions:
-- On While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert
--   reduce production if_stmt -> If expression Colon suite

State 305:
## Known stack suffix:
## Else
## LR(1) items:
elif_list -> Else . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Colon shift to state 306
## Reductions:

State 306:
## Known stack suffix:
## Else Colon
## LR(1) items:
elif_list -> Else Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 307
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 307:
## Known stack suffix:
## Else Colon suite
## LR(1) items:
elif_list -> Else Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production elif_list -> Else Colon suite

State 308:
## Known stack suffix:
## Elif
## LR(1) items:
elif_list -> Elif . expression Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
elif_list -> Elif . expression Colon suite elif_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 309
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 309:
## Known stack suffix:
## Elif expression
## LR(1) items:
elif_list -> Elif expression . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
elif_list -> Elif expression . Colon suite elif_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Colon shift to state 310
## Reductions:

State 310:
## Known stack suffix:
## Elif expression Colon
## LR(1) items:
elif_list -> Elif expression Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
elif_list -> Elif expression Colon . suite elif_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 311
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 311:
## Known stack suffix:
## Elif expression Colon suite
## LR(1) items:
elif_list -> Elif expression Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
elif_list -> Elif expression Colon suite . elif_list [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Else shift to state 305
-- On Elif shift to state 308
-- On elif_list shift to state 312
## Reductions:
-- On While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert
--   reduce production elif_list -> Elif expression Colon suite

State 312:
## Known stack suffix:
## Elif expression Colon suite elif_list
## LR(1) items:
elif_list -> Elif expression Colon suite elif_list . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production elif_list -> Elif expression Colon suite elif_list

State 313:
## Known stack suffix:
## If expression Colon suite elif_list
## LR(1) items:
if_stmt -> If expression Colon suite elif_list . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production if_stmt -> If expression Colon suite elif_list

State 314:
## Known stack suffix:
## For
## LR(1) items:
for_stmt -> For . target_list In expr_list Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
for_stmt -> For . target_list In expr_list Colon suite Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On String shift to state 3
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Backquote shift to state 35
-- On target_list_without_comma shift to state 233
-- On target_list shift to state 315
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On primary shift to state 237
-- On parenth_form shift to state 47
-- On literal shift to state 48
-- On list_display shift to state 49
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
## Reductions:

State 315:
## Known stack suffix:
## For target_list
## LR(1) items:
for_stmt -> For target_list . In expr_list Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
for_stmt -> For target_list . In expr_list Colon suite Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On In shift to state 316
## Reductions:

State 316:
## Known stack suffix:
## For target_list In
## LR(1) items:
for_stmt -> For target_list In . expr_list Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
for_stmt -> For target_list In . expr_list Colon suite Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 317
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 317:
## Known stack suffix:
## For target_list In expr_list
## LR(1) items:
for_stmt -> For target_list In expr_list . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
for_stmt -> For target_list In expr_list . Colon suite Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Colon shift to state 318
## Reductions:

State 318:
## Known stack suffix:
## For target_list In expr_list Colon
## LR(1) items:
for_stmt -> For target_list In expr_list Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
for_stmt -> For target_list In expr_list Colon . suite Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 319
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 319:
## Known stack suffix:
## For target_list In expr_list Colon suite
## LR(1) items:
for_stmt -> For target_list In expr_list Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
for_stmt -> For target_list In expr_list Colon suite . Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Else shift to state 320
## Reductions:
-- On While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert
--   reduce production for_stmt -> For target_list In expr_list Colon suite

State 320:
## Known stack suffix:
## For target_list In expr_list Colon suite Else
## LR(1) items:
for_stmt -> For target_list In expr_list Colon suite Else . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Colon shift to state 321
## Reductions:

State 321:
## Known stack suffix:
## For target_list In expr_list Colon suite Else Colon
## LR(1) items:
for_stmt -> For target_list In expr_list Colon suite Else Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 322
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 322:
## Known stack suffix:
## For target_list In expr_list Colon suite Else Colon suite
## LR(1) items:
for_stmt -> For target_list In expr_list Colon suite Else Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production for_stmt -> For target_list In expr_list Colon suite Else Colon suite

State 323:
## Known stack suffix:
## Def
## LR(1) items:
funcdef -> Def . Identifier Leftparen Rightparen Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
funcdef -> Def . Identifier Leftparen parameter_list Rightparen Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Identifier shift to state 324
## Reductions:

State 324:
## Known stack suffix:
## Def Identifier
## LR(1) items:
funcdef -> Def Identifier . Leftparen Rightparen Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
funcdef -> Def Identifier . Leftparen parameter_list Rightparen Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Leftparen shift to state 325
## Reductions:

State 325:
## Known stack suffix:
## Def Identifier Leftparen
## LR(1) items:
funcdef -> Def Identifier Leftparen . Rightparen Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
funcdef -> Def Identifier Leftparen . parameter_list Rightparen Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On StarStar shift to state 14
-- On Star shift to state 16
-- On Rightparen shift to state 326
-- On Leftparen shift to state 21
-- On Identifier shift to state 22
-- On parameter_list shift to state 329
-- On parameter shift to state 146
-- On defparams shift to state 149
-- On defparam shift to state 160
## Reductions:

State 326:
## Known stack suffix:
## Def Identifier Leftparen Rightparen
## LR(1) items:
funcdef -> Def Identifier Leftparen Rightparen . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Colon shift to state 327
## Reductions:

State 327:
## Known stack suffix:
## Def Identifier Leftparen Rightparen Colon
## LR(1) items:
funcdef -> Def Identifier Leftparen Rightparen Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 328
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 328:
## Known stack suffix:
## Def Identifier Leftparen Rightparen Colon suite
## LR(1) items:
funcdef -> Def Identifier Leftparen Rightparen Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production funcdef -> Def Identifier Leftparen Rightparen Colon suite

State 329:
## Known stack suffix:
## Def Identifier Leftparen parameter_list
## LR(1) items:
funcdef -> Def Identifier Leftparen parameter_list . Rightparen Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Rightparen shift to state 330
## Reductions:

State 330:
## Known stack suffix:
## Def Identifier Leftparen parameter_list Rightparen
## LR(1) items:
funcdef -> Def Identifier Leftparen parameter_list Rightparen . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Colon shift to state 331
## Reductions:

State 331:
## Known stack suffix:
## Def Identifier Leftparen parameter_list Rightparen Colon
## LR(1) items:
funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 332
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 332:
## Known stack suffix:
## Def Identifier Leftparen parameter_list Rightparen Colon suite
## LR(1) items:
funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production funcdef -> Def Identifier Leftparen parameter_list Rightparen Colon suite

State 333:
## Known stack suffix:
## Class
## LR(1) items:
classdef -> Class . Identifier Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
classdef -> Class . Identifier inheritance Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Identifier shift to state 334
## Reductions:

State 334:
## Known stack suffix:
## Class Identifier
## LR(1) items:
classdef -> Class Identifier . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
classdef -> Class Identifier . inheritance Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Leftparen shift to state 335
-- On Colon shift to state 339
-- On inheritance shift to state 341
## Reductions:

State 335:
## Known stack suffix:
## Leftparen
## LR(1) items:
inheritance -> Leftparen . Rightparen [ Colon ]
inheritance -> Leftparen . expr_list Rightparen [ Colon ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Rightparen shift to state 336
-- On Plus shift to state 4
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Float shift to state 33
-- On Dash shift to state 34
-- On Backquote shift to state 35
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On string_conversion shift to state 39
-- On slicing shift to state 40
-- On shift_expr shift to state 41
-- On primary shift to state 43
-- On power shift to state 46
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 337
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On comparison shift to state 94
-- On call shift to state 52
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 336:
## Known stack suffix:
## Leftparen Rightparen
## LR(1) items:
inheritance -> Leftparen Rightparen . [ Colon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inheritance -> Leftparen Rightparen

State 337:
## Known stack suffix:
## Leftparen expr_list
## LR(1) items:
inheritance -> Leftparen expr_list . Rightparen [ Colon ]
## Transitions:
-- On Rightparen shift to state 338
## Reductions:

State 338:
## Known stack suffix:
## Leftparen expr_list Rightparen
## LR(1) items:
inheritance -> Leftparen expr_list Rightparen . [ Colon ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inheritance -> Leftparen expr_list Rightparen

State 339:
## Known stack suffix:
## Class Identifier Colon
## LR(1) items:
classdef -> Class Identifier Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 340
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 340:
## Known stack suffix:
## Class Identifier Colon suite
## LR(1) items:
classdef -> Class Identifier Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production classdef -> Class Identifier Colon suite

State 341:
## Known stack suffix:
## Class Identifier inheritance
## LR(1) items:
classdef -> Class Identifier inheritance . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Colon shift to state 342
## Reductions:

State 342:
## Known stack suffix:
## Class Identifier inheritance Colon
## LR(1) items:
classdef -> Class Identifier inheritance Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 343
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 343:
## Known stack suffix:
## Class Identifier inheritance Colon suite
## LR(1) items:
classdef -> Class Identifier inheritance Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production classdef -> Class Identifier inheritance Colon suite

State 344:
## Known stack suffix:
## while_stmt
## LR(1) items:
compound_stmt -> while_stmt . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production compound_stmt -> while_stmt

State 345:
## Known stack suffix:
## try_stmt
## LR(1) items:
compound_stmt -> try_stmt . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production compound_stmt -> try_stmt

State 346:
## Known stack suffix:
## try_fin_stmt
## LR(1) items:
try_stmt -> try_fin_stmt . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production try_stmt -> try_fin_stmt

State 347:
## Known stack suffix:
## try_exc_stmt
## LR(1) items:
try_stmt -> try_exc_stmt . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production try_stmt -> try_exc_stmt

State 348:
## Known stack suffix:
## stmt_list
## LR(1) items:
statement -> stmt_list . Newline [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Newline shift to state 349
## Reductions:

State 349:
## Known stack suffix:
## stmt_list Newline
## LR(1) items:
statement -> stmt_list Newline . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> stmt_list Newline

State 350:
## Known stack suffix:
## Newline Indent statement_plus
## LR(1) items:
statement_plus -> statement_plus . statement [ While Try Tilde String Return Raise Print Plus Pass Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert ]
suite -> Newline Indent statement_plus . Dedent [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Finally Except Else Elif Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On While shift to state 1
-- On Try shift to state 201
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On If shift to state 301
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On For shift to state 314
-- On Float shift to state 33
-- On Del shift to state 232
-- On Def shift to state 323
-- On Dedent shift to state 351
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Class shift to state 333
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On while_stmt shift to state 344
-- On u_expr shift to state 38
-- On try_stmt shift to state 345
-- On try_fin_stmt shift to state 346
-- On try_exc_stmt shift to state 347
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 348
-- On statement shift to state 352
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On if_stmt shift to state 353
-- On global_stmt shift to state 270
-- On funcdef shift to state 354
-- On for_stmt shift to state 355
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On compound_stmt shift to state 356
-- On comparison shift to state 94
-- On classdef shift to state 357
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 351:
## Known stack suffix:
## Newline Indent statement_plus Dedent
## LR(1) items:
suite -> Newline Indent statement_plus Dedent . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Finally Except Else Elif Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production suite -> Newline Indent statement_plus Dedent

State 352:
## Known stack suffix:
## statement_plus statement
## LR(1) items:
statement_plus -> statement_plus statement . [ While Try Tilde String Return Raise Print Plus Pass Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement_plus -> statement_plus statement

State 353:
## Known stack suffix:
## if_stmt
## LR(1) items:
compound_stmt -> if_stmt . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production compound_stmt -> if_stmt

State 354:
## Known stack suffix:
## funcdef
## LR(1) items:
compound_stmt -> funcdef . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production compound_stmt -> funcdef

State 355:
## Known stack suffix:
## for_stmt
## LR(1) items:
compound_stmt -> for_stmt . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production compound_stmt -> for_stmt

State 356:
## Known stack suffix:
## compound_stmt
## LR(1) items:
statement -> compound_stmt . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> compound_stmt

State 357:
## Known stack suffix:
## classdef
## LR(1) items:
compound_stmt -> classdef . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production compound_stmt -> classdef

State 358:
## Known stack suffix:
## statement
## LR(1) items:
statement_plus -> statement . [ While Try Tilde String Return Raise Print Plus Pass Not Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement_plus -> statement

State 359:
## Known stack suffix:
## While expression Colon suite
## LR(1) items:
while_stmt -> While expression Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
while_stmt -> While expression Colon suite . Else Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Else shift to state 360
## Reductions:
-- On While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert
--   reduce production while_stmt -> While expression Colon suite

State 360:
## Known stack suffix:
## While expression Colon suite Else
## LR(1) items:
while_stmt -> While expression Colon suite Else . Colon suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Colon shift to state 361
## Reductions:

State 361:
## Known stack suffix:
## While expression Colon suite Else Colon
## LR(1) items:
while_stmt -> While expression Colon suite Else Colon . suite [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 199
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On Float shift to state 33
-- On Del shift to state 232
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On u_expr shift to state 38
-- On suite shift to state 362
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 282
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On global_stmt shift to state 270
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On comparison shift to state 94
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 362:
## Known stack suffix:
## While expression Colon suite Else Colon suite
## LR(1) items:
while_stmt -> While expression Colon suite Else Colon suite . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dedent Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production while_stmt -> While expression Colon suite Else Colon suite

State 363:
## Known stack suffix:
## Newline
## LR(1) items:
file_input_list -> Newline . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production file_input_list -> Newline

State 364:
## Known stack suffix:
## statement
## LR(1) items:
file_input_list -> statement . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production file_input_list -> statement

State 365:
## Known stack suffix:
## file_input_list
## LR(1) items:
file_input -> file_input_list . [ # ]
file_input_list -> file_input_list . Newline [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dash Continue Class Break Backquote Assert # ]
file_input_list -> file_input_list . statement [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dash Continue Class Break Backquote Assert # ]
## Transitions:
-- On While shift to state 1
-- On Try shift to state 201
-- On Tilde shift to state 2
-- On String shift to state 3
-- On Return shift to state 184
-- On Raise shift to state 186
-- On Print shift to state 192
-- On Plus shift to state 4
-- On Pass shift to state 198
-- On Not shift to state 8
-- On Newline shift to state 366
-- On Longinteger shift to state 5
-- On Leftparen shift to state 6
-- On Leftbracket shift to state 9
-- On Leftbrace shift to state 11
-- On Lambda shift to state 13
-- On Integer shift to state 30
-- On Import shift to state 203
-- On Imaginary shift to state 31
-- On If shift to state 301
-- On Identifier shift to state 32
-- On Global shift to state 215
-- On From shift to state 220
-- On For shift to state 314
-- On Float shift to state 33
-- On Del shift to state 232
-- On Def shift to state 323
-- On Dash shift to state 34
-- On Continue shift to state 238
-- On Class shift to state 333
-- On Break shift to state 239
-- On Backquote shift to state 35
-- On Assert shift to state 240
-- On xor_expr shift to state 36
-- On while_stmt shift to state 344
-- On u_expr shift to state 38
-- On try_stmt shift to state 345
-- On try_fin_stmt shift to state 346
-- On try_exc_stmt shift to state 347
-- On string_conversion shift to state 39
-- On stmt_list_without_semicolon shift to state 248
-- On stmt_list shift to state 348
-- On statement shift to state 367
-- On slicing shift to state 40
-- On simple_stmt shift to state 284
-- On shift_expr shift to state 41
-- On return_stmt shift to state 251
-- On raise_stmt shift to state 252
-- On print_stmt shift to state 253
-- On primary shift to state 254
-- On power shift to state 46
-- On pass_stmt shift to state 268
-- On parenth_form shift to state 47
-- On or_test shift to state 71
-- On or_expr shift to state 73
-- On not_test shift to state 93
-- On m_expr shift to state 76
-- On literal shift to state 48
-- On list_display shift to state 49
-- On lambda_form shift to state 111
-- On import_stmt shift to state 269
-- On if_stmt shift to state 353
-- On global_stmt shift to state 270
-- On funcdef shift to state 354
-- On for_stmt shift to state 355
-- On expression_stmt shift to state 271
-- On expression shift to state 136
-- On expr_list_without_comma shift to state 172
-- On expr_list shift to state 272
-- On enclosure shift to state 50
-- On dict_display shift to state 51
-- On del_stmt shift to state 276
-- On continue_stmt shift to state 277
-- On compound_stmt shift to state 356
-- On comparison shift to state 94
-- On classdef shift to state 357
-- On call shift to state 52
-- On break_stmt shift to state 278
-- On augmented_assignment_stmt shift to state 279
-- On attributeref shift to state 53
-- On atom shift to state 54
-- On assignment_stmt shift to state 280
-- On assert_stmt shift to state 281
-- On and_test shift to state 113
-- On and_expr shift to state 83
-- On a_expr shift to state 92
## Reductions:

State 366:
## Known stack suffix:
## file_input_list Newline
## LR(1) items:
file_input_list -> file_input_list Newline . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production file_input_list -> file_input_list Newline

State 367:
## Known stack suffix:
## file_input_list statement
## LR(1) items:
file_input_list -> file_input_list statement . [ While Try Tilde String Return Raise Print Plus Pass Not Newline Longinteger Leftparen Leftbracket Leftbrace Lambda Integer Import Imaginary If Identifier Global From For Float Del Def Dash Continue Class Break Backquote Assert # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production file_input_list -> file_input_list statement

State 368:
## Known stack suffix:
## file_input
## LR(1) items:
file_input' -> file_input . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept file_input

