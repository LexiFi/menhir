State 0:
## Known stack suffix:
##
## LR(1) items:
memcad_command' -> . memcad_command [ # ]
## Transitions:
-- On T_unroll shift to state 1
-- On T_unfold_bseg shift to state 5
-- On T_unfold shift to state 13
-- On T_sel_merge shift to state 17
-- On T_reduce_localize shift to state 24
-- On T_reduce_eager shift to state 28
-- On T_output_stdout shift to state 29
-- On T_output_dot shift to state 32
-- On T_merge shift to state 41
-- On T_kill_flow shift to state 44
-- On T_force_live shift to state 45
-- On T_decl_setvars shift to state 49
-- On T_check_setexprs shift to state 57
-- On T_check_segment shift to state 76
-- On T_check_inductive shift to state 105
-- On T_check_bottomness shift to state 113
-- On T_assume shift to state 117
-- On T_array_check shift to state 137
-- On T_array_assume shift to state 139
-- On T_add_setexprs shift to state 141
-- On T_add_segment shift to state 145
-- On T_add_inductive shift to state 157
-- On memcad_command shift to state 164
## Reductions:

State 1:
## Known stack suffix:
## T_unroll
## LR(1) items:
memcad_command -> T_unroll . T_lparen V_int T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## T_unroll T_lparen
## LR(1) items:
memcad_command -> T_unroll T_lparen . V_int T_rparen [ # ]
## Transitions:
-- On V_int shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## T_unroll T_lparen V_int
## LR(1) items:
memcad_command -> T_unroll T_lparen V_int . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## T_unroll T_lparen V_int T_rparen
## LR(1) items:
memcad_command -> T_unroll T_lparen V_int T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_unroll T_lparen V_int T_rparen

State 5:
## Known stack suffix:
## T_unfold_bseg
## LR(1) items:
memcad_command -> T_unfold_bseg . T_lparen c_lval T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## T_unfold_bseg T_lparen
## LR(1) items:
memcad_command -> T_unfold_bseg T_lparen . c_lval T_rparen [ # ]
## Transitions:
-- On V_string shift to state 7
-- On c_var shift to state 8
-- On c_lval shift to state 9
## Reductions:

State 7:
## Known stack suffix:
## V_string
## LR(1) items:
c_var -> V_string . [ T_rparen T_pipe T_ne T_lt T_le T_gt T_ge T_euplus T_eq T_comma T_arrow ]
## Transitions:
## Reductions:
-- On T_rparen reduce production c_var -> V_string
-- On T_pipe reduce production c_var -> V_string
-- On T_ne reduce production c_var -> V_string
-- On T_lt reduce production c_var -> V_string
-- On T_le reduce production c_var -> V_string
-- On T_gt reduce production c_var -> V_string
-- On T_ge reduce production c_var -> V_string
-- On T_euplus reduce production c_var -> V_string
-- On T_eq reduce production c_var -> V_string
-- On T_comma reduce production c_var -> V_string
-- On T_arrow reduce production c_var -> V_string

State 8:
## Known stack suffix:
## c_var
## LR(1) items:
c_lval -> c_var . [ T_setin T_rparen T_pipe T_ne T_lt T_le T_gt T_ge T_euplus T_eq T_comma T_arrow ]
## Transitions:
## Reductions:
-- On T_setin reduce production c_lval -> c_var
-- On T_rparen reduce production c_lval -> c_var
-- On T_pipe reduce production c_lval -> c_var
-- On T_ne reduce production c_lval -> c_var
-- On T_lt reduce production c_lval -> c_var
-- On T_le reduce production c_lval -> c_var
-- On T_gt reduce production c_lval -> c_var
-- On T_ge reduce production c_lval -> c_var
-- On T_euplus reduce production c_lval -> c_var
-- On T_eq reduce production c_lval -> c_var
-- On T_comma reduce production c_lval -> c_var
-- On T_arrow reduce production c_lval -> c_var

State 9:
## Known stack suffix:
## T_unfold_bseg T_lparen c_lval
## LR(1) items:
c_lval -> c_lval . T_arrow V_string [ T_rparen T_arrow ]
memcad_command -> T_unfold_bseg T_lparen c_lval . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 10
-- On T_arrow shift to state 11
## Reductions:

State 10:
## Known stack suffix:
## T_unfold_bseg T_lparen c_lval T_rparen
## LR(1) items:
memcad_command -> T_unfold_bseg T_lparen c_lval T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_unfold_bseg T_lparen c_lval T_rparen

State 11:
## Known stack suffix:
## c_lval T_arrow
## LR(1) items:
c_lval -> c_lval T_arrow . V_string [ T_setin T_rparen T_pipe T_ne T_lt T_le T_gt T_ge T_euplus T_eq T_comma T_arrow ]
## Transitions:
-- On V_string shift to state 12
## Reductions:

State 12:
## Known stack suffix:
## c_lval T_arrow V_string
## LR(1) items:
c_lval -> c_lval T_arrow V_string . [ T_setin T_rparen T_pipe T_ne T_lt T_le T_gt T_ge T_euplus T_eq T_comma T_arrow ]
## Transitions:
## Reductions:
-- On T_setin reduce production c_lval -> c_lval T_arrow V_string
-- On T_rparen reduce production c_lval -> c_lval T_arrow V_string
-- On T_pipe reduce production c_lval -> c_lval T_arrow V_string
-- On T_ne reduce production c_lval -> c_lval T_arrow V_string
-- On T_lt reduce production c_lval -> c_lval T_arrow V_string
-- On T_le reduce production c_lval -> c_lval T_arrow V_string
-- On T_gt reduce production c_lval -> c_lval T_arrow V_string
-- On T_ge reduce production c_lval -> c_lval T_arrow V_string
-- On T_euplus reduce production c_lval -> c_lval T_arrow V_string
-- On T_eq reduce production c_lval -> c_lval T_arrow V_string
-- On T_comma reduce production c_lval -> c_lval T_arrow V_string
-- On T_arrow reduce production c_lval -> c_lval T_arrow V_string

State 13:
## Known stack suffix:
## T_unfold
## LR(1) items:
memcad_command -> T_unfold . T_lparen c_lval T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## T_unfold T_lparen
## LR(1) items:
memcad_command -> T_unfold T_lparen . c_lval T_rparen [ # ]
## Transitions:
-- On V_string shift to state 7
-- On c_var shift to state 8
-- On c_lval shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## T_unfold T_lparen c_lval
## LR(1) items:
c_lval -> c_lval . T_arrow V_string [ T_rparen T_arrow ]
memcad_command -> T_unfold T_lparen c_lval . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 16
-- On T_arrow shift to state 11
## Reductions:

State 16:
## Known stack suffix:
## T_unfold T_lparen c_lval T_rparen
## LR(1) items:
memcad_command -> T_unfold T_lparen c_lval T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_unfold T_lparen c_lval T_rparen

State 17:
## Known stack suffix:
## T_sel_merge
## LR(1) items:
memcad_command -> T_sel_merge . T_lparen c_var_list T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 18
## Reductions:

State 18:
## Known stack suffix:
## T_sel_merge T_lparen
## LR(1) items:
memcad_command -> T_sel_merge T_lparen . c_var_list T_rparen [ # ]
## Transitions:
-- On V_string shift to state 7
-- On c_var_list shift to state 19
-- On c_var shift to state 23
## Reductions:
-- On T_rparen reduce production c_var_list ->
-- On T_comma reduce production c_var_list ->

State 19:
## Known stack suffix:
## T_sel_merge T_lparen c_var_list
## LR(1) items:
c_var_list -> c_var_list . T_comma c_var [ T_rparen T_comma ]
memcad_command -> T_sel_merge T_lparen c_var_list . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 20
-- On T_comma shift to state 21
## Reductions:

State 20:
## Known stack suffix:
## T_sel_merge T_lparen c_var_list T_rparen
## LR(1) items:
memcad_command -> T_sel_merge T_lparen c_var_list T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_sel_merge T_lparen c_var_list T_rparen

State 21:
## Known stack suffix:
## c_var_list T_comma
## LR(1) items:
c_var_list -> c_var_list T_comma . c_var [ T_rparen T_comma ]
## Transitions:
-- On V_string shift to state 7
-- On c_var shift to state 22
## Reductions:

State 22:
## Known stack suffix:
## c_var_list T_comma c_var
## LR(1) items:
c_var_list -> c_var_list T_comma c_var . [ T_rparen T_comma ]
## Transitions:
## Reductions:
-- On T_rparen reduce production c_var_list -> c_var_list T_comma c_var
-- On T_comma reduce production c_var_list -> c_var_list T_comma c_var

State 23:
## Known stack suffix:
## c_var
## LR(1) items:
c_var_list -> c_var . [ T_rparen T_comma ]
## Transitions:
## Reductions:
-- On T_rparen reduce production c_var_list -> c_var
-- On T_comma reduce production c_var_list -> c_var

State 24:
## Known stack suffix:
## T_reduce_localize
## LR(1) items:
memcad_command -> T_reduce_localize . T_lparen c_lval T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 25
## Reductions:

State 25:
## Known stack suffix:
## T_reduce_localize T_lparen
## LR(1) items:
memcad_command -> T_reduce_localize T_lparen . c_lval T_rparen [ # ]
## Transitions:
-- On V_string shift to state 7
-- On c_var shift to state 8
-- On c_lval shift to state 26
## Reductions:

State 26:
## Known stack suffix:
## T_reduce_localize T_lparen c_lval
## LR(1) items:
c_lval -> c_lval . T_arrow V_string [ T_rparen T_arrow ]
memcad_command -> T_reduce_localize T_lparen c_lval . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 27
-- On T_arrow shift to state 11
## Reductions:

State 27:
## Known stack suffix:
## T_reduce_localize T_lparen c_lval T_rparen
## LR(1) items:
memcad_command -> T_reduce_localize T_lparen c_lval T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_reduce_localize T_lparen c_lval T_rparen

State 28:
## Known stack suffix:
## T_reduce_eager
## LR(1) items:
memcad_command -> T_reduce_eager . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_reduce_eager

State 29:
## Known stack suffix:
## T_output_stdout
## LR(1) items:
memcad_command -> T_output_stdout . T_lparen T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 30
## Reductions:

State 30:
## Known stack suffix:
## T_output_stdout T_lparen
## LR(1) items:
memcad_command -> T_output_stdout T_lparen . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## T_output_stdout T_lparen T_rparen
## LR(1) items:
memcad_command -> T_output_stdout T_lparen T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_output_stdout T_lparen T_rparen

State 32:
## Known stack suffix:
## T_output_dot
## LR(1) items:
memcad_command -> T_output_dot . T_lparen var_name_list T_pipe var_name_list T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 33
## Reductions:

State 33:
## Known stack suffix:
## T_output_dot T_lparen
## LR(1) items:
memcad_command -> T_output_dot T_lparen . var_name_list T_pipe var_name_list T_rparen [ # ]
## Transitions:
-- On V_string shift to state 34
-- On var_name_list shift to state 37
## Reductions:
-- On T_pipe reduce production var_name_list ->

State 34:
## Known stack suffix:
## V_string
## LR(1) items:
var_name_list -> V_string . [ T_rparen T_pipe ]
var_name_list -> V_string . T_comma var_name_list [ T_rparen T_pipe ]
## Transitions:
-- On T_comma shift to state 35
## Reductions:
-- On T_rparen reduce production var_name_list -> V_string
-- On T_pipe reduce production var_name_list -> V_string

State 35:
## Known stack suffix:
## V_string T_comma
## LR(1) items:
var_name_list -> V_string T_comma . var_name_list [ T_rparen T_pipe ]
## Transitions:
-- On V_string shift to state 34
-- On var_name_list shift to state 36
## Reductions:
-- On T_rparen reduce production var_name_list ->
-- On T_pipe reduce production var_name_list ->

State 36:
## Known stack suffix:
## V_string T_comma var_name_list
## LR(1) items:
var_name_list -> V_string T_comma var_name_list . [ T_rparen T_pipe ]
## Transitions:
## Reductions:
-- On T_rparen reduce production var_name_list -> V_string T_comma var_name_list
-- On T_pipe reduce production var_name_list -> V_string T_comma var_name_list

State 37:
## Known stack suffix:
## T_output_dot T_lparen var_name_list
## LR(1) items:
memcad_command -> T_output_dot T_lparen var_name_list . T_pipe var_name_list T_rparen [ # ]
## Transitions:
-- On T_pipe shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## T_output_dot T_lparen var_name_list T_pipe
## LR(1) items:
memcad_command -> T_output_dot T_lparen var_name_list T_pipe . var_name_list T_rparen [ # ]
## Transitions:
-- On V_string shift to state 34
-- On var_name_list shift to state 39
## Reductions:
-- On T_rparen reduce production var_name_list ->

State 39:
## Known stack suffix:
## T_output_dot T_lparen var_name_list T_pipe var_name_list
## LR(1) items:
memcad_command -> T_output_dot T_lparen var_name_list T_pipe var_name_list . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 40
## Reductions:

State 40:
## Known stack suffix:
## T_output_dot T_lparen var_name_list T_pipe var_name_list T_rparen
## LR(1) items:
memcad_command -> T_output_dot T_lparen var_name_list T_pipe var_name_list T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_output_dot T_lparen var_name_list T_pipe var_name_list T_rparen

State 41:
## Known stack suffix:
## T_merge
## LR(1) items:
memcad_command -> T_merge . T_lparen T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## T_merge T_lparen
## LR(1) items:
memcad_command -> T_merge T_lparen . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 43
## Reductions:

State 43:
## Known stack suffix:
## T_merge T_lparen T_rparen
## LR(1) items:
memcad_command -> T_merge T_lparen T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_merge T_lparen T_rparen

State 44:
## Known stack suffix:
## T_kill_flow
## LR(1) items:
memcad_command -> T_kill_flow . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_kill_flow

State 45:
## Known stack suffix:
## T_force_live
## LR(1) items:
memcad_command -> T_force_live . T_lparen c_var_list T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## T_force_live T_lparen
## LR(1) items:
memcad_command -> T_force_live T_lparen . c_var_list T_rparen [ # ]
## Transitions:
-- On V_string shift to state 7
-- On c_var_list shift to state 47
-- On c_var shift to state 23
## Reductions:
-- On T_rparen reduce production c_var_list ->
-- On T_comma reduce production c_var_list ->

State 47:
## Known stack suffix:
## T_force_live T_lparen c_var_list
## LR(1) items:
c_var_list -> c_var_list . T_comma c_var [ T_rparen T_comma ]
memcad_command -> T_force_live T_lparen c_var_list . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 48
-- On T_comma shift to state 21
## Reductions:

State 48:
## Known stack suffix:
## T_force_live T_lparen c_var_list T_rparen
## LR(1) items:
memcad_command -> T_force_live T_lparen c_var_list T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_force_live T_lparen c_var_list T_rparen

State 49:
## Known stack suffix:
## T_decl_setvars
## LR(1) items:
memcad_command -> T_decl_setvars . T_lparen setvars T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 50
## Reductions:

State 50:
## Known stack suffix:
## T_decl_setvars T_lparen
## LR(1) items:
memcad_command -> T_decl_setvars T_lparen . setvars T_rparen [ # ]
## Transitions:
-- On V_string shift to state 51
-- On setvars shift to state 52
-- On setvar shift to state 54
## Reductions:
-- On T_rparen reduce production setvars ->

State 51:
## Known stack suffix:
## V_string
## LR(1) items:
setvar -> V_string . [ T_rparen T_rbrack T_comma ]
## Transitions:
## Reductions:
-- On T_rparen reduce production setvar -> V_string
-- On T_rbrack reduce production setvar -> V_string
-- On T_comma reduce production setvar -> V_string

State 52:
## Known stack suffix:
## T_decl_setvars T_lparen setvars
## LR(1) items:
memcad_command -> T_decl_setvars T_lparen setvars . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 53
## Reductions:

State 53:
## Known stack suffix:
## T_decl_setvars T_lparen setvars T_rparen
## LR(1) items:
memcad_command -> T_decl_setvars T_lparen setvars T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_decl_setvars T_lparen setvars T_rparen

State 54:
## Known stack suffix:
## setvar
## LR(1) items:
setvars -> setvar . [ T_rparen ]
setvars -> setvar . T_comma setvars [ T_rparen ]
## Transitions:
-- On T_comma shift to state 55
## Reductions:
-- On T_rparen reduce production setvars -> setvar

State 55:
## Known stack suffix:
## setvar T_comma
## LR(1) items:
setvars -> setvar T_comma . setvars [ T_rparen ]
## Transitions:
-- On V_string shift to state 51
-- On setvars shift to state 56
-- On setvar shift to state 54
## Reductions:
-- On T_rparen reduce production setvars ->

State 56:
## Known stack suffix:
## setvar T_comma setvars
## LR(1) items:
setvars -> setvar T_comma setvars . [ T_rparen ]
## Transitions:
## Reductions:
-- On T_rparen reduce production setvars -> setvar T_comma setvars

State 57:
## Known stack suffix:
## T_check_setexprs
## LR(1) items:
memcad_command -> T_check_setexprs . T_lparen set_exprs T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## T_check_setexprs T_lparen
## LR(1) items:
memcad_command -> T_check_setexprs T_lparen . set_exprs T_rparen [ # ]
## Transitions:
-- On V_string shift to state 59
-- On setvar shift to state 60
-- On set_exprs shift to state 68
-- On set_expr shift to state 70
-- On c_var shift to state 8
-- On c_lval shift to state 73
## Reductions:
-- On T_rparen reduce production set_exprs ->

State 59:
## Known stack suffix:
## V_string
## LR(1) items:
c_var -> V_string . [ T_setin T_arrow ]
setvar -> V_string . [ T_subseteq T_equal ]
## Transitions:
## Reductions:
-- On T_subseteq reduce production setvar -> V_string
-- On T_setin reduce production c_var -> V_string
-- On T_equal reduce production setvar -> V_string
-- On T_arrow reduce production c_var -> V_string

State 60:
## Known stack suffix:
## setvar
## LR(1) items:
set_expr -> setvar . T_subseteq setvar [ T_rparen T_comma ]
set_expr -> setvar . T_equal T_setempty [ T_rparen T_comma ]
set_expr -> setvar . T_equal c_lval T_euplus setvar [ T_rparen T_comma ]
## Transitions:
-- On T_subseteq shift to state 61
-- On T_equal shift to state 63
## Reductions:

State 61:
## Known stack suffix:
## setvar T_subseteq
## LR(1) items:
set_expr -> setvar T_subseteq . setvar [ T_rparen T_comma ]
## Transitions:
-- On V_string shift to state 51
-- On setvar shift to state 62
## Reductions:

State 62:
## Known stack suffix:
## setvar T_subseteq setvar
## LR(1) items:
set_expr -> setvar T_subseteq setvar . [ T_rparen T_comma ]
## Transitions:
## Reductions:
-- On T_rparen reduce production set_expr -> setvar T_subseteq setvar
-- On T_comma reduce production set_expr -> setvar T_subseteq setvar

State 63:
## Known stack suffix:
## setvar T_equal
## LR(1) items:
set_expr -> setvar T_equal . T_setempty [ T_rparen T_comma ]
set_expr -> setvar T_equal . c_lval T_euplus setvar [ T_rparen T_comma ]
## Transitions:
-- On V_string shift to state 7
-- On T_setempty shift to state 64
-- On c_var shift to state 8
-- On c_lval shift to state 65
## Reductions:

State 64:
## Known stack suffix:
## setvar T_equal T_setempty
## LR(1) items:
set_expr -> setvar T_equal T_setempty . [ T_rparen T_comma ]
## Transitions:
## Reductions:
-- On T_rparen reduce production set_expr -> setvar T_equal T_setempty
-- On T_comma reduce production set_expr -> setvar T_equal T_setempty

State 65:
## Known stack suffix:
## setvar T_equal c_lval
## LR(1) items:
c_lval -> c_lval . T_arrow V_string [ T_euplus T_arrow ]
set_expr -> setvar T_equal c_lval . T_euplus setvar [ T_rparen T_comma ]
## Transitions:
-- On T_euplus shift to state 66
-- On T_arrow shift to state 11
## Reductions:

State 66:
## Known stack suffix:
## setvar T_equal c_lval T_euplus
## LR(1) items:
set_expr -> setvar T_equal c_lval T_euplus . setvar [ T_rparen T_comma ]
## Transitions:
-- On V_string shift to state 51
-- On setvar shift to state 67
## Reductions:

State 67:
## Known stack suffix:
## setvar T_equal c_lval T_euplus setvar
## LR(1) items:
set_expr -> setvar T_equal c_lval T_euplus setvar . [ T_rparen T_comma ]
## Transitions:
## Reductions:
-- On T_rparen reduce production set_expr -> setvar T_equal c_lval T_euplus setvar
-- On T_comma reduce production set_expr -> setvar T_equal c_lval T_euplus setvar

State 68:
## Known stack suffix:
## T_check_setexprs T_lparen set_exprs
## LR(1) items:
memcad_command -> T_check_setexprs T_lparen set_exprs . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 69
## Reductions:

State 69:
## Known stack suffix:
## T_check_setexprs T_lparen set_exprs T_rparen
## LR(1) items:
memcad_command -> T_check_setexprs T_lparen set_exprs T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_check_setexprs T_lparen set_exprs T_rparen

State 70:
## Known stack suffix:
## set_expr
## LR(1) items:
set_exprs -> set_expr . [ T_rparen ]
set_exprs -> set_expr . T_comma set_exprs [ T_rparen ]
## Transitions:
-- On T_comma shift to state 71
## Reductions:
-- On T_rparen reduce production set_exprs -> set_expr

State 71:
## Known stack suffix:
## set_expr T_comma
## LR(1) items:
set_exprs -> set_expr T_comma . set_exprs [ T_rparen ]
## Transitions:
-- On V_string shift to state 59
-- On setvar shift to state 60
-- On set_exprs shift to state 72
-- On set_expr shift to state 70
-- On c_var shift to state 8
-- On c_lval shift to state 73
## Reductions:
-- On T_rparen reduce production set_exprs ->

State 72:
## Known stack suffix:
## set_expr T_comma set_exprs
## LR(1) items:
set_exprs -> set_expr T_comma set_exprs . [ T_rparen ]
## Transitions:
## Reductions:
-- On T_rparen reduce production set_exprs -> set_expr T_comma set_exprs

State 73:
## Known stack suffix:
## c_lval
## LR(1) items:
c_lval -> c_lval . T_arrow V_string [ T_setin T_arrow ]
set_expr -> c_lval . T_setin setvar [ T_rparen T_comma ]
## Transitions:
-- On T_setin shift to state 74
-- On T_arrow shift to state 11
## Reductions:

State 74:
## Known stack suffix:
## c_lval T_setin
## LR(1) items:
set_expr -> c_lval T_setin . setvar [ T_rparen T_comma ]
## Transitions:
-- On V_string shift to state 51
-- On setvar shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## c_lval T_setin setvar
## LR(1) items:
set_expr -> c_lval T_setin setvar . [ T_rparen T_comma ]
## Transitions:
## Reductions:
-- On T_rparen reduce production set_expr -> c_lval T_setin setvar
-- On T_comma reduce production set_expr -> c_lval T_setin setvar

State 76:
## Known stack suffix:
## T_check_segment
## LR(1) items:
memcad_command -> T_check_segment . T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 77
## Reductions:

State 77:
## Known stack suffix:
## T_check_segment T_lparen
## LR(1) items:
memcad_command -> T_check_segment T_lparen . c_lval T_comma indname indparams T_seg c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On V_string shift to state 7
-- On c_var shift to state 8
-- On c_lval shift to state 78
## Reductions:

State 78:
## Known stack suffix:
## T_check_segment T_lparen c_lval
## LR(1) items:
c_lval -> c_lval . T_arrow V_string [ T_comma T_arrow ]
memcad_command -> T_check_segment T_lparen c_lval . T_comma indname indparams T_seg c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On T_comma shift to state 79
-- On T_arrow shift to state 11
## Reductions:

State 79:
## Known stack suffix:
## T_check_segment T_lparen c_lval T_comma
## LR(1) items:
memcad_command -> T_check_segment T_lparen c_lval T_comma . indname indparams T_seg c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On V_string shift to state 80
-- On indname shift to state 81
## Reductions:

State 80:
## Known stack suffix:
## V_string
## LR(1) items:
indname -> V_string . [ T_seg T_rparen T_comma ]
## Transitions:
## Reductions:
-- On T_seg reduce production indname -> V_string
-- On T_rparen reduce production indname -> V_string
-- On T_comma reduce production indname -> V_string

State 81:
## Known stack suffix:
## T_check_segment T_lparen c_lval T_comma indname
## LR(1) items:
memcad_command -> T_check_segment T_lparen c_lval T_comma indname . indparams T_seg c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On T_comma shift to state 82
-- On indparams shift to state 98
## Reductions:
-- On T_seg reduce production indparams ->

State 82:
## Known stack suffix:
## T_comma
## LR(1) items:
indparams -> T_comma . T_lbrack lparams T_pipe lparams T_pipe lparams_set T_rbrack [ T_seg T_rparen ]
## Transitions:
-- On T_lbrack shift to state 83
## Reductions:

State 83:
## Known stack suffix:
## T_comma T_lbrack
## LR(1) items:
indparams -> T_comma T_lbrack . lparams T_pipe lparams T_pipe lparams_set T_rbrack [ T_seg T_rparen ]
## Transitions:
-- On V_string shift to state 7
-- On V_int shift to state 84
-- On param shift to state 85
-- On lparams shift to state 89
-- On c_var shift to state 8
-- On c_lval shift to state 88
## Reductions:
-- On T_pipe reduce production lparams ->

State 84:
## Known stack suffix:
## V_int
## LR(1) items:
param -> V_int . [ T_rparen T_pipe T_comma ]
## Transitions:
## Reductions:
-- On T_rparen reduce production param -> V_int
-- On T_pipe reduce production param -> V_int
-- On T_comma reduce production param -> V_int

State 85:
## Known stack suffix:
## param
## LR(1) items:
lparams -> param . [ T_pipe ]
lparams -> param . T_comma lparams [ T_pipe ]
## Transitions:
-- On T_comma shift to state 86
## Reductions:
-- On T_pipe reduce production lparams -> param

State 86:
## Known stack suffix:
## param T_comma
## LR(1) items:
lparams -> param T_comma . lparams [ T_pipe ]
## Transitions:
-- On V_string shift to state 7
-- On V_int shift to state 84
-- On param shift to state 85
-- On lparams shift to state 87
-- On c_var shift to state 8
-- On c_lval shift to state 88
## Reductions:
-- On T_pipe reduce production lparams ->

State 87:
## Known stack suffix:
## param T_comma lparams
## LR(1) items:
lparams -> param T_comma lparams . [ T_pipe ]
## Transitions:
## Reductions:
-- On T_pipe reduce production lparams -> param T_comma lparams

State 88:
## Known stack suffix:
## c_lval
## LR(1) items:
c_lval -> c_lval . T_arrow V_string [ T_rparen T_pipe T_comma T_arrow ]
param -> c_lval . [ T_rparen T_pipe T_comma ]
## Transitions:
-- On T_arrow shift to state 11
## Reductions:
-- On T_rparen reduce production param -> c_lval
-- On T_pipe reduce production param -> c_lval
-- On T_comma reduce production param -> c_lval

State 89:
## Known stack suffix:
## T_comma T_lbrack lparams
## LR(1) items:
indparams -> T_comma T_lbrack lparams . T_pipe lparams T_pipe lparams_set T_rbrack [ T_seg T_rparen ]
## Transitions:
-- On T_pipe shift to state 90
## Reductions:

State 90:
## Known stack suffix:
## T_comma T_lbrack lparams T_pipe
## LR(1) items:
indparams -> T_comma T_lbrack lparams T_pipe . lparams T_pipe lparams_set T_rbrack [ T_seg T_rparen ]
## Transitions:
-- On V_string shift to state 7
-- On V_int shift to state 84
-- On param shift to state 85
-- On lparams shift to state 91
-- On c_var shift to state 8
-- On c_lval shift to state 88
## Reductions:
-- On T_pipe reduce production lparams ->

State 91:
## Known stack suffix:
## T_comma T_lbrack lparams T_pipe lparams
## LR(1) items:
indparams -> T_comma T_lbrack lparams T_pipe lparams . T_pipe lparams_set T_rbrack [ T_seg T_rparen ]
## Transitions:
-- On T_pipe shift to state 92
## Reductions:

State 92:
## Known stack suffix:
## T_comma T_lbrack lparams T_pipe lparams T_pipe
## LR(1) items:
indparams -> T_comma T_lbrack lparams T_pipe lparams T_pipe . lparams_set T_rbrack [ T_seg T_rparen ]
## Transitions:
-- On V_string shift to state 51
-- On setvar shift to state 93
-- On lparams_set shift to state 96
## Reductions:
-- On T_rbrack reduce production lparams_set ->

State 93:
## Known stack suffix:
## setvar
## LR(1) items:
lparams_set -> setvar . [ T_rbrack ]
lparams_set -> setvar . T_comma lparams_set [ T_rbrack ]
## Transitions:
-- On T_comma shift to state 94
## Reductions:
-- On T_rbrack reduce production lparams_set -> setvar

State 94:
## Known stack suffix:
## setvar T_comma
## LR(1) items:
lparams_set -> setvar T_comma . lparams_set [ T_rbrack ]
## Transitions:
-- On V_string shift to state 51
-- On setvar shift to state 93
-- On lparams_set shift to state 95
## Reductions:
-- On T_rbrack reduce production lparams_set ->

State 95:
## Known stack suffix:
## setvar T_comma lparams_set
## LR(1) items:
lparams_set -> setvar T_comma lparams_set . [ T_rbrack ]
## Transitions:
## Reductions:
-- On T_rbrack reduce production lparams_set -> setvar T_comma lparams_set

State 96:
## Known stack suffix:
## T_comma T_lbrack lparams T_pipe lparams T_pipe lparams_set
## LR(1) items:
indparams -> T_comma T_lbrack lparams T_pipe lparams T_pipe lparams_set . T_rbrack [ T_seg T_rparen ]
## Transitions:
-- On T_rbrack shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## T_comma T_lbrack lparams T_pipe lparams T_pipe lparams_set T_rbrack
## LR(1) items:
indparams -> T_comma T_lbrack lparams T_pipe lparams T_pipe lparams_set T_rbrack . [ T_seg T_rparen ]
## Transitions:
## Reductions:
-- On T_seg reduce production indparams -> T_comma T_lbrack lparams T_pipe lparams T_pipe lparams_set T_rbrack
-- On T_rparen reduce production indparams -> T_comma T_lbrack lparams T_pipe lparams T_pipe lparams_set T_rbrack

State 98:
## Known stack suffix:
## T_check_segment T_lparen c_lval T_comma indname indparams
## LR(1) items:
memcad_command -> T_check_segment T_lparen c_lval T_comma indname indparams . T_seg c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On T_seg shift to state 99
## Reductions:

State 99:
## Known stack suffix:
## T_check_segment T_lparen c_lval T_comma indname indparams T_seg
## LR(1) items:
memcad_command -> T_check_segment T_lparen c_lval T_comma indname indparams T_seg . c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On V_string shift to state 7
-- On c_var shift to state 8
-- On c_lval shift to state 100
## Reductions:

State 100:
## Known stack suffix:
## T_check_segment T_lparen c_lval T_comma indname indparams T_seg c_lval
## LR(1) items:
c_lval -> c_lval . T_arrow V_string [ T_comma T_arrow ]
memcad_command -> T_check_segment T_lparen c_lval T_comma indname indparams T_seg c_lval . T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On T_comma shift to state 101
-- On T_arrow shift to state 11
## Reductions:

State 101:
## Known stack suffix:
## T_check_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma
## LR(1) items:
memcad_command -> T_check_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma . indname indparams T_rparen [ # ]
## Transitions:
-- On V_string shift to state 80
-- On indname shift to state 102
## Reductions:

State 102:
## Known stack suffix:
## T_check_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma indname
## LR(1) items:
memcad_command -> T_check_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma indname . indparams T_rparen [ # ]
## Transitions:
-- On T_comma shift to state 82
-- On indparams shift to state 103
## Reductions:
-- On T_rparen reduce production indparams ->

State 103:
## Known stack suffix:
## T_check_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma indname indparams
## LR(1) items:
memcad_command -> T_check_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma indname indparams . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 104
## Reductions:

State 104:
## Known stack suffix:
## T_check_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma indname indparams T_rparen
## LR(1) items:
memcad_command -> T_check_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma indname indparams T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_check_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma indname indparams T_rparen

State 105:
## Known stack suffix:
## T_check_inductive
## LR(1) items:
memcad_command -> T_check_inductive . T_lparen c_lval T_rparen [ # ]
memcad_command -> T_check_inductive . T_lparen c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 106
## Reductions:

State 106:
## Known stack suffix:
## T_check_inductive T_lparen
## LR(1) items:
memcad_command -> T_check_inductive T_lparen . c_lval T_rparen [ # ]
memcad_command -> T_check_inductive T_lparen . c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On V_string shift to state 7
-- On c_var shift to state 8
-- On c_lval shift to state 107
## Reductions:

State 107:
## Known stack suffix:
## T_check_inductive T_lparen c_lval
## LR(1) items:
c_lval -> c_lval . T_arrow V_string [ T_rparen T_comma T_arrow ]
memcad_command -> T_check_inductive T_lparen c_lval . T_rparen [ # ]
memcad_command -> T_check_inductive T_lparen c_lval . T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 108
-- On T_comma shift to state 109
-- On T_arrow shift to state 11
## Reductions:

State 108:
## Known stack suffix:
## T_check_inductive T_lparen c_lval T_rparen
## LR(1) items:
memcad_command -> T_check_inductive T_lparen c_lval T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_check_inductive T_lparen c_lval T_rparen

State 109:
## Known stack suffix:
## T_check_inductive T_lparen c_lval T_comma
## LR(1) items:
memcad_command -> T_check_inductive T_lparen c_lval T_comma . indname indparams T_rparen [ # ]
## Transitions:
-- On V_string shift to state 80
-- On indname shift to state 110
## Reductions:

State 110:
## Known stack suffix:
## T_check_inductive T_lparen c_lval T_comma indname
## LR(1) items:
memcad_command -> T_check_inductive T_lparen c_lval T_comma indname . indparams T_rparen [ # ]
## Transitions:
-- On T_comma shift to state 82
-- On indparams shift to state 111
## Reductions:
-- On T_rparen reduce production indparams ->

State 111:
## Known stack suffix:
## T_check_inductive T_lparen c_lval T_comma indname indparams
## LR(1) items:
memcad_command -> T_check_inductive T_lparen c_lval T_comma indname indparams . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 112
## Reductions:

State 112:
## Known stack suffix:
## T_check_inductive T_lparen c_lval T_comma indname indparams T_rparen
## LR(1) items:
memcad_command -> T_check_inductive T_lparen c_lval T_comma indname indparams T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_check_inductive T_lparen c_lval T_comma indname indparams T_rparen

State 113:
## Known stack suffix:
## T_check_bottomness
## LR(1) items:
memcad_command -> T_check_bottomness . T_lparen V_bool T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 114
## Reductions:

State 114:
## Known stack suffix:
## T_check_bottomness T_lparen
## LR(1) items:
memcad_command -> T_check_bottomness T_lparen . V_bool T_rparen [ # ]
## Transitions:
-- On V_bool shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## T_check_bottomness T_lparen V_bool
## LR(1) items:
memcad_command -> T_check_bottomness T_lparen V_bool . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 116
## Reductions:

State 116:
## Known stack suffix:
## T_check_bottomness T_lparen V_bool T_rparen
## LR(1) items:
memcad_command -> T_check_bottomness T_lparen V_bool T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_check_bottomness T_lparen V_bool T_rparen

State 117:
## Known stack suffix:
## T_assume
## LR(1) items:
memcad_command -> T_assume . T_lparen num_exprs T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 118
## Reductions:

State 118:
## Known stack suffix:
## T_assume T_lparen
## LR(1) items:
memcad_command -> T_assume T_lparen . num_exprs T_rparen [ # ]
## Transitions:
-- On V_string shift to state 7
-- On num_exprs shift to state 119
-- On num_expr shift to state 121
-- On c_var shift to state 8
-- On c_lval shift to state 124
## Reductions:
-- On T_rparen reduce production num_exprs ->

State 119:
## Known stack suffix:
## T_assume T_lparen num_exprs
## LR(1) items:
memcad_command -> T_assume T_lparen num_exprs . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 120
## Reductions:

State 120:
## Known stack suffix:
## T_assume T_lparen num_exprs T_rparen
## LR(1) items:
memcad_command -> T_assume T_lparen num_exprs T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_assume T_lparen num_exprs T_rparen

State 121:
## Known stack suffix:
## num_expr
## LR(1) items:
num_exprs -> num_expr . [ T_rparen ]
num_exprs -> num_expr . T_comma num_exprs [ T_rparen ]
## Transitions:
-- On T_comma shift to state 122
## Reductions:
-- On T_rparen reduce production num_exprs -> num_expr

State 122:
## Known stack suffix:
## num_expr T_comma
## LR(1) items:
num_exprs -> num_expr T_comma . num_exprs [ T_rparen ]
## Transitions:
-- On V_string shift to state 7
-- On num_exprs shift to state 123
-- On num_expr shift to state 121
-- On c_var shift to state 8
-- On c_lval shift to state 124
## Reductions:
-- On T_rparen reduce production num_exprs ->

State 123:
## Known stack suffix:
## num_expr T_comma num_exprs
## LR(1) items:
num_exprs -> num_expr T_comma num_exprs . [ T_rparen ]
## Transitions:
## Reductions:
-- On T_rparen reduce production num_exprs -> num_expr T_comma num_exprs

State 124:
## Known stack suffix:
## c_lval
## LR(1) items:
c_lval -> c_lval . T_arrow V_string [ T_ne T_lt T_le T_gt T_ge T_eq T_arrow ]
num_expr -> c_lval . T_eq param [ T_rparen T_comma ]
num_expr -> c_lval . T_ne param [ T_rparen T_comma ]
num_expr -> c_lval . T_lt param [ T_rparen T_comma ]
num_expr -> c_lval . T_gt param [ T_rparen T_comma ]
num_expr -> c_lval . T_le param [ T_rparen T_comma ]
num_expr -> c_lval . T_ge param [ T_rparen T_comma ]
## Transitions:
-- On T_ne shift to state 125
-- On T_lt shift to state 127
-- On T_le shift to state 129
-- On T_gt shift to state 131
-- On T_ge shift to state 133
-- On T_eq shift to state 135
-- On T_arrow shift to state 11
## Reductions:

State 125:
## Known stack suffix:
## c_lval T_ne
## LR(1) items:
num_expr -> c_lval T_ne . param [ T_rparen T_comma ]
## Transitions:
-- On V_string shift to state 7
-- On V_int shift to state 84
-- On param shift to state 126
-- On c_var shift to state 8
-- On c_lval shift to state 88
## Reductions:

State 126:
## Known stack suffix:
## c_lval T_ne param
## LR(1) items:
num_expr -> c_lval T_ne param . [ T_rparen T_comma ]
## Transitions:
## Reductions:
-- On T_rparen reduce production num_expr -> c_lval T_ne param
-- On T_comma reduce production num_expr -> c_lval T_ne param

State 127:
## Known stack suffix:
## c_lval T_lt
## LR(1) items:
num_expr -> c_lval T_lt . param [ T_rparen T_comma ]
## Transitions:
-- On V_string shift to state 7
-- On V_int shift to state 84
-- On param shift to state 128
-- On c_var shift to state 8
-- On c_lval shift to state 88
## Reductions:

State 128:
## Known stack suffix:
## c_lval T_lt param
## LR(1) items:
num_expr -> c_lval T_lt param . [ T_rparen T_comma ]
## Transitions:
## Reductions:
-- On T_rparen reduce production num_expr -> c_lval T_lt param
-- On T_comma reduce production num_expr -> c_lval T_lt param

State 129:
## Known stack suffix:
## c_lval T_le
## LR(1) items:
num_expr -> c_lval T_le . param [ T_rparen T_comma ]
## Transitions:
-- On V_string shift to state 7
-- On V_int shift to state 84
-- On param shift to state 130
-- On c_var shift to state 8
-- On c_lval shift to state 88
## Reductions:

State 130:
## Known stack suffix:
## c_lval T_le param
## LR(1) items:
num_expr -> c_lval T_le param . [ T_rparen T_comma ]
## Transitions:
## Reductions:
-- On T_rparen reduce production num_expr -> c_lval T_le param
-- On T_comma reduce production num_expr -> c_lval T_le param

State 131:
## Known stack suffix:
## c_lval T_gt
## LR(1) items:
num_expr -> c_lval T_gt . param [ T_rparen T_comma ]
## Transitions:
-- On V_string shift to state 7
-- On V_int shift to state 84
-- On param shift to state 132
-- On c_var shift to state 8
-- On c_lval shift to state 88
## Reductions:

State 132:
## Known stack suffix:
## c_lval T_gt param
## LR(1) items:
num_expr -> c_lval T_gt param . [ T_rparen T_comma ]
## Transitions:
## Reductions:
-- On T_rparen reduce production num_expr -> c_lval T_gt param
-- On T_comma reduce production num_expr -> c_lval T_gt param

State 133:
## Known stack suffix:
## c_lval T_ge
## LR(1) items:
num_expr -> c_lval T_ge . param [ T_rparen T_comma ]
## Transitions:
-- On V_string shift to state 7
-- On V_int shift to state 84
-- On param shift to state 134
-- On c_var shift to state 8
-- On c_lval shift to state 88
## Reductions:

State 134:
## Known stack suffix:
## c_lval T_ge param
## LR(1) items:
num_expr -> c_lval T_ge param . [ T_rparen T_comma ]
## Transitions:
## Reductions:
-- On T_rparen reduce production num_expr -> c_lval T_ge param
-- On T_comma reduce production num_expr -> c_lval T_ge param

State 135:
## Known stack suffix:
## c_lval T_eq
## LR(1) items:
num_expr -> c_lval T_eq . param [ T_rparen T_comma ]
## Transitions:
-- On V_string shift to state 7
-- On V_int shift to state 84
-- On param shift to state 136
-- On c_var shift to state 8
-- On c_lval shift to state 88
## Reductions:

State 136:
## Known stack suffix:
## c_lval T_eq param
## LR(1) items:
num_expr -> c_lval T_eq param . [ T_rparen T_comma ]
## Transitions:
## Reductions:
-- On T_rparen reduce production num_expr -> c_lval T_eq param
-- On T_comma reduce production num_expr -> c_lval T_eq param

State 137:
## Known stack suffix:
## T_array_check
## LR(1) items:
memcad_command -> T_array_check . V_astring [ # ]
## Transitions:
-- On V_astring shift to state 138
## Reductions:

State 138:
## Known stack suffix:
## T_array_check V_astring
## LR(1) items:
memcad_command -> T_array_check V_astring . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_array_check V_astring

State 139:
## Known stack suffix:
## T_array_assume
## LR(1) items:
memcad_command -> T_array_assume . V_astring [ # ]
## Transitions:
-- On V_astring shift to state 140
## Reductions:

State 140:
## Known stack suffix:
## T_array_assume V_astring
## LR(1) items:
memcad_command -> T_array_assume V_astring . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_array_assume V_astring

State 141:
## Known stack suffix:
## T_add_setexprs
## LR(1) items:
memcad_command -> T_add_setexprs . T_lparen set_exprs T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 142
## Reductions:

State 142:
## Known stack suffix:
## T_add_setexprs T_lparen
## LR(1) items:
memcad_command -> T_add_setexprs T_lparen . set_exprs T_rparen [ # ]
## Transitions:
-- On V_string shift to state 59
-- On setvar shift to state 60
-- On set_exprs shift to state 143
-- On set_expr shift to state 70
-- On c_var shift to state 8
-- On c_lval shift to state 73
## Reductions:
-- On T_rparen reduce production set_exprs ->

State 143:
## Known stack suffix:
## T_add_setexprs T_lparen set_exprs
## LR(1) items:
memcad_command -> T_add_setexprs T_lparen set_exprs . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 144
## Reductions:

State 144:
## Known stack suffix:
## T_add_setexprs T_lparen set_exprs T_rparen
## LR(1) items:
memcad_command -> T_add_setexprs T_lparen set_exprs T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_add_setexprs T_lparen set_exprs T_rparen

State 145:
## Known stack suffix:
## T_add_segment
## LR(1) items:
memcad_command -> T_add_segment . T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## T_add_segment T_lparen
## LR(1) items:
memcad_command -> T_add_segment T_lparen . c_lval T_comma indname indparams T_seg c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On V_string shift to state 7
-- On c_var shift to state 8
-- On c_lval shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## T_add_segment T_lparen c_lval
## LR(1) items:
c_lval -> c_lval . T_arrow V_string [ T_comma T_arrow ]
memcad_command -> T_add_segment T_lparen c_lval . T_comma indname indparams T_seg c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On T_comma shift to state 148
-- On T_arrow shift to state 11
## Reductions:

State 148:
## Known stack suffix:
## T_add_segment T_lparen c_lval T_comma
## LR(1) items:
memcad_command -> T_add_segment T_lparen c_lval T_comma . indname indparams T_seg c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On V_string shift to state 80
-- On indname shift to state 149
## Reductions:

State 149:
## Known stack suffix:
## T_add_segment T_lparen c_lval T_comma indname
## LR(1) items:
memcad_command -> T_add_segment T_lparen c_lval T_comma indname . indparams T_seg c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On T_comma shift to state 82
-- On indparams shift to state 150
## Reductions:
-- On T_seg reduce production indparams ->

State 150:
## Known stack suffix:
## T_add_segment T_lparen c_lval T_comma indname indparams
## LR(1) items:
memcad_command -> T_add_segment T_lparen c_lval T_comma indname indparams . T_seg c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On T_seg shift to state 151
## Reductions:

State 151:
## Known stack suffix:
## T_add_segment T_lparen c_lval T_comma indname indparams T_seg
## LR(1) items:
memcad_command -> T_add_segment T_lparen c_lval T_comma indname indparams T_seg . c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On V_string shift to state 7
-- On c_var shift to state 8
-- On c_lval shift to state 152
## Reductions:

State 152:
## Known stack suffix:
## T_add_segment T_lparen c_lval T_comma indname indparams T_seg c_lval
## LR(1) items:
c_lval -> c_lval . T_arrow V_string [ T_comma T_arrow ]
memcad_command -> T_add_segment T_lparen c_lval T_comma indname indparams T_seg c_lval . T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On T_comma shift to state 153
-- On T_arrow shift to state 11
## Reductions:

State 153:
## Known stack suffix:
## T_add_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma
## LR(1) items:
memcad_command -> T_add_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma . indname indparams T_rparen [ # ]
## Transitions:
-- On V_string shift to state 80
-- On indname shift to state 154
## Reductions:

State 154:
## Known stack suffix:
## T_add_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma indname
## LR(1) items:
memcad_command -> T_add_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma indname . indparams T_rparen [ # ]
## Transitions:
-- On T_comma shift to state 82
-- On indparams shift to state 155
## Reductions:
-- On T_rparen reduce production indparams ->

State 155:
## Known stack suffix:
## T_add_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma indname indparams
## LR(1) items:
memcad_command -> T_add_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma indname indparams . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 156
## Reductions:

State 156:
## Known stack suffix:
## T_add_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma indname indparams T_rparen
## LR(1) items:
memcad_command -> T_add_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma indname indparams T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_add_segment T_lparen c_lval T_comma indname indparams T_seg c_lval T_comma indname indparams T_rparen

State 157:
## Known stack suffix:
## T_add_inductive
## LR(1) items:
memcad_command -> T_add_inductive . T_lparen c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On T_lparen shift to state 158
## Reductions:

State 158:
## Known stack suffix:
## T_add_inductive T_lparen
## LR(1) items:
memcad_command -> T_add_inductive T_lparen . c_lval T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On V_string shift to state 7
-- On c_var shift to state 8
-- On c_lval shift to state 159
## Reductions:

State 159:
## Known stack suffix:
## T_add_inductive T_lparen c_lval
## LR(1) items:
c_lval -> c_lval . T_arrow V_string [ T_comma T_arrow ]
memcad_command -> T_add_inductive T_lparen c_lval . T_comma indname indparams T_rparen [ # ]
## Transitions:
-- On T_comma shift to state 160
-- On T_arrow shift to state 11
## Reductions:

State 160:
## Known stack suffix:
## T_add_inductive T_lparen c_lval T_comma
## LR(1) items:
memcad_command -> T_add_inductive T_lparen c_lval T_comma . indname indparams T_rparen [ # ]
## Transitions:
-- On V_string shift to state 80
-- On indname shift to state 161
## Reductions:

State 161:
## Known stack suffix:
## T_add_inductive T_lparen c_lval T_comma indname
## LR(1) items:
memcad_command -> T_add_inductive T_lparen c_lval T_comma indname . indparams T_rparen [ # ]
## Transitions:
-- On T_comma shift to state 82
-- On indparams shift to state 162
## Reductions:
-- On T_rparen reduce production indparams ->

State 162:
## Known stack suffix:
## T_add_inductive T_lparen c_lval T_comma indname indparams
## LR(1) items:
memcad_command -> T_add_inductive T_lparen c_lval T_comma indname indparams . T_rparen [ # ]
## Transitions:
-- On T_rparen shift to state 163
## Reductions:

State 163:
## Known stack suffix:
## T_add_inductive T_lparen c_lval T_comma indname indparams T_rparen
## LR(1) items:
memcad_command -> T_add_inductive T_lparen c_lval T_comma indname indparams T_rparen . [ # ]
## Transitions:
## Reductions:
-- On # reduce production memcad_command -> T_add_inductive T_lparen c_lval T_comma indname indparams T_rparen

State 164:
## Known stack suffix:
## memcad_command
## LR(1) items:
memcad_command' -> memcad_command . [ # ]
## Transitions:
## Reductions:
-- On # accept memcad_command

