State 0:
## Known stack suffix:
##
## LR(1) items:
implementation' -> . implementation [ # ]
## Transitions:
-- On VAL shift to state 1
-- On OPEN shift to state 456
-- On DATA shift to state 458
-- On ALIAS shift to state 460
-- On ABSTRACT shift to state 462
-- On list(implementation_item) shift to state 464
-- On implementation_item shift to state 466
-- On implementation shift to state 469
-- On definition_group shift to state 468
## Reductions:
-- On EOF
--   reduce production list(implementation_item) ->

State 1:
## Known stack suffix:
## VAL
## LR(1) items:
definition_group -> VAL . rec_flag loption(separated_nonempty_list(AND,definition)) [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On REC shift to state 2
-- On rec_flag shift to state 3
## Reductions:
-- On VAL UNDERSCORE UIDENT OPEN LPAREN LIDENT EOF DATA ALIAS ABSTRACT
--   reduce production rec_flag ->

State 2:
## Known stack suffix:
## REC
## LR(1) items:
rec_flag -> REC . [ VAL UNDERSCORE UIDENT OPEN LPAREN LIDENT IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rec_flag -> REC

State 3:
## Known stack suffix:
## VAL rec_flag
## LR(1) items:
definition_group -> VAL rec_flag . loption(separated_nonempty_list(AND,definition)) [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On UNDERSCORE shift to state 4
-- On UIDENT shift to state 5
-- On LPAREN shift to state 6
-- On LIDENT shift to state 32
-- On variable shift to state 39
-- On separated_nonempty_list(AND,definition) shift to state 177
-- On raw_normal_pattern shift to state 178
-- On raw_atomic_pattern shift to state 160
-- On maybe_qualified(datacon) shift to state 166
-- On loption(separated_nonempty_list(AND,definition)) shift to state 455
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_pattern)) shift to state 171
-- On definition shift to state 409
## Reductions:
-- On VAL OPEN EOF DATA ALIAS ABSTRACT
--   reduce production loption(separated_nonempty_list(AND,definition)) ->

State 4:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
raw_atomic_pattern -> UNDERSCORE . [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_pattern -> UNDERSCORE

State 5:
## Known stack suffix:
## UIDENT
## LR(1) items:
maybe_qualified(datacon) -> UIDENT . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LBRACE LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production maybe_qualified(datacon) -> UIDENT

State 6:
## Known stack suffix:
## LPAREN
## LR(1) items:
raw_atomic_pattern -> LPAREN . RPAREN [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
raw_atomic_pattern -> LPAREN . raw_loose_pattern RPAREN [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
variable -> LPAREN . OPPREFIX RPAREN [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
variable -> LPAREN . OPINFIX0a RPAREN [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
variable -> LPAREN . OPINFIX0b RPAREN [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
variable -> LPAREN . OPINFIX0c RPAREN [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
variable -> LPAREN . OPINFIX0d RPAREN [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
variable -> LPAREN . OPINFIX1 RPAREN [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
variable -> LPAREN . OPINFIX2 RPAREN [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
variable -> LPAREN . OPINFIX3 RPAREN [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
variable -> LPAREN . OPINFIX4 RPAREN [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
variable -> LPAREN . EQUAL RPAREN [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
variable -> LPAREN . STAR RPAREN [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
variable -> LPAREN . MINUS RPAREN [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
variable -> LPAREN . PLUS RPAREN [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
variable -> LPAREN . COLONEQUAL RPAREN [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
## Transitions:
-- On UNDERSCORE shift to state 4
-- On UIDENT shift to state 5
-- On STAR shift to state 7
-- On RPAREN shift to state 9
-- On PLUS shift to state 10
-- On OPPREFIX shift to state 12
-- On OPINFIX4 shift to state 14
-- On OPINFIX3 shift to state 16
-- On OPINFIX2 shift to state 18
-- On OPINFIX1 shift to state 20
-- On OPINFIX0d shift to state 22
-- On OPINFIX0c shift to state 24
-- On OPINFIX0b shift to state 26
-- On OPINFIX0a shift to state 28
-- On MINUS shift to state 30
-- On LPAREN shift to state 6
-- On LIDENT shift to state 32
-- On EQUAL shift to state 35
-- On COLONEQUAL shift to state 37
-- On variable shift to state 39
-- On raw_normal_pattern shift to state 40
-- On raw_loose_pattern shift to state 45
-- On raw_atomic_pattern shift to state 160
-- On maybe_qualified(datacon) shift to state 166
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_pattern)) shift to state 171
## Reductions:

State 7:
## Known stack suffix:
## LPAREN STAR
## LR(1) items:
variable -> LPAREN STAR . RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RPAREN shift to state 8
## Reductions:

State 8:
## Known stack suffix:
## LPAREN STAR RPAREN
## LR(1) items:
variable -> LPAREN STAR RPAREN . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable -> LPAREN STAR RPAREN

State 9:
## Known stack suffix:
## LPAREN RPAREN
## LR(1) items:
raw_atomic_pattern -> LPAREN RPAREN . [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_pattern -> LPAREN RPAREN

State 10:
## Known stack suffix:
## LPAREN PLUS
## LR(1) items:
variable -> LPAREN PLUS . RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RPAREN shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## LPAREN PLUS RPAREN
## LR(1) items:
variable -> LPAREN PLUS RPAREN . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable -> LPAREN PLUS RPAREN

State 12:
## Known stack suffix:
## LPAREN OPPREFIX
## LR(1) items:
variable -> LPAREN OPPREFIX . RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RPAREN shift to state 13
## Reductions:

State 13:
## Known stack suffix:
## LPAREN OPPREFIX RPAREN
## LR(1) items:
variable -> LPAREN OPPREFIX RPAREN . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable -> LPAREN OPPREFIX RPAREN

State 14:
## Known stack suffix:
## LPAREN OPINFIX4
## LR(1) items:
variable -> LPAREN OPINFIX4 . RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RPAREN shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## LPAREN OPINFIX4 RPAREN
## LR(1) items:
variable -> LPAREN OPINFIX4 RPAREN . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable -> LPAREN OPINFIX4 RPAREN

State 16:
## Known stack suffix:
## LPAREN OPINFIX3
## LR(1) items:
variable -> LPAREN OPINFIX3 . RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RPAREN shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## LPAREN OPINFIX3 RPAREN
## LR(1) items:
variable -> LPAREN OPINFIX3 RPAREN . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable -> LPAREN OPINFIX3 RPAREN

State 18:
## Known stack suffix:
## LPAREN OPINFIX2
## LR(1) items:
variable -> LPAREN OPINFIX2 . RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RPAREN shift to state 19
## Reductions:

State 19:
## Known stack suffix:
## LPAREN OPINFIX2 RPAREN
## LR(1) items:
variable -> LPAREN OPINFIX2 RPAREN . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable -> LPAREN OPINFIX2 RPAREN

State 20:
## Known stack suffix:
## LPAREN OPINFIX1
## LR(1) items:
variable -> LPAREN OPINFIX1 . RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RPAREN shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## LPAREN OPINFIX1 RPAREN
## LR(1) items:
variable -> LPAREN OPINFIX1 RPAREN . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable -> LPAREN OPINFIX1 RPAREN

State 22:
## Known stack suffix:
## LPAREN OPINFIX0d
## LR(1) items:
variable -> LPAREN OPINFIX0d . RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RPAREN shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## LPAREN OPINFIX0d RPAREN
## LR(1) items:
variable -> LPAREN OPINFIX0d RPAREN . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable -> LPAREN OPINFIX0d RPAREN

State 24:
## Known stack suffix:
## LPAREN OPINFIX0c
## LR(1) items:
variable -> LPAREN OPINFIX0c . RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RPAREN shift to state 25
## Reductions:

State 25:
## Known stack suffix:
## LPAREN OPINFIX0c RPAREN
## LR(1) items:
variable -> LPAREN OPINFIX0c RPAREN . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable -> LPAREN OPINFIX0c RPAREN

State 26:
## Known stack suffix:
## LPAREN OPINFIX0b
## LR(1) items:
variable -> LPAREN OPINFIX0b . RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RPAREN shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## LPAREN OPINFIX0b RPAREN
## LR(1) items:
variable -> LPAREN OPINFIX0b RPAREN . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable -> LPAREN OPINFIX0b RPAREN

State 28:
## Known stack suffix:
## LPAREN OPINFIX0a
## LR(1) items:
variable -> LPAREN OPINFIX0a . RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RPAREN shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## LPAREN OPINFIX0a RPAREN
## LR(1) items:
variable -> LPAREN OPINFIX0a RPAREN . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable -> LPAREN OPINFIX0a RPAREN

State 30:
## Known stack suffix:
## LPAREN MINUS
## LR(1) items:
variable -> LPAREN MINUS . RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RPAREN shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## LPAREN MINUS RPAREN
## LR(1) items:
variable -> LPAREN MINUS RPAREN . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable -> LPAREN MINUS RPAREN

State 32:
## Known stack suffix:
## LIDENT
## LR(1) items:
maybe_qualified(datacon) -> LIDENT . COLONCOLON UIDENT [ SEMI RPAREN RBRACE LPAREN LBRACKET LBRACE EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
variable -> LIDENT . [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
## Transitions:
-- On COLONCOLON shift to state 33
## Reductions:
-- On SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW
--   reduce production variable -> LIDENT

State 33:
## Known stack suffix:
## LIDENT COLONCOLON
## LR(1) items:
maybe_qualified(datacon) -> LIDENT COLONCOLON . UIDENT [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN LPAREN LBRACKET LBRACE IN FROM EXCLUSIVE EQUAL EOF END ELSE DUPLICABLE DOWNTO DO DATA COMMA COLON BELOW BAR AS ARROW AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 34
## Reductions:

State 34:
## Known stack suffix:
## LIDENT COLONCOLON UIDENT
## LR(1) items:
maybe_qualified(datacon) -> LIDENT COLONCOLON UIDENT . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LBRACE LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production maybe_qualified(datacon) -> LIDENT COLONCOLON UIDENT

State 35:
## Known stack suffix:
## LPAREN EQUAL
## LR(1) items:
variable -> LPAREN EQUAL . RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RPAREN shift to state 36
## Reductions:

State 36:
## Known stack suffix:
## LPAREN EQUAL RPAREN
## LR(1) items:
variable -> LPAREN EQUAL RPAREN . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable -> LPAREN EQUAL RPAREN

State 37:
## Known stack suffix:
## LPAREN COLONEQUAL
## LR(1) items:
variable -> LPAREN COLONEQUAL . RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RPAREN shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## LPAREN COLONEQUAL RPAREN
## LR(1) items:
variable -> LPAREN COLONEQUAL RPAREN . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable -> LPAREN COLONEQUAL RPAREN

State 39:
## Known stack suffix:
## variable
## LR(1) items:
raw_atomic_pattern -> variable . [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_pattern -> variable

State 40:
## Known stack suffix:
## raw_normal_pattern
## LR(1) items:
raw_loose_pattern -> raw_normal_pattern . [ SEMI RPAREN RBRACE COLON ]
raw_normal_pattern -> raw_normal_pattern . AS variable [ SEMI RPAREN RBRACE COLON AS ]
## Transitions:
-- On AS shift to state 41
## Reductions:
-- On SEMI RPAREN RBRACE COLON
--   reduce production raw_loose_pattern -> raw_normal_pattern

State 41:
## Known stack suffix:
## raw_normal_pattern AS
## LR(1) items:
raw_normal_pattern -> raw_normal_pattern AS . variable [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COLON AS ARROW ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 44
## Reductions:

State 42:
## Known stack suffix:
## LPAREN
## LR(1) items:
variable -> LPAREN . OPPREFIX RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX0a RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX0b RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX0c RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX0d RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX1 RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX2 RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX3 RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX4 RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . EQUAL RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . STAR RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . MINUS RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . PLUS RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . COLONEQUAL RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On STAR shift to state 7
-- On PLUS shift to state 10
-- On OPPREFIX shift to state 12
-- On OPINFIX4 shift to state 14
-- On OPINFIX3 shift to state 16
-- On OPINFIX2 shift to state 18
-- On OPINFIX1 shift to state 20
-- On OPINFIX0d shift to state 22
-- On OPINFIX0c shift to state 24
-- On OPINFIX0b shift to state 26
-- On OPINFIX0a shift to state 28
-- On MINUS shift to state 30
-- On EQUAL shift to state 35
-- On COLONEQUAL shift to state 37
## Reductions:

State 43:
## Known stack suffix:
## LIDENT
## LR(1) items:
variable -> LIDENT . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EXCLUSIVE EQUAL EOF END EMPTY ELSE DYNAMIC DUPLICABLE DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLONCOLON COLON BELOW BEGIN BAR AT AS ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable -> LIDENT

State 44:
## Known stack suffix:
## raw_normal_pattern AS variable
## LR(1) items:
raw_normal_pattern -> raw_normal_pattern AS variable . [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COLON AS ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_normal_pattern -> raw_normal_pattern AS variable

State 45:
## Known stack suffix:
## LPAREN raw_loose_pattern
## LR(1) items:
raw_atomic_pattern -> LPAREN raw_loose_pattern . RPAREN [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
raw_loose_pattern -> raw_loose_pattern . COLON raw_normal_type [ RPAREN COLON ]
## Transitions:
-- On RPAREN shift to state 46
-- On COLON shift to state 47
## Reductions:

State 46:
## Known stack suffix:
## LPAREN raw_loose_pattern RPAREN
## LR(1) items:
raw_atomic_pattern -> LPAREN raw_loose_pattern RPAREN . [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_pattern -> LPAREN raw_loose_pattern RPAREN

State 47:
## Known stack suffix:
## raw_loose_pattern COLON
## LR(1) items:
raw_loose_pattern -> raw_loose_pattern COLON . raw_normal_type [ SEMI RPAREN RBRACE COLON ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 87
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 159
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 48:
## Known stack suffix:
## UNKNOWN
## LR(1) items:
raw_atomic_type -> UNKNOWN . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_type -> UNKNOWN

State 49:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
raw_atomic_type -> UNDERSCORE . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_type -> UNDERSCORE

State 50:
## Known stack suffix:
## LPAREN
## LR(1) items:
raw_parenthetic_type -> LPAREN . RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_parenthetic_type -> LPAREN . raw_fat_type RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPPREFIX RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX0a RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX0b RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX0c RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX0d RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX1 RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX2 RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX3 RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX4 RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . EQUAL RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . STAR RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . MINUS RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . PLUS RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . COLONEQUAL RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On STAR shift to state 7
-- On RPAREN shift to state 148
-- On PLUS shift to state 10
-- On OPPREFIX shift to state 12
-- On OPINFIX4 shift to state 14
-- On OPINFIX3 shift to state 16
-- On OPINFIX2 shift to state 18
-- On OPINFIX1 shift to state 20
-- On OPINFIX0d shift to state 22
-- On OPINFIX0c shift to state 24
-- On OPINFIX0b shift to state 26
-- On OPINFIX0a shift to state 28
-- On MINUS shift to state 30
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 149
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On CONSUMES shift to state 118
-- On COLONEQUAL shift to state 37
-- On BAR shift to state 150
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On raw_very_loose_type shift to state 152
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 130
-- On raw_fat_type shift to state 153
-- On raw_consumes_type shift to state 131
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 51:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
raw_atomic_type -> UNDERSCORE . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACE OPEN LPAREN LIDENT IN FROM FOR EOF END EMPTY ELSE DYNAMIC DOWNTO DO DATA COMMA BELOW BAR ARROW AND ALIAS ABSTRACT ABOVE ]
raw_loose_type -> UNDERSCORE . COLON raw_normal_type [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA COMMA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On COLON shift to state 52
## Reductions:
-- On WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACE OPEN LPAREN LIDENT IN FROM FOR EOF END EMPTY ELSE DYNAMIC DOWNTO DO DATA COMMA BELOW BAR ARROW AND ALIAS ABSTRACT ABOVE
--   reduce production raw_atomic_type -> UNDERSCORE

State 52:
## Known stack suffix:
## UNDERSCORE COLON
## LR(1) items:
raw_loose_type -> UNDERSCORE COLON . raw_normal_type [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA COMMA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 87
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 147
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 53:
## Known stack suffix:
## LIDENT
## LR(1) items:
maybe_qualified(datacon) -> LIDENT . COLONCOLON UIDENT [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LBRACE LARROW INT IN FROM FOR FAIL FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
maybe_qualified(variable) -> LIDENT . COLONCOLON variable [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LIDENT . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On COLONCOLON shift to state 54
## Reductions:
-- On WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production variable -> LIDENT

State 54:
## Known stack suffix:
## LIDENT COLONCOLON
## LR(1) items:
maybe_qualified(datacon) -> LIDENT COLONCOLON . UIDENT [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LBRACE LARROW INT IN FROM FOR FAIL FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
maybe_qualified(variable) -> LIDENT COLONCOLON . variable [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 34
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 55
## Reductions:

State 55:
## Known stack suffix:
## LIDENT COLONCOLON variable
## LR(1) items:
maybe_qualified(variable) -> LIDENT COLONCOLON variable . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production maybe_qualified(variable) -> LIDENT COLONCOLON variable

State 56:
## Known stack suffix:
## LBRACKET
## LR(1) items:
type_parameters -> LBRACKET . right_flexible_list(COMMA,type_binding) RBRACKET [ UNKNOWN UNDERSCORE UIDENT LPAREN LIDENT LBRACKET LBRACE EXCLUSIVE EQUAL EMPTY DYNAMIC DUPLICABLE ]
## Transitions:
-- On LPAREN shift to state 57
-- On LIDENT shift to state 43
-- On variable shift to state 58
-- On type_binding shift to state 70
-- On right_flexible_list(COMMA,type_binding) shift to state 73
-- On atomic_type_binding shift to state 69
## Reductions:
-- On RBRACKET
--   reduce production right_flexible_list(COMMA,type_binding) ->

State 57:
## Known stack suffix:
## LPAREN
## LR(1) items:
atomic_type_binding -> LPAREN . type_binding RPAREN [ VAL RPAREN RBRACKET RBRACE PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COMMA COLON ALIAS ABSTRACT ]
variable -> LPAREN . OPPREFIX RPAREN [ VAL RPAREN RBRACKET RBRACE PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COMMA COLON ALIAS ABSTRACT ]
variable -> LPAREN . OPINFIX0a RPAREN [ VAL RPAREN RBRACKET RBRACE PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COMMA COLON ALIAS ABSTRACT ]
variable -> LPAREN . OPINFIX0b RPAREN [ VAL RPAREN RBRACKET RBRACE PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COMMA COLON ALIAS ABSTRACT ]
variable -> LPAREN . OPINFIX0c RPAREN [ VAL RPAREN RBRACKET RBRACE PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COMMA COLON ALIAS ABSTRACT ]
variable -> LPAREN . OPINFIX0d RPAREN [ VAL RPAREN RBRACKET RBRACE PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COMMA COLON ALIAS ABSTRACT ]
variable -> LPAREN . OPINFIX1 RPAREN [ VAL RPAREN RBRACKET RBRACE PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COMMA COLON ALIAS ABSTRACT ]
variable -> LPAREN . OPINFIX2 RPAREN [ VAL RPAREN RBRACKET RBRACE PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COMMA COLON ALIAS ABSTRACT ]
variable -> LPAREN . OPINFIX3 RPAREN [ VAL RPAREN RBRACKET RBRACE PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COMMA COLON ALIAS ABSTRACT ]
variable -> LPAREN . OPINFIX4 RPAREN [ VAL RPAREN RBRACKET RBRACE PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COMMA COLON ALIAS ABSTRACT ]
variable -> LPAREN . EQUAL RPAREN [ VAL RPAREN RBRACKET RBRACE PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COMMA COLON ALIAS ABSTRACT ]
variable -> LPAREN . STAR RPAREN [ VAL RPAREN RBRACKET RBRACE PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COMMA COLON ALIAS ABSTRACT ]
variable -> LPAREN . MINUS RPAREN [ VAL RPAREN RBRACKET RBRACE PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COMMA COLON ALIAS ABSTRACT ]
variable -> LPAREN . PLUS RPAREN [ VAL RPAREN RBRACKET RBRACE PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COMMA COLON ALIAS ABSTRACT ]
variable -> LPAREN . COLONEQUAL RPAREN [ VAL RPAREN RBRACKET RBRACE PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COMMA COLON ALIAS ABSTRACT ]
## Transitions:
-- On STAR shift to state 7
-- On PLUS shift to state 10
-- On OPPREFIX shift to state 12
-- On OPINFIX4 shift to state 14
-- On OPINFIX3 shift to state 16
-- On OPINFIX2 shift to state 18
-- On OPINFIX1 shift to state 20
-- On OPINFIX0d shift to state 22
-- On OPINFIX0c shift to state 24
-- On OPINFIX0b shift to state 26
-- On OPINFIX0a shift to state 28
-- On MINUS shift to state 30
-- On LPAREN shift to state 57
-- On LIDENT shift to state 43
-- On EQUAL shift to state 35
-- On COLONEQUAL shift to state 37
-- On variable shift to state 58
-- On type_binding shift to state 67
-- On atomic_type_binding shift to state 69
## Reductions:

State 58:
## Known stack suffix:
## variable
## LR(1) items:
atomic_type_binding -> variable . [ RPAREN RBRACKET RBRACE IN COMMA ]
type_binding -> variable . COLON atomic_kind [ RPAREN RBRACKET RBRACE IN COMMA ]
## Transitions:
-- On COLON shift to state 59
## Reductions:
-- On RPAREN RBRACKET RBRACE IN COMMA
--   reduce production atomic_type_binding -> variable

State 59:
## Known stack suffix:
## variable COLON
## LR(1) items:
type_binding -> variable COLON . atomic_kind [ RPAREN RBRACKET RBRACE IN COMMA ]
## Transitions:
-- On VALUE shift to state 60
-- On TYPE shift to state 61
-- On PERM shift to state 62
-- On LPAREN shift to state 63
-- On atomic_kind shift to state 66
## Reductions:

State 60:
## Known stack suffix:
## VALUE
## LR(1) items:
atomic_kind -> VALUE . [ VAL RPAREN RBRACKET RBRACE OPEN IN FACT EQUAL EOF DATA COMMA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atomic_kind -> VALUE

State 61:
## Known stack suffix:
## TYPE
## LR(1) items:
atomic_kind -> TYPE . [ VAL RPAREN RBRACKET RBRACE OPEN IN FACT EQUAL EOF DATA COMMA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atomic_kind -> TYPE

State 62:
## Known stack suffix:
## PERM
## LR(1) items:
atomic_kind -> PERM . [ VAL RPAREN RBRACKET RBRACE OPEN IN FACT EQUAL EOF DATA COMMA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atomic_kind -> PERM

State 63:
## Known stack suffix:
## LPAREN
## LR(1) items:
atomic_kind -> LPAREN . atomic_kind RPAREN [ VAL RPAREN RBRACKET RBRACE OPEN IN FACT EQUAL EOF DATA COMMA ALIAS ABSTRACT ]
## Transitions:
-- On VALUE shift to state 60
-- On TYPE shift to state 61
-- On PERM shift to state 62
-- On LPAREN shift to state 63
-- On atomic_kind shift to state 64
## Reductions:

State 64:
## Known stack suffix:
## LPAREN atomic_kind
## LR(1) items:
atomic_kind -> LPAREN atomic_kind . RPAREN [ VAL RPAREN RBRACKET RBRACE OPEN IN FACT EQUAL EOF DATA COMMA ALIAS ABSTRACT ]
## Transitions:
-- On RPAREN shift to state 65
## Reductions:

State 65:
## Known stack suffix:
## LPAREN atomic_kind RPAREN
## LR(1) items:
atomic_kind -> LPAREN atomic_kind RPAREN . [ VAL RPAREN RBRACKET RBRACE OPEN IN FACT EQUAL EOF DATA COMMA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atomic_kind -> LPAREN atomic_kind RPAREN

State 66:
## Known stack suffix:
## variable COLON atomic_kind
## LR(1) items:
type_binding -> variable COLON atomic_kind . [ RPAREN RBRACKET RBRACE IN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_binding -> variable COLON atomic_kind

State 67:
## Known stack suffix:
## LPAREN type_binding
## LR(1) items:
atomic_type_binding -> LPAREN type_binding . RPAREN [ VAL RPAREN RBRACKET RBRACE PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COMMA COLON ALIAS ABSTRACT ]
## Transitions:
-- On RPAREN shift to state 68
## Reductions:

State 68:
## Known stack suffix:
## LPAREN type_binding RPAREN
## LR(1) items:
atomic_type_binding -> LPAREN type_binding RPAREN . [ VAL RPAREN RBRACKET RBRACE PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COMMA COLON ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atomic_type_binding -> LPAREN type_binding RPAREN

State 69:
## Known stack suffix:
## atomic_type_binding
## LR(1) items:
type_binding -> atomic_type_binding . [ RPAREN RBRACKET RBRACE IN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_binding -> atomic_type_binding

State 70:
## Known stack suffix:
## type_binding
## LR(1) items:
right_flexible_list(COMMA,type_binding) -> type_binding . [ RBRACKET RBRACE ]
right_flexible_list(COMMA,type_binding) -> type_binding . COMMA right_flexible_list(COMMA,type_binding) [ RBRACKET RBRACE ]
## Transitions:
-- On COMMA shift to state 71
## Reductions:
-- On RBRACKET RBRACE
--   reduce production right_flexible_list(COMMA,type_binding) -> type_binding

State 71:
## Known stack suffix:
## type_binding COMMA
## LR(1) items:
right_flexible_list(COMMA,type_binding) -> type_binding COMMA . right_flexible_list(COMMA,type_binding) [ RBRACKET RBRACE ]
## Transitions:
-- On LPAREN shift to state 57
-- On LIDENT shift to state 43
-- On variable shift to state 58
-- On type_binding shift to state 70
-- On right_flexible_list(COMMA,type_binding) shift to state 72
-- On atomic_type_binding shift to state 69
## Reductions:
-- On RBRACKET RBRACE
--   reduce production right_flexible_list(COMMA,type_binding) ->

State 72:
## Known stack suffix:
## type_binding COMMA right_flexible_list(COMMA,type_binding)
## LR(1) items:
right_flexible_list(COMMA,type_binding) -> type_binding COMMA right_flexible_list(COMMA,type_binding) . [ RBRACKET RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production right_flexible_list(COMMA,type_binding) -> type_binding COMMA right_flexible_list(COMMA,type_binding)

State 73:
## Known stack suffix:
## LBRACKET right_flexible_list(COMMA,type_binding)
## LR(1) items:
type_parameters -> LBRACKET right_flexible_list(COMMA,type_binding) . RBRACKET [ UNKNOWN UNDERSCORE UIDENT LPAREN LIDENT LBRACKET LBRACE EXCLUSIVE EQUAL EMPTY DYNAMIC DUPLICABLE ]
## Transitions:
-- On RBRACKET shift to state 74
## Reductions:

State 74:
## Known stack suffix:
## LBRACKET right_flexible_list(COMMA,type_binding) RBRACKET
## LR(1) items:
type_parameters -> LBRACKET right_flexible_list(COMMA,type_binding) RBRACKET . [ UNKNOWN UNDERSCORE UIDENT LPAREN LIDENT LBRACKET LBRACE EXCLUSIVE EQUAL EMPTY DYNAMIC DUPLICABLE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_parameters -> LBRACKET right_flexible_list(COMMA,type_binding) RBRACKET

State 75:
## Known stack suffix:
## LBRACE
## LR(1) items:
existential_quantifiers -> LBRACE . right_flexible_list(COMMA,type_binding) RBRACE [ UNKNOWN UNDERSCORE UIDENT LPAREN LIDENT LBRACKET LBRACE EXCLUSIVE EQUAL EMPTY DYNAMIC DUPLICABLE ]
## Transitions:
-- On LPAREN shift to state 57
-- On LIDENT shift to state 43
-- On variable shift to state 58
-- On type_binding shift to state 70
-- On right_flexible_list(COMMA,type_binding) shift to state 76
-- On atomic_type_binding shift to state 69
## Reductions:
-- On RBRACE
--   reduce production right_flexible_list(COMMA,type_binding) ->

State 76:
## Known stack suffix:
## LBRACE right_flexible_list(COMMA,type_binding)
## LR(1) items:
existential_quantifiers -> LBRACE right_flexible_list(COMMA,type_binding) . RBRACE [ UNKNOWN UNDERSCORE UIDENT LPAREN LIDENT LBRACKET LBRACE EXCLUSIVE EQUAL EMPTY DYNAMIC DUPLICABLE ]
## Transitions:
-- On RBRACE shift to state 77
## Reductions:

State 77:
## Known stack suffix:
## LBRACE right_flexible_list(COMMA,type_binding) RBRACE
## LR(1) items:
existential_quantifiers -> LBRACE right_flexible_list(COMMA,type_binding) RBRACE . [ UNKNOWN UNDERSCORE UIDENT LPAREN LIDENT LBRACKET LBRACE EXCLUSIVE EQUAL EMPTY DYNAMIC DUPLICABLE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production existential_quantifiers -> LBRACE right_flexible_list(COMMA,type_binding) RBRACE

State 78:
## Known stack suffix:
## EXCLUSIVE
## LR(1) items:
mode -> EXCLUSIVE . [ UNKNOWN UNDERSCORE UIDENT LPAREN LIDENT EMPTY DYNAMIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mode -> EXCLUSIVE

State 79:
## Known stack suffix:
## EQUAL
## LR(1) items:
raw_tight_type -> EQUAL . maybe_qualified(variable) [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 80
-- On variable shift to state 82
-- On maybe_qualified(variable) shift to state 83
## Reductions:

State 80:
## Known stack suffix:
## LIDENT
## LR(1) items:
maybe_qualified(variable) -> LIDENT . COLONCOLON variable [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LIDENT . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On COLONCOLON shift to state 81
## Reductions:
-- On WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production variable -> LIDENT

State 81:
## Known stack suffix:
## LIDENT COLONCOLON
## LR(1) items:
maybe_qualified(variable) -> LIDENT COLONCOLON . variable [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 55
## Reductions:

State 82:
## Known stack suffix:
## variable
## LR(1) items:
maybe_qualified(variable) -> variable . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FOR FAIL FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DOT DO DBLARROW DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production maybe_qualified(variable) -> variable

State 83:
## Known stack suffix:
## EQUAL maybe_qualified(variable)
## LR(1) items:
raw_tight_type -> EQUAL maybe_qualified(variable) . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_tight_type -> EQUAL maybe_qualified(variable)

State 84:
## Known stack suffix:
## EMPTY
## LR(1) items:
raw_atomic_type -> EMPTY . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_type -> EMPTY

State 85:
## Known stack suffix:
## DYNAMIC
## LR(1) items:
raw_atomic_type -> DYNAMIC . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_type -> DYNAMIC

State 86:
## Known stack suffix:
## DUPLICABLE
## LR(1) items:
mode -> DUPLICABLE . [ UNKNOWN UNDERSCORE UIDENT LPAREN LIDENT EMPTY DYNAMIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mode -> DUPLICABLE

State 87:
## Known stack suffix:
## type_parameters
## LR(1) items:
raw_normal_type -> type_parameters . raw_normal_type [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN IN FROM FOR EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 87
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 146
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 88:
## Known stack suffix:
## raw_tight_type
## LR(1) items:
raw_normal_type -> raw_tight_type . [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN IN FROM FOR EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_normal_type -> raw_tight_type . ARROW raw_normal_type [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN IN FROM FOR EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_tight_type -> raw_tight_type . raw_atomic_type [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DATA COMMA COLON BELOW BAR ARROW AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On ARROW shift to state 89
-- On variable shift to state 82
-- On raw_parenthetic_type shift to state 90
-- On raw_atomic_type shift to state 145
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 144
## Reductions:
-- On WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN IN FROM FOR EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ABSTRACT ABOVE
--   reduce production raw_normal_type -> raw_tight_type

State 89:
## Known stack suffix:
## raw_tight_type ARROW
## LR(1) items:
raw_normal_type -> raw_tight_type ARROW . raw_normal_type [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN IN FROM FOR EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 87
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 91
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 90:
## Known stack suffix:
## raw_parenthetic_type
## LR(1) items:
raw_atomic_type -> raw_parenthetic_type . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_type -> raw_parenthetic_type

State 91:
## Known stack suffix:
## raw_tight_type ARROW raw_normal_type
## LR(1) items:
raw_normal_type -> raw_tight_type ARROW raw_normal_type . [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN IN FROM FOR EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_normal_type -> raw_tight_type ARROW raw_normal_type

State 92:
## Known stack suffix:
## raw_atomic_type
## LR(1) items:
raw_tight_type -> raw_atomic_type . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_tight_type -> raw_atomic_type

State 93:
## Known stack suffix:
## mode
## LR(1) items:
raw_normal_type -> mode . raw_atomic_type DBLARROW raw_normal_type [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN IN FROM FOR EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On variable shift to state 82
-- On raw_parenthetic_type shift to state 90
-- On raw_atomic_type shift to state 94
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 144
## Reductions:

State 94:
## Known stack suffix:
## mode raw_atomic_type
## LR(1) items:
raw_normal_type -> mode raw_atomic_type . DBLARROW raw_normal_type [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN IN FROM FOR EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On DBLARROW shift to state 95
## Reductions:

State 95:
## Known stack suffix:
## mode raw_atomic_type DBLARROW
## LR(1) items:
raw_normal_type -> mode raw_atomic_type DBLARROW . raw_normal_type [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN IN FROM FOR EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 87
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 96
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 96:
## Known stack suffix:
## mode raw_atomic_type DBLARROW raw_normal_type
## LR(1) items:
raw_normal_type -> mode raw_atomic_type DBLARROW raw_normal_type . [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN IN FROM FOR EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_normal_type -> mode raw_atomic_type DBLARROW raw_normal_type

State 97:
## Known stack suffix:
## maybe_qualified(variable)
## LR(1) items:
raw_atomic_type -> maybe_qualified(variable) . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_type -> maybe_qualified(variable)

State 98:
## Known stack suffix:
## maybe_qualified(datacon)
## LR(1) items:
generic_datacon_application(data_type_def_branch_content) -> maybe_qualified(datacon) . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
generic_datacon_application(data_type_def_branch_content) -> maybe_qualified(datacon) . LBRACE data_type_def_branch_content RBRACE [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On LBRACE shift to state 99
## Reductions:
-- On WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production generic_datacon_application(data_type_def_branch_content) -> maybe_qualified(datacon)

State 99:
## Known stack suffix:
## maybe_qualified(datacon) LBRACE
## LR(1) items:
generic_datacon_application(data_type_def_branch_content) -> maybe_qualified(datacon) LBRACE . data_type_def_branch_content RBRACE [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 100
-- On separated_nonempty_list(COMMA,variable) shift to state 106
-- On right_flexible_list(SEMI,data_field_def) shift to state 116
-- On data_type_def_branch_content shift to state 139
-- On data_field_def shift to state 141
## Reductions:
-- On RBRACE BAR
--   reduce production right_flexible_list(SEMI,data_field_def) ->

State 100:
## Known stack suffix:
## variable
## LR(1) items:
data_field_def -> variable . EQUAL maybe_qualified(variable) [ SEMI RBRACE BAR ]
data_field_def -> variable . [ SEMI RBRACE BAR ]
separated_nonempty_list(COMMA,variable) -> variable . [ COLONCOLON COLON ]
separated_nonempty_list(COMMA,variable) -> variable . COMMA separated_nonempty_list(COMMA,variable) [ COLONCOLON COLON ]
## Transitions:
-- On EQUAL shift to state 101
-- On COMMA shift to state 103
## Reductions:
-- On SEMI RBRACE BAR
--   reduce production data_field_def -> variable
-- On COLONCOLON COLON
--   reduce production separated_nonempty_list(COMMA,variable) -> variable

State 101:
## Known stack suffix:
## variable EQUAL
## LR(1) items:
data_field_def -> variable EQUAL . maybe_qualified(variable) [ SEMI RBRACE BAR ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 80
-- On variable shift to state 82
-- On maybe_qualified(variable) shift to state 102
## Reductions:

State 102:
## Known stack suffix:
## variable EQUAL maybe_qualified(variable)
## LR(1) items:
data_field_def -> variable EQUAL maybe_qualified(variable) . [ SEMI RBRACE BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production data_field_def -> variable EQUAL maybe_qualified(variable)

State 103:
## Known stack suffix:
## variable COMMA
## LR(1) items:
separated_nonempty_list(COMMA,variable) -> variable COMMA . separated_nonempty_list(COMMA,variable) [ COLONCOLON COLON ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 104
-- On separated_nonempty_list(COMMA,variable) shift to state 105
## Reductions:

State 104:
## Known stack suffix:
## variable
## LR(1) items:
separated_nonempty_list(COMMA,variable) -> variable . [ COLONCOLON COLON ]
separated_nonempty_list(COMMA,variable) -> variable . COMMA separated_nonempty_list(COMMA,variable) [ COLONCOLON COLON ]
## Transitions:
-- On COMMA shift to state 103
## Reductions:
-- On COLONCOLON COLON
--   reduce production separated_nonempty_list(COMMA,variable) -> variable

State 105:
## Known stack suffix:
## variable COMMA separated_nonempty_list(COMMA,variable)
## LR(1) items:
separated_nonempty_list(COMMA,variable) -> variable COMMA separated_nonempty_list(COMMA,variable) . [ COLONCOLON COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,variable) -> variable COMMA separated_nonempty_list(COMMA,variable)

State 106:
## Known stack suffix:
## separated_nonempty_list(COMMA,variable)
## LR(1) items:
data_field_def -> separated_nonempty_list(COMMA,variable) . COLON raw_normal_type [ SEMI RBRACE BAR ]
data_field_def -> separated_nonempty_list(COMMA,variable) . COLONCOLON raw_normal_type [ SEMI RBRACE BAR ]
## Transitions:
-- On COLONCOLON shift to state 107
-- On COLON shift to state 114
## Reductions:

State 107:
## Known stack suffix:
## separated_nonempty_list(COMMA,variable) COLONCOLON
## LR(1) items:
data_field_def -> separated_nonempty_list(COMMA,variable) COLONCOLON . raw_normal_type [ SEMI RBRACE BAR ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 87
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 108
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 108:
## Known stack suffix:
## separated_nonempty_list(COMMA,variable) COLONCOLON raw_normal_type
## LR(1) items:
data_field_def -> separated_nonempty_list(COMMA,variable) COLONCOLON raw_normal_type . [ SEMI RBRACE BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production data_field_def -> separated_nonempty_list(COMMA,variable) COLONCOLON raw_normal_type

State 109:
## Known stack suffix:
## generic_datacon_application(data_type_def_branch_content)
## LR(1) items:
raw_atomic_type -> generic_datacon_application(data_type_def_branch_content) . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DATA COMMA COLON BELOW BAR ARROW AND ALIAS ABSTRACT ABOVE ]
raw_normal_type -> generic_datacon_application(data_type_def_branch_content) . ADOPTS raw_normal_type [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN IN FROM FOR EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On ADOPTS shift to state 110
## Reductions:
-- On WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DATA COMMA COLON BELOW BAR ARROW AND ALIAS ABSTRACT ABOVE
--   reduce production raw_atomic_type -> generic_datacon_application(data_type_def_branch_content)

State 110:
## Known stack suffix:
## generic_datacon_application(data_type_def_branch_content) ADOPTS
## LR(1) items:
raw_normal_type -> generic_datacon_application(data_type_def_branch_content) ADOPTS . raw_normal_type [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN IN FROM FOR EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 87
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 111
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 111:
## Known stack suffix:
## generic_datacon_application(data_type_def_branch_content) ADOPTS raw_normal_type
## LR(1) items:
raw_normal_type -> generic_datacon_application(data_type_def_branch_content) ADOPTS raw_normal_type . [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN IN FROM FOR EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_normal_type -> generic_datacon_application(data_type_def_branch_content) ADOPTS raw_normal_type

State 112:
## Known stack suffix:
## existential_quantifiers
## LR(1) items:
raw_normal_type -> existential_quantifiers . raw_normal_type [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN IN FROM FOR EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 87
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 113
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 113:
## Known stack suffix:
## existential_quantifiers raw_normal_type
## LR(1) items:
raw_normal_type -> existential_quantifiers raw_normal_type . [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN IN FROM FOR EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_normal_type -> existential_quantifiers raw_normal_type

State 114:
## Known stack suffix:
## separated_nonempty_list(COMMA,variable) COLON
## LR(1) items:
data_field_def -> separated_nonempty_list(COMMA,variable) COLON . raw_normal_type [ SEMI RBRACE BAR ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 87
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 115
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 115:
## Known stack suffix:
## separated_nonempty_list(COMMA,variable) COLON raw_normal_type
## LR(1) items:
data_field_def -> separated_nonempty_list(COMMA,variable) COLON raw_normal_type . [ SEMI RBRACE BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production data_field_def -> separated_nonempty_list(COMMA,variable) COLON raw_normal_type

State 116:
## Known stack suffix:
## right_flexible_list(SEMI,data_field_def)
## LR(1) items:
data_type_def_branch_content -> right_flexible_list(SEMI,data_field_def) . [ RBRACE ]
data_type_def_branch_content -> right_flexible_list(SEMI,data_field_def) . BAR raw_very_loose_type [ RBRACE ]
## Transitions:
-- On BAR shift to state 117
## Reductions:
-- On RBRACE
--   reduce production data_type_def_branch_content -> right_flexible_list(SEMI,data_field_def)

State 117:
## Known stack suffix:
## right_flexible_list(SEMI,data_field_def) BAR
## LR(1) items:
data_type_def_branch_content -> right_flexible_list(SEMI,data_field_def) BAR . raw_very_loose_type [ RBRACE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On CONSUMES shift to state 118
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On raw_very_loose_type shift to state 129
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 130
-- On raw_consumes_type shift to state 131
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 118:
## Known stack suffix:
## CONSUMES
## LR(1) items:
raw_consumes_type -> CONSUMES . raw_loose_type [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA COMMA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 123
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 119:
## Known stack suffix:
## variable
## LR(1) items:
maybe_qualified(variable) -> variable . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACE OPEN LPAREN LIDENT IN FROM FOR EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DATA COMMA BELOW BAR AT ARROW AND ALIAS ABSTRACT ABOVE ]
raw_loose_type -> variable . COLON raw_normal_type [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA COMMA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On COLON shift to state 120
## Reductions:
-- On WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACE OPEN LPAREN LIDENT IN FROM FOR EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DATA COMMA BELOW BAR AT ARROW AND ALIAS ABSTRACT ABOVE
--   reduce production maybe_qualified(variable) -> variable

State 120:
## Known stack suffix:
## variable COLON
## LR(1) items:
raw_loose_type -> variable COLON . raw_normal_type [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA COMMA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 87
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 121
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 121:
## Known stack suffix:
## variable COLON raw_normal_type
## LR(1) items:
raw_loose_type -> variable COLON raw_normal_type . [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA COMMA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_loose_type -> variable COLON raw_normal_type

State 122:
## Known stack suffix:
## raw_normal_type
## LR(1) items:
raw_loose_type -> raw_normal_type . [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA COMMA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_loose_type -> raw_normal_type

State 123:
## Known stack suffix:
## CONSUMES raw_loose_type
## LR(1) items:
raw_consumes_type -> CONSUMES raw_loose_type . [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA COMMA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_consumes_type -> CONSUMES raw_loose_type

State 124:
## Known stack suffix:
## maybe_qualified(variable)
## LR(1) items:
raw_atomic_type -> maybe_qualified(variable) . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACE OPEN LPAREN LIDENT IN FROM FOR EOF END EMPTY ELSE DYNAMIC DOWNTO DO DATA COMMA BELOW BAR ARROW AND ALIAS ABSTRACT ABOVE ]
raw_loose_type -> maybe_qualified(variable) . AT raw_normal_type [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA COMMA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_loose_type -> maybe_qualified(variable) . EQUAL maybe_qualified(variable) [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA COMMA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On EQUAL shift to state 125
-- On AT shift to state 127
## Reductions:
-- On WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACE OPEN LPAREN LIDENT IN FROM FOR EOF END EMPTY ELSE DYNAMIC DOWNTO DO DATA COMMA BELOW BAR ARROW AND ALIAS ABSTRACT ABOVE
--   reduce production raw_atomic_type -> maybe_qualified(variable)

State 125:
## Known stack suffix:
## maybe_qualified(variable) EQUAL
## LR(1) items:
raw_loose_type -> maybe_qualified(variable) EQUAL . maybe_qualified(variable) [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA COMMA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 80
-- On variable shift to state 82
-- On maybe_qualified(variable) shift to state 126
## Reductions:

State 126:
## Known stack suffix:
## maybe_qualified(variable) EQUAL maybe_qualified(variable)
## LR(1) items:
raw_loose_type -> maybe_qualified(variable) EQUAL maybe_qualified(variable) . [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA COMMA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_loose_type -> maybe_qualified(variable) EQUAL maybe_qualified(variable)

State 127:
## Known stack suffix:
## maybe_qualified(variable) AT
## LR(1) items:
raw_loose_type -> maybe_qualified(variable) AT . raw_normal_type [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA COMMA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 87
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 128
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 128:
## Known stack suffix:
## maybe_qualified(variable) AT raw_normal_type
## LR(1) items:
raw_loose_type -> maybe_qualified(variable) AT raw_normal_type . [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA COMMA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_loose_type -> maybe_qualified(variable) AT raw_normal_type

State 129:
## Known stack suffix:
## right_flexible_list(SEMI,data_field_def) BAR raw_very_loose_type
## LR(1) items:
data_type_def_branch_content -> right_flexible_list(SEMI,data_field_def) BAR raw_very_loose_type . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production data_type_def_branch_content -> right_flexible_list(SEMI,data_field_def) BAR raw_very_loose_type

State 130:
## Known stack suffix:
## raw_loose_type
## LR(1) items:
raw_consumes_type -> raw_loose_type . [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA COMMA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_consumes_type -> raw_loose_type

State 131:
## Known stack suffix:
## raw_consumes_type
## LR(1) items:
raw_very_loose_type -> raw_consumes_type . [ WITNESS WITH WHILE VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_very_loose_type -> raw_consumes_type . STAR raw_very_loose_type [ WITNESS WITH WHILE VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_very_loose_type -> raw_consumes_type . COMMA separated_nonempty_list(COMMA,consumes_type) [ WITNESS WITH WHILE VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On STAR shift to state 132
-- On COMMA shift to state 134
## Reductions:
-- On WITNESS WITH WHILE VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE
--   reduce production raw_very_loose_type -> raw_consumes_type

State 132:
## Known stack suffix:
## raw_consumes_type STAR
## LR(1) items:
raw_very_loose_type -> raw_consumes_type STAR . raw_very_loose_type [ WITNESS WITH WHILE VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On CONSUMES shift to state 118
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On raw_very_loose_type shift to state 133
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 130
-- On raw_consumes_type shift to state 131
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 133:
## Known stack suffix:
## raw_consumes_type STAR raw_very_loose_type
## LR(1) items:
raw_very_loose_type -> raw_consumes_type STAR raw_very_loose_type . [ WITNESS WITH WHILE VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_very_loose_type -> raw_consumes_type STAR raw_very_loose_type

State 134:
## Known stack suffix:
## raw_consumes_type COMMA
## LR(1) items:
raw_very_loose_type -> raw_consumes_type COMMA . separated_nonempty_list(COMMA,consumes_type) [ WITNESS WITH WHILE VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On CONSUMES shift to state 118
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On separated_nonempty_list(COMMA,consumes_type) shift to state 135
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 130
-- On raw_consumes_type shift to state 136
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 135:
## Known stack suffix:
## raw_consumes_type COMMA separated_nonempty_list(COMMA,consumes_type)
## LR(1) items:
raw_very_loose_type -> raw_consumes_type COMMA separated_nonempty_list(COMMA,consumes_type) . [ WITNESS WITH WHILE VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_very_loose_type -> raw_consumes_type COMMA separated_nonempty_list(COMMA,consumes_type)

State 136:
## Known stack suffix:
## raw_consumes_type
## LR(1) items:
separated_nonempty_list(COMMA,consumes_type) -> raw_consumes_type . [ WITNESS WITH WHILE VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
separated_nonempty_list(COMMA,consumes_type) -> raw_consumes_type . COMMA separated_nonempty_list(COMMA,consumes_type) [ WITNESS WITH WHILE VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On COMMA shift to state 137
## Reductions:
-- On WITNESS WITH WHILE VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE
--   reduce production separated_nonempty_list(COMMA,consumes_type) -> raw_consumes_type

State 137:
## Known stack suffix:
## raw_consumes_type COMMA
## LR(1) items:
separated_nonempty_list(COMMA,consumes_type) -> raw_consumes_type COMMA . separated_nonempty_list(COMMA,consumes_type) [ WITNESS WITH WHILE VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On CONSUMES shift to state 118
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On separated_nonempty_list(COMMA,consumes_type) shift to state 138
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 130
-- On raw_consumes_type shift to state 136
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 138:
## Known stack suffix:
## raw_consumes_type COMMA separated_nonempty_list(COMMA,consumes_type)
## LR(1) items:
separated_nonempty_list(COMMA,consumes_type) -> raw_consumes_type COMMA separated_nonempty_list(COMMA,consumes_type) . [ WITNESS WITH WHILE VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,consumes_type) -> raw_consumes_type COMMA separated_nonempty_list(COMMA,consumes_type)

State 139:
## Known stack suffix:
## maybe_qualified(datacon) LBRACE data_type_def_branch_content
## LR(1) items:
generic_datacon_application(data_type_def_branch_content) -> maybe_qualified(datacon) LBRACE data_type_def_branch_content . RBRACE [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RBRACE shift to state 140
## Reductions:

State 140:
## Known stack suffix:
## maybe_qualified(datacon) LBRACE data_type_def_branch_content RBRACE
## LR(1) items:
generic_datacon_application(data_type_def_branch_content) -> maybe_qualified(datacon) LBRACE data_type_def_branch_content RBRACE . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production generic_datacon_application(data_type_def_branch_content) -> maybe_qualified(datacon) LBRACE data_type_def_branch_content RBRACE

State 141:
## Known stack suffix:
## data_field_def
## LR(1) items:
right_flexible_list(SEMI,data_field_def) -> data_field_def . [ RBRACE BAR ]
right_flexible_list(SEMI,data_field_def) -> data_field_def . SEMI right_flexible_list(SEMI,data_field_def) [ RBRACE BAR ]
## Transitions:
-- On SEMI shift to state 142
## Reductions:
-- On RBRACE BAR
--   reduce production right_flexible_list(SEMI,data_field_def) -> data_field_def

State 142:
## Known stack suffix:
## data_field_def SEMI
## LR(1) items:
right_flexible_list(SEMI,data_field_def) -> data_field_def SEMI . right_flexible_list(SEMI,data_field_def) [ RBRACE BAR ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 100
-- On separated_nonempty_list(COMMA,variable) shift to state 106
-- On right_flexible_list(SEMI,data_field_def) shift to state 143
-- On data_field_def shift to state 141
## Reductions:
-- On RBRACE BAR
--   reduce production right_flexible_list(SEMI,data_field_def) ->

State 143:
## Known stack suffix:
## data_field_def SEMI right_flexible_list(SEMI,data_field_def)
## LR(1) items:
right_flexible_list(SEMI,data_field_def) -> data_field_def SEMI right_flexible_list(SEMI,data_field_def) . [ RBRACE BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production right_flexible_list(SEMI,data_field_def) -> data_field_def SEMI right_flexible_list(SEMI,data_field_def)

State 144:
## Known stack suffix:
## generic_datacon_application(data_type_def_branch_content)
## LR(1) items:
raw_atomic_type -> generic_datacon_application(data_type_def_branch_content) . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_type -> generic_datacon_application(data_type_def_branch_content)

State 145:
## Known stack suffix:
## raw_tight_type raw_atomic_type
## LR(1) items:
raw_tight_type -> raw_tight_type raw_atomic_type . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_tight_type -> raw_tight_type raw_atomic_type

State 146:
## Known stack suffix:
## type_parameters raw_normal_type
## LR(1) items:
raw_normal_type -> type_parameters raw_normal_type . [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN IN FROM FOR EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_normal_type -> type_parameters raw_normal_type

State 147:
## Known stack suffix:
## UNDERSCORE COLON raw_normal_type
## LR(1) items:
raw_loose_type -> UNDERSCORE COLON raw_normal_type . [ WITNESS WITH WHILE VAL TO THEN STAR SEMI RPAREN RBRACE OPEN IN FROM FOR EOF END ELSE DOWNTO DO DATA COMMA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_loose_type -> UNDERSCORE COLON raw_normal_type

State 148:
## Known stack suffix:
## LPAREN RPAREN
## LR(1) items:
raw_parenthetic_type -> LPAREN RPAREN . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_parenthetic_type -> LPAREN RPAREN

State 149:
## Known stack suffix:
## LPAREN EQUAL
## LR(1) items:
raw_tight_type -> EQUAL . maybe_qualified(variable) [ UNKNOWN UNDERSCORE UIDENT STAR RPAREN LPAREN LIDENT EMPTY DYNAMIC COMMA BAR ARROW ]
variable -> LPAREN EQUAL . RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR AT ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RPAREN shift to state 36
-- On LPAREN shift to state 42
-- On LIDENT shift to state 80
-- On variable shift to state 82
-- On maybe_qualified(variable) shift to state 83
## Reductions:

State 150:
## Known stack suffix:
## BAR
## LR(1) items:
raw_fat_type -> BAR . raw_very_loose_type [ WHILE VAL RPAREN OPEN IN FOR EOF DATA BAR AND ALIAS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On CONSUMES shift to state 118
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On raw_very_loose_type shift to state 151
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 130
-- On raw_consumes_type shift to state 131
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 151:
## Known stack suffix:
## BAR raw_very_loose_type
## LR(1) items:
raw_fat_type -> BAR raw_very_loose_type . [ WHILE VAL RPAREN OPEN IN FOR EOF DATA BAR AND ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_fat_type -> BAR raw_very_loose_type

State 152:
## Known stack suffix:
## raw_very_loose_type
## LR(1) items:
raw_fat_type -> raw_very_loose_type . [ WHILE VAL RPAREN OPEN IN FOR EOF DATA BAR AND ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_fat_type -> raw_very_loose_type

State 153:
## Known stack suffix:
## LPAREN raw_fat_type
## LR(1) items:
raw_fat_type -> raw_fat_type . BAR raw_very_loose_type [ RPAREN BAR ]
raw_fat_type -> raw_fat_type . BAR mode raw_atomic_type [ RPAREN BAR ]
raw_parenthetic_type -> LPAREN raw_fat_type . RPAREN [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RPAREN shift to state 154
-- On BAR shift to state 155
## Reductions:

State 154:
## Known stack suffix:
## LPAREN raw_fat_type RPAREN
## LR(1) items:
raw_parenthetic_type -> LPAREN raw_fat_type RPAREN . [ WITNESS WITH WHILE VAL UNKNOWN UNDERSCORE UIDENT TO THEN STAR SEMI RPAREN RBRACKET RBRACE OPEN LPAREN LIDENT IN FROM FOR FACT EQUAL EOF END EMPTY ELSE DYNAMIC DOWNTO DO DBLARROW DATA COMMA COLON BELOW BAR ARROW AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_parenthetic_type -> LPAREN raw_fat_type RPAREN

State 155:
## Known stack suffix:
## raw_fat_type BAR
## LR(1) items:
raw_fat_type -> raw_fat_type BAR . raw_very_loose_type [ WHILE VAL RPAREN OPEN IN FOR EOF DATA BAR AND ALIAS ABSTRACT ]
raw_fat_type -> raw_fat_type BAR . mode raw_atomic_type [ WHILE VAL RPAREN OPEN IN FOR EOF DATA BAR AND ALIAS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On CONSUMES shift to state 118
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On raw_very_loose_type shift to state 156
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 130
-- On raw_consumes_type shift to state 131
-- On raw_atomic_type shift to state 92
-- On mode shift to state 157
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 156:
## Known stack suffix:
## raw_fat_type BAR raw_very_loose_type
## LR(1) items:
raw_fat_type -> raw_fat_type BAR raw_very_loose_type . [ WHILE VAL RPAREN OPEN IN FOR EOF DATA BAR AND ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_fat_type -> raw_fat_type BAR raw_very_loose_type

State 157:
## Known stack suffix:
## raw_fat_type BAR mode
## LR(1) items:
raw_fat_type -> raw_fat_type BAR mode . raw_atomic_type [ WHILE VAL RPAREN OPEN IN FOR EOF DATA BAR AND ALIAS ABSTRACT ]
raw_normal_type -> mode . raw_atomic_type DBLARROW raw_normal_type [ WHILE VAL STAR RPAREN OPEN IN FOR EOF DATA COMMA BAR AND ALIAS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On variable shift to state 82
-- On raw_parenthetic_type shift to state 90
-- On raw_atomic_type shift to state 158
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 144
## Reductions:

State 158:
## Known stack suffix:
## raw_fat_type BAR mode raw_atomic_type
## LR(1) items:
raw_fat_type -> raw_fat_type BAR mode raw_atomic_type . [ WHILE VAL RPAREN OPEN IN FOR EOF DATA BAR AND ALIAS ABSTRACT ]
raw_normal_type -> mode raw_atomic_type . DBLARROW raw_normal_type [ WHILE VAL STAR RPAREN OPEN IN FOR EOF DATA COMMA BAR AND ALIAS ABSTRACT ]
## Transitions:
-- On DBLARROW shift to state 95
## Reductions:
-- On WHILE VAL RPAREN OPEN IN FOR EOF DATA BAR AND ALIAS ABSTRACT
--   reduce production raw_fat_type -> raw_fat_type BAR mode raw_atomic_type

State 159:
## Known stack suffix:
## raw_loose_pattern COLON raw_normal_type
## LR(1) items:
raw_loose_pattern -> raw_loose_pattern COLON raw_normal_type . [ SEMI RPAREN RBRACE COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_loose_pattern -> raw_loose_pattern COLON raw_normal_type

State 160:
## Known stack suffix:
## raw_atomic_pattern
## LR(1) items:
raw_normal_pattern -> raw_atomic_pattern . [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COLON AS ARROW ]
raw_normal_pattern -> raw_atomic_pattern . COMMA separated_nonempty_list(COMMA,atomic_pattern) [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COLON AS ARROW ]
## Transitions:
-- On COMMA shift to state 161
## Reductions:
-- On SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COLON AS ARROW
--   reduce production raw_normal_pattern -> raw_atomic_pattern

State 161:
## Known stack suffix:
## raw_atomic_pattern COMMA
## LR(1) items:
raw_normal_pattern -> raw_atomic_pattern COMMA . separated_nonempty_list(COMMA,atomic_pattern) [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COLON AS ARROW ]
## Transitions:
-- On UNDERSCORE shift to state 4
-- On UIDENT shift to state 5
-- On LPAREN shift to state 6
-- On LIDENT shift to state 32
-- On variable shift to state 39
-- On separated_nonempty_list(COMMA,atomic_pattern) shift to state 162
-- On raw_atomic_pattern shift to state 163
-- On maybe_qualified(datacon) shift to state 166
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_pattern)) shift to state 171
## Reductions:

State 162:
## Known stack suffix:
## raw_atomic_pattern COMMA separated_nonempty_list(COMMA,atomic_pattern)
## LR(1) items:
raw_normal_pattern -> raw_atomic_pattern COMMA separated_nonempty_list(COMMA,atomic_pattern) . [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COLON AS ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_normal_pattern -> raw_atomic_pattern COMMA separated_nonempty_list(COMMA,atomic_pattern)

State 163:
## Known stack suffix:
## raw_atomic_pattern
## LR(1) items:
separated_nonempty_list(COMMA,atomic_pattern) -> raw_atomic_pattern . [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COLON AS ARROW ]
separated_nonempty_list(COMMA,atomic_pattern) -> raw_atomic_pattern . COMMA separated_nonempty_list(COMMA,atomic_pattern) [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COLON AS ARROW ]
## Transitions:
-- On COMMA shift to state 164
## Reductions:
-- On SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COLON AS ARROW
--   reduce production separated_nonempty_list(COMMA,atomic_pattern) -> raw_atomic_pattern

State 164:
## Known stack suffix:
## raw_atomic_pattern COMMA
## LR(1) items:
separated_nonempty_list(COMMA,atomic_pattern) -> raw_atomic_pattern COMMA . separated_nonempty_list(COMMA,atomic_pattern) [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COLON AS ARROW ]
## Transitions:
-- On UNDERSCORE shift to state 4
-- On UIDENT shift to state 5
-- On LPAREN shift to state 6
-- On LIDENT shift to state 32
-- On variable shift to state 39
-- On separated_nonempty_list(COMMA,atomic_pattern) shift to state 165
-- On raw_atomic_pattern shift to state 163
-- On maybe_qualified(datacon) shift to state 166
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_pattern)) shift to state 171
## Reductions:

State 165:
## Known stack suffix:
## raw_atomic_pattern COMMA separated_nonempty_list(COMMA,atomic_pattern)
## LR(1) items:
separated_nonempty_list(COMMA,atomic_pattern) -> raw_atomic_pattern COMMA separated_nonempty_list(COMMA,atomic_pattern) . [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COLON AS ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,atomic_pattern) -> raw_atomic_pattern COMMA separated_nonempty_list(COMMA,atomic_pattern)

State 166:
## Known stack suffix:
## maybe_qualified(datacon)
## LR(1) items:
generic_datacon_application(right_flexible_list(SEMI,data_field_pattern)) -> maybe_qualified(datacon) . [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
generic_datacon_application(right_flexible_list(SEMI,data_field_pattern)) -> maybe_qualified(datacon) . LBRACE right_flexible_list(SEMI,data_field_pattern) RBRACE [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
## Transitions:
-- On LBRACE shift to state 167
## Reductions:
-- On SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW
--   reduce production generic_datacon_application(right_flexible_list(SEMI,data_field_pattern)) -> maybe_qualified(datacon)

State 167:
## Known stack suffix:
## maybe_qualified(datacon) LBRACE
## LR(1) items:
generic_datacon_application(right_flexible_list(SEMI,data_field_pattern)) -> maybe_qualified(datacon) LBRACE . right_flexible_list(SEMI,data_field_pattern) RBRACE [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 168
-- On right_flexible_list(SEMI,data_field_pattern) shift to state 172
-- On data_field_pattern shift to state 174
## Reductions:
-- On RBRACE
--   reduce production right_flexible_list(SEMI,data_field_pattern) ->

State 168:
## Known stack suffix:
## variable
## LR(1) items:
data_field_pattern -> variable . EQUAL raw_loose_pattern [ SEMI RBRACE ]
data_field_pattern -> variable . [ SEMI RBRACE ]
## Transitions:
-- On EQUAL shift to state 169
## Reductions:
-- On SEMI RBRACE
--   reduce production data_field_pattern -> variable

State 169:
## Known stack suffix:
## variable EQUAL
## LR(1) items:
data_field_pattern -> variable EQUAL . raw_loose_pattern [ SEMI RBRACE ]
## Transitions:
-- On UNDERSCORE shift to state 4
-- On UIDENT shift to state 5
-- On LPAREN shift to state 6
-- On LIDENT shift to state 32
-- On variable shift to state 39
-- On raw_normal_pattern shift to state 40
-- On raw_loose_pattern shift to state 170
-- On raw_atomic_pattern shift to state 160
-- On maybe_qualified(datacon) shift to state 166
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_pattern)) shift to state 171
## Reductions:

State 170:
## Known stack suffix:
## variable EQUAL raw_loose_pattern
## LR(1) items:
data_field_pattern -> variable EQUAL raw_loose_pattern . [ SEMI RBRACE ]
raw_loose_pattern -> raw_loose_pattern . COLON raw_normal_type [ SEMI RBRACE COLON ]
## Transitions:
-- On COLON shift to state 47
## Reductions:
-- On SEMI RBRACE
--   reduce production data_field_pattern -> variable EQUAL raw_loose_pattern

State 171:
## Known stack suffix:
## generic_datacon_application(right_flexible_list(SEMI,data_field_pattern))
## LR(1) items:
raw_atomic_pattern -> generic_datacon_application(right_flexible_list(SEMI,data_field_pattern)) . [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_pattern -> generic_datacon_application(right_flexible_list(SEMI,data_field_pattern))

State 172:
## Known stack suffix:
## maybe_qualified(datacon) LBRACE right_flexible_list(SEMI,data_field_pattern)
## LR(1) items:
generic_datacon_application(right_flexible_list(SEMI,data_field_pattern)) -> maybe_qualified(datacon) LBRACE right_flexible_list(SEMI,data_field_pattern) . RBRACE [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
## Transitions:
-- On RBRACE shift to state 173
## Reductions:

State 173:
## Known stack suffix:
## maybe_qualified(datacon) LBRACE right_flexible_list(SEMI,data_field_pattern) RBRACE
## LR(1) items:
generic_datacon_application(right_flexible_list(SEMI,data_field_pattern)) -> maybe_qualified(datacon) LBRACE right_flexible_list(SEMI,data_field_pattern) RBRACE . [ SEMI RPAREN RBRACE LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COMMA COLON AS ARROW ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production generic_datacon_application(right_flexible_list(SEMI,data_field_pattern)) -> maybe_qualified(datacon) LBRACE right_flexible_list(SEMI,data_field_pattern) RBRACE

State 174:
## Known stack suffix:
## data_field_pattern
## LR(1) items:
right_flexible_list(SEMI,data_field_pattern) -> data_field_pattern . [ RBRACE ]
right_flexible_list(SEMI,data_field_pattern) -> data_field_pattern . SEMI right_flexible_list(SEMI,data_field_pattern) [ RBRACE ]
## Transitions:
-- On SEMI shift to state 175
## Reductions:
-- On RBRACE
--   reduce production right_flexible_list(SEMI,data_field_pattern) -> data_field_pattern

State 175:
## Known stack suffix:
## data_field_pattern SEMI
## LR(1) items:
right_flexible_list(SEMI,data_field_pattern) -> data_field_pattern SEMI . right_flexible_list(SEMI,data_field_pattern) [ RBRACE ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 168
-- On right_flexible_list(SEMI,data_field_pattern) shift to state 176
-- On data_field_pattern shift to state 174
## Reductions:
-- On RBRACE
--   reduce production right_flexible_list(SEMI,data_field_pattern) ->

State 176:
## Known stack suffix:
## data_field_pattern SEMI right_flexible_list(SEMI,data_field_pattern)
## LR(1) items:
right_flexible_list(SEMI,data_field_pattern) -> data_field_pattern SEMI right_flexible_list(SEMI,data_field_pattern) . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production right_flexible_list(SEMI,data_field_pattern) -> data_field_pattern SEMI right_flexible_list(SEMI,data_field_pattern)

State 177:
## Known stack suffix:
## separated_nonempty_list(AND,definition)
## LR(1) items:
loption(separated_nonempty_list(AND,definition)) -> separated_nonempty_list(AND,definition) . [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(separated_nonempty_list(AND,definition)) -> separated_nonempty_list(AND,definition)

State 178:
## Known stack suffix:
## raw_normal_pattern
## LR(1) items:
definition -> raw_normal_pattern . EQUAL raw_tuple_or(raw_fragile_expression) [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
definition -> raw_normal_pattern . COLON raw_normal_type EQUAL raw_tuple_or(raw_fragile_expression) [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
definition -> raw_normal_pattern . anonymous_function [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
definition -> raw_normal_pattern . COLON raw_normal_type EQUAL BUILTIN LIDENT [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
raw_normal_pattern -> raw_normal_pattern . AS variable [ LPAREN LBRACKET EXCLUSIVE EQUAL DUPLICABLE COLON AS ]
## Transitions:
-- On LBRACKET shift to state 56
-- On EQUAL shift to state 179
-- On COLON shift to state 448
-- On AS shift to state 41
-- On type_parameters shift to state 208
-- On loption(type_parameters) shift to state 209
-- On anonymous_function shift to state 454
## Reductions:
-- On LPAREN EXCLUSIVE DUPLICABLE
--   reduce production loption(type_parameters) ->

State 179:
## Known stack suffix:
## raw_normal_pattern EQUAL
## LR(1) items:
definition -> raw_normal_pattern EQUAL . raw_tuple_or(raw_fragile_expression) [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 447
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 180:
## Known stack suffix:
## TAKING
## LR(1) items:
raw_reasonable_expression -> TAKING . raw_tuple_or(raw_fragile_expression) FROM raw_tight_expression BEGIN raw_tuple_or(raw_fragile_expression) END [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 441
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 181:
## Known stack suffix:
## TAKE
## LR(1) items:
raw_reasonable_expression -> TAKE . raw_tuple_or(raw_fragile_expression) FROM reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 438
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 182:
## Known stack suffix:
## TAGOF
## LR(1) items:
raw_reasonable_expression -> TAGOF . raw_tight_expression LARROW maybe_qualified(datacon) [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 434
-- On raw_atomic_expression shift to state 231
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 183:
## Known stack suffix:
## OPPREFIX
## LR(1) items:
raw_atomic_expression -> OPPREFIX . raw_atomic_expression [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_atomic_expression shift to state 418
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 184:
## Known stack suffix:
## MATCH
## LR(1) items:
raw_atomic_expression -> MATCH . explain raw_tuple_or(raw_fragile_expression) WITH reverse_left_flexible_list(BAR,match_branch) END [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On EXPLAIN shift to state 185
-- On explain shift to state 186
## Reductions:
-- On WHILE UIDENT TAKING TAKE TAGOF PRESERVING PACK OPPREFIX MINUS MATCH LPAREN LIDENT LET INT IF GIVE FUN FOR FAIL BEGIN ASSERT
--   reduce production explain ->

State 185:
## Known stack suffix:
## EXPLAIN
## LR(1) items:
explain -> EXPLAIN . [ WHILE UIDENT TAKING TAKE TAGOF PRESERVING PACK OPPREFIX MINUS MATCH LPAREN LIDENT LET INT IF GIVE FUN FOR FAIL BEGIN ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production explain -> EXPLAIN

State 186:
## Known stack suffix:
## MATCH explain
## LR(1) items:
raw_atomic_expression -> MATCH explain . raw_tuple_or(raw_fragile_expression) WITH reverse_left_flexible_list(BAR,match_branch) END [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 423
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 187:
## Known stack suffix:
## PRESERVING
## LR(1) items:
optional_preserving -> PRESERVING . raw_fat_type [ WHILE FOR ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On CONSUMES shift to state 118
-- On BAR shift to state 150
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On raw_very_loose_type shift to state 152
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 130
-- On raw_fat_type shift to state 188
-- On raw_consumes_type shift to state 131
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 188:
## Known stack suffix:
## PRESERVING raw_fat_type
## LR(1) items:
optional_preserving -> PRESERVING raw_fat_type . [ WHILE FOR ]
raw_fat_type -> raw_fat_type . BAR raw_very_loose_type [ WHILE FOR BAR ]
raw_fat_type -> raw_fat_type . BAR mode raw_atomic_type [ WHILE FOR BAR ]
## Transitions:
-- On BAR shift to state 155
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving -> PRESERVING raw_fat_type

State 189:
## Known stack suffix:
## PACK
## LR(1) items:
raw_reasonable_expression -> PACK . raw_very_loose_type WITNESS raw_very_loose_type [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On CONSUMES shift to state 118
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On raw_very_loose_type shift to state 190
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 130
-- On raw_consumes_type shift to state 131
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 190:
## Known stack suffix:
## PACK raw_very_loose_type
## LR(1) items:
raw_reasonable_expression -> PACK raw_very_loose_type . WITNESS raw_very_loose_type [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On WITNESS shift to state 191
## Reductions:

State 191:
## Known stack suffix:
## PACK raw_very_loose_type WITNESS
## LR(1) items:
raw_reasonable_expression -> PACK raw_very_loose_type WITNESS . raw_very_loose_type [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On CONSUMES shift to state 118
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On raw_very_loose_type shift to state 192
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 130
-- On raw_consumes_type shift to state 131
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 192:
## Known stack suffix:
## PACK raw_very_loose_type WITNESS raw_very_loose_type
## LR(1) items:
raw_reasonable_expression -> PACK raw_very_loose_type WITNESS raw_very_loose_type . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_reasonable_expression -> PACK raw_very_loose_type WITNESS raw_very_loose_type

State 193:
## Known stack suffix:
## MINUS
## LR(1) items:
raw_algebraic_expression -> MINUS . raw_application_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 420
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 194:
## Known stack suffix:
## LPAREN
## LR(1) items:
raw_atomic_expression -> LPAREN . RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_atomic_expression -> LPAREN . parenthesized_tuple_components RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPPREFIX RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX0a RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX0b RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX0c RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX0d RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX1 RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX2 RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX3 RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . OPINFIX4 RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . EQUAL RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . STAR RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . MINUS RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . PLUS RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
variable -> LPAREN . COLONEQUAL RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On STAR shift to state 7
-- On RPAREN shift to state 195
-- On PRESERVING shift to state 187
-- On PLUS shift to state 10
-- On PACK shift to state 189
-- On OPPREFIX shift to state 196
-- On OPINFIX4 shift to state 14
-- On OPINFIX3 shift to state 16
-- On OPINFIX2 shift to state 18
-- On OPINFIX1 shift to state 20
-- On OPINFIX0d shift to state 22
-- On OPINFIX0c shift to state 24
-- On OPINFIX0b shift to state 26
-- On OPINFIX0a shift to state 28
-- On MINUS shift to state 419
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On EQUAL shift to state 35
-- On COLONEQUAL shift to state 37
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 412
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 413
-- On parenthesized_tuple_components shift to state 421
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 195:
## Known stack suffix:
## LPAREN RPAREN
## LR(1) items:
raw_atomic_expression -> LPAREN RPAREN . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_expression -> LPAREN RPAREN

State 196:
## Known stack suffix:
## LPAREN OPPREFIX
## LR(1) items:
raw_atomic_expression -> OPPREFIX . raw_atomic_expression [ UIDENT STAR SEMI RPAREN PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a MINUS MATCH LPAREN LIDENT LBRACKET INT FAIL EQUAL DOT COMMA COLONEQUAL COLON BEGIN ADOPTS ]
variable -> LPAREN OPPREFIX . RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On RPAREN shift to state 13
-- On OPPREFIX shift to state 183
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_atomic_expression shift to state 418
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 197:
## Known stack suffix:
## INT
## LR(1) items:
raw_atomic_expression -> INT . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_expression -> INT

State 198:
## Known stack suffix:
## FAIL
## LR(1) items:
raw_atomic_expression -> FAIL . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_expression -> FAIL

State 199:
## Known stack suffix:
## BEGIN
## LR(1) items:
raw_atomic_expression -> BEGIN . parenthesized_tuple_components END [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 412
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 413
-- On parenthesized_tuple_components shift to state 416
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 200:
## Known stack suffix:
## LET
## LR(1) items:
raw_fragile_expression -> LET . rec_flag loption(separated_nonempty_list(AND,definition)) IN raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_fragile_expression -> LET . FLEX type_binding IN raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_fragile_expression -> LET . DATA separated_nonempty_list(AND,concrete_data_type_def) IN raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_fragile_expression -> LET . ABSTRACT abstract_data_type_def IN raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_fragile_expression -> LET . ALIAS abbreviation_def IN raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On REC shift to state 2
-- On FLEX shift to state 201
-- On DATA shift to state 330
-- On ALIAS shift to state 375
-- On ABSTRACT shift to state 387
-- On rec_flag shift to state 405
## Reductions:
-- On UNDERSCORE UIDENT LPAREN LIDENT IN
--   reduce production rec_flag ->

State 201:
## Known stack suffix:
## LET FLEX
## LR(1) items:
raw_fragile_expression -> LET FLEX . type_binding IN raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On LPAREN shift to state 57
-- On LIDENT shift to state 43
-- On variable shift to state 58
-- On type_binding shift to state 202
-- On atomic_type_binding shift to state 69
## Reductions:

State 202:
## Known stack suffix:
## LET FLEX type_binding
## LR(1) items:
raw_fragile_expression -> LET FLEX type_binding . IN raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On IN shift to state 203
## Reductions:

State 203:
## Known stack suffix:
## LET FLEX type_binding IN
## LR(1) items:
raw_fragile_expression -> LET FLEX type_binding IN . raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 329
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 204:
## Known stack suffix:
## IF
## LR(1) items:
raw_reasonable_expression -> IF . explain raw_tuple_or(raw_fragile_expression) THEN raw_tuple_or(raw_reasonable_expression) [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_reasonable_expression -> IF . explain raw_tuple_or(raw_fragile_expression) THEN raw_tuple_or(raw_reasonable_expression) ELSE raw_tuple_or(raw_reasonable_expression) [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On EXPLAIN shift to state 185
-- On explain shift to state 205
## Reductions:
-- On WHILE UIDENT TAKING TAKE TAGOF PRESERVING PACK OPPREFIX MINUS MATCH LPAREN LIDENT LET INT IF GIVE FUN FOR FAIL BEGIN ASSERT
--   reduce production explain ->

State 205:
## Known stack suffix:
## IF explain
## LR(1) items:
raw_reasonable_expression -> IF explain . raw_tuple_or(raw_fragile_expression) THEN raw_tuple_or(raw_reasonable_expression) [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_reasonable_expression -> IF explain . raw_tuple_or(raw_fragile_expression) THEN raw_tuple_or(raw_reasonable_expression) ELSE raw_tuple_or(raw_reasonable_expression) [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 320
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 206:
## Known stack suffix:
## GIVE
## LR(1) items:
raw_reasonable_expression -> GIVE . raw_tuple_or(raw_fragile_expression) TO reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 317
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 207:
## Known stack suffix:
## FUN
## LR(1) items:
raw_fragile_expression -> FUN . anonymous_function [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On LBRACKET shift to state 56
-- On type_parameters shift to state 208
-- On loption(type_parameters) shift to state 209
-- On anonymous_function shift to state 316
## Reductions:
-- On LPAREN EXCLUSIVE DUPLICABLE
--   reduce production loption(type_parameters) ->

State 208:
## Known stack suffix:
## type_parameters
## LR(1) items:
loption(type_parameters) -> type_parameters . [ LPAREN EXCLUSIVE DUPLICABLE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(type_parameters) -> type_parameters

State 209:
## Known stack suffix:
## loption(type_parameters)
## LR(1) items:
anonymous_function -> loption(type_parameters) . list(terminated(mode_constraint,DBLARROW)) raw_parenthetic_type COLON raw_normal_type EQUAL raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On EXCLUSIVE shift to state 78
-- On DUPLICABLE shift to state 86
-- On mode shift to state 210
-- On list(terminated(mode_constraint,DBLARROW)) shift to state 214
## Reductions:
-- On LPAREN
--   reduce production list(terminated(mode_constraint,DBLARROW)) ->

State 210:
## Known stack suffix:
## mode
## LR(1) items:
list(terminated(mode_constraint,DBLARROW)) -> mode . raw_atomic_type DBLARROW list(terminated(mode_constraint,DBLARROW)) [ LPAREN ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On variable shift to state 82
-- On raw_parenthetic_type shift to state 90
-- On raw_atomic_type shift to state 211
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 144
## Reductions:

State 211:
## Known stack suffix:
## mode raw_atomic_type
## LR(1) items:
list(terminated(mode_constraint,DBLARROW)) -> mode raw_atomic_type . DBLARROW list(terminated(mode_constraint,DBLARROW)) [ LPAREN ]
## Transitions:
-- On DBLARROW shift to state 212
## Reductions:

State 212:
## Known stack suffix:
## mode raw_atomic_type DBLARROW
## LR(1) items:
list(terminated(mode_constraint,DBLARROW)) -> mode raw_atomic_type DBLARROW . list(terminated(mode_constraint,DBLARROW)) [ LPAREN ]
## Transitions:
-- On EXCLUSIVE shift to state 78
-- On DUPLICABLE shift to state 86
-- On mode shift to state 210
-- On list(terminated(mode_constraint,DBLARROW)) shift to state 213
## Reductions:
-- On LPAREN
--   reduce production list(terminated(mode_constraint,DBLARROW)) ->

State 213:
## Known stack suffix:
## mode raw_atomic_type DBLARROW list(terminated(mode_constraint,DBLARROW))
## LR(1) items:
list(terminated(mode_constraint,DBLARROW)) -> mode raw_atomic_type DBLARROW list(terminated(mode_constraint,DBLARROW)) . [ LPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(terminated(mode_constraint,DBLARROW)) -> mode raw_atomic_type DBLARROW list(terminated(mode_constraint,DBLARROW))

State 214:
## Known stack suffix:
## loption(type_parameters) list(terminated(mode_constraint,DBLARROW))
## LR(1) items:
anonymous_function -> loption(type_parameters) list(terminated(mode_constraint,DBLARROW)) . raw_parenthetic_type COLON raw_normal_type EQUAL raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On LPAREN shift to state 215
-- On raw_parenthetic_type shift to state 216
## Reductions:

State 215:
## Known stack suffix:
## LPAREN
## LR(1) items:
raw_parenthetic_type -> LPAREN . RPAREN [ COLON ]
raw_parenthetic_type -> LPAREN . raw_fat_type RPAREN [ COLON ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On RPAREN shift to state 148
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On CONSUMES shift to state 118
-- On BAR shift to state 150
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On raw_very_loose_type shift to state 152
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 130
-- On raw_fat_type shift to state 153
-- On raw_consumes_type shift to state 131
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 216:
## Known stack suffix:
## loption(type_parameters) list(terminated(mode_constraint,DBLARROW)) raw_parenthetic_type
## LR(1) items:
anonymous_function -> loption(type_parameters) list(terminated(mode_constraint,DBLARROW)) raw_parenthetic_type . COLON raw_normal_type EQUAL raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On COLON shift to state 217
## Reductions:

State 217:
## Known stack suffix:
## loption(type_parameters) list(terminated(mode_constraint,DBLARROW)) raw_parenthetic_type COLON
## LR(1) items:
anonymous_function -> loption(type_parameters) list(terminated(mode_constraint,DBLARROW)) raw_parenthetic_type COLON . raw_normal_type EQUAL raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 87
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 218
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 218:
## Known stack suffix:
## loption(type_parameters) list(terminated(mode_constraint,DBLARROW)) raw_parenthetic_type COLON raw_normal_type
## LR(1) items:
anonymous_function -> loption(type_parameters) list(terminated(mode_constraint,DBLARROW)) raw_parenthetic_type COLON raw_normal_type . EQUAL raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On EQUAL shift to state 219
## Reductions:

State 219:
## Known stack suffix:
## loption(type_parameters) list(terminated(mode_constraint,DBLARROW)) raw_parenthetic_type COLON raw_normal_type EQUAL
## LR(1) items:
anonymous_function -> loption(type_parameters) list(terminated(mode_constraint,DBLARROW)) raw_parenthetic_type COLON raw_normal_type EQUAL . raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 315
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 220:
## Known stack suffix:
## ASSERT
## LR(1) items:
raw_reasonable_expression -> ASSERT . raw_very_loose_type [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On CONSUMES shift to state 118
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On raw_very_loose_type shift to state 221
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 130
-- On raw_consumes_type shift to state 131
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 221:
## Known stack suffix:
## ASSERT raw_very_loose_type
## LR(1) items:
raw_reasonable_expression -> ASSERT raw_very_loose_type . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_reasonable_expression -> ASSERT raw_very_loose_type

State 222:
## Known stack suffix:
## reasonable_expression
## LR(1) items:
raw_fragile_expression -> reasonable_expression . SEMI raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_fragile_expression -> reasonable_expression . SEMI [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On SEMI shift to state 223
## Reductions:

State 223:
## Known stack suffix:
## reasonable_expression SEMI
## LR(1) items:
raw_fragile_expression -> reasonable_expression SEMI . raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_fragile_expression -> reasonable_expression SEMI . [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 224
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->
-- On WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE
--   reduce production raw_fragile_expression -> reasonable_expression SEMI

State 224:
## Known stack suffix:
## reasonable_expression SEMI raw_tuple_or(raw_fragile_expression)
## LR(1) items:
raw_fragile_expression -> reasonable_expression SEMI raw_tuple_or(raw_fragile_expression) . [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_fragile_expression -> reasonable_expression SEMI raw_tuple_or(raw_fragile_expression)

State 225:
## Known stack suffix:
## raw_tight_expression
## LR(1) items:
raw_application_expression -> raw_tight_expression . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_reasonable_expression -> raw_tight_expression . DOT variable LARROW reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_tight_expression -> raw_tight_expression . DOT variable [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On DOT shift to state 226
## Reductions:
-- On WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_application_expression -> raw_tight_expression

State 226:
## Known stack suffix:
## raw_tight_expression DOT
## LR(1) items:
raw_reasonable_expression -> raw_tight_expression DOT . variable LARROW reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_tight_expression -> raw_tight_expression DOT . variable [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 227
## Reductions:

State 227:
## Known stack suffix:
## raw_tight_expression DOT variable
## LR(1) items:
raw_reasonable_expression -> raw_tight_expression DOT variable . LARROW reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_tight_expression -> raw_tight_expression DOT variable . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On LARROW shift to state 228
## Reductions:
-- On WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_tight_expression -> raw_tight_expression DOT variable

State 228:
## Known stack suffix:
## raw_tight_expression DOT variable LARROW
## LR(1) items:
raw_reasonable_expression -> raw_tight_expression DOT variable LARROW . reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 229
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 230
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 252
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 229:
## Known stack suffix:
## raw_tight_expression DOT variable LARROW reasonable_expression
## LR(1) items:
raw_reasonable_expression -> raw_tight_expression DOT variable LARROW reasonable_expression . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_reasonable_expression -> raw_tight_expression DOT variable LARROW reasonable_expression

State 230:
## Known stack suffix:
## raw_reasonable_expression
## LR(1) items:
reasonable_expression -> raw_reasonable_expression . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reasonable_expression -> raw_reasonable_expression

State 231:
## Known stack suffix:
## raw_atomic_expression
## LR(1) items:
raw_tight_expression -> raw_atomic_expression . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_tight_expression -> raw_atomic_expression

State 232:
## Known stack suffix:
## raw_application_expression
## LR(1) items:
raw_algebraic_expression -> raw_application_expression . [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_application_expression -> raw_application_expression . raw_tight_expression [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_application_expression -> raw_application_expression . LBRACKET separated_nonempty_list(COMMA,type_application_component) RBRACKET [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 233
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 243
-- On raw_atomic_expression shift to state 231
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_algebraic_expression -> raw_application_expression

State 233:
## Known stack suffix:
## raw_application_expression LBRACKET
## LR(1) items:
raw_application_expression -> raw_application_expression LBRACKET . separated_nonempty_list(COMMA,type_application_component) RBRACKET [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 234
-- On type_parameters shift to state 87
-- On type_application_component shift to state 237
-- On separated_nonempty_list(COMMA,type_application_component) shift to state 241
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 240
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 234:
## Known stack suffix:
## variable
## LR(1) items:
maybe_qualified(variable) -> variable . [ UNKNOWN UNDERSCORE UIDENT RBRACKET LPAREN LIDENT EMPTY DYNAMIC COMMA ARROW ]
type_application_component -> variable . EQUAL raw_normal_type [ RBRACKET COMMA ]
## Transitions:
-- On EQUAL shift to state 235
## Reductions:
-- On UNKNOWN UNDERSCORE UIDENT RBRACKET LPAREN LIDENT EMPTY DYNAMIC COMMA ARROW
--   reduce production maybe_qualified(variable) -> variable

State 235:
## Known stack suffix:
## variable EQUAL
## LR(1) items:
type_application_component -> variable EQUAL . raw_normal_type [ RBRACKET COMMA ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 87
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 236
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 236:
## Known stack suffix:
## variable EQUAL raw_normal_type
## LR(1) items:
type_application_component -> variable EQUAL raw_normal_type . [ RBRACKET COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_application_component -> variable EQUAL raw_normal_type

State 237:
## Known stack suffix:
## type_application_component
## LR(1) items:
separated_nonempty_list(COMMA,type_application_component) -> type_application_component . [ RBRACKET ]
separated_nonempty_list(COMMA,type_application_component) -> type_application_component . COMMA separated_nonempty_list(COMMA,type_application_component) [ RBRACKET ]
## Transitions:
-- On COMMA shift to state 238
## Reductions:
-- On RBRACKET
--   reduce production separated_nonempty_list(COMMA,type_application_component) -> type_application_component

State 238:
## Known stack suffix:
## type_application_component COMMA
## LR(1) items:
separated_nonempty_list(COMMA,type_application_component) -> type_application_component COMMA . separated_nonempty_list(COMMA,type_application_component) [ RBRACKET ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 234
-- On type_parameters shift to state 87
-- On type_application_component shift to state 237
-- On separated_nonempty_list(COMMA,type_application_component) shift to state 239
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 240
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 239:
## Known stack suffix:
## type_application_component COMMA separated_nonempty_list(COMMA,type_application_component)
## LR(1) items:
separated_nonempty_list(COMMA,type_application_component) -> type_application_component COMMA separated_nonempty_list(COMMA,type_application_component) . [ RBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,type_application_component) -> type_application_component COMMA separated_nonempty_list(COMMA,type_application_component)

State 240:
## Known stack suffix:
## raw_normal_type
## LR(1) items:
type_application_component -> raw_normal_type . [ RBRACKET COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_application_component -> raw_normal_type

State 241:
## Known stack suffix:
## raw_application_expression LBRACKET separated_nonempty_list(COMMA,type_application_component)
## LR(1) items:
raw_application_expression -> raw_application_expression LBRACKET separated_nonempty_list(COMMA,type_application_component) . RBRACKET [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RBRACKET shift to state 242
## Reductions:

State 242:
## Known stack suffix:
## raw_application_expression LBRACKET separated_nonempty_list(COMMA,type_application_component) RBRACKET
## LR(1) items:
raw_application_expression -> raw_application_expression LBRACKET separated_nonempty_list(COMMA,type_application_component) RBRACKET . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_application_expression -> raw_application_expression LBRACKET separated_nonempty_list(COMMA,type_application_component) RBRACKET

State 243:
## Known stack suffix:
## raw_application_expression raw_tight_expression
## LR(1) items:
raw_application_expression -> raw_application_expression raw_tight_expression . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_tight_expression -> raw_tight_expression . DOT variable [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On DOT shift to state 244
## Reductions:
-- On WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_application_expression -> raw_application_expression raw_tight_expression

State 244:
## Known stack suffix:
## raw_tight_expression DOT
## LR(1) items:
raw_tight_expression -> raw_tight_expression DOT . variable [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 245
## Reductions:

State 245:
## Known stack suffix:
## raw_tight_expression DOT variable
## LR(1) items:
raw_tight_expression -> raw_tight_expression DOT variable . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_tight_expression -> raw_tight_expression DOT variable

State 246:
## Known stack suffix:
## maybe_qualified(variable)
## LR(1) items:
raw_atomic_expression -> maybe_qualified(variable) . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_expression -> maybe_qualified(variable)

State 247:
## Known stack suffix:
## maybe_qualified(datacon)
## LR(1) items:
generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) -> maybe_qualified(datacon) . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) -> maybe_qualified(datacon) . LBRACE right_flexible_list(SEMI,data_field_expression) RBRACE [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On LBRACE shift to state 248
## Reductions:
-- On WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) -> maybe_qualified(datacon)

State 248:
## Known stack suffix:
## maybe_qualified(datacon) LBRACE
## LR(1) items:
generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) -> maybe_qualified(datacon) LBRACE . right_flexible_list(SEMI,data_field_expression) RBRACE [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 249
-- On right_flexible_list(SEMI,data_field_expression) shift to state 310
-- On data_field_expression shift to state 312
## Reductions:
-- On RBRACE
--   reduce production right_flexible_list(SEMI,data_field_expression) ->

State 249:
## Known stack suffix:
## variable
## LR(1) items:
data_field_expression -> variable . EQUAL reasonable_expression [ SEMI RBRACE ]
data_field_expression -> variable . [ SEMI RBRACE ]
## Transitions:
-- On EQUAL shift to state 250
## Reductions:
-- On SEMI RBRACE
--   reduce production data_field_expression -> variable

State 250:
## Known stack suffix:
## variable EQUAL
## LR(1) items:
data_field_expression -> variable EQUAL . reasonable_expression [ SEMI RBRACE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 251
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 230
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 252
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 251:
## Known stack suffix:
## variable EQUAL reasonable_expression
## LR(1) items:
data_field_expression -> variable EQUAL reasonable_expression . [ SEMI RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production data_field_expression -> variable EQUAL reasonable_expression

State 252:
## Known stack suffix:
## raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_reasonable_expression -> raw_algebraic_expression . COLON raw_very_loose_type [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_reasonable_expression -> raw_algebraic_expression . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On STAR shift to state 253
-- On PLUS shift to state 259
-- On OPINFIX4 shift to state 256
-- On OPINFIX3 shift to state 261
-- On OPINFIX2 shift to state 263
-- On OPINFIX1 shift to state 265
-- On OPINFIX0d shift to state 269
-- On OPINFIX0c shift to state 271
-- On OPINFIX0b shift to state 273
-- On OPINFIX0a shift to state 277
-- On MINUS shift to state 267
-- On EQUAL shift to state 275
-- On COLONEQUAL shift to state 279
-- On COLON shift to state 281
-- On ADOPTS shift to state 283
## Reductions:
-- On WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE
--   reduce production raw_reasonable_expression -> raw_algebraic_expression

State 253:
## Known stack suffix:
## raw_algebraic_expression STAR
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression STAR . raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 255
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 254:
## Known stack suffix:
## raw_tight_expression
## LR(1) items:
raw_application_expression -> raw_tight_expression . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_tight_expression -> raw_tight_expression . DOT variable [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On DOT shift to state 244
## Reductions:
-- On WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_application_expression -> raw_tight_expression

State 255:
## Known stack suffix:
## raw_algebraic_expression STAR raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression STAR raw_algebraic_expression . [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On OPINFIX4 shift to state 256
## Reductions:
-- On WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_algebraic_expression -> raw_algebraic_expression STAR raw_algebraic_expression

State 256:
## Known stack suffix:
## raw_algebraic_expression OPINFIX4
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression OPINFIX4 . raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 257
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 257:
## Known stack suffix:
## raw_algebraic_expression OPINFIX4 raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression OPINFIX4 raw_algebraic_expression . [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On OPINFIX4 shift to state 256
## Reductions:
-- On WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_algebraic_expression -> raw_algebraic_expression OPINFIX4 raw_algebraic_expression

State 258:
## Known stack suffix:
## generic_datacon_application(right_flexible_list(SEMI,data_field_expression))
## LR(1) items:
raw_atomic_expression -> generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_expression -> generic_datacon_application(right_flexible_list(SEMI,data_field_expression))

State 259:
## Known stack suffix:
## raw_algebraic_expression PLUS
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression PLUS . raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 260
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 260:
## Known stack suffix:
## raw_algebraic_expression PLUS raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression PLUS raw_algebraic_expression . [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On STAR shift to state 253
-- On OPINFIX4 shift to state 256
-- On OPINFIX3 shift to state 261
## Reductions:
-- On WITH VAL TO THEN SEMI RPAREN RBRACE PLUS OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_algebraic_expression -> raw_algebraic_expression PLUS raw_algebraic_expression

State 261:
## Known stack suffix:
## raw_algebraic_expression OPINFIX3
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression OPINFIX3 . raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 262
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 262:
## Known stack suffix:
## raw_algebraic_expression OPINFIX3 raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression OPINFIX3 raw_algebraic_expression . [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On OPINFIX4 shift to state 256
## Reductions:
-- On WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_algebraic_expression -> raw_algebraic_expression OPINFIX3 raw_algebraic_expression

State 263:
## Known stack suffix:
## raw_algebraic_expression OPINFIX2
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression OPINFIX2 . raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 264
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 264:
## Known stack suffix:
## raw_algebraic_expression OPINFIX2 raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression OPINFIX2 raw_algebraic_expression . [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On STAR shift to state 253
-- On OPINFIX4 shift to state 256
-- On OPINFIX3 shift to state 261
## Reductions:
-- On WITH VAL TO THEN SEMI RPAREN RBRACE PLUS OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_algebraic_expression -> raw_algebraic_expression OPINFIX2 raw_algebraic_expression

State 265:
## Known stack suffix:
## raw_algebraic_expression OPINFIX1
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression OPINFIX1 . raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 266
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 266:
## Known stack suffix:
## raw_algebraic_expression OPINFIX1 raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression OPINFIX1 raw_algebraic_expression . [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On STAR shift to state 253
-- On PLUS shift to state 259
-- On OPINFIX4 shift to state 256
-- On OPINFIX3 shift to state 261
-- On OPINFIX2 shift to state 263
-- On OPINFIX1 shift to state 265
-- On MINUS shift to state 267
## Reductions:
-- On WITH VAL TO THEN SEMI RPAREN RBRACE OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_algebraic_expression -> raw_algebraic_expression OPINFIX1 raw_algebraic_expression

State 267:
## Known stack suffix:
## raw_algebraic_expression MINUS
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression MINUS . raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 268
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 268:
## Known stack suffix:
## raw_algebraic_expression MINUS raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression MINUS raw_algebraic_expression . [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On STAR shift to state 253
-- On OPINFIX4 shift to state 256
-- On OPINFIX3 shift to state 261
## Reductions:
-- On WITH VAL TO THEN SEMI RPAREN RBRACE PLUS OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_algebraic_expression -> raw_algebraic_expression MINUS raw_algebraic_expression

State 269:
## Known stack suffix:
## raw_algebraic_expression OPINFIX0d
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression OPINFIX0d . raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 270
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 270:
## Known stack suffix:
## raw_algebraic_expression OPINFIX0d raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression OPINFIX0d raw_algebraic_expression . [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On STAR shift to state 253
-- On PLUS shift to state 259
-- On OPINFIX4 shift to state 256
-- On OPINFIX3 shift to state 261
-- On OPINFIX2 shift to state 263
-- On OPINFIX1 shift to state 265
-- On MINUS shift to state 267
## Reductions:
-- On WITH VAL TO THEN SEMI RPAREN RBRACE OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_algebraic_expression -> raw_algebraic_expression OPINFIX0d raw_algebraic_expression

State 271:
## Known stack suffix:
## raw_algebraic_expression OPINFIX0c
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression OPINFIX0c . raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 272
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 272:
## Known stack suffix:
## raw_algebraic_expression OPINFIX0c raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression OPINFIX0c raw_algebraic_expression . [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On STAR shift to state 253
-- On PLUS shift to state 259
-- On OPINFIX4 shift to state 256
-- On OPINFIX3 shift to state 261
-- On OPINFIX2 shift to state 263
-- On OPINFIX1 shift to state 265
-- On OPINFIX0d shift to state 269
-- On MINUS shift to state 267
## Reductions:
-- On WITH VAL TO THEN SEMI RPAREN RBRACE OPINFIX0c OPINFIX0b OPINFIX0a OPEN IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_algebraic_expression -> raw_algebraic_expression OPINFIX0c raw_algebraic_expression

State 273:
## Known stack suffix:
## raw_algebraic_expression OPINFIX0b
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression OPINFIX0b . raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 274
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 274:
## Known stack suffix:
## raw_algebraic_expression OPINFIX0b raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression OPINFIX0b raw_algebraic_expression . [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On STAR shift to state 253
-- On PLUS shift to state 259
-- On OPINFIX4 shift to state 256
-- On OPINFIX3 shift to state 261
-- On OPINFIX2 shift to state 263
-- On OPINFIX1 shift to state 265
-- On OPINFIX0d shift to state 269
-- On OPINFIX0c shift to state 271
-- On MINUS shift to state 267
-- On EQUAL shift to state 275
## Reductions:
-- On WITH VAL TO THEN SEMI RPAREN RBRACE OPINFIX0b OPINFIX0a OPEN IN FROM EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_algebraic_expression -> raw_algebraic_expression OPINFIX0b raw_algebraic_expression

State 275:
## Known stack suffix:
## raw_algebraic_expression EQUAL
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression EQUAL . raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 276
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 276:
## Known stack suffix:
## raw_algebraic_expression EQUAL raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression EQUAL raw_algebraic_expression . [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On STAR shift to state 253
-- On PLUS shift to state 259
-- On OPINFIX4 shift to state 256
-- On OPINFIX3 shift to state 261
-- On OPINFIX2 shift to state 263
-- On OPINFIX1 shift to state 265
-- On OPINFIX0d shift to state 269
-- On MINUS shift to state 267
## Reductions:
-- On WITH VAL TO THEN SEMI RPAREN RBRACE OPINFIX0c OPINFIX0b OPINFIX0a OPEN IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_algebraic_expression -> raw_algebraic_expression EQUAL raw_algebraic_expression

State 277:
## Known stack suffix:
## raw_algebraic_expression OPINFIX0a
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression OPINFIX0a . raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 278
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 278:
## Known stack suffix:
## raw_algebraic_expression OPINFIX0a raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression OPINFIX0a raw_algebraic_expression . [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On STAR shift to state 253
-- On PLUS shift to state 259
-- On OPINFIX4 shift to state 256
-- On OPINFIX3 shift to state 261
-- On OPINFIX2 shift to state 263
-- On OPINFIX1 shift to state 265
-- On OPINFIX0d shift to state 269
-- On OPINFIX0c shift to state 271
-- On OPINFIX0b shift to state 273
-- On MINUS shift to state 267
-- On EQUAL shift to state 275
## Reductions:
-- On WITH VAL TO THEN SEMI RPAREN RBRACE OPINFIX0a OPEN IN FROM EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_algebraic_expression -> raw_algebraic_expression OPINFIX0a raw_algebraic_expression

State 279:
## Known stack suffix:
## raw_algebraic_expression COLONEQUAL
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression COLONEQUAL . raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 280
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 280:
## Known stack suffix:
## raw_algebraic_expression COLONEQUAL raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression COLONEQUAL raw_algebraic_expression . [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On STAR shift to state 253
-- On PLUS shift to state 259
-- On OPINFIX4 shift to state 256
-- On OPINFIX3 shift to state 261
-- On OPINFIX2 shift to state 263
-- On OPINFIX1 shift to state 265
-- On OPINFIX0d shift to state 269
-- On OPINFIX0c shift to state 271
-- On OPINFIX0b shift to state 273
-- On OPINFIX0a shift to state 277
-- On MINUS shift to state 267
-- On EQUAL shift to state 275
## Reductions:
-- On WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_algebraic_expression -> raw_algebraic_expression COLONEQUAL raw_algebraic_expression

State 281:
## Known stack suffix:
## raw_algebraic_expression COLON
## LR(1) items:
raw_reasonable_expression -> raw_algebraic_expression COLON . raw_very_loose_type [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On CONSUMES shift to state 118
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On raw_very_loose_type shift to state 282
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 130
-- On raw_consumes_type shift to state 131
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 282:
## Known stack suffix:
## raw_algebraic_expression COLON raw_very_loose_type
## LR(1) items:
raw_reasonable_expression -> raw_algebraic_expression COLON raw_very_loose_type . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_reasonable_expression -> raw_algebraic_expression COLON raw_very_loose_type

State 283:
## Known stack suffix:
## raw_algebraic_expression ADOPTS
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression ADOPTS . raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 284
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 284:
## Known stack suffix:
## raw_algebraic_expression ADOPTS raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression ADOPTS raw_algebraic_expression . [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On STAR shift to state 253
-- On PLUS shift to state 259
-- On OPINFIX4 shift to state 256
-- On OPINFIX3 shift to state 261
-- On OPINFIX2 shift to state 263
-- On OPINFIX1 shift to state 265
-- On OPINFIX0d shift to state 269
-- On OPINFIX0c shift to state 271
-- On OPINFIX0b shift to state 273
-- On OPINFIX0a shift to state 277
-- On MINUS shift to state 267
-- On EQUAL shift to state 275
-- On COLONEQUAL shift to state 279
## Reductions:
-- On WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA COMMA COLON BELOW BAR AND ALIAS ABSTRACT ABOVE
--   reduce production raw_algebraic_expression -> raw_algebraic_expression ADOPTS raw_algebraic_expression

State 285:
## Known stack suffix:
## optional_preserving
## LR(1) items:
raw_reasonable_expression -> optional_preserving . WHILE raw_tuple_or(raw_fragile_expression) DO reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_reasonable_expression -> optional_preserving . FOR variable EQUAL raw_tuple_or(raw_fragile_expression) direction raw_tuple_or(raw_fragile_expression) DO reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On WHILE shift to state 286
-- On FOR shift to state 298
## Reductions:

State 286:
## Known stack suffix:
## optional_preserving WHILE
## LR(1) items:
raw_reasonable_expression -> optional_preserving WHILE . raw_tuple_or(raw_fragile_expression) DO reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 287
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 287:
## Known stack suffix:
## optional_preserving WHILE raw_tuple_or(raw_fragile_expression)
## LR(1) items:
raw_reasonable_expression -> optional_preserving WHILE raw_tuple_or(raw_fragile_expression) . DO reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On DO shift to state 288
## Reductions:

State 288:
## Known stack suffix:
## optional_preserving WHILE raw_tuple_or(raw_fragile_expression) DO
## LR(1) items:
raw_reasonable_expression -> optional_preserving WHILE raw_tuple_or(raw_fragile_expression) DO . reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 289
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 230
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 252
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 289:
## Known stack suffix:
## optional_preserving WHILE raw_tuple_or(raw_fragile_expression) DO reasonable_expression
## LR(1) items:
raw_reasonable_expression -> optional_preserving WHILE raw_tuple_or(raw_fragile_expression) DO reasonable_expression . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_reasonable_expression -> optional_preserving WHILE raw_tuple_or(raw_fragile_expression) DO reasonable_expression

State 290:
## Known stack suffix:
## raw_reasonable_expression
## LR(1) items:
raw_fragile_expression -> raw_reasonable_expression . [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
reasonable_expression -> raw_reasonable_expression . [ SEMI ]
## Transitions:
## Reductions:
-- On WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE
--   reduce production raw_fragile_expression -> raw_reasonable_expression
-- On SEMI
--   reduce production reasonable_expression -> raw_reasonable_expression

State 291:
## Known stack suffix:
## raw_fragile_expression
## LR(1) items:
raw_tuple_or(raw_fragile_expression) -> raw_fragile_expression . [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_tuple_or(raw_fragile_expression) -> raw_fragile_expression

State 292:
## Known stack suffix:
## raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_reasonable_expression -> raw_algebraic_expression . COLON raw_very_loose_type [ WITH VAL TO THEN SEMI RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_reasonable_expression -> raw_algebraic_expression . [ WITH VAL TO THEN SEMI RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_tuple_or(raw_fragile_expression) -> raw_algebraic_expression . COMMA separated_nonempty_list(COMMA,algebraic_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On STAR shift to state 253
-- On PLUS shift to state 259
-- On OPINFIX4 shift to state 256
-- On OPINFIX3 shift to state 261
-- On OPINFIX2 shift to state 263
-- On OPINFIX1 shift to state 265
-- On OPINFIX0d shift to state 269
-- On OPINFIX0c shift to state 271
-- On OPINFIX0b shift to state 273
-- On OPINFIX0a shift to state 277
-- On MINUS shift to state 267
-- On EQUAL shift to state 275
-- On COMMA shift to state 293
-- On COLONEQUAL shift to state 279
-- On COLON shift to state 281
-- On ADOPTS shift to state 283
## Reductions:
-- On WITH VAL TO THEN SEMI RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE
--   reduce production raw_reasonable_expression -> raw_algebraic_expression

State 293:
## Known stack suffix:
## raw_algebraic_expression COMMA
## LR(1) items:
raw_tuple_or(raw_fragile_expression) -> raw_algebraic_expression COMMA . separated_nonempty_list(COMMA,algebraic_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On separated_nonempty_list(COMMA,algebraic_expression) shift to state 294
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 295
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 294:
## Known stack suffix:
## raw_algebraic_expression COMMA separated_nonempty_list(COMMA,algebraic_expression)
## LR(1) items:
raw_tuple_or(raw_fragile_expression) -> raw_algebraic_expression COMMA separated_nonempty_list(COMMA,algebraic_expression) . [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_tuple_or(raw_fragile_expression) -> raw_algebraic_expression COMMA separated_nonempty_list(COMMA,algebraic_expression)

State 295:
## Known stack suffix:
## raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
separated_nonempty_list(COMMA,algebraic_expression) -> raw_algebraic_expression . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
separated_nonempty_list(COMMA,algebraic_expression) -> raw_algebraic_expression . COMMA separated_nonempty_list(COMMA,algebraic_expression) [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On STAR shift to state 253
-- On PLUS shift to state 259
-- On OPINFIX4 shift to state 256
-- On OPINFIX3 shift to state 261
-- On OPINFIX2 shift to state 263
-- On OPINFIX1 shift to state 265
-- On OPINFIX0d shift to state 269
-- On OPINFIX0c shift to state 271
-- On OPINFIX0b shift to state 273
-- On OPINFIX0a shift to state 277
-- On MINUS shift to state 267
-- On EQUAL shift to state 275
-- On COMMA shift to state 296
-- On COLONEQUAL shift to state 279
-- On ADOPTS shift to state 283
## Reductions:
-- On WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE
--   reduce production separated_nonempty_list(COMMA,algebraic_expression) -> raw_algebraic_expression

State 296:
## Known stack suffix:
## raw_algebraic_expression COMMA
## LR(1) items:
separated_nonempty_list(COMMA,algebraic_expression) -> raw_algebraic_expression COMMA . separated_nonempty_list(COMMA,algebraic_expression) [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On separated_nonempty_list(COMMA,algebraic_expression) shift to state 297
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 295
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 297:
## Known stack suffix:
## raw_algebraic_expression COMMA separated_nonempty_list(COMMA,algebraic_expression)
## LR(1) items:
separated_nonempty_list(COMMA,algebraic_expression) -> raw_algebraic_expression COMMA separated_nonempty_list(COMMA,algebraic_expression) . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,algebraic_expression) -> raw_algebraic_expression COMMA separated_nonempty_list(COMMA,algebraic_expression)

State 298:
## Known stack suffix:
## optional_preserving FOR
## LR(1) items:
raw_reasonable_expression -> optional_preserving FOR . variable EQUAL raw_tuple_or(raw_fragile_expression) direction raw_tuple_or(raw_fragile_expression) DO reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 299
## Reductions:

State 299:
## Known stack suffix:
## optional_preserving FOR variable
## LR(1) items:
raw_reasonable_expression -> optional_preserving FOR variable . EQUAL raw_tuple_or(raw_fragile_expression) direction raw_tuple_or(raw_fragile_expression) DO reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On EQUAL shift to state 300
## Reductions:

State 300:
## Known stack suffix:
## optional_preserving FOR variable EQUAL
## LR(1) items:
raw_reasonable_expression -> optional_preserving FOR variable EQUAL . raw_tuple_or(raw_fragile_expression) direction raw_tuple_or(raw_fragile_expression) DO reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 301
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 301:
## Known stack suffix:
## optional_preserving FOR variable EQUAL raw_tuple_or(raw_fragile_expression)
## LR(1) items:
raw_reasonable_expression -> optional_preserving FOR variable EQUAL raw_tuple_or(raw_fragile_expression) . direction raw_tuple_or(raw_fragile_expression) DO reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On TO shift to state 302
-- On DOWNTO shift to state 303
-- On BELOW shift to state 304
-- On ABOVE shift to state 305
-- On direction shift to state 306
## Reductions:

State 302:
## Known stack suffix:
## TO
## LR(1) items:
direction -> TO . [ WHILE UIDENT TAKING TAKE TAGOF PRESERVING PACK OPPREFIX MINUS MATCH LPAREN LIDENT LET INT IF GIVE FUN FOR FAIL BEGIN ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direction -> TO

State 303:
## Known stack suffix:
## DOWNTO
## LR(1) items:
direction -> DOWNTO . [ WHILE UIDENT TAKING TAKE TAGOF PRESERVING PACK OPPREFIX MINUS MATCH LPAREN LIDENT LET INT IF GIVE FUN FOR FAIL BEGIN ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direction -> DOWNTO

State 304:
## Known stack suffix:
## BELOW
## LR(1) items:
direction -> BELOW . [ WHILE UIDENT TAKING TAKE TAGOF PRESERVING PACK OPPREFIX MINUS MATCH LPAREN LIDENT LET INT IF GIVE FUN FOR FAIL BEGIN ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direction -> BELOW

State 305:
## Known stack suffix:
## ABOVE
## LR(1) items:
direction -> ABOVE . [ WHILE UIDENT TAKING TAKE TAGOF PRESERVING PACK OPPREFIX MINUS MATCH LPAREN LIDENT LET INT IF GIVE FUN FOR FAIL BEGIN ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direction -> ABOVE

State 306:
## Known stack suffix:
## optional_preserving FOR variable EQUAL raw_tuple_or(raw_fragile_expression) direction
## LR(1) items:
raw_reasonable_expression -> optional_preserving FOR variable EQUAL raw_tuple_or(raw_fragile_expression) direction . raw_tuple_or(raw_fragile_expression) DO reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 307
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 307:
## Known stack suffix:
## optional_preserving FOR variable EQUAL raw_tuple_or(raw_fragile_expression) direction raw_tuple_or(raw_fragile_expression)
## LR(1) items:
raw_reasonable_expression -> optional_preserving FOR variable EQUAL raw_tuple_or(raw_fragile_expression) direction raw_tuple_or(raw_fragile_expression) . DO reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On DO shift to state 308
## Reductions:

State 308:
## Known stack suffix:
## optional_preserving FOR variable EQUAL raw_tuple_or(raw_fragile_expression) direction raw_tuple_or(raw_fragile_expression) DO
## LR(1) items:
raw_reasonable_expression -> optional_preserving FOR variable EQUAL raw_tuple_or(raw_fragile_expression) direction raw_tuple_or(raw_fragile_expression) DO . reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 309
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 230
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 252
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 309:
## Known stack suffix:
## optional_preserving FOR variable EQUAL raw_tuple_or(raw_fragile_expression) direction raw_tuple_or(raw_fragile_expression) DO reasonable_expression
## LR(1) items:
raw_reasonable_expression -> optional_preserving FOR variable EQUAL raw_tuple_or(raw_fragile_expression) direction raw_tuple_or(raw_fragile_expression) DO reasonable_expression . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_reasonable_expression -> optional_preserving FOR variable EQUAL raw_tuple_or(raw_fragile_expression) direction raw_tuple_or(raw_fragile_expression) DO reasonable_expression

State 310:
## Known stack suffix:
## maybe_qualified(datacon) LBRACE right_flexible_list(SEMI,data_field_expression)
## LR(1) items:
generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) -> maybe_qualified(datacon) LBRACE right_flexible_list(SEMI,data_field_expression) . RBRACE [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RBRACE shift to state 311
## Reductions:

State 311:
## Known stack suffix:
## maybe_qualified(datacon) LBRACE right_flexible_list(SEMI,data_field_expression) RBRACE
## LR(1) items:
generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) -> maybe_qualified(datacon) LBRACE right_flexible_list(SEMI,data_field_expression) RBRACE . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) -> maybe_qualified(datacon) LBRACE right_flexible_list(SEMI,data_field_expression) RBRACE

State 312:
## Known stack suffix:
## data_field_expression
## LR(1) items:
right_flexible_list(SEMI,data_field_expression) -> data_field_expression . [ RBRACE ]
right_flexible_list(SEMI,data_field_expression) -> data_field_expression . SEMI right_flexible_list(SEMI,data_field_expression) [ RBRACE ]
## Transitions:
-- On SEMI shift to state 313
## Reductions:
-- On RBRACE
--   reduce production right_flexible_list(SEMI,data_field_expression) -> data_field_expression

State 313:
## Known stack suffix:
## data_field_expression SEMI
## LR(1) items:
right_flexible_list(SEMI,data_field_expression) -> data_field_expression SEMI . right_flexible_list(SEMI,data_field_expression) [ RBRACE ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 249
-- On right_flexible_list(SEMI,data_field_expression) shift to state 314
-- On data_field_expression shift to state 312
## Reductions:
-- On RBRACE
--   reduce production right_flexible_list(SEMI,data_field_expression) ->

State 314:
## Known stack suffix:
## data_field_expression SEMI right_flexible_list(SEMI,data_field_expression)
## LR(1) items:
right_flexible_list(SEMI,data_field_expression) -> data_field_expression SEMI right_flexible_list(SEMI,data_field_expression) . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production right_flexible_list(SEMI,data_field_expression) -> data_field_expression SEMI right_flexible_list(SEMI,data_field_expression)

State 315:
## Known stack suffix:
## loption(type_parameters) list(terminated(mode_constraint,DBLARROW)) raw_parenthetic_type COLON raw_normal_type EQUAL raw_tuple_or(raw_fragile_expression)
## LR(1) items:
anonymous_function -> loption(type_parameters) list(terminated(mode_constraint,DBLARROW)) raw_parenthetic_type COLON raw_normal_type EQUAL raw_tuple_or(raw_fragile_expression) . [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production anonymous_function -> loption(type_parameters) list(terminated(mode_constraint,DBLARROW)) raw_parenthetic_type COLON raw_normal_type EQUAL raw_tuple_or(raw_fragile_expression)

State 316:
## Known stack suffix:
## FUN anonymous_function
## LR(1) items:
raw_fragile_expression -> FUN anonymous_function . [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_fragile_expression -> FUN anonymous_function

State 317:
## Known stack suffix:
## GIVE raw_tuple_or(raw_fragile_expression)
## LR(1) items:
raw_reasonable_expression -> GIVE raw_tuple_or(raw_fragile_expression) . TO reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On TO shift to state 318
## Reductions:

State 318:
## Known stack suffix:
## GIVE raw_tuple_or(raw_fragile_expression) TO
## LR(1) items:
raw_reasonable_expression -> GIVE raw_tuple_or(raw_fragile_expression) TO . reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 319
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 230
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 252
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 319:
## Known stack suffix:
## GIVE raw_tuple_or(raw_fragile_expression) TO reasonable_expression
## LR(1) items:
raw_reasonable_expression -> GIVE raw_tuple_or(raw_fragile_expression) TO reasonable_expression . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_reasonable_expression -> GIVE raw_tuple_or(raw_fragile_expression) TO reasonable_expression

State 320:
## Known stack suffix:
## IF explain raw_tuple_or(raw_fragile_expression)
## LR(1) items:
raw_reasonable_expression -> IF explain raw_tuple_or(raw_fragile_expression) . THEN raw_tuple_or(raw_reasonable_expression) [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_reasonable_expression -> IF explain raw_tuple_or(raw_fragile_expression) . THEN raw_tuple_or(raw_reasonable_expression) ELSE raw_tuple_or(raw_reasonable_expression) [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On THEN shift to state 321
## Reductions:

State 321:
## Known stack suffix:
## IF explain raw_tuple_or(raw_fragile_expression) THEN
## LR(1) items:
raw_reasonable_expression -> IF explain raw_tuple_or(raw_fragile_expression) THEN . raw_tuple_or(raw_reasonable_expression) [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_reasonable_expression -> IF explain raw_tuple_or(raw_fragile_expression) THEN . raw_tuple_or(raw_reasonable_expression) ELSE raw_tuple_or(raw_reasonable_expression) [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On raw_tuple_or(raw_reasonable_expression) shift to state 322
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 325
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 326
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 322:
## Known stack suffix:
## IF explain raw_tuple_or(raw_fragile_expression) THEN raw_tuple_or(raw_reasonable_expression)
## LR(1) items:
raw_reasonable_expression -> IF explain raw_tuple_or(raw_fragile_expression) THEN raw_tuple_or(raw_reasonable_expression) . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_reasonable_expression -> IF explain raw_tuple_or(raw_fragile_expression) THEN raw_tuple_or(raw_reasonable_expression) . ELSE raw_tuple_or(raw_reasonable_expression) [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On ELSE shift to state 323
## Reductions:
-- On WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE
--   reduce production raw_reasonable_expression -> IF explain raw_tuple_or(raw_fragile_expression) THEN raw_tuple_or(raw_reasonable_expression)

State 323:
## Known stack suffix:
## IF explain raw_tuple_or(raw_fragile_expression) THEN raw_tuple_or(raw_reasonable_expression) ELSE
## LR(1) items:
raw_reasonable_expression -> IF explain raw_tuple_or(raw_fragile_expression) THEN raw_tuple_or(raw_reasonable_expression) ELSE . raw_tuple_or(raw_reasonable_expression) [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On raw_tuple_or(raw_reasonable_expression) shift to state 324
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 325
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 326
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 324:
## Known stack suffix:
## IF explain raw_tuple_or(raw_fragile_expression) THEN raw_tuple_or(raw_reasonable_expression) ELSE raw_tuple_or(raw_reasonable_expression)
## LR(1) items:
raw_reasonable_expression -> IF explain raw_tuple_or(raw_fragile_expression) THEN raw_tuple_or(raw_reasonable_expression) ELSE raw_tuple_or(raw_reasonable_expression) . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_reasonable_expression -> IF explain raw_tuple_or(raw_fragile_expression) THEN raw_tuple_or(raw_reasonable_expression) ELSE raw_tuple_or(raw_reasonable_expression)

State 325:
## Known stack suffix:
## raw_reasonable_expression
## LR(1) items:
raw_tuple_or(raw_reasonable_expression) -> raw_reasonable_expression . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_tuple_or(raw_reasonable_expression) -> raw_reasonable_expression

State 326:
## Known stack suffix:
## raw_algebraic_expression
## LR(1) items:
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_reasonable_expression -> raw_algebraic_expression . COLON raw_very_loose_type [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_reasonable_expression -> raw_algebraic_expression . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_tuple_or(raw_reasonable_expression) -> raw_algebraic_expression . COMMA separated_nonempty_list(COMMA,algebraic_expression) [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On STAR shift to state 253
-- On PLUS shift to state 259
-- On OPINFIX4 shift to state 256
-- On OPINFIX3 shift to state 261
-- On OPINFIX2 shift to state 263
-- On OPINFIX1 shift to state 265
-- On OPINFIX0d shift to state 269
-- On OPINFIX0c shift to state 271
-- On OPINFIX0b shift to state 273
-- On OPINFIX0a shift to state 277
-- On MINUS shift to state 267
-- On EQUAL shift to state 275
-- On COMMA shift to state 327
-- On COLONEQUAL shift to state 279
-- On COLON shift to state 281
-- On ADOPTS shift to state 283
## Reductions:
-- On WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE
--   reduce production raw_reasonable_expression -> raw_algebraic_expression

State 327:
## Known stack suffix:
## raw_algebraic_expression COMMA
## LR(1) items:
raw_tuple_or(raw_reasonable_expression) -> raw_algebraic_expression COMMA . separated_nonempty_list(COMMA,algebraic_expression) [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On separated_nonempty_list(COMMA,algebraic_expression) shift to state 328
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 295
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 328:
## Known stack suffix:
## raw_algebraic_expression COMMA separated_nonempty_list(COMMA,algebraic_expression)
## LR(1) items:
raw_tuple_or(raw_reasonable_expression) -> raw_algebraic_expression COMMA separated_nonempty_list(COMMA,algebraic_expression) . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_tuple_or(raw_reasonable_expression) -> raw_algebraic_expression COMMA separated_nonempty_list(COMMA,algebraic_expression)

State 329:
## Known stack suffix:
## LET FLEX type_binding IN raw_tuple_or(raw_fragile_expression)
## LR(1) items:
raw_fragile_expression -> LET FLEX type_binding IN raw_tuple_or(raw_fragile_expression) . [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_fragile_expression -> LET FLEX type_binding IN raw_tuple_or(raw_fragile_expression)

State 330:
## Known stack suffix:
## LET DATA
## LR(1) items:
raw_fragile_expression -> LET DATA . separated_nonempty_list(AND,concrete_data_type_def) IN raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On MUTABLE shift to state 331
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 364
-- On separated_nonempty_list(AND,concrete_data_type_def) shift to state 369
-- On concrete_data_type_def shift to state 372
## Reductions:

State 331:
## Known stack suffix:
## MUTABLE
## LR(1) items:
concrete_data_type_def -> MUTABLE . variable list(atomic_type_binding_with_variance) EQUAL reverse_left_flexible_list(BAR,data_type_def_branch) option(preceded(ADOPTS,arbitrary_type)) [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 332
## Reductions:

State 332:
## Known stack suffix:
## MUTABLE variable
## LR(1) items:
concrete_data_type_def -> MUTABLE variable . list(atomic_type_binding_with_variance) EQUAL reverse_left_flexible_list(BAR,data_type_def_branch) option(preceded(ADOPTS,arbitrary_type)) [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
-- On PLUS shift to state 333
-- On MINUS shift to state 334
-- On variance shift to state 335
-- On list(atomic_type_binding_with_variance) shift to state 338
-- On atomic_type_binding_with_variance shift to state 362
## Reductions:
-- On EQUAL
--   reduce production list(atomic_type_binding_with_variance) ->
-- On LPAREN LIDENT
--   reduce production variance ->

State 333:
## Known stack suffix:
## PLUS
## LR(1) items:
variance -> PLUS . [ LPAREN LIDENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variance -> PLUS

State 334:
## Known stack suffix:
## MINUS
## LR(1) items:
variance -> MINUS . [ LPAREN LIDENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variance -> MINUS

State 335:
## Known stack suffix:
## variance
## LR(1) items:
atomic_type_binding_with_variance -> variance . atomic_type_binding [ VAL PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COLON ALIAS ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 57
-- On LIDENT shift to state 43
-- On variable shift to state 336
-- On atomic_type_binding shift to state 337
## Reductions:

State 336:
## Known stack suffix:
## variable
## LR(1) items:
atomic_type_binding -> variable . [ VAL PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COLON ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atomic_type_binding -> variable

State 337:
## Known stack suffix:
## variance atomic_type_binding
## LR(1) items:
atomic_type_binding_with_variance -> variance atomic_type_binding . [ VAL PLUS OPEN MINUS LPAREN LIDENT IN FACT EQUAL EOF DATA COLON ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atomic_type_binding_with_variance -> variance atomic_type_binding

State 338:
## Known stack suffix:
## MUTABLE variable list(atomic_type_binding_with_variance)
## LR(1) items:
concrete_data_type_def -> MUTABLE variable list(atomic_type_binding_with_variance) . EQUAL reverse_left_flexible_list(BAR,data_type_def_branch) option(preceded(ADOPTS,arbitrary_type)) [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
-- On EQUAL shift to state 339
## Reductions:

State 339:
## Known stack suffix:
## MUTABLE variable list(atomic_type_binding_with_variance) EQUAL
## LR(1) items:
concrete_data_type_def -> MUTABLE variable list(atomic_type_binding_with_variance) EQUAL . reverse_left_flexible_list(BAR,data_type_def_branch) option(preceded(ADOPTS,arbitrary_type)) [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On MUTABLE shift to state 340
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 341
-- On reverse_left_flexible_list(BAR,data_type_def_branch) shift to state 353
-- On raw_tight_type shift to state 342
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type_no_adopts shift to state 361
-- On raw_atomic_type shift to state 92
-- On mode shift to state 345
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 144
-- On existential_quantifiers shift to state 349
## Reductions:
-- On VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT
--   reduce production reverse_left_flexible_list(BAR,data_type_def_branch) ->

State 340:
## Known stack suffix:
## MUTABLE
## LR(1) items:
reverse_left_flexible_list(BAR,data_type_def_branch) -> MUTABLE . raw_normal_type_no_adopts [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 341
-- On raw_tight_type shift to state 342
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type_no_adopts shift to state 352
-- On raw_atomic_type shift to state 92
-- On mode shift to state 345
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 144
-- On existential_quantifiers shift to state 349
## Reductions:

State 341:
## Known stack suffix:
## type_parameters
## LR(1) items:
raw_normal_type_no_adopts -> type_parameters . raw_normal_type_no_adopts [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 341
-- On raw_tight_type shift to state 342
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type_no_adopts shift to state 351
-- On raw_atomic_type shift to state 92
-- On mode shift to state 345
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 144
-- On existential_quantifiers shift to state 349
## Reductions:

State 342:
## Known stack suffix:
## raw_tight_type
## LR(1) items:
raw_normal_type_no_adopts -> raw_tight_type . [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
raw_normal_type_no_adopts -> raw_tight_type . ARROW raw_normal_type_no_adopts [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
raw_tight_type -> raw_tight_type . raw_atomic_type [ VAL UNKNOWN UNDERSCORE UIDENT OPEN LPAREN LIDENT IN EOF EMPTY DYNAMIC DATA BAR ARROW AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On ARROW shift to state 343
-- On variable shift to state 82
-- On raw_parenthetic_type shift to state 90
-- On raw_atomic_type shift to state 145
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 144
## Reductions:
-- On VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT
--   reduce production raw_normal_type_no_adopts -> raw_tight_type

State 343:
## Known stack suffix:
## raw_tight_type ARROW
## LR(1) items:
raw_normal_type_no_adopts -> raw_tight_type ARROW . raw_normal_type_no_adopts [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 341
-- On raw_tight_type shift to state 342
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type_no_adopts shift to state 344
-- On raw_atomic_type shift to state 92
-- On mode shift to state 345
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 144
-- On existential_quantifiers shift to state 349
## Reductions:

State 344:
## Known stack suffix:
## raw_tight_type ARROW raw_normal_type_no_adopts
## LR(1) items:
raw_normal_type_no_adopts -> raw_tight_type ARROW raw_normal_type_no_adopts . [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_normal_type_no_adopts -> raw_tight_type ARROW raw_normal_type_no_adopts

State 345:
## Known stack suffix:
## mode
## LR(1) items:
raw_normal_type_no_adopts -> mode . raw_atomic_type DBLARROW raw_normal_type_no_adopts [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On variable shift to state 82
-- On raw_parenthetic_type shift to state 90
-- On raw_atomic_type shift to state 346
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 144
## Reductions:

State 346:
## Known stack suffix:
## mode raw_atomic_type
## LR(1) items:
raw_normal_type_no_adopts -> mode raw_atomic_type . DBLARROW raw_normal_type_no_adopts [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
-- On DBLARROW shift to state 347
## Reductions:

State 347:
## Known stack suffix:
## mode raw_atomic_type DBLARROW
## LR(1) items:
raw_normal_type_no_adopts -> mode raw_atomic_type DBLARROW . raw_normal_type_no_adopts [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 341
-- On raw_tight_type shift to state 342
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type_no_adopts shift to state 348
-- On raw_atomic_type shift to state 92
-- On mode shift to state 345
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 144
-- On existential_quantifiers shift to state 349
## Reductions:

State 348:
## Known stack suffix:
## mode raw_atomic_type DBLARROW raw_normal_type_no_adopts
## LR(1) items:
raw_normal_type_no_adopts -> mode raw_atomic_type DBLARROW raw_normal_type_no_adopts . [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_normal_type_no_adopts -> mode raw_atomic_type DBLARROW raw_normal_type_no_adopts

State 349:
## Known stack suffix:
## existential_quantifiers
## LR(1) items:
raw_normal_type_no_adopts -> existential_quantifiers . raw_normal_type_no_adopts [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 341
-- On raw_tight_type shift to state 342
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type_no_adopts shift to state 350
-- On raw_atomic_type shift to state 92
-- On mode shift to state 345
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 144
-- On existential_quantifiers shift to state 349
## Reductions:

State 350:
## Known stack suffix:
## existential_quantifiers raw_normal_type_no_adopts
## LR(1) items:
raw_normal_type_no_adopts -> existential_quantifiers raw_normal_type_no_adopts . [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_normal_type_no_adopts -> existential_quantifiers raw_normal_type_no_adopts

State 351:
## Known stack suffix:
## type_parameters raw_normal_type_no_adopts
## LR(1) items:
raw_normal_type_no_adopts -> type_parameters raw_normal_type_no_adopts . [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_normal_type_no_adopts -> type_parameters raw_normal_type_no_adopts

State 352:
## Known stack suffix:
## MUTABLE raw_normal_type_no_adopts
## LR(1) items:
reverse_left_flexible_list(BAR,data_type_def_branch) -> MUTABLE raw_normal_type_no_adopts . [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reverse_left_flexible_list(BAR,data_type_def_branch) -> MUTABLE raw_normal_type_no_adopts

State 353:
## Known stack suffix:
## MUTABLE variable list(atomic_type_binding_with_variance) EQUAL reverse_left_flexible_list(BAR,data_type_def_branch)
## LR(1) items:
concrete_data_type_def -> MUTABLE variable list(atomic_type_binding_with_variance) EQUAL reverse_left_flexible_list(BAR,data_type_def_branch) . option(preceded(ADOPTS,arbitrary_type)) [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
reverse_left_flexible_list(BAR,data_type_def_branch) -> reverse_left_flexible_list(BAR,data_type_def_branch) . BAR raw_normal_type_no_adopts [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
reverse_left_flexible_list(BAR,data_type_def_branch) -> reverse_left_flexible_list(BAR,data_type_def_branch) . BAR MUTABLE raw_normal_type_no_adopts [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
-- On BAR shift to state 354
-- On ADOPTS shift to state 358
-- On option(preceded(ADOPTS,arbitrary_type)) shift to state 360
## Reductions:
-- On VAL OPEN IN EOF DATA AND ALIAS ABSTRACT
--   reduce production option(preceded(ADOPTS,arbitrary_type)) ->

State 354:
## Known stack suffix:
## reverse_left_flexible_list(BAR,data_type_def_branch) BAR
## LR(1) items:
reverse_left_flexible_list(BAR,data_type_def_branch) -> reverse_left_flexible_list(BAR,data_type_def_branch) BAR . raw_normal_type_no_adopts [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
reverse_left_flexible_list(BAR,data_type_def_branch) -> reverse_left_flexible_list(BAR,data_type_def_branch) BAR . MUTABLE raw_normal_type_no_adopts [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On MUTABLE shift to state 355
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 341
-- On raw_tight_type shift to state 342
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type_no_adopts shift to state 357
-- On raw_atomic_type shift to state 92
-- On mode shift to state 345
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 144
-- On existential_quantifiers shift to state 349
## Reductions:

State 355:
## Known stack suffix:
## reverse_left_flexible_list(BAR,data_type_def_branch) BAR MUTABLE
## LR(1) items:
reverse_left_flexible_list(BAR,data_type_def_branch) -> reverse_left_flexible_list(BAR,data_type_def_branch) BAR MUTABLE . raw_normal_type_no_adopts [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 341
-- On raw_tight_type shift to state 342
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type_no_adopts shift to state 356
-- On raw_atomic_type shift to state 92
-- On mode shift to state 345
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 144
-- On existential_quantifiers shift to state 349
## Reductions:

State 356:
## Known stack suffix:
## reverse_left_flexible_list(BAR,data_type_def_branch) BAR MUTABLE raw_normal_type_no_adopts
## LR(1) items:
reverse_left_flexible_list(BAR,data_type_def_branch) -> reverse_left_flexible_list(BAR,data_type_def_branch) BAR MUTABLE raw_normal_type_no_adopts . [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reverse_left_flexible_list(BAR,data_type_def_branch) -> reverse_left_flexible_list(BAR,data_type_def_branch) BAR MUTABLE raw_normal_type_no_adopts

State 357:
## Known stack suffix:
## reverse_left_flexible_list(BAR,data_type_def_branch) BAR raw_normal_type_no_adopts
## LR(1) items:
reverse_left_flexible_list(BAR,data_type_def_branch) -> reverse_left_flexible_list(BAR,data_type_def_branch) BAR raw_normal_type_no_adopts . [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reverse_left_flexible_list(BAR,data_type_def_branch) -> reverse_left_flexible_list(BAR,data_type_def_branch) BAR raw_normal_type_no_adopts

State 358:
## Known stack suffix:
## ADOPTS
## LR(1) items:
option(preceded(ADOPTS,arbitrary_type)) -> ADOPTS . raw_fat_type [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On CONSUMES shift to state 118
-- On BAR shift to state 150
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On raw_very_loose_type shift to state 152
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 130
-- On raw_fat_type shift to state 359
-- On raw_consumes_type shift to state 131
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 359:
## Known stack suffix:
## ADOPTS raw_fat_type
## LR(1) items:
option(preceded(ADOPTS,arbitrary_type)) -> ADOPTS raw_fat_type . [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
raw_fat_type -> raw_fat_type . BAR raw_very_loose_type [ VAL OPEN IN EOF DATA BAR AND ALIAS ABSTRACT ]
raw_fat_type -> raw_fat_type . BAR mode raw_atomic_type [ VAL OPEN IN EOF DATA BAR AND ALIAS ABSTRACT ]
## Transitions:
-- On BAR shift to state 155
## Reductions:
-- On VAL OPEN IN EOF DATA AND ALIAS ABSTRACT
--   reduce production option(preceded(ADOPTS,arbitrary_type)) -> ADOPTS raw_fat_type

State 360:
## Known stack suffix:
## MUTABLE variable list(atomic_type_binding_with_variance) EQUAL reverse_left_flexible_list(BAR,data_type_def_branch) option(preceded(ADOPTS,arbitrary_type))
## LR(1) items:
concrete_data_type_def -> MUTABLE variable list(atomic_type_binding_with_variance) EQUAL reverse_left_flexible_list(BAR,data_type_def_branch) option(preceded(ADOPTS,arbitrary_type)) . [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production concrete_data_type_def -> MUTABLE variable list(atomic_type_binding_with_variance) EQUAL reverse_left_flexible_list(BAR,data_type_def_branch) option(preceded(ADOPTS,arbitrary_type))

State 361:
## Known stack suffix:
## raw_normal_type_no_adopts
## LR(1) items:
reverse_left_flexible_list(BAR,data_type_def_branch) -> raw_normal_type_no_adopts . [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reverse_left_flexible_list(BAR,data_type_def_branch) -> raw_normal_type_no_adopts

State 362:
## Known stack suffix:
## atomic_type_binding_with_variance
## LR(1) items:
list(atomic_type_binding_with_variance) -> atomic_type_binding_with_variance . list(atomic_type_binding_with_variance) [ VAL OPEN IN FACT EQUAL EOF DATA COLON ALIAS ABSTRACT ]
## Transitions:
-- On PLUS shift to state 333
-- On MINUS shift to state 334
-- On variance shift to state 335
-- On list(atomic_type_binding_with_variance) shift to state 363
-- On atomic_type_binding_with_variance shift to state 362
## Reductions:
-- On VAL OPEN IN FACT EQUAL EOF DATA COLON ALIAS ABSTRACT
--   reduce production list(atomic_type_binding_with_variance) ->
-- On LPAREN LIDENT
--   reduce production variance ->

State 363:
## Known stack suffix:
## atomic_type_binding_with_variance list(atomic_type_binding_with_variance)
## LR(1) items:
list(atomic_type_binding_with_variance) -> atomic_type_binding_with_variance list(atomic_type_binding_with_variance) . [ VAL OPEN IN FACT EQUAL EOF DATA COLON ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(atomic_type_binding_with_variance) -> atomic_type_binding_with_variance list(atomic_type_binding_with_variance)

State 364:
## Known stack suffix:
## variable
## LR(1) items:
concrete_data_type_def -> variable . list(atomic_type_binding_with_variance) EQUAL reverse_left_flexible_list(BAR,data_type_def_branch) option(preceded(ADOPTS,arbitrary_type)) [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
-- On PLUS shift to state 333
-- On MINUS shift to state 334
-- On variance shift to state 335
-- On list(atomic_type_binding_with_variance) shift to state 365
-- On atomic_type_binding_with_variance shift to state 362
## Reductions:
-- On EQUAL
--   reduce production list(atomic_type_binding_with_variance) ->
-- On LPAREN LIDENT
--   reduce production variance ->

State 365:
## Known stack suffix:
## variable list(atomic_type_binding_with_variance)
## LR(1) items:
concrete_data_type_def -> variable list(atomic_type_binding_with_variance) . EQUAL reverse_left_flexible_list(BAR,data_type_def_branch) option(preceded(ADOPTS,arbitrary_type)) [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
-- On EQUAL shift to state 366
## Reductions:

State 366:
## Known stack suffix:
## variable list(atomic_type_binding_with_variance) EQUAL
## LR(1) items:
concrete_data_type_def -> variable list(atomic_type_binding_with_variance) EQUAL . reverse_left_flexible_list(BAR,data_type_def_branch) option(preceded(ADOPTS,arbitrary_type)) [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On MUTABLE shift to state 340
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 341
-- On reverse_left_flexible_list(BAR,data_type_def_branch) shift to state 367
-- On raw_tight_type shift to state 342
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type_no_adopts shift to state 361
-- On raw_atomic_type shift to state 92
-- On mode shift to state 345
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 144
-- On existential_quantifiers shift to state 349
## Reductions:
-- On VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT
--   reduce production reverse_left_flexible_list(BAR,data_type_def_branch) ->

State 367:
## Known stack suffix:
## variable list(atomic_type_binding_with_variance) EQUAL reverse_left_flexible_list(BAR,data_type_def_branch)
## LR(1) items:
concrete_data_type_def -> variable list(atomic_type_binding_with_variance) EQUAL reverse_left_flexible_list(BAR,data_type_def_branch) . option(preceded(ADOPTS,arbitrary_type)) [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
reverse_left_flexible_list(BAR,data_type_def_branch) -> reverse_left_flexible_list(BAR,data_type_def_branch) . BAR raw_normal_type_no_adopts [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
reverse_left_flexible_list(BAR,data_type_def_branch) -> reverse_left_flexible_list(BAR,data_type_def_branch) . BAR MUTABLE raw_normal_type_no_adopts [ VAL OPEN IN EOF DATA BAR AND ALIAS ADOPTS ABSTRACT ]
## Transitions:
-- On BAR shift to state 354
-- On ADOPTS shift to state 358
-- On option(preceded(ADOPTS,arbitrary_type)) shift to state 368
## Reductions:
-- On VAL OPEN IN EOF DATA AND ALIAS ABSTRACT
--   reduce production option(preceded(ADOPTS,arbitrary_type)) ->

State 368:
## Known stack suffix:
## variable list(atomic_type_binding_with_variance) EQUAL reverse_left_flexible_list(BAR,data_type_def_branch) option(preceded(ADOPTS,arbitrary_type))
## LR(1) items:
concrete_data_type_def -> variable list(atomic_type_binding_with_variance) EQUAL reverse_left_flexible_list(BAR,data_type_def_branch) option(preceded(ADOPTS,arbitrary_type)) . [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production concrete_data_type_def -> variable list(atomic_type_binding_with_variance) EQUAL reverse_left_flexible_list(BAR,data_type_def_branch) option(preceded(ADOPTS,arbitrary_type))

State 369:
## Known stack suffix:
## LET DATA separated_nonempty_list(AND,concrete_data_type_def)
## LR(1) items:
raw_fragile_expression -> LET DATA separated_nonempty_list(AND,concrete_data_type_def) . IN raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On IN shift to state 370
## Reductions:

State 370:
## Known stack suffix:
## LET DATA separated_nonempty_list(AND,concrete_data_type_def) IN
## LR(1) items:
raw_fragile_expression -> LET DATA separated_nonempty_list(AND,concrete_data_type_def) IN . raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 371
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 371:
## Known stack suffix:
## LET DATA separated_nonempty_list(AND,concrete_data_type_def) IN raw_tuple_or(raw_fragile_expression)
## LR(1) items:
raw_fragile_expression -> LET DATA separated_nonempty_list(AND,concrete_data_type_def) IN raw_tuple_or(raw_fragile_expression) . [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_fragile_expression -> LET DATA separated_nonempty_list(AND,concrete_data_type_def) IN raw_tuple_or(raw_fragile_expression)

State 372:
## Known stack suffix:
## concrete_data_type_def
## LR(1) items:
separated_nonempty_list(AND,concrete_data_type_def) -> concrete_data_type_def . [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
separated_nonempty_list(AND,concrete_data_type_def) -> concrete_data_type_def . AND separated_nonempty_list(AND,concrete_data_type_def) [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On AND shift to state 373
## Reductions:
-- On VAL OPEN IN EOF DATA ALIAS ABSTRACT
--   reduce production separated_nonempty_list(AND,concrete_data_type_def) -> concrete_data_type_def

State 373:
## Known stack suffix:
## concrete_data_type_def AND
## LR(1) items:
separated_nonempty_list(AND,concrete_data_type_def) -> concrete_data_type_def AND . separated_nonempty_list(AND,concrete_data_type_def) [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On MUTABLE shift to state 331
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 364
-- On separated_nonempty_list(AND,concrete_data_type_def) shift to state 374
-- On concrete_data_type_def shift to state 372
## Reductions:

State 374:
## Known stack suffix:
## concrete_data_type_def AND separated_nonempty_list(AND,concrete_data_type_def)
## LR(1) items:
separated_nonempty_list(AND,concrete_data_type_def) -> concrete_data_type_def AND separated_nonempty_list(AND,concrete_data_type_def) . [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(AND,concrete_data_type_def) -> concrete_data_type_def AND separated_nonempty_list(AND,concrete_data_type_def)

State 375:
## Known stack suffix:
## LET ALIAS
## LR(1) items:
raw_fragile_expression -> LET ALIAS . abbreviation_def IN raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 376
-- On abbreviation_def shift to state 384
## Reductions:

State 376:
## Known stack suffix:
## variable
## LR(1) items:
abbreviation_def -> variable . list(atomic_type_binding_with_variance) EQUAL raw_fat_type [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
abbreviation_def -> variable . list(atomic_type_binding_with_variance) COLON atomic_kind EQUAL raw_fat_type [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On PLUS shift to state 333
-- On MINUS shift to state 334
-- On variance shift to state 335
-- On list(atomic_type_binding_with_variance) shift to state 377
-- On atomic_type_binding_with_variance shift to state 362
## Reductions:
-- On EQUAL COLON
--   reduce production list(atomic_type_binding_with_variance) ->
-- On LPAREN LIDENT
--   reduce production variance ->

State 377:
## Known stack suffix:
## variable list(atomic_type_binding_with_variance)
## LR(1) items:
abbreviation_def -> variable list(atomic_type_binding_with_variance) . EQUAL raw_fat_type [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
abbreviation_def -> variable list(atomic_type_binding_with_variance) . COLON atomic_kind EQUAL raw_fat_type [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On EQUAL shift to state 378
-- On COLON shift to state 380
## Reductions:

State 378:
## Known stack suffix:
## variable list(atomic_type_binding_with_variance) EQUAL
## LR(1) items:
abbreviation_def -> variable list(atomic_type_binding_with_variance) EQUAL . raw_fat_type [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On CONSUMES shift to state 118
-- On BAR shift to state 150
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On raw_very_loose_type shift to state 152
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 130
-- On raw_fat_type shift to state 379
-- On raw_consumes_type shift to state 131
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 379:
## Known stack suffix:
## variable list(atomic_type_binding_with_variance) EQUAL raw_fat_type
## LR(1) items:
abbreviation_def -> variable list(atomic_type_binding_with_variance) EQUAL raw_fat_type . [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
raw_fat_type -> raw_fat_type . BAR raw_very_loose_type [ VAL OPEN IN EOF DATA BAR ALIAS ABSTRACT ]
raw_fat_type -> raw_fat_type . BAR mode raw_atomic_type [ VAL OPEN IN EOF DATA BAR ALIAS ABSTRACT ]
## Transitions:
-- On BAR shift to state 155
## Reductions:
-- On VAL OPEN IN EOF DATA ALIAS ABSTRACT
--   reduce production abbreviation_def -> variable list(atomic_type_binding_with_variance) EQUAL raw_fat_type

State 380:
## Known stack suffix:
## variable list(atomic_type_binding_with_variance) COLON
## LR(1) items:
abbreviation_def -> variable list(atomic_type_binding_with_variance) COLON . atomic_kind EQUAL raw_fat_type [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On VALUE shift to state 60
-- On TYPE shift to state 61
-- On PERM shift to state 62
-- On LPAREN shift to state 63
-- On atomic_kind shift to state 381
## Reductions:

State 381:
## Known stack suffix:
## variable list(atomic_type_binding_with_variance) COLON atomic_kind
## LR(1) items:
abbreviation_def -> variable list(atomic_type_binding_with_variance) COLON atomic_kind . EQUAL raw_fat_type [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On EQUAL shift to state 382
## Reductions:

State 382:
## Known stack suffix:
## variable list(atomic_type_binding_with_variance) COLON atomic_kind EQUAL
## LR(1) items:
abbreviation_def -> variable list(atomic_type_binding_with_variance) COLON atomic_kind EQUAL . raw_fat_type [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On CONSUMES shift to state 118
-- On BAR shift to state 150
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On raw_very_loose_type shift to state 152
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 130
-- On raw_fat_type shift to state 383
-- On raw_consumes_type shift to state 131
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 383:
## Known stack suffix:
## variable list(atomic_type_binding_with_variance) COLON atomic_kind EQUAL raw_fat_type
## LR(1) items:
abbreviation_def -> variable list(atomic_type_binding_with_variance) COLON atomic_kind EQUAL raw_fat_type . [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
raw_fat_type -> raw_fat_type . BAR raw_very_loose_type [ VAL OPEN IN EOF DATA BAR ALIAS ABSTRACT ]
raw_fat_type -> raw_fat_type . BAR mode raw_atomic_type [ VAL OPEN IN EOF DATA BAR ALIAS ABSTRACT ]
## Transitions:
-- On BAR shift to state 155
## Reductions:
-- On VAL OPEN IN EOF DATA ALIAS ABSTRACT
--   reduce production abbreviation_def -> variable list(atomic_type_binding_with_variance) COLON atomic_kind EQUAL raw_fat_type

State 384:
## Known stack suffix:
## LET ALIAS abbreviation_def
## LR(1) items:
raw_fragile_expression -> LET ALIAS abbreviation_def . IN raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On IN shift to state 385
## Reductions:

State 385:
## Known stack suffix:
## LET ALIAS abbreviation_def IN
## LR(1) items:
raw_fragile_expression -> LET ALIAS abbreviation_def IN . raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 386
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 386:
## Known stack suffix:
## LET ALIAS abbreviation_def IN raw_tuple_or(raw_fragile_expression)
## LR(1) items:
raw_fragile_expression -> LET ALIAS abbreviation_def IN raw_tuple_or(raw_fragile_expression) . [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_fragile_expression -> LET ALIAS abbreviation_def IN raw_tuple_or(raw_fragile_expression)

State 387:
## Known stack suffix:
## LET ABSTRACT
## LR(1) items:
raw_fragile_expression -> LET ABSTRACT . abstract_data_type_def IN raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 388
-- On abstract_data_type_def shift to state 402
## Reductions:

State 388:
## Known stack suffix:
## variable
## LR(1) items:
abstract_data_type_def -> variable . list(atomic_type_binding_with_variance) list(fact) [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
abstract_data_type_def -> variable . list(atomic_type_binding_with_variance) COLON atomic_kind list(fact) [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On PLUS shift to state 333
-- On MINUS shift to state 334
-- On variance shift to state 335
-- On list(atomic_type_binding_with_variance) shift to state 389
-- On atomic_type_binding_with_variance shift to state 362
## Reductions:
-- On VAL OPEN IN FACT EOF DATA COLON ALIAS ABSTRACT
--   reduce production list(atomic_type_binding_with_variance) ->
-- On LPAREN LIDENT
--   reduce production variance ->

State 389:
## Known stack suffix:
## variable list(atomic_type_binding_with_variance)
## LR(1) items:
abstract_data_type_def -> variable list(atomic_type_binding_with_variance) . list(fact) [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
abstract_data_type_def -> variable list(atomic_type_binding_with_variance) . COLON atomic_kind list(fact) [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On FACT shift to state 390
-- On COLON shift to state 396
-- On list(fact) shift to state 401
-- On fact shift to state 399
## Reductions:
-- On VAL OPEN IN EOF DATA ALIAS ABSTRACT
--   reduce production list(fact) ->

State 390:
## Known stack suffix:
## FACT
## LR(1) items:
fact -> FACT . separated_nonempty_list(DBLARROW,mode_constraint) [ VAL OPEN IN FACT EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On EXCLUSIVE shift to state 78
-- On DUPLICABLE shift to state 86
-- On separated_nonempty_list(DBLARROW,mode_constraint) shift to state 391
-- On mode shift to state 392
## Reductions:

State 391:
## Known stack suffix:
## FACT separated_nonempty_list(DBLARROW,mode_constraint)
## LR(1) items:
fact -> FACT separated_nonempty_list(DBLARROW,mode_constraint) . [ VAL OPEN IN FACT EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fact -> FACT separated_nonempty_list(DBLARROW,mode_constraint)

State 392:
## Known stack suffix:
## mode
## LR(1) items:
separated_nonempty_list(DBLARROW,mode_constraint) -> mode . raw_atomic_type [ VAL OPEN IN FACT EOF DATA ALIAS ABSTRACT ]
separated_nonempty_list(DBLARROW,mode_constraint) -> mode . raw_atomic_type DBLARROW separated_nonempty_list(DBLARROW,mode_constraint) [ VAL OPEN IN FACT EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On variable shift to state 82
-- On raw_parenthetic_type shift to state 90
-- On raw_atomic_type shift to state 393
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 144
## Reductions:

State 393:
## Known stack suffix:
## mode raw_atomic_type
## LR(1) items:
separated_nonempty_list(DBLARROW,mode_constraint) -> mode raw_atomic_type . [ VAL OPEN IN FACT EOF DATA ALIAS ABSTRACT ]
separated_nonempty_list(DBLARROW,mode_constraint) -> mode raw_atomic_type . DBLARROW separated_nonempty_list(DBLARROW,mode_constraint) [ VAL OPEN IN FACT EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On DBLARROW shift to state 394
## Reductions:
-- On VAL OPEN IN FACT EOF DATA ALIAS ABSTRACT
--   reduce production separated_nonempty_list(DBLARROW,mode_constraint) -> mode raw_atomic_type

State 394:
## Known stack suffix:
## mode raw_atomic_type DBLARROW
## LR(1) items:
separated_nonempty_list(DBLARROW,mode_constraint) -> mode raw_atomic_type DBLARROW . separated_nonempty_list(DBLARROW,mode_constraint) [ VAL OPEN IN FACT EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On EXCLUSIVE shift to state 78
-- On DUPLICABLE shift to state 86
-- On separated_nonempty_list(DBLARROW,mode_constraint) shift to state 395
-- On mode shift to state 392
## Reductions:

State 395:
## Known stack suffix:
## mode raw_atomic_type DBLARROW separated_nonempty_list(DBLARROW,mode_constraint)
## LR(1) items:
separated_nonempty_list(DBLARROW,mode_constraint) -> mode raw_atomic_type DBLARROW separated_nonempty_list(DBLARROW,mode_constraint) . [ VAL OPEN IN FACT EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(DBLARROW,mode_constraint) -> mode raw_atomic_type DBLARROW separated_nonempty_list(DBLARROW,mode_constraint)

State 396:
## Known stack suffix:
## variable list(atomic_type_binding_with_variance) COLON
## LR(1) items:
abstract_data_type_def -> variable list(atomic_type_binding_with_variance) COLON . atomic_kind list(fact) [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On VALUE shift to state 60
-- On TYPE shift to state 61
-- On PERM shift to state 62
-- On LPAREN shift to state 63
-- On atomic_kind shift to state 397
## Reductions:

State 397:
## Known stack suffix:
## variable list(atomic_type_binding_with_variance) COLON atomic_kind
## LR(1) items:
abstract_data_type_def -> variable list(atomic_type_binding_with_variance) COLON atomic_kind . list(fact) [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On FACT shift to state 390
-- On list(fact) shift to state 398
-- On fact shift to state 399
## Reductions:
-- On VAL OPEN IN EOF DATA ALIAS ABSTRACT
--   reduce production list(fact) ->

State 398:
## Known stack suffix:
## variable list(atomic_type_binding_with_variance) COLON atomic_kind list(fact)
## LR(1) items:
abstract_data_type_def -> variable list(atomic_type_binding_with_variance) COLON atomic_kind list(fact) . [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production abstract_data_type_def -> variable list(atomic_type_binding_with_variance) COLON atomic_kind list(fact)

State 399:
## Known stack suffix:
## fact
## LR(1) items:
list(fact) -> fact . list(fact) [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On FACT shift to state 390
-- On list(fact) shift to state 400
-- On fact shift to state 399
## Reductions:
-- On VAL OPEN IN EOF DATA ALIAS ABSTRACT
--   reduce production list(fact) ->

State 400:
## Known stack suffix:
## fact list(fact)
## LR(1) items:
list(fact) -> fact list(fact) . [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(fact) -> fact list(fact)

State 401:
## Known stack suffix:
## variable list(atomic_type_binding_with_variance) list(fact)
## LR(1) items:
abstract_data_type_def -> variable list(atomic_type_binding_with_variance) list(fact) . [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production abstract_data_type_def -> variable list(atomic_type_binding_with_variance) list(fact)

State 402:
## Known stack suffix:
## LET ABSTRACT abstract_data_type_def
## LR(1) items:
raw_fragile_expression -> LET ABSTRACT abstract_data_type_def . IN raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On IN shift to state 403
## Reductions:

State 403:
## Known stack suffix:
## LET ABSTRACT abstract_data_type_def IN
## LR(1) items:
raw_fragile_expression -> LET ABSTRACT abstract_data_type_def IN . raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 404
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 404:
## Known stack suffix:
## LET ABSTRACT abstract_data_type_def IN raw_tuple_or(raw_fragile_expression)
## LR(1) items:
raw_fragile_expression -> LET ABSTRACT abstract_data_type_def IN raw_tuple_or(raw_fragile_expression) . [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_fragile_expression -> LET ABSTRACT abstract_data_type_def IN raw_tuple_or(raw_fragile_expression)

State 405:
## Known stack suffix:
## LET rec_flag
## LR(1) items:
raw_fragile_expression -> LET rec_flag . loption(separated_nonempty_list(AND,definition)) IN raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UNDERSCORE shift to state 4
-- On UIDENT shift to state 5
-- On LPAREN shift to state 6
-- On LIDENT shift to state 32
-- On variable shift to state 39
-- On separated_nonempty_list(AND,definition) shift to state 177
-- On raw_normal_pattern shift to state 178
-- On raw_atomic_pattern shift to state 160
-- On maybe_qualified(datacon) shift to state 166
-- On loption(separated_nonempty_list(AND,definition)) shift to state 406
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_pattern)) shift to state 171
-- On definition shift to state 409
## Reductions:
-- On IN
--   reduce production loption(separated_nonempty_list(AND,definition)) ->

State 406:
## Known stack suffix:
## LET rec_flag loption(separated_nonempty_list(AND,definition))
## LR(1) items:
raw_fragile_expression -> LET rec_flag loption(separated_nonempty_list(AND,definition)) . IN raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On IN shift to state 407
## Reductions:

State 407:
## Known stack suffix:
## LET rec_flag loption(separated_nonempty_list(AND,definition)) IN
## LR(1) items:
raw_fragile_expression -> LET rec_flag loption(separated_nonempty_list(AND,definition)) IN . raw_tuple_or(raw_fragile_expression) [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 408
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 408:
## Known stack suffix:
## LET rec_flag loption(separated_nonempty_list(AND,definition)) IN raw_tuple_or(raw_fragile_expression)
## LR(1) items:
raw_fragile_expression -> LET rec_flag loption(separated_nonempty_list(AND,definition)) IN raw_tuple_or(raw_fragile_expression) . [ WITH VAL TO THEN RPAREN OPEN IN FROM EOF END DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_fragile_expression -> LET rec_flag loption(separated_nonempty_list(AND,definition)) IN raw_tuple_or(raw_fragile_expression)

State 409:
## Known stack suffix:
## definition
## LR(1) items:
separated_nonempty_list(AND,definition) -> definition . [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
separated_nonempty_list(AND,definition) -> definition . AND separated_nonempty_list(AND,definition) [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On AND shift to state 410
## Reductions:
-- On VAL OPEN IN EOF DATA ALIAS ABSTRACT
--   reduce production separated_nonempty_list(AND,definition) -> definition

State 410:
## Known stack suffix:
## definition AND
## LR(1) items:
separated_nonempty_list(AND,definition) -> definition AND . separated_nonempty_list(AND,definition) [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On UNDERSCORE shift to state 4
-- On UIDENT shift to state 5
-- On LPAREN shift to state 6
-- On LIDENT shift to state 32
-- On variable shift to state 39
-- On separated_nonempty_list(AND,definition) shift to state 411
-- On raw_normal_pattern shift to state 178
-- On raw_atomic_pattern shift to state 160
-- On maybe_qualified(datacon) shift to state 166
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_pattern)) shift to state 171
-- On definition shift to state 409
## Reductions:

State 411:
## Known stack suffix:
## definition AND separated_nonempty_list(AND,definition)
## LR(1) items:
separated_nonempty_list(AND,definition) -> definition AND separated_nonempty_list(AND,definition) . [ VAL OPEN IN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(AND,definition) -> definition AND separated_nonempty_list(AND,definition)

State 412:
## Known stack suffix:
## raw_fragile_expression
## LR(1) items:
parenthesized_tuple_components -> raw_fragile_expression . [ RPAREN END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parenthesized_tuple_components -> raw_fragile_expression

State 413:
## Known stack suffix:
## raw_algebraic_expression
## LR(1) items:
parenthesized_tuple_components -> raw_algebraic_expression . COMMA parenthesized_tuple_components [ RPAREN END ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0a raw_algebraic_expression [ STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a MINUS EQUAL END COMMA COLONEQUAL COLON ADOPTS ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0b raw_algebraic_expression [ STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a MINUS EQUAL END COMMA COLONEQUAL COLON ADOPTS ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0c raw_algebraic_expression [ STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a MINUS EQUAL END COMMA COLONEQUAL COLON ADOPTS ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX0d raw_algebraic_expression [ STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a MINUS EQUAL END COMMA COLONEQUAL COLON ADOPTS ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX1 raw_algebraic_expression [ STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a MINUS EQUAL END COMMA COLONEQUAL COLON ADOPTS ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX2 raw_algebraic_expression [ STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a MINUS EQUAL END COMMA COLONEQUAL COLON ADOPTS ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX3 raw_algebraic_expression [ STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a MINUS EQUAL END COMMA COLONEQUAL COLON ADOPTS ]
raw_algebraic_expression -> raw_algebraic_expression . OPINFIX4 raw_algebraic_expression [ STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a MINUS EQUAL END COMMA COLONEQUAL COLON ADOPTS ]
raw_algebraic_expression -> raw_algebraic_expression . EQUAL raw_algebraic_expression [ STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a MINUS EQUAL END COMMA COLONEQUAL COLON ADOPTS ]
raw_algebraic_expression -> raw_algebraic_expression . STAR raw_algebraic_expression [ STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a MINUS EQUAL END COMMA COLONEQUAL COLON ADOPTS ]
raw_algebraic_expression -> raw_algebraic_expression . MINUS raw_algebraic_expression [ STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a MINUS EQUAL END COMMA COLONEQUAL COLON ADOPTS ]
raw_algebraic_expression -> raw_algebraic_expression . PLUS raw_algebraic_expression [ STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a MINUS EQUAL END COMMA COLONEQUAL COLON ADOPTS ]
raw_algebraic_expression -> raw_algebraic_expression . COLONEQUAL raw_algebraic_expression [ STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a MINUS EQUAL END COMMA COLONEQUAL COLON ADOPTS ]
raw_algebraic_expression -> raw_algebraic_expression . ADOPTS raw_algebraic_expression [ STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a MINUS EQUAL END COMMA COLONEQUAL COLON ADOPTS ]
raw_reasonable_expression -> raw_algebraic_expression . COLON raw_very_loose_type [ SEMI RPAREN END ]
raw_reasonable_expression -> raw_algebraic_expression . [ SEMI RPAREN END ]
## Transitions:
-- On STAR shift to state 253
-- On PLUS shift to state 259
-- On OPINFIX4 shift to state 256
-- On OPINFIX3 shift to state 261
-- On OPINFIX2 shift to state 263
-- On OPINFIX1 shift to state 265
-- On OPINFIX0d shift to state 269
-- On OPINFIX0c shift to state 271
-- On OPINFIX0b shift to state 273
-- On OPINFIX0a shift to state 277
-- On MINUS shift to state 267
-- On EQUAL shift to state 275
-- On COMMA shift to state 414
-- On COLONEQUAL shift to state 279
-- On COLON shift to state 281
-- On ADOPTS shift to state 283
## Reductions:
-- On SEMI RPAREN END
--   reduce production raw_reasonable_expression -> raw_algebraic_expression

State 414:
## Known stack suffix:
## raw_algebraic_expression COMMA
## LR(1) items:
parenthesized_tuple_components -> raw_algebraic_expression COMMA . parenthesized_tuple_components [ RPAREN END ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 412
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 413
-- On parenthesized_tuple_components shift to state 415
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 415:
## Known stack suffix:
## raw_algebraic_expression COMMA parenthesized_tuple_components
## LR(1) items:
parenthesized_tuple_components -> raw_algebraic_expression COMMA parenthesized_tuple_components . [ RPAREN END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parenthesized_tuple_components -> raw_algebraic_expression COMMA parenthesized_tuple_components

State 416:
## Known stack suffix:
## BEGIN parenthesized_tuple_components
## LR(1) items:
raw_atomic_expression -> BEGIN parenthesized_tuple_components . END [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On END shift to state 417
## Reductions:

State 417:
## Known stack suffix:
## BEGIN parenthesized_tuple_components END
## LR(1) items:
raw_atomic_expression -> BEGIN parenthesized_tuple_components END . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_expression -> BEGIN parenthesized_tuple_components END

State 418:
## Known stack suffix:
## OPPREFIX raw_atomic_expression
## LR(1) items:
raw_atomic_expression -> OPPREFIX raw_atomic_expression . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_expression -> OPPREFIX raw_atomic_expression

State 419:
## Known stack suffix:
## LPAREN MINUS
## LR(1) items:
raw_algebraic_expression -> MINUS . raw_application_expression [ STAR SEMI RPAREN PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a MINUS EQUAL COMMA COLONEQUAL COLON ADOPTS ]
variable -> LPAREN MINUS . RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On RPAREN shift to state 31
-- On OPPREFIX shift to state 183
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 254
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 420
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 420:
## Known stack suffix:
## MINUS raw_application_expression
## LR(1) items:
raw_algebraic_expression -> MINUS raw_application_expression . [ WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_application_expression -> raw_application_expression . raw_tight_expression [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
raw_application_expression -> raw_application_expression . LBRACKET separated_nonempty_list(COMMA,type_application_component) RBRACKET [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 233
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 243
-- On raw_atomic_expression shift to state 231
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WITH VAL TO THEN STAR SEMI RPAREN RBRACE PLUS OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS IN FROM EQUAL EOF END ELSE DOWNTO DO DATA COMMA COLONEQUAL COLON BELOW BAR AND ALIAS ADOPTS ABSTRACT ABOVE
--   reduce production raw_algebraic_expression -> MINUS raw_application_expression

State 421:
## Known stack suffix:
## LPAREN parenthesized_tuple_components
## LR(1) items:
raw_atomic_expression -> LPAREN parenthesized_tuple_components . RPAREN [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On RPAREN shift to state 422
## Reductions:

State 422:
## Known stack suffix:
## LPAREN parenthesized_tuple_components RPAREN
## LR(1) items:
raw_atomic_expression -> LPAREN parenthesized_tuple_components RPAREN . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_expression -> LPAREN parenthesized_tuple_components RPAREN

State 423:
## Known stack suffix:
## MATCH explain raw_tuple_or(raw_fragile_expression)
## LR(1) items:
raw_atomic_expression -> MATCH explain raw_tuple_or(raw_fragile_expression) . WITH reverse_left_flexible_list(BAR,match_branch) END [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On WITH shift to state 424
## Reductions:

State 424:
## Known stack suffix:
## MATCH explain raw_tuple_or(raw_fragile_expression) WITH
## LR(1) items:
raw_atomic_expression -> MATCH explain raw_tuple_or(raw_fragile_expression) WITH . reverse_left_flexible_list(BAR,match_branch) END [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
-- On UNDERSCORE shift to state 4
-- On UIDENT shift to state 5
-- On LPAREN shift to state 6
-- On LIDENT shift to state 32
-- On variable shift to state 39
-- On reverse_left_flexible_list(BAR,match_branch) shift to state 425
-- On raw_normal_pattern shift to state 431
-- On raw_atomic_pattern shift to state 160
-- On maybe_qualified(datacon) shift to state 166
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_pattern)) shift to state 171
## Reductions:
-- On END BAR
--   reduce production reverse_left_flexible_list(BAR,match_branch) ->

State 425:
## Known stack suffix:
## MATCH explain raw_tuple_or(raw_fragile_expression) WITH reverse_left_flexible_list(BAR,match_branch)
## LR(1) items:
raw_atomic_expression -> MATCH explain raw_tuple_or(raw_fragile_expression) WITH reverse_left_flexible_list(BAR,match_branch) . END [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
reverse_left_flexible_list(BAR,match_branch) -> reverse_left_flexible_list(BAR,match_branch) . BAR raw_normal_pattern ARROW raw_tuple_or(raw_fragile_expression) [ END BAR ]
## Transitions:
-- On END shift to state 426
-- On BAR shift to state 427
## Reductions:

State 426:
## Known stack suffix:
## MATCH explain raw_tuple_or(raw_fragile_expression) WITH reverse_left_flexible_list(BAR,match_branch) END
## LR(1) items:
raw_atomic_expression -> MATCH explain raw_tuple_or(raw_fragile_expression) WITH reverse_left_flexible_list(BAR,match_branch) END . [ WITH VAL UIDENT TO THEN STAR SEMI RPAREN RBRACE PLUS OPPREFIX OPINFIX4 OPINFIX3 OPINFIX2 OPINFIX1 OPINFIX0d OPINFIX0c OPINFIX0b OPINFIX0a OPEN MINUS MATCH LPAREN LIDENT LBRACKET LARROW INT IN FROM FAIL EQUAL EOF END ELSE DOWNTO DOT DO DATA COMMA COLONEQUAL COLON BELOW BEGIN BAR AND ALIAS ADOPTS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_atomic_expression -> MATCH explain raw_tuple_or(raw_fragile_expression) WITH reverse_left_flexible_list(BAR,match_branch) END

State 427:
## Known stack suffix:
## reverse_left_flexible_list(BAR,match_branch) BAR
## LR(1) items:
reverse_left_flexible_list(BAR,match_branch) -> reverse_left_flexible_list(BAR,match_branch) BAR . raw_normal_pattern ARROW raw_tuple_or(raw_fragile_expression) [ END BAR ]
## Transitions:
-- On UNDERSCORE shift to state 4
-- On UIDENT shift to state 5
-- On LPAREN shift to state 6
-- On LIDENT shift to state 32
-- On variable shift to state 39
-- On raw_normal_pattern shift to state 428
-- On raw_atomic_pattern shift to state 160
-- On maybe_qualified(datacon) shift to state 166
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_pattern)) shift to state 171
## Reductions:

State 428:
## Known stack suffix:
## reverse_left_flexible_list(BAR,match_branch) BAR raw_normal_pattern
## LR(1) items:
raw_normal_pattern -> raw_normal_pattern . AS variable [ AS ARROW ]
reverse_left_flexible_list(BAR,match_branch) -> reverse_left_flexible_list(BAR,match_branch) BAR raw_normal_pattern . ARROW raw_tuple_or(raw_fragile_expression) [ END BAR ]
## Transitions:
-- On AS shift to state 41
-- On ARROW shift to state 429
## Reductions:

State 429:
## Known stack suffix:
## reverse_left_flexible_list(BAR,match_branch) BAR raw_normal_pattern ARROW
## LR(1) items:
reverse_left_flexible_list(BAR,match_branch) -> reverse_left_flexible_list(BAR,match_branch) BAR raw_normal_pattern ARROW . raw_tuple_or(raw_fragile_expression) [ END BAR ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 430
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 430:
## Known stack suffix:
## reverse_left_flexible_list(BAR,match_branch) BAR raw_normal_pattern ARROW raw_tuple_or(raw_fragile_expression)
## LR(1) items:
reverse_left_flexible_list(BAR,match_branch) -> reverse_left_flexible_list(BAR,match_branch) BAR raw_normal_pattern ARROW raw_tuple_or(raw_fragile_expression) . [ END BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reverse_left_flexible_list(BAR,match_branch) -> reverse_left_flexible_list(BAR,match_branch) BAR raw_normal_pattern ARROW raw_tuple_or(raw_fragile_expression)

State 431:
## Known stack suffix:
## raw_normal_pattern
## LR(1) items:
raw_normal_pattern -> raw_normal_pattern . AS variable [ AS ARROW ]
reverse_left_flexible_list(BAR,match_branch) -> raw_normal_pattern . ARROW raw_tuple_or(raw_fragile_expression) [ END BAR ]
## Transitions:
-- On AS shift to state 41
-- On ARROW shift to state 432
## Reductions:

State 432:
## Known stack suffix:
## raw_normal_pattern ARROW
## LR(1) items:
reverse_left_flexible_list(BAR,match_branch) -> raw_normal_pattern ARROW . raw_tuple_or(raw_fragile_expression) [ END BAR ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 433
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 433:
## Known stack suffix:
## raw_normal_pattern ARROW raw_tuple_or(raw_fragile_expression)
## LR(1) items:
reverse_left_flexible_list(BAR,match_branch) -> raw_normal_pattern ARROW raw_tuple_or(raw_fragile_expression) . [ END BAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reverse_left_flexible_list(BAR,match_branch) -> raw_normal_pattern ARROW raw_tuple_or(raw_fragile_expression)

State 434:
## Known stack suffix:
## TAGOF raw_tight_expression
## LR(1) items:
raw_reasonable_expression -> TAGOF raw_tight_expression . LARROW maybe_qualified(datacon) [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_tight_expression -> raw_tight_expression . DOT variable [ LARROW DOT ]
## Transitions:
-- On LARROW shift to state 435
-- On DOT shift to state 244
## Reductions:

State 435:
## Known stack suffix:
## TAGOF raw_tight_expression LARROW
## LR(1) items:
raw_reasonable_expression -> TAGOF raw_tight_expression LARROW . maybe_qualified(datacon) [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On LIDENT shift to state 436
-- On maybe_qualified(datacon) shift to state 437
## Reductions:

State 436:
## Known stack suffix:
## LIDENT
## LR(1) items:
maybe_qualified(datacon) -> LIDENT . COLONCOLON UIDENT [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On COLONCOLON shift to state 33
## Reductions:

State 437:
## Known stack suffix:
## TAGOF raw_tight_expression LARROW maybe_qualified(datacon)
## LR(1) items:
raw_reasonable_expression -> TAGOF raw_tight_expression LARROW maybe_qualified(datacon) . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_reasonable_expression -> TAGOF raw_tight_expression LARROW maybe_qualified(datacon)

State 438:
## Known stack suffix:
## TAKE raw_tuple_or(raw_fragile_expression)
## LR(1) items:
raw_reasonable_expression -> TAKE raw_tuple_or(raw_fragile_expression) . FROM reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On FROM shift to state 439
## Reductions:

State 439:
## Known stack suffix:
## TAKE raw_tuple_or(raw_fragile_expression) FROM
## LR(1) items:
raw_reasonable_expression -> TAKE raw_tuple_or(raw_fragile_expression) FROM . reasonable_expression [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 440
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 230
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 252
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 440:
## Known stack suffix:
## TAKE raw_tuple_or(raw_fragile_expression) FROM reasonable_expression
## LR(1) items:
raw_reasonable_expression -> TAKE raw_tuple_or(raw_fragile_expression) FROM reasonable_expression . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_reasonable_expression -> TAKE raw_tuple_or(raw_fragile_expression) FROM reasonable_expression

State 441:
## Known stack suffix:
## TAKING raw_tuple_or(raw_fragile_expression)
## LR(1) items:
raw_reasonable_expression -> TAKING raw_tuple_or(raw_fragile_expression) . FROM raw_tight_expression BEGIN raw_tuple_or(raw_fragile_expression) END [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On FROM shift to state 442
## Reductions:

State 442:
## Known stack suffix:
## TAKING raw_tuple_or(raw_fragile_expression) FROM
## LR(1) items:
raw_reasonable_expression -> TAKING raw_tuple_or(raw_fragile_expression) FROM . raw_tight_expression BEGIN raw_tuple_or(raw_fragile_expression) END [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On OPPREFIX shift to state 183
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On INT shift to state 197
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On variable shift to state 82
-- On raw_tight_expression shift to state 443
-- On raw_atomic_expression shift to state 231
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:

State 443:
## Known stack suffix:
## TAKING raw_tuple_or(raw_fragile_expression) FROM raw_tight_expression
## LR(1) items:
raw_reasonable_expression -> TAKING raw_tuple_or(raw_fragile_expression) FROM raw_tight_expression . BEGIN raw_tuple_or(raw_fragile_expression) END [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
raw_tight_expression -> raw_tight_expression . DOT variable [ DOT BEGIN ]
## Transitions:
-- On DOT shift to state 244
-- On BEGIN shift to state 444
## Reductions:

State 444:
## Known stack suffix:
## TAKING raw_tuple_or(raw_fragile_expression) FROM raw_tight_expression BEGIN
## LR(1) items:
raw_reasonable_expression -> TAKING raw_tuple_or(raw_fragile_expression) FROM raw_tight_expression BEGIN . raw_tuple_or(raw_fragile_expression) END [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 445
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 445:
## Known stack suffix:
## TAKING raw_tuple_or(raw_fragile_expression) FROM raw_tight_expression BEGIN raw_tuple_or(raw_fragile_expression)
## LR(1) items:
raw_reasonable_expression -> TAKING raw_tuple_or(raw_fragile_expression) FROM raw_tight_expression BEGIN raw_tuple_or(raw_fragile_expression) . END [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
-- On END shift to state 446
## Reductions:

State 446:
## Known stack suffix:
## TAKING raw_tuple_or(raw_fragile_expression) FROM raw_tight_expression BEGIN raw_tuple_or(raw_fragile_expression) END
## LR(1) items:
raw_reasonable_expression -> TAKING raw_tuple_or(raw_fragile_expression) FROM raw_tight_expression BEGIN raw_tuple_or(raw_fragile_expression) END . [ WITH VAL TO THEN SEMI RPAREN RBRACE OPEN IN FROM EOF END ELSE DOWNTO DO DATA BELOW BAR AND ALIAS ABSTRACT ABOVE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raw_reasonable_expression -> TAKING raw_tuple_or(raw_fragile_expression) FROM raw_tight_expression BEGIN raw_tuple_or(raw_fragile_expression) END

State 447:
## Known stack suffix:
## raw_normal_pattern EQUAL raw_tuple_or(raw_fragile_expression)
## LR(1) items:
definition -> raw_normal_pattern EQUAL raw_tuple_or(raw_fragile_expression) . [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definition -> raw_normal_pattern EQUAL raw_tuple_or(raw_fragile_expression)

State 448:
## Known stack suffix:
## raw_normal_pattern COLON
## LR(1) items:
definition -> raw_normal_pattern COLON . raw_normal_type EQUAL raw_tuple_or(raw_fragile_expression) [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
definition -> raw_normal_pattern COLON . raw_normal_type EQUAL BUILTIN LIDENT [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 49
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On variable shift to state 82
-- On type_parameters shift to state 87
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 449
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 97
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 449:
## Known stack suffix:
## raw_normal_pattern COLON raw_normal_type
## LR(1) items:
definition -> raw_normal_pattern COLON raw_normal_type . EQUAL raw_tuple_or(raw_fragile_expression) [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
definition -> raw_normal_pattern COLON raw_normal_type . EQUAL BUILTIN LIDENT [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
-- On EQUAL shift to state 450
## Reductions:

State 450:
## Known stack suffix:
## raw_normal_pattern COLON raw_normal_type EQUAL
## LR(1) items:
definition -> raw_normal_pattern COLON raw_normal_type EQUAL . raw_tuple_or(raw_fragile_expression) [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
definition -> raw_normal_pattern COLON raw_normal_type EQUAL . BUILTIN LIDENT [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
-- On UIDENT shift to state 5
-- On TAKING shift to state 180
-- On TAKE shift to state 181
-- On TAGOF shift to state 182
-- On PRESERVING shift to state 187
-- On PACK shift to state 189
-- On OPPREFIX shift to state 183
-- On MINUS shift to state 193
-- On MATCH shift to state 184
-- On LPAREN shift to state 194
-- On LIDENT shift to state 53
-- On LET shift to state 200
-- On INT shift to state 197
-- On IF shift to state 204
-- On GIVE shift to state 206
-- On FUN shift to state 207
-- On FAIL shift to state 198
-- On BUILTIN shift to state 451
-- On BEGIN shift to state 199
-- On ASSERT shift to state 220
-- On variable shift to state 82
-- On reasonable_expression shift to state 222
-- On raw_tuple_or(raw_fragile_expression) shift to state 453
-- On raw_tight_expression shift to state 225
-- On raw_reasonable_expression shift to state 290
-- On raw_fragile_expression shift to state 291
-- On raw_atomic_expression shift to state 231
-- On raw_application_expression shift to state 232
-- On raw_algebraic_expression shift to state 292
-- On optional_preserving shift to state 285
-- On maybe_qualified(variable) shift to state 246
-- On maybe_qualified(datacon) shift to state 247
-- On generic_datacon_application(right_flexible_list(SEMI,data_field_expression)) shift to state 258
## Reductions:
-- On WHILE FOR
--   reduce production optional_preserving ->

State 451:
## Known stack suffix:
## raw_normal_pattern COLON raw_normal_type EQUAL BUILTIN
## LR(1) items:
definition -> raw_normal_pattern COLON raw_normal_type EQUAL BUILTIN . LIDENT [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
-- On LIDENT shift to state 452
## Reductions:

State 452:
## Known stack suffix:
## raw_normal_pattern COLON raw_normal_type EQUAL BUILTIN LIDENT
## LR(1) items:
definition -> raw_normal_pattern COLON raw_normal_type EQUAL BUILTIN LIDENT . [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definition -> raw_normal_pattern COLON raw_normal_type EQUAL BUILTIN LIDENT

State 453:
## Known stack suffix:
## raw_normal_pattern COLON raw_normal_type EQUAL raw_tuple_or(raw_fragile_expression)
## LR(1) items:
definition -> raw_normal_pattern COLON raw_normal_type EQUAL raw_tuple_or(raw_fragile_expression) . [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definition -> raw_normal_pattern COLON raw_normal_type EQUAL raw_tuple_or(raw_fragile_expression)

State 454:
## Known stack suffix:
## raw_normal_pattern anonymous_function
## LR(1) items:
definition -> raw_normal_pattern anonymous_function . [ VAL OPEN IN EOF DATA AND ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definition -> raw_normal_pattern anonymous_function

State 455:
## Known stack suffix:
## VAL rec_flag loption(separated_nonempty_list(AND,definition))
## LR(1) items:
definition_group -> VAL rec_flag loption(separated_nonempty_list(AND,definition)) . [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definition_group -> VAL rec_flag loption(separated_nonempty_list(AND,definition))

State 456:
## Known stack suffix:
## OPEN
## LR(1) items:
implementation_item -> OPEN . LIDENT [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On LIDENT shift to state 457
## Reductions:

State 457:
## Known stack suffix:
## OPEN LIDENT
## LR(1) items:
implementation_item -> OPEN LIDENT . [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production implementation_item -> OPEN LIDENT

State 458:
## Known stack suffix:
## DATA
## LR(1) items:
implementation_item -> DATA . separated_nonempty_list(AND,concrete_data_type_def) [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On MUTABLE shift to state 331
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 364
-- On separated_nonempty_list(AND,concrete_data_type_def) shift to state 459
-- On concrete_data_type_def shift to state 372
## Reductions:

State 459:
## Known stack suffix:
## DATA separated_nonempty_list(AND,concrete_data_type_def)
## LR(1) items:
implementation_item -> DATA separated_nonempty_list(AND,concrete_data_type_def) . [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production implementation_item -> DATA separated_nonempty_list(AND,concrete_data_type_def)

State 460:
## Known stack suffix:
## ALIAS
## LR(1) items:
implementation_item -> ALIAS . abbreviation_def [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 376
-- On abbreviation_def shift to state 461
## Reductions:

State 461:
## Known stack suffix:
## ALIAS abbreviation_def
## LR(1) items:
implementation_item -> ALIAS abbreviation_def . [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production implementation_item -> ALIAS abbreviation_def

State 462:
## Known stack suffix:
## ABSTRACT
## LR(1) items:
implementation_item -> ABSTRACT . abstract_data_type_def [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 388
-- On abstract_data_type_def shift to state 463
## Reductions:

State 463:
## Known stack suffix:
## ABSTRACT abstract_data_type_def
## LR(1) items:
implementation_item -> ABSTRACT abstract_data_type_def . [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production implementation_item -> ABSTRACT abstract_data_type_def

State 464:
## Known stack suffix:
## list(implementation_item)
## LR(1) items:
implementation -> list(implementation_item) . EOF [ # ]
## Transitions:
-- On EOF shift to state 465
## Reductions:

State 465:
## Known stack suffix:
## list(implementation_item) EOF
## LR(1) items:
implementation -> list(implementation_item) EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production implementation -> list(implementation_item) EOF

State 466:
## Known stack suffix:
## implementation_item
## LR(1) items:
list(implementation_item) -> implementation_item . list(implementation_item) [ EOF ]
## Transitions:
-- On VAL shift to state 1
-- On OPEN shift to state 456
-- On DATA shift to state 458
-- On ALIAS shift to state 460
-- On ABSTRACT shift to state 462
-- On list(implementation_item) shift to state 467
-- On implementation_item shift to state 466
-- On definition_group shift to state 468
## Reductions:
-- On EOF
--   reduce production list(implementation_item) ->

State 467:
## Known stack suffix:
## implementation_item list(implementation_item)
## LR(1) items:
list(implementation_item) -> implementation_item list(implementation_item) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(implementation_item) -> implementation_item list(implementation_item)

State 468:
## Known stack suffix:
## definition_group
## LR(1) items:
implementation_item -> definition_group . [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production implementation_item -> definition_group

State 469:
## Known stack suffix:
## implementation
## LR(1) items:
implementation' -> implementation . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept implementation

State 470:
## Known stack suffix:
##
## LR(1) items:
interface' -> . interface [ # ]
## Transitions:
-- On VAL shift to state 471
-- On OPEN shift to state 475
-- On DATA shift to state 477
-- On ALIAS shift to state 479
-- On ABSTRACT shift to state 481
-- On value_declaration shift to state 483
-- On list(interface_item) shift to state 484
-- On interface_item shift to state 486
-- On interface shift to state 488
## Reductions:
-- On EOF
--   reduce production list(interface_item) ->

State 471:
## Known stack suffix:
## VAL
## LR(1) items:
value_declaration -> VAL . variable COLON raw_fat_type [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 472
## Reductions:

State 472:
## Known stack suffix:
## VAL variable
## LR(1) items:
value_declaration -> VAL variable . COLON raw_fat_type [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On COLON shift to state 473
## Reductions:

State 473:
## Known stack suffix:
## VAL variable COLON
## LR(1) items:
value_declaration -> VAL variable COLON . raw_fat_type [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On UNKNOWN shift to state 48
-- On UNDERSCORE shift to state 51
-- On UIDENT shift to state 5
-- On LPAREN shift to state 50
-- On LIDENT shift to state 53
-- On LBRACKET shift to state 56
-- On LBRACE shift to state 75
-- On EXCLUSIVE shift to state 78
-- On EQUAL shift to state 79
-- On EMPTY shift to state 84
-- On DYNAMIC shift to state 85
-- On DUPLICABLE shift to state 86
-- On CONSUMES shift to state 118
-- On BAR shift to state 150
-- On variable shift to state 119
-- On type_parameters shift to state 87
-- On raw_very_loose_type shift to state 152
-- On raw_tight_type shift to state 88
-- On raw_parenthetic_type shift to state 90
-- On raw_normal_type shift to state 122
-- On raw_loose_type shift to state 130
-- On raw_fat_type shift to state 474
-- On raw_consumes_type shift to state 131
-- On raw_atomic_type shift to state 92
-- On mode shift to state 93
-- On maybe_qualified(variable) shift to state 124
-- On maybe_qualified(datacon) shift to state 98
-- On generic_datacon_application(data_type_def_branch_content) shift to state 109
-- On existential_quantifiers shift to state 112
## Reductions:

State 474:
## Known stack suffix:
## VAL variable COLON raw_fat_type
## LR(1) items:
raw_fat_type -> raw_fat_type . BAR raw_very_loose_type [ VAL OPEN EOF DATA BAR ALIAS ABSTRACT ]
raw_fat_type -> raw_fat_type . BAR mode raw_atomic_type [ VAL OPEN EOF DATA BAR ALIAS ABSTRACT ]
value_declaration -> VAL variable COLON raw_fat_type . [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On BAR shift to state 155
## Reductions:
-- On VAL OPEN EOF DATA ALIAS ABSTRACT
--   reduce production value_declaration -> VAL variable COLON raw_fat_type

State 475:
## Known stack suffix:
## OPEN
## LR(1) items:
interface_item -> OPEN . LIDENT [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On LIDENT shift to state 476
## Reductions:

State 476:
## Known stack suffix:
## OPEN LIDENT
## LR(1) items:
interface_item -> OPEN LIDENT . [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface_item -> OPEN LIDENT

State 477:
## Known stack suffix:
## DATA
## LR(1) items:
interface_item -> DATA . separated_nonempty_list(AND,concrete_data_type_def) [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On MUTABLE shift to state 331
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 364
-- On separated_nonempty_list(AND,concrete_data_type_def) shift to state 478
-- On concrete_data_type_def shift to state 372
## Reductions:

State 478:
## Known stack suffix:
## DATA separated_nonempty_list(AND,concrete_data_type_def)
## LR(1) items:
interface_item -> DATA separated_nonempty_list(AND,concrete_data_type_def) . [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface_item -> DATA separated_nonempty_list(AND,concrete_data_type_def)

State 479:
## Known stack suffix:
## ALIAS
## LR(1) items:
interface_item -> ALIAS . abbreviation_def [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 376
-- On abbreviation_def shift to state 480
## Reductions:

State 480:
## Known stack suffix:
## ALIAS abbreviation_def
## LR(1) items:
interface_item -> ALIAS abbreviation_def . [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface_item -> ALIAS abbreviation_def

State 481:
## Known stack suffix:
## ABSTRACT
## LR(1) items:
interface_item -> ABSTRACT . abstract_data_type_def [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
-- On LPAREN shift to state 42
-- On LIDENT shift to state 43
-- On variable shift to state 388
-- On abstract_data_type_def shift to state 482
## Reductions:

State 482:
## Known stack suffix:
## ABSTRACT abstract_data_type_def
## LR(1) items:
interface_item -> ABSTRACT abstract_data_type_def . [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface_item -> ABSTRACT abstract_data_type_def

State 483:
## Known stack suffix:
## value_declaration
## LR(1) items:
interface_item -> value_declaration . [ VAL OPEN EOF DATA ALIAS ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface_item -> value_declaration

State 484:
## Known stack suffix:
## list(interface_item)
## LR(1) items:
interface -> list(interface_item) . EOF [ # ]
## Transitions:
-- On EOF shift to state 485
## Reductions:

State 485:
## Known stack suffix:
## list(interface_item) EOF
## LR(1) items:
interface -> list(interface_item) EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production interface -> list(interface_item) EOF

State 486:
## Known stack suffix:
## interface_item
## LR(1) items:
list(interface_item) -> interface_item . list(interface_item) [ EOF ]
## Transitions:
-- On VAL shift to state 471
-- On OPEN shift to state 475
-- On DATA shift to state 477
-- On ALIAS shift to state 479
-- On ABSTRACT shift to state 481
-- On value_declaration shift to state 483
-- On list(interface_item) shift to state 487
-- On interface_item shift to state 486
## Reductions:
-- On EOF
--   reduce production list(interface_item) ->

State 487:
## Known stack suffix:
## interface_item list(interface_item)
## LR(1) items:
list(interface_item) -> interface_item list(interface_item) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(interface_item) -> interface_item list(interface_item)

State 488:
## Known stack suffix:
## interface
## LR(1) items:
interface' -> interface . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept interface

State 489:
## Known stack suffix:
##
## LR(1) items:
warn_error_list' -> . warn_error_list [ # ]
## Transitions:
-- On PLUS shift to state 490
-- On MINUS shift to state 491
-- On AT shift to state 492
-- On warn_error_list shift to state 493
-- On warn_error shift to state 494
-- On nonempty_list(warn_error) shift to state 502
-- On flag shift to state 496
## Reductions:

State 490:
## Known stack suffix:
## PLUS
## LR(1) items:
flag -> PLUS . [ INT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production flag -> PLUS

State 491:
## Known stack suffix:
## MINUS
## LR(1) items:
flag -> MINUS . [ INT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production flag -> MINUS

State 492:
## Known stack suffix:
## AT
## LR(1) items:
flag -> AT . [ INT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production flag -> AT

State 493:
## Known stack suffix:
## warn_error_list
## LR(1) items:
warn_error_list' -> warn_error_list . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept warn_error_list

State 494:
## Known stack suffix:
## warn_error
## LR(1) items:
nonempty_list(warn_error) -> warn_error . [ EOF ]
nonempty_list(warn_error) -> warn_error . nonempty_list(warn_error) [ EOF ]
## Transitions:
-- On PLUS shift to state 490
-- On MINUS shift to state 491
-- On AT shift to state 492
-- On warn_error shift to state 494
-- On nonempty_list(warn_error) shift to state 495
-- On flag shift to state 496
## Reductions:
-- On EOF
--   reduce production nonempty_list(warn_error) -> warn_error

State 495:
## Known stack suffix:
## warn_error nonempty_list(warn_error)
## LR(1) items:
nonempty_list(warn_error) -> warn_error nonempty_list(warn_error) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(warn_error) -> warn_error nonempty_list(warn_error)

State 496:
## Known stack suffix:
## flag
## LR(1) items:
warn_error -> flag . range [ PLUS MINUS EOF AT ]
## Transitions:
-- On INT shift to state 497
-- On range shift to state 501
## Reductions:

State 497:
## Known stack suffix:
## INT
## LR(1) items:
range -> INT . [ PLUS MINUS EOF AT ]
range -> INT . DOT DOT INT [ PLUS MINUS EOF AT ]
## Transitions:
-- On DOT shift to state 498
## Reductions:
-- On PLUS MINUS EOF AT
--   reduce production range -> INT

State 498:
## Known stack suffix:
## INT DOT
## LR(1) items:
range -> INT DOT . DOT INT [ PLUS MINUS EOF AT ]
## Transitions:
-- On DOT shift to state 499
## Reductions:

State 499:
## Known stack suffix:
## INT DOT DOT
## LR(1) items:
range -> INT DOT DOT . INT [ PLUS MINUS EOF AT ]
## Transitions:
-- On INT shift to state 500
## Reductions:

State 500:
## Known stack suffix:
## INT DOT DOT INT
## LR(1) items:
range -> INT DOT DOT INT . [ PLUS MINUS EOF AT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production range -> INT DOT DOT INT

State 501:
## Known stack suffix:
## flag range
## LR(1) items:
warn_error -> flag range . [ PLUS MINUS EOF AT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production warn_error -> flag range

State 502:
## Known stack suffix:
## nonempty_list(warn_error)
## LR(1) items:
warn_error_list -> nonempty_list(warn_error) . EOF [ # ]
## Transitions:
-- On EOF shift to state 503
## Reductions:

State 503:
## Known stack suffix:
## nonempty_list(warn_error) EOF
## LR(1) items:
warn_error_list -> nonempty_list(warn_error) EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production warn_error_list -> nonempty_list(warn_error) EOF

