
** Conflict (shift/reduce) in state 177.
** Token involved: ELSE
** This state is reached from phrase after reading:

ctype LIDENT LPAREN parameters RPAREN IF LPAREN expr RPAREN IF LPAREN expr RPAREN statement 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

phrase 
structure_item 
term 
ctype LIDENT LPAREN parameters RPAREN statement 
                                      (?)

** In state 177, looking ahead at ELSE, shifting is permitted
** because of the following sub-derivation:

IF LPAREN expr RPAREN statement ELSE statement 
                      IF LPAREN expr RPAREN statement . ELSE statement 

** In state 177, looking ahead at ELSE, reducing production
** statement -> IF LPAREN expr RPAREN statement 
** is permitted because of the following sub-derivation:

IF LPAREN expr RPAREN statement ELSE statement // lookahead token appears
                      IF LPAREN expr RPAREN statement . 

** Conflict (shift/reduce) in state 159.
** Token involved: UIDENT
** This state is reached from phrase after reading:

ctype LIDENT LPAREN parameters RPAREN LBRACE decl_list 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

phrase 
structure_item 
term 
ctype LIDENT LPAREN parameters RPAREN statement 
                                      (?)

** In state 159, looking ahead at UIDENT, reducing production
** statement_list -> 
** is permitted because of the following sub-derivation:

LBRACE decl_list statement_list RBRACE 
                 statement_list statement // lookahead token appears because statement can begin with UIDENT
                 . 

** In state 159, looking ahead at UIDENT, shifting is permitted
** because of the following sub-derivation:

LBRACE decl_list statement_list RBRACE 
       decl_list ctype LIDENT SEMI 
                 upath 
                 . UIDENT 

** Conflict (shift/reduce) in state 80.
** Token involved: COLON
** This state is reached from implementation after reading:

FUNCTOR LPAREN UIDENT COLON moduletype RPAREN modulexpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

implementation 
modulexpr EOF 
(?)

** In state 80, looking ahead at COLON, reducing production
** modulexpr -> FUNCTOR LPAREN UIDENT COLON moduletype RPAREN modulexpr 
** is permitted because of the following sub-derivation:

modulexpr COLON moduletype // lookahead token appears
FUNCTOR LPAREN UIDENT COLON moduletype RPAREN modulexpr . 

** In state 80, looking ahead at COLON, shifting is permitted
** because of the following sub-derivation:

FUNCTOR LPAREN UIDENT COLON moduletype RPAREN modulexpr 
                                              modulexpr . COLON moduletype 

** Conflict (shift/reduce) in state 66.
** Token involved: LIDENT
** This state is reached from implementation after reading:

modulexpr COLON SIG signature ctype STAR 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

implementation 
modulexpr EOF 
modulexpr COLON moduletype 
                SIG signature END 
                    signature signature_item 
                              valuedecl SEMI 
                              (?)

** In state 66, looking ahead at LIDENT, reducing production
** ctype -> ctype STAR 
** is permitted because of the following sub-derivation:

ctype valuedecl_cont // lookahead token appears because valuedecl_cont can begin with LIDENT
ctype STAR . 

** In state 66, looking ahead at LIDENT, shifting is permitted
** because of the following sub-derivation:

ctype valuedecl_cont 
      STAR valuedecl_cont 
           . LIDENT 

** Conflict (shift/reduce) in state 15.
** Token involved: UIDENT
** This state is reached from phrase after reading:

TYPEDEF ctype STAR 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

phrase 
structure_item 
TYPEDEF typedef SEMI 
        (?)

** In state 15, looking ahead at UIDENT, reducing production
** ctype -> ctype STAR 
** is permitted because of the following sub-derivation:

ctype typedef_cont // lookahead token appears because typedef_cont can begin with UIDENT
ctype STAR . 

** In state 15, looking ahead at UIDENT, shifting is permitted
** because of the following sub-derivation:

ctype typedef_cont 
      STAR typedef_cont 
           . UIDENT 
