File "modelyze.mly", line 88, characters 28-34:
Warning: the token IFELSE is unused.
File "modelyze.mly", line 86, characters 28-35:
Warning: the token IFGUARD is unused.
File "modelyze.mly", line 87, characters 28-34:
Warning: the token IFTHEN is unused.
File "modelyze.mly", line 64, characters 28-30:
Warning: the token IN is unused.
File "modelyze.mly", line 167, characters 10-15:
Warning: the token MYAPP is unused.
Grammar has 32 nonterminal symbols, among which 1 start symbols.
Grammar has 100 terminal symbols.
Grammar has 204 productions.
nullable(tyatom) = false
nullable(tyarrow) = false
nullable(ty) = false
nullable(top) = false
nullable(term) = false
nullable(semi_op) = false
nullable(revtypetupleseq) = false
nullable(revtmtyseq) = false
nullable(revtmseq) = false
nullable(revpatseq) = false
nullable(revidentseq) = false
nullable(rettype) = true
nullable(pattern) = false
nullable(pat_op) = false
nullable(pat_left) = false
nullable(pat_cons) = false
nullable(pat_atom) = false
nullable(parenparamlist) = false
nullable(param) = false
nullable(op_guard) = true
nullable(op_atom_list_rev) = true
nullable(op) = false
nullable(matchcases) = false
nullable(main) = false
nullable(letpat) = false
nullable(identparen) = false
nullable(deconpat) = false
nullable(cons) = false
nullable(atom_list_rev) = false
nullable(atom) = false
nullable(app_right) = false
nullable(app_left) = false
first(tyatom) = TYSTRING SET REAL QUESTIONMARK MAP LSQUARE LPAREN LIST LESS LCURLY INT IDENT DAESOLVER BOOL ARRAY
first(tyarrow) = TYSTRING SET REAL QUESTIONMARK MAP LSQUARE LPAREN LIST LESS LCURLY INT IDENT DAESOLVER BOOL ARRAY
first(ty) = TYSTRING SET REAL QUESTIONMARK MAP LSQUARE LPAREN LIST LESS LCURLY INT IDENT DAESOLVER BOOL ARRAY
first(top) = TYPE INCLUDE EOF DEF
first(term) = UINT UFLOAT TRUE SYMSTR SUB STRING SPECIALIZE SND SET PROJ PRIMITIVE NOT MATCH MAP LSQUARE LPAREN LCURLY LCASE IF IDENTPAREN IDENT FUN FST FALSE ERROR DPRINTTYPE DPRINT DOTSUB DEF DECON DAESOLVER BEGIN ARRAY
first(semi_op) = UINT UFLOAT TRUE SYMSTR SUB STRING SPECIALIZE SND PRIMITIVE NOT LSQUARE LPAREN LCURLY IDENTPAREN IDENT FST FALSE ERROR DPRINTTYPE DPRINT DOTSUB BEGIN
first(revtypetupleseq) = TYSTRING SET REAL QUESTIONMARK MAP LSQUARE LPAREN LIST LESS LCURLY INT IDENT DAESOLVER BOOL ARRAY
first(revtmtyseq) = IDENT
first(revtmseq) = UINT UFLOAT TRUE SYMSTR SUB STRING SPECIALIZE SND SET PROJ PRIMITIVE NOT MATCH MAP LSQUARE LPAREN LCURLY LCASE IF IDENTPAREN IDENT FUN FST FALSE ERROR DPRINTTYPE DPRINT DOTSUB DEF DECON DAESOLVER BEGIN ARRAY
first(revpatseq) = USCORE UINT UFLOAT TRUE SYM SUB STRING NOT LSQUARE LPAREN LIFT IDENT FALSE ESCAPE DOTSUB
first(revidentseq) = IDENT
first(rettype) = COLON ARROW
first(pattern) = USCORE UINT UFLOAT TRUE SYM SUB STRING NOT LSQUARE LPAREN LIFT IDENT FALSE ESCAPE DOTSUB
first(pat_op) = USCORE UINT UFLOAT TRUE SYM SUB STRING NOT LSQUARE LPAREN LIFT IDENT FALSE ESCAPE DOTSUB
first(pat_left) = USCORE UINT UFLOAT TRUE SYM STRING LSQUARE LPAREN LIFT IDENT FALSE ESCAPE
first(pat_cons) = USCORE UINT UFLOAT TRUE SYM SUB STRING NOT LSQUARE LPAREN LIFT IDENT FALSE ESCAPE DOTSUB
first(pat_atom) = USCORE UINT UFLOAT TRUE SYM STRING LSQUARE LPAREN IDENT FALSE ESCAPE
first(parenparamlist) = RPAREN IDENT
first(param) = IDENT
first(op_guard) = IF
first(op_atom_list_rev) = UINT UFLOAT TRUE SYMSTR STRING PRIMITIVE LSQUARE LPAREN LCURLY IDENT FALSE DPRINTTYPE DPRINT BEGIN
first(op) = UINT UFLOAT TRUE SYMSTR SUB STRING SPECIALIZE SND PRIMITIVE NOT LSQUARE LPAREN LCURLY IDENTPAREN IDENT FST FALSE ERROR DPRINTTYPE DPRINT DOTSUB BEGIN
first(matchcases) = BAR
first(main) = TYPE INCLUDE EOF DEF
first(letpat) = USCORE IDENT
first(identparen) = IDENTPAREN IDENT
first(deconpat) = SYM LIFT IDENT
first(cons) = UINT UFLOAT TRUE SYMSTR SUB STRING SPECIALIZE SND PRIMITIVE NOT LSQUARE LPAREN LCURLY IDENTPAREN IDENT FST FALSE ERROR DPRINTTYPE DPRINT DOTSUB BEGIN
first(atom_list_rev) = UINT UFLOAT TRUE SYMSTR STRING PRIMITIVE LSQUARE LPAREN LCURLY IDENT FALSE DPRINTTYPE DPRINT BEGIN
first(atom) = UINT UFLOAT TRUE SYMSTR STRING PRIMITIVE LSQUARE LPAREN LCURLY IDENT FALSE DPRINTTYPE DPRINT BEGIN
first(app_right) = UINT UFLOAT TRUE SYMSTR STRING PRIMITIVE METAAPP LSQUARE LPAREN LCURLY IDENT FALSE DPRINTTYPE DPRINT BEGIN
first(app_left) = UINT UFLOAT TRUE SYMSTR STRING SPECIALIZE SND PRIMITIVE LSQUARE LPAREN LCURLY IDENTPAREN IDENT FST FALSE ERROR DPRINTTYPE DPRINT BEGIN
minimal(tyatom) = (* 1 *) IDENT
minimal(tyarrow) = (* 1 *) IDENT
minimal(ty) = (* 1 *) IDENT
minimal(top) = (* 1 *) EOF
minimal(term) = (* 1 *) IDENT
minimal(semi_op) = (* 1 *) IDENT
minimal(revtypetupleseq) = (* 1 *) IDENT
minimal(revtmtyseq) = (* 3 *) IDENT COLON IDENT
minimal(revtmseq) = (* 1 *) IDENT
minimal(revpatseq) = (* 1 *) IDENT
minimal(revidentseq) = (* 1 *) IDENT
minimal(rettype) = (* 0 *)
minimal(pattern) = (* 1 *) IDENT
minimal(pat_op) = (* 1 *) IDENT
minimal(pat_left) = (* 1 *) IDENT
minimal(pat_cons) = (* 1 *) IDENT
minimal(pat_atom) = (* 1 *) IDENT
minimal(parenparamlist) = (* 1 *) RPAREN
minimal(param) = (* 3 *) IDENT COLON IDENT
minimal(op_guard) = (* 0 *)
minimal(op_atom_list_rev) = (* 0 *)
minimal(op) = (* 1 *) IDENT
minimal(matchcases) = (* 4 *) BAR IDENT ARROW IDENT
minimal(main) = (* 1 *) EOF
minimal(letpat) = (* 1 *) IDENT
minimal(identparen) = (* 1 *) IDENTPAREN
minimal(deconpat) = (* 2 *) IDENT IDENT
minimal(cons) = (* 1 *) IDENT
minimal(atom_list_rev) = (* 1 *) IDENT
minimal(atom) = (* 1 *) IDENT
minimal(app_right) = (* 1 *) IDENT
minimal(app_left) = (* 1 *) IDENT
follow(tyatom) = USCORE UINT UFLOAT TYSTRING TYPE TRUE THEN SYM SUB STRING SQUOTE SET SEMI RSQUARE RPAREN REAL RCURLY QUESTIONMARK PLUSPLUS OR NOTEQUAL MUL MOD MAP LSQUARE LPAREN LONGARROW LIST LESSEQUAL LESS LCURLY INT INCLUDE IF IDENT GREATEQUAL GREAT FALSE EXP ESCAPE EQUAL EQSEMI EQ EOF DOTSUB DOTNOTEQUAL DOTMUL DOTLESSEQUAL DOTLESS DOTGREATEQUAL DOTGREAT DOTEXP DOTEQUAL DOTDIV DOTADD DIV DEF DARROW DAESOLVER CONS COMMA BOOL ARROW ARRAY APXEQ AND ADD
follow(tyarrow) = TYPE THEN SEMI RSQUARE RPAREN RCURLY INCLUDE GREAT EQ EOF DEF DARROW COMMA
follow(ty) = TYPE THEN SEMI RSQUARE RPAREN RCURLY INCLUDE GREAT EQ EOF DEF COMMA
follow(top) = #
follow(term) = WITH TYPE THEN RSQUARE RPAREN RCURLY OF INCLUDE EOF END ELSE DEF COMMA BAR ARROW
follow(semi_op) = WITH TYPE THEN RSQUARE RPAREN RCURLY OF INCLUDE EOF END ELSE DEF COMMA BAR ARROW
follow(revtypetupleseq) = RPAREN COMMA
follow(revtmtyseq) = RPAREN COMMA
follow(revtmseq) = RSQUARE RPAREN COMMA
follow(revpatseq) = RSQUARE RPAREN COMMA
follow(revidentseq) = COMMA COLON
follow(rettype) = EQ
follow(pattern) = RSQUARE RPAREN IF COMMA ARROW
follow(pat_op) = SUB SQUOTE SEMI RSQUARE RPAREN PLUSPLUS OR NOTEQUAL MUL MOD LONGARROW LESSEQUAL LESS IF GREATEQUAL GREAT EXP EQUAL EQSEMI EQ DOTSUB DOTNOTEQUAL DOTMUL DOTLESSEQUAL DOTLESS DOTGREATEQUAL DOTGREAT DOTEXP DOTEQUAL DOTDIV DOTADD DIV CONS COMMA ARROW APXEQ AND ADD
follow(pat_left) = USCORE UINT UFLOAT TRUE SYM SUB STRING SQUOTE SEMI RSQUARE RPAREN PLUSPLUS OR NOTEQUAL MUL MOD LSQUARE LPAREN LONGARROW LESSEQUAL LESS IF IDENT GREATEQUAL GREAT FALSE EXP ESCAPE EQUAL EQSEMI EQ DOTSUB DOTNOTEQUAL DOTMUL DOTLESSEQUAL DOTLESS DOTGREATEQUAL DOTGREAT DOTEXP DOTEQUAL DOTDIV DOTADD DIV CONS COMMA ARROW APXEQ AND ADD
follow(pat_cons) = RSQUARE RPAREN IF COMMA ARROW
follow(pat_atom) = USCORE UINT UFLOAT TRUE SYM SUB STRING SQUOTE SEMI RSQUARE RPAREN PLUSPLUS OR NOTEQUAL MUL MOD LSQUARE LPAREN LONGARROW LESSEQUAL LESS IF IDENT GREATEQUAL GREAT FALSE EXP ESCAPE EQUAL EQSEMI EQ DOTSUB DOTNOTEQUAL DOTMUL DOTLESSEQUAL DOTLESS DOTGREATEQUAL DOTGREAT DOTEXP DOTEQUAL DOTDIV DOTADD DIV CONS COMMA ARROW APXEQ AND ADD
follow(parenparamlist) = EQ
follow(param) = RPAREN COMMA
follow(op_guard) = ARROW
follow(op_atom_list_rev) = WITH TYPE THEN RSQUARE RPAREN RCURLY OF INCLUDE EOF END ELSE DEF COMMA BAR ARROW
follow(op) = WITH TYPE THEN SUB SQUOTE SEMI RSQUARE RPAREN RCURLY POLYEQUAL PLUSPLUS OR OF NOTEQUAL MUL MOD LONGARROW LESSEQUAL LESS LEFTARROW INCLUDE GREATEQUAL GREAT EXP EQUAL EQSEMI EQ EOF END ELSE DOTSUB DOTNOTEQUAL DOTMUL DOTLESSEQUAL DOTLESS DOTGREATEQUAL DOTGREAT DOTEXP DOTEQUAL DOTDIV DOTADD DIV DEF CONS COMMA BAR ARROW APXEQ AND ADD
follow(matchcases) = WITH TYPE THEN RSQUARE RPAREN RCURLY OF INCLUDE EOF END ELSE DEF COMMA BAR ARROW
follow(main) = #
follow(letpat) = EQ COLON
follow(identparen) = RPAREN IDENT
follow(deconpat) = THEN
follow(cons) = WITH TYPE THEN SEMI RSQUARE RPAREN RCURLY OF INCLUDE EOF END ELSE DEF COMMA BAR ARROW
follow(atom_list_rev) = WITH UINT UFLOAT TYPE TRUE THEN SYMSTR STRING RSQUARE RPAREN RCURLY PRIMITIVE OF LSQUARE LPAREN LCURLY INCLUDE IDENT FALSE EOF END ELSE DPRINTTYPE DPRINT DEF COMMA BEGIN BAR ARROW
follow(atom) = WITH USCORE UINT UFLOAT TYPE TRUE THEN SYMSTR SYM SUB STRING SQUOTE SEMI RSQUARE RPAREN RCURLY PRIMITIVE POLYEQUAL PLUSPLUS PARENAPP OR OF NOTEQUAL MUL MOD METAAPP LSQUARE LPAREN LONGARROW LESSEQUAL LESS LEFTARROW LCURLY INCLUDE IF IDENT GREATEQUAL GREAT FALSE EXP ESCAPE EQUAL EQSEMI EQ EOF END ELSE DPRINTTYPE DPRINT DOTSUB DOTNOTEQUAL DOTMUL DOTLESSEQUAL DOTLESS DOTGREATEQUAL DOTGREAT DOTEXP DOTEQUAL DOTDIV DOTADD DIV DEF CONS COMMA BEGIN BAR ARROW APXEQ AND ADD
follow(app_right) = WITH UINT UFLOAT TYPE TRUE THEN SYMSTR SUB STRING SQUOTE SEMI RSQUARE RPAREN RCURLY PRIMITIVE POLYEQUAL PLUSPLUS PARENAPP OR OF NOTEQUAL MUL MOD METAAPP LSQUARE LPAREN LONGARROW LESSEQUAL LESS LEFTARROW LCURLY INCLUDE IDENT GREATEQUAL GREAT FALSE EXP EQUAL EQSEMI EQ EOF END ELSE DPRINTTYPE DPRINT DOTSUB DOTNOTEQUAL DOTMUL DOTLESSEQUAL DOTLESS DOTGREATEQUAL DOTGREAT DOTEXP DOTEQUAL DOTDIV DOTADD DIV DEF CONS COMMA BEGIN BAR ARROW APXEQ AND ADD
follow(app_left) = WITH UINT UFLOAT TYPE TRUE THEN SYMSTR SUB STRING SQUOTE SEMI RSQUARE RPAREN RCURLY PRIMITIVE POLYEQUAL PLUSPLUS PARENAPP OR OF NOTEQUAL MUL MOD METAAPP LSQUARE LPAREN LONGARROW LESSEQUAL LESS LEFTARROW LCURLY INCLUDE IDENT GREATEQUAL GREAT FALSE EXP EQUAL EQSEMI EQ EOF END ELSE DPRINTTYPE DPRINT DOTSUB DOTNOTEQUAL DOTMUL DOTLESSEQUAL DOTLESS DOTGREATEQUAL DOTGREAT DOTEXP DOTEQUAL DOTDIV DOTADD DIV DEF CONS COMMA BEGIN BAR ARROW APXEQ AND ADD
Built an LR(0) automaton with 455 states.
The grammar is not SLR(1) -- 73 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 455 states.
2244 shift/reduce conflicts were silently solved.
File "modelyze.mly", line 165, characters 0-9:
Warning: the precedence level assigned to DEFUK is never useful.
File "modelyze.mly", line 167, characters 0-9:
Warning: the precedence level assigned to MYAPP is never useful.
File "modelyze.mly", line 203, characters 34-39:
Warning: this %prec declaration is never useful.
File "modelyze.mly", line 206, characters 51-56:
Warning: this %prec declaration is never useful.
122 out of 455 states have a default reduction.
176 out of 455 states are represented.
0 out of 135 symbols keep track of their start position.
0 out of 135 symbols keep track of their end position.
74 out of 205 productions exploit shiftreduce optimization.
0 out of 455 states can peek at an error.
1153 functions before inlining, 182 functions after inlining.
