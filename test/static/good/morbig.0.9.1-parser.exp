Grammar has 50 nonterminal symbols, among which 2 start symbols.
Grammar has 40 terminal symbols.
Grammar has 115 productions.
nullable(wordlist) = false
nullable(word) = false
nullable(while_clause) = false
nullable(until_clause) = false
nullable(term) = false
nullable(subshell) = false
nullable(simple_command) = false
nullable(sequential_sep) = false
nullable(separator_op) = false
nullable(separator) = false
nullable(redirect_list) = false
nullable(program) = true
nullable(pipeline) = false
nullable(pipe_sequence) = false
nullable(pattern) = false
nullable(newline_list) = false
nullable(name) = false
nullable(linebreak) = true
nullable(io_redirect) = false
nullable(io_here) = false
nullable(io_file) = false
nullable(intended_error) = false
nullable(if_clause) = false
nullable(here_end) = false
nullable(function_definition) = false
nullable(function_body) = false
nullable(for_clause) = false
nullable(fname) = false
nullable(filename) = false
nullable(entry_point) = false
nullable(else_part) = false
nullable(do_group) = false
nullable(compound_list) = false
nullable(compound_command) = false
nullable(complete_commands) = false
nullable(complete_command) = false
nullable(command) = false
nullable(cmd_word) = false
nullable(cmd_suffix) = false
nullable(cmd_prefix) = false
nullable(cmd_name) = false
nullable(clist) = false
nullable(cin) = false
nullable(case_list_ns) = false
nullable(case_list) = false
nullable(case_item_ns) = false
nullable(case_item) = false
nullable(case_clause) = false
nullable(brace_group) = false
nullable(and_or) = false
first(wordlist) = WORD NAME
first(word) = WORD NAME
first(while_clause) = While
first(until_clause) = Until
first(term) = While WORD Until NAME Lparen Lbrace LESSGREAT LESSAND LESS If IO_NUMBER GREATAND GREAT For DLESSDASH DLESS DGREAT Case CLOBBER Bang ASSIGNMENT_WORD
first(subshell) = Lparen
first(simple_command) = WORD NAME LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT DLESSDASH DLESS DGREAT CLOBBER ASSIGNMENT_WORD
first(sequential_sep) = Semicolon NEWLINE
first(separator_op) = Uppersand Semicolon
first(separator) = Uppersand Semicolon NEWLINE
first(redirect_list) = LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT DLESSDASH DLESS DGREAT CLOBBER
first(program) = While WORD Until NEWLINE NAME Lparen Lbrace LESSGREAT LESSAND LESS If IO_NUMBER GREATAND GREAT For DLESSDASH DLESS DGREAT Case CLOBBER Bang ASSIGNMENT_WORD
first(pipeline) = While WORD Until NAME Lparen Lbrace LESSGREAT LESSAND LESS If IO_NUMBER GREATAND GREAT For DLESSDASH DLESS DGREAT Case CLOBBER Bang ASSIGNMENT_WORD
first(pipe_sequence) = While WORD Until NAME Lparen Lbrace LESSGREAT LESSAND LESS If IO_NUMBER GREATAND GREAT For DLESSDASH DLESS DGREAT Case CLOBBER ASSIGNMENT_WORD
first(pattern) = WORD NAME
first(newline_list) = NEWLINE
first(name) = NAME
first(linebreak) = NEWLINE
first(io_redirect) = LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT DLESSDASH DLESS DGREAT CLOBBER
first(io_here) = DLESSDASH DLESS
first(io_file) = LESSGREAT LESSAND LESS GREATAND GREAT DGREAT CLOBBER
first(intended_error) = INTENDED_ERROR
first(if_clause) = If
first(here_end) = WORD NAME
first(function_definition) = NAME
first(function_body) = While Until Lparen Lbrace If For Case
first(for_clause) = For
first(fname) = NAME
first(filename) = WORD NAME
first(entry_point) = While WORD Until NEWLINE NAME Lparen Lbrace LESSGREAT LESSAND LESS If IO_NUMBER GREATAND GREAT For EOF DLESSDASH DLESS DGREAT Case CLOBBER Bang ASSIGNMENT_WORD
first(else_part) = Else Elif
first(do_group) = Do
first(compound_list) = While WORD Until NEWLINE NAME Lparen Lbrace LESSGREAT LESSAND LESS If IO_NUMBER GREATAND GREAT For DLESSDASH DLESS DGREAT Case CLOBBER Bang ASSIGNMENT_WORD
first(compound_command) = While Until Lparen Lbrace If For Case
first(complete_commands) = While WORD Until NAME Lparen Lbrace LESSGREAT LESSAND LESS If IO_NUMBER GREATAND GREAT For DLESSDASH DLESS DGREAT Case CLOBBER Bang ASSIGNMENT_WORD
first(complete_command) = While WORD Until NAME Lparen Lbrace LESSGREAT LESSAND LESS If IO_NUMBER GREATAND GREAT For DLESSDASH DLESS DGREAT Case CLOBBER Bang ASSIGNMENT_WORD
first(command) = While WORD Until NAME Lparen Lbrace LESSGREAT LESSAND LESS If IO_NUMBER GREATAND GREAT For DLESSDASH DLESS DGREAT Case CLOBBER ASSIGNMENT_WORD
first(cmd_word) = WORD NAME
first(cmd_suffix) = WORD NAME LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT DLESSDASH DLESS DGREAT CLOBBER
first(cmd_prefix) = LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT DLESSDASH DLESS DGREAT CLOBBER ASSIGNMENT_WORD
first(cmd_name) = WORD NAME
first(clist) = While WORD Until NAME Lparen Lbrace LESSGREAT LESSAND LESS If IO_NUMBER GREATAND GREAT For DLESSDASH DLESS DGREAT Case CLOBBER Bang ASSIGNMENT_WORD
first(cin) = In
first(case_list_ns) = WORD NAME Lparen
first(case_list) = WORD NAME Lparen
first(case_item_ns) = WORD NAME Lparen
first(case_item) = WORD NAME Lparen
first(case_clause) = Case
first(brace_group) = Lbrace
first(and_or) = While WORD Until NAME Lparen Lbrace LESSGREAT LESSAND LESS If IO_NUMBER GREATAND GREAT For DLESSDASH DLESS DGREAT Case CLOBBER Bang ASSIGNMENT_WORD
minimal(wordlist) = (* 1 *) WORD
minimal(word) = (* 1 *) WORD
minimal(while_clause) = (* 5 *) While ASSIGNMENT_WORD Do ASSIGNMENT_WORD Done
minimal(until_clause) = (* 5 *) Until ASSIGNMENT_WORD Do ASSIGNMENT_WORD Done
minimal(term) = (* 1 *) ASSIGNMENT_WORD
minimal(subshell) = (* 3 *) Lparen ASSIGNMENT_WORD Rparen
minimal(simple_command) = (* 1 *) ASSIGNMENT_WORD
minimal(sequential_sep) = (* 1 *) Semicolon
minimal(separator_op) = (* 1 *) Uppersand
minimal(separator) = (* 1 *) Uppersand
minimal(redirect_list) = (* 2 *) LESS WORD
minimal(program) = (* 0 *)
minimal(pipeline) = (* 1 *) ASSIGNMENT_WORD
minimal(pipe_sequence) = (* 1 *) ASSIGNMENT_WORD
minimal(pattern) = (* 1 *) WORD
minimal(newline_list) = (* 1 *) NEWLINE
minimal(name) = (* 1 *) NAME
minimal(linebreak) = (* 0 *)
minimal(io_redirect) = (* 2 *) LESS WORD
minimal(io_here) = (* 2 *) DLESS WORD
minimal(io_file) = (* 2 *) LESS WORD
minimal(intended_error) = (* 1 *) INTENDED_ERROR
minimal(if_clause) = (* 5 *) If ASSIGNMENT_WORD Then ASSIGNMENT_WORD Fi
minimal(here_end) = (* 1 *) WORD
minimal(function_definition) = (* 6 *) NAME Lparen Rparen Lbrace ASSIGNMENT_WORD Rbrace
minimal(function_body) = (* 3 *) Lbrace ASSIGNMENT_WORD Rbrace
minimal(for_clause) = (* 5 *) For NAME Do ASSIGNMENT_WORD Done
minimal(fname) = (* 1 *) NAME
minimal(filename) = (* 1 *) WORD
minimal(entry_point) = (* 1 *) EOF
minimal(else_part) = (* 2 *) Else ASSIGNMENT_WORD
minimal(do_group) = (* 3 *) Do ASSIGNMENT_WORD Done
minimal(compound_list) = (* 1 *) ASSIGNMENT_WORD
minimal(compound_command) = (* 3 *) Lbrace ASSIGNMENT_WORD Rbrace
minimal(complete_commands) = (* 1 *) ASSIGNMENT_WORD
minimal(complete_command) = (* 1 *) ASSIGNMENT_WORD
minimal(command) = (* 1 *) ASSIGNMENT_WORD
minimal(cmd_word) = (* 1 *) WORD
minimal(cmd_suffix) = (* 1 *) WORD
minimal(cmd_prefix) = (* 1 *) ASSIGNMENT_WORD
minimal(cmd_name) = (* 1 *) WORD
minimal(clist) = (* 1 *) ASSIGNMENT_WORD
minimal(cin) = (* 1 *) In
minimal(case_list_ns) = (* 2 *) WORD Rparen
minimal(case_list) = (* 3 *) WORD Rparen DSEMI
minimal(case_item_ns) = (* 2 *) WORD Rparen
minimal(case_item) = (* 3 *) WORD Rparen DSEMI
minimal(case_clause) = (* 4 *) Case WORD In Esac
minimal(brace_group) = (* 3 *) Lbrace ASSIGNMENT_WORD Rbrace
minimal(and_or) = (* 1 *) ASSIGNMENT_WORD
maximal(wordlist) = infinity
maximal(word) = 1
maximal(while_clause) = infinity
maximal(until_clause) = infinity
maximal(term) = infinity
maximal(subshell) = infinity
maximal(simple_command) = infinity
maximal(sequential_sep) = infinity
maximal(separator_op) = 1
maximal(separator) = infinity
maximal(redirect_list) = infinity
maximal(program) = infinity
maximal(pipeline) = infinity
maximal(pipe_sequence) = infinity
maximal(pattern) = infinity
maximal(newline_list) = infinity
maximal(name) = 1
maximal(linebreak) = infinity
maximal(io_redirect) = 3
maximal(io_here) = 2
maximal(io_file) = 2
maximal(intended_error) = 1
maximal(if_clause) = infinity
maximal(here_end) = 1
maximal(function_definition) = infinity
maximal(function_body) = infinity
maximal(for_clause) = infinity
maximal(fname) = 1
maximal(filename) = 1
maximal(entry_point) = infinity
maximal(else_part) = infinity
maximal(do_group) = infinity
maximal(compound_list) = infinity
maximal(compound_command) = infinity
maximal(complete_commands) = infinity
maximal(complete_command) = infinity
maximal(command) = infinity
maximal(cmd_word) = 1
maximal(cmd_suffix) = infinity
maximal(cmd_prefix) = infinity
maximal(cmd_name) = 1
maximal(clist) = infinity
maximal(cin) = 1
maximal(case_list_ns) = infinity
maximal(case_list) = infinity
maximal(case_item_ns) = infinity
maximal(case_item) = infinity
maximal(case_clause) = infinity
maximal(brace_group) = infinity
maximal(and_or) = infinity
follow(wordlist) = WORD Semicolon NEWLINE NAME
follow(word) = WORD Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE NAME LESSGREAT LESSAND LESS In IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER ASSIGNMENT_WORD AND_IF
follow(while_clause) = Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER AND_IF
follow(until_clause) = Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER AND_IF
follow(term) = Uppersand Then Semicolon Rparen Rbrace NEWLINE Fi Esac Else Elif Done Do DSEMI
follow(subshell) = Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER AND_IF
follow(simple_command) = Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE Fi Esac Else Elif EOF Done Do DSEMI AND_IF
follow(sequential_sep) = Do
follow(separator_op) = While WORD Until Then Rparen Rbrace NEWLINE NAME Lparen Lbrace LESSGREAT LESSAND LESS If IO_NUMBER GREATAND GREAT For Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT Case CLOBBER Bang ASSIGNMENT_WORD
follow(separator) = While WORD Until Then Rparen Rbrace NAME Lparen Lbrace LESSGREAT LESSAND LESS If IO_NUMBER GREATAND GREAT For Fi Esac Else Elif Done Do DSEMI DLESSDASH DLESS DGREAT Case CLOBBER Bang ASSIGNMENT_WORD
follow(redirect_list) = Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER AND_IF
follow(program) = EOF
follow(pipeline) = Uppersand Then Semicolon Rparen Rbrace OR_IF NEWLINE Fi Esac Else Elif EOF Done Do DSEMI AND_IF
follow(pipe_sequence) = Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE Fi Esac Else Elif EOF Done Do DSEMI AND_IF
follow(pattern) = Rparen Pipe
follow(newline_list) = While WORD Until Then Rparen Rbrace NEWLINE NAME Lparen Lbrace LESSGREAT LESSAND LESS In If IO_NUMBER GREATAND GREAT For Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT Case CLOBBER Bang ASSIGNMENT_WORD
follow(name) = Semicolon NEWLINE In Do
follow(linebreak) = While WORD Until Then Rparen Rbrace NAME Lparen Lbrace LESSGREAT LESSAND LESS In If IO_NUMBER GREATAND GREAT For Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT Case CLOBBER Bang ASSIGNMENT_WORD
follow(io_redirect) = WORD Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE NAME LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER ASSIGNMENT_WORD AND_IF
follow(io_here) = WORD Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE NAME LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER ASSIGNMENT_WORD AND_IF
follow(io_file) = WORD Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE NAME LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER ASSIGNMENT_WORD AND_IF
follow(intended_error) = #
follow(if_clause) = Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER AND_IF
follow(here_end) = WORD Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE NAME LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER ASSIGNMENT_WORD AND_IF
follow(function_definition) = Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE Fi Esac Else Elif EOF Done Do DSEMI AND_IF
follow(function_body) = Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE Fi Esac Else Elif EOF Done Do DSEMI AND_IF
follow(for_clause) = Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER AND_IF
follow(fname) = Lparen
follow(filename) = WORD Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE NAME LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER ASSIGNMENT_WORD AND_IF
follow(entry_point) = #
follow(else_part) = Fi
follow(do_group) = Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER AND_IF
follow(compound_list) = Then Rparen Rbrace Fi Esac Else Elif Done Do DSEMI
follow(compound_command) = Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER AND_IF
follow(complete_commands) = NEWLINE EOF
follow(complete_command) = NEWLINE EOF
follow(command) = Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE Fi Esac Else Elif EOF Done Do DSEMI AND_IF
follow(cmd_word) = WORD Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE NAME LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER AND_IF
follow(cmd_suffix) = WORD Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE NAME LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER AND_IF
follow(cmd_prefix) = WORD Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE NAME LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER ASSIGNMENT_WORD AND_IF
follow(cmd_name) = WORD Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE NAME LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER AND_IF
follow(clist) = Uppersand Semicolon NEWLINE EOF
follow(cin) = WORD Semicolon NEWLINE NAME Lparen Esac
follow(case_list_ns) = Esac
follow(case_list) = WORD NAME Lparen Esac
follow(case_item_ns) = Esac
follow(case_item) = WORD NAME Lparen Esac
follow(case_clause) = Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER AND_IF
follow(brace_group) = Uppersand Then Semicolon Rparen Rbrace Pipe OR_IF NEWLINE LESSGREAT LESSAND LESS IO_NUMBER GREATAND GREAT Fi Esac Else Elif EOF Done Do DSEMI DLESSDASH DLESS DGREAT CLOBBER AND_IF
follow(and_or) = Uppersand Then Semicolon Rparen Rbrace OR_IF NEWLINE Fi Esac Else Elif EOF Done Do DSEMI AND_IF
Built an LR(0) automaton with 190 states.
The grammar is not SLR(1) -- 3 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 190 states.
87 out of 190 states have a default reduction.
The action table is 7790 entries; 1216 non-zero; 944 compressed.
The action table occupies roughly 1984 bytes.
The goto table is 9880 entries; 404 non-zero; 576 compressed.
The goto table occupies roughly 864 bytes.
The error table occupies roughly 1008 bytes.
The default_reduction table occupies roughly 224 bytes.
The lhs table occupies roughly 152 bytes.
The trace table occupies roughly 8 bytes.
