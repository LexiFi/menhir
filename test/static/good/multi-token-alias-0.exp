Grammar has 4 nonterminal symbols, among which 1 start symbols.
Grammar has 8 terminal symbols.
Grammar has 9 productions.
nullable(term) = false
nullable(phrase) = false
nullable(factor) = false
nullable(atom) = false
first(term) = LPAREN INT
first(phrase) = LPAREN INT
first(factor) = LPAREN INT
first(atom) = LPAREN INT
minimal(term) = (* 1 *) INT
minimal(phrase) = (* 2 *) INT EOL
minimal(factor) = (* 1 *) INT
minimal(atom) = (* 1 *) INT
follow(term) = RPAREN PLUS MINUS EOL
follow(phrase) = #
follow(factor) = RPAREN PLUS MUL MINUS EOL DIV
follow(atom) = RPAREN PLUS MUL MINUS EOL DIV
Built an LR(0) automaton with 18 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 18 states.
7 out of 18 states have a default reduction.
6 out of 18 states are represented.
0 out of 15 symbols keep track of their start position.
0 out of 15 symbols keep track of their end position.
7 out of 10 productions exploit shiftreduce optimization.
0 out of 18 states can peek at an error.
55 functions before inlining, 13 functions after inlining.
