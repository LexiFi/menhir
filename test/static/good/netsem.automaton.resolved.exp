State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On SCOMMENTSTART shift to state 1
-- On timecomment shift to state 17
-- On main shift to state 966
## Reductions:
-- On T_LH_EPSILON reduce production timecomment ->
-- On T_ABSTIME reduce production timecomment ->
-- On TRACE reduce production timecomment ->
-- On LPAREN reduce production timecomment ->
-- On LHSEND reduce production timecomment ->
-- On LHRETURN reduce production timecomment ->
-- On LHRECV reduce production timecomment ->
-- On LHLOOP reduce production timecomment ->
-- On LHCALL reduce production timecomment ->
-- On COMMENT reduce production timecomment ->

State 1:
## Known stack suffix:
## SCOMMENTSTART
## LR(1) items:
timecomment -> SCOMMENTSTART . intr DOT intr stringr SCOMMENTEND [ T_LH_EPSILON T_ABSTIME TRACE LPAREN LN1_HOST LN1_EPSILON LHSEND LHRETURN LHRECV LHLOOP LHCALL COMMENT ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 8
## Reductions:

State 2:
## Known stack suffix:
## MINUS
## LR(1) items:
intr -> MINUS . INT [ STRING SC RSQBRKT RPAREN RECEND MINUS LPAREN INT DOT COMMENT COMMA ]
## Transitions:
-- On INT shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## MINUS INT
## LR(1) items:
intr -> MINUS INT . [ STRING SC RSQBRKT RPAREN RECEND MINUS LPAREN INT DOT COMMENT COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production intr -> MINUS INT

State 4:
## Known stack suffix:
## LPAREN
## LR(1) items:
intr -> LPAREN . intr RPAREN [ STRING SC RSQBRKT RPAREN RECEND MINUS LPAREN INT DOT COMMENT COMMA ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 6
## Reductions:

State 5:
## Known stack suffix:
## INT
## LR(1) items:
intr -> INT . [ STRING SC RSQBRKT RPAREN RECEND MINUS LPAREN INT DOT COMMENT COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production intr -> INT

State 6:
## Known stack suffix:
## LPAREN intr
## LR(1) items:
intr -> LPAREN intr . RPAREN [ STRING SC RSQBRKT RPAREN RECEND MINUS LPAREN INT DOT COMMENT COMMA ]
## Transitions:
-- On RPAREN shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## LPAREN intr RPAREN
## LR(1) items:
intr -> LPAREN intr RPAREN . [ STRING SC RSQBRKT RPAREN RECEND MINUS LPAREN INT DOT COMMENT COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production intr -> LPAREN intr RPAREN

State 8:
## Known stack suffix:
## SCOMMENTSTART intr
## LR(1) items:
timecomment -> SCOMMENTSTART intr . DOT intr stringr SCOMMENTEND [ T_LH_EPSILON T_ABSTIME TRACE LPAREN LN1_HOST LN1_EPSILON LHSEND LHRETURN LHRECV LHLOOP LHCALL COMMENT ]
## Transitions:
-- On DOT shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## SCOMMENTSTART intr DOT
## LR(1) items:
timecomment -> SCOMMENTSTART intr DOT . intr stringr SCOMMENTEND [ T_LH_EPSILON T_ABSTIME TRACE LPAREN LN1_HOST LN1_EPSILON LHSEND LHRETURN LHRECV LHLOOP LHCALL COMMENT ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 10
## Reductions:

State 10:
## Known stack suffix:
## SCOMMENTSTART intr DOT intr
## LR(1) items:
timecomment -> SCOMMENTSTART intr DOT intr . stringr SCOMMENTEND [ T_LH_EPSILON T_ABSTIME TRACE LPAREN LN1_HOST LN1_EPSILON LHSEND LHRETURN LHRECV LHLOOP LHCALL COMMENT ]
## Transitions:
-- On STRING shift to state 11
-- On LPAREN shift to state 12
-- On stringr shift to state 15
## Reductions:

State 11:
## Known stack suffix:
## STRING
## LR(1) items:
stringr -> STRING . [ SCOMMENTEND RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stringr -> STRING

State 12:
## Known stack suffix:
## LPAREN
## LR(1) items:
stringr -> LPAREN . stringr RPAREN [ SCOMMENTEND RPAREN COMMA ]
## Transitions:
-- On STRING shift to state 11
-- On LPAREN shift to state 12
-- On stringr shift to state 13
## Reductions:

State 13:
## Known stack suffix:
## LPAREN stringr
## LR(1) items:
stringr -> LPAREN stringr . RPAREN [ SCOMMENTEND RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## LPAREN stringr RPAREN
## LR(1) items:
stringr -> LPAREN stringr RPAREN . [ SCOMMENTEND RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stringr -> LPAREN stringr RPAREN

State 15:
## Known stack suffix:
## SCOMMENTSTART intr DOT intr stringr
## LR(1) items:
timecomment -> SCOMMENTSTART intr DOT intr stringr . SCOMMENTEND [ T_LH_EPSILON T_ABSTIME TRACE LPAREN LN1_HOST LN1_EPSILON LHSEND LHRETURN LHRECV LHLOOP LHCALL COMMENT ]
## Transitions:
-- On SCOMMENTEND shift to state 16
## Reductions:

State 16:
## Known stack suffix:
## SCOMMENTSTART intr DOT intr stringr SCOMMENTEND
## LR(1) items:
timecomment -> SCOMMENTSTART intr DOT intr stringr SCOMMENTEND . [ T_LH_EPSILON T_ABSTIME TRACE LPAREN LN1_HOST LN1_EPSILON LHSEND LHRETURN LHRECV LHLOOP LHCALL COMMENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production timecomment -> SCOMMENTSTART intr DOT intr stringr SCOMMENTEND

State 17:
## Known stack suffix:
## timecomment
## LR(1) items:
main -> timecomment . comment main_h [ # ]
## Transitions:
-- On COMMENT shift to state 18
-- On comment_h shift to state 19
-- On comment shift to state 21
## Reductions:
-- On T_LH_EPSILON reduce production comment ->
-- On T_ABSTIME reduce production comment ->
-- On TRACE reduce production comment ->
-- On LPAREN reduce production comment ->
-- On LHSEND reduce production comment ->
-- On LHRETURN reduce production comment ->
-- On LHRECV reduce production comment ->
-- On LHLOOP reduce production comment ->
-- On LHCALL reduce production comment ->

State 18:
## Known stack suffix:
## COMMENT
## LR(1) items:
comment_h -> COMMENT . [ T_LH_EPSILON T_ABSTIME TRACE SC RECEND LPAREN LN1_HOST LN1_EPSILON LHSEND LHRETURN LHRECV LHLOOP LHCALL COMMENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production comment_h -> COMMENT

State 19:
## Known stack suffix:
## comment_h
## LR(1) items:
comment -> comment_h . [ T_LH_EPSILON T_ABSTIME TRACE SC RECEND LPAREN LN1_HOST LN1_EPSILON LHSEND LHRETURN LHRECV LHLOOP LHCALL ]
comment_h -> comment_h . COMMENT [ T_LH_EPSILON T_ABSTIME TRACE SC RECEND LPAREN LN1_HOST LN1_EPSILON LHSEND LHRETURN LHRECV LHLOOP LHCALL COMMENT ]
## Transitions:
-- On COMMENT shift to state 20
## Reductions:
-- On T_LH_EPSILON reduce production comment -> comment_h
-- On T_ABSTIME reduce production comment -> comment_h
-- On TRACE reduce production comment -> comment_h
-- On SC reduce production comment -> comment_h
-- On RECEND reduce production comment -> comment_h
-- On LPAREN reduce production comment -> comment_h
-- On LN1_HOST reduce production comment -> comment_h
-- On LN1_EPSILON reduce production comment -> comment_h
-- On LHSEND reduce production comment -> comment_h
-- On LHRETURN reduce production comment -> comment_h
-- On LHRECV reduce production comment -> comment_h
-- On LHLOOP reduce production comment -> comment_h
-- On LHCALL reduce production comment -> comment_h

State 20:
## Known stack suffix:
## comment_h COMMENT
## LR(1) items:
comment_h -> comment_h COMMENT . [ T_LH_EPSILON T_ABSTIME TRACE SC RECEND LPAREN LN1_HOST LN1_EPSILON LHSEND LHRETURN LHRECV LHLOOP LHCALL COMMENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production comment_h -> comment_h COMMENT

State 21:
## Known stack suffix:
## timecomment comment
## LR(1) items:
main -> timecomment comment . main_h [ # ]
## Transitions:
-- On T_LH_EPSILON shift to state 22
-- On T_ABSTIME shift to state 28
-- On TRACE shift to state 31
-- On LPAREN shift to state 228
-- On LHSEND shift to state 231
-- On LHRETURN shift to state 437
-- On LHRECV shift to state 688
-- On LHLOOP shift to state 692
-- On LHCALL shift to state 696
-- On trace shift to state 955
-- On netcall shift to state 957
-- On main_h shift to state 959
-- On lib shift to state 960
-- On epsilon shift to state 962
-- On abstime shift to state 964
## Reductions:

State 22:
## Known stack suffix:
## T_LH_EPSILON
## LR(1) items:
epsilon -> T_LH_EPSILON . LPAREN T_DURATION intr intr RPAREN [ SC ]
## Transitions:
-- On LPAREN shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## T_LH_EPSILON LPAREN
## LR(1) items:
epsilon -> T_LH_EPSILON LPAREN . T_DURATION intr intr RPAREN [ SC ]
## Transitions:
-- On T_DURATION shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## T_LH_EPSILON LPAREN T_DURATION
## LR(1) items:
epsilon -> T_LH_EPSILON LPAREN T_DURATION . intr intr RPAREN [ SC ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 25
## Reductions:

State 25:
## Known stack suffix:
## T_LH_EPSILON LPAREN T_DURATION intr
## LR(1) items:
epsilon -> T_LH_EPSILON LPAREN T_DURATION intr . intr RPAREN [ SC ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 26
## Reductions:

State 26:
## Known stack suffix:
## T_LH_EPSILON LPAREN T_DURATION intr intr
## LR(1) items:
epsilon -> T_LH_EPSILON LPAREN T_DURATION intr intr . RPAREN [ SC ]
## Transitions:
-- On RPAREN shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## T_LH_EPSILON LPAREN T_DURATION intr intr RPAREN
## LR(1) items:
epsilon -> T_LH_EPSILON LPAREN T_DURATION intr intr RPAREN . [ SC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production epsilon -> T_LH_EPSILON LPAREN T_DURATION intr intr RPAREN

State 28:
## Known stack suffix:
## T_ABSTIME
## LR(1) items:
abstime -> T_ABSTIME . intr intr [ RPAREN COMMENT ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## T_ABSTIME intr
## LR(1) items:
abstime -> T_ABSTIME intr . intr [ RPAREN COMMENT ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 30
## Reductions:

State 30:
## Known stack suffix:
## T_ABSTIME intr intr
## LR(1) items:
abstime -> T_ABSTIME intr intr . [ RPAREN COMMENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production abstime -> T_ABSTIME intr intr

State 31:
## Known stack suffix:
## TRACE
## LR(1) items:
trace -> TRACE . LPAREN traceaction COMMA tracesid COMMA traceaddr COMMA tracest COMMA RECSTART tcpcbdetail RECEND RPAREN [ SC RPAREN ]
## Transitions:
-- On LPAREN shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## TRACE LPAREN
## LR(1) items:
trace -> TRACE LPAREN . traceaction COMMA tracesid COMMA traceaddr COMMA tracest COMMA RECSTART tcpcbdetail RECEND RPAREN [ SC RPAREN ]
## Transitions:
-- On T_TA_USER shift to state 33
-- On T_TA_RESPOND shift to state 34
-- On T_TA_OUTPUT shift to state 35
-- On T_TA_INPUT shift to state 36
-- On T_TA_DROP shift to state 37
-- On LPAREN shift to state 38
-- On traceaction shift to state 41
## Reductions:

State 33:
## Known stack suffix:
## T_TA_USER
## LR(1) items:
traceaction -> T_TA_USER . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production traceaction -> T_TA_USER

State 34:
## Known stack suffix:
## T_TA_RESPOND
## LR(1) items:
traceaction -> T_TA_RESPOND . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production traceaction -> T_TA_RESPOND

State 35:
## Known stack suffix:
## T_TA_OUTPUT
## LR(1) items:
traceaction -> T_TA_OUTPUT . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production traceaction -> T_TA_OUTPUT

State 36:
## Known stack suffix:
## T_TA_INPUT
## LR(1) items:
traceaction -> T_TA_INPUT . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production traceaction -> T_TA_INPUT

State 37:
## Known stack suffix:
## T_TA_DROP
## LR(1) items:
traceaction -> T_TA_DROP . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production traceaction -> T_TA_DROP

State 38:
## Known stack suffix:
## LPAREN
## LR(1) items:
traceaction -> LPAREN . traceaction RPAREN [ RPAREN COMMA ]
## Transitions:
-- On T_TA_USER shift to state 33
-- On T_TA_RESPOND shift to state 34
-- On T_TA_OUTPUT shift to state 35
-- On T_TA_INPUT shift to state 36
-- On T_TA_DROP shift to state 37
-- On LPAREN shift to state 38
-- On traceaction shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## LPAREN traceaction
## LR(1) items:
traceaction -> LPAREN traceaction . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 40
## Reductions:

State 40:
## Known stack suffix:
## LPAREN traceaction RPAREN
## LR(1) items:
traceaction -> LPAREN traceaction RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production traceaction -> LPAREN traceaction RPAREN

State 41:
## Known stack suffix:
## TRACE LPAREN traceaction
## LR(1) items:
trace -> TRACE LPAREN traceaction . COMMA tracesid COMMA traceaddr COMMA tracest COMMA RECSTART tcpcbdetail RECEND RPAREN [ SC RPAREN ]
## Transitions:
-- On COMMA shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## TRACE LPAREN traceaction COMMA
## LR(1) items:
trace -> TRACE LPAREN traceaction COMMA . tracesid COMMA traceaddr COMMA tracest COMMA RECSTART tcpcbdetail RECEND RPAREN [ SC RPAREN ]
## Transitions:
-- On SID shift to state 43
-- On LPAREN shift to state 45
-- On tracesid shift to state 48
## Reductions:

State 43:
## Known stack suffix:
## SID
## LR(1) items:
tracesid -> SID . INT [ RPAREN COMMA ]
## Transitions:
-- On INT shift to state 44
## Reductions:

State 44:
## Known stack suffix:
## SID INT
## LR(1) items:
tracesid -> SID INT . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tracesid -> SID INT

State 45:
## Known stack suffix:
## LPAREN
## LR(1) items:
tracesid -> LPAREN . tracesid RPAREN [ RPAREN COMMA ]
## Transitions:
-- On SID shift to state 43
-- On LPAREN shift to state 45
-- On tracesid shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## LPAREN tracesid
## LR(1) items:
tracesid -> LPAREN tracesid . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 47
## Reductions:

State 47:
## Known stack suffix:
## LPAREN tracesid RPAREN
## LR(1) items:
tracesid -> LPAREN tracesid RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tracesid -> LPAREN tracesid RPAREN

State 48:
## Known stack suffix:
## TRACE LPAREN traceaction COMMA tracesid
## LR(1) items:
trace -> TRACE LPAREN traceaction COMMA tracesid . COMMA traceaddr COMMA tracest COMMA RECSTART tcpcbdetail RECEND RPAREN [ SC RPAREN ]
## Transitions:
-- On COMMA shift to state 49
## Reductions:

State 49:
## Known stack suffix:
## TRACE LPAREN traceaction COMMA tracesid COMMA
## LR(1) items:
trace -> TRACE LPAREN traceaction COMMA tracesid COMMA . traceaddr COMMA tracest COMMA RECSTART tcpcbdetail RECEND RPAREN [ SC RPAREN ]
## Transitions:
-- On SOME shift to state 50
-- On NONE shift to state 92
-- On LPAREN shift to state 93
-- On traceaddr shift to state 96
## Reductions:

State 50:
## Known stack suffix:
## SOME
## LR(1) items:
traceaddr -> SOME . traceaddr_h [ RPAREN COMMA ]
## Transitions:
-- On SOME shift to state 51
-- On NONE shift to state 65
-- On LPAREN shift to state 66
-- On traceaddr_h shift to state 90
-- On ipoption shift to state 91
## Reductions:

State 51:
## Known stack suffix:
## SOME
## LR(1) items:
ipoption -> SOME . ip [ SC RPAREN RECEND COMMA ]
## Transitions:
-- On LPAREN shift to state 52
-- On IP shift to state 53
-- On ip shift to state 64
## Reductions:

State 52:
## Known stack suffix:
## LPAREN
## LR(1) items:
ip -> LPAREN . ip RPAREN [ SC RSQBRKT RPAREN RECEND COMMA ]
## Transitions:
-- On LPAREN shift to state 52
-- On IP shift to state 53
-- On ip shift to state 62
## Reductions:

State 53:
## Known stack suffix:
## IP
## LR(1) items:
ip -> IP . ipaddr [ SC RSQBRKT RPAREN RECEND COMMA ]
## Transitions:
-- On LPAREN shift to state 54
-- On INT shift to state 55
-- On ipaddr shift to state 61
## Reductions:

State 54:
## Known stack suffix:
## LPAREN
## LR(1) items:
ipaddr -> LPAREN . ipaddr RPAREN [ SC RSQBRKT RPAREN RECEND COMMA ]
## Transitions:
-- On LPAREN shift to state 54
-- On INT shift to state 55
-- On ipaddr shift to state 59
## Reductions:

State 55:
## Known stack suffix:
## INT
## LR(1) items:
ipaddr -> INT . INT INT INT [ SC RSQBRKT RPAREN RECEND COMMA ]
## Transitions:
-- On INT shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## INT INT
## LR(1) items:
ipaddr -> INT INT . INT INT [ SC RSQBRKT RPAREN RECEND COMMA ]
## Transitions:
-- On INT shift to state 57
## Reductions:

State 57:
## Known stack suffix:
## INT INT INT
## LR(1) items:
ipaddr -> INT INT INT . INT [ SC RSQBRKT RPAREN RECEND COMMA ]
## Transitions:
-- On INT shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## INT INT INT INT
## LR(1) items:
ipaddr -> INT INT INT INT . [ SC RSQBRKT RPAREN RECEND COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ipaddr -> INT INT INT INT

State 59:
## Known stack suffix:
## LPAREN ipaddr
## LR(1) items:
ipaddr -> LPAREN ipaddr . RPAREN [ SC RSQBRKT RPAREN RECEND COMMA ]
## Transitions:
-- On RPAREN shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## LPAREN ipaddr RPAREN
## LR(1) items:
ipaddr -> LPAREN ipaddr RPAREN . [ SC RSQBRKT RPAREN RECEND COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ipaddr -> LPAREN ipaddr RPAREN

State 61:
## Known stack suffix:
## IP ipaddr
## LR(1) items:
ip -> IP ipaddr . [ SC RSQBRKT RPAREN RECEND COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ip -> IP ipaddr

State 62:
## Known stack suffix:
## LPAREN ip
## LR(1) items:
ip -> LPAREN ip . RPAREN [ SC RSQBRKT RPAREN RECEND COMMA ]
## Transitions:
-- On RPAREN shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## LPAREN ip RPAREN
## LR(1) items:
ip -> LPAREN ip RPAREN . [ SC RSQBRKT RPAREN RECEND COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ip -> LPAREN ip RPAREN

State 64:
## Known stack suffix:
## SOME ip
## LR(1) items:
ipoption -> SOME ip . [ SC RPAREN RECEND COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ipoption -> SOME ip

State 65:
## Known stack suffix:
## NONE
## LR(1) items:
ipoption -> NONE . [ SC RPAREN RECEND COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ipoption -> NONE

State 66:
## Known stack suffix:
## LPAREN
## LR(1) items:
ipoption -> LPAREN . ipoption RPAREN [ RPAREN COMMA ]
traceaddr_h -> LPAREN . traceaddr_h RPAREN [ RPAREN COMMA ]
## Transitions:
-- On SOME shift to state 51
-- On NONE shift to state 65
-- On LPAREN shift to state 66
-- On traceaddr_h shift to state 67
-- On ipoption shift to state 69
## Reductions:

State 67:
## Known stack suffix:
## LPAREN traceaddr_h
## LR(1) items:
traceaddr_h -> LPAREN traceaddr_h . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 68
## Reductions:

State 68:
## Known stack suffix:
## LPAREN traceaddr_h RPAREN
## LR(1) items:
traceaddr_h -> LPAREN traceaddr_h RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production traceaddr_h -> LPAREN traceaddr_h RPAREN

State 69:
## Known stack suffix:
## LPAREN ipoption
## LR(1) items:
ipoption -> LPAREN ipoption . RPAREN [ RPAREN COMMA ]
traceaddr_h -> ipoption . COMMA portoption COMMA ipoption COMMA portoption [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 70
-- On COMMA shift to state 71
## Reductions:

State 70:
## Known stack suffix:
## LPAREN ipoption RPAREN
## LR(1) items:
ipoption -> LPAREN ipoption RPAREN . [ SC RPAREN RECEND COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ipoption -> LPAREN ipoption RPAREN

State 71:
## Known stack suffix:
## ipoption COMMA
## LR(1) items:
traceaddr_h -> ipoption COMMA . portoption COMMA ipoption COMMA portoption [ RPAREN COMMA ]
## Transitions:
-- On SOME shift to state 72
-- On NONE shift to state 79
-- On LPAREN shift to state 80
-- On portoption shift to state 83
## Reductions:

State 72:
## Known stack suffix:
## SOME
## LR(1) items:
portoption -> SOME . port [ SC RPAREN RECEND COMMA ]
## Transitions:
-- On PORT shift to state 73
-- On LPAREN shift to state 75
-- On port shift to state 78
## Reductions:

State 73:
## Known stack suffix:
## PORT
## LR(1) items:
port -> PORT . intr [ SC RPAREN RECEND COMMA ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 74
## Reductions:

State 74:
## Known stack suffix:
## PORT intr
## LR(1) items:
port -> PORT intr . [ SC RPAREN RECEND COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production port -> PORT intr

State 75:
## Known stack suffix:
## LPAREN
## LR(1) items:
port -> LPAREN . port RPAREN [ SC RPAREN RECEND COMMA ]
## Transitions:
-- On PORT shift to state 73
-- On LPAREN shift to state 75
-- On port shift to state 76
## Reductions:

State 76:
## Known stack suffix:
## LPAREN port
## LR(1) items:
port -> LPAREN port . RPAREN [ SC RPAREN RECEND COMMA ]
## Transitions:
-- On RPAREN shift to state 77
## Reductions:

State 77:
## Known stack suffix:
## LPAREN port RPAREN
## LR(1) items:
port -> LPAREN port RPAREN . [ SC RPAREN RECEND COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production port -> LPAREN port RPAREN

State 78:
## Known stack suffix:
## SOME port
## LR(1) items:
portoption -> SOME port . [ SC RPAREN RECEND COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production portoption -> SOME port

State 79:
## Known stack suffix:
## NONE
## LR(1) items:
portoption -> NONE . [ SC RPAREN RECEND COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production portoption -> NONE

State 80:
## Known stack suffix:
## LPAREN
## LR(1) items:
portoption -> LPAREN . portoption RPAREN [ SC RPAREN RECEND COMMA ]
## Transitions:
-- On SOME shift to state 72
-- On NONE shift to state 79
-- On LPAREN shift to state 80
-- On portoption shift to state 81
## Reductions:

State 81:
## Known stack suffix:
## LPAREN portoption
## LR(1) items:
portoption -> LPAREN portoption . RPAREN [ SC RPAREN RECEND COMMA ]
## Transitions:
-- On RPAREN shift to state 82
## Reductions:

State 82:
## Known stack suffix:
## LPAREN portoption RPAREN
## LR(1) items:
portoption -> LPAREN portoption RPAREN . [ SC RPAREN RECEND COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production portoption -> LPAREN portoption RPAREN

State 83:
## Known stack suffix:
## ipoption COMMA portoption
## LR(1) items:
traceaddr_h -> ipoption COMMA portoption . COMMA ipoption COMMA portoption [ RPAREN COMMA ]
## Transitions:
-- On COMMA shift to state 84
## Reductions:

State 84:
## Known stack suffix:
## ipoption COMMA portoption COMMA
## LR(1) items:
traceaddr_h -> ipoption COMMA portoption COMMA . ipoption COMMA portoption [ RPAREN COMMA ]
## Transitions:
-- On SOME shift to state 51
-- On NONE shift to state 65
-- On LPAREN shift to state 85
-- On ipoption shift to state 87
## Reductions:

State 85:
## Known stack suffix:
## LPAREN
## LR(1) items:
ipoption -> LPAREN . ipoption RPAREN [ SC RPAREN RECEND COMMA ]
## Transitions:
-- On SOME shift to state 51
-- On NONE shift to state 65
-- On LPAREN shift to state 85
-- On ipoption shift to state 86
## Reductions:

State 86:
## Known stack suffix:
## LPAREN ipoption
## LR(1) items:
ipoption -> LPAREN ipoption . RPAREN [ SC RPAREN RECEND COMMA ]
## Transitions:
-- On RPAREN shift to state 70
## Reductions:

State 87:
## Known stack suffix:
## ipoption COMMA portoption COMMA ipoption
## LR(1) items:
traceaddr_h -> ipoption COMMA portoption COMMA ipoption . COMMA portoption [ RPAREN COMMA ]
## Transitions:
-- On COMMA shift to state 88
## Reductions:

State 88:
## Known stack suffix:
## ipoption COMMA portoption COMMA ipoption COMMA
## LR(1) items:
traceaddr_h -> ipoption COMMA portoption COMMA ipoption COMMA . portoption [ RPAREN COMMA ]
## Transitions:
-- On SOME shift to state 72
-- On NONE shift to state 79
-- On LPAREN shift to state 80
-- On portoption shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## ipoption COMMA portoption COMMA ipoption COMMA portoption
## LR(1) items:
traceaddr_h -> ipoption COMMA portoption COMMA ipoption COMMA portoption . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production traceaddr_h -> ipoption COMMA portoption COMMA ipoption COMMA portoption

State 90:
## Known stack suffix:
## SOME traceaddr_h
## LR(1) items:
traceaddr -> SOME traceaddr_h . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production traceaddr -> SOME traceaddr_h

State 91:
## Known stack suffix:
## ipoption
## LR(1) items:
traceaddr_h -> ipoption . COMMA portoption COMMA ipoption COMMA portoption [ RPAREN COMMA ]
## Transitions:
-- On COMMA shift to state 71
## Reductions:

State 92:
## Known stack suffix:
## NONE
## LR(1) items:
traceaddr -> NONE . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production traceaddr -> NONE

State 93:
## Known stack suffix:
## LPAREN
## LR(1) items:
traceaddr -> LPAREN . traceaddr RPAREN [ RPAREN COMMA ]
## Transitions:
-- On SOME shift to state 50
-- On NONE shift to state 92
-- On LPAREN shift to state 93
-- On traceaddr shift to state 94
## Reductions:

State 94:
## Known stack suffix:
## LPAREN traceaddr
## LR(1) items:
traceaddr -> LPAREN traceaddr . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 95
## Reductions:

State 95:
## Known stack suffix:
## LPAREN traceaddr RPAREN
## LR(1) items:
traceaddr -> LPAREN traceaddr RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production traceaddr -> LPAREN traceaddr RPAREN

State 96:
## Known stack suffix:
## TRACE LPAREN traceaction COMMA tracesid COMMA traceaddr
## LR(1) items:
trace -> TRACE LPAREN traceaction COMMA tracesid COMMA traceaddr . COMMA tracest COMMA RECSTART tcpcbdetail RECEND RPAREN [ SC RPAREN ]
## Transitions:
-- On COMMA shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## TRACE LPAREN traceaction COMMA tracesid COMMA traceaddr COMMA
## LR(1) items:
trace -> TRACE LPAREN traceaction COMMA tracesid COMMA traceaddr COMMA . tracest COMMA RECSTART tcpcbdetail RECEND RPAREN [ SC RPAREN ]
## Transitions:
-- On T_TIME_WAIT shift to state 98
-- On T_SYN_SENT shift to state 99
-- On T_SYN_RECEIVED shift to state 100
-- On T_LISTEN shift to state 101
-- On T_LAST_ACK shift to state 102
-- On T_FIN_WAIT_2 shift to state 103
-- On T_FIN_WAIT_1 shift to state 104
-- On T_ESTABLISHED shift to state 105
-- On T_CLOSING shift to state 106
-- On T_CLOSE_WAIT shift to state 107
-- On T_CLOSED shift to state 108
-- On tracest shift to state 109
## Reductions:

State 98:
## Known stack suffix:
## T_TIME_WAIT
## LR(1) items:
tracest -> T_TIME_WAIT . [ COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tracest -> T_TIME_WAIT

State 99:
## Known stack suffix:
## T_SYN_SENT
## LR(1) items:
tracest -> T_SYN_SENT . [ COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tracest -> T_SYN_SENT

State 100:
## Known stack suffix:
## T_SYN_RECEIVED
## LR(1) items:
tracest -> T_SYN_RECEIVED . [ COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tracest -> T_SYN_RECEIVED

State 101:
## Known stack suffix:
## T_LISTEN
## LR(1) items:
tracest -> T_LISTEN . [ COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tracest -> T_LISTEN

State 102:
## Known stack suffix:
## T_LAST_ACK
## LR(1) items:
tracest -> T_LAST_ACK . [ COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tracest -> T_LAST_ACK

State 103:
## Known stack suffix:
## T_FIN_WAIT_2
## LR(1) items:
tracest -> T_FIN_WAIT_2 . [ COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tracest -> T_FIN_WAIT_2

State 104:
## Known stack suffix:
## T_FIN_WAIT_1
## LR(1) items:
tracest -> T_FIN_WAIT_1 . [ COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tracest -> T_FIN_WAIT_1

State 105:
## Known stack suffix:
## T_ESTABLISHED
## LR(1) items:
tracest -> T_ESTABLISHED . [ COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tracest -> T_ESTABLISHED

State 106:
## Known stack suffix:
## T_CLOSING
## LR(1) items:
tracest -> T_CLOSING . [ COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tracest -> T_CLOSING

State 107:
## Known stack suffix:
## T_CLOSE_WAIT
## LR(1) items:
tracest -> T_CLOSE_WAIT . [ COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tracest -> T_CLOSE_WAIT

State 108:
## Known stack suffix:
## T_CLOSED
## LR(1) items:
tracest -> T_CLOSED . [ COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tracest -> T_CLOSED

State 109:
## Known stack suffix:
## TRACE LPAREN traceaction COMMA tracesid COMMA traceaddr COMMA tracest
## LR(1) items:
trace -> TRACE LPAREN traceaction COMMA tracesid COMMA traceaddr COMMA tracest . COMMA RECSTART tcpcbdetail RECEND RPAREN [ SC RPAREN ]
## Transitions:
-- On COMMA shift to state 110
## Reductions:

State 110:
## Known stack suffix:
## TRACE LPAREN traceaction COMMA tracesid COMMA traceaddr COMMA tracest COMMA
## LR(1) items:
trace -> TRACE LPAREN traceaction COMMA tracesid COMMA traceaddr COMMA tracest COMMA . RECSTART tcpcbdetail RECEND RPAREN [ SC RPAREN ]
## Transitions:
-- On RECSTART shift to state 111
## Reductions:

State 111:
## Known stack suffix:
## TRACE LPAREN traceaction COMMA tracesid COMMA traceaddr COMMA tracest COMMA RECSTART
## LR(1) items:
trace -> TRACE LPAREN traceaction COMMA tracesid COMMA traceaddr COMMA tracest COMMA RECSTART . tcpcbdetail RECEND RPAREN [ SC RPAREN ]
## Transitions:
-- On T_T_RTTSEG shift to state 112
-- On T_T_MAXSEG shift to state 141
-- On T_T_DUPACKS shift to state 144
-- On T_TS_RECENT shift to state 147
-- On T_SND_WND shift to state 163
-- On T_SND_WL2 shift to state 166
-- On T_SND_WL1 shift to state 169
-- On T_SND_UNA shift to state 177
-- On T_SND_SSTHRESH shift to state 180
-- On T_SND_SCALE shift to state 183
-- On T_SND_RECOVER shift to state 186
-- On T_SND_NXT shift to state 189
-- On T_SND_MAX shift to state 192
-- On T_SND_CWND shift to state 195
-- On T_RCV_WND shift to state 198
-- On T_RCV_UP shift to state 201
-- On T_RCV_SCALE shift to state 204
-- On T_RCV_NXT shift to state 207
-- On T_RCV_ADV shift to state 210
-- On T_LAST_ACK_SENT shift to state 213
-- On T_ISS shift to state 216
-- On T_IRS shift to state 219
-- On tcpcbdetail shift to state 222
-- On tcpcb shift to state 225
## Reductions:

State 112:
## Known stack suffix:
## T_T_RTTSEG
## LR(1) items:
tcpcb -> T_T_RTTSEG . ASSIGN rttsegopt [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 113
## Reductions:

State 113:
## Known stack suffix:
## T_T_RTTSEG ASSIGN
## LR(1) items:
tcpcb -> T_T_RTTSEG ASSIGN . rttsegopt [ SC RECEND ]
## Transitions:
-- On SOME shift to state 114
-- On NONE shift to state 136
-- On LPAREN shift to state 137
-- On rttsegopt shift to state 140
## Reductions:

State 114:
## Known stack suffix:
## SOME
## LR(1) items:
rttsegopt -> SOME . rttseg [ SC RPAREN RECEND ]
## Transitions:
-- On TSSEQ shift to state 115
-- On LPAREN shift to state 122
-- On tsseq shift to state 134
-- On rttseg shift to state 135
## Reductions:

State 115:
## Known stack suffix:
## TSSEQ
## LR(1) items:
tsseq -> TSSEQ . word16 [ RPAREN COMMA ]
## Transitions:
-- On WORD16 shift to state 116
-- On LPAREN shift to state 118
-- On word16 shift to state 121
## Reductions:

State 116:
## Known stack suffix:
## WORD16
## LR(1) items:
word16 -> WORD16 . intr [ SC RPAREN RECEND COMMA ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 117
## Reductions:

State 117:
## Known stack suffix:
## WORD16 intr
## LR(1) items:
word16 -> WORD16 intr . [ SC RPAREN RECEND COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production word16 -> WORD16 intr

State 118:
## Known stack suffix:
## LPAREN
## LR(1) items:
word16 -> LPAREN . word16 RPAREN [ SC RPAREN RECEND COMMA ]
## Transitions:
-- On WORD16 shift to state 116
-- On LPAREN shift to state 118
-- On word16 shift to state 119
## Reductions:

State 119:
## Known stack suffix:
## LPAREN word16
## LR(1) items:
word16 -> LPAREN word16 . RPAREN [ SC RPAREN RECEND COMMA ]
## Transitions:
-- On RPAREN shift to state 120
## Reductions:

State 120:
## Known stack suffix:
## LPAREN word16 RPAREN
## LR(1) items:
word16 -> LPAREN word16 RPAREN . [ SC RPAREN RECEND COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production word16 -> LPAREN word16 RPAREN

State 121:
## Known stack suffix:
## TSSEQ word16
## LR(1) items:
tsseq -> TSSEQ word16 . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tsseq -> TSSEQ word16

State 122:
## Known stack suffix:
## LPAREN
## LR(1) items:
rttseg -> LPAREN . rttseg RPAREN [ SC RPAREN RECEND ]
tsseq -> LPAREN . tsseq RPAREN [ RPAREN COMMA ]
## Transitions:
-- On TSSEQ shift to state 115
-- On LPAREN shift to state 122
-- On tsseq shift to state 123
-- On rttseg shift to state 132
## Reductions:

State 123:
## Known stack suffix:
## LPAREN tsseq
## LR(1) items:
rttseg -> tsseq . COMMA seqlocal [ RPAREN ]
tsseq -> LPAREN tsseq . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 124
-- On COMMA shift to state 125
## Reductions:

State 124:
## Known stack suffix:
## LPAREN tsseq RPAREN
## LR(1) items:
tsseq -> LPAREN tsseq RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tsseq -> LPAREN tsseq RPAREN

State 125:
## Known stack suffix:
## tsseq COMMA
## LR(1) items:
rttseg -> tsseq COMMA . seqlocal [ SC RPAREN RECEND ]
## Transitions:
-- On SEQLOCAL shift to state 126
-- On LPAREN shift to state 128
-- On seqlocal shift to state 131
## Reductions:

State 126:
## Known stack suffix:
## SEQLOCAL
## LR(1) items:
seqlocal -> SEQLOCAL . word16 [ SC RPAREN RECEND ]
## Transitions:
-- On WORD16 shift to state 116
-- On LPAREN shift to state 118
-- On word16 shift to state 127
## Reductions:

State 127:
## Known stack suffix:
## SEQLOCAL word16
## LR(1) items:
seqlocal -> SEQLOCAL word16 . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production seqlocal -> SEQLOCAL word16

State 128:
## Known stack suffix:
## LPAREN
## LR(1) items:
seqlocal -> LPAREN . seqlocal RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On SEQLOCAL shift to state 126
-- On LPAREN shift to state 128
-- On seqlocal shift to state 129
## Reductions:

State 129:
## Known stack suffix:
## LPAREN seqlocal
## LR(1) items:
seqlocal -> LPAREN seqlocal . RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On RPAREN shift to state 130
## Reductions:

State 130:
## Known stack suffix:
## LPAREN seqlocal RPAREN
## LR(1) items:
seqlocal -> LPAREN seqlocal RPAREN . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production seqlocal -> LPAREN seqlocal RPAREN

State 131:
## Known stack suffix:
## tsseq COMMA seqlocal
## LR(1) items:
rttseg -> tsseq COMMA seqlocal . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rttseg -> tsseq COMMA seqlocal

State 132:
## Known stack suffix:
## LPAREN rttseg
## LR(1) items:
rttseg -> LPAREN rttseg . RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On RPAREN shift to state 133
## Reductions:

State 133:
## Known stack suffix:
## LPAREN rttseg RPAREN
## LR(1) items:
rttseg -> LPAREN rttseg RPAREN . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rttseg -> LPAREN rttseg RPAREN

State 134:
## Known stack suffix:
## tsseq
## LR(1) items:
rttseg -> tsseq . COMMA seqlocal [ SC RPAREN RECEND ]
## Transitions:
-- On COMMA shift to state 125
## Reductions:

State 135:
## Known stack suffix:
## SOME rttseg
## LR(1) items:
rttsegopt -> SOME rttseg . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rttsegopt -> SOME rttseg

State 136:
## Known stack suffix:
## NONE
## LR(1) items:
rttsegopt -> NONE . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rttsegopt -> NONE

State 137:
## Known stack suffix:
## LPAREN
## LR(1) items:
rttsegopt -> LPAREN . rttsegopt RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On SOME shift to state 114
-- On NONE shift to state 136
-- On LPAREN shift to state 137
-- On rttsegopt shift to state 138
## Reductions:

State 138:
## Known stack suffix:
## LPAREN rttsegopt
## LR(1) items:
rttsegopt -> LPAREN rttsegopt . RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On RPAREN shift to state 139
## Reductions:

State 139:
## Known stack suffix:
## LPAREN rttsegopt RPAREN
## LR(1) items:
rttsegopt -> LPAREN rttsegopt RPAREN . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rttsegopt -> LPAREN rttsegopt RPAREN

State 140:
## Known stack suffix:
## T_T_RTTSEG ASSIGN rttsegopt
## LR(1) items:
tcpcb -> T_T_RTTSEG ASSIGN rttsegopt . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_T_RTTSEG ASSIGN rttsegopt

State 141:
## Known stack suffix:
## T_T_MAXSEG
## LR(1) items:
tcpcb -> T_T_MAXSEG . ASSIGN intr [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 142
## Reductions:

State 142:
## Known stack suffix:
## T_T_MAXSEG ASSIGN
## LR(1) items:
tcpcb -> T_T_MAXSEG ASSIGN . intr [ SC RECEND ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 143
## Reductions:

State 143:
## Known stack suffix:
## T_T_MAXSEG ASSIGN intr
## LR(1) items:
tcpcb -> T_T_MAXSEG ASSIGN intr . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_T_MAXSEG ASSIGN intr

State 144:
## Known stack suffix:
## T_T_DUPACKS
## LR(1) items:
tcpcb -> T_T_DUPACKS . ASSIGN intr [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 145
## Reductions:

State 145:
## Known stack suffix:
## T_T_DUPACKS ASSIGN
## LR(1) items:
tcpcb -> T_T_DUPACKS ASSIGN . intr [ SC RECEND ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## T_T_DUPACKS ASSIGN intr
## LR(1) items:
tcpcb -> T_T_DUPACKS ASSIGN intr . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_T_DUPACKS ASSIGN intr

State 147:
## Known stack suffix:
## T_TS_RECENT
## LR(1) items:
tcpcb -> T_TS_RECENT . ASSIGN tsrecent [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 148
## Reductions:

State 148:
## Known stack suffix:
## T_TS_RECENT ASSIGN
## LR(1) items:
tcpcb -> T_TS_RECENT ASSIGN . tsrecent [ SC RECEND ]
## Transitions:
-- On TIMEWINDOWCLOSED shift to state 149
-- On TIMEWINDOW shift to state 150
-- On LPAREN shift to state 159
-- On tsrecent shift to state 162
## Reductions:

State 149:
## Known stack suffix:
## TIMEWINDOWCLOSED
## LR(1) items:
tsrecent -> TIMEWINDOWCLOSED . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tsrecent -> TIMEWINDOWCLOSED

State 150:
## Known stack suffix:
## TIMEWINDOW
## LR(1) items:
tsrecent -> TIMEWINDOW . timepair [ SC RPAREN RECEND ]
## Transitions:
-- On TSSEQ shift to state 151
-- On LPAREN shift to state 155
-- On timepair shift to state 158
## Reductions:

State 151:
## Known stack suffix:
## TSSEQ
## LR(1) items:
timepair -> TSSEQ . word16 COMMA NEVERTIMER [ SC RPAREN RECEND ]
## Transitions:
-- On WORD16 shift to state 116
-- On LPAREN shift to state 118
-- On word16 shift to state 152
## Reductions:

State 152:
## Known stack suffix:
## TSSEQ word16
## LR(1) items:
timepair -> TSSEQ word16 . COMMA NEVERTIMER [ SC RPAREN RECEND ]
## Transitions:
-- On COMMA shift to state 153
## Reductions:

State 153:
## Known stack suffix:
## TSSEQ word16 COMMA
## LR(1) items:
timepair -> TSSEQ word16 COMMA . NEVERTIMER [ SC RPAREN RECEND ]
## Transitions:
-- On NEVERTIMER shift to state 154
## Reductions:

State 154:
## Known stack suffix:
## TSSEQ word16 COMMA NEVERTIMER
## LR(1) items:
timepair -> TSSEQ word16 COMMA NEVERTIMER . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production timepair -> TSSEQ word16 COMMA NEVERTIMER

State 155:
## Known stack suffix:
## LPAREN
## LR(1) items:
timepair -> LPAREN . timepair RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On TSSEQ shift to state 151
-- On LPAREN shift to state 155
-- On timepair shift to state 156
## Reductions:

State 156:
## Known stack suffix:
## LPAREN timepair
## LR(1) items:
timepair -> LPAREN timepair . RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On RPAREN shift to state 157
## Reductions:

State 157:
## Known stack suffix:
## LPAREN timepair RPAREN
## LR(1) items:
timepair -> LPAREN timepair RPAREN . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production timepair -> LPAREN timepair RPAREN

State 158:
## Known stack suffix:
## TIMEWINDOW timepair
## LR(1) items:
tsrecent -> TIMEWINDOW timepair . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tsrecent -> TIMEWINDOW timepair

State 159:
## Known stack suffix:
## LPAREN
## LR(1) items:
tsrecent -> LPAREN . tsrecent RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On TIMEWINDOWCLOSED shift to state 149
-- On TIMEWINDOW shift to state 150
-- On LPAREN shift to state 159
-- On tsrecent shift to state 160
## Reductions:

State 160:
## Known stack suffix:
## LPAREN tsrecent
## LR(1) items:
tsrecent -> LPAREN tsrecent . RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On RPAREN shift to state 161
## Reductions:

State 161:
## Known stack suffix:
## LPAREN tsrecent RPAREN
## LR(1) items:
tsrecent -> LPAREN tsrecent RPAREN . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tsrecent -> LPAREN tsrecent RPAREN

State 162:
## Known stack suffix:
## T_TS_RECENT ASSIGN tsrecent
## LR(1) items:
tcpcb -> T_TS_RECENT ASSIGN tsrecent . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_TS_RECENT ASSIGN tsrecent

State 163:
## Known stack suffix:
## T_SND_WND
## LR(1) items:
tcpcb -> T_SND_WND . ASSIGN intr [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 164
## Reductions:

State 164:
## Known stack suffix:
## T_SND_WND ASSIGN
## LR(1) items:
tcpcb -> T_SND_WND ASSIGN . intr [ SC RECEND ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## T_SND_WND ASSIGN intr
## LR(1) items:
tcpcb -> T_SND_WND ASSIGN intr . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_SND_WND ASSIGN intr

State 166:
## Known stack suffix:
## T_SND_WL2
## LR(1) items:
tcpcb -> T_SND_WL2 . ASSIGN seqlocal [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 167
## Reductions:

State 167:
## Known stack suffix:
## T_SND_WL2 ASSIGN
## LR(1) items:
tcpcb -> T_SND_WL2 ASSIGN . seqlocal [ SC RECEND ]
## Transitions:
-- On SEQLOCAL shift to state 126
-- On LPAREN shift to state 128
-- On seqlocal shift to state 168
## Reductions:

State 168:
## Known stack suffix:
## T_SND_WL2 ASSIGN seqlocal
## LR(1) items:
tcpcb -> T_SND_WL2 ASSIGN seqlocal . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_SND_WL2 ASSIGN seqlocal

State 169:
## Known stack suffix:
## T_SND_WL1
## LR(1) items:
tcpcb -> T_SND_WL1 . ASSIGN seqforeign [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 170
## Reductions:

State 170:
## Known stack suffix:
## T_SND_WL1 ASSIGN
## LR(1) items:
tcpcb -> T_SND_WL1 ASSIGN . seqforeign [ SC RECEND ]
## Transitions:
-- On SEQFOREIGN shift to state 171
-- On LPAREN shift to state 173
-- On seqforeign shift to state 176
## Reductions:

State 171:
## Known stack suffix:
## SEQFOREIGN
## LR(1) items:
seqforeign -> SEQFOREIGN . word16 [ SC RPAREN RECEND ]
## Transitions:
-- On WORD16 shift to state 116
-- On LPAREN shift to state 118
-- On word16 shift to state 172
## Reductions:

State 172:
## Known stack suffix:
## SEQFOREIGN word16
## LR(1) items:
seqforeign -> SEQFOREIGN word16 . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production seqforeign -> SEQFOREIGN word16

State 173:
## Known stack suffix:
## LPAREN
## LR(1) items:
seqforeign -> LPAREN . seqforeign RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On SEQFOREIGN shift to state 171
-- On LPAREN shift to state 173
-- On seqforeign shift to state 174
## Reductions:

State 174:
## Known stack suffix:
## LPAREN seqforeign
## LR(1) items:
seqforeign -> LPAREN seqforeign . RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On RPAREN shift to state 175
## Reductions:

State 175:
## Known stack suffix:
## LPAREN seqforeign RPAREN
## LR(1) items:
seqforeign -> LPAREN seqforeign RPAREN . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production seqforeign -> LPAREN seqforeign RPAREN

State 176:
## Known stack suffix:
## T_SND_WL1 ASSIGN seqforeign
## LR(1) items:
tcpcb -> T_SND_WL1 ASSIGN seqforeign . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_SND_WL1 ASSIGN seqforeign

State 177:
## Known stack suffix:
## T_SND_UNA
## LR(1) items:
tcpcb -> T_SND_UNA . ASSIGN seqlocal [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 178
## Reductions:

State 178:
## Known stack suffix:
## T_SND_UNA ASSIGN
## LR(1) items:
tcpcb -> T_SND_UNA ASSIGN . seqlocal [ SC RECEND ]
## Transitions:
-- On SEQLOCAL shift to state 126
-- On LPAREN shift to state 128
-- On seqlocal shift to state 179
## Reductions:

State 179:
## Known stack suffix:
## T_SND_UNA ASSIGN seqlocal
## LR(1) items:
tcpcb -> T_SND_UNA ASSIGN seqlocal . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_SND_UNA ASSIGN seqlocal

State 180:
## Known stack suffix:
## T_SND_SSTHRESH
## LR(1) items:
tcpcb -> T_SND_SSTHRESH . ASSIGN intr [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 181
## Reductions:

State 181:
## Known stack suffix:
## T_SND_SSTHRESH ASSIGN
## LR(1) items:
tcpcb -> T_SND_SSTHRESH ASSIGN . intr [ SC RECEND ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 182
## Reductions:

State 182:
## Known stack suffix:
## T_SND_SSTHRESH ASSIGN intr
## LR(1) items:
tcpcb -> T_SND_SSTHRESH ASSIGN intr . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_SND_SSTHRESH ASSIGN intr

State 183:
## Known stack suffix:
## T_SND_SCALE
## LR(1) items:
tcpcb -> T_SND_SCALE . ASSIGN intr [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 184
## Reductions:

State 184:
## Known stack suffix:
## T_SND_SCALE ASSIGN
## LR(1) items:
tcpcb -> T_SND_SCALE ASSIGN . intr [ SC RECEND ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 185
## Reductions:

State 185:
## Known stack suffix:
## T_SND_SCALE ASSIGN intr
## LR(1) items:
tcpcb -> T_SND_SCALE ASSIGN intr . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_SND_SCALE ASSIGN intr

State 186:
## Known stack suffix:
## T_SND_RECOVER
## LR(1) items:
tcpcb -> T_SND_RECOVER . ASSIGN seqlocal [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 187
## Reductions:

State 187:
## Known stack suffix:
## T_SND_RECOVER ASSIGN
## LR(1) items:
tcpcb -> T_SND_RECOVER ASSIGN . seqlocal [ SC RECEND ]
## Transitions:
-- On SEQLOCAL shift to state 126
-- On LPAREN shift to state 128
-- On seqlocal shift to state 188
## Reductions:

State 188:
## Known stack suffix:
## T_SND_RECOVER ASSIGN seqlocal
## LR(1) items:
tcpcb -> T_SND_RECOVER ASSIGN seqlocal . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_SND_RECOVER ASSIGN seqlocal

State 189:
## Known stack suffix:
## T_SND_NXT
## LR(1) items:
tcpcb -> T_SND_NXT . ASSIGN seqlocal [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 190
## Reductions:

State 190:
## Known stack suffix:
## T_SND_NXT ASSIGN
## LR(1) items:
tcpcb -> T_SND_NXT ASSIGN . seqlocal [ SC RECEND ]
## Transitions:
-- On SEQLOCAL shift to state 126
-- On LPAREN shift to state 128
-- On seqlocal shift to state 191
## Reductions:

State 191:
## Known stack suffix:
## T_SND_NXT ASSIGN seqlocal
## LR(1) items:
tcpcb -> T_SND_NXT ASSIGN seqlocal . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_SND_NXT ASSIGN seqlocal

State 192:
## Known stack suffix:
## T_SND_MAX
## LR(1) items:
tcpcb -> T_SND_MAX . ASSIGN seqlocal [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 193
## Reductions:

State 193:
## Known stack suffix:
## T_SND_MAX ASSIGN
## LR(1) items:
tcpcb -> T_SND_MAX ASSIGN . seqlocal [ SC RECEND ]
## Transitions:
-- On SEQLOCAL shift to state 126
-- On LPAREN shift to state 128
-- On seqlocal shift to state 194
## Reductions:

State 194:
## Known stack suffix:
## T_SND_MAX ASSIGN seqlocal
## LR(1) items:
tcpcb -> T_SND_MAX ASSIGN seqlocal . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_SND_MAX ASSIGN seqlocal

State 195:
## Known stack suffix:
## T_SND_CWND
## LR(1) items:
tcpcb -> T_SND_CWND . ASSIGN intr [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 196
## Reductions:

State 196:
## Known stack suffix:
## T_SND_CWND ASSIGN
## LR(1) items:
tcpcb -> T_SND_CWND ASSIGN . intr [ SC RECEND ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 197
## Reductions:

State 197:
## Known stack suffix:
## T_SND_CWND ASSIGN intr
## LR(1) items:
tcpcb -> T_SND_CWND ASSIGN intr . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_SND_CWND ASSIGN intr

State 198:
## Known stack suffix:
## T_RCV_WND
## LR(1) items:
tcpcb -> T_RCV_WND . ASSIGN intr [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 199
## Reductions:

State 199:
## Known stack suffix:
## T_RCV_WND ASSIGN
## LR(1) items:
tcpcb -> T_RCV_WND ASSIGN . intr [ SC RECEND ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 200
## Reductions:

State 200:
## Known stack suffix:
## T_RCV_WND ASSIGN intr
## LR(1) items:
tcpcb -> T_RCV_WND ASSIGN intr . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_RCV_WND ASSIGN intr

State 201:
## Known stack suffix:
## T_RCV_UP
## LR(1) items:
tcpcb -> T_RCV_UP . ASSIGN seqforeign [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 202
## Reductions:

State 202:
## Known stack suffix:
## T_RCV_UP ASSIGN
## LR(1) items:
tcpcb -> T_RCV_UP ASSIGN . seqforeign [ SC RECEND ]
## Transitions:
-- On SEQFOREIGN shift to state 171
-- On LPAREN shift to state 173
-- On seqforeign shift to state 203
## Reductions:

State 203:
## Known stack suffix:
## T_RCV_UP ASSIGN seqforeign
## LR(1) items:
tcpcb -> T_RCV_UP ASSIGN seqforeign . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_RCV_UP ASSIGN seqforeign

State 204:
## Known stack suffix:
## T_RCV_SCALE
## LR(1) items:
tcpcb -> T_RCV_SCALE . ASSIGN intr [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 205
## Reductions:

State 205:
## Known stack suffix:
## T_RCV_SCALE ASSIGN
## LR(1) items:
tcpcb -> T_RCV_SCALE ASSIGN . intr [ SC RECEND ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 206
## Reductions:

State 206:
## Known stack suffix:
## T_RCV_SCALE ASSIGN intr
## LR(1) items:
tcpcb -> T_RCV_SCALE ASSIGN intr . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_RCV_SCALE ASSIGN intr

State 207:
## Known stack suffix:
## T_RCV_NXT
## LR(1) items:
tcpcb -> T_RCV_NXT . ASSIGN seqforeign [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 208
## Reductions:

State 208:
## Known stack suffix:
## T_RCV_NXT ASSIGN
## LR(1) items:
tcpcb -> T_RCV_NXT ASSIGN . seqforeign [ SC RECEND ]
## Transitions:
-- On SEQFOREIGN shift to state 171
-- On LPAREN shift to state 173
-- On seqforeign shift to state 209
## Reductions:

State 209:
## Known stack suffix:
## T_RCV_NXT ASSIGN seqforeign
## LR(1) items:
tcpcb -> T_RCV_NXT ASSIGN seqforeign . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_RCV_NXT ASSIGN seqforeign

State 210:
## Known stack suffix:
## T_RCV_ADV
## LR(1) items:
tcpcb -> T_RCV_ADV . ASSIGN seqforeign [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 211
## Reductions:

State 211:
## Known stack suffix:
## T_RCV_ADV ASSIGN
## LR(1) items:
tcpcb -> T_RCV_ADV ASSIGN . seqforeign [ SC RECEND ]
## Transitions:
-- On SEQFOREIGN shift to state 171
-- On LPAREN shift to state 173
-- On seqforeign shift to state 212
## Reductions:

State 212:
## Known stack suffix:
## T_RCV_ADV ASSIGN seqforeign
## LR(1) items:
tcpcb -> T_RCV_ADV ASSIGN seqforeign . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_RCV_ADV ASSIGN seqforeign

State 213:
## Known stack suffix:
## T_LAST_ACK_SENT
## LR(1) items:
tcpcb -> T_LAST_ACK_SENT . ASSIGN seqforeign [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 214
## Reductions:

State 214:
## Known stack suffix:
## T_LAST_ACK_SENT ASSIGN
## LR(1) items:
tcpcb -> T_LAST_ACK_SENT ASSIGN . seqforeign [ SC RECEND ]
## Transitions:
-- On SEQFOREIGN shift to state 171
-- On LPAREN shift to state 173
-- On seqforeign shift to state 215
## Reductions:

State 215:
## Known stack suffix:
## T_LAST_ACK_SENT ASSIGN seqforeign
## LR(1) items:
tcpcb -> T_LAST_ACK_SENT ASSIGN seqforeign . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_LAST_ACK_SENT ASSIGN seqforeign

State 216:
## Known stack suffix:
## T_ISS
## LR(1) items:
tcpcb -> T_ISS . ASSIGN seqlocal [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 217
## Reductions:

State 217:
## Known stack suffix:
## T_ISS ASSIGN
## LR(1) items:
tcpcb -> T_ISS ASSIGN . seqlocal [ SC RECEND ]
## Transitions:
-- On SEQLOCAL shift to state 126
-- On LPAREN shift to state 128
-- On seqlocal shift to state 218
## Reductions:

State 218:
## Known stack suffix:
## T_ISS ASSIGN seqlocal
## LR(1) items:
tcpcb -> T_ISS ASSIGN seqlocal . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_ISS ASSIGN seqlocal

State 219:
## Known stack suffix:
## T_IRS
## LR(1) items:
tcpcb -> T_IRS . ASSIGN seqforeign [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 220
## Reductions:

State 220:
## Known stack suffix:
## T_IRS ASSIGN
## LR(1) items:
tcpcb -> T_IRS ASSIGN . seqforeign [ SC RECEND ]
## Transitions:
-- On SEQFOREIGN shift to state 171
-- On LPAREN shift to state 173
-- On seqforeign shift to state 221
## Reductions:

State 221:
## Known stack suffix:
## T_IRS ASSIGN seqforeign
## LR(1) items:
tcpcb -> T_IRS ASSIGN seqforeign . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcb -> T_IRS ASSIGN seqforeign

State 222:
## Known stack suffix:
## TRACE LPAREN traceaction COMMA tracesid COMMA traceaddr COMMA tracest COMMA RECSTART tcpcbdetail
## LR(1) items:
trace -> TRACE LPAREN traceaction COMMA tracesid COMMA traceaddr COMMA tracest COMMA RECSTART tcpcbdetail . RECEND RPAREN [ SC RPAREN ]
## Transitions:
-- On RECEND shift to state 223
## Reductions:

State 223:
## Known stack suffix:
## TRACE LPAREN traceaction COMMA tracesid COMMA traceaddr COMMA tracest COMMA RECSTART tcpcbdetail RECEND
## LR(1) items:
trace -> TRACE LPAREN traceaction COMMA tracesid COMMA traceaddr COMMA tracest COMMA RECSTART tcpcbdetail RECEND . RPAREN [ SC RPAREN ]
## Transitions:
-- On RPAREN shift to state 224
## Reductions:

State 224:
## Known stack suffix:
## TRACE LPAREN traceaction COMMA tracesid COMMA traceaddr COMMA tracest COMMA RECSTART tcpcbdetail RECEND RPAREN
## LR(1) items:
trace -> TRACE LPAREN traceaction COMMA tracesid COMMA traceaddr COMMA tracest COMMA RECSTART tcpcbdetail RECEND RPAREN . [ SC RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production trace -> TRACE LPAREN traceaction COMMA tracesid COMMA traceaddr COMMA tracest COMMA RECSTART tcpcbdetail RECEND RPAREN

State 225:
## Known stack suffix:
## tcpcb
## LR(1) items:
tcpcbdetail -> tcpcb . [ RECEND ]
tcpcbdetail -> tcpcb . SC tcpcbdetail [ RECEND ]
## Transitions:
-- On SC shift to state 226
## Reductions:
-- On RECEND reduce production tcpcbdetail -> tcpcb

State 226:
## Known stack suffix:
## tcpcb SC
## LR(1) items:
tcpcbdetail -> tcpcb SC . tcpcbdetail [ RECEND ]
## Transitions:
-- On T_T_RTTSEG shift to state 112
-- On T_T_MAXSEG shift to state 141
-- On T_T_DUPACKS shift to state 144
-- On T_TS_RECENT shift to state 147
-- On T_SND_WND shift to state 163
-- On T_SND_WL2 shift to state 166
-- On T_SND_WL1 shift to state 169
-- On T_SND_UNA shift to state 177
-- On T_SND_SSTHRESH shift to state 180
-- On T_SND_SCALE shift to state 183
-- On T_SND_RECOVER shift to state 186
-- On T_SND_NXT shift to state 189
-- On T_SND_MAX shift to state 192
-- On T_SND_CWND shift to state 195
-- On T_RCV_WND shift to state 198
-- On T_RCV_UP shift to state 201
-- On T_RCV_SCALE shift to state 204
-- On T_RCV_NXT shift to state 207
-- On T_RCV_ADV shift to state 210
-- On T_LAST_ACK_SENT shift to state 213
-- On T_ISS shift to state 216
-- On T_IRS shift to state 219
-- On tcpcbdetail shift to state 227
-- On tcpcb shift to state 225
## Reductions:

State 227:
## Known stack suffix:
## tcpcb SC tcpcbdetail
## LR(1) items:
tcpcbdetail -> tcpcb SC tcpcbdetail . [ RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpcbdetail -> tcpcb SC tcpcbdetail

State 228:
## Known stack suffix:
## LPAREN
## LR(1) items:
abstime -> LPAREN . abstime RPAREN [ RPAREN COMMENT ]
## Transitions:
-- On T_ABSTIME shift to state 28
-- On LPAREN shift to state 228
-- On abstime shift to state 229
## Reductions:

State 229:
## Known stack suffix:
## LPAREN abstime
## LR(1) items:
abstime -> LPAREN abstime . RPAREN [ RPAREN COMMENT ]
## Transitions:
-- On RPAREN shift to state 230
## Reductions:

State 230:
## Known stack suffix:
## LPAREN abstime RPAREN
## LR(1) items:
abstime -> LPAREN abstime RPAREN . [ RPAREN COMMENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production abstime -> LPAREN abstime RPAREN

State 231:
## Known stack suffix:
## LHSEND
## LR(1) items:
netcall -> LHSEND . LPAREN netparam RPAREN [ SC RPAREN ]
## Transitions:
-- On LPAREN shift to state 232
## Reductions:

State 232:
## Known stack suffix:
## LHSEND LPAREN
## LR(1) items:
netcall -> LHSEND LPAREN . netparam RPAREN [ SC RPAREN ]
## Transitions:
-- On UDP shift to state 233
-- On TCP shift to state 269
-- On ICMP shift to state 367
-- On netparam shift to state 435
## Reductions:

State 233:
## Known stack suffix:
## UDP
## LR(1) items:
netparam -> UDP . LPAREN RECSTART udpdetail RECEND RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 234
## Reductions:

State 234:
## Known stack suffix:
## UDP LPAREN
## LR(1) items:
netparam -> UDP LPAREN . RECSTART udpdetail RECEND RPAREN [ RPAREN ]
## Transitions:
-- On RECSTART shift to state 235
## Reductions:

State 235:
## Known stack suffix:
## UDP LPAREN RECSTART
## LR(1) items:
netparam -> UDP LPAREN RECSTART . udpdetail RECEND RPAREN [ RPAREN ]
## Transitions:
-- On PS2 shift to state 236
-- On PS1 shift to state 239
-- On IS2 shift to state 242
-- On IS1 shift to state 245
-- On DATA shift to state 248
-- On udpval shift to state 263
-- On udpdetail shift to state 266
## Reductions:

State 236:
## Known stack suffix:
## PS2
## LR(1) items:
udpval -> PS2 . ASSIGN portoption [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 237
## Reductions:

State 237:
## Known stack suffix:
## PS2 ASSIGN
## LR(1) items:
udpval -> PS2 ASSIGN . portoption [ SC RECEND ]
## Transitions:
-- On SOME shift to state 72
-- On NONE shift to state 79
-- On LPAREN shift to state 80
-- On portoption shift to state 238
## Reductions:

State 238:
## Known stack suffix:
## PS2 ASSIGN portoption
## LR(1) items:
udpval -> PS2 ASSIGN portoption . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production udpval -> PS2 ASSIGN portoption

State 239:
## Known stack suffix:
## PS1
## LR(1) items:
udpval -> PS1 . ASSIGN portoption [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 240
## Reductions:

State 240:
## Known stack suffix:
## PS1 ASSIGN
## LR(1) items:
udpval -> PS1 ASSIGN . portoption [ SC RECEND ]
## Transitions:
-- On SOME shift to state 72
-- On NONE shift to state 79
-- On LPAREN shift to state 80
-- On portoption shift to state 241
## Reductions:

State 241:
## Known stack suffix:
## PS1 ASSIGN portoption
## LR(1) items:
udpval -> PS1 ASSIGN portoption . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production udpval -> PS1 ASSIGN portoption

State 242:
## Known stack suffix:
## IS2
## LR(1) items:
udpval -> IS2 . ASSIGN ipoption [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 243
## Reductions:

State 243:
## Known stack suffix:
## IS2 ASSIGN
## LR(1) items:
udpval -> IS2 ASSIGN . ipoption [ SC RECEND ]
## Transitions:
-- On SOME shift to state 51
-- On NONE shift to state 65
-- On LPAREN shift to state 85
-- On ipoption shift to state 244
## Reductions:

State 244:
## Known stack suffix:
## IS2 ASSIGN ipoption
## LR(1) items:
udpval -> IS2 ASSIGN ipoption . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production udpval -> IS2 ASSIGN ipoption

State 245:
## Known stack suffix:
## IS1
## LR(1) items:
udpval -> IS1 . ASSIGN ipoption [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 246
## Reductions:

State 246:
## Known stack suffix:
## IS1 ASSIGN
## LR(1) items:
udpval -> IS1 ASSIGN . ipoption [ SC RECEND ]
## Transitions:
-- On SOME shift to state 51
-- On NONE shift to state 65
-- On LPAREN shift to state 85
-- On ipoption shift to state 247
## Reductions:

State 247:
## Known stack suffix:
## IS1 ASSIGN ipoption
## LR(1) items:
udpval -> IS1 ASSIGN ipoption . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production udpval -> IS1 ASSIGN ipoption

State 248:
## Known stack suffix:
## DATA
## LR(1) items:
udpval -> DATA . ASSIGN datalist comment [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 249
## Reductions:

State 249:
## Known stack suffix:
## DATA ASSIGN
## LR(1) items:
udpval -> DATA ASSIGN . datalist comment [ SC RECEND ]
## Transitions:
-- On LSQBRKT shift to state 250
-- On LPAREN shift to state 258
-- On datalist shift to state 261
## Reductions:

State 250:
## Known stack suffix:
## LSQBRKT
## LR(1) items:
datalist -> LSQBRKT . RSQBRKT [ SC RPAREN RECEND COMMENT ]
datalist -> LSQBRKT . datalist2 RSQBRKT [ SC RPAREN RECEND COMMENT ]
## Transitions:
-- On RSQBRKT shift to state 251
-- On BYTE shift to state 252
-- On datalist2 shift to state 256
## Reductions:

State 251:
## Known stack suffix:
## LSQBRKT RSQBRKT
## LR(1) items:
datalist -> LSQBRKT RSQBRKT . [ SC RPAREN RECEND COMMENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production datalist -> LSQBRKT RSQBRKT

State 252:
## Known stack suffix:
## BYTE
## LR(1) items:
datalist2 -> BYTE . intr [ RSQBRKT ]
datalist2 -> BYTE . intr SC datalist2 [ RSQBRKT ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 253
## Reductions:

State 253:
## Known stack suffix:
## BYTE intr
## LR(1) items:
datalist2 -> BYTE intr . [ RSQBRKT ]
datalist2 -> BYTE intr . SC datalist2 [ RSQBRKT ]
## Transitions:
-- On SC shift to state 254
## Reductions:
-- On RSQBRKT reduce production datalist2 -> BYTE intr

State 254:
## Known stack suffix:
## BYTE intr SC
## LR(1) items:
datalist2 -> BYTE intr SC . datalist2 [ RSQBRKT ]
## Transitions:
-- On BYTE shift to state 252
-- On datalist2 shift to state 255
## Reductions:

State 255:
## Known stack suffix:
## BYTE intr SC datalist2
## LR(1) items:
datalist2 -> BYTE intr SC datalist2 . [ RSQBRKT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production datalist2 -> BYTE intr SC datalist2

State 256:
## Known stack suffix:
## LSQBRKT datalist2
## LR(1) items:
datalist -> LSQBRKT datalist2 . RSQBRKT [ SC RPAREN RECEND COMMENT ]
## Transitions:
-- On RSQBRKT shift to state 257
## Reductions:

State 257:
## Known stack suffix:
## LSQBRKT datalist2 RSQBRKT
## LR(1) items:
datalist -> LSQBRKT datalist2 RSQBRKT . [ SC RPAREN RECEND COMMENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production datalist -> LSQBRKT datalist2 RSQBRKT

State 258:
## Known stack suffix:
## LPAREN
## LR(1) items:
datalist -> LPAREN . datalist RPAREN [ SC RPAREN RECEND COMMENT ]
## Transitions:
-- On LSQBRKT shift to state 250
-- On LPAREN shift to state 258
-- On datalist shift to state 259
## Reductions:

State 259:
## Known stack suffix:
## LPAREN datalist
## LR(1) items:
datalist -> LPAREN datalist . RPAREN [ SC RPAREN RECEND COMMENT ]
## Transitions:
-- On RPAREN shift to state 260
## Reductions:

State 260:
## Known stack suffix:
## LPAREN datalist RPAREN
## LR(1) items:
datalist -> LPAREN datalist RPAREN . [ SC RPAREN RECEND COMMENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production datalist -> LPAREN datalist RPAREN

State 261:
## Known stack suffix:
## DATA ASSIGN datalist
## LR(1) items:
udpval -> DATA ASSIGN datalist . comment [ SC RECEND ]
## Transitions:
-- On COMMENT shift to state 18
-- On comment_h shift to state 19
-- On comment shift to state 262
## Reductions:
-- On SC reduce production comment ->
-- On RECEND reduce production comment ->

State 262:
## Known stack suffix:
## DATA ASSIGN datalist comment
## LR(1) items:
udpval -> DATA ASSIGN datalist comment . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production udpval -> DATA ASSIGN datalist comment

State 263:
## Known stack suffix:
## udpval
## LR(1) items:
udpdetail -> udpval . [ RECEND ]
udpdetail -> udpval . SC udpdetail [ RECEND ]
## Transitions:
-- On SC shift to state 264
## Reductions:
-- On RECEND reduce production udpdetail -> udpval

State 264:
## Known stack suffix:
## udpval SC
## LR(1) items:
udpdetail -> udpval SC . udpdetail [ RECEND ]
## Transitions:
-- On PS2 shift to state 236
-- On PS1 shift to state 239
-- On IS2 shift to state 242
-- On IS1 shift to state 245
-- On DATA shift to state 248
-- On udpval shift to state 263
-- On udpdetail shift to state 265
## Reductions:

State 265:
## Known stack suffix:
## udpval SC udpdetail
## LR(1) items:
udpdetail -> udpval SC udpdetail . [ RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production udpdetail -> udpval SC udpdetail

State 266:
## Known stack suffix:
## UDP LPAREN RECSTART udpdetail
## LR(1) items:
netparam -> UDP LPAREN RECSTART udpdetail . RECEND RPAREN [ RPAREN ]
## Transitions:
-- On RECEND shift to state 267
## Reductions:

State 267:
## Known stack suffix:
## UDP LPAREN RECSTART udpdetail RECEND
## LR(1) items:
netparam -> UDP LPAREN RECSTART udpdetail RECEND . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 268
## Reductions:

State 268:
## Known stack suffix:
## UDP LPAREN RECSTART udpdetail RECEND RPAREN
## LR(1) items:
netparam -> UDP LPAREN RECSTART udpdetail RECEND RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production netparam -> UDP LPAREN RECSTART udpdetail RECEND RPAREN

State 269:
## Known stack suffix:
## TCP
## LR(1) items:
netparam -> TCP . LPAREN RECSTART tcpdetail RECEND RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 270
## Reductions:

State 270:
## Known stack suffix:
## TCP LPAREN
## LR(1) items:
netparam -> TCP LPAREN . RECSTART tcpdetail RECEND RPAREN [ RPAREN ]
## Transitions:
-- On RECSTART shift to state 271
## Reductions:

State 271:
## Known stack suffix:
## TCP LPAREN RECSTART
## LR(1) items:
netparam -> TCP LPAREN RECSTART . tcpdetail RECEND RPAREN [ RPAREN ]
## Transitions:
-- On WS shift to state 272
-- On WIN shift to state 286
-- On URP shift to state 289
-- On URG shift to state 292
-- On TS shift to state 300
-- On SYN shift to state 315
-- On SEQNO shift to state 318
-- On RST shift to state 321
-- On PSH shift to state 324
-- On PS2 shift to state 327
-- On PS1 shift to state 330
-- On MSS shift to state 333
-- On IS2 shift to state 342
-- On IS1 shift to state 345
-- On FIN shift to state 348
-- On DATA shift to state 351
-- On ACKNO shift to state 355
-- On ACK shift to state 358
-- On tcpval shift to state 361
-- On tcpdetail shift to state 364
## Reductions:

State 272:
## Known stack suffix:
## WS
## LR(1) items:
tcpval -> WS . ASSIGN byteoption [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 273
## Reductions:

State 273:
## Known stack suffix:
## WS ASSIGN
## LR(1) items:
tcpval -> WS ASSIGN . byteoption [ SC RECEND ]
## Transitions:
-- On SOME shift to state 274
-- On NONE shift to state 281
-- On LPAREN shift to state 282
-- On byteoption shift to state 285
## Reductions:

State 274:
## Known stack suffix:
## SOME
## LR(1) items:
byteoption -> SOME . byte [ SC RPAREN RECEND ]
## Transitions:
-- On LPAREN shift to state 275
-- On BYTE shift to state 276
-- On byte shift to state 280
## Reductions:

State 275:
## Known stack suffix:
## LPAREN
## LR(1) items:
byte -> LPAREN . byte RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On LPAREN shift to state 275
-- On BYTE shift to state 276
-- On byte shift to state 278
## Reductions:

State 276:
## Known stack suffix:
## BYTE
## LR(1) items:
byte -> BYTE . intr [ SC RPAREN RECEND ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 277
## Reductions:

State 277:
## Known stack suffix:
## BYTE intr
## LR(1) items:
byte -> BYTE intr . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production byte -> BYTE intr

State 278:
## Known stack suffix:
## LPAREN byte
## LR(1) items:
byte -> LPAREN byte . RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On RPAREN shift to state 279
## Reductions:

State 279:
## Known stack suffix:
## LPAREN byte RPAREN
## LR(1) items:
byte -> LPAREN byte RPAREN . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production byte -> LPAREN byte RPAREN

State 280:
## Known stack suffix:
## SOME byte
## LR(1) items:
byteoption -> SOME byte . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production byteoption -> SOME byte

State 281:
## Known stack suffix:
## NONE
## LR(1) items:
byteoption -> NONE . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production byteoption -> NONE

State 282:
## Known stack suffix:
## LPAREN
## LR(1) items:
byteoption -> LPAREN . byteoption RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On SOME shift to state 274
-- On NONE shift to state 281
-- On LPAREN shift to state 282
-- On byteoption shift to state 283
## Reductions:

State 283:
## Known stack suffix:
## LPAREN byteoption
## LR(1) items:
byteoption -> LPAREN byteoption . RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On RPAREN shift to state 284
## Reductions:

State 284:
## Known stack suffix:
## LPAREN byteoption RPAREN
## LR(1) items:
byteoption -> LPAREN byteoption RPAREN . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production byteoption -> LPAREN byteoption RPAREN

State 285:
## Known stack suffix:
## WS ASSIGN byteoption
## LR(1) items:
tcpval -> WS ASSIGN byteoption . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> WS ASSIGN byteoption

State 286:
## Known stack suffix:
## WIN
## LR(1) items:
tcpval -> WIN . ASSIGN word16 [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 287
## Reductions:

State 287:
## Known stack suffix:
## WIN ASSIGN
## LR(1) items:
tcpval -> WIN ASSIGN . word16 [ SC RECEND ]
## Transitions:
-- On WORD16 shift to state 116
-- On LPAREN shift to state 118
-- On word16 shift to state 288
## Reductions:

State 288:
## Known stack suffix:
## WIN ASSIGN word16
## LR(1) items:
tcpval -> WIN ASSIGN word16 . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> WIN ASSIGN word16

State 289:
## Known stack suffix:
## URP
## LR(1) items:
tcpval -> URP . ASSIGN word16 [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 290
## Reductions:

State 290:
## Known stack suffix:
## URP ASSIGN
## LR(1) items:
tcpval -> URP ASSIGN . word16 [ SC RECEND ]
## Transitions:
-- On WORD16 shift to state 116
-- On LPAREN shift to state 118
-- On word16 shift to state 291
## Reductions:

State 291:
## Known stack suffix:
## URP ASSIGN word16
## LR(1) items:
tcpval -> URP ASSIGN word16 . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> URP ASSIGN word16

State 292:
## Known stack suffix:
## URG
## LR(1) items:
tcpval -> URG . ASSIGN bool [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 293
## Reductions:

State 293:
## Known stack suffix:
## URG ASSIGN
## LR(1) items:
tcpval -> URG ASSIGN . bool [ SC RECEND ]
## Transitions:
-- On TRUE shift to state 294
-- On LPAREN shift to state 295
-- On FALSE shift to state 296
-- On bool shift to state 299
## Reductions:

State 294:
## Known stack suffix:
## TRUE
## LR(1) items:
bool -> TRUE . [ SC RPAREN RECEND COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bool -> TRUE

State 295:
## Known stack suffix:
## LPAREN
## LR(1) items:
bool -> LPAREN . bool RPAREN [ SC RPAREN RECEND COMMA ]
## Transitions:
-- On TRUE shift to state 294
-- On LPAREN shift to state 295
-- On FALSE shift to state 296
-- On bool shift to state 297
## Reductions:

State 296:
## Known stack suffix:
## FALSE
## LR(1) items:
bool -> FALSE . [ SC RPAREN RECEND COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bool -> FALSE

State 297:
## Known stack suffix:
## LPAREN bool
## LR(1) items:
bool -> LPAREN bool . RPAREN [ SC RPAREN RECEND COMMA ]
## Transitions:
-- On RPAREN shift to state 298
## Reductions:

State 298:
## Known stack suffix:
## LPAREN bool RPAREN
## LR(1) items:
bool -> LPAREN bool RPAREN . [ SC RPAREN RECEND COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bool -> LPAREN bool RPAREN

State 299:
## Known stack suffix:
## URG ASSIGN bool
## LR(1) items:
tcpval -> URG ASSIGN bool . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> URG ASSIGN bool

State 300:
## Known stack suffix:
## TS
## LR(1) items:
tcpval -> TS . ASSIGN tsseqoption [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 301
## Reductions:

State 301:
## Known stack suffix:
## TS ASSIGN
## LR(1) items:
tcpval -> TS ASSIGN . tsseqoption [ SC RECEND ]
## Transitions:
-- On SOME shift to state 302
-- On NONE shift to state 310
-- On LPAREN shift to state 311
-- On tsseqoption shift to state 314
## Reductions:

State 302:
## Known stack suffix:
## SOME
## LR(1) items:
tsseqoption -> SOME . LPAREN TSSEQ word16 COMMA TSSEQ word16 RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On LPAREN shift to state 303
## Reductions:

State 303:
## Known stack suffix:
## SOME LPAREN
## LR(1) items:
tsseqoption -> SOME LPAREN . TSSEQ word16 COMMA TSSEQ word16 RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On TSSEQ shift to state 304
## Reductions:

State 304:
## Known stack suffix:
## SOME LPAREN TSSEQ
## LR(1) items:
tsseqoption -> SOME LPAREN TSSEQ . word16 COMMA TSSEQ word16 RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On WORD16 shift to state 116
-- On LPAREN shift to state 118
-- On word16 shift to state 305
## Reductions:

State 305:
## Known stack suffix:
## SOME LPAREN TSSEQ word16
## LR(1) items:
tsseqoption -> SOME LPAREN TSSEQ word16 . COMMA TSSEQ word16 RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On COMMA shift to state 306
## Reductions:

State 306:
## Known stack suffix:
## SOME LPAREN TSSEQ word16 COMMA
## LR(1) items:
tsseqoption -> SOME LPAREN TSSEQ word16 COMMA . TSSEQ word16 RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On TSSEQ shift to state 307
## Reductions:

State 307:
## Known stack suffix:
## SOME LPAREN TSSEQ word16 COMMA TSSEQ
## LR(1) items:
tsseqoption -> SOME LPAREN TSSEQ word16 COMMA TSSEQ . word16 RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On WORD16 shift to state 116
-- On LPAREN shift to state 118
-- On word16 shift to state 308
## Reductions:

State 308:
## Known stack suffix:
## SOME LPAREN TSSEQ word16 COMMA TSSEQ word16
## LR(1) items:
tsseqoption -> SOME LPAREN TSSEQ word16 COMMA TSSEQ word16 . RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On RPAREN shift to state 309
## Reductions:

State 309:
## Known stack suffix:
## SOME LPAREN TSSEQ word16 COMMA TSSEQ word16 RPAREN
## LR(1) items:
tsseqoption -> SOME LPAREN TSSEQ word16 COMMA TSSEQ word16 RPAREN . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tsseqoption -> SOME LPAREN TSSEQ word16 COMMA TSSEQ word16 RPAREN

State 310:
## Known stack suffix:
## NONE
## LR(1) items:
tsseqoption -> NONE . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tsseqoption -> NONE

State 311:
## Known stack suffix:
## LPAREN
## LR(1) items:
tsseqoption -> LPAREN . tsseqoption RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On SOME shift to state 302
-- On NONE shift to state 310
-- On LPAREN shift to state 311
-- On tsseqoption shift to state 312
## Reductions:

State 312:
## Known stack suffix:
## LPAREN tsseqoption
## LR(1) items:
tsseqoption -> LPAREN tsseqoption . RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On RPAREN shift to state 313
## Reductions:

State 313:
## Known stack suffix:
## LPAREN tsseqoption RPAREN
## LR(1) items:
tsseqoption -> LPAREN tsseqoption RPAREN . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tsseqoption -> LPAREN tsseqoption RPAREN

State 314:
## Known stack suffix:
## TS ASSIGN tsseqoption
## LR(1) items:
tcpval -> TS ASSIGN tsseqoption . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> TS ASSIGN tsseqoption

State 315:
## Known stack suffix:
## SYN
## LR(1) items:
tcpval -> SYN . ASSIGN bool [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 316
## Reductions:

State 316:
## Known stack suffix:
## SYN ASSIGN
## LR(1) items:
tcpval -> SYN ASSIGN . bool [ SC RECEND ]
## Transitions:
-- On TRUE shift to state 294
-- On LPAREN shift to state 295
-- On FALSE shift to state 296
-- On bool shift to state 317
## Reductions:

State 317:
## Known stack suffix:
## SYN ASSIGN bool
## LR(1) items:
tcpval -> SYN ASSIGN bool . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> SYN ASSIGN bool

State 318:
## Known stack suffix:
## SEQNO
## LR(1) items:
tcpval -> SEQNO . ASSIGN seqlocal [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 319
## Reductions:

State 319:
## Known stack suffix:
## SEQNO ASSIGN
## LR(1) items:
tcpval -> SEQNO ASSIGN . seqlocal [ SC RECEND ]
## Transitions:
-- On SEQLOCAL shift to state 126
-- On LPAREN shift to state 128
-- On seqlocal shift to state 320
## Reductions:

State 320:
## Known stack suffix:
## SEQNO ASSIGN seqlocal
## LR(1) items:
tcpval -> SEQNO ASSIGN seqlocal . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> SEQNO ASSIGN seqlocal

State 321:
## Known stack suffix:
## RST
## LR(1) items:
tcpval -> RST . ASSIGN bool [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 322
## Reductions:

State 322:
## Known stack suffix:
## RST ASSIGN
## LR(1) items:
tcpval -> RST ASSIGN . bool [ SC RECEND ]
## Transitions:
-- On TRUE shift to state 294
-- On LPAREN shift to state 295
-- On FALSE shift to state 296
-- On bool shift to state 323
## Reductions:

State 323:
## Known stack suffix:
## RST ASSIGN bool
## LR(1) items:
tcpval -> RST ASSIGN bool . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> RST ASSIGN bool

State 324:
## Known stack suffix:
## PSH
## LR(1) items:
tcpval -> PSH . ASSIGN bool [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 325
## Reductions:

State 325:
## Known stack suffix:
## PSH ASSIGN
## LR(1) items:
tcpval -> PSH ASSIGN . bool [ SC RECEND ]
## Transitions:
-- On TRUE shift to state 294
-- On LPAREN shift to state 295
-- On FALSE shift to state 296
-- On bool shift to state 326
## Reductions:

State 326:
## Known stack suffix:
## PSH ASSIGN bool
## LR(1) items:
tcpval -> PSH ASSIGN bool . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> PSH ASSIGN bool

State 327:
## Known stack suffix:
## PS2
## LR(1) items:
tcpval -> PS2 . ASSIGN portoption [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 328
## Reductions:

State 328:
## Known stack suffix:
## PS2 ASSIGN
## LR(1) items:
tcpval -> PS2 ASSIGN . portoption [ SC RECEND ]
## Transitions:
-- On SOME shift to state 72
-- On NONE shift to state 79
-- On LPAREN shift to state 80
-- On portoption shift to state 329
## Reductions:

State 329:
## Known stack suffix:
## PS2 ASSIGN portoption
## LR(1) items:
tcpval -> PS2 ASSIGN portoption . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> PS2 ASSIGN portoption

State 330:
## Known stack suffix:
## PS1
## LR(1) items:
tcpval -> PS1 . ASSIGN portoption [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 331
## Reductions:

State 331:
## Known stack suffix:
## PS1 ASSIGN
## LR(1) items:
tcpval -> PS1 ASSIGN . portoption [ SC RECEND ]
## Transitions:
-- On SOME shift to state 72
-- On NONE shift to state 79
-- On LPAREN shift to state 80
-- On portoption shift to state 332
## Reductions:

State 332:
## Known stack suffix:
## PS1 ASSIGN portoption
## LR(1) items:
tcpval -> PS1 ASSIGN portoption . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> PS1 ASSIGN portoption

State 333:
## Known stack suffix:
## MSS
## LR(1) items:
tcpval -> MSS . ASSIGN word16option [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 334
## Reductions:

State 334:
## Known stack suffix:
## MSS ASSIGN
## LR(1) items:
tcpval -> MSS ASSIGN . word16option [ SC RECEND ]
## Transitions:
-- On SOME shift to state 335
-- On NONE shift to state 337
-- On LPAREN shift to state 338
-- On word16option shift to state 341
## Reductions:

State 335:
## Known stack suffix:
## SOME
## LR(1) items:
word16option -> SOME . word16 [ SC RPAREN RECEND ]
## Transitions:
-- On WORD16 shift to state 116
-- On LPAREN shift to state 118
-- On word16 shift to state 336
## Reductions:

State 336:
## Known stack suffix:
## SOME word16
## LR(1) items:
word16option -> SOME word16 . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production word16option -> SOME word16

State 337:
## Known stack suffix:
## NONE
## LR(1) items:
word16option -> NONE . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production word16option -> NONE

State 338:
## Known stack suffix:
## LPAREN
## LR(1) items:
word16option -> LPAREN . word16option RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On SOME shift to state 335
-- On NONE shift to state 337
-- On LPAREN shift to state 338
-- On word16option shift to state 339
## Reductions:

State 339:
## Known stack suffix:
## LPAREN word16option
## LR(1) items:
word16option -> LPAREN word16option . RPAREN [ SC RPAREN RECEND ]
## Transitions:
-- On RPAREN shift to state 340
## Reductions:

State 340:
## Known stack suffix:
## LPAREN word16option RPAREN
## LR(1) items:
word16option -> LPAREN word16option RPAREN . [ SC RPAREN RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production word16option -> LPAREN word16option RPAREN

State 341:
## Known stack suffix:
## MSS ASSIGN word16option
## LR(1) items:
tcpval -> MSS ASSIGN word16option . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> MSS ASSIGN word16option

State 342:
## Known stack suffix:
## IS2
## LR(1) items:
tcpval -> IS2 . ASSIGN ipoption [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 343
## Reductions:

State 343:
## Known stack suffix:
## IS2 ASSIGN
## LR(1) items:
tcpval -> IS2 ASSIGN . ipoption [ SC RECEND ]
## Transitions:
-- On SOME shift to state 51
-- On NONE shift to state 65
-- On LPAREN shift to state 85
-- On ipoption shift to state 344
## Reductions:

State 344:
## Known stack suffix:
## IS2 ASSIGN ipoption
## LR(1) items:
tcpval -> IS2 ASSIGN ipoption . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> IS2 ASSIGN ipoption

State 345:
## Known stack suffix:
## IS1
## LR(1) items:
tcpval -> IS1 . ASSIGN ipoption [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 346
## Reductions:

State 346:
## Known stack suffix:
## IS1 ASSIGN
## LR(1) items:
tcpval -> IS1 ASSIGN . ipoption [ SC RECEND ]
## Transitions:
-- On SOME shift to state 51
-- On NONE shift to state 65
-- On LPAREN shift to state 85
-- On ipoption shift to state 347
## Reductions:

State 347:
## Known stack suffix:
## IS1 ASSIGN ipoption
## LR(1) items:
tcpval -> IS1 ASSIGN ipoption . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> IS1 ASSIGN ipoption

State 348:
## Known stack suffix:
## FIN
## LR(1) items:
tcpval -> FIN . ASSIGN bool [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 349
## Reductions:

State 349:
## Known stack suffix:
## FIN ASSIGN
## LR(1) items:
tcpval -> FIN ASSIGN . bool [ SC RECEND ]
## Transitions:
-- On TRUE shift to state 294
-- On LPAREN shift to state 295
-- On FALSE shift to state 296
-- On bool shift to state 350
## Reductions:

State 350:
## Known stack suffix:
## FIN ASSIGN bool
## LR(1) items:
tcpval -> FIN ASSIGN bool . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> FIN ASSIGN bool

State 351:
## Known stack suffix:
## DATA
## LR(1) items:
tcpval -> DATA . ASSIGN datalist comment [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 352
## Reductions:

State 352:
## Known stack suffix:
## DATA ASSIGN
## LR(1) items:
tcpval -> DATA ASSIGN . datalist comment [ SC RECEND ]
## Transitions:
-- On LSQBRKT shift to state 250
-- On LPAREN shift to state 258
-- On datalist shift to state 353
## Reductions:

State 353:
## Known stack suffix:
## DATA ASSIGN datalist
## LR(1) items:
tcpval -> DATA ASSIGN datalist . comment [ SC RECEND ]
## Transitions:
-- On COMMENT shift to state 18
-- On comment_h shift to state 19
-- On comment shift to state 354
## Reductions:
-- On SC reduce production comment ->
-- On RECEND reduce production comment ->

State 354:
## Known stack suffix:
## DATA ASSIGN datalist comment
## LR(1) items:
tcpval -> DATA ASSIGN datalist comment . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> DATA ASSIGN datalist comment

State 355:
## Known stack suffix:
## ACKNO
## LR(1) items:
tcpval -> ACKNO . ASSIGN seqforeign [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 356
## Reductions:

State 356:
## Known stack suffix:
## ACKNO ASSIGN
## LR(1) items:
tcpval -> ACKNO ASSIGN . seqforeign [ SC RECEND ]
## Transitions:
-- On SEQFOREIGN shift to state 171
-- On LPAREN shift to state 173
-- On seqforeign shift to state 357
## Reductions:

State 357:
## Known stack suffix:
## ACKNO ASSIGN seqforeign
## LR(1) items:
tcpval -> ACKNO ASSIGN seqforeign . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> ACKNO ASSIGN seqforeign

State 358:
## Known stack suffix:
## ACK
## LR(1) items:
tcpval -> ACK . ASSIGN bool [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 359
## Reductions:

State 359:
## Known stack suffix:
## ACK ASSIGN
## LR(1) items:
tcpval -> ACK ASSIGN . bool [ SC RECEND ]
## Transitions:
-- On TRUE shift to state 294
-- On LPAREN shift to state 295
-- On FALSE shift to state 296
-- On bool shift to state 360
## Reductions:

State 360:
## Known stack suffix:
## ACK ASSIGN bool
## LR(1) items:
tcpval -> ACK ASSIGN bool . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpval -> ACK ASSIGN bool

State 361:
## Known stack suffix:
## tcpval
## LR(1) items:
tcpdetail -> tcpval . [ RECEND ]
tcpdetail -> tcpval . SC tcpdetail [ RECEND ]
## Transitions:
-- On SC shift to state 362
## Reductions:
-- On RECEND reduce production tcpdetail -> tcpval

State 362:
## Known stack suffix:
## tcpval SC
## LR(1) items:
tcpdetail -> tcpval SC . tcpdetail [ RECEND ]
## Transitions:
-- On WS shift to state 272
-- On WIN shift to state 286
-- On URP shift to state 289
-- On URG shift to state 292
-- On TS shift to state 300
-- On SYN shift to state 315
-- On SEQNO shift to state 318
-- On RST shift to state 321
-- On PSH shift to state 324
-- On PS2 shift to state 327
-- On PS1 shift to state 330
-- On MSS shift to state 333
-- On IS2 shift to state 342
-- On IS1 shift to state 345
-- On FIN shift to state 348
-- On DATA shift to state 351
-- On ACKNO shift to state 355
-- On ACK shift to state 358
-- On tcpval shift to state 361
-- On tcpdetail shift to state 363
## Reductions:

State 363:
## Known stack suffix:
## tcpval SC tcpdetail
## LR(1) items:
tcpdetail -> tcpval SC tcpdetail . [ RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tcpdetail -> tcpval SC tcpdetail

State 364:
## Known stack suffix:
## TCP LPAREN RECSTART tcpdetail
## LR(1) items:
netparam -> TCP LPAREN RECSTART tcpdetail . RECEND RPAREN [ RPAREN ]
## Transitions:
-- On RECEND shift to state 365
## Reductions:

State 365:
## Known stack suffix:
## TCP LPAREN RECSTART tcpdetail RECEND
## LR(1) items:
netparam -> TCP LPAREN RECSTART tcpdetail RECEND . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 366
## Reductions:

State 366:
## Known stack suffix:
## TCP LPAREN RECSTART tcpdetail RECEND RPAREN
## LR(1) items:
netparam -> TCP LPAREN RECSTART tcpdetail RECEND RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production netparam -> TCP LPAREN RECSTART tcpdetail RECEND RPAREN

State 367:
## Known stack suffix:
## ICMP
## LR(1) items:
netparam -> ICMP . LPAREN RECSTART icmpdetail RECEND RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 368
## Reductions:

State 368:
## Known stack suffix:
## ICMP LPAREN
## LR(1) items:
netparam -> ICMP LPAREN . RECSTART icmpdetail RECEND RPAREN [ RPAREN ]
## Transitions:
-- On RECSTART shift to state 369
## Reductions:

State 369:
## Known stack suffix:
## ICMP LPAREN RECSTART
## LR(1) items:
netparam -> ICMP LPAREN RECSTART . icmpdetail RECEND RPAREN [ RPAREN ]
## Transitions:
-- On TYPE shift to state 370
-- On SEQNO shift to state 403
-- On PS4 shift to state 406
-- On PS3 shift to state 409
-- On PROTO shift to state 412
-- On IS4 shift to state 417
-- On IS3 shift to state 420
-- On IS2 shift to state 423
-- On IS1 shift to state 426
-- On icmpval shift to state 429
-- On icmpdetail shift to state 432
## Reductions:

State 370:
## Known stack suffix:
## TYPE
## LR(1) items:
icmpval -> TYPE . ASSIGN icmptype [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 371
## Reductions:

State 371:
## Known stack suffix:
## TYPE ASSIGN
## LR(1) items:
icmpval -> TYPE ASSIGN . icmptype [ SC RECEND ]
## Transitions:
-- On ICMP_UNREACH shift to state 372
-- On ICMP_TIME_EXCEEDED shift to state 391
-- On ICMP_SOURCE_QUENCH shift to state 395
-- On ICMP_PARAMPROB shift to state 398
-- On icmptype shift to state 402
## Reductions:

State 372:
## Known stack suffix:
## ICMP_UNREACH
## LR(1) items:
icmptype -> ICMP_UNREACH . icmp_unreach [ SC RECEND ]
## Transitions:
-- On ICMP_TOSNET shift to state 373
-- On ICMP_TOSHOST shift to state 374
-- On ICMP_SRCFAIL shift to state 375
-- On ICMP_PROTOCOL shift to state 376
-- On ICMP_PREC_VIOLATION shift to state 377
-- On ICMP_PREC_CUTOFF shift to state 378
-- On ICMP_PORT shift to state 379
-- On ICMP_NET_UNKNOWN shift to state 380
-- On ICMP_NET_PROHIB shift to state 381
-- On ICMP_NET shift to state 382
-- On ICMP_NEEDFRAG shift to state 383
-- On ICMP_ISOLATED shift to state 385
-- On ICMP_HOST_UNKNOWN shift to state 386
-- On ICMP_HOST_PROHIB shift to state 387
-- On ICMP_HOST shift to state 388
-- On ICMP_FILTER_PROHIB shift to state 389
-- On icmp_unreach shift to state 390
## Reductions:

State 373:
## Known stack suffix:
## ICMP_TOSNET
## LR(1) items:
icmp_unreach -> ICMP_TOSNET . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_unreach -> ICMP_TOSNET

State 374:
## Known stack suffix:
## ICMP_TOSHOST
## LR(1) items:
icmp_unreach -> ICMP_TOSHOST . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_unreach -> ICMP_TOSHOST

State 375:
## Known stack suffix:
## ICMP_SRCFAIL
## LR(1) items:
icmp_unreach -> ICMP_SRCFAIL . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_unreach -> ICMP_SRCFAIL

State 376:
## Known stack suffix:
## ICMP_PROTOCOL
## LR(1) items:
icmp_unreach -> ICMP_PROTOCOL . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_unreach -> ICMP_PROTOCOL

State 377:
## Known stack suffix:
## ICMP_PREC_VIOLATION
## LR(1) items:
icmp_unreach -> ICMP_PREC_VIOLATION . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_unreach -> ICMP_PREC_VIOLATION

State 378:
## Known stack suffix:
## ICMP_PREC_CUTOFF
## LR(1) items:
icmp_unreach -> ICMP_PREC_CUTOFF . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_unreach -> ICMP_PREC_CUTOFF

State 379:
## Known stack suffix:
## ICMP_PORT
## LR(1) items:
icmp_unreach -> ICMP_PORT . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_unreach -> ICMP_PORT

State 380:
## Known stack suffix:
## ICMP_NET_UNKNOWN
## LR(1) items:
icmp_unreach -> ICMP_NET_UNKNOWN . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_unreach -> ICMP_NET_UNKNOWN

State 381:
## Known stack suffix:
## ICMP_NET_PROHIB
## LR(1) items:
icmp_unreach -> ICMP_NET_PROHIB . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_unreach -> ICMP_NET_PROHIB

State 382:
## Known stack suffix:
## ICMP_NET
## LR(1) items:
icmp_unreach -> ICMP_NET . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_unreach -> ICMP_NET

State 383:
## Known stack suffix:
## ICMP_NEEDFRAG
## LR(1) items:
icmp_unreach -> ICMP_NEEDFRAG . word16option [ SC RECEND ]
## Transitions:
-- On SOME shift to state 335
-- On NONE shift to state 337
-- On LPAREN shift to state 338
-- On word16option shift to state 384
## Reductions:

State 384:
## Known stack suffix:
## ICMP_NEEDFRAG word16option
## LR(1) items:
icmp_unreach -> ICMP_NEEDFRAG word16option . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_unreach -> ICMP_NEEDFRAG word16option

State 385:
## Known stack suffix:
## ICMP_ISOLATED
## LR(1) items:
icmp_unreach -> ICMP_ISOLATED . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_unreach -> ICMP_ISOLATED

State 386:
## Known stack suffix:
## ICMP_HOST_UNKNOWN
## LR(1) items:
icmp_unreach -> ICMP_HOST_UNKNOWN . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_unreach -> ICMP_HOST_UNKNOWN

State 387:
## Known stack suffix:
## ICMP_HOST_PROHIB
## LR(1) items:
icmp_unreach -> ICMP_HOST_PROHIB . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_unreach -> ICMP_HOST_PROHIB

State 388:
## Known stack suffix:
## ICMP_HOST
## LR(1) items:
icmp_unreach -> ICMP_HOST . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_unreach -> ICMP_HOST

State 389:
## Known stack suffix:
## ICMP_FILTER_PROHIB
## LR(1) items:
icmp_unreach -> ICMP_FILTER_PROHIB . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_unreach -> ICMP_FILTER_PROHIB

State 390:
## Known stack suffix:
## ICMP_UNREACH icmp_unreach
## LR(1) items:
icmptype -> ICMP_UNREACH icmp_unreach . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmptype -> ICMP_UNREACH icmp_unreach

State 391:
## Known stack suffix:
## ICMP_TIME_EXCEEDED
## LR(1) items:
icmptype -> ICMP_TIME_EXCEEDED . icmp_time_exceeded [ SC RECEND ]
## Transitions:
-- On ICMP_REASS shift to state 392
-- On ICMP_INTRANS shift to state 393
-- On icmp_time_exceeded shift to state 394
## Reductions:

State 392:
## Known stack suffix:
## ICMP_REASS
## LR(1) items:
icmp_time_exceeded -> ICMP_REASS . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_time_exceeded -> ICMP_REASS

State 393:
## Known stack suffix:
## ICMP_INTRANS
## LR(1) items:
icmp_time_exceeded -> ICMP_INTRANS . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_time_exceeded -> ICMP_INTRANS

State 394:
## Known stack suffix:
## ICMP_TIME_EXCEEDED icmp_time_exceeded
## LR(1) items:
icmptype -> ICMP_TIME_EXCEEDED icmp_time_exceeded . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmptype -> ICMP_TIME_EXCEEDED icmp_time_exceeded

State 395:
## Known stack suffix:
## ICMP_SOURCE_QUENCH
## LR(1) items:
icmptype -> ICMP_SOURCE_QUENCH . icmp_source_quench [ SC RECEND ]
## Transitions:
-- On ICMP_QUENCH shift to state 396
-- On icmp_source_quench shift to state 397
## Reductions:

State 396:
## Known stack suffix:
## ICMP_QUENCH
## LR(1) items:
icmp_source_quench -> ICMP_QUENCH . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_source_quench -> ICMP_QUENCH

State 397:
## Known stack suffix:
## ICMP_SOURCE_QUENCH icmp_source_quench
## LR(1) items:
icmptype -> ICMP_SOURCE_QUENCH icmp_source_quench . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmptype -> ICMP_SOURCE_QUENCH icmp_source_quench

State 398:
## Known stack suffix:
## ICMP_PARAMPROB
## LR(1) items:
icmptype -> ICMP_PARAMPROB . icmp_paramprob [ SC RECEND ]
## Transitions:
-- On ICMP_NEEDOPT shift to state 399
-- On ICMP_BADHDR shift to state 400
-- On icmp_paramprob shift to state 401
## Reductions:

State 399:
## Known stack suffix:
## ICMP_NEEDOPT
## LR(1) items:
icmp_paramprob -> ICMP_NEEDOPT . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_paramprob -> ICMP_NEEDOPT

State 400:
## Known stack suffix:
## ICMP_BADHDR
## LR(1) items:
icmp_paramprob -> ICMP_BADHDR . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmp_paramprob -> ICMP_BADHDR

State 401:
## Known stack suffix:
## ICMP_PARAMPROB icmp_paramprob
## LR(1) items:
icmptype -> ICMP_PARAMPROB icmp_paramprob . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmptype -> ICMP_PARAMPROB icmp_paramprob

State 402:
## Known stack suffix:
## TYPE ASSIGN icmptype
## LR(1) items:
icmpval -> TYPE ASSIGN icmptype . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmpval -> TYPE ASSIGN icmptype

State 403:
## Known stack suffix:
## SEQNO
## LR(1) items:
icmpval -> SEQNO . ASSIGN NONE [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 404
## Reductions:

State 404:
## Known stack suffix:
## SEQNO ASSIGN
## LR(1) items:
icmpval -> SEQNO ASSIGN . NONE [ SC RECEND ]
## Transitions:
-- On NONE shift to state 405
## Reductions:

State 405:
## Known stack suffix:
## SEQNO ASSIGN NONE
## LR(1) items:
icmpval -> SEQNO ASSIGN NONE . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmpval -> SEQNO ASSIGN NONE

State 406:
## Known stack suffix:
## PS4
## LR(1) items:
icmpval -> PS4 . ASSIGN portoption [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 407
## Reductions:

State 407:
## Known stack suffix:
## PS4 ASSIGN
## LR(1) items:
icmpval -> PS4 ASSIGN . portoption [ SC RECEND ]
## Transitions:
-- On SOME shift to state 72
-- On NONE shift to state 79
-- On LPAREN shift to state 80
-- On portoption shift to state 408
## Reductions:

State 408:
## Known stack suffix:
## PS4 ASSIGN portoption
## LR(1) items:
icmpval -> PS4 ASSIGN portoption . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmpval -> PS4 ASSIGN portoption

State 409:
## Known stack suffix:
## PS3
## LR(1) items:
icmpval -> PS3 . ASSIGN portoption [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 410
## Reductions:

State 410:
## Known stack suffix:
## PS3 ASSIGN
## LR(1) items:
icmpval -> PS3 ASSIGN . portoption [ SC RECEND ]
## Transitions:
-- On SOME shift to state 72
-- On NONE shift to state 79
-- On LPAREN shift to state 80
-- On portoption shift to state 411
## Reductions:

State 411:
## Known stack suffix:
## PS3 ASSIGN portoption
## LR(1) items:
icmpval -> PS3 ASSIGN portoption . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmpval -> PS3 ASSIGN portoption

State 412:
## Known stack suffix:
## PROTO
## LR(1) items:
icmpval -> PROTO . ASSIGN protocol [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 413
## Reductions:

State 413:
## Known stack suffix:
## PROTO ASSIGN
## LR(1) items:
icmpval -> PROTO ASSIGN . protocol [ SC RECEND ]
## Transitions:
-- On PROTO_UDP shift to state 414
-- On PROTO_TCP shift to state 415
-- On protocol shift to state 416
## Reductions:

State 414:
## Known stack suffix:
## PROTO_UDP
## LR(1) items:
protocol -> PROTO_UDP . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production protocol -> PROTO_UDP

State 415:
## Known stack suffix:
## PROTO_TCP
## LR(1) items:
protocol -> PROTO_TCP . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production protocol -> PROTO_TCP

State 416:
## Known stack suffix:
## PROTO ASSIGN protocol
## LR(1) items:
icmpval -> PROTO ASSIGN protocol . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmpval -> PROTO ASSIGN protocol

State 417:
## Known stack suffix:
## IS4
## LR(1) items:
icmpval -> IS4 . ASSIGN ipoption [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 418
## Reductions:

State 418:
## Known stack suffix:
## IS4 ASSIGN
## LR(1) items:
icmpval -> IS4 ASSIGN . ipoption [ SC RECEND ]
## Transitions:
-- On SOME shift to state 51
-- On NONE shift to state 65
-- On LPAREN shift to state 85
-- On ipoption shift to state 419
## Reductions:

State 419:
## Known stack suffix:
## IS4 ASSIGN ipoption
## LR(1) items:
icmpval -> IS4 ASSIGN ipoption . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmpval -> IS4 ASSIGN ipoption

State 420:
## Known stack suffix:
## IS3
## LR(1) items:
icmpval -> IS3 . ASSIGN ipoption [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 421
## Reductions:

State 421:
## Known stack suffix:
## IS3 ASSIGN
## LR(1) items:
icmpval -> IS3 ASSIGN . ipoption [ SC RECEND ]
## Transitions:
-- On SOME shift to state 51
-- On NONE shift to state 65
-- On LPAREN shift to state 85
-- On ipoption shift to state 422
## Reductions:

State 422:
## Known stack suffix:
## IS3 ASSIGN ipoption
## LR(1) items:
icmpval -> IS3 ASSIGN ipoption . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmpval -> IS3 ASSIGN ipoption

State 423:
## Known stack suffix:
## IS2
## LR(1) items:
icmpval -> IS2 . ASSIGN ipoption [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 424
## Reductions:

State 424:
## Known stack suffix:
## IS2 ASSIGN
## LR(1) items:
icmpval -> IS2 ASSIGN . ipoption [ SC RECEND ]
## Transitions:
-- On SOME shift to state 51
-- On NONE shift to state 65
-- On LPAREN shift to state 85
-- On ipoption shift to state 425
## Reductions:

State 425:
## Known stack suffix:
## IS2 ASSIGN ipoption
## LR(1) items:
icmpval -> IS2 ASSIGN ipoption . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmpval -> IS2 ASSIGN ipoption

State 426:
## Known stack suffix:
## IS1
## LR(1) items:
icmpval -> IS1 . ASSIGN ipoption [ SC RECEND ]
## Transitions:
-- On ASSIGN shift to state 427
## Reductions:

State 427:
## Known stack suffix:
## IS1 ASSIGN
## LR(1) items:
icmpval -> IS1 ASSIGN . ipoption [ SC RECEND ]
## Transitions:
-- On SOME shift to state 51
-- On NONE shift to state 65
-- On LPAREN shift to state 85
-- On ipoption shift to state 428
## Reductions:

State 428:
## Known stack suffix:
## IS1 ASSIGN ipoption
## LR(1) items:
icmpval -> IS1 ASSIGN ipoption . [ SC RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmpval -> IS1 ASSIGN ipoption

State 429:
## Known stack suffix:
## icmpval
## LR(1) items:
icmpdetail -> icmpval . [ RECEND ]
icmpdetail -> icmpval . SC icmpdetail [ RECEND ]
## Transitions:
-- On SC shift to state 430
## Reductions:
-- On RECEND reduce production icmpdetail -> icmpval

State 430:
## Known stack suffix:
## icmpval SC
## LR(1) items:
icmpdetail -> icmpval SC . icmpdetail [ RECEND ]
## Transitions:
-- On TYPE shift to state 370
-- On SEQNO shift to state 403
-- On PS4 shift to state 406
-- On PS3 shift to state 409
-- On PROTO shift to state 412
-- On IS4 shift to state 417
-- On IS3 shift to state 420
-- On IS2 shift to state 423
-- On IS1 shift to state 426
-- On icmpval shift to state 429
-- On icmpdetail shift to state 431
## Reductions:

State 431:
## Known stack suffix:
## icmpval SC icmpdetail
## LR(1) items:
icmpdetail -> icmpval SC icmpdetail . [ RECEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production icmpdetail -> icmpval SC icmpdetail

State 432:
## Known stack suffix:
## ICMP LPAREN RECSTART icmpdetail
## LR(1) items:
netparam -> ICMP LPAREN RECSTART icmpdetail . RECEND RPAREN [ RPAREN ]
## Transitions:
-- On RECEND shift to state 433
## Reductions:

State 433:
## Known stack suffix:
## ICMP LPAREN RECSTART icmpdetail RECEND
## LR(1) items:
netparam -> ICMP LPAREN RECSTART icmpdetail RECEND . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 434
## Reductions:

State 434:
## Known stack suffix:
## ICMP LPAREN RECSTART icmpdetail RECEND RPAREN
## LR(1) items:
netparam -> ICMP LPAREN RECSTART icmpdetail RECEND RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production netparam -> ICMP LPAREN RECSTART icmpdetail RECEND RPAREN

State 435:
## Known stack suffix:
## LHSEND LPAREN netparam
## LR(1) items:
netcall -> LHSEND LPAREN netparam . RPAREN [ SC RPAREN ]
## Transitions:
-- On RPAREN shift to state 436
## Reductions:

State 436:
## Known stack suffix:
## LHSEND LPAREN netparam RPAREN
## LR(1) items:
netcall -> LHSEND LPAREN netparam RPAREN . [ SC RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production netcall -> LHSEND LPAREN netparam RPAREN

State 437:
## Known stack suffix:
## LHRETURN
## LR(1) items:
lib -> LHRETURN . LPAREN tid COMMA return RPAREN [ SC RPAREN ]
## Transitions:
-- On LPAREN shift to state 438
## Reductions:

State 438:
## Known stack suffix:
## LHRETURN LPAREN
## LR(1) items:
lib -> LHRETURN LPAREN . tid COMMA return RPAREN [ SC RPAREN ]
## Transitions:
-- On TID shift to state 439
-- On LPAREN shift to state 441
-- On tid shift to state 444
## Reductions:

State 439:
## Known stack suffix:
## TID
## LR(1) items:
tid -> TID . intr [ RPAREN COMMA ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 440
## Reductions:

State 440:
## Known stack suffix:
## TID intr
## LR(1) items:
tid -> TID intr . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tid -> TID intr

State 441:
## Known stack suffix:
## LPAREN
## LR(1) items:
tid -> LPAREN . tid RPAREN [ RPAREN COMMA ]
## Transitions:
-- On TID shift to state 439
-- On LPAREN shift to state 441
-- On tid shift to state 442
## Reductions:

State 442:
## Known stack suffix:
## LPAREN tid
## LR(1) items:
tid -> LPAREN tid . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 443
## Reductions:

State 443:
## Known stack suffix:
## LPAREN tid RPAREN
## LR(1) items:
tid -> LPAREN tid RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tid -> LPAREN tid RPAREN

State 444:
## Known stack suffix:
## LHRETURN LPAREN tid
## LR(1) items:
lib -> LHRETURN LPAREN tid . COMMA return RPAREN [ SC RPAREN ]
## Transitions:
-- On COMMA shift to state 445
## Reductions:

State 445:
## Known stack suffix:
## LHRETURN LPAREN tid COMMA
## LR(1) items:
lib -> LHRETURN LPAREN tid COMMA . return RPAREN [ SC RPAREN ]
## Transitions:
-- On LPAREN shift to state 446
-- On LHOK shift to state 447
-- On LHFAIL shift to state 596
-- On returnok shift to state 682
-- On returnfail shift to state 683
-- On return shift to state 686
## Reductions:

State 446:
## Known stack suffix:
## LPAREN
## LR(1) items:
return -> LPAREN . return RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 446
-- On LHOK shift to state 447
-- On LHFAIL shift to state 596
-- On returnok shift to state 682
-- On returnfail shift to state 683
-- On return shift to state 684
## Reductions:

State 447:
## Known stack suffix:
## LHOK
## LR(1) items:
returnok -> LHOK . returnok_inner [ RPAREN ]
## Transitions:
-- On UNIT shift to state 448
-- On LPAREN shift to state 449
-- On returnok_inner shift to state 595
## Reductions:

State 448:
## Known stack suffix:
## UNIT
## LR(1) items:
returnok_inner -> UNIT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnok_inner -> UNIT

State 449:
## Known stack suffix:
## LPAREN
## LR(1) items:
returnok_inner -> LPAREN . fd RPAREN [ RPAREN ]
returnok_inner -> LPAREN . bool RPAREN [ RPAREN ]
returnok_inner -> LPAREN . intr RPAREN [ RPAREN ]
returnok_inner -> LPAREN . ip COMMA port RPAREN [ RPAREN ]
returnok_inner -> LPAREN . filebflaglist RPAREN [ RPAREN ]
returnok_inner -> LPAREN . fdlisttriple RPAREN [ RPAREN ]
returnok_inner -> LPAREN . stringr RPAREN [ RPAREN ]
returnok_inner -> LPAREN . fdipport RPAREN [ RPAREN ]
returnok_inner -> LPAREN . NONE COMMA portoption RPAREN [ RPAREN ]
returnok_inner -> LPAREN . SOME ip COMMA portoption RPAREN [ RPAREN ]
returnok_inner -> LPAREN . NONE RPAREN [ RPAREN ]
returnok_inner -> LPAREN . SOME intpair RPAREN [ RPAREN ]
returnok_inner -> LPAREN . stringr COMMA ipportboolop RPAREN [ RPAREN ]
returnok_inner -> LPAREN . interfacelist RPAREN [ RPAREN ]
## Transitions:
-- On TRUE shift to state 294
-- On STRING shift to state 11
-- On SOME shift to state 450
-- On NONE shift to state 464
-- On MINUS shift to state 2
-- On LSQBRKT shift to state 469
-- On LPAREN shift to state 528
-- On IP shift to state 53
-- On INT shift to state 5
-- On FD shift to state 477
-- On FALSE shift to state 296
-- On stringr shift to state 553
-- On ip shift to state 577
-- On intr shift to state 581
-- On interfacelist shift to state 583
-- On filebflaglist shift to state 585
-- On fdlisttriple shift to state 587
-- On fdlist shift to state 535
-- On fdipport shift to state 589
-- On fd shift to state 591
-- On bool shift to state 593
## Reductions:

State 450:
## Known stack suffix:
## LPAREN SOME
## LR(1) items:
returnok_inner -> LPAREN SOME . ip COMMA portoption RPAREN [ RPAREN ]
returnok_inner -> LPAREN SOME . intpair RPAREN [ RPAREN ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 451
-- On IP shift to state 53
-- On INT shift to state 5
-- On ip shift to state 457
-- On intr shift to state 461
-- On intpair shift to state 462
## Reductions:

State 451:
## Known stack suffix:
## LPAREN
## LR(1) items:
intpair -> LPAREN . intpair RPAREN [ RPAREN ]
intr -> LPAREN . intr RPAREN [ RPAREN COMMA ]
ip -> LPAREN . ip RPAREN [ RPAREN COMMA ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 451
-- On IP shift to state 53
-- On INT shift to state 5
-- On ip shift to state 62
-- On intr shift to state 452
-- On intpair shift to state 455
## Reductions:

State 452:
## Known stack suffix:
## LPAREN intr
## LR(1) items:
intpair -> intr . COMMA intr [ RPAREN ]
intr -> LPAREN intr . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 7
-- On COMMA shift to state 453
## Reductions:

State 453:
## Known stack suffix:
## intr COMMA
## LR(1) items:
intpair -> intr COMMA . intr [ RPAREN COMMA ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 454
## Reductions:

State 454:
## Known stack suffix:
## intr COMMA intr
## LR(1) items:
intpair -> intr COMMA intr . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production intpair -> intr COMMA intr

State 455:
## Known stack suffix:
## LPAREN intpair
## LR(1) items:
intpair -> LPAREN intpair . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 456
## Reductions:

State 456:
## Known stack suffix:
## LPAREN intpair RPAREN
## LR(1) items:
intpair -> LPAREN intpair RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production intpair -> LPAREN intpair RPAREN

State 457:
## Known stack suffix:
## LPAREN SOME ip
## LR(1) items:
returnok_inner -> LPAREN SOME ip . COMMA portoption RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 458
## Reductions:

State 458:
## Known stack suffix:
## LPAREN SOME ip COMMA
## LR(1) items:
returnok_inner -> LPAREN SOME ip COMMA . portoption RPAREN [ RPAREN ]
## Transitions:
-- On SOME shift to state 72
-- On NONE shift to state 79
-- On LPAREN shift to state 80
-- On portoption shift to state 459
## Reductions:

State 459:
## Known stack suffix:
## LPAREN SOME ip COMMA portoption
## LR(1) items:
returnok_inner -> LPAREN SOME ip COMMA portoption . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 460
## Reductions:

State 460:
## Known stack suffix:
## LPAREN SOME ip COMMA portoption RPAREN
## LR(1) items:
returnok_inner -> LPAREN SOME ip COMMA portoption RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnok_inner -> LPAREN SOME ip COMMA portoption RPAREN

State 461:
## Known stack suffix:
## intr
## LR(1) items:
intpair -> intr . COMMA intr [ RPAREN COMMA ]
## Transitions:
-- On COMMA shift to state 453
## Reductions:

State 462:
## Known stack suffix:
## LPAREN SOME intpair
## LR(1) items:
returnok_inner -> LPAREN SOME intpair . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 463
## Reductions:

State 463:
## Known stack suffix:
## LPAREN SOME intpair RPAREN
## LR(1) items:
returnok_inner -> LPAREN SOME intpair RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnok_inner -> LPAREN SOME intpair RPAREN

State 464:
## Known stack suffix:
## LPAREN NONE
## LR(1) items:
returnok_inner -> LPAREN NONE . COMMA portoption RPAREN [ RPAREN ]
returnok_inner -> LPAREN NONE . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 465
-- On COMMA shift to state 466
## Reductions:

State 465:
## Known stack suffix:
## LPAREN NONE RPAREN
## LR(1) items:
returnok_inner -> LPAREN NONE RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnok_inner -> LPAREN NONE RPAREN

State 466:
## Known stack suffix:
## LPAREN NONE COMMA
## LR(1) items:
returnok_inner -> LPAREN NONE COMMA . portoption RPAREN [ RPAREN ]
## Transitions:
-- On SOME shift to state 72
-- On NONE shift to state 79
-- On LPAREN shift to state 80
-- On portoption shift to state 467
## Reductions:

State 467:
## Known stack suffix:
## LPAREN NONE COMMA portoption
## LR(1) items:
returnok_inner -> LPAREN NONE COMMA portoption . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 468
## Reductions:

State 468:
## Known stack suffix:
## LPAREN NONE COMMA portoption RPAREN
## LR(1) items:
returnok_inner -> LPAREN NONE COMMA portoption RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnok_inner -> LPAREN NONE COMMA portoption RPAREN

State 469:
## Known stack suffix:
## LSQBRKT
## LR(1) items:
fdlist -> LSQBRKT . fdlisth RSQBRKT [ COMMA ]
fdlist -> LSQBRKT . RSQBRKT [ COMMA ]
filebflaglist -> LSQBRKT . filebflaglisth RSQBRKT [ RPAREN ]
filebflaglist -> LSQBRKT . RSQBRKT [ RPAREN ]
interfacelist -> LSQBRKT . interfacelisth RSQBRKT [ RPAREN ]
## Transitions:
-- On TO_NONBLOCK shift to state 470
-- On TO_ASYNC shift to state 471
-- On RSQBRKT shift to state 472
-- On LPAREN shift to state 473
-- On FD shift to state 477
-- On interfacelisth shift to state 509
-- On interface shift to state 515
-- On filebflaglisth shift to state 516
-- On filebflag shift to state 521
-- On fdlisth shift to state 522
-- On fd shift to state 527
## Reductions:

State 470:
## Known stack suffix:
## TO_NONBLOCK
## LR(1) items:
filebflag -> TO_NONBLOCK . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production filebflag -> TO_NONBLOCK

State 471:
## Known stack suffix:
## TO_ASYNC
## LR(1) items:
filebflag -> TO_ASYNC . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production filebflag -> TO_ASYNC

State 472:
## Known stack suffix:
## LSQBRKT RSQBRKT
## LR(1) items:
fdlist -> LSQBRKT RSQBRKT . [ COMMA ]
filebflaglist -> LSQBRKT RSQBRKT . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN reduce production filebflaglist -> LSQBRKT RSQBRKT
-- On COMMA reduce production fdlist -> LSQBRKT RSQBRKT

State 473:
## Known stack suffix:
## LPAREN
## LR(1) items:
fd -> LPAREN . fd RPAREN [ SC RSQBRKT ]
filebflag -> LPAREN . filebflag RPAREN [ SC RSQBRKT ]
interface -> LPAREN . ifid COMMA ip COMMA iplist COMMA netmask RPAREN [ SC RSQBRKT ]
## Transitions:
-- On TO_NONBLOCK shift to state 470
-- On TO_ASYNC shift to state 471
-- On LPAREN shift to state 474
-- On IFID shift to state 475
-- On FD shift to state 477
-- On ifid shift to state 485
-- On filebflag shift to state 481
-- On fd shift to state 483
## Reductions:

State 474:
## Known stack suffix:
## LPAREN
## LR(1) items:
fd -> LPAREN . fd RPAREN [ RPAREN ]
filebflag -> LPAREN . filebflag RPAREN [ RPAREN ]
ifid -> LPAREN . ifid RPAREN [ RPAREN COMMA ]
## Transitions:
-- On TO_NONBLOCK shift to state 470
-- On TO_ASYNC shift to state 471
-- On LPAREN shift to state 474
-- On IFID shift to state 475
-- On FD shift to state 477
-- On ifid shift to state 479
-- On filebflag shift to state 481
-- On fd shift to state 483
## Reductions:

State 475:
## Known stack suffix:
## IFID
## LR(1) items:
ifid -> IFID . IDENT [ RPAREN COMMA ]
## Transitions:
-- On IDENT shift to state 476
## Reductions:

State 476:
## Known stack suffix:
## IFID IDENT
## LR(1) items:
ifid -> IFID IDENT . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ifid -> IFID IDENT

State 477:
## Known stack suffix:
## FD
## LR(1) items:
fd -> FD . intr [ SC RSQBRKT RPAREN COMMA ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 478
## Reductions:

State 478:
## Known stack suffix:
## FD intr
## LR(1) items:
fd -> FD intr . [ SC RSQBRKT RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fd -> FD intr

State 479:
## Known stack suffix:
## LPAREN ifid
## LR(1) items:
ifid -> LPAREN ifid . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 480
## Reductions:

State 480:
## Known stack suffix:
## LPAREN ifid RPAREN
## LR(1) items:
ifid -> LPAREN ifid RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ifid -> LPAREN ifid RPAREN

State 481:
## Known stack suffix:
## LPAREN filebflag
## LR(1) items:
filebflag -> LPAREN filebflag . RPAREN [ SC RSQBRKT RPAREN ]
## Transitions:
-- On RPAREN shift to state 482
## Reductions:

State 482:
## Known stack suffix:
## LPAREN filebflag RPAREN
## LR(1) items:
filebflag -> LPAREN filebflag RPAREN . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production filebflag -> LPAREN filebflag RPAREN

State 483:
## Known stack suffix:
## LPAREN fd
## LR(1) items:
fd -> LPAREN fd . RPAREN [ SC RSQBRKT RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 484
## Reductions:

State 484:
## Known stack suffix:
## LPAREN fd RPAREN
## LR(1) items:
fd -> LPAREN fd RPAREN . [ SC RSQBRKT RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fd -> LPAREN fd RPAREN

State 485:
## Known stack suffix:
## LPAREN ifid
## LR(1) items:
interface -> LPAREN ifid . COMMA ip COMMA iplist COMMA netmask RPAREN [ SC RSQBRKT ]
## Transitions:
-- On COMMA shift to state 486
## Reductions:

State 486:
## Known stack suffix:
## LPAREN ifid COMMA
## LR(1) items:
interface -> LPAREN ifid COMMA . ip COMMA iplist COMMA netmask RPAREN [ SC RSQBRKT ]
## Transitions:
-- On LPAREN shift to state 52
-- On IP shift to state 53
-- On ip shift to state 487
## Reductions:

State 487:
## Known stack suffix:
## LPAREN ifid COMMA ip
## LR(1) items:
interface -> LPAREN ifid COMMA ip . COMMA iplist COMMA netmask RPAREN [ SC RSQBRKT ]
## Transitions:
-- On COMMA shift to state 488
## Reductions:

State 488:
## Known stack suffix:
## LPAREN ifid COMMA ip COMMA
## LR(1) items:
interface -> LPAREN ifid COMMA ip COMMA . iplist COMMA netmask RPAREN [ SC RSQBRKT ]
## Transitions:
-- On LSQBRKT shift to state 489
-- On iplist shift to state 496
## Reductions:

State 489:
## Known stack suffix:
## LSQBRKT
## LR(1) items:
iplist -> LSQBRKT . ips RSQBRKT [ COMMA ]
iplist -> LSQBRKT . RSQBRKT [ COMMA ]
## Transitions:
-- On RSQBRKT shift to state 490
-- On LPAREN shift to state 52
-- On IP shift to state 53
-- On ips shift to state 491
-- On ip shift to state 493
## Reductions:

State 490:
## Known stack suffix:
## LSQBRKT RSQBRKT
## LR(1) items:
iplist -> LSQBRKT RSQBRKT . [ COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iplist -> LSQBRKT RSQBRKT

State 491:
## Known stack suffix:
## LSQBRKT ips
## LR(1) items:
iplist -> LSQBRKT ips . RSQBRKT [ COMMA ]
## Transitions:
-- On RSQBRKT shift to state 492
## Reductions:

State 492:
## Known stack suffix:
## LSQBRKT ips RSQBRKT
## LR(1) items:
iplist -> LSQBRKT ips RSQBRKT . [ COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iplist -> LSQBRKT ips RSQBRKT

State 493:
## Known stack suffix:
## ip
## LR(1) items:
ips -> ip . [ RSQBRKT ]
ips -> ip . SC ips [ RSQBRKT ]
## Transitions:
-- On SC shift to state 494
## Reductions:
-- On RSQBRKT reduce production ips -> ip

State 494:
## Known stack suffix:
## ip SC
## LR(1) items:
ips -> ip SC . ips [ RSQBRKT ]
## Transitions:
-- On LPAREN shift to state 52
-- On IP shift to state 53
-- On ips shift to state 495
-- On ip shift to state 493
## Reductions:

State 495:
## Known stack suffix:
## ip SC ips
## LR(1) items:
ips -> ip SC ips . [ RSQBRKT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ips -> ip SC ips

State 496:
## Known stack suffix:
## LPAREN ifid COMMA ip COMMA iplist
## LR(1) items:
interface -> LPAREN ifid COMMA ip COMMA iplist . COMMA netmask RPAREN [ SC RSQBRKT ]
## Transitions:
-- On COMMA shift to state 497
## Reductions:

State 497:
## Known stack suffix:
## LPAREN ifid COMMA ip COMMA iplist COMMA
## LR(1) items:
interface -> LPAREN ifid COMMA ip COMMA iplist COMMA . netmask RPAREN [ SC RSQBRKT ]
## Transitions:
-- On NETMASK shift to state 498
-- On LPAREN shift to state 504
-- On netmask shift to state 507
## Reductions:

State 498:
## Known stack suffix:
## NETMASK
## LR(1) items:
netmask -> NETMASK . netmaskaddr [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 499
-- On INT shift to state 500
-- On netmaskaddr shift to state 503
## Reductions:

State 499:
## Known stack suffix:
## LPAREN
## LR(1) items:
netmaskaddr -> LPAREN . netmaskaddr RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 499
-- On INT shift to state 500
-- On netmaskaddr shift to state 501
## Reductions:

State 500:
## Known stack suffix:
## INT
## LR(1) items:
netmaskaddr -> INT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production netmaskaddr -> INT

State 501:
## Known stack suffix:
## LPAREN netmaskaddr
## LR(1) items:
netmaskaddr -> LPAREN netmaskaddr . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 502
## Reductions:

State 502:
## Known stack suffix:
## LPAREN netmaskaddr RPAREN
## LR(1) items:
netmaskaddr -> LPAREN netmaskaddr RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production netmaskaddr -> LPAREN netmaskaddr RPAREN

State 503:
## Known stack suffix:
## NETMASK netmaskaddr
## LR(1) items:
netmask -> NETMASK netmaskaddr . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production netmask -> NETMASK netmaskaddr

State 504:
## Known stack suffix:
## LPAREN
## LR(1) items:
netmask -> LPAREN . netmask RPAREN [ RPAREN ]
## Transitions:
-- On NETMASK shift to state 498
-- On LPAREN shift to state 504
-- On netmask shift to state 505
## Reductions:

State 505:
## Known stack suffix:
## LPAREN netmask
## LR(1) items:
netmask -> LPAREN netmask . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 506
## Reductions:

State 506:
## Known stack suffix:
## LPAREN netmask RPAREN
## LR(1) items:
netmask -> LPAREN netmask RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production netmask -> LPAREN netmask RPAREN

State 507:
## Known stack suffix:
## LPAREN ifid COMMA ip COMMA iplist COMMA netmask
## LR(1) items:
interface -> LPAREN ifid COMMA ip COMMA iplist COMMA netmask . RPAREN [ SC RSQBRKT ]
## Transitions:
-- On RPAREN shift to state 508
## Reductions:

State 508:
## Known stack suffix:
## LPAREN ifid COMMA ip COMMA iplist COMMA netmask RPAREN
## LR(1) items:
interface -> LPAREN ifid COMMA ip COMMA iplist COMMA netmask RPAREN . [ SC RSQBRKT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface -> LPAREN ifid COMMA ip COMMA iplist COMMA netmask RPAREN

State 509:
## Known stack suffix:
## LSQBRKT interfacelisth
## LR(1) items:
interfacelist -> LSQBRKT interfacelisth . RSQBRKT [ RPAREN ]
interfacelisth -> interfacelisth . SC interface [ SC RSQBRKT ]
## Transitions:
-- On SC shift to state 510
-- On RSQBRKT shift to state 514
## Reductions:

State 510:
## Known stack suffix:
## interfacelisth SC
## LR(1) items:
interfacelisth -> interfacelisth SC . interface [ SC RSQBRKT ]
## Transitions:
-- On LPAREN shift to state 511
-- On interface shift to state 513
## Reductions:

State 511:
## Known stack suffix:
## LPAREN
## LR(1) items:
interface -> LPAREN . ifid COMMA ip COMMA iplist COMMA netmask RPAREN [ SC RSQBRKT ]
## Transitions:
-- On LPAREN shift to state 512
-- On IFID shift to state 475
-- On ifid shift to state 485
## Reductions:

State 512:
## Known stack suffix:
## LPAREN
## LR(1) items:
ifid -> LPAREN . ifid RPAREN [ RPAREN COMMA ]
## Transitions:
-- On LPAREN shift to state 512
-- On IFID shift to state 475
-- On ifid shift to state 479
## Reductions:

State 513:
## Known stack suffix:
## interfacelisth SC interface
## LR(1) items:
interfacelisth -> interfacelisth SC interface . [ SC RSQBRKT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interfacelisth -> interfacelisth SC interface

State 514:
## Known stack suffix:
## LSQBRKT interfacelisth RSQBRKT
## LR(1) items:
interfacelist -> LSQBRKT interfacelisth RSQBRKT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interfacelist -> LSQBRKT interfacelisth RSQBRKT

State 515:
## Known stack suffix:
## interface
## LR(1) items:
interfacelisth -> interface . [ SC RSQBRKT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interfacelisth -> interface

State 516:
## Known stack suffix:
## LSQBRKT filebflaglisth
## LR(1) items:
filebflaglist -> LSQBRKT filebflaglisth . RSQBRKT [ RPAREN ]
filebflaglisth -> filebflaglisth . SC filebflag [ SC RSQBRKT ]
## Transitions:
-- On SC shift to state 517
-- On RSQBRKT shift to state 520
## Reductions:

State 517:
## Known stack suffix:
## filebflaglisth SC
## LR(1) items:
filebflaglisth -> filebflaglisth SC . filebflag [ SC RSQBRKT ]
## Transitions:
-- On TO_NONBLOCK shift to state 470
-- On TO_ASYNC shift to state 471
-- On LPAREN shift to state 518
-- On filebflag shift to state 519
## Reductions:

State 518:
## Known stack suffix:
## LPAREN
## LR(1) items:
filebflag -> LPAREN . filebflag RPAREN [ SC RSQBRKT RPAREN ]
## Transitions:
-- On TO_NONBLOCK shift to state 470
-- On TO_ASYNC shift to state 471
-- On LPAREN shift to state 518
-- On filebflag shift to state 481
## Reductions:

State 519:
## Known stack suffix:
## filebflaglisth SC filebflag
## LR(1) items:
filebflaglisth -> filebflaglisth SC filebflag . [ SC RSQBRKT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production filebflaglisth -> filebflaglisth SC filebflag

State 520:
## Known stack suffix:
## LSQBRKT filebflaglisth RSQBRKT
## LR(1) items:
filebflaglist -> LSQBRKT filebflaglisth RSQBRKT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production filebflaglist -> LSQBRKT filebflaglisth RSQBRKT

State 521:
## Known stack suffix:
## filebflag
## LR(1) items:
filebflaglisth -> filebflag . [ SC RSQBRKT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production filebflaglisth -> filebflag

State 522:
## Known stack suffix:
## LSQBRKT fdlisth
## LR(1) items:
fdlist -> LSQBRKT fdlisth . RSQBRKT [ RPAREN COMMA ]
fdlisth -> fdlisth . SC fd [ SC RSQBRKT ]
## Transitions:
-- On SC shift to state 523
-- On RSQBRKT shift to state 526
## Reductions:

State 523:
## Known stack suffix:
## fdlisth SC
## LR(1) items:
fdlisth -> fdlisth SC . fd [ SC RSQBRKT ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 525
## Reductions:

State 524:
## Known stack suffix:
## LPAREN
## LR(1) items:
fd -> LPAREN . fd RPAREN [ SC RSQBRKT RPAREN COMMA ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 483
## Reductions:

State 525:
## Known stack suffix:
## fdlisth SC fd
## LR(1) items:
fdlisth -> fdlisth SC fd . [ SC RSQBRKT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fdlisth -> fdlisth SC fd

State 526:
## Known stack suffix:
## LSQBRKT fdlisth RSQBRKT
## LR(1) items:
fdlist -> LSQBRKT fdlisth RSQBRKT . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fdlist -> LSQBRKT fdlisth RSQBRKT

State 527:
## Known stack suffix:
## fd
## LR(1) items:
fdlisth -> fd . [ SC RSQBRKT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fdlisth -> fd

State 528:
## Known stack suffix:
## LPAREN
## LR(1) items:
bool -> LPAREN . bool RPAREN [ RPAREN ]
fd -> LPAREN . fd RPAREN [ RPAREN COMMA ]
fdipport -> LPAREN . fdipport RPAREN [ RPAREN ]
fdlisttriple -> LPAREN . fdlisttriple RPAREN [ RPAREN ]
filebflaglist -> LPAREN . filebflaglist RPAREN [ RPAREN ]
interfacelist -> LPAREN . interfacelist RPAREN [ RPAREN ]
intr -> LPAREN . intr RPAREN [ RPAREN ]
ip -> LPAREN . ip RPAREN [ RPAREN COMMA ]
stringr -> LPAREN . stringr RPAREN [ RPAREN COMMA ]
## Transitions:
-- On TRUE shift to state 294
-- On STRING shift to state 11
-- On MINUS shift to state 2
-- On LSQBRKT shift to state 469
-- On LPAREN shift to state 528
-- On IP shift to state 53
-- On INT shift to state 5
-- On FD shift to state 477
-- On FALSE shift to state 296
-- On stringr shift to state 13
-- On ip shift to state 62
-- On intr shift to state 6
-- On interfacelist shift to state 529
-- On filebflaglist shift to state 531
-- On fdlisttriple shift to state 533
-- On fdlist shift to state 535
-- On fdipport shift to state 544
-- On fd shift to state 546
-- On bool shift to state 297
## Reductions:

State 529:
## Known stack suffix:
## LPAREN interfacelist
## LR(1) items:
interfacelist -> LPAREN interfacelist . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 530
## Reductions:

State 530:
## Known stack suffix:
## LPAREN interfacelist RPAREN
## LR(1) items:
interfacelist -> LPAREN interfacelist RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interfacelist -> LPAREN interfacelist RPAREN

State 531:
## Known stack suffix:
## LPAREN filebflaglist
## LR(1) items:
filebflaglist -> LPAREN filebflaglist . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 532
## Reductions:

State 532:
## Known stack suffix:
## LPAREN filebflaglist RPAREN
## LR(1) items:
filebflaglist -> LPAREN filebflaglist RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production filebflaglist -> LPAREN filebflaglist RPAREN

State 533:
## Known stack suffix:
## LPAREN fdlisttriple
## LR(1) items:
fdlisttriple -> LPAREN fdlisttriple . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 534
## Reductions:

State 534:
## Known stack suffix:
## LPAREN fdlisttriple RPAREN
## LR(1) items:
fdlisttriple -> LPAREN fdlisttriple RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fdlisttriple -> LPAREN fdlisttriple RPAREN

State 535:
## Known stack suffix:
## fdlist
## LR(1) items:
fdlisttriple -> fdlist . COMMA LPAREN fdlist COMMA fdlist RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 536
## Reductions:

State 536:
## Known stack suffix:
## fdlist COMMA
## LR(1) items:
fdlisttriple -> fdlist COMMA . LPAREN fdlist COMMA fdlist RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 537
## Reductions:

State 537:
## Known stack suffix:
## fdlist COMMA LPAREN
## LR(1) items:
fdlisttriple -> fdlist COMMA LPAREN . fdlist COMMA fdlist RPAREN [ RPAREN ]
## Transitions:
-- On LSQBRKT shift to state 538
-- On fdlist shift to state 540
## Reductions:

State 538:
## Known stack suffix:
## LSQBRKT
## LR(1) items:
fdlist -> LSQBRKT . fdlisth RSQBRKT [ RPAREN COMMA ]
fdlist -> LSQBRKT . RSQBRKT [ RPAREN COMMA ]
## Transitions:
-- On RSQBRKT shift to state 539
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fdlisth shift to state 522
-- On fd shift to state 527
## Reductions:

State 539:
## Known stack suffix:
## LSQBRKT RSQBRKT
## LR(1) items:
fdlist -> LSQBRKT RSQBRKT . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fdlist -> LSQBRKT RSQBRKT

State 540:
## Known stack suffix:
## fdlist COMMA LPAREN fdlist
## LR(1) items:
fdlisttriple -> fdlist COMMA LPAREN fdlist . COMMA fdlist RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 541
## Reductions:

State 541:
## Known stack suffix:
## fdlist COMMA LPAREN fdlist COMMA
## LR(1) items:
fdlisttriple -> fdlist COMMA LPAREN fdlist COMMA . fdlist RPAREN [ RPAREN ]
## Transitions:
-- On LSQBRKT shift to state 538
-- On fdlist shift to state 542
## Reductions:

State 542:
## Known stack suffix:
## fdlist COMMA LPAREN fdlist COMMA fdlist
## LR(1) items:
fdlisttriple -> fdlist COMMA LPAREN fdlist COMMA fdlist . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 543
## Reductions:

State 543:
## Known stack suffix:
## fdlist COMMA LPAREN fdlist COMMA fdlist RPAREN
## LR(1) items:
fdlisttriple -> fdlist COMMA LPAREN fdlist COMMA fdlist RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fdlisttriple -> fdlist COMMA LPAREN fdlist COMMA fdlist RPAREN

State 544:
## Known stack suffix:
## LPAREN fdipport
## LR(1) items:
fdipport -> LPAREN fdipport . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 545
## Reductions:

State 545:
## Known stack suffix:
## LPAREN fdipport RPAREN
## LR(1) items:
fdipport -> LPAREN fdipport RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fdipport -> LPAREN fdipport RPAREN

State 546:
## Known stack suffix:
## LPAREN fd
## LR(1) items:
fd -> LPAREN fd . RPAREN [ RPAREN COMMA ]
fdipport -> fd . COMMA LPAREN ip COMMA port RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 484
-- On COMMA shift to state 547
## Reductions:

State 547:
## Known stack suffix:
## fd COMMA
## LR(1) items:
fdipport -> fd COMMA . LPAREN ip COMMA port RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 548
## Reductions:

State 548:
## Known stack suffix:
## fd COMMA LPAREN
## LR(1) items:
fdipport -> fd COMMA LPAREN . ip COMMA port RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 52
-- On IP shift to state 53
-- On ip shift to state 549
## Reductions:

State 549:
## Known stack suffix:
## fd COMMA LPAREN ip
## LR(1) items:
fdipport -> fd COMMA LPAREN ip . COMMA port RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 550
## Reductions:

State 550:
## Known stack suffix:
## fd COMMA LPAREN ip COMMA
## LR(1) items:
fdipport -> fd COMMA LPAREN ip COMMA . port RPAREN [ RPAREN ]
## Transitions:
-- On PORT shift to state 73
-- On LPAREN shift to state 75
-- On port shift to state 551
## Reductions:

State 551:
## Known stack suffix:
## fd COMMA LPAREN ip COMMA port
## LR(1) items:
fdipport -> fd COMMA LPAREN ip COMMA port . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 552
## Reductions:

State 552:
## Known stack suffix:
## fd COMMA LPAREN ip COMMA port RPAREN
## LR(1) items:
fdipport -> fd COMMA LPAREN ip COMMA port RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fdipport -> fd COMMA LPAREN ip COMMA port RPAREN

State 553:
## Known stack suffix:
## LPAREN stringr
## LR(1) items:
returnok_inner -> LPAREN stringr . RPAREN [ RPAREN ]
returnok_inner -> LPAREN stringr . COMMA ipportboolop RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 554
-- On COMMA shift to state 555
## Reductions:

State 554:
## Known stack suffix:
## LPAREN stringr RPAREN
## LR(1) items:
returnok_inner -> LPAREN stringr RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnok_inner -> LPAREN stringr RPAREN

State 555:
## Known stack suffix:
## LPAREN stringr COMMA
## LR(1) items:
returnok_inner -> LPAREN stringr COMMA . ipportboolop RPAREN [ RPAREN ]
## Transitions:
-- On SOME shift to state 556
-- On NONE shift to state 571
-- On LPAREN shift to state 572
-- On ipportboolop shift to state 575
## Reductions:

State 556:
## Known stack suffix:
## SOME
## LR(1) items:
ipportboolop -> SOME . LPAREN ipport COMMA bool RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 557
## Reductions:

State 557:
## Known stack suffix:
## SOME LPAREN
## LR(1) items:
ipportboolop -> SOME LPAREN . ipport COMMA bool RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 558
-- On ipport shift to state 567
## Reductions:

State 558:
## Known stack suffix:
## LPAREN
## LR(1) items:
ipport -> LPAREN . ipport RPAREN [ COMMA ]
ipport -> LPAREN . ipoption COMMA portoption RPAREN [ COMMA ]
## Transitions:
-- On SOME shift to state 51
-- On NONE shift to state 65
-- On LPAREN shift to state 559
-- On ipport shift to state 560
-- On ipoption shift to state 566
## Reductions:

State 559:
## Known stack suffix:
## LPAREN
## LR(1) items:
ipoption -> LPAREN . ipoption RPAREN [ RPAREN COMMA ]
ipport -> LPAREN . ipport RPAREN [ RPAREN ]
ipport -> LPAREN . ipoption COMMA portoption RPAREN [ RPAREN ]
## Transitions:
-- On SOME shift to state 51
-- On NONE shift to state 65
-- On LPAREN shift to state 559
-- On ipport shift to state 560
-- On ipoption shift to state 562
## Reductions:

State 560:
## Known stack suffix:
## LPAREN ipport
## LR(1) items:
ipport -> LPAREN ipport . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 561
## Reductions:

State 561:
## Known stack suffix:
## LPAREN ipport RPAREN
## LR(1) items:
ipport -> LPAREN ipport RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ipport -> LPAREN ipport RPAREN

State 562:
## Known stack suffix:
## LPAREN ipoption
## LR(1) items:
ipoption -> LPAREN ipoption . RPAREN [ RPAREN COMMA ]
ipport -> LPAREN ipoption . COMMA portoption RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 70
-- On COMMA shift to state 563
## Reductions:

State 563:
## Known stack suffix:
## LPAREN ipoption COMMA
## LR(1) items:
ipport -> LPAREN ipoption COMMA . portoption RPAREN [ RPAREN COMMA ]
## Transitions:
-- On SOME shift to state 72
-- On NONE shift to state 79
-- On LPAREN shift to state 80
-- On portoption shift to state 564
## Reductions:

State 564:
## Known stack suffix:
## LPAREN ipoption COMMA portoption
## LR(1) items:
ipport -> LPAREN ipoption COMMA portoption . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 565
## Reductions:

State 565:
## Known stack suffix:
## LPAREN ipoption COMMA portoption RPAREN
## LR(1) items:
ipport -> LPAREN ipoption COMMA portoption RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ipport -> LPAREN ipoption COMMA portoption RPAREN

State 566:
## Known stack suffix:
## LPAREN ipoption
## LR(1) items:
ipport -> LPAREN ipoption . COMMA portoption RPAREN [ COMMA ]
## Transitions:
-- On COMMA shift to state 563
## Reductions:

State 567:
## Known stack suffix:
## SOME LPAREN ipport
## LR(1) items:
ipportboolop -> SOME LPAREN ipport . COMMA bool RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 568
## Reductions:

State 568:
## Known stack suffix:
## SOME LPAREN ipport COMMA
## LR(1) items:
ipportboolop -> SOME LPAREN ipport COMMA . bool RPAREN [ RPAREN ]
## Transitions:
-- On TRUE shift to state 294
-- On LPAREN shift to state 295
-- On FALSE shift to state 296
-- On bool shift to state 569
## Reductions:

State 569:
## Known stack suffix:
## SOME LPAREN ipport COMMA bool
## LR(1) items:
ipportboolop -> SOME LPAREN ipport COMMA bool . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 570
## Reductions:

State 570:
## Known stack suffix:
## SOME LPAREN ipport COMMA bool RPAREN
## LR(1) items:
ipportboolop -> SOME LPAREN ipport COMMA bool RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ipportboolop -> SOME LPAREN ipport COMMA bool RPAREN

State 571:
## Known stack suffix:
## NONE
## LR(1) items:
ipportboolop -> NONE . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ipportboolop -> NONE

State 572:
## Known stack suffix:
## LPAREN
## LR(1) items:
ipportboolop -> LPAREN . ipportboolop RPAREN [ RPAREN ]
## Transitions:
-- On SOME shift to state 556
-- On NONE shift to state 571
-- On LPAREN shift to state 572
-- On ipportboolop shift to state 573
## Reductions:

State 573:
## Known stack suffix:
## LPAREN ipportboolop
## LR(1) items:
ipportboolop -> LPAREN ipportboolop . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 574
## Reductions:

State 574:
## Known stack suffix:
## LPAREN ipportboolop RPAREN
## LR(1) items:
ipportboolop -> LPAREN ipportboolop RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ipportboolop -> LPAREN ipportboolop RPAREN

State 575:
## Known stack suffix:
## LPAREN stringr COMMA ipportboolop
## LR(1) items:
returnok_inner -> LPAREN stringr COMMA ipportboolop . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 576
## Reductions:

State 576:
## Known stack suffix:
## LPAREN stringr COMMA ipportboolop RPAREN
## LR(1) items:
returnok_inner -> LPAREN stringr COMMA ipportboolop RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnok_inner -> LPAREN stringr COMMA ipportboolop RPAREN

State 577:
## Known stack suffix:
## LPAREN ip
## LR(1) items:
returnok_inner -> LPAREN ip . COMMA port RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 578
## Reductions:

State 578:
## Known stack suffix:
## LPAREN ip COMMA
## LR(1) items:
returnok_inner -> LPAREN ip COMMA . port RPAREN [ RPAREN ]
## Transitions:
-- On PORT shift to state 73
-- On LPAREN shift to state 75
-- On port shift to state 579
## Reductions:

State 579:
## Known stack suffix:
## LPAREN ip COMMA port
## LR(1) items:
returnok_inner -> LPAREN ip COMMA port . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 580
## Reductions:

State 580:
## Known stack suffix:
## LPAREN ip COMMA port RPAREN
## LR(1) items:
returnok_inner -> LPAREN ip COMMA port RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnok_inner -> LPAREN ip COMMA port RPAREN

State 581:
## Known stack suffix:
## LPAREN intr
## LR(1) items:
returnok_inner -> LPAREN intr . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 582
## Reductions:

State 582:
## Known stack suffix:
## LPAREN intr RPAREN
## LR(1) items:
returnok_inner -> LPAREN intr RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnok_inner -> LPAREN intr RPAREN

State 583:
## Known stack suffix:
## LPAREN interfacelist
## LR(1) items:
returnok_inner -> LPAREN interfacelist . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 584
## Reductions:

State 584:
## Known stack suffix:
## LPAREN interfacelist RPAREN
## LR(1) items:
returnok_inner -> LPAREN interfacelist RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnok_inner -> LPAREN interfacelist RPAREN

State 585:
## Known stack suffix:
## LPAREN filebflaglist
## LR(1) items:
returnok_inner -> LPAREN filebflaglist . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 586
## Reductions:

State 586:
## Known stack suffix:
## LPAREN filebflaglist RPAREN
## LR(1) items:
returnok_inner -> LPAREN filebflaglist RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnok_inner -> LPAREN filebflaglist RPAREN

State 587:
## Known stack suffix:
## LPAREN fdlisttriple
## LR(1) items:
returnok_inner -> LPAREN fdlisttriple . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 588
## Reductions:

State 588:
## Known stack suffix:
## LPAREN fdlisttriple RPAREN
## LR(1) items:
returnok_inner -> LPAREN fdlisttriple RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnok_inner -> LPAREN fdlisttriple RPAREN

State 589:
## Known stack suffix:
## LPAREN fdipport
## LR(1) items:
returnok_inner -> LPAREN fdipport . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 590
## Reductions:

State 590:
## Known stack suffix:
## LPAREN fdipport RPAREN
## LR(1) items:
returnok_inner -> LPAREN fdipport RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnok_inner -> LPAREN fdipport RPAREN

State 591:
## Known stack suffix:
## LPAREN fd
## LR(1) items:
fdipport -> fd . COMMA LPAREN ip COMMA port RPAREN [ RPAREN ]
returnok_inner -> LPAREN fd . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 592
-- On COMMA shift to state 547
## Reductions:

State 592:
## Known stack suffix:
## LPAREN fd RPAREN
## LR(1) items:
returnok_inner -> LPAREN fd RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnok_inner -> LPAREN fd RPAREN

State 593:
## Known stack suffix:
## LPAREN bool
## LR(1) items:
returnok_inner -> LPAREN bool . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 594
## Reductions:

State 594:
## Known stack suffix:
## LPAREN bool RPAREN
## LR(1) items:
returnok_inner -> LPAREN bool RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnok_inner -> LPAREN bool RPAREN

State 595:
## Known stack suffix:
## LHOK returnok_inner
## LR(1) items:
returnok -> LHOK returnok_inner . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnok -> LHOK returnok_inner

State 596:
## Known stack suffix:
## LHFAIL
## LR(1) items:
returnfail -> LHFAIL . LPAREN unixerror RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 597
## Reductions:

State 597:
## Known stack suffix:
## LHFAIL LPAREN
## LR(1) items:
returnfail -> LHFAIL LPAREN . unixerror RPAREN [ RPAREN ]
## Transitions:
-- On T_ERR_EXDEV shift to state 598
-- On T_ERR_EWOULDBLOCK shift to state 599
-- On T_ERR_EUNKNOWN_UNIX_ERROR shift to state 600
-- On T_ERR_ETXTBSY shift to state 601
-- On T_ERR_ETIMEDOUT shift to state 602
-- On T_ERR_ETIME shift to state 603
-- On T_ERR_ESTALE shift to state 604
-- On T_ERR_ESRCH shift to state 605
-- On T_ERR_ESPIPE shift to state 606
-- On T_ERR_ESHUTDOWN shift to state 607
-- On T_ERR_EROFS shift to state 608
-- On T_ERR_ERANGE shift to state 609
-- On T_ERR_EPROTOTYPE shift to state 610
-- On T_ERR_EPROTONOSUPPORT shift to state 611
-- On T_ERR_EPROTO shift to state 612
-- On T_ERR_EPIPE shift to state 613
-- On T_ERR_EPERM shift to state 614
-- On T_ERR_EOVERFLOW shift to state 615
-- On T_ERR_EOPNOTSUPP shift to state 616
-- On T_ERR_ENXIO shift to state 617
-- On T_ERR_ENOTTY shift to state 618
-- On T_ERR_ENOTSUP shift to state 619
-- On T_ERR_ENOTSOCK shift to state 620
-- On T_ERR_ENOTEMPTY shift to state 621
-- On T_ERR_ENOTDIR shift to state 622
-- On T_ERR_ENOTCONN shift to state 623
-- On T_ERR_ENOSYS shift to state 624
-- On T_ERR_ENOSTR shift to state 625
-- On T_ERR_ENOSR shift to state 626
-- On T_ERR_ENOSPC shift to state 627
-- On T_ERR_ENOPROTOOPT shift to state 628
-- On T_ERR_ENOMSG shift to state 629
-- On T_ERR_ENOMEM shift to state 630
-- On T_ERR_ENOLINK shift to state 631
-- On T_ERR_ENOLCK shift to state 632
-- On T_ERR_ENOEXEC shift to state 633
-- On T_ERR_ENOENT shift to state 634
-- On T_ERR_ENODEV shift to state 635
-- On T_ERR_ENODATA shift to state 636
-- On T_ERR_ENOBUFS shift to state 637
-- On T_ERR_ENFILE shift to state 638
-- On T_ERR_ENETUNREACH shift to state 639
-- On T_ERR_ENETRESET shift to state 640
-- On T_ERR_ENETDOWN shift to state 641
-- On T_ERR_ENAMETOOLONG shift to state 642
-- On T_ERR_EMULTIHOP shift to state 643
-- On T_ERR_EMSGSIZE shift to state 644
-- On T_ERR_EMLINK shift to state 645
-- On T_ERR_EMFILE shift to state 646
-- On T_ERR_ELOOP shift to state 647
-- On T_ERR_EISDIR shift to state 648
-- On T_ERR_EISCONN shift to state 649
-- On T_ERR_EIO shift to state 650
-- On T_ERR_EINVAL shift to state 651
-- On T_ERR_EINTR shift to state 652
-- On T_ERR_EINPROGRESS shift to state 653
-- On T_ERR_EILSEQ shift to state 654
-- On T_ERR_EIDRM shift to state 655
-- On T_ERR_EHOSTUNREACH shift to state 656
-- On T_ERR_EHOSTDOWN shift to state 657
-- On T_ERR_EFBIG shift to state 658
-- On T_ERR_EFAULT shift to state 659
-- On T_ERR_EEXIST shift to state 660
-- On T_ERR_EDQUOT shift to state 661
-- On T_ERR_EDOM shift to state 662
-- On T_ERR_EDESTADDRREQ shift to state 663
-- On T_ERR_EDEADLK shift to state 664
-- On T_ERR_ECONNRESET shift to state 665
-- On T_ERR_ECONNREFUSED shift to state 666
-- On T_ERR_ECONNABORTED shift to state 667
-- On T_ERR_ECHILD shift to state 668
-- On T_ERR_ECANCELED shift to state 669
-- On T_ERR_EBUSY shift to state 670
-- On T_ERR_EBADMSG shift to state 671
-- On T_ERR_EBADF shift to state 672
-- On T_ERR_EALREADY shift to state 673
-- On T_ERR_EAGAIN shift to state 674
-- On T_ERR_EAFNOSUPPORT shift to state 675
-- On T_ERR_EADDRNOTAVAIL shift to state 676
-- On T_ERR_EADDRINUSE shift to state 677
-- On T_ERR_EACCES shift to state 678
-- On T_ERR_E2BIG shift to state 679
-- On unixerror shift to state 680
## Reductions:

State 598:
## Known stack suffix:
## T_ERR_EXDEV
## LR(1) items:
unixerror -> T_ERR_EXDEV . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EXDEV

State 599:
## Known stack suffix:
## T_ERR_EWOULDBLOCK
## LR(1) items:
unixerror -> T_ERR_EWOULDBLOCK . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EWOULDBLOCK

State 600:
## Known stack suffix:
## T_ERR_EUNKNOWN_UNIX_ERROR
## LR(1) items:
unixerror -> T_ERR_EUNKNOWN_UNIX_ERROR . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EUNKNOWN_UNIX_ERROR

State 601:
## Known stack suffix:
## T_ERR_ETXTBSY
## LR(1) items:
unixerror -> T_ERR_ETXTBSY . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ETXTBSY

State 602:
## Known stack suffix:
## T_ERR_ETIMEDOUT
## LR(1) items:
unixerror -> T_ERR_ETIMEDOUT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ETIMEDOUT

State 603:
## Known stack suffix:
## T_ERR_ETIME
## LR(1) items:
unixerror -> T_ERR_ETIME . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ETIME

State 604:
## Known stack suffix:
## T_ERR_ESTALE
## LR(1) items:
unixerror -> T_ERR_ESTALE . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ESTALE

State 605:
## Known stack suffix:
## T_ERR_ESRCH
## LR(1) items:
unixerror -> T_ERR_ESRCH . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ESRCH

State 606:
## Known stack suffix:
## T_ERR_ESPIPE
## LR(1) items:
unixerror -> T_ERR_ESPIPE . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ESPIPE

State 607:
## Known stack suffix:
## T_ERR_ESHUTDOWN
## LR(1) items:
unixerror -> T_ERR_ESHUTDOWN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ESHUTDOWN

State 608:
## Known stack suffix:
## T_ERR_EROFS
## LR(1) items:
unixerror -> T_ERR_EROFS . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EROFS

State 609:
## Known stack suffix:
## T_ERR_ERANGE
## LR(1) items:
unixerror -> T_ERR_ERANGE . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ERANGE

State 610:
## Known stack suffix:
## T_ERR_EPROTOTYPE
## LR(1) items:
unixerror -> T_ERR_EPROTOTYPE . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EPROTOTYPE

State 611:
## Known stack suffix:
## T_ERR_EPROTONOSUPPORT
## LR(1) items:
unixerror -> T_ERR_EPROTONOSUPPORT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EPROTONOSUPPORT

State 612:
## Known stack suffix:
## T_ERR_EPROTO
## LR(1) items:
unixerror -> T_ERR_EPROTO . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EPROTO

State 613:
## Known stack suffix:
## T_ERR_EPIPE
## LR(1) items:
unixerror -> T_ERR_EPIPE . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EPIPE

State 614:
## Known stack suffix:
## T_ERR_EPERM
## LR(1) items:
unixerror -> T_ERR_EPERM . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EPERM

State 615:
## Known stack suffix:
## T_ERR_EOVERFLOW
## LR(1) items:
unixerror -> T_ERR_EOVERFLOW . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EOVERFLOW

State 616:
## Known stack suffix:
## T_ERR_EOPNOTSUPP
## LR(1) items:
unixerror -> T_ERR_EOPNOTSUPP . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EOPNOTSUPP

State 617:
## Known stack suffix:
## T_ERR_ENXIO
## LR(1) items:
unixerror -> T_ERR_ENXIO . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENXIO

State 618:
## Known stack suffix:
## T_ERR_ENOTTY
## LR(1) items:
unixerror -> T_ERR_ENOTTY . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOTTY

State 619:
## Known stack suffix:
## T_ERR_ENOTSUP
## LR(1) items:
unixerror -> T_ERR_ENOTSUP . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOTSUP

State 620:
## Known stack suffix:
## T_ERR_ENOTSOCK
## LR(1) items:
unixerror -> T_ERR_ENOTSOCK . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOTSOCK

State 621:
## Known stack suffix:
## T_ERR_ENOTEMPTY
## LR(1) items:
unixerror -> T_ERR_ENOTEMPTY . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOTEMPTY

State 622:
## Known stack suffix:
## T_ERR_ENOTDIR
## LR(1) items:
unixerror -> T_ERR_ENOTDIR . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOTDIR

State 623:
## Known stack suffix:
## T_ERR_ENOTCONN
## LR(1) items:
unixerror -> T_ERR_ENOTCONN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOTCONN

State 624:
## Known stack suffix:
## T_ERR_ENOSYS
## LR(1) items:
unixerror -> T_ERR_ENOSYS . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOSYS

State 625:
## Known stack suffix:
## T_ERR_ENOSTR
## LR(1) items:
unixerror -> T_ERR_ENOSTR . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOSTR

State 626:
## Known stack suffix:
## T_ERR_ENOSR
## LR(1) items:
unixerror -> T_ERR_ENOSR . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOSR

State 627:
## Known stack suffix:
## T_ERR_ENOSPC
## LR(1) items:
unixerror -> T_ERR_ENOSPC . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOSPC

State 628:
## Known stack suffix:
## T_ERR_ENOPROTOOPT
## LR(1) items:
unixerror -> T_ERR_ENOPROTOOPT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOPROTOOPT

State 629:
## Known stack suffix:
## T_ERR_ENOMSG
## LR(1) items:
unixerror -> T_ERR_ENOMSG . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOMSG

State 630:
## Known stack suffix:
## T_ERR_ENOMEM
## LR(1) items:
unixerror -> T_ERR_ENOMEM . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOMEM

State 631:
## Known stack suffix:
## T_ERR_ENOLINK
## LR(1) items:
unixerror -> T_ERR_ENOLINK . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOLINK

State 632:
## Known stack suffix:
## T_ERR_ENOLCK
## LR(1) items:
unixerror -> T_ERR_ENOLCK . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOLCK

State 633:
## Known stack suffix:
## T_ERR_ENOEXEC
## LR(1) items:
unixerror -> T_ERR_ENOEXEC . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOEXEC

State 634:
## Known stack suffix:
## T_ERR_ENOENT
## LR(1) items:
unixerror -> T_ERR_ENOENT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOENT

State 635:
## Known stack suffix:
## T_ERR_ENODEV
## LR(1) items:
unixerror -> T_ERR_ENODEV . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENODEV

State 636:
## Known stack suffix:
## T_ERR_ENODATA
## LR(1) items:
unixerror -> T_ERR_ENODATA . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENODATA

State 637:
## Known stack suffix:
## T_ERR_ENOBUFS
## LR(1) items:
unixerror -> T_ERR_ENOBUFS . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENOBUFS

State 638:
## Known stack suffix:
## T_ERR_ENFILE
## LR(1) items:
unixerror -> T_ERR_ENFILE . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENFILE

State 639:
## Known stack suffix:
## T_ERR_ENETUNREACH
## LR(1) items:
unixerror -> T_ERR_ENETUNREACH . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENETUNREACH

State 640:
## Known stack suffix:
## T_ERR_ENETRESET
## LR(1) items:
unixerror -> T_ERR_ENETRESET . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENETRESET

State 641:
## Known stack suffix:
## T_ERR_ENETDOWN
## LR(1) items:
unixerror -> T_ERR_ENETDOWN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENETDOWN

State 642:
## Known stack suffix:
## T_ERR_ENAMETOOLONG
## LR(1) items:
unixerror -> T_ERR_ENAMETOOLONG . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ENAMETOOLONG

State 643:
## Known stack suffix:
## T_ERR_EMULTIHOP
## LR(1) items:
unixerror -> T_ERR_EMULTIHOP . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EMULTIHOP

State 644:
## Known stack suffix:
## T_ERR_EMSGSIZE
## LR(1) items:
unixerror -> T_ERR_EMSGSIZE . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EMSGSIZE

State 645:
## Known stack suffix:
## T_ERR_EMLINK
## LR(1) items:
unixerror -> T_ERR_EMLINK . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EMLINK

State 646:
## Known stack suffix:
## T_ERR_EMFILE
## LR(1) items:
unixerror -> T_ERR_EMFILE . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EMFILE

State 647:
## Known stack suffix:
## T_ERR_ELOOP
## LR(1) items:
unixerror -> T_ERR_ELOOP . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ELOOP

State 648:
## Known stack suffix:
## T_ERR_EISDIR
## LR(1) items:
unixerror -> T_ERR_EISDIR . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EISDIR

State 649:
## Known stack suffix:
## T_ERR_EISCONN
## LR(1) items:
unixerror -> T_ERR_EISCONN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EISCONN

State 650:
## Known stack suffix:
## T_ERR_EIO
## LR(1) items:
unixerror -> T_ERR_EIO . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EIO

State 651:
## Known stack suffix:
## T_ERR_EINVAL
## LR(1) items:
unixerror -> T_ERR_EINVAL . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EINVAL

State 652:
## Known stack suffix:
## T_ERR_EINTR
## LR(1) items:
unixerror -> T_ERR_EINTR . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EINTR

State 653:
## Known stack suffix:
## T_ERR_EINPROGRESS
## LR(1) items:
unixerror -> T_ERR_EINPROGRESS . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EINPROGRESS

State 654:
## Known stack suffix:
## T_ERR_EILSEQ
## LR(1) items:
unixerror -> T_ERR_EILSEQ . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EILSEQ

State 655:
## Known stack suffix:
## T_ERR_EIDRM
## LR(1) items:
unixerror -> T_ERR_EIDRM . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EIDRM

State 656:
## Known stack suffix:
## T_ERR_EHOSTUNREACH
## LR(1) items:
unixerror -> T_ERR_EHOSTUNREACH . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EHOSTUNREACH

State 657:
## Known stack suffix:
## T_ERR_EHOSTDOWN
## LR(1) items:
unixerror -> T_ERR_EHOSTDOWN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EHOSTDOWN

State 658:
## Known stack suffix:
## T_ERR_EFBIG
## LR(1) items:
unixerror -> T_ERR_EFBIG . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EFBIG

State 659:
## Known stack suffix:
## T_ERR_EFAULT
## LR(1) items:
unixerror -> T_ERR_EFAULT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EFAULT

State 660:
## Known stack suffix:
## T_ERR_EEXIST
## LR(1) items:
unixerror -> T_ERR_EEXIST . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EEXIST

State 661:
## Known stack suffix:
## T_ERR_EDQUOT
## LR(1) items:
unixerror -> T_ERR_EDQUOT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EDQUOT

State 662:
## Known stack suffix:
## T_ERR_EDOM
## LR(1) items:
unixerror -> T_ERR_EDOM . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EDOM

State 663:
## Known stack suffix:
## T_ERR_EDESTADDRREQ
## LR(1) items:
unixerror -> T_ERR_EDESTADDRREQ . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EDESTADDRREQ

State 664:
## Known stack suffix:
## T_ERR_EDEADLK
## LR(1) items:
unixerror -> T_ERR_EDEADLK . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EDEADLK

State 665:
## Known stack suffix:
## T_ERR_ECONNRESET
## LR(1) items:
unixerror -> T_ERR_ECONNRESET . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ECONNRESET

State 666:
## Known stack suffix:
## T_ERR_ECONNREFUSED
## LR(1) items:
unixerror -> T_ERR_ECONNREFUSED . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ECONNREFUSED

State 667:
## Known stack suffix:
## T_ERR_ECONNABORTED
## LR(1) items:
unixerror -> T_ERR_ECONNABORTED . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ECONNABORTED

State 668:
## Known stack suffix:
## T_ERR_ECHILD
## LR(1) items:
unixerror -> T_ERR_ECHILD . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ECHILD

State 669:
## Known stack suffix:
## T_ERR_ECANCELED
## LR(1) items:
unixerror -> T_ERR_ECANCELED . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_ECANCELED

State 670:
## Known stack suffix:
## T_ERR_EBUSY
## LR(1) items:
unixerror -> T_ERR_EBUSY . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EBUSY

State 671:
## Known stack suffix:
## T_ERR_EBADMSG
## LR(1) items:
unixerror -> T_ERR_EBADMSG . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EBADMSG

State 672:
## Known stack suffix:
## T_ERR_EBADF
## LR(1) items:
unixerror -> T_ERR_EBADF . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EBADF

State 673:
## Known stack suffix:
## T_ERR_EALREADY
## LR(1) items:
unixerror -> T_ERR_EALREADY . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EALREADY

State 674:
## Known stack suffix:
## T_ERR_EAGAIN
## LR(1) items:
unixerror -> T_ERR_EAGAIN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EAGAIN

State 675:
## Known stack suffix:
## T_ERR_EAFNOSUPPORT
## LR(1) items:
unixerror -> T_ERR_EAFNOSUPPORT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EAFNOSUPPORT

State 676:
## Known stack suffix:
## T_ERR_EADDRNOTAVAIL
## LR(1) items:
unixerror -> T_ERR_EADDRNOTAVAIL . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EADDRNOTAVAIL

State 677:
## Known stack suffix:
## T_ERR_EADDRINUSE
## LR(1) items:
unixerror -> T_ERR_EADDRINUSE . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EADDRINUSE

State 678:
## Known stack suffix:
## T_ERR_EACCES
## LR(1) items:
unixerror -> T_ERR_EACCES . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_EACCES

State 679:
## Known stack suffix:
## T_ERR_E2BIG
## LR(1) items:
unixerror -> T_ERR_E2BIG . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unixerror -> T_ERR_E2BIG

State 680:
## Known stack suffix:
## LHFAIL LPAREN unixerror
## LR(1) items:
returnfail -> LHFAIL LPAREN unixerror . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 681
## Reductions:

State 681:
## Known stack suffix:
## LHFAIL LPAREN unixerror RPAREN
## LR(1) items:
returnfail -> LHFAIL LPAREN unixerror RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnfail -> LHFAIL LPAREN unixerror RPAREN

State 682:
## Known stack suffix:
## returnok
## LR(1) items:
return -> returnok . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production return -> returnok

State 683:
## Known stack suffix:
## returnfail
## LR(1) items:
return -> returnfail . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production return -> returnfail

State 684:
## Known stack suffix:
## LPAREN return
## LR(1) items:
return -> LPAREN return . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 685
## Reductions:

State 685:
## Known stack suffix:
## LPAREN return RPAREN
## LR(1) items:
return -> LPAREN return RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production return -> LPAREN return RPAREN

State 686:
## Known stack suffix:
## LHRETURN LPAREN tid COMMA return
## LR(1) items:
lib -> LHRETURN LPAREN tid COMMA return . RPAREN [ SC RPAREN ]
## Transitions:
-- On RPAREN shift to state 687
## Reductions:

State 687:
## Known stack suffix:
## LHRETURN LPAREN tid COMMA return RPAREN
## LR(1) items:
lib -> LHRETURN LPAREN tid COMMA return RPAREN . [ SC RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> LHRETURN LPAREN tid COMMA return RPAREN

State 688:
## Known stack suffix:
## LHRECV
## LR(1) items:
netcall -> LHRECV . LPAREN netparam RPAREN [ SC RPAREN ]
## Transitions:
-- On LPAREN shift to state 689
## Reductions:

State 689:
## Known stack suffix:
## LHRECV LPAREN
## LR(1) items:
netcall -> LHRECV LPAREN . netparam RPAREN [ SC RPAREN ]
## Transitions:
-- On UDP shift to state 233
-- On TCP shift to state 269
-- On ICMP shift to state 367
-- On netparam shift to state 690
## Reductions:

State 690:
## Known stack suffix:
## LHRECV LPAREN netparam
## LR(1) items:
netcall -> LHRECV LPAREN netparam . RPAREN [ SC RPAREN ]
## Transitions:
-- On RPAREN shift to state 691
## Reductions:

State 691:
## Known stack suffix:
## LHRECV LPAREN netparam RPAREN
## LR(1) items:
netcall -> LHRECV LPAREN netparam RPAREN . [ SC RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production netcall -> LHRECV LPAREN netparam RPAREN

State 692:
## Known stack suffix:
## LHLOOP
## LR(1) items:
netcall -> LHLOOP . LPAREN netparam RPAREN [ SC RPAREN ]
## Transitions:
-- On LPAREN shift to state 693
## Reductions:

State 693:
## Known stack suffix:
## LHLOOP LPAREN
## LR(1) items:
netcall -> LHLOOP LPAREN . netparam RPAREN [ SC RPAREN ]
## Transitions:
-- On UDP shift to state 233
-- On TCP shift to state 269
-- On ICMP shift to state 367
-- On netparam shift to state 694
## Reductions:

State 694:
## Known stack suffix:
## LHLOOP LPAREN netparam
## LR(1) items:
netcall -> LHLOOP LPAREN netparam . RPAREN [ SC RPAREN ]
## Transitions:
-- On RPAREN shift to state 695
## Reductions:

State 695:
## Known stack suffix:
## LHLOOP LPAREN netparam RPAREN
## LR(1) items:
netcall -> LHLOOP LPAREN netparam RPAREN . [ SC RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production netcall -> LHLOOP LPAREN netparam RPAREN

State 696:
## Known stack suffix:
## LHCALL
## LR(1) items:
lib -> LHCALL . LPAREN tid COMMA call RPAREN [ SC RPAREN ]
## Transitions:
-- On LPAREN shift to state 697
## Reductions:

State 697:
## Known stack suffix:
## LHCALL LPAREN
## LR(1) items:
lib -> LHCALL LPAREN . tid COMMA call RPAREN [ SC RPAREN ]
## Transitions:
-- On TID shift to state 439
-- On LPAREN shift to state 441
-- On tid shift to state 698
## Reductions:

State 698:
## Known stack suffix:
## LHCALL LPAREN tid
## LR(1) items:
lib -> LHCALL LPAREN tid . COMMA call RPAREN [ SC RPAREN ]
## Transitions:
-- On COMMA shift to state 699
## Reductions:

State 699:
## Known stack suffix:
## LHCALL LPAREN tid COMMA
## LR(1) items:
lib -> LHCALL LPAREN tid COMMA . call RPAREN [ SC RPAREN ]
## Transitions:
-- On SOCKET shift to state 700
-- On SOCKATMARK shift to state 706
-- On SHUTDOWN shift to state 708
-- On SETSOCKTOPT shift to state 716
-- On SETSOCKNOPT shift to state 737
-- On SETSOCKBOPT shift to state 752
-- On SETFILEFLAGS shift to state 769
-- On SEND shift to state 778
-- On RECV shift to state 815
-- On PSELECT shift to state 823
-- On LPAREN shift to state 884
-- On LISTEN shift to state 885
-- On GETSOCKTOPT shift to state 891
-- On GETSOCKNOPT shift to state 897
-- On GETSOCKNAME shift to state 903
-- On GETSOCKLISTENING shift to state 905
-- On GETSOCKERR shift to state 907
-- On GETSOCKBOPT shift to state 909
-- On GETPEERNAME shift to state 915
-- On GETIFADDRS shift to state 917
-- On GETFILEFLAGS shift to state 919
-- On DUPFD shift to state 921
-- On DUP shift to state 927
-- On DISCONNECT shift to state 929
-- On CONNECT shift to state 931
-- On CLOSE shift to state 939
-- On BIND shift to state 941
-- On ACCEPT shift to state 949
-- On call shift to state 953
## Reductions:

State 700:
## Known stack suffix:
## SOCKET
## LR(1) items:
call -> SOCKET . LPAREN socktype RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 701
## Reductions:

State 701:
## Known stack suffix:
## SOCKET LPAREN
## LR(1) items:
call -> SOCKET LPAREN . socktype RPAREN [ RPAREN ]
## Transitions:
-- On SOCK_STREAM shift to state 702
-- On SOCK_DGRAM shift to state 703
-- On socktype shift to state 704
## Reductions:

State 702:
## Known stack suffix:
## SOCK_STREAM
## LR(1) items:
socktype -> SOCK_STREAM . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production socktype -> SOCK_STREAM

State 703:
## Known stack suffix:
## SOCK_DGRAM
## LR(1) items:
socktype -> SOCK_DGRAM . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production socktype -> SOCK_DGRAM

State 704:
## Known stack suffix:
## SOCKET LPAREN socktype
## LR(1) items:
call -> SOCKET LPAREN socktype . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 705
## Reductions:

State 705:
## Known stack suffix:
## SOCKET LPAREN socktype RPAREN
## LR(1) items:
call -> SOCKET LPAREN socktype RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> SOCKET LPAREN socktype RPAREN

State 706:
## Known stack suffix:
## SOCKATMARK
## LR(1) items:
call -> SOCKATMARK . fd [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 707
## Reductions:

State 707:
## Known stack suffix:
## SOCKATMARK fd
## LR(1) items:
call -> SOCKATMARK fd . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> SOCKATMARK fd

State 708:
## Known stack suffix:
## SHUTDOWN
## LR(1) items:
call -> SHUTDOWN . LPAREN fd COMMA bool COMMA bool RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 709
## Reductions:

State 709:
## Known stack suffix:
## SHUTDOWN LPAREN
## LR(1) items:
call -> SHUTDOWN LPAREN . fd COMMA bool COMMA bool RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 710
## Reductions:

State 710:
## Known stack suffix:
## SHUTDOWN LPAREN fd
## LR(1) items:
call -> SHUTDOWN LPAREN fd . COMMA bool COMMA bool RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 711
## Reductions:

State 711:
## Known stack suffix:
## SHUTDOWN LPAREN fd COMMA
## LR(1) items:
call -> SHUTDOWN LPAREN fd COMMA . bool COMMA bool RPAREN [ RPAREN ]
## Transitions:
-- On TRUE shift to state 294
-- On LPAREN shift to state 295
-- On FALSE shift to state 296
-- On bool shift to state 712
## Reductions:

State 712:
## Known stack suffix:
## SHUTDOWN LPAREN fd COMMA bool
## LR(1) items:
call -> SHUTDOWN LPAREN fd COMMA bool . COMMA bool RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 713
## Reductions:

State 713:
## Known stack suffix:
## SHUTDOWN LPAREN fd COMMA bool COMMA
## LR(1) items:
call -> SHUTDOWN LPAREN fd COMMA bool COMMA . bool RPAREN [ RPAREN ]
## Transitions:
-- On TRUE shift to state 294
-- On LPAREN shift to state 295
-- On FALSE shift to state 296
-- On bool shift to state 714
## Reductions:

State 714:
## Known stack suffix:
## SHUTDOWN LPAREN fd COMMA bool COMMA bool
## LR(1) items:
call -> SHUTDOWN LPAREN fd COMMA bool COMMA bool . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 715
## Reductions:

State 715:
## Known stack suffix:
## SHUTDOWN LPAREN fd COMMA bool COMMA bool RPAREN
## LR(1) items:
call -> SHUTDOWN LPAREN fd COMMA bool COMMA bool RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> SHUTDOWN LPAREN fd COMMA bool COMMA bool RPAREN

State 716:
## Known stack suffix:
## SETSOCKTOPT
## LR(1) items:
call -> SETSOCKTOPT . LPAREN fd COMMA socktflag COMMA topt RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 717
## Reductions:

State 717:
## Known stack suffix:
## SETSOCKTOPT LPAREN
## LR(1) items:
call -> SETSOCKTOPT LPAREN . fd COMMA socktflag COMMA topt RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 718
## Reductions:

State 718:
## Known stack suffix:
## SETSOCKTOPT LPAREN fd
## LR(1) items:
call -> SETSOCKTOPT LPAREN fd . COMMA socktflag COMMA topt RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 719
## Reductions:

State 719:
## Known stack suffix:
## SETSOCKTOPT LPAREN fd COMMA
## LR(1) items:
call -> SETSOCKTOPT LPAREN fd COMMA . socktflag COMMA topt RPAREN [ RPAREN ]
## Transitions:
-- On TSO_SNDTIMEO shift to state 720
-- On TSO_RCVTIMEO shift to state 721
-- On TSO_LINGER shift to state 722
-- On LPAREN shift to state 723
-- On socktflag shift to state 726
## Reductions:

State 720:
## Known stack suffix:
## TSO_SNDTIMEO
## LR(1) items:
socktflag -> TSO_SNDTIMEO . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production socktflag -> TSO_SNDTIMEO

State 721:
## Known stack suffix:
## TSO_RCVTIMEO
## LR(1) items:
socktflag -> TSO_RCVTIMEO . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production socktflag -> TSO_RCVTIMEO

State 722:
## Known stack suffix:
## TSO_LINGER
## LR(1) items:
socktflag -> TSO_LINGER . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production socktflag -> TSO_LINGER

State 723:
## Known stack suffix:
## LPAREN
## LR(1) items:
socktflag -> LPAREN . socktflag RPAREN [ RPAREN COMMA ]
## Transitions:
-- On TSO_SNDTIMEO shift to state 720
-- On TSO_RCVTIMEO shift to state 721
-- On TSO_LINGER shift to state 722
-- On LPAREN shift to state 723
-- On socktflag shift to state 724
## Reductions:

State 724:
## Known stack suffix:
## LPAREN socktflag
## LR(1) items:
socktflag -> LPAREN socktflag . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 725
## Reductions:

State 725:
## Known stack suffix:
## LPAREN socktflag RPAREN
## LR(1) items:
socktflag -> LPAREN socktflag RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production socktflag -> LPAREN socktflag RPAREN

State 726:
## Known stack suffix:
## SETSOCKTOPT LPAREN fd COMMA socktflag
## LR(1) items:
call -> SETSOCKTOPT LPAREN fd COMMA socktflag . COMMA topt RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 727
## Reductions:

State 727:
## Known stack suffix:
## SETSOCKTOPT LPAREN fd COMMA socktflag COMMA
## LR(1) items:
call -> SETSOCKTOPT LPAREN fd COMMA socktflag COMMA . topt RPAREN [ RPAREN ]
## Transitions:
-- On SOME shift to state 728
-- On NONE shift to state 731
-- On LPAREN shift to state 732
-- On topt shift to state 735
## Reductions:

State 728:
## Known stack suffix:
## SOME
## LR(1) items:
topt -> SOME . intpair [ RPAREN COMMA ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 729
-- On INT shift to state 5
-- On intr shift to state 461
-- On intpair shift to state 730
## Reductions:

State 729:
## Known stack suffix:
## LPAREN
## LR(1) items:
intpair -> LPAREN . intpair RPAREN [ RPAREN COMMA ]
intr -> LPAREN . intr RPAREN [ RPAREN COMMA ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 729
-- On INT shift to state 5
-- On intr shift to state 452
-- On intpair shift to state 455
## Reductions:

State 730:
## Known stack suffix:
## SOME intpair
## LR(1) items:
topt -> SOME intpair . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production topt -> SOME intpair

State 731:
## Known stack suffix:
## NONE
## LR(1) items:
topt -> NONE . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production topt -> NONE

State 732:
## Known stack suffix:
## LPAREN
## LR(1) items:
topt -> LPAREN . topt RPAREN [ RPAREN COMMA ]
## Transitions:
-- On SOME shift to state 728
-- On NONE shift to state 731
-- On LPAREN shift to state 732
-- On topt shift to state 733
## Reductions:

State 733:
## Known stack suffix:
## LPAREN topt
## LR(1) items:
topt -> LPAREN topt . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 734
## Reductions:

State 734:
## Known stack suffix:
## LPAREN topt RPAREN
## LR(1) items:
topt -> LPAREN topt RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production topt -> LPAREN topt RPAREN

State 735:
## Known stack suffix:
## SETSOCKTOPT LPAREN fd COMMA socktflag COMMA topt
## LR(1) items:
call -> SETSOCKTOPT LPAREN fd COMMA socktflag COMMA topt . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 736
## Reductions:

State 736:
## Known stack suffix:
## SETSOCKTOPT LPAREN fd COMMA socktflag COMMA topt RPAREN
## LR(1) items:
call -> SETSOCKTOPT LPAREN fd COMMA socktflag COMMA topt RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> SETSOCKTOPT LPAREN fd COMMA socktflag COMMA topt RPAREN

State 737:
## Known stack suffix:
## SETSOCKNOPT
## LR(1) items:
call -> SETSOCKNOPT . LPAREN fd COMMA socknflag COMMA intr RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 738
## Reductions:

State 738:
## Known stack suffix:
## SETSOCKNOPT LPAREN
## LR(1) items:
call -> SETSOCKNOPT LPAREN . fd COMMA socknflag COMMA intr RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 739
## Reductions:

State 739:
## Known stack suffix:
## SETSOCKNOPT LPAREN fd
## LR(1) items:
call -> SETSOCKNOPT LPAREN fd . COMMA socknflag COMMA intr RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 740
## Reductions:

State 740:
## Known stack suffix:
## SETSOCKNOPT LPAREN fd COMMA
## LR(1) items:
call -> SETSOCKNOPT LPAREN fd COMMA . socknflag COMMA intr RPAREN [ RPAREN ]
## Transitions:
-- On TSO_SNDLOWAT shift to state 741
-- On TSO_SNDBUF shift to state 742
-- On TSO_RCVLOWAT shift to state 743
-- On TSO_RCVBUF shift to state 744
-- On LPAREN shift to state 745
-- On socknflag shift to state 748
## Reductions:

State 741:
## Known stack suffix:
## TSO_SNDLOWAT
## LR(1) items:
socknflag -> TSO_SNDLOWAT . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production socknflag -> TSO_SNDLOWAT

State 742:
## Known stack suffix:
## TSO_SNDBUF
## LR(1) items:
socknflag -> TSO_SNDBUF . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production socknflag -> TSO_SNDBUF

State 743:
## Known stack suffix:
## TSO_RCVLOWAT
## LR(1) items:
socknflag -> TSO_RCVLOWAT . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production socknflag -> TSO_RCVLOWAT

State 744:
## Known stack suffix:
## TSO_RCVBUF
## LR(1) items:
socknflag -> TSO_RCVBUF . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production socknflag -> TSO_RCVBUF

State 745:
## Known stack suffix:
## LPAREN
## LR(1) items:
socknflag -> LPAREN . socknflag RPAREN [ RPAREN COMMA ]
## Transitions:
-- On TSO_SNDLOWAT shift to state 741
-- On TSO_SNDBUF shift to state 742
-- On TSO_RCVLOWAT shift to state 743
-- On TSO_RCVBUF shift to state 744
-- On LPAREN shift to state 745
-- On socknflag shift to state 746
## Reductions:

State 746:
## Known stack suffix:
## LPAREN socknflag
## LR(1) items:
socknflag -> LPAREN socknflag . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 747
## Reductions:

State 747:
## Known stack suffix:
## LPAREN socknflag RPAREN
## LR(1) items:
socknflag -> LPAREN socknflag RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production socknflag -> LPAREN socknflag RPAREN

State 748:
## Known stack suffix:
## SETSOCKNOPT LPAREN fd COMMA socknflag
## LR(1) items:
call -> SETSOCKNOPT LPAREN fd COMMA socknflag . COMMA intr RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 749
## Reductions:

State 749:
## Known stack suffix:
## SETSOCKNOPT LPAREN fd COMMA socknflag COMMA
## LR(1) items:
call -> SETSOCKNOPT LPAREN fd COMMA socknflag COMMA . intr RPAREN [ RPAREN ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 750
## Reductions:

State 750:
## Known stack suffix:
## SETSOCKNOPT LPAREN fd COMMA socknflag COMMA intr
## LR(1) items:
call -> SETSOCKNOPT LPAREN fd COMMA socknflag COMMA intr . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 751
## Reductions:

State 751:
## Known stack suffix:
## SETSOCKNOPT LPAREN fd COMMA socknflag COMMA intr RPAREN
## LR(1) items:
call -> SETSOCKNOPT LPAREN fd COMMA socknflag COMMA intr RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> SETSOCKNOPT LPAREN fd COMMA socknflag COMMA intr RPAREN

State 752:
## Known stack suffix:
## SETSOCKBOPT
## LR(1) items:
call -> SETSOCKBOPT . LPAREN fd COMMA sockbflag COMMA bool RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 753
## Reductions:

State 753:
## Known stack suffix:
## SETSOCKBOPT LPAREN
## LR(1) items:
call -> SETSOCKBOPT LPAREN . fd COMMA sockbflag COMMA bool RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 754
## Reductions:

State 754:
## Known stack suffix:
## SETSOCKBOPT LPAREN fd
## LR(1) items:
call -> SETSOCKBOPT LPAREN fd . COMMA sockbflag COMMA bool RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 755
## Reductions:

State 755:
## Known stack suffix:
## SETSOCKBOPT LPAREN fd COMMA
## LR(1) items:
call -> SETSOCKBOPT LPAREN fd COMMA . sockbflag COMMA bool RPAREN [ RPAREN ]
## Transitions:
-- On TSO_REUSEADDR shift to state 756
-- On TSO_OOBINLINE shift to state 757
-- On TSO_KEEPALIVE shift to state 758
-- On TSO_DONTROUTE shift to state 759
-- On TSO_BSDCOMPAT shift to state 760
-- On TSO_BROADCAST shift to state 761
-- On LPAREN shift to state 762
-- On sockbflag shift to state 765
## Reductions:

State 756:
## Known stack suffix:
## TSO_REUSEADDR
## LR(1) items:
sockbflag -> TSO_REUSEADDR . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sockbflag -> TSO_REUSEADDR

State 757:
## Known stack suffix:
## TSO_OOBINLINE
## LR(1) items:
sockbflag -> TSO_OOBINLINE . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sockbflag -> TSO_OOBINLINE

State 758:
## Known stack suffix:
## TSO_KEEPALIVE
## LR(1) items:
sockbflag -> TSO_KEEPALIVE . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sockbflag -> TSO_KEEPALIVE

State 759:
## Known stack suffix:
## TSO_DONTROUTE
## LR(1) items:
sockbflag -> TSO_DONTROUTE . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sockbflag -> TSO_DONTROUTE

State 760:
## Known stack suffix:
## TSO_BSDCOMPAT
## LR(1) items:
sockbflag -> TSO_BSDCOMPAT . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sockbflag -> TSO_BSDCOMPAT

State 761:
## Known stack suffix:
## TSO_BROADCAST
## LR(1) items:
sockbflag -> TSO_BROADCAST . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sockbflag -> TSO_BROADCAST

State 762:
## Known stack suffix:
## LPAREN
## LR(1) items:
sockbflag -> LPAREN . sockbflag RPAREN [ RPAREN COMMA ]
## Transitions:
-- On TSO_REUSEADDR shift to state 756
-- On TSO_OOBINLINE shift to state 757
-- On TSO_KEEPALIVE shift to state 758
-- On TSO_DONTROUTE shift to state 759
-- On TSO_BSDCOMPAT shift to state 760
-- On TSO_BROADCAST shift to state 761
-- On LPAREN shift to state 762
-- On sockbflag shift to state 763
## Reductions:

State 763:
## Known stack suffix:
## LPAREN sockbflag
## LR(1) items:
sockbflag -> LPAREN sockbflag . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 764
## Reductions:

State 764:
## Known stack suffix:
## LPAREN sockbflag RPAREN
## LR(1) items:
sockbflag -> LPAREN sockbflag RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sockbflag -> LPAREN sockbflag RPAREN

State 765:
## Known stack suffix:
## SETSOCKBOPT LPAREN fd COMMA sockbflag
## LR(1) items:
call -> SETSOCKBOPT LPAREN fd COMMA sockbflag . COMMA bool RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 766
## Reductions:

State 766:
## Known stack suffix:
## SETSOCKBOPT LPAREN fd COMMA sockbflag COMMA
## LR(1) items:
call -> SETSOCKBOPT LPAREN fd COMMA sockbflag COMMA . bool RPAREN [ RPAREN ]
## Transitions:
-- On TRUE shift to state 294
-- On LPAREN shift to state 295
-- On FALSE shift to state 296
-- On bool shift to state 767
## Reductions:

State 767:
## Known stack suffix:
## SETSOCKBOPT LPAREN fd COMMA sockbflag COMMA bool
## LR(1) items:
call -> SETSOCKBOPT LPAREN fd COMMA sockbflag COMMA bool . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 768
## Reductions:

State 768:
## Known stack suffix:
## SETSOCKBOPT LPAREN fd COMMA sockbflag COMMA bool RPAREN
## LR(1) items:
call -> SETSOCKBOPT LPAREN fd COMMA sockbflag COMMA bool RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> SETSOCKBOPT LPAREN fd COMMA sockbflag COMMA bool RPAREN

State 769:
## Known stack suffix:
## SETFILEFLAGS
## LR(1) items:
call -> SETFILEFLAGS . LPAREN fd COMMA filebflaglist RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 770
## Reductions:

State 770:
## Known stack suffix:
## SETFILEFLAGS LPAREN
## LR(1) items:
call -> SETFILEFLAGS LPAREN . fd COMMA filebflaglist RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 771
## Reductions:

State 771:
## Known stack suffix:
## SETFILEFLAGS LPAREN fd
## LR(1) items:
call -> SETFILEFLAGS LPAREN fd . COMMA filebflaglist RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 772
## Reductions:

State 772:
## Known stack suffix:
## SETFILEFLAGS LPAREN fd COMMA
## LR(1) items:
call -> SETFILEFLAGS LPAREN fd COMMA . filebflaglist RPAREN [ RPAREN ]
## Transitions:
-- On LSQBRKT shift to state 773
-- On LPAREN shift to state 775
-- On filebflaglist shift to state 776
## Reductions:

State 773:
## Known stack suffix:
## LSQBRKT
## LR(1) items:
filebflaglist -> LSQBRKT . filebflaglisth RSQBRKT [ RPAREN ]
filebflaglist -> LSQBRKT . RSQBRKT [ RPAREN ]
## Transitions:
-- On TO_NONBLOCK shift to state 470
-- On TO_ASYNC shift to state 471
-- On RSQBRKT shift to state 774
-- On LPAREN shift to state 518
-- On filebflaglisth shift to state 516
-- On filebflag shift to state 521
## Reductions:

State 774:
## Known stack suffix:
## LSQBRKT RSQBRKT
## LR(1) items:
filebflaglist -> LSQBRKT RSQBRKT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production filebflaglist -> LSQBRKT RSQBRKT

State 775:
## Known stack suffix:
## LPAREN
## LR(1) items:
filebflaglist -> LPAREN . filebflaglist RPAREN [ RPAREN ]
## Transitions:
-- On LSQBRKT shift to state 773
-- On LPAREN shift to state 775
-- On filebflaglist shift to state 531
## Reductions:

State 776:
## Known stack suffix:
## SETFILEFLAGS LPAREN fd COMMA filebflaglist
## LR(1) items:
call -> SETFILEFLAGS LPAREN fd COMMA filebflaglist . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 777
## Reductions:

State 777:
## Known stack suffix:
## SETFILEFLAGS LPAREN fd COMMA filebflaglist RPAREN
## LR(1) items:
call -> SETFILEFLAGS LPAREN fd COMMA filebflaglist RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> SETFILEFLAGS LPAREN fd COMMA filebflaglist RPAREN

State 778:
## Known stack suffix:
## SEND
## LR(1) items:
call -> SEND . LPAREN fd COMMA addrop COMMA stringr COMMA msgbflaglist RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 779
## Reductions:

State 779:
## Known stack suffix:
## SEND LPAREN
## LR(1) items:
call -> SEND LPAREN . fd COMMA addrop COMMA stringr COMMA msgbflaglist RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 780
## Reductions:

State 780:
## Known stack suffix:
## SEND LPAREN fd
## LR(1) items:
call -> SEND LPAREN fd . COMMA addrop COMMA stringr COMMA msgbflaglist RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 781
## Reductions:

State 781:
## Known stack suffix:
## SEND LPAREN fd COMMA
## LR(1) items:
call -> SEND LPAREN fd COMMA . addrop COMMA stringr COMMA msgbflaglist RPAREN [ RPAREN ]
## Transitions:
-- On SOME shift to state 782
-- On NONE shift to state 788
-- On LPAREN shift to state 789
-- On addrop shift to state 792
## Reductions:

State 782:
## Known stack suffix:
## SOME
## LR(1) items:
addrop -> SOME . LPAREN ip COMMA port RPAREN [ RPAREN COMMA ]
## Transitions:
-- On LPAREN shift to state 783
## Reductions:

State 783:
## Known stack suffix:
## SOME LPAREN
## LR(1) items:
addrop -> SOME LPAREN . ip COMMA port RPAREN [ RPAREN COMMA ]
## Transitions:
-- On LPAREN shift to state 52
-- On IP shift to state 53
-- On ip shift to state 784
## Reductions:

State 784:
## Known stack suffix:
## SOME LPAREN ip
## LR(1) items:
addrop -> SOME LPAREN ip . COMMA port RPAREN [ RPAREN COMMA ]
## Transitions:
-- On COMMA shift to state 785
## Reductions:

State 785:
## Known stack suffix:
## SOME LPAREN ip COMMA
## LR(1) items:
addrop -> SOME LPAREN ip COMMA . port RPAREN [ RPAREN COMMA ]
## Transitions:
-- On PORT shift to state 73
-- On LPAREN shift to state 75
-- On port shift to state 786
## Reductions:

State 786:
## Known stack suffix:
## SOME LPAREN ip COMMA port
## LR(1) items:
addrop -> SOME LPAREN ip COMMA port . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 787
## Reductions:

State 787:
## Known stack suffix:
## SOME LPAREN ip COMMA port RPAREN
## LR(1) items:
addrop -> SOME LPAREN ip COMMA port RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production addrop -> SOME LPAREN ip COMMA port RPAREN

State 788:
## Known stack suffix:
## NONE
## LR(1) items:
addrop -> NONE . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production addrop -> NONE

State 789:
## Known stack suffix:
## LPAREN
## LR(1) items:
addrop -> LPAREN . addrop RPAREN [ RPAREN COMMA ]
## Transitions:
-- On SOME shift to state 782
-- On NONE shift to state 788
-- On LPAREN shift to state 789
-- On addrop shift to state 790
## Reductions:

State 790:
## Known stack suffix:
## LPAREN addrop
## LR(1) items:
addrop -> LPAREN addrop . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 791
## Reductions:

State 791:
## Known stack suffix:
## LPAREN addrop RPAREN
## LR(1) items:
addrop -> LPAREN addrop RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production addrop -> LPAREN addrop RPAREN

State 792:
## Known stack suffix:
## SEND LPAREN fd COMMA addrop
## LR(1) items:
call -> SEND LPAREN fd COMMA addrop . COMMA stringr COMMA msgbflaglist RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 793
## Reductions:

State 793:
## Known stack suffix:
## SEND LPAREN fd COMMA addrop COMMA
## LR(1) items:
call -> SEND LPAREN fd COMMA addrop COMMA . stringr COMMA msgbflaglist RPAREN [ RPAREN ]
## Transitions:
-- On STRING shift to state 11
-- On LPAREN shift to state 12
-- On stringr shift to state 794
## Reductions:

State 794:
## Known stack suffix:
## SEND LPAREN fd COMMA addrop COMMA stringr
## LR(1) items:
call -> SEND LPAREN fd COMMA addrop COMMA stringr . COMMA msgbflaglist RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 795
## Reductions:

State 795:
## Known stack suffix:
## SEND LPAREN fd COMMA addrop COMMA stringr COMMA
## LR(1) items:
call -> SEND LPAREN fd COMMA addrop COMMA stringr COMMA . msgbflaglist RPAREN [ RPAREN ]
## Transitions:
-- On LSQBRKT shift to state 796
-- On LPAREN shift to state 810
-- On msgbflaglist shift to state 813
## Reductions:

State 796:
## Known stack suffix:
## LSQBRKT
## LR(1) items:
msgbflaglist -> LSQBRKT . msgbflaglisth RSQBRKT [ RPAREN ]
msgbflaglist -> LSQBRKT . RSQBRKT [ RPAREN ]
## Transitions:
-- On TMSG_WAITALL shift to state 797
-- On TMSG_PEEK shift to state 798
-- On TMSG_OOB shift to state 799
-- On TMSG_DONTWAIT shift to state 800
-- On RSQBRKT shift to state 801
-- On LPAREN shift to state 802
-- On msgbflaglisth shift to state 805
-- On msgbflag shift to state 809
## Reductions:

State 797:
## Known stack suffix:
## TMSG_WAITALL
## LR(1) items:
msgbflag -> TMSG_WAITALL . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production msgbflag -> TMSG_WAITALL

State 798:
## Known stack suffix:
## TMSG_PEEK
## LR(1) items:
msgbflag -> TMSG_PEEK . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production msgbflag -> TMSG_PEEK

State 799:
## Known stack suffix:
## TMSG_OOB
## LR(1) items:
msgbflag -> TMSG_OOB . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production msgbflag -> TMSG_OOB

State 800:
## Known stack suffix:
## TMSG_DONTWAIT
## LR(1) items:
msgbflag -> TMSG_DONTWAIT . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production msgbflag -> TMSG_DONTWAIT

State 801:
## Known stack suffix:
## LSQBRKT RSQBRKT
## LR(1) items:
msgbflaglist -> LSQBRKT RSQBRKT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production msgbflaglist -> LSQBRKT RSQBRKT

State 802:
## Known stack suffix:
## LPAREN
## LR(1) items:
msgbflag -> LPAREN . msgbflag RPAREN [ SC RSQBRKT RPAREN ]
## Transitions:
-- On TMSG_WAITALL shift to state 797
-- On TMSG_PEEK shift to state 798
-- On TMSG_OOB shift to state 799
-- On TMSG_DONTWAIT shift to state 800
-- On LPAREN shift to state 802
-- On msgbflag shift to state 803
## Reductions:

State 803:
## Known stack suffix:
## LPAREN msgbflag
## LR(1) items:
msgbflag -> LPAREN msgbflag . RPAREN [ SC RSQBRKT RPAREN ]
## Transitions:
-- On RPAREN shift to state 804
## Reductions:

State 804:
## Known stack suffix:
## LPAREN msgbflag RPAREN
## LR(1) items:
msgbflag -> LPAREN msgbflag RPAREN . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production msgbflag -> LPAREN msgbflag RPAREN

State 805:
## Known stack suffix:
## LSQBRKT msgbflaglisth
## LR(1) items:
msgbflaglist -> LSQBRKT msgbflaglisth . RSQBRKT [ RPAREN ]
msgbflaglisth -> msgbflaglisth . SC msgbflag [ SC RSQBRKT ]
## Transitions:
-- On SC shift to state 806
-- On RSQBRKT shift to state 808
## Reductions:

State 806:
## Known stack suffix:
## msgbflaglisth SC
## LR(1) items:
msgbflaglisth -> msgbflaglisth SC . msgbflag [ SC RSQBRKT ]
## Transitions:
-- On TMSG_WAITALL shift to state 797
-- On TMSG_PEEK shift to state 798
-- On TMSG_OOB shift to state 799
-- On TMSG_DONTWAIT shift to state 800
-- On LPAREN shift to state 802
-- On msgbflag shift to state 807
## Reductions:

State 807:
## Known stack suffix:
## msgbflaglisth SC msgbflag
## LR(1) items:
msgbflaglisth -> msgbflaglisth SC msgbflag . [ SC RSQBRKT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production msgbflaglisth -> msgbflaglisth SC msgbflag

State 808:
## Known stack suffix:
## LSQBRKT msgbflaglisth RSQBRKT
## LR(1) items:
msgbflaglist -> LSQBRKT msgbflaglisth RSQBRKT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production msgbflaglist -> LSQBRKT msgbflaglisth RSQBRKT

State 809:
## Known stack suffix:
## msgbflag
## LR(1) items:
msgbflaglisth -> msgbflag . [ SC RSQBRKT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production msgbflaglisth -> msgbflag

State 810:
## Known stack suffix:
## LPAREN
## LR(1) items:
msgbflaglist -> LPAREN . msgbflaglist RPAREN [ RPAREN ]
## Transitions:
-- On LSQBRKT shift to state 796
-- On LPAREN shift to state 810
-- On msgbflaglist shift to state 811
## Reductions:

State 811:
## Known stack suffix:
## LPAREN msgbflaglist
## LR(1) items:
msgbflaglist -> LPAREN msgbflaglist . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 812
## Reductions:

State 812:
## Known stack suffix:
## LPAREN msgbflaglist RPAREN
## LR(1) items:
msgbflaglist -> LPAREN msgbflaglist RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production msgbflaglist -> LPAREN msgbflaglist RPAREN

State 813:
## Known stack suffix:
## SEND LPAREN fd COMMA addrop COMMA stringr COMMA msgbflaglist
## LR(1) items:
call -> SEND LPAREN fd COMMA addrop COMMA stringr COMMA msgbflaglist . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 814
## Reductions:

State 814:
## Known stack suffix:
## SEND LPAREN fd COMMA addrop COMMA stringr COMMA msgbflaglist RPAREN
## LR(1) items:
call -> SEND LPAREN fd COMMA addrop COMMA stringr COMMA msgbflaglist RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> SEND LPAREN fd COMMA addrop COMMA stringr COMMA msgbflaglist RPAREN

State 815:
## Known stack suffix:
## RECV
## LR(1) items:
call -> RECV . LPAREN fd COMMA intr COMMA msgbflaglist RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 816
## Reductions:

State 816:
## Known stack suffix:
## RECV LPAREN
## LR(1) items:
call -> RECV LPAREN . fd COMMA intr COMMA msgbflaglist RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 817
## Reductions:

State 817:
## Known stack suffix:
## RECV LPAREN fd
## LR(1) items:
call -> RECV LPAREN fd . COMMA intr COMMA msgbflaglist RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 818
## Reductions:

State 818:
## Known stack suffix:
## RECV LPAREN fd COMMA
## LR(1) items:
call -> RECV LPAREN fd COMMA . intr COMMA msgbflaglist RPAREN [ RPAREN ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 819
## Reductions:

State 819:
## Known stack suffix:
## RECV LPAREN fd COMMA intr
## LR(1) items:
call -> RECV LPAREN fd COMMA intr . COMMA msgbflaglist RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 820
## Reductions:

State 820:
## Known stack suffix:
## RECV LPAREN fd COMMA intr COMMA
## LR(1) items:
call -> RECV LPAREN fd COMMA intr COMMA . msgbflaglist RPAREN [ RPAREN ]
## Transitions:
-- On LSQBRKT shift to state 796
-- On LPAREN shift to state 810
-- On msgbflaglist shift to state 821
## Reductions:

State 821:
## Known stack suffix:
## RECV LPAREN fd COMMA intr COMMA msgbflaglist
## LR(1) items:
call -> RECV LPAREN fd COMMA intr COMMA msgbflaglist . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 822
## Reductions:

State 822:
## Known stack suffix:
## RECV LPAREN fd COMMA intr COMMA msgbflaglist RPAREN
## LR(1) items:
call -> RECV LPAREN fd COMMA intr COMMA msgbflaglist RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> RECV LPAREN fd COMMA intr COMMA msgbflaglist RPAREN

State 823:
## Known stack suffix:
## PSELECT
## LR(1) items:
call -> PSELECT . pselectopts [ RPAREN ]
## Transitions:
-- On LSQBRKT shift to state 538
-- On LPAREN shift to state 824
-- On pselectopts shift to state 883
-- On fdlist shift to state 827
## Reductions:

State 824:
## Known stack suffix:
## LPAREN
## LR(1) items:
pselectopts -> LPAREN . pselectopts RPAREN [ RPAREN ]
## Transitions:
-- On LSQBRKT shift to state 538
-- On LPAREN shift to state 824
-- On pselectopts shift to state 825
-- On fdlist shift to state 827
## Reductions:

State 825:
## Known stack suffix:
## LPAREN pselectopts
## LR(1) items:
pselectopts -> LPAREN pselectopts . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 826
## Reductions:

State 826:
## Known stack suffix:
## LPAREN pselectopts RPAREN
## LR(1) items:
pselectopts -> LPAREN pselectopts RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pselectopts -> LPAREN pselectopts RPAREN

State 827:
## Known stack suffix:
## fdlist
## LR(1) items:
pselectopts -> fdlist . COMMA fdlist COMMA fdlist COMMA topt COMMA siglistopt [ RPAREN ]
## Transitions:
-- On COMMA shift to state 828
## Reductions:

State 828:
## Known stack suffix:
## fdlist COMMA
## LR(1) items:
pselectopts -> fdlist COMMA . fdlist COMMA fdlist COMMA topt COMMA siglistopt [ RPAREN ]
## Transitions:
-- On LSQBRKT shift to state 538
-- On fdlist shift to state 829
## Reductions:

State 829:
## Known stack suffix:
## fdlist COMMA fdlist
## LR(1) items:
pselectopts -> fdlist COMMA fdlist . COMMA fdlist COMMA topt COMMA siglistopt [ RPAREN ]
## Transitions:
-- On COMMA shift to state 830
## Reductions:

State 830:
## Known stack suffix:
## fdlist COMMA fdlist COMMA
## LR(1) items:
pselectopts -> fdlist COMMA fdlist COMMA . fdlist COMMA topt COMMA siglistopt [ RPAREN ]
## Transitions:
-- On LSQBRKT shift to state 538
-- On fdlist shift to state 831
## Reductions:

State 831:
## Known stack suffix:
## fdlist COMMA fdlist COMMA fdlist
## LR(1) items:
pselectopts -> fdlist COMMA fdlist COMMA fdlist . COMMA topt COMMA siglistopt [ RPAREN ]
## Transitions:
-- On COMMA shift to state 832
## Reductions:

State 832:
## Known stack suffix:
## fdlist COMMA fdlist COMMA fdlist COMMA
## LR(1) items:
pselectopts -> fdlist COMMA fdlist COMMA fdlist COMMA . topt COMMA siglistopt [ RPAREN ]
## Transitions:
-- On SOME shift to state 728
-- On NONE shift to state 731
-- On LPAREN shift to state 732
-- On topt shift to state 833
## Reductions:

State 833:
## Known stack suffix:
## fdlist COMMA fdlist COMMA fdlist COMMA topt
## LR(1) items:
pselectopts -> fdlist COMMA fdlist COMMA fdlist COMMA topt . COMMA siglistopt [ RPAREN ]
## Transitions:
-- On COMMA shift to state 834
## Reductions:

State 834:
## Known stack suffix:
## fdlist COMMA fdlist COMMA fdlist COMMA topt COMMA
## LR(1) items:
pselectopts -> fdlist COMMA fdlist COMMA fdlist COMMA topt COMMA . siglistopt [ RPAREN ]
## Transitions:
-- On SOME shift to state 835
-- On NONE shift to state 878
-- On LPAREN shift to state 879
-- On siglistopt shift to state 882
## Reductions:

State 835:
## Known stack suffix:
## SOME
## LR(1) items:
siglistopt -> SOME . siglist [ RPAREN ]
## Transitions:
-- On LSQBRKT shift to state 836
-- On LPAREN shift to state 874
-- On siglist shift to state 877
## Reductions:

State 836:
## Known stack suffix:
## LSQBRKT
## LR(1) items:
siglist -> LSQBRKT . siglisth RSQBRKT [ RPAREN ]
siglist -> LSQBRKT . RSQBRKT [ RPAREN ]
## Transitions:
-- On TSIGXFSZ shift to state 837
-- On TSIGXCPU shift to state 838
-- On TSIGVTALRM shift to state 839
-- On TSIGUSR2 shift to state 840
-- On TSIGUSR1 shift to state 841
-- On TSIGURG shift to state 842
-- On TSIGTTOU shift to state 843
-- On TSIGTTIN shift to state 844
-- On TSIGTSTP shift to state 845
-- On TSIGTRAP shift to state 846
-- On TSIGTERM shift to state 847
-- On TSIGSYS shift to state 848
-- On TSIGSTOP shift to state 849
-- On TSIGSEGV shift to state 850
-- On TSIGQUIT shift to state 851
-- On TSIGPROF shift to state 852
-- On TSIGPOLL shift to state 853
-- On TSIGPIPE shift to state 854
-- On TSIGKILL shift to state 855
-- On TSIGINT shift to state 856
-- On TSIGILL shift to state 857
-- On TSIGHUP shift to state 858
-- On TSIGFPE shift to state 859
-- On TSIGCONT shift to state 860
-- On TSIGCHLD shift to state 861
-- On TSIGBUS shift to state 862
-- On TSIGALRM shift to state 863
-- On TSIGABRT shift to state 864
-- On RSQBRKT shift to state 865
-- On LPAREN shift to state 866
-- On signal shift to state 869
-- On siglisth shift to state 870
## Reductions:

State 837:
## Known stack suffix:
## TSIGXFSZ
## LR(1) items:
signal -> TSIGXFSZ . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGXFSZ

State 838:
## Known stack suffix:
## TSIGXCPU
## LR(1) items:
signal -> TSIGXCPU . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGXCPU

State 839:
## Known stack suffix:
## TSIGVTALRM
## LR(1) items:
signal -> TSIGVTALRM . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGVTALRM

State 840:
## Known stack suffix:
## TSIGUSR2
## LR(1) items:
signal -> TSIGUSR2 . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGUSR2

State 841:
## Known stack suffix:
## TSIGUSR1
## LR(1) items:
signal -> TSIGUSR1 . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGUSR1

State 842:
## Known stack suffix:
## TSIGURG
## LR(1) items:
signal -> TSIGURG . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGURG

State 843:
## Known stack suffix:
## TSIGTTOU
## LR(1) items:
signal -> TSIGTTOU . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGTTOU

State 844:
## Known stack suffix:
## TSIGTTIN
## LR(1) items:
signal -> TSIGTTIN . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGTTIN

State 845:
## Known stack suffix:
## TSIGTSTP
## LR(1) items:
signal -> TSIGTSTP . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGTSTP

State 846:
## Known stack suffix:
## TSIGTRAP
## LR(1) items:
signal -> TSIGTRAP . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGTRAP

State 847:
## Known stack suffix:
## TSIGTERM
## LR(1) items:
signal -> TSIGTERM . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGTERM

State 848:
## Known stack suffix:
## TSIGSYS
## LR(1) items:
signal -> TSIGSYS . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGSYS

State 849:
## Known stack suffix:
## TSIGSTOP
## LR(1) items:
signal -> TSIGSTOP . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGSTOP

State 850:
## Known stack suffix:
## TSIGSEGV
## LR(1) items:
signal -> TSIGSEGV . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGSEGV

State 851:
## Known stack suffix:
## TSIGQUIT
## LR(1) items:
signal -> TSIGQUIT . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGQUIT

State 852:
## Known stack suffix:
## TSIGPROF
## LR(1) items:
signal -> TSIGPROF . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGPROF

State 853:
## Known stack suffix:
## TSIGPOLL
## LR(1) items:
signal -> TSIGPOLL . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGPOLL

State 854:
## Known stack suffix:
## TSIGPIPE
## LR(1) items:
signal -> TSIGPIPE . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGPIPE

State 855:
## Known stack suffix:
## TSIGKILL
## LR(1) items:
signal -> TSIGKILL . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGKILL

State 856:
## Known stack suffix:
## TSIGINT
## LR(1) items:
signal -> TSIGINT . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGINT

State 857:
## Known stack suffix:
## TSIGILL
## LR(1) items:
signal -> TSIGILL . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGILL

State 858:
## Known stack suffix:
## TSIGHUP
## LR(1) items:
signal -> TSIGHUP . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGHUP

State 859:
## Known stack suffix:
## TSIGFPE
## LR(1) items:
signal -> TSIGFPE . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGFPE

State 860:
## Known stack suffix:
## TSIGCONT
## LR(1) items:
signal -> TSIGCONT . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGCONT

State 861:
## Known stack suffix:
## TSIGCHLD
## LR(1) items:
signal -> TSIGCHLD . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGCHLD

State 862:
## Known stack suffix:
## TSIGBUS
## LR(1) items:
signal -> TSIGBUS . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGBUS

State 863:
## Known stack suffix:
## TSIGALRM
## LR(1) items:
signal -> TSIGALRM . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGALRM

State 864:
## Known stack suffix:
## TSIGABRT
## LR(1) items:
signal -> TSIGABRT . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> TSIGABRT

State 865:
## Known stack suffix:
## LSQBRKT RSQBRKT
## LR(1) items:
siglist -> LSQBRKT RSQBRKT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production siglist -> LSQBRKT RSQBRKT

State 866:
## Known stack suffix:
## LPAREN
## LR(1) items:
signal -> LPAREN . signal RPAREN [ SC RSQBRKT RPAREN ]
## Transitions:
-- On TSIGXFSZ shift to state 837
-- On TSIGXCPU shift to state 838
-- On TSIGVTALRM shift to state 839
-- On TSIGUSR2 shift to state 840
-- On TSIGUSR1 shift to state 841
-- On TSIGURG shift to state 842
-- On TSIGTTOU shift to state 843
-- On TSIGTTIN shift to state 844
-- On TSIGTSTP shift to state 845
-- On TSIGTRAP shift to state 846
-- On TSIGTERM shift to state 847
-- On TSIGSYS shift to state 848
-- On TSIGSTOP shift to state 849
-- On TSIGSEGV shift to state 850
-- On TSIGQUIT shift to state 851
-- On TSIGPROF shift to state 852
-- On TSIGPOLL shift to state 853
-- On TSIGPIPE shift to state 854
-- On TSIGKILL shift to state 855
-- On TSIGINT shift to state 856
-- On TSIGILL shift to state 857
-- On TSIGHUP shift to state 858
-- On TSIGFPE shift to state 859
-- On TSIGCONT shift to state 860
-- On TSIGCHLD shift to state 861
-- On TSIGBUS shift to state 862
-- On TSIGALRM shift to state 863
-- On TSIGABRT shift to state 864
-- On LPAREN shift to state 866
-- On signal shift to state 867
## Reductions:

State 867:
## Known stack suffix:
## LPAREN signal
## LR(1) items:
signal -> LPAREN signal . RPAREN [ SC RSQBRKT RPAREN ]
## Transitions:
-- On RPAREN shift to state 868
## Reductions:

State 868:
## Known stack suffix:
## LPAREN signal RPAREN
## LR(1) items:
signal -> LPAREN signal RPAREN . [ SC RSQBRKT RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signal -> LPAREN signal RPAREN

State 869:
## Known stack suffix:
## signal
## LR(1) items:
siglisth -> signal . [ SC RSQBRKT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production siglisth -> signal

State 870:
## Known stack suffix:
## LSQBRKT siglisth
## LR(1) items:
siglist -> LSQBRKT siglisth . RSQBRKT [ RPAREN ]
siglisth -> siglisth . SC signal [ SC RSQBRKT ]
## Transitions:
-- On SC shift to state 871
-- On RSQBRKT shift to state 873
## Reductions:

State 871:
## Known stack suffix:
## siglisth SC
## LR(1) items:
siglisth -> siglisth SC . signal [ SC RSQBRKT ]
## Transitions:
-- On TSIGXFSZ shift to state 837
-- On TSIGXCPU shift to state 838
-- On TSIGVTALRM shift to state 839
-- On TSIGUSR2 shift to state 840
-- On TSIGUSR1 shift to state 841
-- On TSIGURG shift to state 842
-- On TSIGTTOU shift to state 843
-- On TSIGTTIN shift to state 844
-- On TSIGTSTP shift to state 845
-- On TSIGTRAP shift to state 846
-- On TSIGTERM shift to state 847
-- On TSIGSYS shift to state 848
-- On TSIGSTOP shift to state 849
-- On TSIGSEGV shift to state 850
-- On TSIGQUIT shift to state 851
-- On TSIGPROF shift to state 852
-- On TSIGPOLL shift to state 853
-- On TSIGPIPE shift to state 854
-- On TSIGKILL shift to state 855
-- On TSIGINT shift to state 856
-- On TSIGILL shift to state 857
-- On TSIGHUP shift to state 858
-- On TSIGFPE shift to state 859
-- On TSIGCONT shift to state 860
-- On TSIGCHLD shift to state 861
-- On TSIGBUS shift to state 862
-- On TSIGALRM shift to state 863
-- On TSIGABRT shift to state 864
-- On LPAREN shift to state 866
-- On signal shift to state 872
## Reductions:

State 872:
## Known stack suffix:
## siglisth SC signal
## LR(1) items:
siglisth -> siglisth SC signal . [ SC RSQBRKT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production siglisth -> siglisth SC signal

State 873:
## Known stack suffix:
## LSQBRKT siglisth RSQBRKT
## LR(1) items:
siglist -> LSQBRKT siglisth RSQBRKT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production siglist -> LSQBRKT siglisth RSQBRKT

State 874:
## Known stack suffix:
## LPAREN
## LR(1) items:
siglist -> LPAREN . siglist RPAREN [ RPAREN ]
## Transitions:
-- On LSQBRKT shift to state 836
-- On LPAREN shift to state 874
-- On siglist shift to state 875
## Reductions:

State 875:
## Known stack suffix:
## LPAREN siglist
## LR(1) items:
siglist -> LPAREN siglist . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 876
## Reductions:

State 876:
## Known stack suffix:
## LPAREN siglist RPAREN
## LR(1) items:
siglist -> LPAREN siglist RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production siglist -> LPAREN siglist RPAREN

State 877:
## Known stack suffix:
## SOME siglist
## LR(1) items:
siglistopt -> SOME siglist . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production siglistopt -> SOME siglist

State 878:
## Known stack suffix:
## NONE
## LR(1) items:
siglistopt -> NONE . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production siglistopt -> NONE

State 879:
## Known stack suffix:
## LPAREN
## LR(1) items:
siglistopt -> LPAREN . siglistopt RPAREN [ RPAREN ]
## Transitions:
-- On SOME shift to state 835
-- On NONE shift to state 878
-- On LPAREN shift to state 879
-- On siglistopt shift to state 880
## Reductions:

State 880:
## Known stack suffix:
## LPAREN siglistopt
## LR(1) items:
siglistopt -> LPAREN siglistopt . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 881
## Reductions:

State 881:
## Known stack suffix:
## LPAREN siglistopt RPAREN
## LR(1) items:
siglistopt -> LPAREN siglistopt RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production siglistopt -> LPAREN siglistopt RPAREN

State 882:
## Known stack suffix:
## fdlist COMMA fdlist COMMA fdlist COMMA topt COMMA siglistopt
## LR(1) items:
pselectopts -> fdlist COMMA fdlist COMMA fdlist COMMA topt COMMA siglistopt . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pselectopts -> fdlist COMMA fdlist COMMA fdlist COMMA topt COMMA siglistopt

State 883:
## Known stack suffix:
## PSELECT pselectopts
## LR(1) items:
call -> PSELECT pselectopts . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> PSELECT pselectopts

State 884:
## Known stack suffix:
## LPAREN
## LR(1) items:
call -> LPAREN . call RPAREN [ RPAREN ]
## Transitions:
-- On SOCKET shift to state 700
-- On SOCKATMARK shift to state 706
-- On SHUTDOWN shift to state 708
-- On SETSOCKTOPT shift to state 716
-- On SETSOCKNOPT shift to state 737
-- On SETSOCKBOPT shift to state 752
-- On SETFILEFLAGS shift to state 769
-- On SEND shift to state 778
-- On RECV shift to state 815
-- On PSELECT shift to state 823
-- On LPAREN shift to state 884
-- On LISTEN shift to state 885
-- On GETSOCKTOPT shift to state 891
-- On GETSOCKNOPT shift to state 897
-- On GETSOCKNAME shift to state 903
-- On GETSOCKLISTENING shift to state 905
-- On GETSOCKERR shift to state 907
-- On GETSOCKBOPT shift to state 909
-- On GETPEERNAME shift to state 915
-- On GETIFADDRS shift to state 917
-- On GETFILEFLAGS shift to state 919
-- On DUPFD shift to state 921
-- On DUP shift to state 927
-- On DISCONNECT shift to state 929
-- On CONNECT shift to state 931
-- On CLOSE shift to state 939
-- On BIND shift to state 941
-- On ACCEPT shift to state 949
-- On call shift to state 951
## Reductions:

State 885:
## Known stack suffix:
## LISTEN
## LR(1) items:
call -> LISTEN . LPAREN fd COMMA intr RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 886
## Reductions:

State 886:
## Known stack suffix:
## LISTEN LPAREN
## LR(1) items:
call -> LISTEN LPAREN . fd COMMA intr RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 887
## Reductions:

State 887:
## Known stack suffix:
## LISTEN LPAREN fd
## LR(1) items:
call -> LISTEN LPAREN fd . COMMA intr RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 888
## Reductions:

State 888:
## Known stack suffix:
## LISTEN LPAREN fd COMMA
## LR(1) items:
call -> LISTEN LPAREN fd COMMA . intr RPAREN [ RPAREN ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 889
## Reductions:

State 889:
## Known stack suffix:
## LISTEN LPAREN fd COMMA intr
## LR(1) items:
call -> LISTEN LPAREN fd COMMA intr . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 890
## Reductions:

State 890:
## Known stack suffix:
## LISTEN LPAREN fd COMMA intr RPAREN
## LR(1) items:
call -> LISTEN LPAREN fd COMMA intr RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> LISTEN LPAREN fd COMMA intr RPAREN

State 891:
## Known stack suffix:
## GETSOCKTOPT
## LR(1) items:
call -> GETSOCKTOPT . LPAREN fd COMMA socktflag RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 892
## Reductions:

State 892:
## Known stack suffix:
## GETSOCKTOPT LPAREN
## LR(1) items:
call -> GETSOCKTOPT LPAREN . fd COMMA socktflag RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 893
## Reductions:

State 893:
## Known stack suffix:
## GETSOCKTOPT LPAREN fd
## LR(1) items:
call -> GETSOCKTOPT LPAREN fd . COMMA socktflag RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 894
## Reductions:

State 894:
## Known stack suffix:
## GETSOCKTOPT LPAREN fd COMMA
## LR(1) items:
call -> GETSOCKTOPT LPAREN fd COMMA . socktflag RPAREN [ RPAREN ]
## Transitions:
-- On TSO_SNDTIMEO shift to state 720
-- On TSO_RCVTIMEO shift to state 721
-- On TSO_LINGER shift to state 722
-- On LPAREN shift to state 723
-- On socktflag shift to state 895
## Reductions:

State 895:
## Known stack suffix:
## GETSOCKTOPT LPAREN fd COMMA socktflag
## LR(1) items:
call -> GETSOCKTOPT LPAREN fd COMMA socktflag . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 896
## Reductions:

State 896:
## Known stack suffix:
## GETSOCKTOPT LPAREN fd COMMA socktflag RPAREN
## LR(1) items:
call -> GETSOCKTOPT LPAREN fd COMMA socktflag RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> GETSOCKTOPT LPAREN fd COMMA socktflag RPAREN

State 897:
## Known stack suffix:
## GETSOCKNOPT
## LR(1) items:
call -> GETSOCKNOPT . LPAREN fd COMMA socknflag RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 898
## Reductions:

State 898:
## Known stack suffix:
## GETSOCKNOPT LPAREN
## LR(1) items:
call -> GETSOCKNOPT LPAREN . fd COMMA socknflag RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 899
## Reductions:

State 899:
## Known stack suffix:
## GETSOCKNOPT LPAREN fd
## LR(1) items:
call -> GETSOCKNOPT LPAREN fd . COMMA socknflag RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 900
## Reductions:

State 900:
## Known stack suffix:
## GETSOCKNOPT LPAREN fd COMMA
## LR(1) items:
call -> GETSOCKNOPT LPAREN fd COMMA . socknflag RPAREN [ RPAREN ]
## Transitions:
-- On TSO_SNDLOWAT shift to state 741
-- On TSO_SNDBUF shift to state 742
-- On TSO_RCVLOWAT shift to state 743
-- On TSO_RCVBUF shift to state 744
-- On LPAREN shift to state 745
-- On socknflag shift to state 901
## Reductions:

State 901:
## Known stack suffix:
## GETSOCKNOPT LPAREN fd COMMA socknflag
## LR(1) items:
call -> GETSOCKNOPT LPAREN fd COMMA socknflag . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 902
## Reductions:

State 902:
## Known stack suffix:
## GETSOCKNOPT LPAREN fd COMMA socknflag RPAREN
## LR(1) items:
call -> GETSOCKNOPT LPAREN fd COMMA socknflag RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> GETSOCKNOPT LPAREN fd COMMA socknflag RPAREN

State 903:
## Known stack suffix:
## GETSOCKNAME
## LR(1) items:
call -> GETSOCKNAME . fd [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 904
## Reductions:

State 904:
## Known stack suffix:
## GETSOCKNAME fd
## LR(1) items:
call -> GETSOCKNAME fd . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> GETSOCKNAME fd

State 905:
## Known stack suffix:
## GETSOCKLISTENING
## LR(1) items:
call -> GETSOCKLISTENING . fd [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 906
## Reductions:

State 906:
## Known stack suffix:
## GETSOCKLISTENING fd
## LR(1) items:
call -> GETSOCKLISTENING fd . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> GETSOCKLISTENING fd

State 907:
## Known stack suffix:
## GETSOCKERR
## LR(1) items:
call -> GETSOCKERR . fd [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 908
## Reductions:

State 908:
## Known stack suffix:
## GETSOCKERR fd
## LR(1) items:
call -> GETSOCKERR fd . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> GETSOCKERR fd

State 909:
## Known stack suffix:
## GETSOCKBOPT
## LR(1) items:
call -> GETSOCKBOPT . LPAREN fd COMMA sockbflag RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 910
## Reductions:

State 910:
## Known stack suffix:
## GETSOCKBOPT LPAREN
## LR(1) items:
call -> GETSOCKBOPT LPAREN . fd COMMA sockbflag RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 911
## Reductions:

State 911:
## Known stack suffix:
## GETSOCKBOPT LPAREN fd
## LR(1) items:
call -> GETSOCKBOPT LPAREN fd . COMMA sockbflag RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 912
## Reductions:

State 912:
## Known stack suffix:
## GETSOCKBOPT LPAREN fd COMMA
## LR(1) items:
call -> GETSOCKBOPT LPAREN fd COMMA . sockbflag RPAREN [ RPAREN ]
## Transitions:
-- On TSO_REUSEADDR shift to state 756
-- On TSO_OOBINLINE shift to state 757
-- On TSO_KEEPALIVE shift to state 758
-- On TSO_DONTROUTE shift to state 759
-- On TSO_BSDCOMPAT shift to state 760
-- On TSO_BROADCAST shift to state 761
-- On LPAREN shift to state 762
-- On sockbflag shift to state 913
## Reductions:

State 913:
## Known stack suffix:
## GETSOCKBOPT LPAREN fd COMMA sockbflag
## LR(1) items:
call -> GETSOCKBOPT LPAREN fd COMMA sockbflag . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 914
## Reductions:

State 914:
## Known stack suffix:
## GETSOCKBOPT LPAREN fd COMMA sockbflag RPAREN
## LR(1) items:
call -> GETSOCKBOPT LPAREN fd COMMA sockbflag RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> GETSOCKBOPT LPAREN fd COMMA sockbflag RPAREN

State 915:
## Known stack suffix:
## GETPEERNAME
## LR(1) items:
call -> GETPEERNAME . fd [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 916
## Reductions:

State 916:
## Known stack suffix:
## GETPEERNAME fd
## LR(1) items:
call -> GETPEERNAME fd . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> GETPEERNAME fd

State 917:
## Known stack suffix:
## GETIFADDRS
## LR(1) items:
call -> GETIFADDRS . UNIT [ RPAREN ]
## Transitions:
-- On UNIT shift to state 918
## Reductions:

State 918:
## Known stack suffix:
## GETIFADDRS UNIT
## LR(1) items:
call -> GETIFADDRS UNIT . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> GETIFADDRS UNIT

State 919:
## Known stack suffix:
## GETFILEFLAGS
## LR(1) items:
call -> GETFILEFLAGS . fd [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 920
## Reductions:

State 920:
## Known stack suffix:
## GETFILEFLAGS fd
## LR(1) items:
call -> GETFILEFLAGS fd . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> GETFILEFLAGS fd

State 921:
## Known stack suffix:
## DUPFD
## LR(1) items:
call -> DUPFD . LPAREN fd COMMA INT RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 922
## Reductions:

State 922:
## Known stack suffix:
## DUPFD LPAREN
## LR(1) items:
call -> DUPFD LPAREN . fd COMMA INT RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 923
## Reductions:

State 923:
## Known stack suffix:
## DUPFD LPAREN fd
## LR(1) items:
call -> DUPFD LPAREN fd . COMMA INT RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 924
## Reductions:

State 924:
## Known stack suffix:
## DUPFD LPAREN fd COMMA
## LR(1) items:
call -> DUPFD LPAREN fd COMMA . INT RPAREN [ RPAREN ]
## Transitions:
-- On INT shift to state 925
## Reductions:

State 925:
## Known stack suffix:
## DUPFD LPAREN fd COMMA INT
## LR(1) items:
call -> DUPFD LPAREN fd COMMA INT . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 926
## Reductions:

State 926:
## Known stack suffix:
## DUPFD LPAREN fd COMMA INT RPAREN
## LR(1) items:
call -> DUPFD LPAREN fd COMMA INT RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> DUPFD LPAREN fd COMMA INT RPAREN

State 927:
## Known stack suffix:
## DUP
## LR(1) items:
call -> DUP . fd [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 928
## Reductions:

State 928:
## Known stack suffix:
## DUP fd
## LR(1) items:
call -> DUP fd . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> DUP fd

State 929:
## Known stack suffix:
## DISCONNECT
## LR(1) items:
call -> DISCONNECT . fd [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 930
## Reductions:

State 930:
## Known stack suffix:
## DISCONNECT fd
## LR(1) items:
call -> DISCONNECT fd . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> DISCONNECT fd

State 931:
## Known stack suffix:
## CONNECT
## LR(1) items:
call -> CONNECT . LPAREN fd COMMA ip COMMA portoption RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 932
## Reductions:

State 932:
## Known stack suffix:
## CONNECT LPAREN
## LR(1) items:
call -> CONNECT LPAREN . fd COMMA ip COMMA portoption RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 933
## Reductions:

State 933:
## Known stack suffix:
## CONNECT LPAREN fd
## LR(1) items:
call -> CONNECT LPAREN fd . COMMA ip COMMA portoption RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 934
## Reductions:

State 934:
## Known stack suffix:
## CONNECT LPAREN fd COMMA
## LR(1) items:
call -> CONNECT LPAREN fd COMMA . ip COMMA portoption RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 52
-- On IP shift to state 53
-- On ip shift to state 935
## Reductions:

State 935:
## Known stack suffix:
## CONNECT LPAREN fd COMMA ip
## LR(1) items:
call -> CONNECT LPAREN fd COMMA ip . COMMA portoption RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 936
## Reductions:

State 936:
## Known stack suffix:
## CONNECT LPAREN fd COMMA ip COMMA
## LR(1) items:
call -> CONNECT LPAREN fd COMMA ip COMMA . portoption RPAREN [ RPAREN ]
## Transitions:
-- On SOME shift to state 72
-- On NONE shift to state 79
-- On LPAREN shift to state 80
-- On portoption shift to state 937
## Reductions:

State 937:
## Known stack suffix:
## CONNECT LPAREN fd COMMA ip COMMA portoption
## LR(1) items:
call -> CONNECT LPAREN fd COMMA ip COMMA portoption . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 938
## Reductions:

State 938:
## Known stack suffix:
## CONNECT LPAREN fd COMMA ip COMMA portoption RPAREN
## LR(1) items:
call -> CONNECT LPAREN fd COMMA ip COMMA portoption RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> CONNECT LPAREN fd COMMA ip COMMA portoption RPAREN

State 939:
## Known stack suffix:
## CLOSE
## LR(1) items:
call -> CLOSE . fd [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 940
## Reductions:

State 940:
## Known stack suffix:
## CLOSE fd
## LR(1) items:
call -> CLOSE fd . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> CLOSE fd

State 941:
## Known stack suffix:
## BIND
## LR(1) items:
call -> BIND . LPAREN fd COMMA ipoption COMMA portoption RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 942
## Reductions:

State 942:
## Known stack suffix:
## BIND LPAREN
## LR(1) items:
call -> BIND LPAREN . fd COMMA ipoption COMMA portoption RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 943
## Reductions:

State 943:
## Known stack suffix:
## BIND LPAREN fd
## LR(1) items:
call -> BIND LPAREN fd . COMMA ipoption COMMA portoption RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 944
## Reductions:

State 944:
## Known stack suffix:
## BIND LPAREN fd COMMA
## LR(1) items:
call -> BIND LPAREN fd COMMA . ipoption COMMA portoption RPAREN [ RPAREN ]
## Transitions:
-- On SOME shift to state 51
-- On NONE shift to state 65
-- On LPAREN shift to state 85
-- On ipoption shift to state 945
## Reductions:

State 945:
## Known stack suffix:
## BIND LPAREN fd COMMA ipoption
## LR(1) items:
call -> BIND LPAREN fd COMMA ipoption . COMMA portoption RPAREN [ RPAREN ]
## Transitions:
-- On COMMA shift to state 946
## Reductions:

State 946:
## Known stack suffix:
## BIND LPAREN fd COMMA ipoption COMMA
## LR(1) items:
call -> BIND LPAREN fd COMMA ipoption COMMA . portoption RPAREN [ RPAREN ]
## Transitions:
-- On SOME shift to state 72
-- On NONE shift to state 79
-- On LPAREN shift to state 80
-- On portoption shift to state 947
## Reductions:

State 947:
## Known stack suffix:
## BIND LPAREN fd COMMA ipoption COMMA portoption
## LR(1) items:
call -> BIND LPAREN fd COMMA ipoption COMMA portoption . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 948
## Reductions:

State 948:
## Known stack suffix:
## BIND LPAREN fd COMMA ipoption COMMA portoption RPAREN
## LR(1) items:
call -> BIND LPAREN fd COMMA ipoption COMMA portoption RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> BIND LPAREN fd COMMA ipoption COMMA portoption RPAREN

State 949:
## Known stack suffix:
## ACCEPT
## LR(1) items:
call -> ACCEPT . fd [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 524
-- On FD shift to state 477
-- On fd shift to state 950
## Reductions:

State 950:
## Known stack suffix:
## ACCEPT fd
## LR(1) items:
call -> ACCEPT fd . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> ACCEPT fd

State 951:
## Known stack suffix:
## LPAREN call
## LR(1) items:
call -> LPAREN call . RPAREN [ RPAREN ]
## Transitions:
-- On RPAREN shift to state 952
## Reductions:

State 952:
## Known stack suffix:
## LPAREN call RPAREN
## LR(1) items:
call -> LPAREN call RPAREN . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call -> LPAREN call RPAREN

State 953:
## Known stack suffix:
## LHCALL LPAREN tid COMMA call
## LR(1) items:
lib -> LHCALL LPAREN tid COMMA call . RPAREN [ SC RPAREN ]
## Transitions:
-- On RPAREN shift to state 954
## Reductions:

State 954:
## Known stack suffix:
## LHCALL LPAREN tid COMMA call RPAREN
## LR(1) items:
lib -> LHCALL LPAREN tid COMMA call RPAREN . [ SC RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lib -> LHCALL LPAREN tid COMMA call RPAREN

State 955:
## Known stack suffix:
## trace
## LR(1) items:
main_h -> trace . SC [ # ]
## Transitions:
-- On SC shift to state 956
## Reductions:

State 956:
## Known stack suffix:
## trace SC
## LR(1) items:
main_h -> trace SC . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production main_h -> trace SC

State 957:
## Known stack suffix:
## netcall
## LR(1) items:
main_h -> netcall . SC [ # ]
## Transitions:
-- On SC shift to state 958
## Reductions:

State 958:
## Known stack suffix:
## netcall SC
## LR(1) items:
main_h -> netcall SC . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production main_h -> netcall SC

State 959:
## Known stack suffix:
## timecomment comment main_h
## LR(1) items:
main -> timecomment comment main_h . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production main -> timecomment comment main_h

State 960:
## Known stack suffix:
## lib
## LR(1) items:
main_h -> lib . SC [ # ]
## Transitions:
-- On SC shift to state 961
## Reductions:

State 961:
## Known stack suffix:
## lib SC
## LR(1) items:
main_h -> lib SC . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production main_h -> lib SC

State 962:
## Known stack suffix:
## epsilon
## LR(1) items:
main_h -> epsilon . SC [ # ]
## Transitions:
-- On SC shift to state 963
## Reductions:

State 963:
## Known stack suffix:
## epsilon SC
## LR(1) items:
main_h -> epsilon SC . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production main_h -> epsilon SC

State 964:
## Known stack suffix:
## abstime
## LR(1) items:
main_h -> abstime . COMMENT [ # ]
## Transitions:
-- On COMMENT shift to state 965
## Reductions:

State 965:
## Known stack suffix:
## abstime COMMENT
## LR(1) items:
main_h -> abstime COMMENT . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production main_h -> abstime COMMENT

State 966:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept main

State 967:
## Known stack suffix:
##
## LR(1) items:
spec3main' -> . spec3main [ # ]
## Transitions:
-- On SCOMMENTSTART shift to state 1
-- On timecomment shift to state 968
-- On spec3main shift to state 995
## Reductions:
-- On T_ABSTIME reduce production timecomment ->
-- On LN1_HOST reduce production timecomment ->
-- On LN1_EPSILON reduce production timecomment ->
-- On COMMENT reduce production timecomment ->

State 968:
## Known stack suffix:
## timecomment
## LR(1) items:
spec3main -> timecomment . comment spec3main_h [ # ]
## Transitions:
-- On COMMENT shift to state 18
-- On comment_h shift to state 19
-- On comment shift to state 969
## Reductions:
-- On T_ABSTIME reduce production comment ->
-- On LN1_HOST reduce production comment ->
-- On LN1_EPSILON reduce production comment ->

State 969:
## Known stack suffix:
## timecomment comment
## LR(1) items:
spec3main -> timecomment comment . spec3main_h [ # ]
## Transitions:
-- On T_ABSTIME shift to state 970
-- On LN1_HOST shift to state 973
-- On LN1_EPSILON shift to state 982
-- On spec3main_h shift to state 988
-- On ln1host shift to state 989
-- On ln1epsilon shift to state 991
-- On ln1abstime shift to state 993
## Reductions:

State 970:
## Known stack suffix:
## T_ABSTIME
## LR(1) items:
ln1abstime -> T_ABSTIME . intr intr [ COMMENT ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 971
## Reductions:

State 971:
## Known stack suffix:
## T_ABSTIME intr
## LR(1) items:
ln1abstime -> T_ABSTIME intr . intr [ COMMENT ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 972
## Reductions:

State 972:
## Known stack suffix:
## T_ABSTIME intr intr
## LR(1) items:
ln1abstime -> T_ABSTIME intr intr . [ COMMENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ln1abstime -> T_ABSTIME intr intr

State 973:
## Known stack suffix:
## LN1_HOST
## LR(1) items:
ln1host -> LN1_HOST . LPAREN STRING COMMA ln1host_h RPAREN [ SC ]
## Transitions:
-- On LPAREN shift to state 974
## Reductions:

State 974:
## Known stack suffix:
## LN1_HOST LPAREN
## LR(1) items:
ln1host -> LN1_HOST LPAREN . STRING COMMA ln1host_h RPAREN [ SC ]
## Transitions:
-- On STRING shift to state 975
## Reductions:

State 975:
## Known stack suffix:
## LN1_HOST LPAREN STRING
## LR(1) items:
ln1host -> LN1_HOST LPAREN STRING . COMMA ln1host_h RPAREN [ SC ]
## Transitions:
-- On COMMA shift to state 976
## Reductions:

State 976:
## Known stack suffix:
## LN1_HOST LPAREN STRING COMMA
## LR(1) items:
ln1host -> LN1_HOST LPAREN STRING COMMA . ln1host_h RPAREN [ SC ]
## Transitions:
-- On TRACE shift to state 31
-- On LHSEND shift to state 231
-- On LHRETURN shift to state 437
-- On LHRECV shift to state 688
-- On LHLOOP shift to state 692
-- On LHCALL shift to state 696
-- On trace shift to state 977
-- On netcall shift to state 978
-- On ln1host_h shift to state 979
-- On lib shift to state 981
## Reductions:

State 977:
## Known stack suffix:
## trace
## LR(1) items:
ln1host_h -> trace . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ln1host_h -> trace

State 978:
## Known stack suffix:
## netcall
## LR(1) items:
ln1host_h -> netcall . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ln1host_h -> netcall

State 979:
## Known stack suffix:
## LN1_HOST LPAREN STRING COMMA ln1host_h
## LR(1) items:
ln1host -> LN1_HOST LPAREN STRING COMMA ln1host_h . RPAREN [ SC ]
## Transitions:
-- On RPAREN shift to state 980
## Reductions:

State 980:
## Known stack suffix:
## LN1_HOST LPAREN STRING COMMA ln1host_h RPAREN
## LR(1) items:
ln1host -> LN1_HOST LPAREN STRING COMMA ln1host_h RPAREN . [ SC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ln1host -> LN1_HOST LPAREN STRING COMMA ln1host_h RPAREN

State 981:
## Known stack suffix:
## lib
## LR(1) items:
ln1host_h -> lib . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ln1host_h -> lib

State 982:
## Known stack suffix:
## LN1_EPSILON
## LR(1) items:
ln1epsilon -> LN1_EPSILON . LPAREN T_DURATION intr intr RPAREN [ SC ]
## Transitions:
-- On LPAREN shift to state 983
## Reductions:

State 983:
## Known stack suffix:
## LN1_EPSILON LPAREN
## LR(1) items:
ln1epsilon -> LN1_EPSILON LPAREN . T_DURATION intr intr RPAREN [ SC ]
## Transitions:
-- On T_DURATION shift to state 984
## Reductions:

State 984:
## Known stack suffix:
## LN1_EPSILON LPAREN T_DURATION
## LR(1) items:
ln1epsilon -> LN1_EPSILON LPAREN T_DURATION . intr intr RPAREN [ SC ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 985
## Reductions:

State 985:
## Known stack suffix:
## LN1_EPSILON LPAREN T_DURATION intr
## LR(1) items:
ln1epsilon -> LN1_EPSILON LPAREN T_DURATION intr . intr RPAREN [ SC ]
## Transitions:
-- On MINUS shift to state 2
-- On LPAREN shift to state 4
-- On INT shift to state 5
-- On intr shift to state 986
## Reductions:

State 986:
## Known stack suffix:
## LN1_EPSILON LPAREN T_DURATION intr intr
## LR(1) items:
ln1epsilon -> LN1_EPSILON LPAREN T_DURATION intr intr . RPAREN [ SC ]
## Transitions:
-- On RPAREN shift to state 987
## Reductions:

State 987:
## Known stack suffix:
## LN1_EPSILON LPAREN T_DURATION intr intr RPAREN
## LR(1) items:
ln1epsilon -> LN1_EPSILON LPAREN T_DURATION intr intr RPAREN . [ SC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ln1epsilon -> LN1_EPSILON LPAREN T_DURATION intr intr RPAREN

State 988:
## Known stack suffix:
## timecomment comment spec3main_h
## LR(1) items:
spec3main -> timecomment comment spec3main_h . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production spec3main -> timecomment comment spec3main_h

State 989:
## Known stack suffix:
## ln1host
## LR(1) items:
spec3main_h -> ln1host . SC [ # ]
## Transitions:
-- On SC shift to state 990
## Reductions:

State 990:
## Known stack suffix:
## ln1host SC
## LR(1) items:
spec3main_h -> ln1host SC . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production spec3main_h -> ln1host SC

State 991:
## Known stack suffix:
## ln1epsilon
## LR(1) items:
spec3main_h -> ln1epsilon . SC [ # ]
## Transitions:
-- On SC shift to state 992
## Reductions:

State 992:
## Known stack suffix:
## ln1epsilon SC
## LR(1) items:
spec3main_h -> ln1epsilon SC . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production spec3main_h -> ln1epsilon SC

State 993:
## Known stack suffix:
## ln1abstime
## LR(1) items:
spec3main_h -> ln1abstime . COMMENT [ # ]
## Transitions:
-- On COMMENT shift to state 994
## Reductions:

State 994:
## Known stack suffix:
## ln1abstime COMMENT
## LR(1) items:
spec3main_h -> ln1abstime COMMENT . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production spec3main_h -> ln1abstime COMMENT

State 995:
## Known stack suffix:
## spec3main
## LR(1) items:
spec3main' -> spec3main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept spec3main

