State 0:
main' -> . main [ # ]
-- On A shift to state 1
-- On main shift to state 3
-- On listA shift to state 4

State 1:
listA -> A . listA [ A ]
-- On A shift to state 1
-- On listA shift to state 2

State 2:
listA -> A listA . [ A ]
-- On A reduce production listA -> A listA

State 3:
main' -> main . [ # ]
-- On # accept main

State 4:
main -> listA . A EOF [ # ]
-- On A shift to state 5

State 5:
main -> listA A . EOF [ # ]
-- On EOF shift to state 6

State 6:
main -> listA A EOF . [ # ]
-- On # reduce production main -> listA A EOF

