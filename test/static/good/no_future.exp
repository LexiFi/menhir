Grammar has 2 nonterminal symbols, among which 1 start symbols.
Grammar has 2 terminal symbols.
Grammar has 3 productions.
nullable(main) = false
nullable(listA) = true
first(main) = A
first(listA) = A
minimal(main) = (* 2 *) A EOF
minimal(listA) = (* 0 *)
follow(main) = #
follow(listA) = A
Built an LR(0) automaton with 7 states.
The grammar is not SLR(1) -- 2 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 7 states.
2 shift/reduce conflicts were silently solved.
File "no_future.mly", line 27, characters 6-33:
Warning: production listA -> is never reduced.
Warning: in total, 1 production is never reduced.
3 out of 7 states have a default reduction.
2 out of 7 states are represented.
0 out of 7 symbols keep track of their start position.
0 out of 7 symbols keep track of their end position.
2 out of 4 productions exploit shiftreduce optimization.
16 functions before inlining, 3 functions after inlining.
