State 0:
## Known stack suffix:
##
## LR(1) items:
parse' -> . parse [ # ]
## Transitions:
-- On error shift to state 1
-- On LEFT_PAREN shift to state 2
-- On stmt shift to state 331
-- On parse shift to state 333
## Reductions:

State 1:
## Known stack suffix:
## error
## LR(1) items:
stmt -> error . [ EOI ]
## Transitions:
## Reductions:
-- On EOI
--   reduce production stmt -> error

State 2:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN . ASSERT term RIGHT_PAREN [ EOI ]
stmt -> LEFT_PAREN . DECLARE_SORT IDENT IDENT RIGHT_PAREN [ EOI ]
stmt -> LEFT_PAREN . DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN RIGHT_PAREN [ EOI ]
stmt -> LEFT_PAREN . DECLARE_FUN fun_decl RIGHT_PAREN [ EOI ]
stmt -> LEFT_PAREN . DECLARE_CONST IDENT ty RIGHT_PAREN [ EOI ]
stmt -> LEFT_PAREN . DEFINE_FUN fun_rec RIGHT_PAREN [ EOI ]
stmt -> LEFT_PAREN . DEFINE_FUN_REC fun_rec RIGHT_PAREN [ EOI ]
stmt -> LEFT_PAREN . DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN RIGHT_PAREN [ EOI ]
stmt -> LEFT_PAREN . ASSERT_NOT assert_not RIGHT_PAREN [ EOI ]
stmt -> LEFT_PAREN . CHECK_SAT RIGHT_PAREN [ EOI ]
## Transitions:
-- On DEFINE_FUN_REC shift to state 3
-- On DEFINE_FUNS_REC shift to state 229
-- On DEFINE_FUN shift to state 255
-- On DECLARE_SORT shift to state 258
-- On DECLARE_FUN shift to state 262
-- On DECLARE_CONST shift to state 282
-- On DATA shift to state 286
-- On CHECK_SAT shift to state 313
-- On ASSERT_NOT shift to state 315
-- On ASSERT shift to state 328
## Reductions:

State 3:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUN_REC
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUN_REC . fun_rec RIGHT_PAREN [ EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 4
-- On IDENT shift to state 13
-- On fun_rec shift to state 225
-- On fun_def_mono shift to state 227
## Reductions:

State 4:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
fun_rec -> LEFT_PAREN . PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono term RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On PAR shift to state 5
## Reductions:

State 5:
## Known stack suffix:
## LEFT_PAREN PAR
## LR(1) items:
fun_rec -> LEFT_PAREN PAR . LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono term RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN
## LR(1) items:
fun_rec -> LEFT_PAREN PAR LEFT_PAREN . list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono term RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On IDENT shift to state 7
-- On tyvar shift to state 8
-- On list(tyvar) shift to state 10
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(tyvar) ->

State 7:
## Known stack suffix:
## IDENT
## LR(1) items:
tyvar -> IDENT . [ RIGHT_PAREN IDENT ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN IDENT
--   reduce production tyvar -> IDENT

State 8:
## Known stack suffix:
## tyvar
## LR(1) items:
list(tyvar) -> tyvar . list(tyvar) [ RIGHT_PAREN ]
## Transitions:
-- On IDENT shift to state 7
-- On tyvar shift to state 8
-- On list(tyvar) shift to state 9
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(tyvar) ->

State 9:
## Known stack suffix:
## tyvar list(tyvar)
## LR(1) items:
list(tyvar) -> tyvar list(tyvar) . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(tyvar) -> tyvar list(tyvar)

State 10:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar)
## LR(1) items:
fun_rec -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) . RIGHT_PAREN LEFT_PAREN fun_def_mono term RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN
## LR(1) items:
fun_rec -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN . LEFT_PAREN fun_def_mono term RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 12
## Reductions:

State 12:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN
## LR(1) items:
fun_rec -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN . fun_def_mono term RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On IDENT shift to state 13
-- On fun_def_mono shift to state 47
## Reductions:

State 13:
## Known stack suffix:
## IDENT
## LR(1) items:
fun_def_mono -> IDENT . LEFT_PAREN list(typed_var) RIGHT_PAREN ty [ error TRUE QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On LEFT_PAREN shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## IDENT LEFT_PAREN
## LR(1) items:
fun_def_mono -> IDENT LEFT_PAREN . list(typed_var) RIGHT_PAREN ty [ error TRUE QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On LEFT_PAREN shift to state 15
-- On typed_var shift to state 33
-- On list(typed_var) shift to state 35
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(typed_var) ->

State 15:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
typed_var -> LEFT_PAREN . IDENT ty RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On IDENT shift to state 16
## Reductions:

State 16:
## Known stack suffix:
## LEFT_PAREN IDENT
## LR(1) items:
typed_var -> LEFT_PAREN IDENT . ty RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty shift to state 31
## Reductions:

State 17:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
ty -> LEFT_PAREN . IDENT nonempty_list(ty) RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
ty -> LEFT_PAREN . ARROW ty_arrow_args RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On IDENT shift to state 18
-- On ARROW shift to state 25
## Reductions:

State 18:
## Known stack suffix:
## LEFT_PAREN IDENT
## LR(1) items:
ty -> LEFT_PAREN IDENT . nonempty_list(ty) RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty shift to state 21
-- On nonempty_list(ty) shift to state 23
## Reductions:

State 19:
## Known stack suffix:
## IDENT
## LR(1) items:
ty -> IDENT . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production ty -> IDENT

State 20:
## Known stack suffix:
## BOOL
## LR(1) items:
ty -> BOOL . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production ty -> BOOL

State 21:
## Known stack suffix:
## ty
## LR(1) items:
nonempty_list(ty) -> ty . [ RIGHT_PAREN ]
nonempty_list(ty) -> ty . nonempty_list(ty) [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty shift to state 21
-- On nonempty_list(ty) shift to state 22
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(ty) -> ty

State 22:
## Known stack suffix:
## ty nonempty_list(ty)
## LR(1) items:
nonempty_list(ty) -> ty nonempty_list(ty) . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(ty) -> ty nonempty_list(ty)

State 23:
## Known stack suffix:
## LEFT_PAREN IDENT nonempty_list(ty)
## LR(1) items:
ty -> LEFT_PAREN IDENT nonempty_list(ty) . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## LEFT_PAREN IDENT nonempty_list(ty) RIGHT_PAREN
## LR(1) items:
ty -> LEFT_PAREN IDENT nonempty_list(ty) RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production ty -> LEFT_PAREN IDENT nonempty_list(ty) RIGHT_PAREN

State 25:
## Known stack suffix:
## LEFT_PAREN ARROW
## LR(1) items:
ty -> LEFT_PAREN ARROW . ty_arrow_args RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty_arrow_args shift to state 26
-- On ty shift to state 28
## Reductions:

State 26:
## Known stack suffix:
## LEFT_PAREN ARROW ty_arrow_args
## LR(1) items:
ty -> LEFT_PAREN ARROW ty_arrow_args . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## LEFT_PAREN ARROW ty_arrow_args RIGHT_PAREN
## LR(1) items:
ty -> LEFT_PAREN ARROW ty_arrow_args RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production ty -> LEFT_PAREN ARROW ty_arrow_args RIGHT_PAREN

State 28:
## Known stack suffix:
## ty
## LR(1) items:
ty_arrow_args -> ty . ty [ RIGHT_PAREN ]
ty_arrow_args -> ty . ty_arrow_args [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty_arrow_args shift to state 29
-- On ty shift to state 30
## Reductions:

State 29:
## Known stack suffix:
## ty ty_arrow_args
## LR(1) items:
ty_arrow_args -> ty ty_arrow_args . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production ty_arrow_args -> ty ty_arrow_args

State 30:
## Known stack suffix:
## ty ty
## LR(1) items:
ty_arrow_args -> ty . ty [ RIGHT_PAREN ]
ty_arrow_args -> ty ty . [ RIGHT_PAREN ]
ty_arrow_args -> ty . ty_arrow_args [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty_arrow_args shift to state 29
-- On ty shift to state 30
## Reductions:
-- On RIGHT_PAREN
--   reduce production ty_arrow_args -> ty ty

State 31:
## Known stack suffix:
## LEFT_PAREN IDENT ty
## LR(1) items:
typed_var -> LEFT_PAREN IDENT ty . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## LEFT_PAREN IDENT ty RIGHT_PAREN
## LR(1) items:
typed_var -> LEFT_PAREN IDENT ty RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN
--   reduce production typed_var -> LEFT_PAREN IDENT ty RIGHT_PAREN

State 33:
## Known stack suffix:
## typed_var
## LR(1) items:
list(typed_var) -> typed_var . list(typed_var) [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 15
-- On typed_var shift to state 33
-- On list(typed_var) shift to state 34
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(typed_var) ->

State 34:
## Known stack suffix:
## typed_var list(typed_var)
## LR(1) items:
list(typed_var) -> typed_var list(typed_var) . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(typed_var) -> typed_var list(typed_var)

State 35:
## Known stack suffix:
## IDENT LEFT_PAREN list(typed_var)
## LR(1) items:
fun_def_mono -> IDENT LEFT_PAREN list(typed_var) . RIGHT_PAREN ty [ error TRUE QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 36
## Reductions:

State 36:
## Known stack suffix:
## IDENT LEFT_PAREN list(typed_var) RIGHT_PAREN
## LR(1) items:
fun_def_mono -> IDENT LEFT_PAREN list(typed_var) RIGHT_PAREN . ty [ error TRUE QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On LEFT_PAREN shift to state 37
-- On IDENT shift to state 44
-- On BOOL shift to state 45
-- On ty shift to state 46
## Reductions:

State 37:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
ty -> LEFT_PAREN . IDENT nonempty_list(ty) RIGHT_PAREN [ error TRUE QUOTED LEFT_PAREN IDENT FALSE ]
ty -> LEFT_PAREN . ARROW ty_arrow_args RIGHT_PAREN [ error TRUE QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On IDENT shift to state 38
-- On ARROW shift to state 41
## Reductions:

State 38:
## Known stack suffix:
## LEFT_PAREN IDENT
## LR(1) items:
ty -> LEFT_PAREN IDENT . nonempty_list(ty) RIGHT_PAREN [ error TRUE QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty shift to state 21
-- On nonempty_list(ty) shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## LEFT_PAREN IDENT nonempty_list(ty)
## LR(1) items:
ty -> LEFT_PAREN IDENT nonempty_list(ty) . RIGHT_PAREN [ error TRUE QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 40
## Reductions:

State 40:
## Known stack suffix:
## LEFT_PAREN IDENT nonempty_list(ty) RIGHT_PAREN
## LR(1) items:
ty -> LEFT_PAREN IDENT nonempty_list(ty) RIGHT_PAREN . [ error TRUE QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE QUOTED LEFT_PAREN IDENT FALSE
--   reduce production ty -> LEFT_PAREN IDENT nonempty_list(ty) RIGHT_PAREN

State 41:
## Known stack suffix:
## LEFT_PAREN ARROW
## LR(1) items:
ty -> LEFT_PAREN ARROW . ty_arrow_args RIGHT_PAREN [ error TRUE QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty_arrow_args shift to state 42
-- On ty shift to state 28
## Reductions:

State 42:
## Known stack suffix:
## LEFT_PAREN ARROW ty_arrow_args
## LR(1) items:
ty -> LEFT_PAREN ARROW ty_arrow_args . RIGHT_PAREN [ error TRUE QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 43
## Reductions:

State 43:
## Known stack suffix:
## LEFT_PAREN ARROW ty_arrow_args RIGHT_PAREN
## LR(1) items:
ty -> LEFT_PAREN ARROW ty_arrow_args RIGHT_PAREN . [ error TRUE QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE QUOTED LEFT_PAREN IDENT FALSE
--   reduce production ty -> LEFT_PAREN ARROW ty_arrow_args RIGHT_PAREN

State 44:
## Known stack suffix:
## IDENT
## LR(1) items:
ty -> IDENT . [ error TRUE QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE QUOTED LEFT_PAREN IDENT FALSE
--   reduce production ty -> IDENT

State 45:
## Known stack suffix:
## BOOL
## LR(1) items:
ty -> BOOL . [ error TRUE QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE QUOTED LEFT_PAREN IDENT FALSE
--   reduce production ty -> BOOL

State 46:
## Known stack suffix:
## IDENT LEFT_PAREN list(typed_var) RIGHT_PAREN ty
## LR(1) items:
fun_def_mono -> IDENT LEFT_PAREN list(typed_var) RIGHT_PAREN ty . [ error TRUE QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE QUOTED LEFT_PAREN IDENT FALSE
--   reduce production fun_def_mono -> IDENT LEFT_PAREN list(typed_var) RIGHT_PAREN ty

State 47:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono
## LR(1) items:
fun_rec -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono . term RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 222
## Reductions:

State 48:
## Known stack suffix:
## error
## LR(1) items:
term -> error . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> error

State 49:
## Known stack suffix:
## TRUE
## LR(1) items:
term -> TRUE . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> TRUE

State 50:
## Known stack suffix:
## QUOTED
## LR(1) items:
term -> QUOTED . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> QUOTED

State 51:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
term -> LEFT_PAREN . term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
term -> LEFT_PAREN . IF term term term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
term -> LEFT_PAREN . OR nonempty_list(term) RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
term -> LEFT_PAREN . AND nonempty_list(term) RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
term -> LEFT_PAREN . NOT term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
term -> LEFT_PAREN . DISTINCT nonempty_list(term) RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
term -> LEFT_PAREN . EQ term term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
term -> LEFT_PAREN . ARROW term term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
term -> LEFT_PAREN . IDENT nonempty_list(term) RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
term -> LEFT_PAREN . AT term term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
term -> LEFT_PAREN . MATCH term nonempty_list(case) RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
term -> LEFT_PAREN . FUN LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
term -> LEFT_PAREN . LET LEFT_PAREN nonempty_list(binding) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
term -> LEFT_PAREN . AS term ty RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
term -> LEFT_PAREN . FORALL LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
term -> LEFT_PAREN . EXISTS LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On OR shift to state 52
-- On NOT shift to state 159
-- On MATCH shift to state 162
-- On LET shift to state 166
-- On LEFT_PAREN shift to state 51
-- On IF shift to state 172
-- On IDENT shift to state 177
-- On FUN shift to state 180
-- On FORALL shift to state 186
-- On FALSE shift to state 66
-- On EXISTS shift to state 192
-- On EQ shift to state 198
-- On DISTINCT shift to state 202
-- On AT shift to state 205
-- On AS shift to state 209
-- On ARROW shift to state 213
-- On AND shift to state 217
-- On term shift to state 220
## Reductions:

State 52:
## Known stack suffix:
## LEFT_PAREN OR
## LR(1) items:
term -> LEFT_PAREN OR . nonempty_list(term) RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 60
-- On nonempty_list(term) shift to state 157
## Reductions:

State 53:
## Known stack suffix:
## error
## LR(1) items:
term -> error . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> error

State 54:
## Known stack suffix:
## TRUE
## LR(1) items:
term -> TRUE . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> TRUE

State 55:
## Known stack suffix:
## QUOTED
## LR(1) items:
term -> QUOTED . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> QUOTED

State 56:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
term -> LEFT_PAREN . term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
term -> LEFT_PAREN . IF term term term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
term -> LEFT_PAREN . OR nonempty_list(term) RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
term -> LEFT_PAREN . AND nonempty_list(term) RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
term -> LEFT_PAREN . NOT term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
term -> LEFT_PAREN . DISTINCT nonempty_list(term) RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
term -> LEFT_PAREN . EQ term term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
term -> LEFT_PAREN . ARROW term term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
term -> LEFT_PAREN . IDENT nonempty_list(term) RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
term -> LEFT_PAREN . AT term term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
term -> LEFT_PAREN . MATCH term nonempty_list(case) RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
term -> LEFT_PAREN . FUN LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
term -> LEFT_PAREN . LET LEFT_PAREN nonempty_list(binding) RIGHT_PAREN term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
term -> LEFT_PAREN . AS term ty RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
term -> LEFT_PAREN . FORALL LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
term -> LEFT_PAREN . EXISTS LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On OR shift to state 57
-- On NOT shift to state 64
-- On MATCH shift to state 69
-- On LET shift to state 92
-- On LEFT_PAREN shift to state 51
-- On IF shift to state 105
-- On IDENT shift to state 110
-- On FUN shift to state 113
-- On FORALL shift to state 121
-- On FALSE shift to state 66
-- On EXISTS shift to state 127
-- On EQ shift to state 133
-- On DISTINCT shift to state 137
-- On AT shift to state 140
-- On AS shift to state 144
-- On ARROW shift to state 148
-- On AND shift to state 152
-- On term shift to state 155
## Reductions:

State 57:
## Known stack suffix:
## LEFT_PAREN OR
## LR(1) items:
term -> LEFT_PAREN OR . nonempty_list(term) RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 60
-- On nonempty_list(term) shift to state 62
## Reductions:

State 58:
## Known stack suffix:
## IDENT
## LR(1) items:
term -> IDENT . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> IDENT

State 59:
## Known stack suffix:
## FALSE
## LR(1) items:
term -> FALSE . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> FALSE

State 60:
## Known stack suffix:
## term
## LR(1) items:
nonempty_list(term) -> term . [ RIGHT_PAREN ]
nonempty_list(term) -> term . nonempty_list(term) [ RIGHT_PAREN ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 60
-- On nonempty_list(term) shift to state 61
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(term) -> term

State 61:
## Known stack suffix:
## term nonempty_list(term)
## LR(1) items:
nonempty_list(term) -> term nonempty_list(term) . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(term) -> term nonempty_list(term)

State 62:
## Known stack suffix:
## LEFT_PAREN OR nonempty_list(term)
## LR(1) items:
term -> LEFT_PAREN OR nonempty_list(term) . RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## LEFT_PAREN OR nonempty_list(term) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN OR nonempty_list(term) RIGHT_PAREN . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> LEFT_PAREN OR nonempty_list(term) RIGHT_PAREN

State 64:
## Known stack suffix:
## LEFT_PAREN NOT
## LR(1) items:
term -> LEFT_PAREN NOT . term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 67
## Reductions:

State 65:
## Known stack suffix:
## IDENT
## LR(1) items:
term -> IDENT . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> IDENT

State 66:
## Known stack suffix:
## FALSE
## LR(1) items:
term -> FALSE . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> FALSE

State 67:
## Known stack suffix:
## LEFT_PAREN NOT term
## LR(1) items:
term -> LEFT_PAREN NOT term . RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 68
## Reductions:

State 68:
## Known stack suffix:
## LEFT_PAREN NOT term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN NOT term RIGHT_PAREN . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> LEFT_PAREN NOT term RIGHT_PAREN

State 69:
## Known stack suffix:
## LEFT_PAREN MATCH
## LR(1) items:
term -> LEFT_PAREN MATCH . term nonempty_list(case) RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## LEFT_PAREN MATCH term
## LR(1) items:
term -> LEFT_PAREN MATCH term . nonempty_list(case) RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On LEFT_PAREN shift to state 71
-- On nonempty_list(case) shift to state 88
-- On case shift to state 90
## Reductions:

State 71:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
case -> LEFT_PAREN . CASE IDENT term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
case -> LEFT_PAREN . CASE LEFT_PAREN IDENT nonempty_list(var) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
case -> LEFT_PAREN . CASE DEFAULT term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On CASE shift to state 72
## Reductions:

State 72:
## Known stack suffix:
## LEFT_PAREN CASE
## LR(1) items:
case -> LEFT_PAREN CASE . IDENT term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
case -> LEFT_PAREN CASE . LEFT_PAREN IDENT nonempty_list(var) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
case -> LEFT_PAREN CASE . DEFAULT term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 73
-- On IDENT shift to state 82
-- On DEFAULT shift to state 85
## Reductions:

State 73:
## Known stack suffix:
## LEFT_PAREN CASE LEFT_PAREN
## LR(1) items:
case -> LEFT_PAREN CASE LEFT_PAREN . IDENT nonempty_list(var) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On IDENT shift to state 74
## Reductions:

State 74:
## Known stack suffix:
## LEFT_PAREN CASE LEFT_PAREN IDENT
## LR(1) items:
case -> LEFT_PAREN CASE LEFT_PAREN IDENT . nonempty_list(var) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On IDENT shift to state 75
-- On var shift to state 76
-- On nonempty_list(var) shift to state 78
## Reductions:

State 75:
## Known stack suffix:
## IDENT
## LR(1) items:
var -> IDENT . [ RIGHT_PAREN IDENT ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN IDENT
--   reduce production var -> IDENT

State 76:
## Known stack suffix:
## var
## LR(1) items:
nonempty_list(var) -> var . [ RIGHT_PAREN ]
nonempty_list(var) -> var . nonempty_list(var) [ RIGHT_PAREN ]
## Transitions:
-- On IDENT shift to state 75
-- On var shift to state 76
-- On nonempty_list(var) shift to state 77
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(var) -> var

State 77:
## Known stack suffix:
## var nonempty_list(var)
## LR(1) items:
nonempty_list(var) -> var nonempty_list(var) . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(var) -> var nonempty_list(var)

State 78:
## Known stack suffix:
## LEFT_PAREN CASE LEFT_PAREN IDENT nonempty_list(var)
## LR(1) items:
case -> LEFT_PAREN CASE LEFT_PAREN IDENT nonempty_list(var) . RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 79
## Reductions:

State 79:
## Known stack suffix:
## LEFT_PAREN CASE LEFT_PAREN IDENT nonempty_list(var) RIGHT_PAREN
## LR(1) items:
case -> LEFT_PAREN CASE LEFT_PAREN IDENT nonempty_list(var) RIGHT_PAREN . term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 80
## Reductions:

State 80:
## Known stack suffix:
## LEFT_PAREN CASE LEFT_PAREN IDENT nonempty_list(var) RIGHT_PAREN term
## LR(1) items:
case -> LEFT_PAREN CASE LEFT_PAREN IDENT nonempty_list(var) RIGHT_PAREN term . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 81
## Reductions:

State 81:
## Known stack suffix:
## LEFT_PAREN CASE LEFT_PAREN IDENT nonempty_list(var) RIGHT_PAREN term RIGHT_PAREN
## LR(1) items:
case -> LEFT_PAREN CASE LEFT_PAREN IDENT nonempty_list(var) RIGHT_PAREN term RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN
--   reduce production case -> LEFT_PAREN CASE LEFT_PAREN IDENT nonempty_list(var) RIGHT_PAREN term RIGHT_PAREN

State 82:
## Known stack suffix:
## LEFT_PAREN CASE IDENT
## LR(1) items:
case -> LEFT_PAREN CASE IDENT . term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 83
## Reductions:

State 83:
## Known stack suffix:
## LEFT_PAREN CASE IDENT term
## LR(1) items:
case -> LEFT_PAREN CASE IDENT term . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 84
## Reductions:

State 84:
## Known stack suffix:
## LEFT_PAREN CASE IDENT term RIGHT_PAREN
## LR(1) items:
case -> LEFT_PAREN CASE IDENT term RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN
--   reduce production case -> LEFT_PAREN CASE IDENT term RIGHT_PAREN

State 85:
## Known stack suffix:
## LEFT_PAREN CASE DEFAULT
## LR(1) items:
case -> LEFT_PAREN CASE DEFAULT . term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 86
## Reductions:

State 86:
## Known stack suffix:
## LEFT_PAREN CASE DEFAULT term
## LR(1) items:
case -> LEFT_PAREN CASE DEFAULT term . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## LEFT_PAREN CASE DEFAULT term RIGHT_PAREN
## LR(1) items:
case -> LEFT_PAREN CASE DEFAULT term RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN
--   reduce production case -> LEFT_PAREN CASE DEFAULT term RIGHT_PAREN

State 88:
## Known stack suffix:
## LEFT_PAREN MATCH term nonempty_list(case)
## LR(1) items:
term -> LEFT_PAREN MATCH term nonempty_list(case) . RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## LEFT_PAREN MATCH term nonempty_list(case) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN MATCH term nonempty_list(case) RIGHT_PAREN . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> LEFT_PAREN MATCH term nonempty_list(case) RIGHT_PAREN

State 90:
## Known stack suffix:
## case
## LR(1) items:
nonempty_list(case) -> case . [ RIGHT_PAREN ]
nonempty_list(case) -> case . nonempty_list(case) [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 71
-- On nonempty_list(case) shift to state 91
-- On case shift to state 90
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(case) -> case

State 91:
## Known stack suffix:
## case nonempty_list(case)
## LR(1) items:
nonempty_list(case) -> case nonempty_list(case) . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(case) -> case nonempty_list(case)

State 92:
## Known stack suffix:
## LEFT_PAREN LET
## LR(1) items:
term -> LEFT_PAREN LET . LEFT_PAREN nonempty_list(binding) RIGHT_PAREN term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On LEFT_PAREN shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## LEFT_PAREN LET LEFT_PAREN
## LR(1) items:
term -> LEFT_PAREN LET LEFT_PAREN . nonempty_list(binding) RIGHT_PAREN term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On LEFT_PAREN shift to state 94
-- On nonempty_list(binding) shift to state 99
-- On binding shift to state 103
## Reductions:

State 94:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
binding -> LEFT_PAREN . var term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On IDENT shift to state 95
-- On var shift to state 96
## Reductions:

State 95:
## Known stack suffix:
## IDENT
## LR(1) items:
var -> IDENT . [ error TRUE QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE QUOTED LEFT_PAREN IDENT FALSE
--   reduce production var -> IDENT

State 96:
## Known stack suffix:
## LEFT_PAREN var
## LR(1) items:
binding -> LEFT_PAREN var . term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## LEFT_PAREN var term
## LR(1) items:
binding -> LEFT_PAREN var term . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 98
## Reductions:

State 98:
## Known stack suffix:
## LEFT_PAREN var term RIGHT_PAREN
## LR(1) items:
binding -> LEFT_PAREN var term RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN
--   reduce production binding -> LEFT_PAREN var term RIGHT_PAREN

State 99:
## Known stack suffix:
## LEFT_PAREN LET LEFT_PAREN nonempty_list(binding)
## LR(1) items:
term -> LEFT_PAREN LET LEFT_PAREN nonempty_list(binding) . RIGHT_PAREN term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 100
## Reductions:

State 100:
## Known stack suffix:
## LEFT_PAREN LET LEFT_PAREN nonempty_list(binding) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN LET LEFT_PAREN nonempty_list(binding) RIGHT_PAREN . term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 101
## Reductions:

State 101:
## Known stack suffix:
## LEFT_PAREN LET LEFT_PAREN nonempty_list(binding) RIGHT_PAREN term
## LR(1) items:
term -> LEFT_PAREN LET LEFT_PAREN nonempty_list(binding) RIGHT_PAREN term . RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 102
## Reductions:

State 102:
## Known stack suffix:
## LEFT_PAREN LET LEFT_PAREN nonempty_list(binding) RIGHT_PAREN term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN LET LEFT_PAREN nonempty_list(binding) RIGHT_PAREN term RIGHT_PAREN . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> LEFT_PAREN LET LEFT_PAREN nonempty_list(binding) RIGHT_PAREN term RIGHT_PAREN

State 103:
## Known stack suffix:
## binding
## LR(1) items:
nonempty_list(binding) -> binding . [ RIGHT_PAREN ]
nonempty_list(binding) -> binding . nonempty_list(binding) [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 94
-- On nonempty_list(binding) shift to state 104
-- On binding shift to state 103
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(binding) -> binding

State 104:
## Known stack suffix:
## binding nonempty_list(binding)
## LR(1) items:
nonempty_list(binding) -> binding nonempty_list(binding) . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(binding) -> binding nonempty_list(binding)

State 105:
## Known stack suffix:
## LEFT_PAREN IF
## LR(1) items:
term -> LEFT_PAREN IF . term term term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 106
## Reductions:

State 106:
## Known stack suffix:
## LEFT_PAREN IF term
## LR(1) items:
term -> LEFT_PAREN IF term . term term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 107
## Reductions:

State 107:
## Known stack suffix:
## LEFT_PAREN IF term term
## LR(1) items:
term -> LEFT_PAREN IF term term . term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 108
## Reductions:

State 108:
## Known stack suffix:
## LEFT_PAREN IF term term term
## LR(1) items:
term -> LEFT_PAREN IF term term term . RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 109
## Reductions:

State 109:
## Known stack suffix:
## LEFT_PAREN IF term term term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN IF term term term RIGHT_PAREN . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> LEFT_PAREN IF term term term RIGHT_PAREN

State 110:
## Known stack suffix:
## LEFT_PAREN IDENT
## LR(1) items:
term -> IDENT . [ RIGHT_PAREN ]
term -> LEFT_PAREN IDENT . nonempty_list(term) RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 60
-- On nonempty_list(term) shift to state 111
## Reductions:
-- On RIGHT_PAREN
--   reduce production term -> IDENT

State 111:
## Known stack suffix:
## LEFT_PAREN IDENT nonempty_list(term)
## LR(1) items:
term -> LEFT_PAREN IDENT nonempty_list(term) . RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 112
## Reductions:

State 112:
## Known stack suffix:
## LEFT_PAREN IDENT nonempty_list(term) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN IDENT nonempty_list(term) RIGHT_PAREN . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> LEFT_PAREN IDENT nonempty_list(term) RIGHT_PAREN

State 113:
## Known stack suffix:
## LEFT_PAREN FUN
## LR(1) items:
term -> LEFT_PAREN FUN . LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On LEFT_PAREN shift to state 114
## Reductions:

State 114:
## Known stack suffix:
## LEFT_PAREN FUN LEFT_PAREN
## LR(1) items:
term -> LEFT_PAREN FUN LEFT_PAREN . nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On LEFT_PAREN shift to state 15
-- On typed_var shift to state 115
-- On nonempty_list(typed_var) shift to state 117
## Reductions:

State 115:
## Known stack suffix:
## typed_var
## LR(1) items:
nonempty_list(typed_var) -> typed_var . [ RIGHT_PAREN ]
nonempty_list(typed_var) -> typed_var . nonempty_list(typed_var) [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 15
-- On typed_var shift to state 115
-- On nonempty_list(typed_var) shift to state 116
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(typed_var) -> typed_var

State 116:
## Known stack suffix:
## typed_var nonempty_list(typed_var)
## LR(1) items:
nonempty_list(typed_var) -> typed_var nonempty_list(typed_var) . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(typed_var) -> typed_var nonempty_list(typed_var)

State 117:
## Known stack suffix:
## LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var)
## LR(1) items:
term -> LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var) . RIGHT_PAREN term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 118
## Reductions:

State 118:
## Known stack suffix:
## LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN . term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 119
## Reductions:

State 119:
## Known stack suffix:
## LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term
## LR(1) items:
term -> LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term . RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 120
## Reductions:

State 120:
## Known stack suffix:
## LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN

State 121:
## Known stack suffix:
## LEFT_PAREN FORALL
## LR(1) items:
term -> LEFT_PAREN FORALL . LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On LEFT_PAREN shift to state 122
## Reductions:

State 122:
## Known stack suffix:
## LEFT_PAREN FORALL LEFT_PAREN
## LR(1) items:
term -> LEFT_PAREN FORALL LEFT_PAREN . nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On LEFT_PAREN shift to state 15
-- On typed_var shift to state 115
-- On nonempty_list(typed_var) shift to state 123
## Reductions:

State 123:
## Known stack suffix:
## LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var)
## LR(1) items:
term -> LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var) . RIGHT_PAREN term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 124
## Reductions:

State 124:
## Known stack suffix:
## LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN . term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 125
## Reductions:

State 125:
## Known stack suffix:
## LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term
## LR(1) items:
term -> LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term . RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 126
## Reductions:

State 126:
## Known stack suffix:
## LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN

State 127:
## Known stack suffix:
## LEFT_PAREN EXISTS
## LR(1) items:
term -> LEFT_PAREN EXISTS . LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On LEFT_PAREN shift to state 128
## Reductions:

State 128:
## Known stack suffix:
## LEFT_PAREN EXISTS LEFT_PAREN
## LR(1) items:
term -> LEFT_PAREN EXISTS LEFT_PAREN . nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On LEFT_PAREN shift to state 15
-- On typed_var shift to state 115
-- On nonempty_list(typed_var) shift to state 129
## Reductions:

State 129:
## Known stack suffix:
## LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var)
## LR(1) items:
term -> LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var) . RIGHT_PAREN term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 130
## Reductions:

State 130:
## Known stack suffix:
## LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN . term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 131
## Reductions:

State 131:
## Known stack suffix:
## LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term
## LR(1) items:
term -> LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term . RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 132
## Reductions:

State 132:
## Known stack suffix:
## LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN

State 133:
## Known stack suffix:
## LEFT_PAREN EQ
## LR(1) items:
term -> LEFT_PAREN EQ . term term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## LEFT_PAREN EQ term
## LR(1) items:
term -> LEFT_PAREN EQ term . term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 135
## Reductions:

State 135:
## Known stack suffix:
## LEFT_PAREN EQ term term
## LR(1) items:
term -> LEFT_PAREN EQ term term . RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 136
## Reductions:

State 136:
## Known stack suffix:
## LEFT_PAREN EQ term term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN EQ term term RIGHT_PAREN . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> LEFT_PAREN EQ term term RIGHT_PAREN

State 137:
## Known stack suffix:
## LEFT_PAREN DISTINCT
## LR(1) items:
term -> LEFT_PAREN DISTINCT . nonempty_list(term) RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 60
-- On nonempty_list(term) shift to state 138
## Reductions:

State 138:
## Known stack suffix:
## LEFT_PAREN DISTINCT nonempty_list(term)
## LR(1) items:
term -> LEFT_PAREN DISTINCT nonempty_list(term) . RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 139
## Reductions:

State 139:
## Known stack suffix:
## LEFT_PAREN DISTINCT nonempty_list(term) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN DISTINCT nonempty_list(term) RIGHT_PAREN . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> LEFT_PAREN DISTINCT nonempty_list(term) RIGHT_PAREN

State 140:
## Known stack suffix:
## LEFT_PAREN AT
## LR(1) items:
term -> LEFT_PAREN AT . term term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 141
## Reductions:

State 141:
## Known stack suffix:
## LEFT_PAREN AT term
## LR(1) items:
term -> LEFT_PAREN AT term . term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 142
## Reductions:

State 142:
## Known stack suffix:
## LEFT_PAREN AT term term
## LR(1) items:
term -> LEFT_PAREN AT term term . RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 143
## Reductions:

State 143:
## Known stack suffix:
## LEFT_PAREN AT term term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN AT term term RIGHT_PAREN . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> LEFT_PAREN AT term term RIGHT_PAREN

State 144:
## Known stack suffix:
## LEFT_PAREN AS
## LR(1) items:
term -> LEFT_PAREN AS . term ty RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 145
## Reductions:

State 145:
## Known stack suffix:
## LEFT_PAREN AS term
## LR(1) items:
term -> LEFT_PAREN AS term . ty RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## LEFT_PAREN AS term ty
## LR(1) items:
term -> LEFT_PAREN AS term ty . RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## LEFT_PAREN AS term ty RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN AS term ty RIGHT_PAREN . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> LEFT_PAREN AS term ty RIGHT_PAREN

State 148:
## Known stack suffix:
## LEFT_PAREN ARROW
## LR(1) items:
term -> LEFT_PAREN ARROW . term term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 149
## Reductions:

State 149:
## Known stack suffix:
## LEFT_PAREN ARROW term
## LR(1) items:
term -> LEFT_PAREN ARROW term . term RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 150
## Reductions:

State 150:
## Known stack suffix:
## LEFT_PAREN ARROW term term
## LR(1) items:
term -> LEFT_PAREN ARROW term term . RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 151
## Reductions:

State 151:
## Known stack suffix:
## LEFT_PAREN ARROW term term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN ARROW term term RIGHT_PAREN . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> LEFT_PAREN ARROW term term RIGHT_PAREN

State 152:
## Known stack suffix:
## LEFT_PAREN AND
## LR(1) items:
term -> LEFT_PAREN AND . nonempty_list(term) RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 60
-- On nonempty_list(term) shift to state 153
## Reductions:

State 153:
## Known stack suffix:
## LEFT_PAREN AND nonempty_list(term)
## LR(1) items:
term -> LEFT_PAREN AND nonempty_list(term) . RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 154
## Reductions:

State 154:
## Known stack suffix:
## LEFT_PAREN AND nonempty_list(term) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN AND nonempty_list(term) RIGHT_PAREN . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> LEFT_PAREN AND nonempty_list(term) RIGHT_PAREN

State 155:
## Known stack suffix:
## LEFT_PAREN term
## LR(1) items:
term -> LEFT_PAREN term . RIGHT_PAREN [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
-- On RIGHT_PAREN shift to state 156
## Reductions:

State 156:
## Known stack suffix:
## LEFT_PAREN term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN term RIGHT_PAREN . [ error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE ]
## Transitions:
## Reductions:
-- On error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
--   reduce production term -> LEFT_PAREN term RIGHT_PAREN

State 157:
## Known stack suffix:
## LEFT_PAREN OR nonempty_list(term)
## LR(1) items:
term -> LEFT_PAREN OR nonempty_list(term) . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 158
## Reductions:

State 158:
## Known stack suffix:
## LEFT_PAREN OR nonempty_list(term) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN OR nonempty_list(term) RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> LEFT_PAREN OR nonempty_list(term) RIGHT_PAREN

State 159:
## Known stack suffix:
## LEFT_PAREN NOT
## LR(1) items:
term -> LEFT_PAREN NOT . term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 160
## Reductions:

State 160:
## Known stack suffix:
## LEFT_PAREN NOT term
## LR(1) items:
term -> LEFT_PAREN NOT term . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 161
## Reductions:

State 161:
## Known stack suffix:
## LEFT_PAREN NOT term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN NOT term RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> LEFT_PAREN NOT term RIGHT_PAREN

State 162:
## Known stack suffix:
## LEFT_PAREN MATCH
## LR(1) items:
term -> LEFT_PAREN MATCH . term nonempty_list(case) RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 163
## Reductions:

State 163:
## Known stack suffix:
## LEFT_PAREN MATCH term
## LR(1) items:
term -> LEFT_PAREN MATCH term . nonempty_list(case) RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On LEFT_PAREN shift to state 71
-- On nonempty_list(case) shift to state 164
-- On case shift to state 90
## Reductions:

State 164:
## Known stack suffix:
## LEFT_PAREN MATCH term nonempty_list(case)
## LR(1) items:
term -> LEFT_PAREN MATCH term nonempty_list(case) . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## LEFT_PAREN MATCH term nonempty_list(case) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN MATCH term nonempty_list(case) RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> LEFT_PAREN MATCH term nonempty_list(case) RIGHT_PAREN

State 166:
## Known stack suffix:
## LEFT_PAREN LET
## LR(1) items:
term -> LEFT_PAREN LET . LEFT_PAREN nonempty_list(binding) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On LEFT_PAREN shift to state 167
## Reductions:

State 167:
## Known stack suffix:
## LEFT_PAREN LET LEFT_PAREN
## LR(1) items:
term -> LEFT_PAREN LET LEFT_PAREN . nonempty_list(binding) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On LEFT_PAREN shift to state 94
-- On nonempty_list(binding) shift to state 168
-- On binding shift to state 103
## Reductions:

State 168:
## Known stack suffix:
## LEFT_PAREN LET LEFT_PAREN nonempty_list(binding)
## LR(1) items:
term -> LEFT_PAREN LET LEFT_PAREN nonempty_list(binding) . RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 169
## Reductions:

State 169:
## Known stack suffix:
## LEFT_PAREN LET LEFT_PAREN nonempty_list(binding) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN LET LEFT_PAREN nonempty_list(binding) RIGHT_PAREN . term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 170
## Reductions:

State 170:
## Known stack suffix:
## LEFT_PAREN LET LEFT_PAREN nonempty_list(binding) RIGHT_PAREN term
## LR(1) items:
term -> LEFT_PAREN LET LEFT_PAREN nonempty_list(binding) RIGHT_PAREN term . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 171
## Reductions:

State 171:
## Known stack suffix:
## LEFT_PAREN LET LEFT_PAREN nonempty_list(binding) RIGHT_PAREN term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN LET LEFT_PAREN nonempty_list(binding) RIGHT_PAREN term RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> LEFT_PAREN LET LEFT_PAREN nonempty_list(binding) RIGHT_PAREN term RIGHT_PAREN

State 172:
## Known stack suffix:
## LEFT_PAREN IF
## LR(1) items:
term -> LEFT_PAREN IF . term term term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 173
## Reductions:

State 173:
## Known stack suffix:
## LEFT_PAREN IF term
## LR(1) items:
term -> LEFT_PAREN IF term . term term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 174
## Reductions:

State 174:
## Known stack suffix:
## LEFT_PAREN IF term term
## LR(1) items:
term -> LEFT_PAREN IF term term . term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 175
## Reductions:

State 175:
## Known stack suffix:
## LEFT_PAREN IF term term term
## LR(1) items:
term -> LEFT_PAREN IF term term term . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 176
## Reductions:

State 176:
## Known stack suffix:
## LEFT_PAREN IF term term term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN IF term term term RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> LEFT_PAREN IF term term term RIGHT_PAREN

State 177:
## Known stack suffix:
## LEFT_PAREN IDENT
## LR(1) items:
term -> IDENT . [ RIGHT_PAREN ]
term -> LEFT_PAREN IDENT . nonempty_list(term) RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 60
-- On nonempty_list(term) shift to state 178
## Reductions:
-- On RIGHT_PAREN
--   reduce production term -> IDENT

State 178:
## Known stack suffix:
## LEFT_PAREN IDENT nonempty_list(term)
## LR(1) items:
term -> LEFT_PAREN IDENT nonempty_list(term) . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 179
## Reductions:

State 179:
## Known stack suffix:
## LEFT_PAREN IDENT nonempty_list(term) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN IDENT nonempty_list(term) RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> LEFT_PAREN IDENT nonempty_list(term) RIGHT_PAREN

State 180:
## Known stack suffix:
## LEFT_PAREN FUN
## LR(1) items:
term -> LEFT_PAREN FUN . LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On LEFT_PAREN shift to state 181
## Reductions:

State 181:
## Known stack suffix:
## LEFT_PAREN FUN LEFT_PAREN
## LR(1) items:
term -> LEFT_PAREN FUN LEFT_PAREN . nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On LEFT_PAREN shift to state 15
-- On typed_var shift to state 115
-- On nonempty_list(typed_var) shift to state 182
## Reductions:

State 182:
## Known stack suffix:
## LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var)
## LR(1) items:
term -> LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var) . RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 183
## Reductions:

State 183:
## Known stack suffix:
## LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN . term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 184
## Reductions:

State 184:
## Known stack suffix:
## LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term
## LR(1) items:
term -> LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 185
## Reductions:

State 185:
## Known stack suffix:
## LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> LEFT_PAREN FUN LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN

State 186:
## Known stack suffix:
## LEFT_PAREN FORALL
## LR(1) items:
term -> LEFT_PAREN FORALL . LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On LEFT_PAREN shift to state 187
## Reductions:

State 187:
## Known stack suffix:
## LEFT_PAREN FORALL LEFT_PAREN
## LR(1) items:
term -> LEFT_PAREN FORALL LEFT_PAREN . nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On LEFT_PAREN shift to state 15
-- On typed_var shift to state 115
-- On nonempty_list(typed_var) shift to state 188
## Reductions:

State 188:
## Known stack suffix:
## LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var)
## LR(1) items:
term -> LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var) . RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 189
## Reductions:

State 189:
## Known stack suffix:
## LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN . term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 190
## Reductions:

State 190:
## Known stack suffix:
## LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term
## LR(1) items:
term -> LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 191
## Reductions:

State 191:
## Known stack suffix:
## LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> LEFT_PAREN FORALL LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN

State 192:
## Known stack suffix:
## LEFT_PAREN EXISTS
## LR(1) items:
term -> LEFT_PAREN EXISTS . LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On LEFT_PAREN shift to state 193
## Reductions:

State 193:
## Known stack suffix:
## LEFT_PAREN EXISTS LEFT_PAREN
## LR(1) items:
term -> LEFT_PAREN EXISTS LEFT_PAREN . nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On LEFT_PAREN shift to state 15
-- On typed_var shift to state 115
-- On nonempty_list(typed_var) shift to state 194
## Reductions:

State 194:
## Known stack suffix:
## LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var)
## LR(1) items:
term -> LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var) . RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 195
## Reductions:

State 195:
## Known stack suffix:
## LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN . term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 196
## Reductions:

State 196:
## Known stack suffix:
## LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term
## LR(1) items:
term -> LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 197
## Reductions:

State 197:
## Known stack suffix:
## LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> LEFT_PAREN EXISTS LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN

State 198:
## Known stack suffix:
## LEFT_PAREN EQ
## LR(1) items:
term -> LEFT_PAREN EQ . term term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 199
## Reductions:

State 199:
## Known stack suffix:
## LEFT_PAREN EQ term
## LR(1) items:
term -> LEFT_PAREN EQ term . term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 200
## Reductions:

State 200:
## Known stack suffix:
## LEFT_PAREN EQ term term
## LR(1) items:
term -> LEFT_PAREN EQ term term . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 201
## Reductions:

State 201:
## Known stack suffix:
## LEFT_PAREN EQ term term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN EQ term term RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> LEFT_PAREN EQ term term RIGHT_PAREN

State 202:
## Known stack suffix:
## LEFT_PAREN DISTINCT
## LR(1) items:
term -> LEFT_PAREN DISTINCT . nonempty_list(term) RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 60
-- On nonempty_list(term) shift to state 203
## Reductions:

State 203:
## Known stack suffix:
## LEFT_PAREN DISTINCT nonempty_list(term)
## LR(1) items:
term -> LEFT_PAREN DISTINCT nonempty_list(term) . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 204
## Reductions:

State 204:
## Known stack suffix:
## LEFT_PAREN DISTINCT nonempty_list(term) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN DISTINCT nonempty_list(term) RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> LEFT_PAREN DISTINCT nonempty_list(term) RIGHT_PAREN

State 205:
## Known stack suffix:
## LEFT_PAREN AT
## LR(1) items:
term -> LEFT_PAREN AT . term term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 206
## Reductions:

State 206:
## Known stack suffix:
## LEFT_PAREN AT term
## LR(1) items:
term -> LEFT_PAREN AT term . term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 207
## Reductions:

State 207:
## Known stack suffix:
## LEFT_PAREN AT term term
## LR(1) items:
term -> LEFT_PAREN AT term term . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 208
## Reductions:

State 208:
## Known stack suffix:
## LEFT_PAREN AT term term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN AT term term RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> LEFT_PAREN AT term term RIGHT_PAREN

State 209:
## Known stack suffix:
## LEFT_PAREN AS
## LR(1) items:
term -> LEFT_PAREN AS . term ty RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 210
## Reductions:

State 210:
## Known stack suffix:
## LEFT_PAREN AS term
## LR(1) items:
term -> LEFT_PAREN AS term . ty RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty shift to state 211
## Reductions:

State 211:
## Known stack suffix:
## LEFT_PAREN AS term ty
## LR(1) items:
term -> LEFT_PAREN AS term ty . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 212
## Reductions:

State 212:
## Known stack suffix:
## LEFT_PAREN AS term ty RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN AS term ty RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> LEFT_PAREN AS term ty RIGHT_PAREN

State 213:
## Known stack suffix:
## LEFT_PAREN ARROW
## LR(1) items:
term -> LEFT_PAREN ARROW . term term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 214
## Reductions:

State 214:
## Known stack suffix:
## LEFT_PAREN ARROW term
## LR(1) items:
term -> LEFT_PAREN ARROW term . term RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 215
## Reductions:

State 215:
## Known stack suffix:
## LEFT_PAREN ARROW term term
## LR(1) items:
term -> LEFT_PAREN ARROW term term . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 216
## Reductions:

State 216:
## Known stack suffix:
## LEFT_PAREN ARROW term term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN ARROW term term RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> LEFT_PAREN ARROW term term RIGHT_PAREN

State 217:
## Known stack suffix:
## LEFT_PAREN AND
## LR(1) items:
term -> LEFT_PAREN AND . nonempty_list(term) RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 60
-- On nonempty_list(term) shift to state 218
## Reductions:

State 218:
## Known stack suffix:
## LEFT_PAREN AND nonempty_list(term)
## LR(1) items:
term -> LEFT_PAREN AND nonempty_list(term) . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 219
## Reductions:

State 219:
## Known stack suffix:
## LEFT_PAREN AND nonempty_list(term) RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN AND nonempty_list(term) RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> LEFT_PAREN AND nonempty_list(term) RIGHT_PAREN

State 220:
## Known stack suffix:
## LEFT_PAREN term
## LR(1) items:
term -> LEFT_PAREN term . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
-- On RIGHT_PAREN shift to state 221
## Reductions:

State 221:
## Known stack suffix:
## LEFT_PAREN term RIGHT_PAREN
## LR(1) items:
term -> LEFT_PAREN term RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN IDENT EOI BOOL
--   reduce production term -> LEFT_PAREN term RIGHT_PAREN

State 222:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono term
## LR(1) items:
fun_rec -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono term . RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 223
## Reductions:

State 223:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono term RIGHT_PAREN
## LR(1) items:
fun_rec -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono term RIGHT_PAREN . RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 224
## Reductions:

State 224:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono term RIGHT_PAREN RIGHT_PAREN
## LR(1) items:
fun_rec -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono term RIGHT_PAREN RIGHT_PAREN . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production fun_rec -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono term RIGHT_PAREN RIGHT_PAREN

State 225:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUN_REC fun_rec
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUN_REC fun_rec . RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 226
## Reductions:

State 226:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUN_REC fun_rec RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUN_REC fun_rec RIGHT_PAREN . [ EOI ]
## Transitions:
## Reductions:
-- On EOI
--   reduce production stmt -> LEFT_PAREN DEFINE_FUN_REC fun_rec RIGHT_PAREN

State 227:
## Known stack suffix:
## fun_def_mono
## LR(1) items:
fun_rec -> fun_def_mono . term [ RIGHT_PAREN ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 228
## Reductions:

State 228:
## Known stack suffix:
## fun_def_mono term
## LR(1) items:
fun_rec -> fun_def_mono term . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production fun_rec -> fun_def_mono term

State 229:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUNS_REC
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUNS_REC . LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN RIGHT_PAREN [ EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 230
## Reductions:

State 230:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN . nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN RIGHT_PAREN [ EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 231
-- On nonempty_list(funs_rec_decl) shift to state 247
-- On funs_rec_decl shift to state 253
## Reductions:

State 231:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
funs_rec_decl -> LEFT_PAREN . fun_def_mono RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
funs_rec_decl -> LEFT_PAREN . PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On PAR shift to state 232
-- On IDENT shift to state 237
-- On fun_def_mono shift to state 245
## Reductions:

State 232:
## Known stack suffix:
## LEFT_PAREN PAR
## LR(1) items:
funs_rec_decl -> LEFT_PAREN PAR . LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 233
## Reductions:

State 233:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN
## LR(1) items:
funs_rec_decl -> LEFT_PAREN PAR LEFT_PAREN . list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On IDENT shift to state 7
-- On tyvar shift to state 8
-- On list(tyvar) shift to state 234
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(tyvar) ->

State 234:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar)
## LR(1) items:
funs_rec_decl -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) . RIGHT_PAREN LEFT_PAREN fun_def_mono RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 235
## Reductions:

State 235:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN
## LR(1) items:
funs_rec_decl -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN . LEFT_PAREN fun_def_mono RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 236
## Reductions:

State 236:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN
## LR(1) items:
funs_rec_decl -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN . fun_def_mono RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On IDENT shift to state 237
-- On fun_def_mono shift to state 242
## Reductions:

State 237:
## Known stack suffix:
## IDENT
## LR(1) items:
fun_def_mono -> IDENT . LEFT_PAREN list(typed_var) RIGHT_PAREN ty [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 238
## Reductions:

State 238:
## Known stack suffix:
## IDENT LEFT_PAREN
## LR(1) items:
fun_def_mono -> IDENT LEFT_PAREN . list(typed_var) RIGHT_PAREN ty [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 15
-- On typed_var shift to state 33
-- On list(typed_var) shift to state 239
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(typed_var) ->

State 239:
## Known stack suffix:
## IDENT LEFT_PAREN list(typed_var)
## LR(1) items:
fun_def_mono -> IDENT LEFT_PAREN list(typed_var) . RIGHT_PAREN ty [ RIGHT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 240
## Reductions:

State 240:
## Known stack suffix:
## IDENT LEFT_PAREN list(typed_var) RIGHT_PAREN
## LR(1) items:
fun_def_mono -> IDENT LEFT_PAREN list(typed_var) RIGHT_PAREN . ty [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty shift to state 241
## Reductions:

State 241:
## Known stack suffix:
## IDENT LEFT_PAREN list(typed_var) RIGHT_PAREN ty
## LR(1) items:
fun_def_mono -> IDENT LEFT_PAREN list(typed_var) RIGHT_PAREN ty . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production fun_def_mono -> IDENT LEFT_PAREN list(typed_var) RIGHT_PAREN ty

State 242:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono
## LR(1) items:
funs_rec_decl -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono . RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 243
## Reductions:

State 243:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono RIGHT_PAREN
## LR(1) items:
funs_rec_decl -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono RIGHT_PAREN . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 244
## Reductions:

State 244:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono RIGHT_PAREN RIGHT_PAREN
## LR(1) items:
funs_rec_decl -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono RIGHT_PAREN RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN
--   reduce production funs_rec_decl -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_def_mono RIGHT_PAREN RIGHT_PAREN

State 245:
## Known stack suffix:
## LEFT_PAREN fun_def_mono
## LR(1) items:
funs_rec_decl -> LEFT_PAREN fun_def_mono . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 246
## Reductions:

State 246:
## Known stack suffix:
## LEFT_PAREN fun_def_mono RIGHT_PAREN
## LR(1) items:
funs_rec_decl -> LEFT_PAREN fun_def_mono RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN
--   reduce production funs_rec_decl -> LEFT_PAREN fun_def_mono RIGHT_PAREN

State 247:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl)
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) . RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 248
## Reductions:

State 248:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN . LEFT_PAREN nonempty_list(term) RIGHT_PAREN RIGHT_PAREN [ EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 249
## Reductions:

State 249:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN . nonempty_list(term) RIGHT_PAREN RIGHT_PAREN [ EOI ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 60
-- On nonempty_list(term) shift to state 250
## Reductions:

State 250:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term)
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) . RIGHT_PAREN RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 251
## Reductions:

State 251:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN . RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 252
## Reductions:

State 252:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN RIGHT_PAREN . [ EOI ]
## Transitions:
## Reductions:
-- On EOI
--   reduce production stmt -> LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN RIGHT_PAREN

State 253:
## Known stack suffix:
## funs_rec_decl
## LR(1) items:
nonempty_list(funs_rec_decl) -> funs_rec_decl . [ RIGHT_PAREN ]
nonempty_list(funs_rec_decl) -> funs_rec_decl . nonempty_list(funs_rec_decl) [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 231
-- On nonempty_list(funs_rec_decl) shift to state 254
-- On funs_rec_decl shift to state 253
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(funs_rec_decl) -> funs_rec_decl

State 254:
## Known stack suffix:
## funs_rec_decl nonempty_list(funs_rec_decl)
## LR(1) items:
nonempty_list(funs_rec_decl) -> funs_rec_decl nonempty_list(funs_rec_decl) . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(funs_rec_decl) -> funs_rec_decl nonempty_list(funs_rec_decl)

State 255:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUN
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUN . fun_rec RIGHT_PAREN [ EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 4
-- On IDENT shift to state 13
-- On fun_rec shift to state 256
-- On fun_def_mono shift to state 227
## Reductions:

State 256:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUN fun_rec
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUN fun_rec . RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 257
## Reductions:

State 257:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUN fun_rec RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUN fun_rec RIGHT_PAREN . [ EOI ]
## Transitions:
## Reductions:
-- On EOI
--   reduce production stmt -> LEFT_PAREN DEFINE_FUN fun_rec RIGHT_PAREN

State 258:
## Known stack suffix:
## LEFT_PAREN DECLARE_SORT
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_SORT . IDENT IDENT RIGHT_PAREN [ EOI ]
## Transitions:
-- On IDENT shift to state 259
## Reductions:

State 259:
## Known stack suffix:
## LEFT_PAREN DECLARE_SORT IDENT
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_SORT IDENT . IDENT RIGHT_PAREN [ EOI ]
## Transitions:
-- On IDENT shift to state 260
## Reductions:

State 260:
## Known stack suffix:
## LEFT_PAREN DECLARE_SORT IDENT IDENT
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_SORT IDENT IDENT . RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 261
## Reductions:

State 261:
## Known stack suffix:
## LEFT_PAREN DECLARE_SORT IDENT IDENT RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_SORT IDENT IDENT RIGHT_PAREN . [ EOI ]
## Transitions:
## Reductions:
-- On EOI
--   reduce production stmt -> LEFT_PAREN DECLARE_SORT IDENT IDENT RIGHT_PAREN

State 262:
## Known stack suffix:
## LEFT_PAREN DECLARE_FUN
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_FUN . fun_decl RIGHT_PAREN [ EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 263
-- On IDENT shift to state 269
-- On fun_decl_mono shift to state 279
-- On fun_decl shift to state 280
## Reductions:

State 263:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
fun_decl -> LEFT_PAREN . PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_decl_mono RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On PAR shift to state 264
## Reductions:

State 264:
## Known stack suffix:
## LEFT_PAREN PAR
## LR(1) items:
fun_decl -> LEFT_PAREN PAR . LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_decl_mono RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 265
## Reductions:

State 265:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN
## LR(1) items:
fun_decl -> LEFT_PAREN PAR LEFT_PAREN . list(tyvar) RIGHT_PAREN LEFT_PAREN fun_decl_mono RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On IDENT shift to state 7
-- On tyvar shift to state 8
-- On list(tyvar) shift to state 266
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(tyvar) ->

State 266:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar)
## LR(1) items:
fun_decl -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) . RIGHT_PAREN LEFT_PAREN fun_decl_mono RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 267
## Reductions:

State 267:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN
## LR(1) items:
fun_decl -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN . LEFT_PAREN fun_decl_mono RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 268
## Reductions:

State 268:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN
## LR(1) items:
fun_decl -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN . fun_decl_mono RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On IDENT shift to state 269
-- On fun_decl_mono shift to state 276
## Reductions:

State 269:
## Known stack suffix:
## IDENT
## LR(1) items:
fun_decl_mono -> IDENT . LEFT_PAREN list(ty) RIGHT_PAREN ty [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 270
## Reductions:

State 270:
## Known stack suffix:
## IDENT LEFT_PAREN
## LR(1) items:
fun_decl_mono -> IDENT LEFT_PAREN . list(ty) RIGHT_PAREN ty [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty shift to state 271
-- On list(ty) shift to state 273
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(ty) ->

State 271:
## Known stack suffix:
## ty
## LR(1) items:
list(ty) -> ty . list(ty) [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty shift to state 271
-- On list(ty) shift to state 272
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(ty) ->

State 272:
## Known stack suffix:
## ty list(ty)
## LR(1) items:
list(ty) -> ty list(ty) . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(ty) -> ty list(ty)

State 273:
## Known stack suffix:
## IDENT LEFT_PAREN list(ty)
## LR(1) items:
fun_decl_mono -> IDENT LEFT_PAREN list(ty) . RIGHT_PAREN ty [ RIGHT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 274
## Reductions:

State 274:
## Known stack suffix:
## IDENT LEFT_PAREN list(ty) RIGHT_PAREN
## LR(1) items:
fun_decl_mono -> IDENT LEFT_PAREN list(ty) RIGHT_PAREN . ty [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty shift to state 275
## Reductions:

State 275:
## Known stack suffix:
## IDENT LEFT_PAREN list(ty) RIGHT_PAREN ty
## LR(1) items:
fun_decl_mono -> IDENT LEFT_PAREN list(ty) RIGHT_PAREN ty . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production fun_decl_mono -> IDENT LEFT_PAREN list(ty) RIGHT_PAREN ty

State 276:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_decl_mono
## LR(1) items:
fun_decl -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_decl_mono . RIGHT_PAREN RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 277
## Reductions:

State 277:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_decl_mono RIGHT_PAREN
## LR(1) items:
fun_decl -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_decl_mono RIGHT_PAREN . RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 278
## Reductions:

State 278:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_decl_mono RIGHT_PAREN RIGHT_PAREN
## LR(1) items:
fun_decl -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_decl_mono RIGHT_PAREN RIGHT_PAREN . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production fun_decl -> LEFT_PAREN PAR LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN fun_decl_mono RIGHT_PAREN RIGHT_PAREN

State 279:
## Known stack suffix:
## fun_decl_mono
## LR(1) items:
fun_decl -> fun_decl_mono . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production fun_decl -> fun_decl_mono

State 280:
## Known stack suffix:
## LEFT_PAREN DECLARE_FUN fun_decl
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_FUN fun_decl . RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 281
## Reductions:

State 281:
## Known stack suffix:
## LEFT_PAREN DECLARE_FUN fun_decl RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_FUN fun_decl RIGHT_PAREN . [ EOI ]
## Transitions:
## Reductions:
-- On EOI
--   reduce production stmt -> LEFT_PAREN DECLARE_FUN fun_decl RIGHT_PAREN

State 282:
## Known stack suffix:
## LEFT_PAREN DECLARE_CONST
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_CONST . IDENT ty RIGHT_PAREN [ EOI ]
## Transitions:
-- On IDENT shift to state 283
## Reductions:

State 283:
## Known stack suffix:
## LEFT_PAREN DECLARE_CONST IDENT
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_CONST IDENT . ty RIGHT_PAREN [ EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty shift to state 284
## Reductions:

State 284:
## Known stack suffix:
## LEFT_PAREN DECLARE_CONST IDENT ty
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_CONST IDENT ty . RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 285
## Reductions:

State 285:
## Known stack suffix:
## LEFT_PAREN DECLARE_CONST IDENT ty RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_CONST IDENT ty RIGHT_PAREN . [ EOI ]
## Transitions:
## Reductions:
-- On EOI
--   reduce production stmt -> LEFT_PAREN DECLARE_CONST IDENT ty RIGHT_PAREN

State 286:
## Known stack suffix:
## LEFT_PAREN DATA
## LR(1) items:
stmt -> LEFT_PAREN DATA . LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN RIGHT_PAREN [ EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 287
## Reductions:

State 287:
## Known stack suffix:
## LEFT_PAREN DATA LEFT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DATA LEFT_PAREN . list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN RIGHT_PAREN [ EOI ]
## Transitions:
-- On IDENT shift to state 7
-- On tyvar shift to state 8
-- On list(tyvar) shift to state 288
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(tyvar) ->

State 288:
## Known stack suffix:
## LEFT_PAREN DATA LEFT_PAREN list(tyvar)
## LR(1) items:
stmt -> LEFT_PAREN DATA LEFT_PAREN list(tyvar) . RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 289
## Reductions:

State 289:
## Known stack suffix:
## LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN . LEFT_PAREN nonempty_list(data) RIGHT_PAREN RIGHT_PAREN [ EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 290
## Reductions:

State 290:
## Known stack suffix:
## LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN . nonempty_list(data) RIGHT_PAREN RIGHT_PAREN [ EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 291
-- On nonempty_list(data) shift to state 308
-- On data shift to state 311
## Reductions:

State 291:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
data -> LEFT_PAREN . IDENT nonempty_list(cstor) RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On IDENT shift to state 292
## Reductions:

State 292:
## Known stack suffix:
## LEFT_PAREN IDENT
## LR(1) items:
data -> LEFT_PAREN IDENT . nonempty_list(cstor) RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 293
-- On nonempty_list(cstor) shift to state 304
-- On cstor shift to state 306
## Reductions:

State 293:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
cstor -> LEFT_PAREN . IDENT RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
cstor -> LEFT_PAREN . IDENT nonempty_list(cstor_arg) RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On IDENT shift to state 294
## Reductions:

State 294:
## Known stack suffix:
## LEFT_PAREN IDENT
## LR(1) items:
cstor -> LEFT_PAREN IDENT . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
cstor -> LEFT_PAREN IDENT . nonempty_list(cstor_arg) RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 295
-- On LEFT_PAREN shift to state 296
-- On nonempty_list(cstor_arg) shift to state 300
-- On cstor_arg shift to state 302
## Reductions:

State 295:
## Known stack suffix:
## LEFT_PAREN IDENT RIGHT_PAREN
## LR(1) items:
cstor -> LEFT_PAREN IDENT RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN
--   reduce production cstor -> LEFT_PAREN IDENT RIGHT_PAREN

State 296:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
cstor_arg -> LEFT_PAREN . IDENT ty RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On IDENT shift to state 297
## Reductions:

State 297:
## Known stack suffix:
## LEFT_PAREN IDENT
## LR(1) items:
cstor_arg -> LEFT_PAREN IDENT . ty RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty shift to state 298
## Reductions:

State 298:
## Known stack suffix:
## LEFT_PAREN IDENT ty
## LR(1) items:
cstor_arg -> LEFT_PAREN IDENT ty . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 299
## Reductions:

State 299:
## Known stack suffix:
## LEFT_PAREN IDENT ty RIGHT_PAREN
## LR(1) items:
cstor_arg -> LEFT_PAREN IDENT ty RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN
--   reduce production cstor_arg -> LEFT_PAREN IDENT ty RIGHT_PAREN

State 300:
## Known stack suffix:
## LEFT_PAREN IDENT nonempty_list(cstor_arg)
## LR(1) items:
cstor -> LEFT_PAREN IDENT nonempty_list(cstor_arg) . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 301
## Reductions:

State 301:
## Known stack suffix:
## LEFT_PAREN IDENT nonempty_list(cstor_arg) RIGHT_PAREN
## LR(1) items:
cstor -> LEFT_PAREN IDENT nonempty_list(cstor_arg) RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN
--   reduce production cstor -> LEFT_PAREN IDENT nonempty_list(cstor_arg) RIGHT_PAREN

State 302:
## Known stack suffix:
## cstor_arg
## LR(1) items:
nonempty_list(cstor_arg) -> cstor_arg . [ RIGHT_PAREN ]
nonempty_list(cstor_arg) -> cstor_arg . nonempty_list(cstor_arg) [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 296
-- On nonempty_list(cstor_arg) shift to state 303
-- On cstor_arg shift to state 302
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(cstor_arg) -> cstor_arg

State 303:
## Known stack suffix:
## cstor_arg nonempty_list(cstor_arg)
## LR(1) items:
nonempty_list(cstor_arg) -> cstor_arg nonempty_list(cstor_arg) . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(cstor_arg) -> cstor_arg nonempty_list(cstor_arg)

State 304:
## Known stack suffix:
## LEFT_PAREN IDENT nonempty_list(cstor)
## LR(1) items:
data -> LEFT_PAREN IDENT nonempty_list(cstor) . RIGHT_PAREN [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 305
## Reductions:

State 305:
## Known stack suffix:
## LEFT_PAREN IDENT nonempty_list(cstor) RIGHT_PAREN
## LR(1) items:
data -> LEFT_PAREN IDENT nonempty_list(cstor) RIGHT_PAREN . [ RIGHT_PAREN LEFT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN LEFT_PAREN
--   reduce production data -> LEFT_PAREN IDENT nonempty_list(cstor) RIGHT_PAREN

State 306:
## Known stack suffix:
## cstor
## LR(1) items:
nonempty_list(cstor) -> cstor . [ RIGHT_PAREN ]
nonempty_list(cstor) -> cstor . nonempty_list(cstor) [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 293
-- On nonempty_list(cstor) shift to state 307
-- On cstor shift to state 306
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(cstor) -> cstor

State 307:
## Known stack suffix:
## cstor nonempty_list(cstor)
## LR(1) items:
nonempty_list(cstor) -> cstor nonempty_list(cstor) . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(cstor) -> cstor nonempty_list(cstor)

State 308:
## Known stack suffix:
## LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data)
## LR(1) items:
stmt -> LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) . RIGHT_PAREN RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 309
## Reductions:

State 309:
## Known stack suffix:
## LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN . RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 310
## Reductions:

State 310:
## Known stack suffix:
## LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN RIGHT_PAREN . [ EOI ]
## Transitions:
## Reductions:
-- On EOI
--   reduce production stmt -> LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN RIGHT_PAREN

State 311:
## Known stack suffix:
## data
## LR(1) items:
nonempty_list(data) -> data . [ RIGHT_PAREN ]
nonempty_list(data) -> data . nonempty_list(data) [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 291
-- On nonempty_list(data) shift to state 312
-- On data shift to state 311
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(data) -> data

State 312:
## Known stack suffix:
## data nonempty_list(data)
## LR(1) items:
nonempty_list(data) -> data nonempty_list(data) . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(data) -> data nonempty_list(data)

State 313:
## Known stack suffix:
## LEFT_PAREN CHECK_SAT
## LR(1) items:
stmt -> LEFT_PAREN CHECK_SAT . RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 314
## Reductions:

State 314:
## Known stack suffix:
## LEFT_PAREN CHECK_SAT RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN CHECK_SAT RIGHT_PAREN . [ EOI ]
## Transitions:
## Reductions:
-- On EOI
--   reduce production stmt -> LEFT_PAREN CHECK_SAT RIGHT_PAREN

State 315:
## Known stack suffix:
## LEFT_PAREN ASSERT_NOT
## LR(1) items:
stmt -> LEFT_PAREN ASSERT_NOT . assert_not RIGHT_PAREN [ EOI ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 316
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 325
-- On assert_not shift to state 326
## Reductions:

State 316:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
assert_not -> LEFT_PAREN . PAR LEFT_PAREN nonempty_list(tyvar) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN ]
term -> LEFT_PAREN . term RIGHT_PAREN [ RIGHT_PAREN ]
term -> LEFT_PAREN . IF term term term RIGHT_PAREN [ RIGHT_PAREN ]
term -> LEFT_PAREN . OR nonempty_list(term) RIGHT_PAREN [ RIGHT_PAREN ]
term -> LEFT_PAREN . AND nonempty_list(term) RIGHT_PAREN [ RIGHT_PAREN ]
term -> LEFT_PAREN . NOT term RIGHT_PAREN [ RIGHT_PAREN ]
term -> LEFT_PAREN . DISTINCT nonempty_list(term) RIGHT_PAREN [ RIGHT_PAREN ]
term -> LEFT_PAREN . EQ term term RIGHT_PAREN [ RIGHT_PAREN ]
term -> LEFT_PAREN . ARROW term term RIGHT_PAREN [ RIGHT_PAREN ]
term -> LEFT_PAREN . IDENT nonempty_list(term) RIGHT_PAREN [ RIGHT_PAREN ]
term -> LEFT_PAREN . AT term term RIGHT_PAREN [ RIGHT_PAREN ]
term -> LEFT_PAREN . MATCH term nonempty_list(case) RIGHT_PAREN [ RIGHT_PAREN ]
term -> LEFT_PAREN . FUN LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN ]
term -> LEFT_PAREN . LET LEFT_PAREN nonempty_list(binding) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN ]
term -> LEFT_PAREN . AS term ty RIGHT_PAREN [ RIGHT_PAREN ]
term -> LEFT_PAREN . FORALL LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN ]
term -> LEFT_PAREN . EXISTS LEFT_PAREN nonempty_list(typed_var) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On PAR shift to state 317
-- On OR shift to state 52
-- On NOT shift to state 159
-- On MATCH shift to state 162
-- On LET shift to state 166
-- On LEFT_PAREN shift to state 51
-- On IF shift to state 172
-- On IDENT shift to state 177
-- On FUN shift to state 180
-- On FORALL shift to state 186
-- On FALSE shift to state 66
-- On EXISTS shift to state 192
-- On EQ shift to state 198
-- On DISTINCT shift to state 202
-- On AT shift to state 205
-- On AS shift to state 209
-- On ARROW shift to state 213
-- On AND shift to state 217
-- On term shift to state 220
## Reductions:

State 317:
## Known stack suffix:
## LEFT_PAREN PAR
## LR(1) items:
assert_not -> LEFT_PAREN PAR . LEFT_PAREN nonempty_list(tyvar) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 318
## Reductions:

State 318:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN
## LR(1) items:
assert_not -> LEFT_PAREN PAR LEFT_PAREN . nonempty_list(tyvar) RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On IDENT shift to state 7
-- On tyvar shift to state 319
-- On nonempty_list(tyvar) shift to state 321
## Reductions:

State 319:
## Known stack suffix:
## tyvar
## LR(1) items:
nonempty_list(tyvar) -> tyvar . [ RIGHT_PAREN ]
nonempty_list(tyvar) -> tyvar . nonempty_list(tyvar) [ RIGHT_PAREN ]
## Transitions:
-- On IDENT shift to state 7
-- On tyvar shift to state 319
-- On nonempty_list(tyvar) shift to state 320
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(tyvar) -> tyvar

State 320:
## Known stack suffix:
## tyvar nonempty_list(tyvar)
## LR(1) items:
nonempty_list(tyvar) -> tyvar nonempty_list(tyvar) . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production nonempty_list(tyvar) -> tyvar nonempty_list(tyvar)

State 321:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN nonempty_list(tyvar)
## LR(1) items:
assert_not -> LEFT_PAREN PAR LEFT_PAREN nonempty_list(tyvar) . RIGHT_PAREN term RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 322
## Reductions:

State 322:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN nonempty_list(tyvar) RIGHT_PAREN
## LR(1) items:
assert_not -> LEFT_PAREN PAR LEFT_PAREN nonempty_list(tyvar) RIGHT_PAREN . term RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 323
## Reductions:

State 323:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN nonempty_list(tyvar) RIGHT_PAREN term
## LR(1) items:
assert_not -> LEFT_PAREN PAR LEFT_PAREN nonempty_list(tyvar) RIGHT_PAREN term . RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 324
## Reductions:

State 324:
## Known stack suffix:
## LEFT_PAREN PAR LEFT_PAREN nonempty_list(tyvar) RIGHT_PAREN term RIGHT_PAREN
## LR(1) items:
assert_not -> LEFT_PAREN PAR LEFT_PAREN nonempty_list(tyvar) RIGHT_PAREN term RIGHT_PAREN . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production assert_not -> LEFT_PAREN PAR LEFT_PAREN nonempty_list(tyvar) RIGHT_PAREN term RIGHT_PAREN

State 325:
## Known stack suffix:
## term
## LR(1) items:
assert_not -> term . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production assert_not -> term

State 326:
## Known stack suffix:
## LEFT_PAREN ASSERT_NOT assert_not
## LR(1) items:
stmt -> LEFT_PAREN ASSERT_NOT assert_not . RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 327
## Reductions:

State 327:
## Known stack suffix:
## LEFT_PAREN ASSERT_NOT assert_not RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN ASSERT_NOT assert_not RIGHT_PAREN . [ EOI ]
## Transitions:
## Reductions:
-- On EOI
--   reduce production stmt -> LEFT_PAREN ASSERT_NOT assert_not RIGHT_PAREN

State 328:
## Known stack suffix:
## LEFT_PAREN ASSERT
## LR(1) items:
stmt -> LEFT_PAREN ASSERT . term RIGHT_PAREN [ EOI ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 329
## Reductions:

State 329:
## Known stack suffix:
## LEFT_PAREN ASSERT term
## LR(1) items:
stmt -> LEFT_PAREN ASSERT term . RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 330
## Reductions:

State 330:
## Known stack suffix:
## LEFT_PAREN ASSERT term RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN ASSERT term RIGHT_PAREN . [ EOI ]
## Transitions:
## Reductions:
-- On EOI
--   reduce production stmt -> LEFT_PAREN ASSERT term RIGHT_PAREN

State 331:
## Known stack suffix:
## stmt
## LR(1) items:
parse -> stmt . EOI [ # ]
## Transitions:
-- On EOI shift to state 332
## Reductions:

State 332:
## Known stack suffix:
## stmt EOI
## LR(1) items:
parse -> stmt EOI . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production parse -> stmt EOI

State 333:
## Known stack suffix:
## parse
## LR(1) items:
parse' -> parse . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept parse

State 334:
## Known stack suffix:
##
## LR(1) items:
parse_list' -> . parse_list [ # ]
## Transitions:
-- On error shift to state 335
-- On LEFT_PAREN shift to state 336
-- On stmt shift to state 378
-- On parse_list shift to state 380
-- On list(stmt) shift to state 381
## Reductions:
-- On EOI
--   reduce production list(stmt) ->

State 335:
## Known stack suffix:
## error
## LR(1) items:
stmt -> error . [ error LEFT_PAREN EOI ]
## Transitions:
## Reductions:
-- On error LEFT_PAREN EOI
--   reduce production stmt -> error

State 336:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN . ASSERT term RIGHT_PAREN [ error LEFT_PAREN EOI ]
stmt -> LEFT_PAREN . DECLARE_SORT IDENT IDENT RIGHT_PAREN [ error LEFT_PAREN EOI ]
stmt -> LEFT_PAREN . DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN RIGHT_PAREN [ error LEFT_PAREN EOI ]
stmt -> LEFT_PAREN . DECLARE_FUN fun_decl RIGHT_PAREN [ error LEFT_PAREN EOI ]
stmt -> LEFT_PAREN . DECLARE_CONST IDENT ty RIGHT_PAREN [ error LEFT_PAREN EOI ]
stmt -> LEFT_PAREN . DEFINE_FUN fun_rec RIGHT_PAREN [ error LEFT_PAREN EOI ]
stmt -> LEFT_PAREN . DEFINE_FUN_REC fun_rec RIGHT_PAREN [ error LEFT_PAREN EOI ]
stmt -> LEFT_PAREN . DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN RIGHT_PAREN [ error LEFT_PAREN EOI ]
stmt -> LEFT_PAREN . ASSERT_NOT assert_not RIGHT_PAREN [ error LEFT_PAREN EOI ]
stmt -> LEFT_PAREN . CHECK_SAT RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On DEFINE_FUN_REC shift to state 337
-- On DEFINE_FUNS_REC shift to state 340
-- On DEFINE_FUN shift to state 348
-- On DECLARE_SORT shift to state 351
-- On DECLARE_FUN shift to state 355
-- On DECLARE_CONST shift to state 358
-- On DATA shift to state 362
-- On CHECK_SAT shift to state 370
-- On ASSERT_NOT shift to state 372
-- On ASSERT shift to state 375
## Reductions:

State 337:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUN_REC
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUN_REC . fun_rec RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 4
-- On IDENT shift to state 13
-- On fun_rec shift to state 338
-- On fun_def_mono shift to state 227
## Reductions:

State 338:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUN_REC fun_rec
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUN_REC fun_rec . RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 339
## Reductions:

State 339:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUN_REC fun_rec RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUN_REC fun_rec RIGHT_PAREN . [ error LEFT_PAREN EOI ]
## Transitions:
## Reductions:
-- On error LEFT_PAREN EOI
--   reduce production stmt -> LEFT_PAREN DEFINE_FUN_REC fun_rec RIGHT_PAREN

State 340:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUNS_REC
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUNS_REC . LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 341
## Reductions:

State 341:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN . nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 231
-- On nonempty_list(funs_rec_decl) shift to state 342
-- On funs_rec_decl shift to state 253
## Reductions:

State 342:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl)
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) . RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 343
## Reductions:

State 343:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN . LEFT_PAREN nonempty_list(term) RIGHT_PAREN RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 344
## Reductions:

State 344:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN . nonempty_list(term) RIGHT_PAREN RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 60
-- On nonempty_list(term) shift to state 345
## Reductions:

State 345:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term)
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) . RIGHT_PAREN RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 346
## Reductions:

State 346:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN . RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 347
## Reductions:

State 347:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN RIGHT_PAREN . [ error LEFT_PAREN EOI ]
## Transitions:
## Reductions:
-- On error LEFT_PAREN EOI
--   reduce production stmt -> LEFT_PAREN DEFINE_FUNS_REC LEFT_PAREN nonempty_list(funs_rec_decl) RIGHT_PAREN LEFT_PAREN nonempty_list(term) RIGHT_PAREN RIGHT_PAREN

State 348:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUN
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUN . fun_rec RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 4
-- On IDENT shift to state 13
-- On fun_rec shift to state 349
-- On fun_def_mono shift to state 227
## Reductions:

State 349:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUN fun_rec
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUN fun_rec . RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 350
## Reductions:

State 350:
## Known stack suffix:
## LEFT_PAREN DEFINE_FUN fun_rec RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DEFINE_FUN fun_rec RIGHT_PAREN . [ error LEFT_PAREN EOI ]
## Transitions:
## Reductions:
-- On error LEFT_PAREN EOI
--   reduce production stmt -> LEFT_PAREN DEFINE_FUN fun_rec RIGHT_PAREN

State 351:
## Known stack suffix:
## LEFT_PAREN DECLARE_SORT
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_SORT . IDENT IDENT RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On IDENT shift to state 352
## Reductions:

State 352:
## Known stack suffix:
## LEFT_PAREN DECLARE_SORT IDENT
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_SORT IDENT . IDENT RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On IDENT shift to state 353
## Reductions:

State 353:
## Known stack suffix:
## LEFT_PAREN DECLARE_SORT IDENT IDENT
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_SORT IDENT IDENT . RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 354
## Reductions:

State 354:
## Known stack suffix:
## LEFT_PAREN DECLARE_SORT IDENT IDENT RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_SORT IDENT IDENT RIGHT_PAREN . [ error LEFT_PAREN EOI ]
## Transitions:
## Reductions:
-- On error LEFT_PAREN EOI
--   reduce production stmt -> LEFT_PAREN DECLARE_SORT IDENT IDENT RIGHT_PAREN

State 355:
## Known stack suffix:
## LEFT_PAREN DECLARE_FUN
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_FUN . fun_decl RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 263
-- On IDENT shift to state 269
-- On fun_decl_mono shift to state 279
-- On fun_decl shift to state 356
## Reductions:

State 356:
## Known stack suffix:
## LEFT_PAREN DECLARE_FUN fun_decl
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_FUN fun_decl . RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 357
## Reductions:

State 357:
## Known stack suffix:
## LEFT_PAREN DECLARE_FUN fun_decl RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_FUN fun_decl RIGHT_PAREN . [ error LEFT_PAREN EOI ]
## Transitions:
## Reductions:
-- On error LEFT_PAREN EOI
--   reduce production stmt -> LEFT_PAREN DECLARE_FUN fun_decl RIGHT_PAREN

State 358:
## Known stack suffix:
## LEFT_PAREN DECLARE_CONST
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_CONST . IDENT ty RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On IDENT shift to state 359
## Reductions:

State 359:
## Known stack suffix:
## LEFT_PAREN DECLARE_CONST IDENT
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_CONST IDENT . ty RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty shift to state 360
## Reductions:

State 360:
## Known stack suffix:
## LEFT_PAREN DECLARE_CONST IDENT ty
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_CONST IDENT ty . RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 361
## Reductions:

State 361:
## Known stack suffix:
## LEFT_PAREN DECLARE_CONST IDENT ty RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DECLARE_CONST IDENT ty RIGHT_PAREN . [ error LEFT_PAREN EOI ]
## Transitions:
## Reductions:
-- On error LEFT_PAREN EOI
--   reduce production stmt -> LEFT_PAREN DECLARE_CONST IDENT ty RIGHT_PAREN

State 362:
## Known stack suffix:
## LEFT_PAREN DATA
## LR(1) items:
stmt -> LEFT_PAREN DATA . LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 363
## Reductions:

State 363:
## Known stack suffix:
## LEFT_PAREN DATA LEFT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DATA LEFT_PAREN . list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On IDENT shift to state 7
-- On tyvar shift to state 8
-- On list(tyvar) shift to state 364
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(tyvar) ->

State 364:
## Known stack suffix:
## LEFT_PAREN DATA LEFT_PAREN list(tyvar)
## LR(1) items:
stmt -> LEFT_PAREN DATA LEFT_PAREN list(tyvar) . RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 365
## Reductions:

State 365:
## Known stack suffix:
## LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN . LEFT_PAREN nonempty_list(data) RIGHT_PAREN RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 366
## Reductions:

State 366:
## Known stack suffix:
## LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN . nonempty_list(data) RIGHT_PAREN RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On LEFT_PAREN shift to state 291
-- On nonempty_list(data) shift to state 367
-- On data shift to state 311
## Reductions:

State 367:
## Known stack suffix:
## LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data)
## LR(1) items:
stmt -> LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) . RIGHT_PAREN RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 368
## Reductions:

State 368:
## Known stack suffix:
## LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN . RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 369
## Reductions:

State 369:
## Known stack suffix:
## LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN RIGHT_PAREN . [ error LEFT_PAREN EOI ]
## Transitions:
## Reductions:
-- On error LEFT_PAREN EOI
--   reduce production stmt -> LEFT_PAREN DATA LEFT_PAREN list(tyvar) RIGHT_PAREN LEFT_PAREN nonempty_list(data) RIGHT_PAREN RIGHT_PAREN

State 370:
## Known stack suffix:
## LEFT_PAREN CHECK_SAT
## LR(1) items:
stmt -> LEFT_PAREN CHECK_SAT . RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 371
## Reductions:

State 371:
## Known stack suffix:
## LEFT_PAREN CHECK_SAT RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN CHECK_SAT RIGHT_PAREN . [ error LEFT_PAREN EOI ]
## Transitions:
## Reductions:
-- On error LEFT_PAREN EOI
--   reduce production stmt -> LEFT_PAREN CHECK_SAT RIGHT_PAREN

State 372:
## Known stack suffix:
## LEFT_PAREN ASSERT_NOT
## LR(1) items:
stmt -> LEFT_PAREN ASSERT_NOT . assert_not RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 316
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 325
-- On assert_not shift to state 373
## Reductions:

State 373:
## Known stack suffix:
## LEFT_PAREN ASSERT_NOT assert_not
## LR(1) items:
stmt -> LEFT_PAREN ASSERT_NOT assert_not . RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 374
## Reductions:

State 374:
## Known stack suffix:
## LEFT_PAREN ASSERT_NOT assert_not RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN ASSERT_NOT assert_not RIGHT_PAREN . [ error LEFT_PAREN EOI ]
## Transitions:
## Reductions:
-- On error LEFT_PAREN EOI
--   reduce production stmt -> LEFT_PAREN ASSERT_NOT assert_not RIGHT_PAREN

State 375:
## Known stack suffix:
## LEFT_PAREN ASSERT
## LR(1) items:
stmt -> LEFT_PAREN ASSERT . term RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 376
## Reductions:

State 376:
## Known stack suffix:
## LEFT_PAREN ASSERT term
## LR(1) items:
stmt -> LEFT_PAREN ASSERT term . RIGHT_PAREN [ error LEFT_PAREN EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 377
## Reductions:

State 377:
## Known stack suffix:
## LEFT_PAREN ASSERT term RIGHT_PAREN
## LR(1) items:
stmt -> LEFT_PAREN ASSERT term RIGHT_PAREN . [ error LEFT_PAREN EOI ]
## Transitions:
## Reductions:
-- On error LEFT_PAREN EOI
--   reduce production stmt -> LEFT_PAREN ASSERT term RIGHT_PAREN

State 378:
## Known stack suffix:
## stmt
## LR(1) items:
list(stmt) -> stmt . list(stmt) [ EOI ]
## Transitions:
-- On error shift to state 335
-- On LEFT_PAREN shift to state 336
-- On stmt shift to state 378
-- On list(stmt) shift to state 379
## Reductions:
-- On EOI
--   reduce production list(stmt) ->

State 379:
## Known stack suffix:
## stmt list(stmt)
## LR(1) items:
list(stmt) -> stmt list(stmt) . [ EOI ]
## Transitions:
## Reductions:
-- On EOI
--   reduce production list(stmt) -> stmt list(stmt)

State 380:
## Known stack suffix:
## parse_list
## LR(1) items:
parse_list' -> parse_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept parse_list

State 381:
## Known stack suffix:
## list(stmt)
## LR(1) items:
parse_list -> list(stmt) . EOI [ # ]
## Transitions:
-- On EOI shift to state 382
## Reductions:

State 382:
## Known stack suffix:
## list(stmt) EOI
## LR(1) items:
parse_list -> list(stmt) EOI . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production parse_list -> list(stmt) EOI

State 383:
## Known stack suffix:
##
## LR(1) items:
parse_smbc_res' -> . parse_smbc_res [ # ]
## Transitions:
-- On error shift to state 384
-- On LEFT_PAREN shift to state 385
-- On smbc_res shift to state 423
-- On parse_smbc_res shift to state 425
## Reductions:

State 384:
## Known stack suffix:
## error
## LR(1) items:
smbc_res -> error . [ EOI ]
## Transitions:
## Reductions:
-- On EOI
--   reduce production smbc_res -> error

State 385:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
smbc_res -> LEFT_PAREN . RESULT_RESULT RESULT_UNSAT RIGHT_PAREN [ EOI ]
smbc_res -> LEFT_PAREN . option(RESULT_RESULT) RESULT_TIMEOUT RIGHT_PAREN [ EOI ]
smbc_res -> LEFT_PAREN . RESULT_RESULT RESULT_SAT option(RESULT_ATOM_MODEL) smbc_model RIGHT_PAREN [ EOI ]
smbc_res -> LEFT_PAREN . RESULT_RESULT RESULT_UNKNOWN smbc_unknown_reason RIGHT_PAREN [ EOI ]
## Transitions:
-- On RESULT_RESULT shift to state 386
-- On option(RESULT_RESULT) shift to state 420
## Reductions:
-- On RESULT_TIMEOUT
--   reduce production option(RESULT_RESULT) ->

State 386:
## Known stack suffix:
## LEFT_PAREN RESULT_RESULT
## LR(1) items:
option(RESULT_RESULT) -> RESULT_RESULT . [ RESULT_TIMEOUT ]
smbc_res -> LEFT_PAREN RESULT_RESULT . RESULT_UNSAT RIGHT_PAREN [ EOI ]
smbc_res -> LEFT_PAREN RESULT_RESULT . RESULT_SAT option(RESULT_ATOM_MODEL) smbc_model RIGHT_PAREN [ EOI ]
smbc_res -> LEFT_PAREN RESULT_RESULT . RESULT_UNKNOWN smbc_unknown_reason RIGHT_PAREN [ EOI ]
## Transitions:
-- On RESULT_UNSAT shift to state 387
-- On RESULT_UNKNOWN shift to state 389
-- On RESULT_SAT shift to state 395
## Reductions:
-- On RESULT_TIMEOUT
--   reduce production option(RESULT_RESULT) -> RESULT_RESULT

State 387:
## Known stack suffix:
## LEFT_PAREN RESULT_RESULT RESULT_UNSAT
## LR(1) items:
smbc_res -> LEFT_PAREN RESULT_RESULT RESULT_UNSAT . RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 388
## Reductions:

State 388:
## Known stack suffix:
## LEFT_PAREN RESULT_RESULT RESULT_UNSAT RIGHT_PAREN
## LR(1) items:
smbc_res -> LEFT_PAREN RESULT_RESULT RESULT_UNSAT RIGHT_PAREN . [ EOI ]
## Transitions:
## Reductions:
-- On EOI
--   reduce production smbc_res -> LEFT_PAREN RESULT_RESULT RESULT_UNSAT RIGHT_PAREN

State 389:
## Known stack suffix:
## LEFT_PAREN RESULT_RESULT RESULT_UNKNOWN
## LR(1) items:
smbc_res -> LEFT_PAREN RESULT_RESULT RESULT_UNKNOWN . smbc_unknown_reason RIGHT_PAREN [ EOI ]
## Transitions:
-- On RESULT_ATOM_REASON shift to state 390
-- On smbc_unknown_reason shift to state 393
## Reductions:
-- On RIGHT_PAREN
--   reduce production smbc_unknown_reason ->

State 390:
## Known stack suffix:
## RESULT_ATOM_REASON
## LR(1) items:
smbc_unknown_reason -> RESULT_ATOM_REASON . IDENT [ RIGHT_PAREN ]
smbc_unknown_reason -> RESULT_ATOM_REASON . QUOTED [ RIGHT_PAREN ]
## Transitions:
-- On QUOTED shift to state 391
-- On IDENT shift to state 392
## Reductions:

State 391:
## Known stack suffix:
## RESULT_ATOM_REASON QUOTED
## LR(1) items:
smbc_unknown_reason -> RESULT_ATOM_REASON QUOTED . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production smbc_unknown_reason -> RESULT_ATOM_REASON QUOTED

State 392:
## Known stack suffix:
## RESULT_ATOM_REASON IDENT
## LR(1) items:
smbc_unknown_reason -> RESULT_ATOM_REASON IDENT . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production smbc_unknown_reason -> RESULT_ATOM_REASON IDENT

State 393:
## Known stack suffix:
## LEFT_PAREN RESULT_RESULT RESULT_UNKNOWN smbc_unknown_reason
## LR(1) items:
smbc_res -> LEFT_PAREN RESULT_RESULT RESULT_UNKNOWN smbc_unknown_reason . RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 394
## Reductions:

State 394:
## Known stack suffix:
## LEFT_PAREN RESULT_RESULT RESULT_UNKNOWN smbc_unknown_reason RIGHT_PAREN
## LR(1) items:
smbc_res -> LEFT_PAREN RESULT_RESULT RESULT_UNKNOWN smbc_unknown_reason RIGHT_PAREN . [ EOI ]
## Transitions:
## Reductions:
-- On EOI
--   reduce production smbc_res -> LEFT_PAREN RESULT_RESULT RESULT_UNKNOWN smbc_unknown_reason RIGHT_PAREN

State 395:
## Known stack suffix:
## LEFT_PAREN RESULT_RESULT RESULT_SAT
## LR(1) items:
smbc_res -> LEFT_PAREN RESULT_RESULT RESULT_SAT . option(RESULT_ATOM_MODEL) smbc_model RIGHT_PAREN [ EOI ]
## Transitions:
-- On RESULT_ATOM_MODEL shift to state 396
-- On option(RESULT_ATOM_MODEL) shift to state 397
## Reductions:
-- On error LEFT_PAREN
--   reduce production option(RESULT_ATOM_MODEL) ->

State 396:
## Known stack suffix:
## RESULT_ATOM_MODEL
## LR(1) items:
option(RESULT_ATOM_MODEL) -> RESULT_ATOM_MODEL . [ error LEFT_PAREN ]
## Transitions:
## Reductions:
-- On error LEFT_PAREN
--   reduce production option(RESULT_ATOM_MODEL) -> RESULT_ATOM_MODEL

State 397:
## Known stack suffix:
## LEFT_PAREN RESULT_RESULT RESULT_SAT option(RESULT_ATOM_MODEL)
## LR(1) items:
smbc_res -> LEFT_PAREN RESULT_RESULT RESULT_SAT option(RESULT_ATOM_MODEL) . smbc_model RIGHT_PAREN [ EOI ]
## Transitions:
-- On error shift to state 398
-- On LEFT_PAREN shift to state 399
-- On smbc_model shift to state 418
## Reductions:

State 398:
## Known stack suffix:
## error
## LR(1) items:
smbc_model -> error . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production smbc_model -> error

State 399:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
smbc_model -> LEFT_PAREN . list(smbc_model_entry) RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On error shift to state 400
-- On LEFT_PAREN shift to state 401
-- On smbc_model_entry shift to state 414
-- On list(smbc_model_entry) shift to state 416
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(smbc_model_entry) ->

State 400:
## Known stack suffix:
## error
## LR(1) items:
smbc_model_entry -> error . [ error RIGHT_PAREN LEFT_PAREN ]
## Transitions:
## Reductions:
-- On error RIGHT_PAREN LEFT_PAREN
--   reduce production smbc_model_entry -> error

State 401:
## Known stack suffix:
## LEFT_PAREN
## LR(1) items:
smbc_model_entry -> LEFT_PAREN . RESULT_VAL term term RIGHT_PAREN [ error RIGHT_PAREN LEFT_PAREN ]
smbc_model_entry -> LEFT_PAREN . RESULT_TYPE ty LEFT_PAREN list(var) RIGHT_PAREN RIGHT_PAREN [ error RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RESULT_VAL shift to state 402
-- On RESULT_TYPE shift to state 406
## Reductions:

State 402:
## Known stack suffix:
## LEFT_PAREN RESULT_VAL
## LR(1) items:
smbc_model_entry -> LEFT_PAREN RESULT_VAL . term term RIGHT_PAREN [ error RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On error shift to state 53
-- On TRUE shift to state 54
-- On QUOTED shift to state 55
-- On LEFT_PAREN shift to state 56
-- On IDENT shift to state 58
-- On FALSE shift to state 59
-- On term shift to state 403
## Reductions:

State 403:
## Known stack suffix:
## LEFT_PAREN RESULT_VAL term
## LR(1) items:
smbc_model_entry -> LEFT_PAREN RESULT_VAL term . term RIGHT_PAREN [ error RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 404
## Reductions:

State 404:
## Known stack suffix:
## LEFT_PAREN RESULT_VAL term term
## LR(1) items:
smbc_model_entry -> LEFT_PAREN RESULT_VAL term term . RIGHT_PAREN [ error RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 405
## Reductions:

State 405:
## Known stack suffix:
## LEFT_PAREN RESULT_VAL term term RIGHT_PAREN
## LR(1) items:
smbc_model_entry -> LEFT_PAREN RESULT_VAL term term RIGHT_PAREN . [ error RIGHT_PAREN LEFT_PAREN ]
## Transitions:
## Reductions:
-- On error RIGHT_PAREN LEFT_PAREN
--   reduce production smbc_model_entry -> LEFT_PAREN RESULT_VAL term term RIGHT_PAREN

State 406:
## Known stack suffix:
## LEFT_PAREN RESULT_TYPE
## LR(1) items:
smbc_model_entry -> LEFT_PAREN RESULT_TYPE . ty LEFT_PAREN list(var) RIGHT_PAREN RIGHT_PAREN [ error RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty shift to state 407
## Reductions:

State 407:
## Known stack suffix:
## LEFT_PAREN RESULT_TYPE ty
## LR(1) items:
smbc_model_entry -> LEFT_PAREN RESULT_TYPE ty . LEFT_PAREN list(var) RIGHT_PAREN RIGHT_PAREN [ error RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On LEFT_PAREN shift to state 408
## Reductions:

State 408:
## Known stack suffix:
## LEFT_PAREN RESULT_TYPE ty LEFT_PAREN
## LR(1) items:
smbc_model_entry -> LEFT_PAREN RESULT_TYPE ty LEFT_PAREN . list(var) RIGHT_PAREN RIGHT_PAREN [ error RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On IDENT shift to state 75
-- On var shift to state 409
-- On list(var) shift to state 411
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(var) ->

State 409:
## Known stack suffix:
## var
## LR(1) items:
list(var) -> var . list(var) [ RIGHT_PAREN ]
## Transitions:
-- On IDENT shift to state 75
-- On var shift to state 409
-- On list(var) shift to state 410
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(var) ->

State 410:
## Known stack suffix:
## var list(var)
## LR(1) items:
list(var) -> var list(var) . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(var) -> var list(var)

State 411:
## Known stack suffix:
## LEFT_PAREN RESULT_TYPE ty LEFT_PAREN list(var)
## LR(1) items:
smbc_model_entry -> LEFT_PAREN RESULT_TYPE ty LEFT_PAREN list(var) . RIGHT_PAREN RIGHT_PAREN [ error RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 412
## Reductions:

State 412:
## Known stack suffix:
## LEFT_PAREN RESULT_TYPE ty LEFT_PAREN list(var) RIGHT_PAREN
## LR(1) items:
smbc_model_entry -> LEFT_PAREN RESULT_TYPE ty LEFT_PAREN list(var) RIGHT_PAREN . RIGHT_PAREN [ error RIGHT_PAREN LEFT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 413
## Reductions:

State 413:
## Known stack suffix:
## LEFT_PAREN RESULT_TYPE ty LEFT_PAREN list(var) RIGHT_PAREN RIGHT_PAREN
## LR(1) items:
smbc_model_entry -> LEFT_PAREN RESULT_TYPE ty LEFT_PAREN list(var) RIGHT_PAREN RIGHT_PAREN . [ error RIGHT_PAREN LEFT_PAREN ]
## Transitions:
## Reductions:
-- On error RIGHT_PAREN LEFT_PAREN
--   reduce production smbc_model_entry -> LEFT_PAREN RESULT_TYPE ty LEFT_PAREN list(var) RIGHT_PAREN RIGHT_PAREN

State 414:
## Known stack suffix:
## smbc_model_entry
## LR(1) items:
list(smbc_model_entry) -> smbc_model_entry . list(smbc_model_entry) [ RIGHT_PAREN ]
## Transitions:
-- On error shift to state 400
-- On LEFT_PAREN shift to state 401
-- On smbc_model_entry shift to state 414
-- On list(smbc_model_entry) shift to state 415
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(smbc_model_entry) ->

State 415:
## Known stack suffix:
## smbc_model_entry list(smbc_model_entry)
## LR(1) items:
list(smbc_model_entry) -> smbc_model_entry list(smbc_model_entry) . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production list(smbc_model_entry) -> smbc_model_entry list(smbc_model_entry)

State 416:
## Known stack suffix:
## LEFT_PAREN list(smbc_model_entry)
## LR(1) items:
smbc_model -> LEFT_PAREN list(smbc_model_entry) . RIGHT_PAREN [ RIGHT_PAREN ]
## Transitions:
-- On RIGHT_PAREN shift to state 417
## Reductions:

State 417:
## Known stack suffix:
## LEFT_PAREN list(smbc_model_entry) RIGHT_PAREN
## LR(1) items:
smbc_model -> LEFT_PAREN list(smbc_model_entry) RIGHT_PAREN . [ RIGHT_PAREN ]
## Transitions:
## Reductions:
-- On RIGHT_PAREN
--   reduce production smbc_model -> LEFT_PAREN list(smbc_model_entry) RIGHT_PAREN

State 418:
## Known stack suffix:
## LEFT_PAREN RESULT_RESULT RESULT_SAT option(RESULT_ATOM_MODEL) smbc_model
## LR(1) items:
smbc_res -> LEFT_PAREN RESULT_RESULT RESULT_SAT option(RESULT_ATOM_MODEL) smbc_model . RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 419
## Reductions:

State 419:
## Known stack suffix:
## LEFT_PAREN RESULT_RESULT RESULT_SAT option(RESULT_ATOM_MODEL) smbc_model RIGHT_PAREN
## LR(1) items:
smbc_res -> LEFT_PAREN RESULT_RESULT RESULT_SAT option(RESULT_ATOM_MODEL) smbc_model RIGHT_PAREN . [ EOI ]
## Transitions:
## Reductions:
-- On EOI
--   reduce production smbc_res -> LEFT_PAREN RESULT_RESULT RESULT_SAT option(RESULT_ATOM_MODEL) smbc_model RIGHT_PAREN

State 420:
## Known stack suffix:
## LEFT_PAREN option(RESULT_RESULT)
## LR(1) items:
smbc_res -> LEFT_PAREN option(RESULT_RESULT) . RESULT_TIMEOUT RIGHT_PAREN [ EOI ]
## Transitions:
-- On RESULT_TIMEOUT shift to state 421
## Reductions:

State 421:
## Known stack suffix:
## LEFT_PAREN option(RESULT_RESULT) RESULT_TIMEOUT
## LR(1) items:
smbc_res -> LEFT_PAREN option(RESULT_RESULT) RESULT_TIMEOUT . RIGHT_PAREN [ EOI ]
## Transitions:
-- On RIGHT_PAREN shift to state 422
## Reductions:

State 422:
## Known stack suffix:
## LEFT_PAREN option(RESULT_RESULT) RESULT_TIMEOUT RIGHT_PAREN
## LR(1) items:
smbc_res -> LEFT_PAREN option(RESULT_RESULT) RESULT_TIMEOUT RIGHT_PAREN . [ EOI ]
## Transitions:
## Reductions:
-- On EOI
--   reduce production smbc_res -> LEFT_PAREN option(RESULT_RESULT) RESULT_TIMEOUT RIGHT_PAREN

State 423:
## Known stack suffix:
## smbc_res
## LR(1) items:
parse_smbc_res -> smbc_res . EOI [ # ]
## Transitions:
-- On EOI shift to state 424
## Reductions:

State 424:
## Known stack suffix:
## smbc_res EOI
## LR(1) items:
parse_smbc_res -> smbc_res EOI . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production parse_smbc_res -> smbc_res EOI

State 425:
## Known stack suffix:
## parse_smbc_res
## LR(1) items:
parse_smbc_res' -> parse_smbc_res . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept parse_smbc_res

State 426:
## Known stack suffix:
##
## LR(1) items:
parse_term' -> . parse_term [ # ]
## Transitions:
-- On error shift to state 48
-- On TRUE shift to state 49
-- On QUOTED shift to state 50
-- On LEFT_PAREN shift to state 51
-- On IDENT shift to state 65
-- On FALSE shift to state 66
-- On term shift to state 427
-- On parse_term shift to state 429
## Reductions:

State 427:
## Known stack suffix:
## term
## LR(1) items:
parse_term -> term . EOI [ # ]
## Transitions:
-- On EOI shift to state 428
## Reductions:

State 428:
## Known stack suffix:
## term EOI
## LR(1) items:
parse_term -> term EOI . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production parse_term -> term EOI

State 429:
## Known stack suffix:
## parse_term
## LR(1) items:
parse_term' -> parse_term . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept parse_term

State 430:
## Known stack suffix:
##
## LR(1) items:
parse_ty' -> . parse_ty [ # ]
## Transitions:
-- On LEFT_PAREN shift to state 17
-- On IDENT shift to state 19
-- On BOOL shift to state 20
-- On ty shift to state 431
-- On parse_ty shift to state 433
## Reductions:

State 431:
## Known stack suffix:
## ty
## LR(1) items:
parse_ty -> ty . EOI [ # ]
## Transitions:
-- On EOI shift to state 432
## Reductions:

State 432:
## Known stack suffix:
## ty EOI
## LR(1) items:
parse_ty -> ty EOI . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production parse_ty -> ty EOI

State 433:
## Known stack suffix:
## parse_ty
## LR(1) items:
parse_ty' -> parse_ty . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept parse_ty

