Grammar has 46 nonterminal symbols, among which 5 start symbols.
Grammar has 44 terminal symbols.
Grammar has 115 productions.
nullable(var) = false
nullable(tyvar) = false
nullable(typed_var) = false
nullable(ty_arrow_args) = false
nullable(ty) = false
nullable(term) = false
nullable(stmt) = false
nullable(smbc_unknown_reason) = true
nullable(smbc_res) = false
nullable(smbc_model_entry) = false
nullable(smbc_model) = false
nullable(parse_ty) = false
nullable(parse_term) = false
nullable(parse_smbc_res) = false
nullable(parse_list) = false
nullable(parse) = false
nullable(option(RESULT_RESULT)) = true
nullable(option(RESULT_ATOM_MODEL)) = true
nullable(nonempty_list(var)) = false
nullable(nonempty_list(tyvar)) = false
nullable(nonempty_list(typed_var)) = false
nullable(nonempty_list(ty)) = false
nullable(nonempty_list(term)) = false
nullable(nonempty_list(funs_rec_decl)) = false
nullable(nonempty_list(data)) = false
nullable(nonempty_list(cstor_arg)) = false
nullable(nonempty_list(cstor)) = false
nullable(nonempty_list(case)) = false
nullable(nonempty_list(binding)) = false
nullable(list(var)) = true
nullable(list(tyvar)) = true
nullable(list(typed_var)) = true
nullable(list(ty)) = true
nullable(list(stmt)) = true
nullable(list(smbc_model_entry)) = true
nullable(funs_rec_decl) = false
nullable(fun_rec) = false
nullable(fun_def_mono) = false
nullable(fun_decl_mono) = false
nullable(fun_decl) = false
nullable(data) = false
nullable(cstor_arg) = false
nullable(cstor) = false
nullable(case) = false
nullable(binding) = false
nullable(assert_not) = false
first(var) = IDENT
first(tyvar) = IDENT
first(typed_var) = LEFT_PAREN
first(ty_arrow_args) = LEFT_PAREN IDENT BOOL
first(ty) = LEFT_PAREN IDENT BOOL
first(term) = error TRUE QUOTED LEFT_PAREN IDENT FALSE
first(stmt) = error LEFT_PAREN
first(smbc_unknown_reason) = RESULT_ATOM_REASON
first(smbc_res) = error LEFT_PAREN
first(smbc_model_entry) = error LEFT_PAREN
first(smbc_model) = error LEFT_PAREN
first(parse_ty) = LEFT_PAREN IDENT BOOL
first(parse_term) = error TRUE QUOTED LEFT_PAREN IDENT FALSE
first(parse_smbc_res) = error LEFT_PAREN
first(parse_list) = error LEFT_PAREN EOI
first(parse) = error LEFT_PAREN
first(option(RESULT_RESULT)) = RESULT_RESULT
first(option(RESULT_ATOM_MODEL)) = RESULT_ATOM_MODEL
first(nonempty_list(var)) = IDENT
first(nonempty_list(tyvar)) = IDENT
first(nonempty_list(typed_var)) = LEFT_PAREN
first(nonempty_list(ty)) = LEFT_PAREN IDENT BOOL
first(nonempty_list(term)) = error TRUE QUOTED LEFT_PAREN IDENT FALSE
first(nonempty_list(funs_rec_decl)) = LEFT_PAREN
first(nonempty_list(data)) = LEFT_PAREN
first(nonempty_list(cstor_arg)) = LEFT_PAREN
first(nonempty_list(cstor)) = LEFT_PAREN
first(nonempty_list(case)) = LEFT_PAREN
first(nonempty_list(binding)) = LEFT_PAREN
first(list(var)) = IDENT
first(list(tyvar)) = IDENT
first(list(typed_var)) = LEFT_PAREN
first(list(ty)) = LEFT_PAREN IDENT BOOL
first(list(stmt)) = error LEFT_PAREN
first(list(smbc_model_entry)) = error LEFT_PAREN
first(funs_rec_decl) = LEFT_PAREN
first(fun_rec) = LEFT_PAREN IDENT
first(fun_def_mono) = IDENT
first(fun_decl_mono) = IDENT
first(fun_decl) = LEFT_PAREN IDENT
first(data) = LEFT_PAREN
first(cstor_arg) = LEFT_PAREN
first(cstor) = LEFT_PAREN
first(case) = LEFT_PAREN
first(binding) = LEFT_PAREN
first(assert_not) = error TRUE QUOTED LEFT_PAREN IDENT FALSE
minimal(var) = (* 1 *) IDENT
minimal(tyvar) = (* 1 *) IDENT
minimal(typed_var) = (* 4 *) LEFT_PAREN IDENT BOOL RIGHT_PAREN
minimal(ty_arrow_args) = (* 2 *) BOOL BOOL
minimal(ty) = (* 1 *) BOOL
minimal(term) = (* 1 *) TRUE
minimal(stmt) = (* 3 *) LEFT_PAREN CHECK_SAT RIGHT_PAREN
minimal(smbc_unknown_reason) = (* 0 *)
minimal(smbc_res) = (* 3 *) LEFT_PAREN RESULT_TIMEOUT RIGHT_PAREN
minimal(smbc_model_entry) = (* 5 *) LEFT_PAREN RESULT_VAL TRUE TRUE RIGHT_PAREN
minimal(smbc_model) = (* 2 *) LEFT_PAREN RIGHT_PAREN
minimal(parse_ty) = (* 2 *) BOOL EOI
minimal(parse_term) = (* 2 *) TRUE EOI
minimal(parse_smbc_res) = (* 4 *) LEFT_PAREN RESULT_TIMEOUT RIGHT_PAREN EOI
minimal(parse_list) = (* 1 *) EOI
minimal(parse) = (* 4 *) LEFT_PAREN CHECK_SAT RIGHT_PAREN EOI
minimal(option(RESULT_RESULT)) = (* 0 *)
minimal(option(RESULT_ATOM_MODEL)) = (* 0 *)
minimal(nonempty_list(var)) = (* 1 *) IDENT
minimal(nonempty_list(tyvar)) = (* 1 *) IDENT
minimal(nonempty_list(typed_var)) = (* 4 *) LEFT_PAREN IDENT BOOL RIGHT_PAREN
minimal(nonempty_list(ty)) = (* 1 *) BOOL
minimal(nonempty_list(term)) = (* 1 *) TRUE
minimal(nonempty_list(funs_rec_decl)) = (* 6 *) LEFT_PAREN IDENT LEFT_PAREN RIGHT_PAREN BOOL RIGHT_PAREN
minimal(nonempty_list(data)) = (* 6 *) LEFT_PAREN IDENT LEFT_PAREN IDENT RIGHT_PAREN RIGHT_PAREN
minimal(nonempty_list(cstor_arg)) = (* 4 *) LEFT_PAREN IDENT BOOL RIGHT_PAREN
minimal(nonempty_list(cstor)) = (* 3 *) LEFT_PAREN IDENT RIGHT_PAREN
minimal(nonempty_list(case)) = (* 5 *) LEFT_PAREN CASE IDENT TRUE RIGHT_PAREN
minimal(nonempty_list(binding)) = (* 4 *) LEFT_PAREN IDENT TRUE RIGHT_PAREN
minimal(list(var)) = (* 0 *)
minimal(list(tyvar)) = (* 0 *)
minimal(list(typed_var)) = (* 0 *)
minimal(list(ty)) = (* 0 *)
minimal(list(stmt)) = (* 0 *)
minimal(list(smbc_model_entry)) = (* 0 *)
minimal(funs_rec_decl) = (* 6 *) LEFT_PAREN IDENT LEFT_PAREN RIGHT_PAREN BOOL RIGHT_PAREN
minimal(fun_rec) = (* 5 *) IDENT LEFT_PAREN RIGHT_PAREN BOOL TRUE
minimal(fun_def_mono) = (* 4 *) IDENT LEFT_PAREN RIGHT_PAREN BOOL
minimal(fun_decl_mono) = (* 4 *) IDENT LEFT_PAREN RIGHT_PAREN BOOL
minimal(fun_decl) = (* 4 *) IDENT LEFT_PAREN RIGHT_PAREN BOOL
minimal(data) = (* 6 *) LEFT_PAREN IDENT LEFT_PAREN IDENT RIGHT_PAREN RIGHT_PAREN
minimal(cstor_arg) = (* 4 *) LEFT_PAREN IDENT BOOL RIGHT_PAREN
minimal(cstor) = (* 3 *) LEFT_PAREN IDENT RIGHT_PAREN
minimal(case) = (* 5 *) LEFT_PAREN CASE IDENT TRUE RIGHT_PAREN
minimal(binding) = (* 4 *) LEFT_PAREN IDENT TRUE RIGHT_PAREN
minimal(assert_not) = (* 1 *) TRUE
maximal(var) = 1
maximal(tyvar) = 1
maximal(typed_var) = infinity
maximal(ty_arrow_args) = infinity
maximal(ty) = infinity
maximal(term) = infinity
maximal(stmt) = infinity
maximal(smbc_unknown_reason) = 2
maximal(smbc_res) = infinity
maximal(smbc_model_entry) = infinity
maximal(smbc_model) = infinity
maximal(parse_ty) = infinity
maximal(parse_term) = infinity
maximal(parse_smbc_res) = infinity
maximal(parse_list) = infinity
maximal(parse) = infinity
maximal(option(RESULT_RESULT)) = 1
maximal(option(RESULT_ATOM_MODEL)) = 1
maximal(nonempty_list(var)) = infinity
maximal(nonempty_list(tyvar)) = infinity
maximal(nonempty_list(typed_var)) = infinity
maximal(nonempty_list(ty)) = infinity
maximal(nonempty_list(term)) = infinity
maximal(nonempty_list(funs_rec_decl)) = infinity
maximal(nonempty_list(data)) = infinity
maximal(nonempty_list(cstor_arg)) = infinity
maximal(nonempty_list(cstor)) = infinity
maximal(nonempty_list(case)) = infinity
maximal(nonempty_list(binding)) = infinity
maximal(list(var)) = infinity
maximal(list(tyvar)) = infinity
maximal(list(typed_var)) = infinity
maximal(list(ty)) = infinity
maximal(list(stmt)) = infinity
maximal(list(smbc_model_entry)) = infinity
maximal(funs_rec_decl) = infinity
maximal(fun_rec) = infinity
maximal(fun_def_mono) = infinity
maximal(fun_decl_mono) = infinity
maximal(fun_decl) = infinity
maximal(data) = infinity
maximal(cstor_arg) = infinity
maximal(cstor) = infinity
maximal(case) = infinity
maximal(binding) = infinity
maximal(assert_not) = infinity
follow(var) = error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
follow(tyvar) = RIGHT_PAREN IDENT
follow(typed_var) = RIGHT_PAREN LEFT_PAREN
follow(ty_arrow_args) = RIGHT_PAREN
follow(ty) = error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE EOI BOOL
follow(term) = error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE EOI BOOL
follow(stmt) = error LEFT_PAREN EOI
follow(smbc_unknown_reason) = RIGHT_PAREN
follow(smbc_res) = EOI
follow(smbc_model_entry) = error RIGHT_PAREN LEFT_PAREN
follow(smbc_model) = RIGHT_PAREN
follow(parse_ty) = #
follow(parse_term) = #
follow(parse_smbc_res) = #
follow(parse_list) = #
follow(parse) = #
follow(option(RESULT_RESULT)) = RESULT_TIMEOUT
follow(option(RESULT_ATOM_MODEL)) = error LEFT_PAREN
follow(nonempty_list(var)) = RIGHT_PAREN
follow(nonempty_list(tyvar)) = RIGHT_PAREN
follow(nonempty_list(typed_var)) = RIGHT_PAREN
follow(nonempty_list(ty)) = RIGHT_PAREN
follow(nonempty_list(term)) = RIGHT_PAREN
follow(nonempty_list(funs_rec_decl)) = RIGHT_PAREN
follow(nonempty_list(data)) = RIGHT_PAREN
follow(nonempty_list(cstor_arg)) = RIGHT_PAREN
follow(nonempty_list(cstor)) = RIGHT_PAREN
follow(nonempty_list(case)) = RIGHT_PAREN
follow(nonempty_list(binding)) = RIGHT_PAREN
follow(list(var)) = RIGHT_PAREN
follow(list(tyvar)) = RIGHT_PAREN
follow(list(typed_var)) = RIGHT_PAREN
follow(list(ty)) = RIGHT_PAREN
follow(list(stmt)) = EOI
follow(list(smbc_model_entry)) = RIGHT_PAREN
follow(funs_rec_decl) = RIGHT_PAREN LEFT_PAREN
follow(fun_rec) = RIGHT_PAREN
follow(fun_def_mono) = error TRUE RIGHT_PAREN QUOTED LEFT_PAREN IDENT FALSE
follow(fun_decl_mono) = RIGHT_PAREN
follow(fun_decl) = RIGHT_PAREN
follow(data) = RIGHT_PAREN LEFT_PAREN
follow(cstor_arg) = RIGHT_PAREN LEFT_PAREN
follow(cstor) = RIGHT_PAREN LEFT_PAREN
follow(case) = RIGHT_PAREN LEFT_PAREN
follow(binding) = RIGHT_PAREN LEFT_PAREN
follow(assert_not) = RIGHT_PAREN
Built an LR(0) automaton with 304 states.
The grammar is not SLR(1) -- 1 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 434 states.
136 out of 434 states have a default reduction.
The action table is 19530 entries; 758 non-zero; 757 compressed.
The action table occupies roughly 1608 bytes.
The goto table is 22134 entries; 214 non-zero; 645 compressed.
The goto table occupies roughly 1384 bytes.
The error table occupies roughly 2480 bytes.
The default_reduction table occupies roughly 472 bytes.
The lhs table occupies roughly 152 bytes.
The trace table occupies roughly 8 bytes.
