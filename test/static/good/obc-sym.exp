File "obc-sym.mly", line 20, characters 26-30:
Warning: the token VOID is unused.
Grammar has 17 nonterminal symbols, among which 1 start symbols.
Grammar has 37 terminal symbols.
Grammar has 45 productions.
nullable(typedef) = false
nullable(tname) = false
nullable(tguts) = false
nullable(symbol) = false
nullable(prockind) = false
nullable(otype) = false
nullable(locals) = true
nullable(local) = false
nullable(kind) = false
nullable(int) = false
nullable(ident) = false
nullable(header) = false
nullable(fixup) = false
nullable(file) = false
nullable(defs) = true
nullable(def) = false
nullable(const) = false
first(typedef) = REF DEF
first(tname) = TAG ANON
first(tguts) = RECORD PROC POINTER METH FLEX ENUM ARRAY ABSREC ABSMETH
first(symbol) = TAG
first(prockind) = PROC METH ABSMETH
first(otype) = USE REF DEF BASICTYPE
first(locals) = VPARAM VARINFO TARGET REF PROCINFO PARAM METHOD LOCAL FIELD DEF
first(local) = VPARAM PARAM LOCAL FIELD
first(kind) = VPARAM PARAM LOCAL FIELD
first(int) = NUM
first(ident) = TAG
first(header) = SYMFILE
first(fixup) = VARINFO TARGET REF PROCINFO METHOD DEF
first(file) = SYMFILE
first(defs) = VARINFO VAR TYPE TARGET STRING REF PROCINFO PROCEDURE METHOD DEF CONST
first(def) = VAR TYPE STRING PROCEDURE CONST
first(const) = I F
minimal(typedef) = (* 3 *) DEF NUM POINTER
minimal(tname) = (* 1 *) TAG
minimal(tguts) = (* 1 *) POINTER
minimal(symbol) = (* 1 *) TAG
minimal(prockind) = (* 1 *) PROC
minimal(otype) = (* 1 *) BASICTYPE
minimal(locals) = (* 0 *)
minimal(local) = (* 5 *) LOCAL TAG MARK NUM BASICTYPE
minimal(kind) = (* 1 *) LOCAL
minimal(int) = (* 1 *) NUM
minimal(ident) = (* 1 *) TAG
minimal(header) = (* 3 *) SYMFILE TAG HEX
minimal(fixup) = (* 3 *) TARGET NUM BASICTYPE
minimal(file) = (* 5 *) SYMFILE TAG HEX END HEX
minimal(defs) = (* 0 *)
minimal(def) = (* 4 *) TYPE TAG MARK BASICTYPE
minimal(const) = (* 2 *) I NUM
follow(typedef) = VPARAM VARINFO VAR TYPE TARGET STRING REF PROCINFO PROCEDURE PARAM METHOD LOCAL I FIELD F END DEF CONST
follow(tname) = RECORD PROC POINTER METH FLEX ENUM ARRAY ABSREC ABSMETH
follow(tguts) = VPARAM VARINFO VAR TYPE TARGET STRING REF PROCINFO PROCEDURE PARAM METHOD LOCAL I FIELD F END DEF CONST
follow(symbol) = VARINFO VAR USE TYPE TARGET STRING REF PROCINFO PROCEDURE NUM METHOD END DEF CONST BASICTYPE
follow(prockind) = NUM
follow(otype) = VPARAM VARINFO VAR TYPE TARGET STRING REF PROCINFO PROCEDURE PARAM METHOD LOCAL I FIELD F END DEF CONST
follow(locals) = VPARAM VARINFO TARGET REF PROCINFO PARAM METHOD LOCAL FIELD END DEF
follow(local) = VPARAM VARINFO TARGET REF PROCINFO PARAM METHOD LOCAL FIELD END DEF
follow(kind) = TAG
follow(int) = VPARAM VARINFO VAR USE TYPE TARGET TAG STRING REF RECORD PROCINFO PROCEDURE PROC POINTER PARAM METHOD METH LOCAL I FLEX FIELD F ENUM END DEF CONST BASICTYPE ARRAY ANON ABSREC ABSMETH
follow(ident) = RECORD PROC POINTER NUM METH MARK HEX FLEX ENUM ARRAY ABSREC ABSMETH
follow(header) = VARINFO VAR TYPE TARGET STRING REF PROCINFO PROCEDURE METHOD END DEF CONST
follow(fixup) = VPARAM VARINFO VAR TYPE TARGET STRING REF PROCINFO PROCEDURE PARAM METHOD LOCAL FIELD END DEF CONST
follow(file) = #
follow(defs) = VARINFO VAR TYPE TARGET STRING REF PROCINFO PROCEDURE METHOD END DEF CONST
follow(def) = VARINFO VAR TYPE TARGET STRING REF PROCINFO PROCEDURE METHOD END DEF CONST
follow(const) = VARINFO VAR TYPE TARGET STRING REF PROCINFO PROCEDURE METHOD END DEF CONST
Built an LR(0) automaton with 113 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 113 states.
49 out of 113 states have a default reduction.
55 out of 113 states are represented.
0 out of 57 symbols keep track of their start position.
0 out of 57 symbols keep track of their end position.
31 out of 46 productions exploit shiftreduce optimization.
0 out of 113 states can peek at an error.
295 functions before inlining, 40 functions after inlining.
